@&#MAIN-TITLE@&#
A novel particle swarm optimization algorithm with Levy flight

@&#HIGHLIGHTS@&#
This paper proposes a new approach for solving continuous optimization problems.The proposed approach is a combination of particle swarm optimization (PSO) and Levy flight (LFPSO).The performance and accuracy of the LFPSO are examined on numerical benchmark functions especially multimodal functions.The results obtained by LFPSO show that the LFPSO is more effective than state-of-the-art PSO (SPSO).In addition, to evaluate achievement of the proposed method, the LFPSO algorithm is compared the other PSO variants and other methods. The LFPSO outperforms the PSO variants and other algorithms and it is closely successful with the ABC algorithm.

@&#KEYPHRASES@&#
Particle swarm optimization,Levy flight,Levy distribution,Optimization,

@&#ABSTRACT@&#
Particle swarm optimization (PSO) is one of the well-known population-based techniques used in global optimization and many engineering problems. Despite its simplicity and efficiency, the PSO has problems as being trapped in local minima due to premature convergence and weakness of global search capability. To overcome these disadvantages, the PSO is combined with Levy flight in this study. Levy flight is a random walk determining stepsize using Levy distribution. Being used Levy flight, a more efficient search takes place in the search space thanks to the long jumps to be made by the particles. In the proposed method, a limit value is defined for each particle, and if the particles could not improve self-solutions at the end of current iteration, this limit is increased. If the limit value determined is exceeded by a particle, the particle is redistributed in the search space with Levy flight method. To get rid of local minima and improve global search capability are ensured via this distribution in the basic PSO. The performance and accuracy of the proposed method called as Levy flight particle swarm optimization (LFPSO) are examined on well-known unimodal and multimodal benchmark functions. Experimental results show that the LFPSO is clearly seen to be more successful than one of the state-of-the-art PSO (SPSO) and the other PSO variants in terms of solution quality and robustness. The results are also statistically compared, and a significant difference is observed between the SPSO and the LFPSO methods. Furthermore, the results of proposed method are also compared with the results of well-known and recent population-based optimization methods.

@&#INTRODUCTION@&#
In recent years, many nature-inspired algorithms have been developed to solve complex and difficult non-linear problems. One of the reasons of this is that it take too much time to solve real world problems with traditional optimization methods, and that they cannot be solved effectively. Nature-inspired algorithms which are also known as swarm intelligence algorithms have been developed through inspiration from the behaviors of the living things in the nature. For instance, artificial bee colony optimization algorithm was developed by being motivated from bee colonies [1], ant colony optimization simulates the behavior of real ants between nest and food sources [2]. Being inspired social behaviors of a flock of fishes or birds, PSO was first proposed in 1995 by Eberhart and Kennedy [3].PSO is a robust stochastic optimization and population-based technique based on the movement and intelligence of swarms. Easy-to-perform methods and negligible parameter settings have recently made the algorithm very popular and started to be applied in many fields.By virtue of these advantages, PSO is effectively used for function optimization [4], filter design [5,6], fuzzy PID control [7], predicting power allocation [8], feature selection [9,10], artificial neural networks [11], image segmentation [12], scheduling and sequencing problems [13,14], logic circuit design [15,16], human tremor analysis [17], other scientific, engineering problems, etc.In order to overcome the problem that the basic PSO is lack of producing good results due to its deficiency in velocity control mechanism and to ensure the balance between exploration and exploitation, Shi and Eberhart [18] added the inertia weight to the velocity update procedure in the basic PSO. Inertia weight enabled the PSO algorithm work more effectively by ensuring the balance between global search and local search.In the original PSO algorithm, update procedures may be performed according to the best value found by each particle until the iteration at that moment (pbest) and the best value found by all particles until the iteration at that moment (gbest). The principle behind the PSO is that each particle owns the learning ability from itself (pbest) and its best neighbor (gbest). The PSO performs velocity change through being affected by both local and global conditions. Although this circumstance, since particles resemble each other after a certain number of iterations (loss of diversity), velocity changes drop to very little values and lead to loss of global search ability. This causes trapping of the PSO in local minima, one of its biggest problems. There are many studies in the literature aimed at preventing this problem (such as change of velocity updates or using in hybridization with other algorithms). Liang et al. [19] diversified the swarm and targeted to prevent early convergence by making velocity update using gbest, or particle's best or pbests of different particles and selecting one of them randomly instead of learning from pbest and gbest of the particles in the original PSO. Xinchao [20] changed the velocity update procedure to prevent loss of diversity, and proposed perturbed particle swarm algorithm based on the perturbed gbest updating strategy. In another study, different velocity update techniques were combined, and it was ensured to continue use of the technique by which update is made better [21]. Tsoulos [22] added stopping rule, similarity check and a conditional application of some local search method modifications to enhance velocity and effectiveness of PSO. Unlike the velocity update changes, the PSO that performed local search well was used in hybridization with other nature-inspired algorithms, thus, hybrid algorithms performing both global search and local search were proposed [23–25]. Many other PSO variants such as ILPSO, GPSO, Orthogonal PSO, etc. were proposed to solve the premature convergence problem of PSO.To strengthen global search of PSO and overcome the problem of being trapped in local minima as in the above mentioned methods, PSO was combined with Levy flight in this study. A Levy flight is a class of random walk, which is generalized Brownian motion to include non-Gaussian randomly distributed step sizes for the distance moved [26]. There are many natural and artificial facts that can be depicted by Levy flight, such as fluid dynamics, earthquake analysis, the diffusion of fluorescent molecules, cooling behavior, noise, etc. [27]. Levy flight was also used by Pereyra and Hadj in the field of Ultrasound in Skin Tissue [28], and by Al-teemy [26] in Ladar Scanning. Levy flight also took an important part in many fields in computer sciences besides these fields. Levy flight is used for Internet Traffic Models by Terdik and Gyres [29], Delay and Disruption Tolerant Network by Chen [27], Multi Robot Searching procedure by Sutantyo et al. [30] and Rhee [31] utilized Leyv walk on human mobility fields.Moreover, Levy flight that resembles food searching path of many animals like albatross, bumblebees and deer was added to nature-inspire algorithms to ensure improvement of the algorithms [32,33]. Yang and Deb [34] used Levy flight distribution to create new cuckoo in Cuckoo Search. Also, Yang [35] introduced a new version of Firefly Algorithm-FA, Levy-flight Firefly algorithm (LFA), which combined Levy-flight with the search strategy via the Firefly for improving the randomization of FA. In their Evolution Algorithm, Lee and Yao [36] created 4 different states of β parameter of Levy flight and 4 candidate solutions, and took the one that gave the best result among these candidate values and used it to perform the mutation procedure. Also, Levy flight was used as diversification tools for ant colony optimization [37–39].In this study, the long jumps are performed through Levy distribution, and more effective use of the search space compared to the PSO is ensured. A limit value is determined for each particle, and in case the particles could not improve self-solutions as much as the limit value given, the particles are redistributed with Levy flight such that gbest would be affected, and being trapped in local minima is prevented. As in many studies previously conducted to improve the PSO, in the proposed method, it is ensured with random walks that PSO performs global search more effective. It is intended to be more consistent by ensuring its being affected by gbest while performing these random walks.When compared the proposed method that are examined on various types of benchmark functions with the SPSO, it is observed to be effective particularly for solving multimodal functions and as the dimensions increased, and to converge earlier. The results are also statistically compared with non-parametric Wilcoxon test, and a significant difference is seen between the LFPSO and the SPSO methods.The rest of the paper is divided as follows. In PSO and Levy Flights, original PSO algorithm and Levy flight method are presented. The proposed approach is detailed in The Proposed Algorithm LFPSO. In Experiments and Results, the experimental results and comparison of the methods are presented. In Results and Discussion provides discussion of the present work. As a final, the paper is concluded with the future works.The PSO algorithm has been proposed through inspiration from social behaviors of the individuals in bird and fish swarms [3]. Individuals in the swarms are referred to as particles, and each particle consists of D-dimensional values. For a D-dimensional state, position and velocity expressions of particle i are represented as follows.Xi={Xi1, Xi2, Xi3, …, XiD} and Vi={Vi1, Vi2, Vi3, …, ViD}Intelligent interaction among the swarm is provided with best value of each particle (pbest) and best value of all particles (gbest) until at the current iteration. For a D-dimensional search space, pbest of particle i is represented as pbest={Pi1, Pi2, Pi3,…, PiD}, gbest is represented as gbest={G1, G2, G3, …, GD}. Since PSO will perform update procedures according to these values, pbest values for each particle and the gbest value, which is the best value for the entire swarm, should be kept. PSO consists of two stages as beginning and calculation. In the beginning stage, all particles are distributed randomly in the search space within the determined boundaries. In calculation stage, velocities and positions of the particles are updated. Velocity of a particle is calculated as follows [3]:(1)Vi,dt+1=Vi,dt+c1rand1(pbesti,dt−Xi,dt)+c2rand2(gbestdt−Xi,dt)whereVi,dt+1is velocity of particle i at iteration t+1 with respect to the dth dimension,Xi,dtis position value of the ith particle with respect to the dth dimension, c1 is cognitive weighting factor, c2 is social weighting factors are acceleration coefficients, r1 and r2 values are stochastic components of the algorithm, which are in the interval [0, 1]. c1 and c2 values which are generally determined identical and as 2 are set as desired, and it may be ensured that particles affected more either locally or globally. While the fact that acceleration coefficients take big values causes the particles to move away from each other and separate, their taking small values causes limitation of the movements of the particles, and not being able to scan the solution space adequately [40].Vmaxand Vminparameters may be set for the velocity values determined for each particle to prevent occurrence of big changes on the particles or constant limit excesses. In this study, Vmaxand Vminwas set as 20% of the upper and lower limits.Inertia weight was added to PSO by Shi and Eberhart in 1998 [18] to provide the balance between exploitation and exploration:(2)Vi,dt+1=wtVi,dt+c1rand1(pbesti,dt−Xi,dt)+c2rand2(gbestdt−Xi,dt)Inertia weight controls effect of previous velocity increases of the particles on the velocity value, and takes part in providing the balance between global search and local search. When the inertia weight takes large values, global search is more suitable and a small inertia weight facilitates local search [19]. Shi and Eberhart [18] proposed a linearly decreasing inertia weight over the course of search. Usually, max and min values are determined for inertia, too. In this study, inertia update is made as follows:(3)w=(Max_iter−iter)Max_iterwhere Max_it refers to maximum number of iteration and iter is the current iteration. New position values are obtained by adding the velocity updates determined by the formula given in Eq. (4) to the particles:(4)Xi,dt+1=Xi,dt+Vi,dt+1After making the velocity updates, new fitness values of the particles are calculated, and if necessary, pbest and gbest updates are performed, and the same procedure is continued until the stop criteria are provided.Levy flights (or Levy motion) [41] is a class of non-Gaussian random processes whose random walks are drawn from Levy stable distribution. This distribution is a simple power-law formula L(s)∼|s|−1−βwhere 0<β<2 is an index. Mathematically speaking, a simple version of Levy distribution can be defined as [34,42]:(5)L(s,γ,μ)=γ2πexp−γ2(s−μ)1(s−μ)3/2if0<μ<s<∞0ifs≤0,where μ parameter is location or shift parameter, γ>0 parameter is scale (controls the scale of distribution) parameter.In general, Levy distribution should be defined in terms of Fourier transform(6)F(k)=exp[−αkβ],0<β≤2,where α is a parameter within [−1, 1] interval and known as skewness or scale factor. An index of o stability βє(0, 2] is also referred to as Levy index. The analytic form of the integral is not known for general β except for a few special cases.In particular (or special case, for the case of), for β=1, the integral can be carried out analytically and is known as the Cauchy probability distribution.(7)F(k)=exp[−αk],Another special case when β=2, the distribution correspond to Gaussian distribution.(8)F(k)=exp[−αk2],β and α parameters take a major part in determination of the distribution whereas γ and μ parameters take a minor part. The parameter β controls the shape of the probability distribution in such a way that one can obtain different shapes of probability distribution, especially in the tail region depending on the parameter β. Thus, the smaller β parameter causes the distribution to make longer jumps since there will be longer tail [36]. The sign of the skewness parameter α indicates the skew direction, positive to the right, and negative to the left. When α=0, the distribution is symmetric. The last two parameters are the width γ and the shift μ of the distribution peaks [26]. The different values of the β parameter change the distribution. It makes longer jumps for smaller values whereas it makes shorter jumps for bigger values.Though there are many different PSO variants in the literature, PSO's problems of premature convergence and generating inefficient results are still persisting. Levy flights method is used for solving these problems and enable PSO generate more efficient results. By this method, it is ensured that PSO, which is unable to perform global search well, perform global search more effectively and not be trapped in local minima. In LFPSO method, two changes are made in comparison to the PSO method.•A limit value is set for every particle, and this limit value is incremented by 1 in case the particles could not improve self-solutions for each new iteration.The particles exceeding the limit value are redistributed in the search space using Levy flight (using Levy distribution) method.Fig. 1, Xmaxand Xminrepresent maximum and minimum values of search range, respectively. Vminand Vmaxrepresent maximum and minimum limit of the velocity increase to be made, respectively. NP is number of particles, D is the dimension of benchmark function, c1 and c2 are acceleration coefficients, trial sets the limit value for each particle and Max_iter refers to maximum number of iterations.As in the PSO, the particles are first randomly distributed to the search space, and the fitness values of particles are calculated and pbest for the particles and gbest for the swarm are determined by using the fitness values. Unlike PSO, before making velocity update, limit excess checking is performed for each particle. If the current particle has not exceeded the limit value, velocity updates are performed normally and its position is updated. If the particle has exceeded the limit value, the particle is distributed in the search space by Levy flight method, and following the distribution procedure, positions value exceeding the boundaries in the search space determined are brought to the bound values.After these procedures are completed, the fitness value is calculated for the new particle determined, if the new fitness value calculated is better for pbest of the particle, they are assigned as pbest and its limit value is reset, if there is no improvement, limit value is incremented by 1 for the particle. Likewise, if the new fitness value is smaller (for minimize problems) than the gbest value, it is assigned as the particle's gbest value. Same procedures are performed until the number of iteration is equal to Max_iter.Let us review in some more detail how distribution is performed using Levy flight. By Levy flight, new state of the particle is calculated as [34]:(9)Xt+1=Xt+α⊕Levy(β)α is the step size which should be related to the scales of the problem of interest. In the proposed method α is random number for all dimensions of particles.(10)Xt+1=Xt+random(size(D))⊕Levy(β)The product ⊕ means entry-wise multiplications.A non-trivial scheme of generating step size s samples are discussed in detail in [34,42], it can be summarized as(11)s=random(size(D))⊕Levy(β)∼0.01uv1/β(xjt−gbestt)where u and v are drawn from normal distributions. That is(12)u∼N(0,σu2)v∼N(0,σv2)with(13)σu=Γ(1+β)sinπβ2Γ1+β2β2(β−1)/21/β,σv=1Here Γ is standard Gamma function.s value with D-dimension obtained by Eq. (11) is added to update of position Xiparticle finds the position values of new particle. The fitness value is evaluated for this new particle, if particle obtains better result than its pbest value, updates pbest and trial value of this particle is set 0, otherwise, trial is incremented by 1. Then algorithm continues until the stopping criterion is met. Fig. 2shows flowchart of LFPSO algorithm.One of the important points to be considered while performing distribution by Levy flights is the value taken by the β parameter. As stated before, Yang and Deb [34] mentioned that the β parameter gave different results at different values in the trials conducted in the study named multiobjective cuckoo search for design optimization. Accordingly, it can be concluded that a different β parameter for each benchmark function gave a more effective result. Moreover, in the Evolutionary Algorithms with Adaptive Levy Mutations study of Lee [36], different constant values were set of the β parameter, procedures were conducted by calculating the distribution for each of these values and selecting the best of the offspring produced. As seen in these two examples, β parameter substantially affects distribution. In this study, no constant value is taken for the β parameter, but a random value in the (0, 2] interval is taken for Levy flight distribution procedure. PSO performs velocity change through being affected by both local and global conditions. Although this circumstance, since particles resemble each other after a certain number of iterations (loss of diversity), velocity changes drop to very little values and lead to loss of global search ability. The LFPSO intend to prevent loss of diversity and improve the global search ability. It performs long jumps for small values of the β parameter, and this eliminates the global search deficiency in PSO prevents which we always mention about, and prevents being trapped in local minima.In contrast with the Levy flight, in Cuckoo optimization stepsize is calculated by subtracting two random cuckoo in Levy flight distribution, whereas, in this study gbest is subtracted from current particle. Thus, it is ensured that the best particle value (gbest) is maintained without change. If the β value randomly so taken takes small values, it allows the particle perform very long jumps in the search space and prevents constantly being trapped in local minima, if big values are attained, it continues to derive new values around gbest. The randomization can be more efficient as the steps obey a Levy distribution which can be approximated by a power law; therefore, the steps consist of many small steps and occasionally large-step, long-distance jumps [34]. In this study, since the β parameter will be determined randomly for each particle, it was ensured that big jumps occur more. In explaining the Cuckoo optimization in their Multiobjective Cuckoo Search for Design Optimization study, Yang and Deb have stated: “When compared with PSO, these long jumps substantially increase search efficiency of the cuckoo search in several cases, particularly for multimodal and non-linear problems comprising many local minima but one global minimum”, indicated this as the weakness of PSO, and stated that this was an advantage for Cuckoo Optimization. In this study, global search was strengthened using random walk with Levy flight to eliminate the weakness of PSO, its being trapped in local minimums was prevented, and it was observed to give more successful results particularly for multimodal functions.

@&#CONCLUSIONS@&#
