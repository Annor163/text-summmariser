@&#MAIN-TITLE@&#
A PSO-AB classifier for solving sequence classification problems

@&#HIGHLIGHTS@&#
A two-stage SPM-based sequence classification method is proposed.Compact sequential patterns can efficiently represent important features.A particle swarm optimization-AdaBoost sequence classifier is developed.The proposed method can dramatically improve sequence classification accuracy.

@&#KEYPHRASES@&#
Sequence classification,Closed mining algorithm,Particle swarm optimization (PSO) algorithm,Adaptive boosting (AdaBoost),

@&#ABSTRACT@&#
Recently, considerable attention has focused on compound sequence classification methods which integrate multiple data mining techniques. Among these methods, sequential pattern mining (SPM) based sequence classifiers are considered to be efficient for solving complex sequence classification problems. Although previous studies have demonstrated the strength of SPM-based sequence classification methods, the challenges of pattern redundancy, inappropriate sequence similarity measures, and hard-to-classify sequences remain unsolved. This paper proposes an efficient two-stage SPM-based sequence classification method to address these three problems. In the first stage, during the sequential pattern mining process, redundant sequential patterns are identified if the pattern is a sub-sequence of other sequential patterns. A list of compact sequential patterns is generated excluding redundant patterns and used as representative features for the second stage. In the second stage, a sequence similarity measurement is used to evaluate partial similarity between sequences and patterns. Finally, a particle swarm optimization-AdaBoost (PSO-AB) sequence classifier is developed to improve sequence classification accuracy. In the PSO-AB sequence classifier, the PSO algorithm is used to optimize the weights in the individual sequence classifier, while the AdaBoost strategy is used to adaptively change the distribution of patterns that are hard to classify. The experiments show that the proposed two-stage SPM-based sequence classification method is efficient and superior to other approaches.

@&#INTRODUCTION@&#
The rapid development of computer and Internet technologies has allowed for the collection of huge amounts of sequence data in many fields. In bioinformatics, DNA, RNA and proteins are composed of sequences of molecule segments. In information retrieval, documents are composed of sequences of words. In economics, economic activity is made up of sequences of transactions. Network intrusion detection features sequences of TCP/IPA packets. A sequence may represent a specific function, target, or class label. For example, a time series of ECG data may come from a healthy or ill person. A DNA sequence may belong to a gene coding area or a non-coding area. A sequence classification problem, therefore, seeks to assign the most probable class label to a given sequence by a generative sequence classifier. Many real-world applications such as protein classification [1–5], text classification [6–8], speech recognition [9–11] and image identification [12,13] belong to this domain.Compound sequence classification methods seek to maximize classification accuracy by integrating multiple data mining techniques. Among these methods, sequential pattern mining (SPM) based sequence classifiers are considered to be efficient for solving complex sequence classification problems [14–17]. Typically, an SPM-based sequence classifier consists of two stages. The first stage applies the sequential pattern mining approach to extract frequent sequential patterns from a large database. The extracted sequential patterns, considered as representative features, are then used to build the classification model in the second stage.Although previous studies have shown the strength of the SPM-based sequence classification methods, these methods suffer from three problems. First, previous studies have simply taken all sequential patterns extracted from the first stage as the input features of the sequence classifier in the second stage. Although this approach is straightforward and easy to implement, a large number of extracted sequential patterns may result in impractically long training time. Moreover, redundant and non-discriminative patterns involved in the feature set might significantly degrade the classification performance. For example, in previous studies, if sequential patterns A–B–C, A–B–D, B–C–D, and A–B–C–D are derived in the first stage, they will all be considered as input features in the second stage. However, it is clear that A–B–C, A–B–D, and B–C–D are the subsequences of A–B–C–D. If all four sequences are considered as features, feature redundancy might over-fit the sequence classifier and thus degrade classification accuracy [18]. Therefore, screening redundant sequential patterns and reducing the number of representative features is an important consideration in SPM-based sequence classification methods.Second, sequence similarity measurement plays a critical role in judging the difference distance between a sequence and a sequential pattern. Most previous studies incorporated gap constraints on consecutive sequence elements to determine sequence distinction. If a pattern is contained in a sequence, the similarity between the pattern and the sequence is 1; otherwise, it is 0. For example, if the gap is set as 1, the similarity between sequence A–B–C and pattern A–B is 1, while the similarity between sequence A–C–B and pattern A–B is 0. If the gap is set as 2, the similarity between sequence A–C–D–B and pattern A–B is 0, while the similarity between A–B–C–D (or A–C–B–D) and A–B is 1. However, the similarity measure cannot reveal partial matching between a sequence and a pattern, since “match” and “non-match” are the only options. In addition, using this approach it is difficult to determine an appropriate gap value.Third, sequential patterns extracted in the first stage are considered as the representative features of the classification model in the second stage. However, not all sequential patterns are equally important. Previous works [1,19] solved this problem by assigning weights to sequential patterns where the weights are adaptively adjusted by optimization techniques. Although this approach succeeded in raising sequence classification accuracy, the models tend to be over-fitting [19] and were insufficiently sensitive to minority patterns, thus often resulting in incorrect class label predictions. Therefore, an iterative procedure to adaptively change the distribution of training data by focusing more on previously misclassified minority patterns should help improve sequence classification accuracy.To solve the above difficulties, an efficient sequential pattern mining-based sequence classification method is proposed. In the first stage, during the sequential pattern mining process, redundant sequential patterns are identified if the pattern is a sub-sequence of other sequential patterns. A list of compact sequential patterns (excluding redundant patterns) is generated and used as representative features in the second stage. The second stage uses a sequence similarity measurement which can evaluate partial matching between sequences and patterns. Finally, a PSO-AdaBoost sequence classifier is developed to improve sequence classification accuracy. In the PSO-AdaBoost sequence classifier, particle swarm optimization (PSO) algorithm is used to optimize the weights in the individual sequence classifier, while the AdaBoost strategy is used to ensemble patterns that are hard to classify using the individual classifiers.

@&#CONCLUSIONS@&#
An efficient two-stage sequential pattern mining-based sequence classification method is proposed to address problems of pattern redundancy, inappropriate sequence similarity measurement, and hard-to-classify sequences. In the first stage, during the sequential pattern mining process, redundant sequential patterns are identified if the pattern is a sub-sequence of other sequential patterns. A list of compact sequential patterns (excluding redundant patterns) is generated and used as representative features in the second stage. This process significantly reduces the training time needed to build classification methods. In the second stage, a sequence similarity measurement which can evaluate partial similarity between sequences and patterns is proposed. That is, the similarity between a sequence and a sequential pattern can be a real value between 1 and 0. This avoids the problem of objectively determining the gap value in the sequence similarity measure. Finally, a PSO-AB sequence classifier is developed to solve the problem of hard-to-classify sequences. The PSO-AB sequence classifier uses the particle swarm optimization (PSO) algorithm to optimize the weights in the individual sequence classifier, while the AdaBoost strategy is used to adaptively change the distribution of ensemble patterns that are hard to classify. A set of experiments indicates the proposed method significantly improves classification accuracy.The findings presented here can be extended in several ways. First, variant feature selection methods (e.g. filter algorithm, wrapper algorithm, and hybrid algorithm) can be further integrated to reduce the number of features, and to remove irrelevant, redundant, and noisy data. Second, different partial similarity measurements might be worth exploring. For example, the editing distance and dynamic time warping (DTW) distance are two popular dynamic programming algorithms which also adopt the partial matching concept. Third, different optimization methods such as artificial neural networks and genetic algorithms can be used to obtain the optimized weights in the classifier. Finally, the developed particle swarm optimization-AdaBoost (PSO-AB) Sequence Classification Method can be extended to handle time-series sequence datasets with numerical values.