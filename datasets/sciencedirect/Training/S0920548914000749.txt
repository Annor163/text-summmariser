@&#MAIN-TITLE@&#
XSDyM: An XML graphical conceptual model for static and dynamic constraints

@&#HIGHLIGHTS@&#
An approach for modelling static and dynamic constraints for XML is proposed.Modelling the dynamic constraints requires a way to convey the state transitions.The approach is inspired from a state diagram and the ORM modelling useful features.Notation grammar to facilitate constraint expression is shown.We evaluate the correctness of model transformations between the modelling and the equivalent XML schema languages.

@&#KEYPHRASES@&#
Graphical,Modelling,XML,Dynamic constraints,Business rules,

@&#ABSTRACT@&#
Data modelling is not only important to visualise the structural schema of data, but also to show the intended integrity constraints. In this paper, we propose a modelling approach called XML Static Dynamic Modelling (XSDyM). While a text-based schema definition is often the most common method used to describe XML, graphical modelling is more accepted as it is capable of visualising the schema definition more effectively for the reader. Conveying the dynamic constraints on XML graphical model requires a special treatment as the constraints basically comprehend the state transitions. It is important for an XML modelling to keep the basis as precise as possible to satisfy the nature of XML and at the same time be able to represent the constraints in an effective way. Using the XML tree-based modelling as the basis of the work, we proposed our own approach to convey the state transitions of the constraints, where it is inspired from the well-known state diagram and adopt some useful features of ORM modelling. We evaluate the correctness of our proposed modelling using a model which involves the checking of model transformations between the modelling and the equivalent XML schema languages.

@&#INTRODUCTION@&#
XML allows us to model information systems in a natural and intuitive way and to express information to match the way we do our business. In the field of XML databases, modelling the structure of the data and their integrity constraints is an issue that should be considered in XML research. This is because XML has a unique structural nature that differs from any other type of database format which usually can be modelled using popular modelling tools like the Unified Modelling Language (UML), Entity–Relationship Diagram (ERD), and Systems Modelling Language (SysML). Another modelling tool that has become popular recently is Object Role Modelling (ORM). Every modelling approach has been proven to have its own strengths to handle different rules and constraints.Data modelling is important not only to visualise the structural aspect of the data, but also to show the intended integrity constraints or semantics of the data. A large body of work has been conducted e.g. [4,33,18] which particularly discusses not only the structure but also the integrity constraints that XML data should have with regard to business rules. XML data is often viewed as edge labelled graphs or trees as the natural essence of the semi-structural model. But, as far as we are concerned, none of the work on expressing XML constraints proposes a proper modelling approach to convey the constraints.A lot of effort has been expanded on expressing and maintaining integrity constraints in XML. According to Ref.[23], constraints can be classified as static and dynamic. Almost all the existing works on XML concern static constraints and discuss the condition of constraints at any time space. A dynamic constraint is another type of constraint to express the condition that involves facts/requirements between two and more states during their transition within a given state space [30]. In a managerial context, a dynamic constraint can be seen as representations of ‘real world’ constraints and business rules [7]. We suggest that, the dynamic constraints come from soft rules while static constraints come from hard rules (both from business rules). In terms of business rule modalities [9], dynamic constraints are mostly treated as deontic11Deontic rules impose obligations, which may be violated, even though they should not. For example: it is obligatory that each employee is married to at most one person or no smoking is permitted in any office.rather that alethic22Alethic rules impose necessities, which cannot, even in principle, be violated by the business, typically because of some physical or logical law. For example: each employee was born on at most one date.constraints.Modelling dynamic constraints, particularly in XML, is a challenge that we need to face. Different to static constraints, we need to focus on visualising the state transition properties instead of only static requirements at any particular state of time as is required in static constraints. At the same time, the modelling should be able to convey both types of constraints as dynamic constraints might be degenerated from static constraints. Research in ORM is one of the most active areas of research in modelling different data structures and different types of constraints, including dynamic constraints. Unfortunately, the effectiveness of ORM can be overshadowed by the unnecessary complexity of the model if it is to be implemented in XML. ORM is constructed from the connections of entities and roles. Therefore, in order to convey XML, we have to have roles for each connection between nodes. Ref. [5] showed that although ORM can specify a wide variety of data constraints, including mandatory roles, uniqueness, subsets, exclusion, frequency and ring constraints, it fails to describe integrity constraints, which play an important role in maintaining XML data. It is also hard to capture some specific XML characteristics, such as order and hierarchical structure. Therefore, based on this intuition, we believe that ORM is not the best tool to visualise XML and its constraints.Work has been conducted on mapping the ORM design into a compatible XML Schema [3] in order to conform to the XML specifications and nature. It is possible to obtain a useful matching XML based on the ORM, but it requires extra effort (based on the proposed work) including ‘anchoring’ and ‘fact type grouping’ between the elements and at the very least, requires the creation of a dummy element to become the ‘root’ of XML tree. They also addressed a few limitations or incompatibilities of the ORM and XML Schema. Therefore, based on this discussion, we make an assumption that, to ensure compatibility between the two of them, steps must be followed since both are different in terms of structural strength and properties.It is well known that XML is typically visualised using a tree-based or a graph-based modelling approach with the nodes conveying elements and attributes while some vertices show connections between the nodes as in Fig. 1. Without doubt, this is the most common method used to visualise XML. We would like to maintain this simplicity and at the same time be able to express more complex properties into the model such as conveying the internal transition of the node states.There is quite a large body of work on XML conceptual modelling. According to Ref. [5], the work can be categorized into three; i.e. (i) based on ORM/NIAM [3], (ii) based on ER, e.g. ERX [24], XER [28], EReX [19] and XSEM [21], (iii) based on a tree structure or graph, e.g. ORA-SS [16] and GOOSSDM [26] and (iv) based on a Semantic net [25]. Even though there is a selection of modelling for XML and a few are based on tree/graph modelling, unfortunately none of the approaches provides a way to convey a good range of integrity constraints, particularly for dynamic constraints, although a few have the ability to model static constraints, like inclusion dependencies and functional dependencies.Research on collaborating the ‘state diagrams’ [29] and modality is not new. It is actually well-known that the family of modal logics is defined via graphs called Kripke structure.33A variation of non-deterministic automaton proposed by Saul Kripke[17] used in model checking to represent the behaviour of a system.This is basically a graph whose nodes represent the reachable states of the system and whose edges represent state transitions. A labelling function maps each node to a set of properties that hold in the corresponding state. Temporal logics are also traditionally interpreted using Kripke structures [13].In this paper, we propose a modelling approach which will take the XML tree-based modelling as the basis approach. Using this basis, we retain a few useful features of ORM into our work as it has rich modelling notations specifically for modelling the dynamic constraints. We proposed the transition features on the modelling inspired from the state diagram to visualise the dynamic constraints of the data. We called it XML Static Dynamic Modelling (XSDyM). Therefore, the main contribution of this paper is the proposal of a special modelling approach which is useful for static and dynamic constraints in XML data.The outline of this paper is as follows: Section 2 gives the background of ORM and state diagram. In Section 3, we defined our approach together with the related definitions and details. In Section 4, we present the transformation rules between the modelling and XML grammar languages. In Section 5, we show the correctness checking of our proposed approach based on the work in Ref.[20]. In Section 6, we provide a discussion of the strengths and weaknesses of both ORM and our modelling approaches. We conclude our paper in Section 7.

@&#CONCLUSIONS@&#
