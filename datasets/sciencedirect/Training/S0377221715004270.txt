@&#MAIN-TITLE@&#
Minimum edge blocker dominating set problem

@&#HIGHLIGHTS@&#
We introduce and study the minimum edge blocker dominating set problem.We prove the NP-hardness of the problem.We formulate the problem as a linear 0–1 program and investigate its properties.We present the first known exact algorithm for the considered problem.

@&#KEYPHRASES@&#
Network interdiction,Minimum weighted dominating set,NP-hardness,Branch-and-cut algorithm,Critical elements detection,

@&#ABSTRACT@&#
This paper introduces and studies the minimum edge blocker dominating set problem (EBDP), which is formulated as follows. Given a vertex-weighted undirected graph and r > 0, remove a minimum number of edges so that the weight of any dominating set in the remaining graph is at least r. Dominating sets are used in a wide variety of graph-based applications such as the analysis of wireless and social networks. We show that the decision version of EBDP is NP-hard for any fixed r > 0. We present an analytical lower bound for the value of an optimal solution to EBDP and formulate this problem as a linear 0–1 program with a large number of constraints. We also study the convex hull of feasible solutions to EBDP and identify facet-inducing inequalities for this polytope. Furthermore, we develop the first exact algorithm for solving EBDP, which solves the proposed formulation by a branch-and-cut approach where nontrivial constraints are applied in a lazy fashion. Finally, we also provide the computational results obtained by using our approach on a test-bed of randomly generated instances and real-life power-law graphs.

@&#INTRODUCTION@&#
In a real-world system modeled as a graph, one often needs to identify a set of vertices or edges whose existence is critical for preserving a particular property of the system. Detecting a set of critical vertices or edges with respect to a particular property of a graph can also lead to a cost-efficient interdiction of that property of the underlying system. Detection of critical vertices or edges may be done within the following two different problem settings. In the first problem setting, we are interested in identifying a subset of vertices or edges of smallest cardinality whose removal bounds the considered graph property by some user-defined parameter. The second problem setting is to find a subset of vertices or edges of a given size whose deletion results in the largest change to the considered graph property.In the related literature, the first problem is referred to as minimum vertex/edge blocker problem (Bazgan, Toubaline, & Tuza, 2011; Ries, Bentz, Picouleau, de Werra, Costa, & Zenklusen, 2010; Zenklusen, Ries, Picouleau, de Werra, Costa, & Bentz, 2009) and the second one is called most vital vertices/edges problem (Bar-Noy, Khuller, & Schieber, 1995; Bazgan et al., 2011; Bazgan, Toubaline, & Vanderpooten, 2010a). In this paper, we introduce the problem of detecting a smallest subset of edges in a weighted undirected graph whose removal bounds the minimum weight of a dominating set in the remaining graph. Adopting the terminology used in the literature for similar problems (Bazgan et al., 2011; Ries et al., 2010; Zenklusen et al., 2009), this problem will be referred to as the minimum edge blocker dominating set problem (EBDP). To avoid excessively long acronyms, we use EBDP rather than MEBDP, since the only non-trivial setup of the considered problem is minimization.Given a simple nonempty undirected graphG=(V,E)with weights on its vertices, letV={1,2,…,n},|E|=m,and vectorw=[wi∈Q](i=1,…,n) represent the weights of all vertices i ∈ V. Here, the set of edges in graph G is defined asE={(i,j):i,j∈V,i<j,andthereexistsanedgebetweeniandj}. Note that graph G is undirected, hence notation (i, j) does not represent any order for vertices or direction for edges and condition i < j is simply used to avoid including the same edge twice in set E.For a vertex i ∈ V, let NG(i) denote the set of vertices adjacent to i in G (neighborhood of i in G). Given a set D ⊆ V, letW(D)=∑i∈DwiandEG(D)=E∩[(D×(V∖D))∪((V∖D)×D)]. Note thatW(∅)=0. A dominating set in G is a set D ⊆ V such that for any vertex i ∈ V∖D, NG(i) ∩ D ≠ ∅. A minimum weighted dominating set in G with respect to the weight vectorwis a dominating set D ⊆ V such that W(D) is minimum. The weight of a minimum weighted dominating set in G with respect towis denoted byγw(G). If the weight of each vertex in V is one (unweighted graphs), the superscriptwinγw(G)is omitted for simplicity. In this case, γ(G) is also referred to as the domination number of G. The minimum weighted dominating set problem is to find a dominating set of minimum weight in G. For the special case of unweighted graphs, this problem is referred to as the minimum dominating set problem, which is a well-known NP-complete problem (Garey & Johnson, 1979). Finally, given a set S ⊆ E, let G⟨S⟩ denote the subgraph with vertex set V and edge set S (equivalently,G〈S〉=(V,S)).The minimum edge blocker dominating set problem (EBDP) is defined as follows: Given r > 0, find S ⊆ E such thatγw(G〈E∖S〉)≥rand |S| is minimum. Note that vertices with negative weights are always included in any minimum weighted dominating set. Similarly, vertices with zero weights are either in a minimum weighted dominating set or can be added to one such set resulting in an alternate minimum weighted dominating set. In addition, if there is an edge (i, j) ∈ E such thatmin{wi,wj}+W(V∖{i,j})<r,then any set S ⊆ E withγw(G〈E∖S〉)≥rshould contain edge (i, j). Finally, if W(V) < r, then EBDP is infeasible. To avoid these trivialities, the assumption in the remainder of this paper is that wi> 0 for all i ∈ V,min{wi,wj}+W(V∖{i,j})≥rfor all (i, j) ∈ E, and W(V) ≥ r. Note that for r ≤ 0,S=∅is optimal and this problem is again trivial.The importance of EBDP can be viewed from both attack- and defense-related perspectives. In the case of network interdiction in these settings, the attacker’s objective is to ensure that a minimum-cardinality set of edges is deleted (disabled) in order to increase the weight of the minimum weighted dominating set in the remaining network. The weight of the minimum weighted dominating set is an important characteristic of real-world networks in various contexts, such as analysis of wireless (Cheng, Huang, Li, Wu, & Du, 2003; Ding et al. 2011; Li et al. 2005; Wu, Gao, Pardalos, & Du, 2010) and social (Zhu, Yu, Lee, Kim, Shan, & Du, 2010; Zou, Zhang, & Wu, 2009) networks. The weight assigned to each vertex in a sensor or social network may be interpreted as the cost of including that vertex in the dominating set. Therefore, a network with a low-weight dominating set has more cost-efficient communication routines (e.g., low cost communication with all vertices in the network).On the other hand, a defender wants to identify the set of edges whose deletion would substantially increase the weight of the minimum weighted dominating set in the remaining graph, so that these edges could be better protected. Identifying these critical edges is an important step in preserving the low-cost communication with all vertices in the network.The minimum vertex/edge blocker and the most vital vertices/edges problems have been studied in literature with respect to different graph properties, such as connectivity (Addis, Di Summa, & Grosso, 2013; Arulselvan, Commander, Elefteriadou, & Pardalos, 2009; Di Summa, Grosso, & Locatelli, 2011; 2012; Shen & Smith, 2012; Shen, Smith, & Goli, 2012; Veremyev, Prokopyev, & Pasiliao, 2014), shortest path (Bar-Noy et al., 1995; Israeli & Wood, 2002; Khachiyan et al. 2008), maximum flow (Altner, Ergun, & Uhan, 2010; Ghare, Montgomery, & Turner, 1971; Wollmer, 1964; Wood, 1993), spanning tree (Bazgan, Toubaline, & Vanderpooten, 2012; 2013; Frederickson & Solis-Oba, 1996), assignment (Bazgan, Toubaline, & Vanderpooten, 2010b), 1-median (Bazgan et al., 2010a), 1-center (Bazgan et al., 2010a), matching (Ries et al., 2010; Zenklusen, 2010; Zenklusen et al., 2009), independent sets (Bazgan et al., 2011), vertex covers (Bazgan et al., 2011), and cliques (Mahdavi Pajouh, Boginski, & Pasiliao, 2014).The computational complexity of the most vital edges shortest path problem has been studied in Bar-Noy et al. (1995) and it was shown to be NP-hard. Israeli and Wood (2002) formulated the most vital edges shortest path problem as a mixed-integer linear program. They also proposed two decomposition algorithms based on Benders and so-called covering decompositions to solve this problem. The most vital edges/vertices shortest path problems (and minimum vertex/edge shortest path blocker problems) have been proven to be hard to approximate within a factor of 2 (and within a factor of 1.36, respectively) if P ≠ NP (Khachiyan et al., 2008).An algorithm for solving the most vital edges maximum flow problem, which works on a dual shortest path problem, was proposed by Wollmer (1964). A branch-and-bound algorithm for solving this problem was also developed by Ghare et al. (1971). The most vital edges maximum flow problem was later shown to be NP-hard (Wood, 1993). Wood (1993) also modeled and solved this problem and its variations by using integer programming techniques. Valid inequalities to tighten the linear programming relaxation of the proposed formulation were also derived in this work. Altner et al. (2010) presented two classes of polynomially separable valid inequalities for the most vital edges maximum flow problem. They proved that the integrality gap of the integer program introduced by Wood (1993) is not bounded by a constant, even when strengthened by these two classes of valid inequalities.According to Frederickson and Solis-Oba (1996), the most vital edges spanning tree problem is NP-hard and O(logk)-approximable, where k is the maximum number of edges allowed to be deleted in this problem. The most vital edges assignment problem (and minimum edge assignment blocker problem) has been shown to be NP-hard, and hard to approximate within a factor of 2 (and within a factor of 1.36, respectively) if P ≠ NP (Bazgan et al., 2010b). Bazgan et al. (2010a) investigated the complexity of the most vital edges (vertices) 1-median (1-center) problem and the minimum edge (vertex) 1-median (1-center) blocker problem and showed that these problems are NP-hard to approximate within a factor c, for some c > 1.The complexity of the minimum edge matching blocker problem was studied by Zenklusen et al. (2009) and it was shown that this problem is NP-hard and remains NP-hard even on unweighted bipartite graphs. This problem is polynomial time solvable on grids and trees (Ries et al., 2010). The most vital vertices matching problem is NP-hard on weighted bipartite graphs while it is polynomial time solvable on unweighted graphs within this class (Zenklusen, 2010).The most vital vertices independent set/vertex cover problems (and the minimum vertex independent set/vertex cover blocker problems) are NP-hard on weighted bipartite graphs but polynomial-time solvable on unweighted bipartite graphs (Bazgan et al., 2011). These problems are polynomial time solvable on weighted cographs and graphs of bounded treewidth (Bazgan et al., 2011).Mahdavi Pajouh et al. (2014) showed that the minimum vertex clique blocker problem is NP-hard on unweighted graphs. An analytical lower bound for the value of an optimal solution to the weighted version of this problem was also proposed in this work. The authors formulated this problem as a linear 0–1 program with an exponential number of constraints and developed a row generation based exact algorithm for solving this formulation.A closely related concept to EBDP on unweighted graphs is the bondage number of a graph. The bondage number of an unweighted graph G is the smallest number of edges whose removal from G results in a graph with domination number greater than the domination number of G. The concept of bondage number was originally defined by Bauer, Harary, Nieminen, and Suffel (1983), where it was referred to as domination line-stability. Later, Fink, Jacobson, Kinch, and Roberts (1990) formally introduced the bondage number as a measure for evaluating robustness or vulnerability of any given graph in terms of preserving the size of the smallest dominating set under edge failures. Hu and Xu (2012) showed that the problem of determining the bondage number of a graph is NP-hard. Upper bounds and lower bounds on the bondage number of a graph along with different generalizations of this concept have also been proposed in the literature (Xu, 2013).Despite similarity of the bondage number’s definition to EBDP on unweighted graphs, these two concepts have major differences. In EBDP on unweighted graphs, we are not only concerned with increasing the domination number but also increasing it to a value which is greater than or equal to a given r > 0. Furthermore, cumulative sum of recursively calculated bondage numbers needed to increase the domination number to the desired level (≥ r) may not be equal to the optimal solution of EBDP on the considered graph. We show this by the following example. Consider a graphG=(V,E),whereV={1,2,3,4,5}andE={(1,2),(2,3),(2,4),(2,5),(3,5),(4,5)},and letr=3. Note thatγ(G)=1,bondage number of G is also 1 and (2, 4) is an edge whose removal increases the domination number to 2. The bondage number of G⟨E∖{(2, 4)}⟩ is 2 and one can remove edges (1, 2) and (4, 5) to increase the domination number to 3. On the other hand, the optimal solution to EBDP on G withr=3is 2 (S*={(1,2),(2,5)}), which is strictly smaller than the cumulative sum of the two previously found bondage numbers. It is also important to note that unlike the bondage number, EBDP is defined in the framework of weighted graphs in which increasing the weight of a minimum weighted dominating set to some specific level is desired.The computational complexity of EBDP has not been addressed in the literature. In addition, to the best of our knowledge, there are no exact algorithms for solving this problem on general weighted graphs. In Section 2, we study the computational complexity of EBDP and show that the decision version of this problem is NP-hard. This section also includes an analytical lower bound for the value of an optimal solution to EBDP. In Section 3, we characterize the set of feasible solutions to EBDP and formulate it as a linear 0–1 program, which involves a large number of constraints. We also study the convex hull of feasible solutions to EBDP in this section and identify facet inducing inequalities for this polytope. Section 4 presents the first exact algorithm for EBDP, which solves the proposed formulation by a branch-and-cut algorithm with lazy implementation of nontrivial constraints. Section 5 summarizes the computational results obtained by solving EBDP using the developed algorithm on a test-bed of randomly generated instances and real-life power-law networks. Finally, Section 6 provides concluding remarks and some directions for future research.According to Hu and Xu (2012), the problem of finding the bondage number of a graph is NP-hard. However, the complexity of EBDP for any fixed r > 0 has not been established in the literature. In this section, we show that the decision version of EBDP is NP-hard.Note that if r is part of the input, it is easy to show that the minimum dominating set problem is a special case of EBDP, which makes the latter NP-hard. Interestingly, a stronger result about the complexity of EBDP will be proven in this section: the problem remains NP-hard for any fixed r > 0.For a fixed r > 0, the decision version of EBDP (denoted by<G,w,c>) is given by a simple nonempty graphG=(V,E)with positive weightswon its vertices and an integer c ≥ 0, and we ask if there exists a set S ⊆ E such that |S| ≤ c andγw(G〈E∖S〉)≥r.Theorem 1The decision version of EBDP is NP-hard for any fixed r > 0.For a fixed r > 0, the intractability of EBDP is proved by a polynomial-time reduction from minimum dominating set problem (Garey & Johnson, 1979). Given a simple nonempty graphG=(V,E)and an integer q > 0, the decision version of the minimum dominating set problem (denoted by < G, q >) is defined as follows: is there a dominating set of size at most q in G? The minimum dominating set problem is known to be NP-complete (Garey & Johnson, 1979). For any such minimum dominating set decision problem < G, q >, we replicate graph G and assign a positive weight ofr/(q+1)to each vertex of this graph. Let us denote the vector containing all weights on vertices of G byw=[wi],wherewi=r/(q+1)for all i ∈ {1, … , n}. This procedure constructs in polynomial time an instance<G,w,0>of EBDP such that there exists a dominating set of size at most q in G if and only if there does not exist a set S ⊆ E with |S| ≤ 0 such thatγw(G〈E∖S〉)≥r. The necessity and sufficiency of this statement can be easily verified due to the fact that by the construction, these two problems are equivalent. This establishes that the decision version of EBDP is NP-hard for any fixed r > 0 and completes the proof of Theorem 1.□Note that as shown in proof of Theorem 1, it is NP-hard to distinguish instances of EBDP with optimum equal to zero. This implies that EBDP cannot be approximated within any (even non-constant) factor, unless P = NP.Considering the intractability of EBDP, it will be beneficial to find analytical bounds for the value of an optimal solution to this problem. A set S ⊆ E is said to be a feasible solution to EBDP if and only ifγw(G〈E∖S〉)≥r. Here, finding a feasible solution of minimum cardinality is desired. In order to present our proposed analytical lower bound, we need to define notation κ(D, r) for any set D ⊆ V and r > 0 as follows.Definition 1For any set D ⊆ V and r > 0, the integer κ(D, r) is the minimum cardinality of a set D′⊆(V∖D) such that W(D ∪ D′) ≥ r.For any given set D ⊆ V and r > 0, κ(D, r) can be calculated by using a greedy procedure that runs in O(nlog n). This procedure adds vertices of set V∖D to set D in decreasing order of their weights until the sum of the weights over all vertices in D becomes larger than or equal to r. At termination of this procedure, the number of vertices added to D is κ(D, r). Note that sorting elements of V∖D is the most expensive operation in this procedure, which can be done in O(nlog n) number of principal operations (Knuth, 1998).Using notation κ(., r), Proposition 1 presents an analytical lower bound for the value of an optimal solution to EBDP.Proposition 1Let D be a dominating set in graph G and z*denote the cardinality of any optimal solution to EBDP in graph G. Then z* ≥ κ (D, r).Suppose z* < κ(D, r) for some dominating set D ⊆ V and let S* denote an optimal solution to EBDP. LetD′={i∈V∖D:NG〈E∖S*〉(i)∩D=∅}. Note that |D′| ≤ z*, because removing each element of S* from E adds at most one element to D′. Since z* < κ(D, r) and |D′| ≤ z*, then |D′| < κ(D, r). Now, D ∪ D′ is a dominating set in G⟨E∖S*⟩. Additionally, since |D′| < κ(D, r), then W(D ∪ D′) < r. This contradicts with feasibility of S*.□To formulate EBDP, we first provide a characterization of the set of feasible solutions to this problem. Then, we further improve this characterization by removing a set of redundant inequalities and use it to develop a linear 0–1 programming formulation for EBDP with a large number of constraints.In order to present the initial characterization of the set of feasible solutions to EBDP, we need to define the following notations. Let ΩGdenote the set containing all dominating sets in graph G. For a dominating set D ∈ ΩG, define a whip of D in graph G as follows.Definition 2Given a dominating set D ⊆ V, set H ⊆ E is called a whip of D in graph G if and only ifH⊆EG(D)and|NG〈H〉(i)|=1for all i ∈ V∖D. The set containing all whips of D in graph G is denoted byΦGD.Note that a dominating set might have more than one whip and a whip might be associated with more than one dominating set. The initial characterization of the set of feasible solutions to EBDP is given by the following proposition.Proposition 2A set S ⊆ E is a feasible solution to EBDP if and only if(1)∑e∈Hze≥κ(D,r)∀D∈ΩG∀H∈ΦGD,wherez=[z1,…,zm]∈{0,1}mis the incidence vector of S.To show necessity, suppose that S ⊆ E is a feasible solution to EBDP, but there exists a dominating setD¯∈ΩGthat has a whipH¯∈ΦGD¯for which∑e∈H¯ze<κ(D¯,r). This means that|S∩H¯|<κ(D¯,r). LetD^denote the set containing all isolated vertices inG〈H¯∖S〉that belong toV∖D¯. Note that|D^|=|S∩H¯|<κ(D¯,r)and hence,W(D¯∪D^)<r. SinceD¯∪D^is a dominating set in G⟨E∖S⟩, this contradicts with feasibility of S.To show sufficiency, suppose ∑e∈Hze≥ κ(D, r) for all D ∈ ΩGandH∈ΦGDbut S is not a feasible solution to EBDP. So, there exists a dominating setD¯in G⟨E∖S⟩ withW(D¯)<r. Consider an arbitrary whipH¯∈ΦG〈E∖S〉D¯. We know that∑e∈H¯ze=0(sinceH¯⊆(E∖S)andze=0∀e∈(E∖S)) andκ(D¯,r)≥1,so∑e∈H¯ze<κ(D¯,r). SinceD¯∈ΩGandH¯∈ΦGD¯,this contradicts with ∑e ∈ Hze≥ κ(D, r) for all D ∈ ΩGandH∈ΦGD.□An instance of inequality (1) written for a dominating set D0 ∈ ΩGand a whipH0∈ΦGD0is referred to as “whip inequality of dominating set D0 and its whip H0” and is denoted by “(D0, H0)-inequality” in the remainder of this paper.It turns out that the result of Proposition 2 can be improved by removing a set of redundant whip inequalities from this characterization. To specify this set of redundant whip inequalities, we need to provide the following definitions.Definition 3Given r > 0, let ΩG(r) denote the set containing all dominating sets D in graph G such that κ(D, r) > κ(D ∪ {d}, r), where d is a vertex with minimum weight in V∖D. Note thatV∉ΩG(r).Given a dominating set D ⊆ V and r > 0, letΦGD(r)denote the set containing all whips H of D in graph G that satisfy the following conditions:(i)For any vertex i ∈ D∖(∪j ∈ V∖DNG⟨H⟩( j)), either(D∖{i})∉ΩGorκ(D∖{i},r)=κ(D,r).For any edgee∈EG(D)∖H,either|NG〈H〉(ae)|+|NG〈H〉(ce)|≥2or κ((D∖{ae, ce}) ∪ {be}, r) ≤ κ(D, r), where aeis the endpoint of e in D, beis the endpoint of e in V∖D, and ceis the unique neighbor of bein G⟨H⟩.Note that in Condition (i) of Definition 4, statement i ∈ D∖(∪j ∈ V∖DNG⟨H⟩( j)) is equivalent to requiring that i is an isolated vertex in G⟨H⟩, and condition(D∖{i})∉ΩGis equivalent toNG(i)∩(D∖{i})=∅. Using Definitions 3 and 4, the following theorem identifies a set of redundant whip inequalities in the characterization presented in Proposition 2.Theorem 2Given a whipH˜∈(∪D∈ΩGΦGD)∖(∪D∈ΩG(r)ΦGD(r))and a dominating setD˜∈ΩGsuch thatH˜∈ΦGD˜,the(D˜,H˜)-inequality used inProposition 2to characterize the set of feasible solutions to EBDP is redundant in presence of all (D, H)-inequalities in which D ∈ ΩG(r) andH∈ΦGD(r),and may be removed from this characterization.Note that ifκ(D˜,r)=0,then the(D˜,H˜)-inequality used in Proposition 2 is redundant because of the fact thatz∈{0,1}m. Now, supposeκ(D˜,r)>0. Here, we show that there exist D ∈ ΩG(r) andH∈ΦGD(r)such that the whip inequality of dominating set D and its whip H dominates(D˜,H˜)-inequality. To this aim, we first need to devise a procedure that transforms a dominating setD˜∈ΩGwithκ(D˜,r)>0and a whipH˜∈ΦGD˜to a dominating set D ∈ ΩG(r) and a whipH∈ΦGD(r). One such procedure is presented by Algorithm 1 (which will also be referred to as Proc(G(V,E),w,r,D˜,H˜)). This algorithm starts by lettingD=D˜andH=H˜,and then recursively adding vertices with minimum weight in set V∖D to set D while removing the edges incident to them from whip H until the condition of Definition 3 holds for D. Then, all vertices in D∖(∪j ∈ V∖DNG⟨H⟩(j)) for which Condition (i) of Definition 4 is violated are recursively removed from D while arbitrary edges inEG(D)that are incident to them (one edge for each vertex being removed) are added to whip H. Finally, each edge e inEG(D)∖Hthat violates Condition (ii) of Definition 4 is added to whip H while aeand ceare removed from D and beis added to this set (ae, beand ceare the vertices defined in Definition 4). This whole process is repeated until D ∈ ΩG(r) andH∈ΦGD(r). Claim 1 shows that Algorithm 1 terminates in polynomial time. The proof of Claim 1 is provided in Appendix.Claim 1The worst-case running time for Algorithm 1 isO(n4+m2n2).Given a whipH˜∈(∪D∈ΩGΦGD)∖(∪D∈ΩG(r)ΦGD(r))and a dominating setD˜∈ΩGsuch thatκ(D˜,r)>0andH˜∈ΦGD˜,the (D, H)-inequality associated with the dominating set D and whip H returned at termination of Algorithm 1 dominates(D˜,H˜)-inequality. This can be shown as follows. Let us refer to while loops in Lines 4–31, 5–15, 16–22 and 23–30 as main loop, loop 1, loop 2 and loop 3, respectively. After each iteration of loop 1, the left-hand side of the (D, H)-inequality has one less variable compared to the left-hand side of the whip inequality associated with these sets before that iteration, while the right-hand side of both inequalities are the same. Thus, the (D, H)-inequality obtained after each iteration of loop 1 dominates (or coincides with) the whip inequality associated with these sets before that iteration. Similarly, after each iteration of loop 2 (or loop 3), the left-hand side of the (D, H)-inequality has one more variable compared to the left-hand side of the whip inequality associated with these sets before that iteration, while its right-hand side is also larger by at least one unit. This again means that the (D, H)-inequality obtained after each iteration of loop 2 (or loop 3) dominates (or coincides with) the whip inequality associated with these sets before that iteration. This shows that the (D, H)-inequality associated with the dominating set D and whip H returned at termination of Algorithm 1 dominates(D˜,H˜)-inequality. So,(D˜,H˜)-inequality may be removed from characterization of Proposition 2.□As a result of Theorem 2, Corollary 1 presents a more compact characterization of the set of feasible solutions to EBDP.Corollary 1A set S ⊆ E is a feasible solution to EBDP if and only if(2)∑e∈Hze≥κ(D,r)∀D∈ΩG(r)∀H∈ΦGD(r),wherez=[z1,…,zm]∈{0,1}mis the incidence vector of S.Whip inequalities of type (2) are referred to as “r-critical-whip inequalities” in the remainder of this paper.In this section, we study the convex hull of the incidence vectors of all feasible solutions to EBDP in order to discover important properties of this polytope. These properties may be beneficial in the development of integer programming techniques to solve EBDP. LetPG(r)denote the convex hull of the incidence vectors of all feasible solutions to EBDP on G for a given r > 0. Here, we show thatPG(r)is a full-dimensional polytope and the upper-bound constraint on each decision variable (ze≤ 1, for each edge e ∈ E) induces a facet ofPG(r). In addition, for the case of unweighted graphs (w=1), we develop necessary and sufficient conditions under which r-critical-whip inequalities and non-negativity constraints are facet inducing forPG(r). These results are presented in the following theorem.Theorem 3Given a simple nonempty graphG=(V,E)with weightswon its vertices and r > 0, the following statements are true.(a)PG(r)is a full-dimensional polytope.Given an edge e ∈ E, inequality ze≤ 1 induces a facet ofPG(r).For the case of unweighted graphs (w=1), the (D, H)-inequality associated with a dominating set D ∈ ΩG(r) and a whipH∈ΦGD(r)induces a facet ofPG(r)if and only if(c.1)H=E,or|V|≥r+2.For the case of unweighted graphs (w=1), inequality ze≥ 0 for an edge e ∈ E induces a facet ofPG(r)if and only if(d.1)E={e},or|V|≥r+2.(a) To show thatPG(r)is a full-dimensional polytope, it is enough to show that there arem+1affinely independent points inPG(r). Sincemin{wi,wj}+W(V∖{i,j})≥rfor all (i, j) ∈ E and W(V) ≥ r, then sets E∖{e} for all e ∈ E along with set E are feasible solutions to the corresponding EBDP. It can be easily verified that the incidence vectors of these feasible solutions, which belong toPG(r),are affinely independent. Hence,PG(r)is a full-dimensional polytope.(b) Given an edge e ∈ E, it is enough to show that the dimension of the face ofPG(r)induced by ze≤ 1 ism−1. The face ofPG(r)induced by ze≤ 1 isPGe(r)={z∈PG(r):ze=1}.Note that the dimension ofPGe(r)is at mostm−1. Hence, it is enough to show that there are m affinely independent points inPGe(r). Sincemin{wi,wj}+W(V∖{i,j})≥rfor all (i, j) ∈ E and W(V) ≥ r, then sets E∖{e′} for all e′ ∈ E∖{e} along with set E are feasible solutions to the corresponding EBDP. The incidence vectors of these sets are affinely independent and belong toPGe(r). Thus, the dimension ofPGe(r)ism−1.(c) To show necessity, suppose the (D, H)-inequality associated with a dominating set D ∈ ΩG(r) and a whipH∈ΦGD(r)in an unweighted graph induces a facet ofPG(r)but E∖H ≠ ∅ and|V|<r+2. Since|V|≥r+1(min{wi,wj}+W(V∖{i,j})≥rfor all (i, j) ∈ E), then|V|=⌈r⌉+1and|H|=κ(D,r)+1. In addition, one can easily verify that a set S ⊆ E is feasible to this EBDP if and only if|S|≥m−1.The face ofPG(r)induced by the (D, H)-inequality isPGD,H(r)={z∈PG(r):∑e∈Hze=κ(D,r)}.Here, sincePGD,H(r)is a facet ofPG(r),then it is of dimensionm−1. Additionally, sincePG(r)is bounded, thenPGD,H(r)is a bounded polyhedron of dimensionm−1. Letn(PGD,H(r))denote the number of extreme points ofPGD,H(r). Dimension ofPGD,H(r)is the dimension of its affine hull (by definition). SincePGD,H(r)is bounded, then its affine hull is the affine hull of its extreme points (as all other points ofPGD,H(r)are convex combinations and thus affine combinations of its extreme points). The dimension of this affine hull cannot exceedn(PGD,H(r))−1(as any affine space spanned by k vectors has dimension at mostk−1). Thus,n(PGD,H(r))≥m. Note that all extreme points ofPGD,H(r)are the incidence vectors of some feasible solutions to EBDP. Therefore, there are at least m incidence vectors of feasible solutions to EBDP that belong toPGD,H(r).Letz0denote the incidence vector of a feasible solution to EBDP that belongs toPGD,H(r). Since|H|=κ(D,r)+1,∑e∈Hze0=κ(D,r),and∑e∈Eze0≥m−1,then∑e∈E∖Hze0=|E∖H|. Therefore, the number of incidence vectors of feasible solutions to EBDP that belong toPGD,H(r)is |H|. Since |H| < m, this contradicts with existence of at least m incidence vectors of feasible solutions to EBDP that belong toPGD,H(r).To show sufficiency, it is enough to show that given an unweighted graph G, r > 0, a dominating set D ∈ ΩG(r) and a whipH∈ΦGD(r)that satisfy at least one of conditions (c.1) or (c.2), the dimension ofPGD,H(r)ism−1. Since the dimension ofPGD,H(r)is at mostm−1,it is enough to show that there are m affinely independent points inPGD,H(r). Without loss of generality, assume the edges in H are numbered from 1 to |H|. For each edge ε ∈ E, construct a set Iε as follows:If ε ∈ H and1≤ɛ≤κ(D,r)−1,then letIɛ=E∖({κ(D,r)+2,…,|H|}∪{ɛ}).If ε ∈ H and κ(D, r) ≤ ε ≤ |H|, then letIɛ={ɛ}∪(E∖{κ(D,r),…,|H|}).If ε ∈ E∖H, then first select a set Sε ⊆ H using the following approach. If ε ∈ E∖H and both endpoints of ε (denoted by aε and bε) belong to D, then |NG⟨H⟩(aε)| ≥ 1 and |NG⟨H⟩(bε)| ≥ 1 because otherwise, Condition (i) of Definition 4 is not valid for D. In this case, let e1 and e2 denote two arbitrary edges in H that are incident to aε and bε, respectively. Select an arbitrary set Sε ⊆ (H∖{e1, e2}) such that|Sɛ|=κ(D,r)(note that since condition (c.2) is valid, such a set Sε exists). If ε ∈ E∖H and only one endpoint of ε belongs to D (suppose aε ∈ D and bε ∈ V∖D), then let d be an arbitrary vertex in (NG⟨H⟩(aε)∪NG⟨H⟩(cε))∖{bε}, where cε is the unique neighbor of bε in G⟨H⟩. Note that vertex d exists becauseɛ∈EG(D)∖Hand by Condition (ii) of Definition 4,|NG〈H〉(aɛ)|+|NG〈H〉(cɛ)|≥2. If d ∈ NG⟨H⟩(aε), then select an arbitrary set Sε ⊆ (H∖{(aε, d), (bε, cε)}) such that|Sɛ|=κ(D,r); otherwise, select an arbitrary set Sε ⊆ (H∖{(cε, d), (bε, cε)}) with|Sɛ|=κ(D,r). Note that since condition (c.2) is valid, such a set Sε exists in both cases. Finally, if ε ∈ E∖H and both endpoints of ε (denoted by aε and bε) belong to V∖D, then let e1 and e2 denote the edges in H that are incident to aε and bε, respectively. Select an arbitrary set Sε ⊆ (H∖{e1, e2}) such that|Sɛ|=κ(D,r)(note that since condition (c.2) is valid, such a set Sε exists). After selecting set Sε using the approach mentioned for any of these three cases, letIɛ=Sɛ∪(E∖(H∪{ɛ})).Here, we show that for any edge ε ∈ E, set Iε is a feasible solution to EBDP. To this aim, letD^denote the set containing all isolated vertices in G⟨E∖Iε⟩ that belong to set V∖D. If ε ∈ H, then in G⟨E∖Iε⟩, there does not exist any pair of vertices in D that belong to the same connected component. In addition, we have|D^|=κ(D,r). Hence,γ(G〈E∖Iɛ〉)≥|D|+κ(D,r)≥rand set Iε is a feasible solution to EBDP. If ε ∈ E∖H and at least one of its endpoints belongs to D, then in G⟨E∖Iε⟩, there is exactly one pair of vertices in D that belong to the same connected component (denoted byG˜). It can be easily verified thatγ(G˜)≥2. Since|D^|=κ(D,r),thenγ(G〈E∖Iɛ〉)≥(|D|−2)+2+κ(D,r)≥rand set Iε is a feasible solution to EBDP. If ε ∈ E∖H and both endpoints of ε belong to V∖D, then either there does not exist any pair of vertices in D that belong to the same connected component or there is exactly one pair of vertices in D that belong to the same connected component (denoted byG˜). For both cases,|D^|=κ(D,r). For the first case,γ(G〈E∖Iɛ〉)≥|D|+κ(D,r)≥r. In the second case, it can be verified thatγ(G˜)≥2and hence,γ(G〈E∖Iɛ〉)≥(|D|−2)+2+κ(D,r)≥r. Therefore, set Iε is again a feasible solution to EBDP. This means for each ε ∈ E, the incidence vector of Iε (denoted byzɛ) belongs toPG(r). Additionally,∑e∈Hzeɛ=κ(D,r)and hence,zɛ∈PGD,H(r). It can be easily verified that vectorszɛfor all ε ∈ E are affinely independent. So, the dimension ofPGD,H(r)ism−1.(d) To show necessity, suppose inequality ze≥ 0 for an edge e ∈ E in an unweighted graph induces a facet ofPG(r)but E∖{e} ≠ ∅ and|V|<r+2. Since|V|≥r+1(min{wi,wj}+W(V∖{i,j})≥rfor all (i, j) ∈ E), then|V|=⌈r⌉+1.The face ofPG(r)induced by ze≥ 0 isPGe(r)={z∈PG(r):ze=0}.Here, sincePGe(r)is a facet ofPG(r),then it is of dimensionm−1. Additionally, sincePG(r)is bounded, thenPGe(r)is a bounded polyhedron of dimensionm−1. As shown in proof of part (c), we haven(PGe(r))≥m. Note that all extreme points ofPGe(r)are the incidence vectors of some feasible solutions to EBDP. Therefore, there are at least m incidence vectors of feasible solutions to EBDP that belong toPGe(r).Letz1denote the incidence vector of a feasible solution to EBDP that belongs toPGe(r). Sincew=1,|V|=⌈r⌉+1andze1=0,then it can be easily verified that∑ɛ∈E∖{e}zɛ1=m−1. Therefore, the number of incidence vectors of feasible solutions to EBDP that belong toPGe(r)is one. Since 1 < m, this contradicts with existence of at least m incidence vectors of feasible solutions to EBDP that belong toPGe(r).To show sufficiency, it is enough to show that given an unweighted graph G, r > 0 and an edge e ∈ E that satisfy at least one of conditions (d.1) or (d.2), the dimension ofPGe(r)ism−1. Since the dimension ofPGe(r)is at mostm−1,it is enough to show that there are m affinely independent points inPGe(r). For each edge ε ∈ E, construct a set Iε as follows:Iɛ=E∖({e}∪{ɛ}).Here, we show that for any edge ε ∈ E, set Iε is a feasible solution to EBDP. Since|V|−1≥r(min{wi,wj}+W(V∖{i,j})≥rfor all (i, j) ∈ E), then Ieis a feasible solution to EBDP. If ε ∈ E∖{e}, then|V|≥r+2(by condition (d.2)) and it can be easily verified that Iε is also a feasible solution to EBDP. This means for each ε ∈ E, the incidence vector of Iε (denoted byzɛ) belongs toPG(r). In addition, for each ε ∈ E, we havezeɛ=0and hence,zɛ∈PGe(r). It can be easily verified that vectorszɛfor all ε ∈ E are affinely independent. So, the dimension ofPGe(r)ism−1.□Using the notations and results mentioned above, we can now formulate EBDP as a linear 0–1 program. Specifically, as it follows from Corollary 1, EBDP can be formulated as follows:(3)min∑e∈Ezesubject to(4)∑e∈Hze≥κ(D,r)∀D∈ΩG(r),H∈ΦGD(r)(5)ze∈{0,1}∀e∈E,wherez=[ze]in {0, 1}mis the incidence vector of a set S ⊆ E, κ(., r) is the notation defined in Section 2, and finally, ΩG(r) andΦGD(r)are the sets defined in Section 3.1.It should be mentioned that adding the whip inequality associated with a whipH˜∈(∪D∈ΩGΦGD)∖(∪D∈ΩG(r)ΦGD(r))and a dominating setD˜∈ΩGsuch thatH˜∈ΦGD˜to Formulation (3)–(5) will not improve the quality of the lower bound obtained by solving the linear programming relaxation of this formulation. As a result of Theorem 2, it can be verified that the corresponding(D˜,H˜)-inequality is valid for any feasible solution to the linear programming relaxation of Formulation (3)–(5).The number of r-critical-whip inequalities in a graph can be very large. As a result, Formulation (3)–(5) may involve a large number of constraints, and dealing with this formulation may require extensive computational effort. In the next section, we develop a branch-and-cut approach that applies the r-critical-whip inequalities in a lazy fashion. This allows one to reduce this computational effort and solve EBDP on moderate-size graph instances.In this section, we develop the first exact algorithm for solving EBDP, which solves Formulation (3)–(5) by a branch-and-cut approach with lazy implementation of r-critical-whip inequalities (constraints of type (4)). Before presenting the details of this branch-and-cut algorithm, let us introduce the following notations. Let FTdenote the formulation associated with node T of the search tree andzTdenote an optimal solution to this formulation. In addition, for an integralzT,letS(zT)denote the set whose incidence vector iszT.At the beginning of the branch-and-cut algorithm, the formulation associated with the root node of the search tree is the linear programming relaxation of Formulation (3)–(5), from which all r-critical-whip inequalities have been removed. The incumbent solution is also initialized to set E (since W(V) ≥ r, then E is a feasible solution to EBDP). When node T of the search tree is selected for processing, we first solve formulation FT. If FTis infeasible, then node T is fathomed by infeasibility. If FTis feasible, then∑e∈EzeTis a valid lower bound for the cardinality of the best solution found at the subtree rooted at node T. If∑e∈EzeTis not smaller than the cardinality of the incumbent solution, then node T is fathomed by bound. Otherwise, ifzTis not integral, then we branch by variable dichotomy and two children nodes are added to the set of unprocessed tree nodes. IfzTis integral, then feasibility ofS(zT)to EBDP is checked by solving the minimum weighted dominating set problem onG〈E∖S(zT)〉. IfS(zT)is feasible to EBDP (γw(G〈E∖S(zT)〉)≥r), then the present tree node is fathomed by feasibility and the incumbent solution is updated toS(zT). Otherwise, a violated r-critical-whip inequality is detected and added to formulation FTas a lazy constraint, and node T is processed again. This algorithm terminates after processing all unprocessed nodes in the search tree and the cardinality of the incumbent solution will be the optimal objective to EBDP on graph G.For an integralzT,the minimum weighted dominating set problem onG〈E∖S(zT)〉used in our exact algorithm to verify the feasibility of setS(zT)is formulated as(6)min∑i∈Vwixisubject to(7)xi+∑j∈NG′(i)xj≥1∀i∈V(8)xi∈{0,1}∀i∈VwhereG′=G〈E∖S(zT)〉. In case setS(zT)is infeasible to EBDP (γw(G〈E∖S(zT)〉)<r), we detect an r-critical-whip inequality that is violated byzTas follows. LetD˜denote an optimal solution to the minimum weighted dominating set problem onG〈E∖S(zT)〉. Consider an arbitrary whipH˜∈ΦG〈E∖S(zT)〉D˜. Note thatH˜∈ΦGD˜,κ(D˜,r)>0and(D˜,H˜)-inequality is violated byzT(since the left-hand side of this inequality equals zero usingzTwhile the right-hand side is positive). Using Algorithm 1 with setsD˜andH˜as its inputs, we can detect a dominating set D ∈ ΩG(r) and a whipH∈ΦGD(r)such that (D, H)-inequality is violated byzT. Note that (D, H)-inequality dominates(D˜,H˜)-inequality (as shown in proof of Theorem 2) and hence, (D, H)-inequality is also violated byzT.This section presents the computational results obtained by solving EBDP on a test-bed of instances that includes Uniform Random Graphs (URG) and real-life power-law instances. We first used the exact algorithm proposed in Section 4 to solve these problem instances and then, we utilized a modified version of this algorithm to study the effect of strengthening detected violated whip inequalities by Algorithm 1 in performance of our proposed exact algorithm. In this modified version, for each integralzTwith an infeasibleS(zT),the violated whip inequality associated with a minimum weighted dominating set inG〈E∖S(zT)〉and one of its whips in this graph is directly added to formulation FTwithout being improved (transformed to an r-critical-whip inequality) by Algorithm 1. In other words, the modified algorithm employs inequalities of type (1) to characterize the set of feasible solutions to EBDP instead of using inequalities of type (2). Employing violated inequalities of type (1) requires less computational effort but these inequalities are weaker compared to inequalities of type (2). One of the objectives of our numerical experiments in this section is to study the effect of this trade-off on performance of the exact algorithm for solving EBDP.The computational experiments were performed on a server with two AMD Opteron™6128 Eight-Core CPUs and 12 gigabytes of RAM, running Linux x86_64, CentOS 5.9. All algorithms were implemented in C++ and Gurobi®Optimizer 5.6.2 was used to implement the proposed exact algorithm and its modified version. Each instance of Formulation (6)–(8) (used to verify the feasibility of an integral solution in both versions) was also solved by this solver with default settings.The test-bed of instances consisted of uniform random graphs with 25 vertices and a group of real-life power-law networks. For the URG instances, the probability for existence of an edge between any pair of vertices (expected edge density) was chosen to be p ∈ {0.1, 0.2, 0.5, 0.7, 0.9}. We generated both unweighted and weighted URG instances. For the weighted instances, the weight assigned to each vertex is a uniformly distributed integer between 1 and 10. For each expected edge density p, we generated 10 unweighted and 10 weighted graph instances, resulting in a total of 100 instances. The value of parameter r was chosen from {8, 12, 16, 20} for unweighted instances, and from {40, 60, 80, 100} for weighted ones. The real-life network instances used in our experiments were collected from the University of Florida Sparse Matrix Collection database (Davis & Hu, 2011). The graphs considered are karate_34 (a social network from a karate club with 34 members at a U.S. university (Zachary, 1977)), chesapeake_39 (a 39-vertex graph from the seasonal dynamics of the Chesapeake Bay ecosystem (Baird & Ulanowicz, 1989)), dolphins_62 (a social network of frequent associations between 62 dolphins in a community living off Doubtful Sound, New Zealand (Lusseau et al. 2003)), and terror_kreb_62 (a 62-member terrorist network from the hijackers responsible for the 9/11 attacks, compiled by Krebs (2002)). We also developed the weighted version of each one of these instances by assigning a uniformly distributed integer between 1 and 10 to each vertex of that instance as its weight. The value of parameter r for real-life network instances was chosen from {10, 15, 20, 25, 30, 40, 45, 50} for unweighted instances, and from {60, 90, 120, 150, 180, 240, 270, 300} for weighted ones. The running time limit for each instance of EBDP was set at 3600 seconds.Table 1shows percentage of instances solved to optimality (Solved (%)), average running time (Time (s)), average best solution found (BSF), and average optimality gap (Gap (%)) obtained by using the proposed exact algorithm on the test-bed of URG instances within 3600 seconds time limit. Table 2shows the values of the aforementioned attributes acquired by employing the modified version of the proposed exact algorithm on the same test-bed within the same time limit.For a given edge density p, the problem instances corresponding to very small or very large values of r are expected to be simpler compared to the instances associated with moderate values of this parameter. This intuition is justified by the fact that the number of binary vectors satisfying the constraint associated with a given dominating set D and one of its whips H (constraint of type (2) for Table 1 and constraint of type (1) for Table 2) is greater than or equal to(|H|κ(D,r)). For a given D and H, as r increases, κ(D, r) increases and the quantity(|H|κ(D,r))increases, reaches a maximum and then decreases. This suggests that the size of the feasible region for the corresponding EBDP also increases, reaches a maximum and then decreases. The results presented in Tables 1 and 2 do not contradict this intuition. Specifically, this trend is observed for the optimality gap for the weighted instances of densityp=0.2in Table 1, and unweighted instances of densitiesp=0.2andp=0.5in Table 2. It is important to note that as the edge density increases, the maximum optimality gap over all values of parameter r appears to happen at a smaller value of this parameter. This shift in the value of parameter r with the maximum optimality gap is the reason behind the fact that we do not observe this peak in optimality gap across all values of chosen densities. Similar behavior is also expected and justified for Solved (%) and Time (s) attributes in these tables.With regard to the BSF attribute in Tables 1 and 2, for a given edge density p, as r increases, the average size of the best solution found also increases. Similarly, for a given r, as edge density p increases, the BSF attribute also increases. This behavior is very intuitive because as parameter r (or edge density p) increases, the number of constraints of type (2) for Table 1 and constraints of type (1) for Table 2 increases. This means the size of the feasible region for the corresponding EBDP decreases and the optimal objective value increases.Comparing the results shown in Table 1 with the ones presented in Table 2, it can be concluded that the proposed exact algorithm outperforms the modified version of this algorithm on URG instances in all cases. This means improving the violated whip inequalities by transforming them into violated r-critical-whip inequalities by Algorithm 1 significantly improves the performance of the branch-and-cut algorithm on these instances.Tables 3and 4show the running time (Time (s)), best solution found (BSF), and optimality gap (Gap (%)) obtained by using the proposed exact algorithm and its modified version on the test-bed of unweighted power-law instances within 3600 seconds time limit, respectively. Tables 5and 6show the values of the aforementioned attributes acquired by employing the proposed exact algorithm and its modified version on the test-bed of weighted power-law instances within the same time limit, respectively.According to these tables, similar to the observation made for the URG instances (with some exceptions), for a given instance, as r increases, the optimality gap increases, reaches a maximum, and then decreases. Therefore, the problem instances corresponding to moderate values of r are more challenging compared to the ones associated with very smaller or very larger values of this parameter. This behavior of the optimality gap for a given instance can be explained by the same logic used for the URG instances. The value of parameter r at which the optimality gap reaches its maximum depends on the instance and varies from one instance to another. Similar behavior is observed for Time (s) attribute in these tables. Considering BSF attribute, for each instance, as parameter r increases, the size of the best solution found also increases. This observation is again similar to the one made for URG instances and can be justified using a similar discussion.Comparing the results shown in Table 3 with the ones presented by Table 4 (and the results shown in Table 5 with the ones presented by Table 6), it is observed that the proposed exact algorithm performs better than the modified version of this algorithm on power-law instances as well. This again indicates that improving the violated whip inequalities by Algorithm 1 and transforming them into violated r-critical-whip inequalities improves the performance of the proposed branch-and-cut approach.

@&#CONCLUSIONS@&#
