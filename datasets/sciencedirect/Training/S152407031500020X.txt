@&#MAIN-TITLE@&#
A fast algebraic non-penetration filter for continuous collision detection

@&#HIGHLIGHTS@&#
We present a low-cost filtering algorithm using algebraic analysis techniques.Our algorithm can significantly reduce the number of elementary collision tests that occur in the narrow stage of continuous collision detection.We demonstrated that cubic-solvers augmented by our filtering algorithm are able to achieve up to 99.We observed more than ten times performance improvement against the standard cubic-solver without any filters.

@&#KEYPHRASES@&#
Continuous collision detection,Non-penetration filter,Cubic equation,Deformable objects,

@&#ABSTRACT@&#
Continuous collision detection is a key technique to meet non-penetration requirements in many applications. Even though it is possible to perform efficient culling operations in the broad stage of a continuous collision detection algorithm, such as bounding volume hierarchies, a huge number of potentially colliding triangles still survive and go to the succeeding narrow stage. This heavily burdens the elementary collision tests in a collision detection algorithm and affects the performance of the entire pipeline, especially for fast moving or deforming objects. This paper presents a low-cost filtering algorithm using algebraic analysis techniques. It can significantly reduce the number of elementary collision tests that occur in the narrow stage. We analyze the root existence during the time interval [0, 1] for a standard cubic equation defining an elementary collision test. We demonstrate the efficiency of the algebraic filter in our experiments. Cubic-solvers augmented by our filtering algorithm are able to achieve up to 99% filtering ratios and more than 10 ×  performance improvement against the standard cubic-solver without any filters.

@&#INTRODUCTION@&#
Enforcing non-penetration constraints between movable/deformable objects has been widely used in collision responses in physically-based simulation [1,2], motion planning in robotics [3], god-object computation in haptic rendering [4], tolerance verification in virtual prototyping [5], etc. Continuous collision detection (CCD) is one of the major techniques to maintain non-penetration constraints and to robustly handle collision responses. For movable/deformable objects, two filtering techniques have been used to accelerate the queries of continuous collision detection: dynamic bounding volume hierarchies (BVHs) in broad stage [6] and non-penetration filters [7] in narrow stage. More specifically, in broad stage, dynamic BVHs is used to efficiently localize the potentially colliding regions by traversing precomputed BVHs. In narrow stage, non-penetration filters can be used to reduce the false positives of elementary collision tests for those potentially colliding triangles. Here, false positive means that a collision test is performed, but no collision is found.For fast moving objects and severely deformable objects, the filtering efficiency of dynamic BVHs may significantly degrade due to over-conservativeness of bounding volumes, so that a large number of potentially colliding triangles survive from the broad stage and go to the narrow stage. In the narrow stage, continuous collision detection is performed for a huge number of moving/deforming triangles, which eventually boils down to performing hundreds of thousands or even tens of millions elementary collision tests between triangle primitive features. For example, in our cloth dynamics benchmark (see Fig. 5), the elementary collision tests vary from 13 thousands to 52 millions for each frame through the entire simulation. Given the high number of potentially colliding triangles survived from the broad stage, the use of continuous collision detection can be limited by its higher computational costs than discrete collision detection. We restrict our attention to reducing elementary collision tests in the narrow stage.There are two types of elementary collision tests between two moving/deforming triangles: a vertex against a triangular face (face-vertex test) and an edge against another edge (edge-edge test) [8]. Continuous collision detection for a pair of deforming triangles includes 15 elementary collision tests, including six face-vertex tests and nine edge-edge tests. If none of these 15 elementary tests reports collision, the two triangles do not collide. Otherwise, the earliest time instance among these 15 tests is obtained as the time of contact of the two triangles. Given the high number of elementary collision tests, however, its false positive ratios are typically very high [7]. It reports to be as high as, or often even higher than 95%11Among 100 elementary tests, there are merely less than five real collisions.. For elementary collision tests, false positives refer to the case where face-vertex or edge-edge pairs are tested, but do not actually intersect. In this paper, we derive a fast and low cost algebraic filter that can significantly reduce the false positives and eventually reduce the number of elementary collision tests in the narrow stage.We organize the rest of this paper as follows. The related work is given in Section 2. The filtering problem, its formulation and the main ideas of our algebraic filtering algorithm are described in Section 3. Our filtering algorithm is given in Section 4, which is based on Vincent’s theorem. The implementation details, experimental results and comparisons are given in Section 5. The paper is concluded in Section 6.

@&#CONCLUSIONS@&#
We have presented our non-penetration filter for continuous collision detection using algebraic analysis techniques. Our filter offer various properties and performance advantages. For example, the filter based Vincent theorem can offer a trade off between conservativeness and accuracy by tuning the number of recursions. It can be used in the standard continuous collision detection method that involves cubic-solvers. And it can reduce the false positive ratios of elementary collision detection. Moreover, the proposed filter is complementary to many prior broad culling algorithms for continuous collision detection such as dynamic BVHs [6], continuous normal cones [15], representative-triangles [13], etc. For error-sensitive applications, some complementary error-defending or exact algorithms [20,21] can be applied further.For future work, many optimizations could be carried out to improve the performance of our filter. Many modern microprocessors have SIMD (single instruction, multiple data) instruction sets. These SIMD instructions execute a single operation on multiple values (4, 8 or 16 scalars) in parallel. It would be interesting to design parallel filtering algorithm using streaming SIMD. The presence of many-core processors such as GPUs is becoming ubiquitous and many continuous collision detection algorithms have been implemented on GPUs. It would also be useful to devise the corresponding GPU versions of our filtering algorithm.