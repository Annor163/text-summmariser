@&#MAIN-TITLE@&#
Resource allocation model and double-sphere crowding distance for evolutionary multi-objective optimization

@&#HIGHLIGHTS@&#
We propose a resource allocation model for evolutionary multiobjective optimization.We propose a double-sphere crowding distance for evolutionary multiobjective optimization.Experiments are performed on twelve benchmark problems and one real-world problem.

@&#KEYPHRASES@&#
Multi-objective programming,Evolutionary computations,Resource allocation,Crowding distance,

@&#ABSTRACT@&#
Convergence speed and diversity of nondominated solutions are two important performance indicators for Multi-Objective Evolutionary Algorithms (MOEAs). In this paper, we propose a Resource Allocation (RA) model based on Game Theory to accelerate the convergence speed of MOEAs, and a novel Double-Sphere Crowding Distance (DSCD) measure to improve the diversity of nondominated solutions. The mechanism of RA model is that the individuals in each group cooperate with each other to get maximum benefits for their group, and then individuals in the same group compete for private interests. The DSCD measure uses hyper-spheres consisting of nearest neighbors to estimate the crowding degree. Experimental results on convergence speed and diversity of nondominated solutions for benchmark problems and a real-world problem show the efficiency of these two proposed techniques.

@&#INTRODUCTION@&#
In the real world, a lot of optimization problems may contain several objectives to be optimized at the same time. These optimization problems are known as multi-objective optimization problems (MOPs). Evolutionary algorithms (EAs) have been widely applied to solve MOPs in the past two decades. The Vector Evaluated Genetic Algorithm (VEGA; Schaffer, 1984) was probably the first multi-objective optimization evolutionary algorithm (MOEA). Since the middle 1990s, there have been an increasing number of MOEAs. The Niched Pareto Genetic Algorithm (NPGA; Horn, Nafpliotis, & Goldberg, 1993), the Nondominated Sorting Genetic Algorithm (NSGA; Srinivas & Deb, 1993) and the Strength Pareto Evolutionary Algorithm (SPEA; Zitzler & Thiele, 1999) were representative algorithms. In the past decade, many efficient MOEAs were presented. The typical representatives of these algorithms were the Pareto Archived Evolution Strategy (PAES; Knowles & Corne, 2000), the Pareto Envelope based Selection Algorithm (PESA; Corne, Knowles, & Oates, 2000), the Multi-Objective Messy Genetic Algorithm (MOMGA; Van Veldhuizen & Lamont, 2000), the Micro Genetic Algorithm (MicroGA; Coello Coello & Pulido, 2001), the improved version of NSGA (NSGA-II) with a more efficient nondominated sorting method, elitism, and a crowded comparison operator without specifying any additional parameters for diversity maintaining (Deb, Pratap, Agarwal, & Meyarivan, 2002), the improved version of SPEA (SPEA2) with a revised fitness assignment strategy, a nearest neighbor density estimation technique, and an enhanced archive truncation method (Zitzler, Laumanns, & Thiele, 2002), the Multi-objective Particle Swarm Optimization (MOPSO; Coello Coello, Pulido, & Lechuga, 2004), the Multi-objective Evolutionary Algorithm Based on Decomposition (MOEA/D; Zhang & Li, 2007), the Regularity Model Based Multi-Objective Estimation of Distribution Algorithm (RM-MEDA; Zhang, Zhou, & Jin, 2008), the Evolutionary Multi-Objective Immune algorithm (EMOIA; Tan, Goh, Mamun, & Ei, 2008), and the Fast Hypervolume-Based Many-Objective Optimization (HypE; Bader & Zitzler, 2011).Since MOEAs generally need a large number of iterations to achieve convergence, the processing takes lots of computations. Therefore, how to accelerate the convergence speed is of great importance. In this study, we introduce a Resource Allocation (RA) model based on Game Theory for MOEAs.In addition, simultaneously optimization of multiple objectives is quite different from single objective optimization in that there are a group of nondominated solutions in multi-objective optimization. Each nondonimated solution on Pareto front has its unique physical significance. Generally speaking, it is essential to maintain diversity of the final solution sets. To achieve this purpose, some methods are applied in different MOEAs. The nondominated solutions pruning method based on crowding distance (Deb, Pratap et al., 2002) has been widely used. In our paper, an improved crowding distance based on Double-Sphere is proposed to well reflect the bending degree and spatial information of nondominated individuals.These two novel strategies are then applied to the Nondominated Neighbor Immune Algorithm (NNIA), which was proposed by Gong, Jiao, Du, and Bo (2008). We compare the improved NNIA with NSGA-II, NNIA and MOEA/D in terms of convergence speed and diversity to show the effectiveness of these two strategies.The remainder of this paper is organized as follows: Section 2 briefly describes related background. The RA model and the Double-Sphere Crowding Distance (DSCD) measure and their application in NNIA are presented in Section 3. In Section 4, twelve benchmark MOPs and a real-world problem are used to evaluate the performance of these two proposed strategies. In Section 5, concluding remarks are presented.Multi-objective optimization (Coello Coello, Van Veldhuizen, & Lamont, 2002; Deb, 2001) seeks to optimize a vector of functions,(1)F(x)=(f1(x),…,fm(x))Subjecttox=(x1,x2,⋯,xn)∈Ωwhere Ω is the decision space, F:Ω→Rmis the map of decision space to m real valued objectives space.Take a maximization problem into consideration. It is said that a vectorxA∈Ω dominates another vectorxB∈Ω (written asxA≻xB) if and only if(2)∀i=1,2,…,mfi(xA)⩾fi(xB)∧∃j=1,2,…,mfi(xA)>fi(xB)It is said that a vector of decision valuablesx∗∈Ω is a Pareto-optimal solution or nondonimated solution if there does not exist anotherx∈Ω such thatx≻x∗.Therefore, the Pareto-optimal set is defined as Eq. (3).(3)P∗={x∗∈Ω|¬∃x∈Ω,x≻x∗}Then the Pareto-optimal set is the set of all Pareto-optimal solutions. The corresponding image of them under the objective function space is called the Pareto-optimal front, which can be described as follows:(4)PF∗={F(x∗)=(f1(x∗),f2(x∗),…,fm(x∗))|x∗∈P∗}The purpose of a MOEA is to find a set of Pareto-optimal solutions approximate the true Pareto-optimal front.As is presented in Section 1, many MOEAs have emerged since the middle 1990s. The NNIA, one of the multi-objective optimization algorithms based on Artificial Immune Systems (Chen, Lin, & Ji, 2010; Coello Coello & Cortes, 2005; Hu, 2010; Tan et al., 2008), was presented by us in Gong et al. (2008). In NNIA, we store nondominated individuals found so far in an external population, the dominant population. Only partial less-crowded nondominated individuals, active antibodies, are selected to do proportional cloning, recombination, and hypermutation. Furthermore, the population storing clones is called the clone population. The dominant population, active population, and clone population at time t are presented by time-dependent variable matrices Dt, Atand Ct, respectively. The details of NNIA are described as follows.Nondominated Neighbor Immune AlgorithmInput:Gmax (maximum number of generations)nD(maximum size of dominant population)nA(maximum size of active population)nC(size of clone population)Output:DGmax+1(final approximate Pareto-optimal set)Step 1:Initialization: Generate an initial antibody population B0 with size nD. Create the initial D0=ϕ, A0=ϕ, and C0=ϕ. Set t=0.Step 2:Update Dominant Population: Identify dominant antibodies in Bt. Copy all the dominant antibodies to form the temporary dominant population (denoted by DTt+1). If the size of DTt+1 is not greater than nD, let Dt+1=DTt+1. Otherwise, calculate the crowding distance values of all individuals in DTt+1, sort them in descending order of crowding distance, and choose the first nDindividuals to form Dt+1.Step 3:Termination: If t>Gmax is satisfied, export Dt+1 as the output of the algorithm, Stop; Otherwise, t=t+1.Step 4:Nondominated Neighbor-Based Selection: If the size of Dtis not greater than nA, let At=Dt. Otherwise, calculate the crowding distance values of all individuals in Dt, sort them in descending order of crowding distance, and choose the first nAindividuals to form At.Step 5:Proportional Cloning: Get the clone population Ctby applying proportional cloning to At.Step 6:Recombination and Hypermutation: Perform recombination and hypermutation on Ctand setCt′to the resulting population.Step 7: Get the antibody population Btby combining theCt′and Dt; go to Step 2.The experimental results in Gong et al. (2008) showed that NNIA was an efficient and effective immune-inspired multi-objective optimization algorithm. However, this algorithm might be trapped in local optimal front if current isolated nondominated antibodies selected for proportional cloning were few. In addition, crowding distance-based one-off deletion technique used in NNIA could not supply a perfect distribution of the final approximate solutions.

@&#CONCLUSIONS@&#
