@&#MAIN-TITLE@&#
Pruning method for optimal solutions of int

@&#HIGHLIGHTS@&#
The intm–intndecision making is based on choice value soft sets.Computing choice value soft sets is a heavy load when processing big data.We make characterizations of optimal intm–intndecision sets.We develop a pruning method without computation of choice value soft sets.

@&#KEYPHRASES@&#
Distributed decision making,Soft sets,int,m,–int,n,decision making scheme,Optimal int,m,–int,n,decision sets,Pruning method,

@&#ABSTRACT@&#
This paper aims to find a faster method for optimal solutions of Feng et al.’s intm–intndecision making scheme. We first give theoretical characterizations of optimal decision sets. Then we develop a pruning method which filters out those objects that cannot be elements of any optimal decision sets in the beginning. Experimental results have shown that our method has higher efficiency in computing the optimal solutions of this scheme, particularly when we are processing soft sets with a great quantity of data.

@&#INTRODUCTION@&#
Molodtsov (1999) initiated soft set theory as a new mathematical tool for dealing with uncertainty and vagueness. The theory of soft sets has potential applications in various fields like game theory, operations research, decision making and so on.Many contributions have been made to soft set theory (Ali, Feng, Liu, Min, & Shabir, 2009; Maji, Biswas, & Roy, 2003) and its applications. Some researchers connected soft sets with algebraic structures such as group and semiring (Aktaş & Çağman, 2007; Feng, Jun, & Zhao, 2008; Jun & Park, 2008; Jiang, Tang, Chen, Wang, & Tang, 2010; Jun, Lee, & Khan, 2010a). Soft sets were also combined and compared with other mathematical theories designed for modeling various types of vague concepts (Feng, Li, Davvaz, & Ali, 2010a; Feng, Liu, Leoreanu-Fotea, & Jun, 2011; Jun, Lee, & Park, 2010b; Maji, Biswas, & Roy, 2001; Majumdar & Samanta, 2010; Yang, Lin, Yang, Li, & Yu, 2009). Maji, Roy, and Biswas (2002) initiated study of soft set based decision making. Since then a lot of work have been done on this subject (Çağman & Enginoğlu, 2010a; Feng, Jun, Liu, & Li, 2010b; Feng, Li, & Leoreanu-Fotea, 2010c; Jiang, Tang, & Chen, 2011; Kong, Gao, Wang, & Li, 2008; Roy & Maji, 2007; Xiao, Gong, & Zou, 2009; Xiao, Li, Zhong, & Yang, 2003). In particular, Çağman and Enginoğlu (2010b) initiated uni–int decision making scheme. Without rough sets (Fan, Liu, & Tzeng, 2007; Liang, Wu, & Zhang, 2006) or fuzzy soft sets, this approach could reduce a large set of alternatives according to the criteria given by decision makers. Recently, Feng, Li, and Çagˇman (2012) proposed a generalized work named intm–intndecision making scheme. This method broke some limitations of the uni–int decision making such that the uni–int decision making method became more applicable.The intm–intndecision making method is based on choice value soft sets and ∧-product of choice value soft sets. The construction of these choice value soft sets and their ∧-product is a heavy work to do, particularly when the initial soft sets have large amounts of data. In order to make the intm–intndecision making scheme more convenient in real applications, we propose an efficient algorithm for computing optimal intm–intndecision sets, which does not need computation of the choice value soft sets and the ∧-product of them. Our basic idea is to filter out at first those elements that cannot be elements of any optimal decision sets.The remainder of this paper is organized as follows. Section 2 makes an introduction to basic concepts needed for this paper. In Section 3, we first give characterizations of optimal decision sets and then develop a new method for solutions of intm–intndecision making scheme. Experimental results are proposed in Section 4. At last we conclude this paper and outlook for further research.In this paper, let U be a finite universe of objects and E be a finite universe of parameters related to objects in U. ℘(U) means the power set of U and ∣W∣ means the cardinality of W.Definition 2.1(Molodtsov, 1999) A pair S=(F,A) is called a soft set over U, where A⊆E and F:A→℘(U) is a set-valued mapping. ∀a∈A, F(a) is called the a-approximate set of S.(Maji et al., 2003) Let (F,A) and (G,B) be two soft sets over U. Then (G,B) is called a soft M-subset of (F,A), denoted (G,B)⊆̃M(F,A), if B⊆A and G(b)=F(b) for all b∈B. For convenience, we use (F,B) to mean the soft M-subset of (F,A) when B⊆A.(Feng et al., 2012) Let S=(F,A) be a soft set over U. The functionσS:U→Ndefined by σS(u)=∣{a∣u∈F(a)}∣ is called the choice value function of S.Suppose S=(F,A) is a soft set over U, u∈U. By Molodtsov (1999), if u is one maximum point of the choice value function σS, then u is said an optimal solution of S.(Maji et al., 2003) If S=(F,A) and T=(G,B) are two soft sets over a common universe U, then the ∧-product of S and T, denoted S∧T, is defined by S∧T=(H,A×B), where H(x,y)=F(x)∩G(y) for all (x,y)∈A×B.(Feng et al., 2012) Let S=(F,A) be a soft set over U. Denote NA={1,2,…,∣A∣}. The choice value soft set of S is a soft set Γ(S)=(γS,NA) over U, where γS:NA→℘(U) is given by γS(n)={u∈U∣σS(u)⩾n}.(Feng et al., 2012)Let S=(F,A) be a soft set over U, B⊆A. For u∈U and a positive integer k, we say that u k-satisfies B, denotedu⊨SkB, if there exists B1⊆B such that ∣B1∣=k and ∀e∈B1,u∈F(e).(Feng et al., 2012)Let S=(F,A) and T=(G,B) be two soft sets over U. For positive integers m,n, define intm–intndecision set of S∧T asintxmintyn(S∧T)∪intymintxn(S∧T), denoted intm–intn(S∧T), where(i)intxmintyn(S∧T)={u∈U|u⊨SmA,u⊨TnB};intymintxn(S∧T)={u∈U|u⊨TmB,u⊨SnA}.(Feng et al., 2012) Let S=(F,A) and T=(G,B) be two soft sets over U. Then a nonempty subset Q of U is called an optimal decision set of S∧T, if there exist two positive integers m,n such that(i)Q=intm–intn(S∧T);there do not exist positive integers k, t such that k+t>m+n and intk–intt(S∧T)≠∅.A uni–int decision making method was initiated by Çağman and Enginoğlu (2010b). With the concept of choice value soft sets, Feng et al. (2012) proposed a generalized work named intm–intndecision making scheme as shown in Algorithm 1.Algorithm 1intm–intndecision making scheme by Feng et al. (2012)Input Initial soft sets S=(F,A) and T=(G,B).Step 1 Compute the corresponding choice value soft sets Γ(S)=(γS,NA), Γ(T)=(γT,NB).Step 2 Compute the ∧-product Γ(S)∧Γ(T)=(Π,NA×NB).Step 3 ∀1⩽m,n⩽max{∣A∣,∣B∣}, compute intm–intndecision sets of S∧T by u∈intm–intn(S∧T) if and only if u∈Π(m,n) or u∈Π(n,m).Step 4 Find out the set of optimal intm–intndecision sets.Output Optimal intm–intndecision sets with smallest cardinality (Optimal Solutions).The intm–intndecision making scheme can integrate two peoples’ points of view which are modeled by soft sets. In order to show how the Algorithm 1 works, we quote the Example 5.17 proposed in the paper by Feng et al. (2012) as follows:Example 2.1When a couple buy a house, they may be concerned in different parameters such as its price, surroundings and so on. Even for the same parameter that both of them are interested in, they may have different opinions. We can help them make a decision with the intm–intndecision making scheme. Suppose the set of houses on sale is U={h1,h2,h3,h4,h5}. These houses are characterized by a set of parameters E={e1,e2,e3,e4,e5}. Assume the parameters that the two people want to consider are A={e2,e3, e4} and B={e1,e3,e5}, respectively. Their points of view can be modeled by soft sets S=(F,A) and T=(G,B): F(e2)={h2,h3,h4,h5}, F(e3)={h1,h3},F(e4)={h1, h2,h5}; G(e1)={h1,h2}, G(e3)={h1,h3,h4}, G(e5)={h2,h3,h4,h5}. Here, we omit the details for parameters. For instance, h2∈F(e2) means that the first people is satisfied with h2 for parameter e2. According to Algorithm 1, we need to compute•The choice value soft sets Γ(S)=(γS,NA), Γ(T)=(γT,NB): γS(1)=U, γS(2)={h1,h2,h3,h5}, γS(3)=∅; γT(1)=U, γT(2)={h1,h2,h3,h4}, γT(3)=∅.The ∧-product Γ(S)∧Γ(T)=(Π, NA×NB). Π(1,1)=U, Π(1,2)={h1,h2,h3, h4}, Π(1,3)=∅, Π(2,1)={h1,h2,h3,h5}, Π(2,2)={h1,h2,h3}, Π(2,3)=Π(3,1)=Π(3,2)=Π(3,3)=∅.The pairs (m,n) such that intm–intn(S∧T) is nonempty: (1,1), (1,2), (2,1), (2,2).The optimal decision sets: int2–int2(S∧T)={h1,h2,h3}.Therefore, int2–int2(S∧T) is the final solution. The couple can buy one of {h1,h2,h3}.Remark 2.1The concepts of choice value soft sets and ∧-product of soft sets are very important for a clear representation of the intm–intndecision making scheme. But it is implied from Example 2.1 that the computation of choice value soft sets and the ∧-product of them is a heavy load to do when the soft sets S and T have a large quantity of data.Motivated by the Remark 2.1, in this section we are going to give a new algorithm which provides an optimized procedure for computing optimal decision sets.Let S=(F,A) be a soft set over U. If ⋃a∈AF(a)=U, then we say the soft set S=(F,A) is full (Feng et al., 2012). From now on, S=(F,A) and T=(G,B) are supposed to be full soft sets over U without specific explanation. DenoteV={uk|σS(uk)+σT(uk)=⋁ui∈U(σS(ui)+σT(ui))}. Define relation R on V as follows: uiRujif and only if (σS(ui), σT(ui))=(σS(uj), σT(uj)) or (σS(ui), σT(ui))=(σT(uj), σS(uj)). It is easy to see that R is an equivalent relation on V. Thus ∀v∈V, we can compute [v]R, i.e., {u∈V∣uRv}.By Definitions 2.7 and 2.8, it is easy to get the following Lemma 3.1.Lemma 3.1Let S=(F,A) and T=(G,B) be full soft sets over U. ∀ u∈U, we have(i)u⊨SkAif and only if k⩽σS(u);if u∈intm–intn(S∧T), then σS(u)+σT(u)⩾m+n;u∈intσS(u)-intσT(u)(S∧T);if u∈intm–intn(S∧T) and intm–intn(S∧T) is an optimal decision set, then u∈V.Denote the set of optimal decision sets of S∧T by ODS, then(3.1)ODS={[v]R|v∈V}.According to Lemma 3.1 (iv), it suffices to show that ∀uk∈V, [uk]Requals to an optimal decision set.Let m=σS(uk), n=σT(uk), by Lemma 3.1(iii), uk∈intm–intn(S∧T). By the definition of R, it is obvious that [uk]R⊆intm–intn(S∧T). Next we try to prove that intm–intn(S∧T)⊆[uk]R.Assume that there exists u∈intm–intn(S∧T) but u∉[uk]R, thenu∈intxmintyn(S∧T)oru∈intymintxn(S∧T). By Lemma 3.1(ii), we have σS(u)+σT(u)⩾m+n. Sincem+n=⋁ui∈U(σS(ui)+σT(ui)), we get σS(u)+σT(u)=m+n.•when m>n, we have the following three sub-situations:(1)n<m⩽σS(u) and σT(u)⩽n<m;n<σS(u)<m and n<σT(u)<m;σS(u)⩽n<m and n<m⩽σT(u).when m⩽n, similarly with the situation when m<n, we have u∉intm–intn(S∧T). So we get a contradiction. Thus [uk]R=intm–intn(S∧T). Sincem+n=⋁ui∈U(σS(ui)+σT(ui)), intm–intn(S∧T) must be optimal. The proof is over.□Theorem 3.1 is a characterization for optimal decision sets of S∧T. It is implied that•V is equal to the union of optimal decision sets.The number of optimal decision sets is equal to ∣{[v]R∣v∈V}∣.Different optimal decision sets must be pairwisely disjoint.The relationship between the intm–intndecision making scheme and the decision making scheme in Definition 2.4 by Molodtsov (1999) can be represented by bringing in a new concept as follows.Suppose S=(F,A), T=(G,B) are two soft sets over U, define the disjoint union of S and T as S⊔T=(I,C), where(i)C={(e,S)∣e∈A}∪{(e,T)∣e∈B};I(e,S)=F(e), I(e,T)=G(e).The union of optimal decision sets of S∧T is equal to the set of optimal solutions (byDefinition 2.4) of the disjoint union S⊔T.Consider the soft sets S and T in Example 2.1, by Corollary 3.1 it can be inferred from Table 1that the union of optimal decision sets of S∧T is equal to V={h1,h2,h3}.Given a soft set S=(F, A) over U, u in U, the set {e∣u is in F(e)} is called the support of parameters for u.Remark 3.3Theorem 3.1 also tells us the connections between the optimal decision sets and the soft M-subset (Π,D) of ΓS∧ΓT, whereD={(m,n)∈NA×NB|m+n=⋁ui∈U(σS(ui)+σT(ui))}. ∀u,v∈U, with respect to (Π,D), we have(i)u belongs to one optimal decision set if and only if u has a support of parameters which contains only one element.u and v belong to the same optimal decision set if and only if they have the same support of parameters.Consider the soft sets S and T in Example 2.1, we have D={(2,2), (1,3), (3,1)}. Π(2,2)={h1,h2,h3}. Π(1,3)=Π(3,1)=∅. The supports of parameters for houses h1, h2,h3 are all equal to {(2,2)}.By computing the set V, we prunes away those elements that cannot be elements of any optimal decision sets. Inspired by this, we give a pruning method for optimal solutions of the intm–intndecision making scheme. See Algorithm 2.Pruning method for the solving of intm–intndecision making schemeInput Initial soft sets S=(F,A) and T=(G,B).Step 1 ∀ui∈U, Compute σS(ui), σT(ui), σS(ui)+σT(ui) and subset V of U.Step 2 Compute {[uk]R∣uk∈V}.Output The [uk]Rwith smallest cardinality (Optimal Solutions).Let us solve the problem in Example 2.1 according to our method.•⋁hi∈U(σS(hi)+σT(hi))=4, V={h1,h2,h3}.(σS(h1), σT(h1))=(σS(h2), σT(h2))=(σS(h3), σT(h3))=(2,2). So there is only one optimal decision set: [h1]R={h1,h2,h3}.Therefore, {h1,h2,h3} is the optimal decision set with smallest cardinality.

@&#CONCLUSIONS@&#
