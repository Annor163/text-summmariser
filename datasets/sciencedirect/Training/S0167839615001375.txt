@&#MAIN-TITLE@&#
Matrix weighted rational curves and surfaces

@&#HIGHLIGHTS@&#
We extend rational curves and surfaces that have real weights to rational curves and surfaces permitting matrix weights.Matrix weighted rational curves and surfaces maintain many similar properties or algorithms of traditional rational curves and surfaces.The matrix weights permit novel geometric means for shape control of rational curves and surfaces.Matrix weighted NURBS curves and surfaces are suitable for curve or surface reconstruction with no need of solving large systems.

@&#KEYPHRASES@&#
Rational curves and surfaces,Matrix weight,Control normals,Surface reconstruction,

@&#ABSTRACT@&#
Rational curves and surfaces are powerful tools for shape representation and geometric modeling. However, the real weights are generally difficult to choose except for a few special cases such as representing conics. This paper presents an extension of rational curves and surfaces by replacing the real weights with matrices. The matrix weighted rational curves and surfaces have the same structures as the traditional rational curves and surfaces but the matrix weights can be defined in geometric ways. In particular, the weight matrices for the extended rational Bézier, NURBS or the generalized subdivision curves and surfaces are computed using the normal vectors specified at the control points. Similar to the effects of control points, the specified normals can be used to control the curve or the surface's shape efficiently. It is also shown that matrix weighted NURBS curves and surfaces can pass through their control points, thus curve or surface reconstruction by the extended NURBS model no longer needs solving any large system but just choosing control points and control normals from the input data.

@&#INTRODUCTION@&#
In Computer Aided Geometric Design, rational curves and surfaces like(1)R(ξ)=∑iωiPiϕi(ξ)∑iωiϕi(ξ),ξ∈ΞwherePiare the control points,ωiare the scalar weights andϕi(ξ)are the blending functions defined on a 1D or 2D domain, are powerful tools for shape representation, modeling and reconstruction. Particularly, polynomial or rational Bézier curves and surfaces, NURBS (non-uniform rational B-spline) curves and surfaces and the generalized subdivision surfaces are widely used in CAD or computer animation industry (Farin, 2001; DeRose et al., 1998; Müller et al., 2006). As its compact representation of freeform as well as analytical curves and surfaces, NURBS has even become de facto industry standard in CAD commercial software (Piegl and Tiller, 1997).Except for representing typical curves or surfaces such as conics or rotational surfaces, the potentials of rational curves and surfaces have not been explored thoroughly for geometric modeling. One possible reason is due to the limitations of the current representation. Generally, the geometric meaning of weights of rational curves and surfaces is not as clear as their control points. High order rational curves and surfaces are useful for high quality shape modeling (Cashman et al., 2009), but how to construct them is not as clear as desired. Rational curves and surfaces are also promising for shape reconstruction from scanned data but the determination of the weights is not a simple task (Xie et al., 2012). If some differential quantities or sharp features should be considered, the reconstruction of curves and surfaces becomes nonlinear and optimization techniques have to be employed (Gofuku et al., 2009; Wu et al., 2013; Ma et al., 2015).A geometric approach to construct rational curves and surfaces is the technique of dual Bézier curves and surfaces which treat the Bézier control points as control lines or control planes (Hoschek, 1983). Rational Bézier curves and surfaces are obtained as the envelopes of the dual Bézier curves or the dual Bézier surfaces. Even this is usually feasible, the denominator of an obtained rational Bézier curve or surface may vanish when the initial control lines or control planes have not been properly given. Another interesting extension of rational Bézier curves is complex rational Bézier curves (Sánchez-Reyes, 2009). Complex rational Bézier curves replace the scalar weights of the classical rational Bézier curves by complex numbers and several typical plane curves can be represented by complex rational Bézier curves of lower degrees. However, complex rational Bézier curves only lie in 2D space. Other interesting extensions of Bézier or NURBS curves and surfaces include plus curves and surfaces which use parameterized control lines (Goshtasby, 2005), curves and surfaces with basis functions that contain shape parameters (Juhász and Róth, 2013) or spline curves and surfaces with added geometric details controlled by vectors (Kosinka et al., 2015).In this paper we present extended representation models of rational curves and surfaces with the following goals: (1) The new models maintain the same structures as the usual ones; (2) The new models are compatible with the traditional rational curves and surfaces; (3) The new weights permit geometric definitions and can be used for easy shape editing; (4) Curve or surface reconstruction using the extended rational models is simple and direct.A rational curve or surface inRdcan be regarded as the perspective projection of a non-rational curve or surface inRd+1(Farin, 1999). Similarly, we define rational curves and surfaces inRdby the mapping of homogeneous curves or homogeneous surfaces inR(d+1)×d. Concretely, we should only replace the scalar weights in Equation (1) withd×dmatrices. If the denominator matrix function is non-singular over the whole parameter domain, a matrix weighted rational curve or surface will be obtained. It is clear that the extended rational curves and surfaces have the same structures as the traditional ones. If all the weight matrices are defined by multiplying a set of real numbers with the same non-singular matrix, the matrix weighted rational curve or surface will degenerate to a conventional rational curve or surface.To achieve the third or even the fourth goal, we propose to compute the weight matrices based on normal vectors and real numbers specified at the control points of the curves or the surfaces. This is motivated by the observation that a rational curve or surface is in fact the solution to least-squares fitting to the control points with weights given by a set of basis functions. If we fit a curve or a surface to the points as well as to a set of lines or planes that pass through the points, we obtain a rational curve or a rational surface with matrix weights. These curves and surfaces can be controlled using control points together with control normals. Moreover, matrix weighted NURBS curves and surfaces can even pass through their control points, thus curve or surface reconstruction by the proposed models becomes easy because the control points of the reconstructed curve or surface should only be selected from the input data.As the popular subdivision schemes proposed by Catmull and Clark (1978), Doo and Sabin (1978) or Loop (1987) are just the generalized B-spline surfaces with arbitrary topology control meshes, they can be extended to matrix weighted rational subdivision surfaces and the shapes of the extended subdivision surfaces can be controlled using control points and control normals. Similarly, other B-spline or NURBS compatible subdivision surfaces, for example the schemes in Sederberg et al. (1998), Stam (2001), Schaefer and Goldman (2009), can be generalized to matrix weighted rational subdivision surfaces too.The paper is structured as follows. Section 2 presents the general definition and basic properties of matrix weighted rational curves and surfaces. More details about matrix weighted rational Bézier curves and matrix weighted NURBS curves are given in Section 3 and Section 4, respectively. Section 5 is devoted to matrix weighted rational parametric surfaces and matrix weighted rational subdivision surfaces. In Section 6 we present several interesting examples to show the potential applications of the proposed models. Section 7 concludes the paper.In this section we present the definition of general matrix weighted rational curves and surfaces. A method for defining the weight matrices using specified normals and some basic properties of the obtained curves and surfaces will also be given.Assume thatP0,P1,…,Pnare a sequence or a set of points lying inRdandMi∈Rd×d,i=0,1,…,nare a set of known matrices. Suppose thatϕi(t)≥0,i=0,1,…,nare a set of blending functions defined over a 1D or 2D domain Ξ. If the matrix functionM(ξ)=∑i=0nMiϕi(ξ)is non-singular for anyξ∈Ξ, a valid matrix weighted rational curve or surface is given by(2)Q(ξ)=[∑i=0nMiϕi(ξ)]−1∑i=0nMiPiϕi(ξ),ξ∈ΞParticularly, if we chooseMi=ωiW, whereωi∈R,i=0,1,…,nand W is ad×dmatrix that satisfies|W|≠0, the matrix weighted rational curve or surfaceQ(ξ)will degenerate to a conventional rational curve or surface as given by Equation (1).Though there may exist many methods for defining the weight matrices for matrix weighted rational curves and surfaces, we present here a geometric approach to compute them. Suppose thatni,i=0,1,…,nare a set of unit normal vectors andωi>0,μi>−1,i=0,1,…,nare a set of real numbers. The weight matrices forQ(ξ)are defined as follows(3)Mi=ωi(I+μininiT),i=0,1,…,nwhere I is thed×didentity matrix. Before we derive the condition when a matrix weighted rational curve or surface is valid, we have the following theorem.Theorem 2.1Suppose thatni∈Rd,i=0,1,…,nare a set of unit vectors,ωi>0,μi>−1,i=0,1,…,nare real numbers andMiare the matrices defined by Equation(3). The matrixMs=∑i=0nsiMi, where the coefficients satisfysi≥0and∑i=0nsi>0, is non-singular.To prove the theorem we prove that the determinant of matrixMsis greater than zero. Letθi=ωisi, the matrixMscan be reformulated asMs=∑i=0nθi(I+μininiT). Assuming that λ is an arbitrary eigenvalue and v is the corresponding eigenvector of the matrix, it yields thatλv=[∑i=0nθi(I+μininiT)]v=∑i=0nθi(v+μiaini),whereai=niTv,i=0,1,…,n. Dotting either side of above equation by vector v, we haveλ=∑i=0nθi(1+μiai2).As|ai|=|niTv|≤1andμi>−1,i=0,1,…,n, it can be concluded thatλ>0. Since the matrixMsis symmetric and has d eigenvalues, namelyλ1,λ2, …,λd, we have|Ms|=∏i=1dλi>0. This proves the theorem.  □From Theorem 2.1 we know that if the blending functionsϕi(ξ)are non-negative and linear independent over the parameter domain, the matrix weighted rational curve or surfaceQ(ξ)given by Equation (2) is valid.From a geometric point of view, a rational curve or a rational surface is the solution to the weighted least squares fitting to the control points with weights chosen as the scaled blending functions. It can be shown that a matrix weighted rational curve or surface with weight matrices defined by Equation (3) is the solution to the weighted least squares fitting to the control points and lines/planes that pass through the points. For a set of given pointsPi, normal vectorsniand coefficientsωi>0,μi>−1,i=0,1,…,n, let(4)F(Q(ξ))=∑i=0nωiϕi(ξ)[Q(ξ)−Pi]2+∑i=0nωiμiϕi(ξ)[(Q(ξ)−Pi)⋅ni]2.By minimizing the functionalF(Q(ξ))we have(5)∂F(Q(ξ))∂Q(ξ)=∑i=0nωiϕi(ξ)[Q(ξ)−Pi]+∑i=0nωiμiϕi(ξ)niniT(Q(ξ)−Pi)=0.Solving Equation (5) we obtain the matrix weighted rational curve or matrix weighted rational surfaceQ(ξ)with weight matrices defined by Equation (3). Clearly, if allμivanish, the solution to Equation (5) is a conventional rational curve or a conventional rational surface. Similar to the effects of control pointsPi, the normalsnican be used to control the curve or surface's shape efficiently. We therefore refer the normals as the control normals of the curves or surfaces.Matrix weighted rational curves and surfaces maintain several fundamental properties of traditional rational curves and surfaces. These properties are useful for shape modeling using the proposed models of curves and surfaces. We state the following two properties for the matrix weighted rational curves but similar properties hold for the matrix weighted rational surfaces.Property 2.2Geometric invarianceThe shape of a matrix weighted rational curve is invariant under the translation or uniform scaling of all control points. Moreover, if the weight matrices are defined by Equation(3), the shape of the curve is also invariant under the rotation of the coordinate system.We first prove the geometric invariance under the translation or uniform scaling of the control points. Suppose that a matrix weighted rational curve is represented by Equation (2). SinceQ0=[∑i=0nMiϕi(ξ)]−1∑i=0nMiQ0ϕi(ξ),we haveQ(ξ)+Q0=[∑i=0nMiϕi(ξ)]−1∑i=0nMi(Pi+Q0)ϕi(ξ).This proves that the shape of a matrix weighted rational curve is invariant under the translation of control points. For a nonzero real number s we havesQ(ξ)=[∑i=0nMiϕi(ξ)]−1∑i=0nMisPiϕi(ξ),which proves the geometric invariance under the uniform scaling of the control points.We next prove the geometric invariance under the rotation of the coordinate system. Suppose thatA∈Rd×dis a rotation matrix. It yields thatAAT=IandA−1=AT. By multiplying A on either side of the expression ofQ(ξ), we haveAQ(ξ)=A[∑i=0nωi(I+μininiT)ϕi(ξ)]−1A−1A∑i=0nωi(I+μininiT)ATAPiϕi(ξ)=[A∑i=0nωi(I+μininiT)ϕi(ξ)A−1]−1∑i=0nωi(AAT+μiAniniTAT)APiϕi(ξ)={∑i=0nωi[I+μiAni(Ani)T]ϕi(ξ)}−1∑i=0nωi[I+μiAni(Ani)T]APiϕi(ξ).ThusAPiandAniare the control points and control normals ofAQ(ξ). The proposition is proven.  □Property 2.3Effects of weightsSuppose thatQ(ξ)is a matrix weighted rational curve defined by Equation(2)and the weight matrices are defined by Equation(3). The curveQ(ξ)will be approximate tangent to the line or the plane that passes through pointPi0with normal vectorni0when the parameterμi0approaches infinity. Ifωi0approaches infinity, the points onQ(ξ)will approach the control pointPi0.From the definition of the functionalF(Q(ξ))we know that ifμi0approaches infinity the termϕi(ξ)[(Q(t)−Pi0)⋅ni0]2will approach zero for anyξ∈support(ϕi(ξ))⋂Ξwhen the functionalF(Q(ξ))is minimized. As(Q(ξ)−Pi0)⋅ni0approaches zero, the curveQ(ξ)will be approximate tangent to the line (d=2) or to the plane (d≥3) that passes through pointPi0with normalni0. Similarly, ifωi0approaches infinity, the term(Q(ξ)−Pi0)2withξ∈support(ϕi(ξ))⋂Ξwill approach zero too and the point on curveQ(ξ)will approach the control pointPi0.  □A matrix weighted rational Bézier curve of degree n is defined by(6)Q(t)=[∑i=0nMiBi,n(t)]−1∑i=0nMiPiBi,n(t),t∈[0,1]whereBi,n(t)=n!i!(n−i)!ti(1−t)n−iare the Bernstein basis functions. Based on Theorem 2.1 we know that the matrix weighted rational Bézier curve is valid when the weight matrices are given by Equation (3).Besides the basic properties stated in Section 2, matrix weighted rational Bézier curves have some other elegant properties due to the special basis functions.Property 3.1End propertyA matrix weighted rational Bézier curve of degree n interpolates two end control points. If the weight matrices satisfyM0=M1andMn−1=Mn, the derivatives of the curve at two ends are parallel to the two end control legs.Suppose that a matrix weighted rational Bézier curveQ(t)is defined by Equation (6). Substitutingt=0into the equation, we haveQ(0)=[∑i=0nMiBi,n(0)]−1∑i=0nMiPiBi,n(0)=M0−1M0P0=P0.Similarly, we haveQ(1)=Pn.DenotingPM(t)=∑i=0nMiPiBi,n(t)andM(t)=∑i=0nMiBi,n(t), the matrix weighted rational Bézier curve becomesQ(t)=M−1(t)PM(t). Thus the derivative ofQ(t)can be obtained asQ′(t)=M−1(t)[PM′(t)−M′(t)Q(t)].IfM0=M1andMn−1=Mn, we haveM′(0)=M′(1)=0. Therefore, the derivatives of the matrix weighted rational Bézier curve at two ends are obtained asQ′(0)=M−1(0)[PM′(0)−M′(0)Q(0)]=n(P1−P0),Q′(1)=M−1(1)[PM′(1)−M′(1)Q(1)]=n(Pn−Pn−1).The proposition is proven.  □Property 3.2ConversionA matrix weighted Bézier curve of degree n inRdcan be converted to a rational Bézier curve of degree dn.LetM(t)be the matrix function of degree n as defined in Equation (6). The inverse ofM(t)is computed by[M(t)]−1=M⋆(t)/|M(t)|, whereM⋆(t)represents the adjoint matrix ofM(t)and|M(t)|is the determinant of the matrix function. The matrix weighted rational Bézier curveQ(t)can be reformulated asQ(t)=M⋆(t)∑i=0nMiPiBi,n(t)/|M(t)|. With simple computation, both the numerator and denominator can be formulated as Bézier functions of degree dn. Therefore, the matrix weighted rational Bézier curveQ(t)is a rational Bézier curve of degree dn by reformulation.  □Even though matrix weighted rational Bézier curves can be reformulated as traditional rational Bézier curves, the former ones own the advantages of lower degrees and smaller numbers of control points. A curve with fewer control points can be edited more easily and the control normals can help to model straight or flat features very well. Fig. 1(a) illustrates a matrix weighted rational Bézier curve of degree 10 with weight matrices computed by the specified control normals. By choosing allωi=μi=1except forμ2=μ5=μ8=20a bottle like shape with flat bottom and straight sides is generated. When the curve has been transformed into a rational Bézier curve of degree 20, the shape of the control polygon differs significantly with that of the curve; see Fig. 1(b). From the figure we also learn that a matrix weighted rational Bézier curve may not lie in the convex hull of its control polygon. The convex hull of a matrix weighted rational Bézier curve can be obtained by converting it to a rational Bézier curve or some other methods.A point on a matrix weighted rational Bézier curveQ(t)=M−1(t)PM(t)can be obtained by computing the matrixM(t)and pointPM(t)using the traditional de Casteljau algorithm. Alternatively, the point can also be obtained by applying a matrix rational de Casteljau algorithm which is similar to the rational algorithm for robust computation of points on rational Bézier curves (Farin, 2001). For a matrix weighted rational Bézier curve as defined by Equation (6), the matrix rational de Casteljau algorithm begins with the initializationMi[0](t)=MiandQi[0](t)=Pifori=0,1,…,nand computes the intermediate matrices and pointsMi[r](t)=(1−t)Mi[r−1](t)+tMi+1[r−1](t),Qi[r](t)=[Mi[r](t)]−1[(1−t)Mi[r−1](t)Qi[r−1](t)+tMi+1[r−1](t)Qi+1[r−1](t)]forr=1,2,…,nandi=0,1,…,n−r. Finally, the point is obtained asQ(t)=Q0[n](t). It is noticed that pointsQi[r](t),Qi[r−1](t)andQi+1[r−1](t)may not lie on the same line and the point evaluation by the matrix rational de Casteljau algorithm may no longer be a corner cutting process.Degree elevation of a matrix weighted rational Bézier curve is also similar to that of the conventional rational Bézier curves. Assume thatM−1andMn+1are zero matrices. LetM‾i=in+1Mi−1+(1−in+1)MiandP‾i=[in+1Mi−1+(1−in+1)Mi]−1[in+1Mi−1Pi−1+(1−in+1)MiPi],i=0,1,…,n+1. A matrix weighted rational Bézier curveQ(t)can be represented asQ(t)=[∑i=0nMiBi,n(t)]−1∑i=0nMiPiBi,n(t)=[∑i=0n+1M‾iBi,n+1(t)]−1∑i=0n+1M‾iP‾iBi,n+1(t).By the same reason as the matrix rational de Casteljau algorithm, degree elevation of matrix weighted rational Bézier curves is generally not a corner cutting process either.Suppose thatPi∈Rd,i=0,1,…,nare a sequence of given points,Mi∈Rd×d,i=0,1,…,nare a set of given matrices. Lett={t0,t1,…,tn+k}be a non-decreasing sequence and no k numbers are the same except for at two ends, a matrix weighted NURBS curve of order k (degreek−1) is defined by(7)Q(t)=[∑i=0nMiNi,k(t)]−1∑i=0nMiPiNi,k(t),t∈[tk−1,tn+1]whereNi,k(t),i=0,1,…,nare the B-splines defined on the knot vector t. Particularly, the matrix weighted NURBS curve is valid when the weight matrices are defined by Equation (3).LetM(t)=∑i=0nMiNi,k(t)andPM(t)=∑i=0nMiPiNi,k(t). Both the matrixM(t)and the pointPM(t)can be computed by the deBoor–Cox algorithm. Then, the corresponding point on the matrix weighted NURBS curveQ(t)can be obtained asQ(t)=M−1(t)PM(t)and the derivative ofQ(t)can be computed byQ′(t)=M−1(t)[PM′(t)−M′(t)Q(t)], wherePM′(t)andM′(t)are the derivatives of the corresponding B-spline curve or the B-spline matrix function. Alternatively, the pointQ(t)can also be evaluated using the matrix rational deBoor–Cox algorithm, just as the rational deBoor–Cox algorithm for a NURBS curve (Farin, 2001).In addition to the basic properties stated in Section 2, matrix weighted NURBS curves maintain a few similar properties as NURBS curves.Property 4.1Continuity orderA matrix weighted NURBS curve of order k is infinitely differentiable on the interior of knot spans andk−1−ptimes differentiable at a knot of multiplicity p.Property 4.2End interpolationIf the knot vector of a matrix weighted NURBS curveQ(t)satisfiest0=t1=…=tk−1andtn+1=tn+2=…=tn+k, we haveQ(tk−1)=P0andQ(tn+1)=Pn. Moreover, ifM0=M1andMn−1=Mn, we also haveQ′(tk−1)=k−1tk−t1(P1−P0)andQ′(tn+1)=k−1tn+k−tn(Pn−Pn−1).Property 4.3Local approximationThe movement of control pointPior the change of weight matrixMionly changes the curve defined on intervalt∈[ti,ti+k). Ift∈[tl,tl+1), the expression for the matrix weighted NURBS curve is simplified asQ(t)=[∑i=l−k+1lMiNi,k(t)]−1∑i=l−k+1lMiPiNi,k(t).Similar to the conversion of matrix weighted rational Bézier curves, matrix weighted NURBS curves can be converted to the traditional NURBS curves.Property 4.4Conversion to NURBSA matrix weighted NURBS curve of order k inRdcan be converted to a NURBS curve of orderd(k−1)+1.Besides matrix weighted NURBS curves of degree one that interpolate all of their control points, matrix weighted NURBS curves of higher degrees can interpolate selected control points when the control normals and scalar weights are properly given.Property 4.5Almost-interpolationAssume thatk>2is an integer andl=⌊k−12⌋, where ⌊⌋ represents the integer part of a number. Letλq+j=Nq+j,k(tq+k2),j=±1,±2,…,±l, whereNi,k(t)are the uniform B-splines of order k andtq+k2=12(tq+tq+k). Suppose that L is the line that passes through pointPqwith directionnqon a plane, and pointsPq+jand normalsnq+j,j=±1,…,±lsymmetrically lie on two sides of the line L on the plane. If the weightsμq+j,j=±1,±2,…,±lare all chosen as(8)μ=∑|j|=1lλq+jnqT(Pq−Pq+j)∑|j|=1lλq+jnqTnq+jnq+jT(Pq+j−Pq),the matrix weighted NURBS curve with weight matricesMi=(I+μininiT)passes through pointPqatt=tq+k2.Suppose that a matrix weighted NURBS curveQ(t)passes through pointPqatt=tq+k2, it requires thatQ(tq+k2)=Pq. SinceQ(t)satisfies Equation (5), we have∑i=0nNi,k(tq+k2)(Pq−Pi)+∑i=0nμiNi,k(tq+k2)niniT(Pq−Pi)=0.By deleting all the vanishing terms and lettingμi=μ, we have∑|j|=1lλq+j(Pq−Pq+j)+μ∑|j|=1lλq+jnq+jnq+jT(Pq−Pq+j)=0.Dotting either side of the equation bynqwe have a unique solution of μ given by Equation (8). As pointsPq+jand normalsnq+j,j=±1,…,±lsymmetrically lie on two sides of the line L, the above steps can be reversed, which proves the proposition.  □We are interested in the computation of parameter μ for matrix weighted NURBS curves of order 3 or 4. Ifk=3ork=4, we havel=⌊k−12⌋=1andλq−1=λq+1. Particularly, if pointsPq+jand unit normalsnq+j,j=−1,0,1are uniformly sampled from a circular arc, it can be further verified thatnqT(Pq−Pq−1)=nqT(Pq−Pq+1)andnqT(Pq−Pq+j)=nq+jT(Pq+j−Pq)forj=−1,1. As a result, the formula for parameter μ is simplified as(9)μ=2nqTnq−1+nqTnq+1=|N1(q)|∑j∈N1(q)nqTnj,whereN1(q)represents the index set of 1-ring neighbor points of pointPqand|N1(q)|is the valence of pointPq. We will use this latter formula to compute the local parameter μ for defining the weight matrices for surface reconstruction by low order matrix weighted NURBS surfaces or low order matrix weighted rational subdivision surfaces.Fig. 2illustrates an example of curve reconstruction by matrix weighted NURBS. The input 200 points were sampled from a spiral spline which has four pieces of monotone curvature plots. To reconstruct a smooth curve we first chose 30 points from the original data and compute normal vectors for the chosen points based on the input data. By using these points and normals as control points or control normals and computing the weight matrices by Equation (3) and Equation (8), matrix weighted NURBS curves of degree 1, 3 or 10 are generated. Even though the matrix weighted NURBS curve of degree 1 is onlyC0continuous at the joint points, it is still visually smooth; see Fig. 2(a). The matrix weighted NURBS curves of higher degrees can achieve higher orders of smoothness and improved fairness as well; see Figs. 2(b) and (c) for the reconstruction results.This section presents the extensions of Bézier surfaces and NURBS surfaces to matrix weighted rational surfaces. Several popular subdivision surfaces which are also the generalized B-spline surfaces with arbitrary topology control meshes will be extended to matrix weighted rational subdivision surfaces.Similar to the extensions of Bézier or NURBS curves, rectangle Bézier surfaces and NURBS surfaces can be extended to matrix weighted rational surfaces directly. AssumingPij,i=0,1,…,m;j=0,1,…,nare a set of given points inRd,Mij,i=0,1,…,m;j=0,1,…,nare a set of given matrices inRd×d, a matrix weighted rational Bézier surface is defined by(10)Q1(s,t)=[∑i=0m∑j=0nMijBi,m(s)Bj,n(t)]−1∑i=0m∑j=0nMijPijBi,m(s)Bj,n(t),(s,t)∈[0,1]2With the same set of control points and weight matrices, a matrix weighted NURBS surface is obtained as(11)Q2(u,v)=[∑i=0m∑j=0nMijNi,k1(u)Nj,k2(v)]−1∑i=0m∑j=0nMijPijNi,k1(u)Nj,k2(v),(u,v)∈[uk1−1,um+1]×[vk2−1,vn+1],whereNi,k1(u)andNj,k2(v)are the B-splines defined on knot vectoru={u0,u1,…,um+k1}orv={v0,v1,…,vn+k2}, respectively.Besides the rectangle Bézier patches, triangular Bézier patches can also be generalized to matrix weighted rational Bézier triangles. Suppose thatPijk,0≤i,j,k≤n,i+j+k=nare the given control points andMijkare the corresponding weight matrices. A matrix weighted rational triangular Bézier patch of degree n is defined by(12)Q3(u,v,w)=[∑i+j+k=nMijkBi,j,kn(u,v,w)]−1∑i+j+k=nMijkPijkBi,j,kn(u,v,w),0≤u,v,w≤1,u+v+w=1,whereBi,j,kn(u,v,w)=n!i!j!k!uivjwkare the Bernstein basis functions defined on a triangular domain.To control the surface shape using control points and control normals, the weight matricesMijorMijkfor Equations (10), (11) or (12) can be computed by Equation (3) using normal vectorsnijornijktogether with scalar weightsωij,μijorωijk,μijkspecified at the control points. As the matrix weighted rational surfaces have the same representation forms as the classical rational surfaces, they can be evaluated using similar algorithms for scalar weighted rational surfaces.Fig. 3(a) illustrates an input control mesh and the traditional triangular Bézier patch generated by the control mesh. Under the same set of control points together with normals specified at the control points, a matrix weighted rational Bézier triangle is generated; see Fig. 3(b).An original control mesh consisting of control points sampled from a twisted torus and a uniform B-spline surface of degree 3 in the u-direction (along the minor circle) and degree 6 in the v-direction (along the major circle) generated by the control mesh are illustrated in Fig. 4(a). We further model a matrix weighted NURBS surface of degree (3,6) by the control mesh together with a set of control normals specified at the control points. By computing all the weight matricesMijwithωij=1andμij=10, a twisted torus shape with salient local features modeled by a matrix weighted NURBS surface is obtained; see Fig. 4(b).Just as the extensions of NURBS surfaces to matrix weighted NURBS surfaces, subdivision surfaces which are also the generalized B-spline surfaces with arbitrary topology control meshes can be extended to matrix weighted rational subdivision surfaces. Particularly, the weight matrices can be defined using the specified normals such that the shapes of the extended subdivision surfaces can be controlled by control points and control normals.The control data for matrix weighted rational subdivision consists of an initial control mesh and a set of weight matrices specified at the initial control points. For each subdivision the control points and weight matrices will be refined and the generated points will be reconnected to form a new mesh by the same topology refinement rules of the traditional subdivision scheme. Suppose that mesh vertices in meshMkare refined by a non-rational subdivision scheme asVik+1=∑jsijVjk,where the subdivision mask{sij}satisfies∑jsij=1andsij≥0. The new weight matrices and new vertices by a matrix weighted rational subdivision scheme are computed by(13)Mik+1=∑jsijMjk,Vik+1=[Mik+1]−1∑jsijMjkVjk.Clearly, the matrix weighted rational subdivision will degenerate to the traditional subdivision when all the initial weight matrices are non-singular and are equal with each other.As an example, we briefly present the algorithm steps and smoothness analysis for matrix weighted rational Catmull–Clark subdivision. Other popular subdivision schemes like Doo–Sabin subdivision and Loop subdivision can be extended similarly.The first step to refine a meshMkis to compute new weight matrices. For a face F that consists of verticesVikand weight matricesMik,i=0,1,…,L−1in meshMk, the face matrix corresponding to the face is computed byMFk+1=1L∑i=0L−1Mik.When all face matrices have been obtained, the edge matrix for each edge is computed byMEk+1=14(M0k+M1k+MF0k+1+MF1k+1),whereM0kandM1kare the weight matrices at two ends of the edge andMF0k+1andMF1k+1are the face matrices computed for the two neighboring faces of the edge. After that, we refine the weight matrices corresponding to all vertices ofMk. If a vertexVVkis of valence n, the new weight matrix for the vertex is obtained asMVk+1=1n2∑i=0n−1MFik+1+1n2∑i=0n−1MEik+n−2nMVk,whereMFik+1are the face matrices of the neighboring faces andMEikare the end weight matrices of neighboring edges other thanMVk.The second step is to compute new mesh vertices based on the control data ofMkand the newly obtained weight matrices as followsVFk+1=[MFk+1]−11L∑i=0L−1MikVik,VEk+1=[MEk+1]−114(M0kV0k+M1kV1k+MF0k+1VF0k+1+MF1k+1VF1k+1),VVk+1=[MVk+1]−1(1n2∑i=0n−1MFik+1VFik+1+1n2∑i=0n−1MEikVEik+n−2nMVkVVk).Lastly, connect all the refined vertices into a new mesh, just by the topology refinement rules of Catmull–Clark subdivision.As for the smoothness of the subdivision surface we have the following result.Theorem 5.1Suppose thatM0is an arbitrary topology control mesh andniare the unit normal vectors specified at the control pointsVi0of the mesh. If the weight matrices for the points are defined byMi0=ωi(I+μininiT), whereωi>0andμi>−1, the mesh sequences generated by the matrix weighted rational Catmull–Clark subdivision converge and the limit surface isC2except for at the extraordinary points where the smoothness isC1.By employing the homogeneous coordinates representation, the control data for the initial control mesh are(Mi0Vi0,Mi0). Thus, the presented matrix weighted rational Catmull–Clark subdivision becomes non-rational subdivision in the homogeneous spaceR(d+1)×d. Based on the smoothness analysis of Catmull–Clark subdivision (Doo and Sabin, 1978; Ball and Storry, 1988; Reif, 1995), the homogeneous meshes consisting of data(MikVik,Mik)converge to aC2surface except for at extraordinary points where the smoothness becomesC1inR(d+1)×d. On the other hand, from Equation (13) and Theorem 2.1 we know that each matrixMikis non-singular. From Halstead et al. (1993) we know that the limit matrix ofMikis just a convex combination of the initial weight matrices even at an extraordinary vertex. By Theorem 2.1 once again, we conclude that the matrix component of the limit surface in the homogeneous space is nonsingular. Thus, the matrix weighted rational Catmull–Clark subdivision surface in Euclidean space is valid and has the same smoothness as the limit surface in the homogeneous space, i.e., the limit surface isC2except for at the extraordinary points where the smoothness isC1.  □Fig. 5(a) illustrates a surface generated by Catmull–Clark subdivision from an initial control mesh. By using the same control mesh and computing the weight matrices based on the specified unit normal vectors, a matrix weighted rational Catmull–Clark subdivision surface is generated; see Fig. 5(b). Note that the control normals for vertices on each middle boundary control polygon are parallel, thus the four middle boundary curves are the same as those of the Catmull–Clark surface. Under the control of the specified normals, the surface becomes straight and flat in the vertical direction. Fig. 5(c) shows that if we choose some negative weights μ, the surface may shrink in the opposite directions of the control normals.In this section we present a few more examples to demonstrate how to use the proposed models for shape modeling or surface reconstruction. For each example, the weight matrices are defined with normal vectors specified at the initial control points together with the default choice ofωi=1orωij=1. If a matrix weighted NURBS surface is generated, the basis functions are defined on uniform knot vectors except for the multiple knots at the boundaries.First, we present an example of surface design using Bézier or matrix weighted rational Bézier surfaces. Fig. 6(a) illustrates a control mesh that consists of9×11control points and a Bézier surface of degree(8,10)generated from the control mesh. To generate a matrix weighted rational Bézier surface from the control mesh we first assign a set of unit normals at the control points. By choosing all parametersμij=1.35except forμ4,j=1000,0≤j≤10, a sliding board like surface that has a flat bottom is generated; see Fig. 6(b).Second, we present an example of surface reconstruction by a matrix weighted NURBS surface. Fig. 7(a) illustrates a screwdriver model from which25×50points, where 25 is the total row number, were sampled. A set of unit normal vectors at the sampled points have also been estimated from the surface. To reconstruct a bi-cubic matrix weighted NURBS surface with sharp features from the points and normals, we computeμij=1dmin+η, wheredmin=min⁡{nijni+1,j,nijni−1,j,nijni,j+1,nijni,j−1}andη=0.15. In casei±1orj±1is outside the range, the termnijni±1,jornijni,j±1is chosen as 1 directly. Fig. 7(b) illustrates the matrix weighted NURBS surface and the control mesh together with the control normals scaled with weightsμij. Fig. 7(c) illustrates the final matrix weighted NURBS surface with clear sharp features. As a comparison, a bi-cubic B-spline surface can be used to fit the sampled points closely, but the original features have been blurred; see Fig. 7(d).Third, we present two examples of surface modeling by matrix weighted rational subdivision schemes. Fig. 8(a) illustrates an initial control mesh and the Catmull–Clark subdivision surface generated by the control mesh. To model features like flat stairs on the surface a set of control normals are also assigned. Then a subdivision surface with salient features is obtained by applying the matrix weighted rational Catmull–Clark subdivision; see Fig. 8(b) for the control normals and the subdivision surface. Similarly, Figs. 8(c) and (d) are the surfaces generated by the Doo–Sabin subdivision or matrix weighted rational Doo–Sabin subdivision, respectively. The weight matrices for the latter one are computed using the specified normals and a fixed parameterμ=2for all control points. As the boundary control points together with the control normals at these points lie in the same plane and the parameter μ satisfies Equation (9), the boundary curve by the matrix weighted rational subdivision interpolates exactly the control points.Lastly, we present an example of surface generation using matrix weighted rational Loop subdivision. The comparison with the traditional Loop subdivision is also given. Fig. 9(a) illustrates the control mesh and the Loop subdivision surface. By choosing the control normals as the averages of normals of neighboring faces for all vertices of the control mesh and computing the scalar weightμiby Equation (9), a matrix weighted rational Loop subdivision surface that does not suffer shrinkage from the control mesh is generated; see Fig. 9(c). By employing the technique in Yang and Zheng (2013) we compute the curvatures of an intermediate subdivision mesh to check the smoothness of the subdivision surfaces. From Figs. 9(b) and (d) we can see that the curvature artifacts near the extraordinary vertices within the Loop subdivision surface almost disappear in the matrix weighted rational subdivision surface.

@&#CONCLUSIONS@&#
