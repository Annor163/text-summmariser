@&#MAIN-TITLE@&#
An integrated guaranteed- and stochastic-service approach to inventory optimization in supply chains

@&#HIGHLIGHTS@&#
We integrate the stochastic- and guaranteed-service inventory optimization models.The new hybrid-service (HS) approach exploits the benefits of both pure approaches.We develop an optimization procedure for serial supply chains.The HS approach performs at least as well as the better of the two pure approaches.In many settings of our numerical study it delivers additional cost savings.

@&#KEYPHRASES@&#
Inventory,Multi-echelon,Guaranteed service,Stochastic service,Partitioning,

@&#ABSTRACT@&#
Multi-echelon inventory optimization literature distinguishes stochastic- (SS) and guaranteed-service (GS) approaches as mutually exclusive frameworks. While the GS approach considers flexibility measures at the stages to deal with stockouts, the SS approach only relies on safety stock. Within a supply chain, flexibility levels might differ between stages rendering them appropriate candidates for one approach or the other. The existing approaches, however, require the selection of a single framework for the entire supply chain instead of a stage-wise choice. We develop an integrated hybrid-service (HS) approach which endogenously determines the overall cost-optimal approach for each stage and computes the required inventory levels. We present a dynamic programming optimization algorithm for serial supply chains that partitions the entire system into subchains of different types. From a numerical study we find that, besides implicitly choosing the better of the two pure frameworks, whose cost differences can be considerable, the HS approach enables additional pipeline and on-hand stock cost savings. We further identify drivers for the preferability of the HS approach.

@&#INTRODUCTION@&#
The practical relevance of multi-echelon inventory models has grown over the last decade as documented by the increasing number of successful deployments of software tools for multi-echelon inventory optimization (see Viswanathan (2007), Aberdeen Group). Examples include large multinational companies such as HP, Intel, or Philips. The underlying models represent extensions of the seminal works by Simpson (1958) and Clark and Scarf (1960), which form the basis of two competing research streams known as the “guaranteed-service (GS)” and the “stochastic-service (SS)” approaches (see Graves & Willems (2003)). Although both approaches solve the same practical inventory optimization problem in their core, they make a different assumption concerning the flexibility of the stages of a supply chain and thus the role of safety stock.The SS approach regards safety stock as the only means to deal with supply and demand uncertainty. As such, it treats the supply chain as being inflexible. It optimally allocates the stocks to the different stages by taking into account that occasional upstream material shortages cause delivery delays. Thus, the service of the supplying stages is stochastic.In the GS approach, orders of any size can be met by the supplying stage(s) after a committed deterministic service time. This operation is based on the assumption that, if period demand exceeds a normal variability level, which would cause a material shortage, not only safety stock is available to cope with it, but also so-called operating flexibility (i.e. some sort of emergency measure like accelerated production), which provides the missing items at a negligible additional cost (see, e.g., van Houtum, Inderfurth, & Zijm (1996)). We point out that the GS approach, as we understand it in this paper, does not rely on the frequently used bounded-demand assumption. It deals with the original external customer demand by explicitly modeling how the flexibility measure works. Moreover, it allows for varying flexibility levels at the stages of the supply chain (see Dittmar & Klosterhalfen (2012)). This represents a modification and extension to most of the existing GS contributions, which assume a single flexibility level for the entire supply chain and do not address the operation of the flexibility measure explicitly (see, e.g., Graves & Willems (2000)). In any case, the incorporation of the flexibility element into a guaranteed-service model comes at a cost, since a stage is required to comply with the committed service time 100%.Both the complete negligence of a stage’s flexibility in the SS approach and the strict service guarantee in the GS approach, which results in restricted stock allocation options, leave cost-saving potentials untouched. The consequences of this neglect are less far-reaching in supply chains with extreme flexibility characteristics, i.e. (i) very little flexibility at all stages, which is very close to the underlying assumption of the SS approach or (ii) a lot of flexibility at all stages, which then outweighs the allocation disadvantage of the GS approach. However, for supply chains where the levels of flexibility differ between the stages both pure approaches may not be appropriate. In such settings, we are looking for a way to exploit the positive features of both pure approaches.One way to do this is presented in Lawson and Porteus (2000) (and later extensions, see Section 2 for details). They include an expediting option at each stage into the SS model. Speeding up missing items in the process is one possible interpretation of the implicitly assumed operating flexibility in the GS approach. Their model requires the manager of each stage to specify two base-stock levels, one for regular ordering and one for expediting. That means, (s)he needs to keep track of two inventory positions in order to decide when and how much to expedite and how much to order regularly. This complicates the operation of the stages compared to the pure approaches where only one base-stock level is required at each stage and the following logic holds:•At a GS stage, the manager knows that all demand, no matter how large it is, has to be satisfied using flexibility measures, if necessary.At an SS stage, the manager knows that (s)he can operate the stage in regular mode only. The usage of flexibility measures is never required.Therefore, we propose a different way of integration, which maintains the simple operation modes of the pure approaches and only requires a single base-stock level at each stage. We represent and integrate the flexibility element through GS stages and allow the entire supply chain to consist of stages (or subnetworks) of both types. The integrated hybrid-service (HS) approach optimally and endogenously determines which strategy (GS or SS) performs best at each individual stage, instead of choosing a single approach for the entire supply chain. Even though the HS model might not fully exploit all cost-saving potentials compared to the modeling idea of Lawson and Porteus (2000), the approach is easy to understand and implement in practice and still delivers additional cost savings over the pure approaches in many settings. In the remaining settings, the HS approach chooses the better of the two pure approaches, which it contains as special cases.The main contributions of this paper can be summarized as follows:1.This work represents a first step towards the integration of the two existing multi-echelon inventory optimization frameworks, the GS and SS approaches, into a new hybrid-service (HS) framework, which extracts the best of both worlds. In order to keep the explanation of the underlying idea and the general modeling aspects with respect to the framework integration simple, we restrict the exposition to serial supply chains.We develop a two-step optimization procedure for the partitioning of the supply chain into GS and SS subnetworks. First, we define so-called HS subnetworks, by which every potentially optimal partitioning pattern can be represented. For the optimization of the base-stock levels in these subnetworks, we extend the standard SS optimization procedure of Clark and Scarf (1960) to incorporate incoming and outgoing service times and costless expediting at the final stage. Second, we formulate a dynamic programming algorithm to obtain the overall optimal constellation of HS subnetworks together with the optimal service times.We review the literature in Section 2 and summarize both pure approaches in Section 3. Section 4 presents the combination of the pure frameworks into a hybrid one and develops the optimization algorithm. Section 5 reports the results of a numerical comparison of the pure and hybrid approaches. Section 6 concludes the paper and addresses future research. All proofs are relegated to the Appendix.Following the nomenclature by Graves and Willems (2003) our model integrates the two exisiting multi-echelon inventory frameworks: the stochastic-service (SS) and guaranteed-service (GS) approaches. The SS approach based on the pioneering work by Clark and Scarf (1960) assumes that safety stock is the only available buffer against demand fluctuations. Stock insufficiencies cause stochastic delays in the system’s material flow. The GS framework, which dates back to Simpson (1958), assumes that further countermeasures, beyond safety stock, are available to satisfy demand and always ensure 100% delivery service. Starting with the analysis of serial systems, the models in both research streams have gradually been extended to more complex network structures including general acyclic ones and optimization procedures have been developed. In the SS domain, extensive overviews are provided in de Kok and Fransoo (2003) and van Houtum (2006). For details about the GS research stream and optimization procedures we refer to Magnanti, Shen, Shu, Simchi-Levi, and Teo (2006) and Humair and Willems (2011) and references therein.Both research streams have been mainly treated in isolation over the years. Only few works exist that compare, contrast, or even try to integrate them. One such comparison is presented in Graves and Willems (2003). They apply both approaches to a convergent system and a spanning-tree network and find that (under their assumptions) the GS model outperforms the SS model. For two-echelon divergent systems, Klosterhalfen and Minner (2010) provide a GS–SS model comparison and show that the superiority of any of the two approaches heavily depends on the specific parameter setting and cannot be established in general. Moreover, they present a cost-based method to determine the maximum level of demand variability to be covered by safety stock.Whereas both the above-mentioned works merely compare the two approaches, in this paper we are interested in integrating the features of both frameworks. Since we model the GS operating flexibility feature in the form of expediting (similar to Klosterhalfen & Minner (2010)), our approach is related to this literature stream as well. In fact, given this flexibility interpretation, expediting models as such can be regarded as a combination of both frameworks. Lawson and Porteus (2000), Muharremoglu and Tsitsiklis (2003), Kim, Klabjan, and Simchi-Levi (2007), and Berling and Martínez-de Albeníz (2012) focus on expediting problems in serial systems. Lawson and Porteus (2000) analyze a periodic-review system with deterministic lead-times. They show that a top-down base-stock policy with two levels is optimal. Muharremoglu and Tsitsiklis (2003) extend this work by allowing a more general cost structure for expediting, i.e. supermodular instead of additive. Kim et al. (2007) provide an extension to stochastic lead times of the regular orders. Berling and Martínez-de Albeníz (2012) study expediting in a continuous-time continuous-stage setting. Their model provides decision support on the speed at which a unit is to be moved through the chain.Our approach differs from the previous contributions mainly in the way we integrate the flexibility option into the SS world. We do this through GS stages. This enables us to still employ a simple inventory control policy with only a single base-stock level. In this respect, our model is similar to Huggins and Olsen (2003). They study a two-stage serial system with a delivery guarantee at the upstream stage, which is ensured through expediting at a certain linear plus fixed cost. They show that at both stages threshold policies are optimal. Whereas the actual expediting usage is the outcome of the cost minimization in their model and, as such, is not restricted in any respect a priori, we consider a bound on the average number of items to be expedited. This bound is derived from the available flexibility at a stage. Further, our n-stage model does not require each stage to provide guaranteed service, but leaves this decision to be optimized within the model.We consider a serial production/inventory system with n stages, which are numbered from i=1,…,n starting with the most upstream stage. Let 〈i,j〉 denote the subnetwork from stage i to j including both stages. To differentiate between subnetworks of different type a superscript SS, GS, or HS is added when necessary. All stages operate with a periodic-review base-stock policy with a common review period equal to the model’s underlying base time unit. Each stage performs a processing function and represents a potential location for holding stock after the process has finished. This means that also semi-finished items can be held at the corresponding stages of the system. The processing time at stage i is Ti. It is assumed to be deterministic and a multiple of the review period. No capacity constraints exist at any of the stages or processes. Period customer demand occurs at stage n and is represented by a stationary random variable D with mean μ and standard deviation σ. Let D(Ti) denote the demand random variable over Tiperiods. For each unit of stock on-hand or in the pipeline of stage i at the end of a period a linear local holding cost of hiis incurred. There are no fixed ordering/setup costs. For notational convenience we assume that an item at a downstream stage requires exactly one item of the upstream stage that is connected to it. The objective is to determine an optimal local base-stock level for each stage, Bi, such that the total stock-holding cost in the entire supply chain is minimized subject to a service-level constraint at the final stage. As service-level type we assume a modified fill rate (γ-service level):(1)γext=1-boextμ∈(0,1)where boext∈(0,μ) denotes the maximum permitted average backorders at the end of a period towards the external customer as specified by the company. The modified fill rate is easier-to-evaluate than the fill rate (β-service level), which is quite common in practice and is defined as(2)βext=1-bonewextμ∈(0,1).Whereas boextrefers to all backorders and thus may also include backorders from previous periods,bonewextdenotes only the maximum permitted average new backorders at the end of a period. Hence, γextprovides a lower bound to βext(see, e.g., van Houtum et al. (1996) or Zhang & Zhang (2007)).In the SS approach it is assumed that the only buffer against supply and demand uncertainty is safety stock, i.e. the production system is inflexible and safety stock needs to account for all contingencies. If this stock quantity is not sufficient, delays in the material flow occur. Consequently, the service of a stage, i.e. the ability to readily provide the requested materials, is stochastic.LetB→〈1,i〉denote the vector of local base-stock levels of stages 1 to i, which are the decision variables.OHiSS(B→〈1,i〉)andBOiSS(B→〈1,i〉)are random variables indicating the on-hand stock and the backorders at the end of a period at stage i=1,…,n, which both depend on the local base-stock levels of the upstream stages, B1 to Bi.(3)BOiSS(B→〈1,i〉)=((((D(T1)-B1)++D(T2)-B2)++…+D(Ti-1)-Bi-1)++D(Ti)-Bi)+where (x)+=max{0,x} andBO0SS≡0, since we assume that the external supplier has ample stock. The expected on-hand stock at stage i is computed as(4)EOHiSS(B→〈1,i〉)=Bi-EBOi-1SS(B→〈1,i-1〉)-Ti·μ+EBOiSS(B→〈1,i〉)i=1,…,n.Due to potential shortages at the supplying stage (“stochastic service”) given by the expected backorders,EBOi-1SS, the inventory position at stage i can only be raised toBi-EBOi-1SS. Subtracting the expected demand during the replenishment time, Ti·μ, and adding the expected backorders of stage i itself results in the expected on-hand stock. The optimization problem,P〈1,n〉SS, is given as(5)P〈1,n〉SSminC〈1,n〉SS(B→〈1,n〉)=∑i=1nhi·EOHiSS(B→〈1,i〉)+Ti·μ(6)s.t.1-EBOnSS(B→〈1,n〉)μ=γext.The objective function minimizes the costs of the expected on-hand and pipeline stock, Ti·μ, in the entire system 〈1,n〉, denoted asC〈1,n〉SS, subject to the fulfillment of the target service level, γext.The SS approach optimally solves the trade-off between possible shortages and costs for holding inventory at the different stages. Numerical procedures for the base-stock level optimization are discussed, e.g., in van Houtum and Zijm (1997).The GS approach assumes that further countermeasures besides safety stock exist to cope with demand variability. Thus, safety stock is only used to cover demand variability up to a certain level (see, e.g., Graves (1988)). If demand exceeds this level, the company reverts to “operating flexibility” measures to make the requested items available in time. Due to this combination of safety stock and operating flexibility there are no stochastic delays in the material flow. The service time of a stage is the amount of time that elapses between the placement of an order by a downstream stage and the fulfillment of this order by the upstream stage. Let t denote the period index. Any order (irrespective of its size) placed by stage i (downstream stage) at the beginning of period t is delivered by stage i−1 (upstream stage) after the promised service time, STi−1. Thus, this order is ready for processing at stage i at the beginning of period t+STi−1, which takes another Tiperiods. Consequently, the entire replenishment time of stage i is STi−1+Tiand the processed order is in stock at the beginning of period t+STi−1+Ti. By assumption, STi⩾0, i=1,…,n.In contrast to the SS approach, the GS approach requires an additional input parameter, namely the specification of the maximum demand level for safety stock coverage. There are basically two ways to operationalize this. The approach taken in most of the GS contributions is to bound the end-item demand and assume that only this bounded demand is propagated through the system and needs to be buffered through safety stock. The demand in excess of the bound is assumed to be handled outside the normal supply chain. It is argued that such a demand bound can be established by management. It expresses how often management is willing to resort to tactics other than safety stock to cover demand variability (see Graves & Willems (2000)). By restricting the demand inflow, this approach basically assumes a single flexibility level for the entire supply chain.Alternatively, varying safety stock coverage levels can be specified at the stages of the supply chain. That means, the unbounded original customer demand is propagated through the system and, depending on the individual flexibility of a stage, which is translated into the stage’s base-stock level, a certain portion of the demand is buffered through safety stock and the remaining portion is handled by the available flexibility measure (see Dittmar & Klosterhalfen (2012)).In practice, we encounter that stages actually do exhibit different levels of flexibility. We can exploit these potentials best by defining stage-specific safety stock coverage levels. Therefore, we pursue the latter approach. This “unbounded demand” approach requires the specification of two additional aspects: (i) the flexibility level of a stage and (ii) the operation of the flexibility measure.Concerning (i), we take up the idea of van Houtum et al. (1996) and assume that a certain amount of flexibility can be used without causing any additional costs (at least in the short run). It is this costless additional capacity that we exploit in the GS approach and according to which we set the safety stock coverage level. This level can be expressed as an internal service-level-like requirement. Similar to the maximum permitted average external backorders boext, which define γextabove, we assume that management can specify at each upstream stage an upper limit for the average quantity, which can be made available in addition to the regular operation at a negligible cost weighted by the expediting timespan. This quantity,boiflex, results in a flexility level(7)γiflex=1-boiflexμi=1,…,n-1.A low level indicates a lot of slack capacity, whereas a high level reflects a less flexible process. At the final stage n we do not rely on any flexibility for the following reason. In contrast to the upstream stages, where we require guaranteed service, we assume that only a service of γextneeds to be achieved towards the external customer as in the SS approach. Consequently, if we wanted to exploit flexibility at the final stage, we would have to specify two control parameters: a base-stock level for normal ordering and a second parameter that tells us when and how much to make available through the flexibility measure (see Dittmar & Klosterhalfen (2012) for modeling details). Since we want to keep the inventory control policy as simple as possible for the practitioner, we sacrifice the flexibility benefit at the final stage in favor of having only a single base-stock level.With respect to (ii), we follow the idea of Lawson and Porteus (2000) and model flexibility in the form of expediting. Whenever there is insufficient stock at a stage, the missing items are speeded up in the process. In theory, such an expediting action could affect the stock at upstream stages. In practice, expediting is often restricted to a stage’s own pipeline inventory due to various reasons. In order to reflect this restriction in our model, we limit the probability of upstream expediting by a predefined constraint ∊ and choose it such that this event is basically negligible. The minimum base-stock level of a stage is set such that this constraint holds. The upstream expediting random variable at stage i is given as (see Dittmar & Klosterhalfen (2012))(8)UEiGS(STi-1,STi,Bi)=(D(STi-1-STi)-Bi)+i=1,…,n-1with D(x)≡0 for x⩽0. Thus, the base-stock level must be at least as large asBiUEdetermined as(9)BiUE=minBi∈RBi|PrUEiGS(STi-1,STi,Bi)=0⩾1-∊i=1,…,n-1.Given an appropriate choice of ∊, which we will elaborate on in the context of the numerical study in Section 5, we assume that the following is true:Assumption 1No expediting across upstream stagesThe pipeline inventory of a stage is always sufficient to satisfy the expediting requirement at this stage.With regard to the speeding up of items, we make the following two additional assumptions:Assumption 2FIFOMissing items are picked from the outstanding orders starting with the oldest one.Only the missing quantity is picked from the outstanding orders and the remaining part of the outstanding orders arrives according to the regular schedule.The expediting action reduces the pipeline inventory. The expected reduction at stage i corresponds to the expected potential backorders at the end of a period that would occur, if no expediting action was performed, because all these items require speeding up from pipeline inventory in order to comply with the guaranteed-service commitment. Due to Assumption 1, the latter quantity is computed as (for a given base-stock level and given incoming and outgoing service times)(10)EBOiGS(STi-1,STi,Bi)=E[(D(STi-1+Ti-STi)-Bi)+]i=1,…,n.Consequently, the expected pipeline inventory at stage i is derived as(11)EPIiGS(STi-1,STi,Bi)=Ti·μ-EBOiGS(STi-1,STi,Bi)i=1,…,n-1Ti·μi=n.At the final stage n we do not rely on expediting for the above-explained reasons. The expected on-hand stock at stage i=1,…,n is computed as(12)EOHiGS(STi-1,STi,Bi)=Bi-(STi-1+Ti-STi)·μ+EBOiGS(STi-1,STi,Bi).The optimal base-stock level at a stage needs to ensure that both the available flexibility constraint and the upstream expediting probability constraint are met. GivenBiUEfrom (9), the average quantity that can be expedited from pipeline inventory without violating the latter constraint is(13)boiUE=EBOiGSSTi-1,STi,BiUE.Based on the available flexibility, the maximum average expediting quantity weighted by the expediting timespan isboiflex. At final stage n we do not use expediting, but we can allow for backorders of average size boext. Therefore, we derive the following target level constraint at stage i=1,…,n(14)γitarget=1-minboiflex,boiUEμi<n1-boext/μi=nand postulate that the optimal base-stock level for given service times,BiGS(STi-1,STi), satisfies(15)1-EBOiGSSTi-1,STi,BiGS(STi-1,STi)μ=γitarget.Through (15) there is a one-to-one relationship between the incoming and outgoing service times and the base-stock level of a stage for a given flexibility and/or service-level target. Consequently, we can write (10)–(12) as being only dependent on STi−1 and STi. Hence, instead of searching for the optimal base-stock level at each stage, we can also try to find the optimal outgoing service time. Assuming that the external supplier delivers immediately (ST0=0) and that the external customer requires immediate demand satisfaction (STn=0), the optimization problem is(16)P〈1,n〉GSminC〈1,n〉GS(ST→〈1,n〉)=∑i=1nhi·EOHiGS(STi-1,STi)+EPIiGS(STi-1,STi)(17)s.t.0⩽STi⩽STi-1+Tii=1,…,n-1(18)ST0,STn=0.ST→〈1,n〉denotes the vector of outgoing service times in the system from stage 1 to n. In contrast to the GS works with bounded demand, the objective function minimizes the cost of the average on-hand stock and the pipeline inventory in the entire supply chain, because both depend on the service times. Since the flexibility usage is free of any additional charge by assumption, no other costs need to be included. The constraints ensure that the outgoing service time of a stage does not exceed its replenishment time and is non-negative.In the hybrid-service (HS) approach, we jointly exploit the features of both pure approaches. For each stage, the HS approach chooses the optimal framework (SS or GS) with regard to the entire supply chain cost. This leads to a partitioning of the supply chain into SS and GS subnetworks.Definition 1HS systemAn HS system is a supply chain consisting of subnetworks of type SS or GS or both.In order to obtain the optimal HS system and optimal base-stock levels, we proceed as follows: We define so-called HS subnetworks and show that every HS system can be partitioned into such HS subnetworks (Section 4.1). For the base-stock level optimization in each HS subnetwork, we formulate the optimization model (in Section 4.2) and adjust the standard SS optimization procedure to incorporate incoming and outgoing service times as well as expediting at the final stage (Section 4.3). Given the optimization procedure for the HS subnetworks, the overall optimal combination of HS subnetworks that results in the least total cost for the entire HS system is determined by a dynamic programming algorithm developed in Section 4.4. The online supplement contains an illustrative numerical example of the approach.From the explanations of the pure approaches in the previous sections and the fact that operating flexibility is the only superior feature of a GS stage over an SS stage we can derive:Lemma 1A GS stage can only exploit its operating flexibility and be superior to an SS stage, if it holds stock, i.e. if STi<STi−1+Ti, i=1,…,n−1.Therefore, stockless GS stages can be replaced by SS stages without loosing any operating flexibility advantage. On the contrary, by doing so the stock allocation feature of the SS approach may be exploited. This directly leads to the definition of so-called HS subnetworks.Definition 2HS subnetworkAn HS subnetwork consists of a GS stage, say j, and the directly preceding SS subnetwork 〈i,j−1〉SS, i=1,…,j−1, and is denoted as 〈i,j〉HS. If no SS subnetwork is preceding, the HS subnetwork is degenerated and only consists of the GS stage j, which is denoted as 〈j,j〉HS.The pure systems are special cases of HS subnetworks. A pure SS system consists of a single HS subnetwork spanning from stage 1 to n (since no expediting takes place at the final GS stage n, see Section 3.3). A pure GS system consists of a series of degenerated HS subnetworks.In Fig. 1an HS subnetwork 〈i,j〉HSis depicted. From upstream, the GS predecessor, i−1, quotes a service time, STi−1. Moreover, the comprised GS stage, j, quotes a service times, STj, to its successor. We derive the following condition on STj, which facilitates the later optimization:Lemma 2Consider HS subnetwork 〈i,j〉HS. For the outgoing service time, STj, it holds that(19)STj⩽STi-1+Tji=j,〈i,j〉HS<Tji<j,〈i,j〉HS.A (non-degenerated) HS subnetwork can exploit the features of both pure approaches. The comprised final GS stage can use the flexibility feature to ensure guaranteed-service towards a succeeding HS subnetwork. Thus, it enables a decoupling. At all stages within the HS subnetwork, the feature of the SS approach can be exploited. Since the comprised GS stage, say j, has to cope with potential material shortages at the preceding SS stage (similar to the stages in the pure SS approach), we can treat j as an SS stage when deriving the optimal base-stock levels in the HS subnetwork. However, we cannot simply apply the standard SS optimization model and procedure, because we need to account for expediting from pipeline inventory. Therefore, we extend the standard SS approach to incorporate an expediting option at the final stage of an HS subnetwork.In order to account for expediting in the formulation of the HS subnetwork optimization model, we need to compute, at the final stage of the HS subnetwork, expressions for (i) the upstream expediting random variable in order to ensure that Assumption 1 holds and (ii) the expected pipeline inventory reduction, which is due to the expediting action. For the case of a degenerated HS subnetwork, we can simply employ the expressions derived for the pure GS approach in Section 3.3. Otherwise, we can apply a similar logic, the only difference being that the preceding stages are of type SS, not GS. The required expressions are specified in the following propositions.Proposition 1Upstream expediting random variableConsider HS subnetwork 〈i,j〉HS. For a given base-stock level vector,B→〈i,j〉, and adjacent service times, STi−1and STj, the steady-state distribution of the upstream expediting random variable at stage j is(20)UEjHS(STi-1,STj,B→〈i,j〉)=(D(STi-1-STj)-Bj)+i=jNBOj-1HS(STi-1,STj,B→〈i,j-1〉)-Bj+i<jwhere(21)NBOmHS(STi-1,STj,B→〈i,m〉)=NBOm-1HS(STi-1,STj,B→〈i,m-1〉)+D(Tm-(STj-T(m+1))+)-Bm+m=i,…,j-1,(22)NBOi-1HS(STi-1,STj,B→〈i,j-1〉)=D(STi-1-(STj-T(i))+),(23)T(m)=∑k=mj-1Tkm=i,…,j,with D(x)≡0, if x⩽0, and∑k=abTk=0, if a>b, by definition.For Assumption 1 to hold, the optimal base-stock levels,B→〈i,j〉∗, in HS subnetwork 〈i,j〉HSmust satisfy(24)PrUEjHSSTi-1,STj,B→〈i,j〉∗=0⩾1-∊.Proposition 2Pipeline inventory reductionConsider HS subnetwork 〈i,j〉HS. For a given base-stock level vector,B→〈i,j〉, and adjacent service times, STi−1and STj, the expected pipeline inventory reduction at stage j is equal to the expected potential backorders given as:(25)EBOjHS(STi-1,STj,B→〈i,j〉)=E[(D(STi-1+Tj-STj)-Bj)+]i=jEBOj-1HS(STi-1,STj,B→〈i,j-1〉)+D(Tj-STj)-Bj+i<jwhere the relevant backorder random variable in the HS subnetwork 〈i,j〉HSis defined as:(26)BOkHS(STi-1,STj,B→〈i,k〉)=BOkSS(B→〈i,k〉)k=i,…,j-1D(STi-1)k=i-1.Using Proposition 2 we obtain the expected pipeline inventory and on-hand stock at the end of a period at stage k=i,…,j of HS subnetwork 〈i,j〉HSas:(27)EPIkHS(STi-1,STj,B→〈i,k〉)=Tj·μ-EBOjHS(STi-1,STj,B→〈i,j〉)k=j<n,〈i,j〉HSTk·μotherwise(28)EOHkHS(STi-1,STj,B→〈i,k〉)=Bk-EBOk-1HS(STi-1,STj,B→〈i,k-1〉)-Tk·μ+EBOkHS(STi-1,STj,B→〈i,k〉)k=i,…,j-1,〈i,j〉HSBj-EBOj-1HS(STi-1,STj,B→〈i,j-1〉)-(Tj-STj)·μ+EBOjHS(STi-1,STj,B→〈i,j〉)k=j,〈i,j〉HS.Given these expressions, the optimal base-stock levels for HS subnetwork 〈i,j〉HS(for given incoming and outgoing service times) result from solving the optimization problem:(29)P〈i,j〉HSminC〈i,j〉HS(STi-1,STj,B→〈i,j〉)=∑k=ijhk×EOHkHS(STi-1,STj,B→〈i,k〉)+EPIkHS(STi-1,STj,B→〈i,k〉)(30)s.t.1-EBOjHS(STi-1,STj,B→〈i,j〉)μ=γjtarget.As explained in Section 3.3.2, if j=n, we setγntarget=γextinP〈i,j〉HSand optimize the base-stock levels according to the procedure described below. If j<n,γjtargetis to be set equal to the maximum of the available flexibility at stage j given byγjflexand the amount of flexibility that can be used without violating the upstream expediting probability constraint. Unlike in a pure GS system, in an HS subnetwork we cannot derive the latter quantity directly for a given set of adjacent service times, because it depends on all base-stock levels in the subnetwork as well (cf. (24)). Therefore, we use an iterative optimization procedure. We start withγjtarget=γjflexand optimize the base-stock levels in the subnetwork according to the procedure described below. Thus, we ensure that the available flexibility constraint is met. If the optimized parameters also comply with the upstream expediting probability constraint (24), they represent the overall optimal solution. Otherwise, we increaseγjtargetgradually until constraint (24) holds.For the optimization of the base-stock levels inP〈i,j〉HS, we exploit the established relationship between a γ-service and/or flexibility level model and a penalty-cost model (see, e.g., van Houtum (2006) for details). That means, we work with the penalty-cost model and tune the penalty-cost parameter, e.g., via a bisection procedure, such that the desired γ-target is reached. The derived base-stock levels will then also be optimal for the service-/flexibility-level model.Following the line of argument used to derive the decomposition result in the standard SS approach (see, e.g., van Houtum (2006)), we show that this property also holds for the optimization of an HS subnetwork 〈i,j〉HS, i.e. an SS model with incoming and outgoing service times and (i) no expediting at the final stage j, if j=n, or (ii) expediting at the final stage, if j<n. As in the standard SS approach, we work with echelon base-stock levels instead of the local ones: Sk, k=i,…,j.S→〈i,j〉denotes the vector of echelon base-stock levels of stages i to j. The local base-stock levels are derived from the echelon ones as Bk=Sk−Sk+1, k=i,…,j−1 and Bj=Sj. The echelon holding cost of stage k in HS subnetwork 〈i,j〉HSishke=hk-hk-1,k=i+1,…,j, andhke=hk,k=i. We assumehke>0,k=i,…,j. p denotes the linear penalty cost per unit. Then, the average cost in the entire HS subnetwork 〈i,j〉HSfor j<n can be expressed as(31)C〈i,j〉HS(STi-1,STj,S→〈i,j〉)=hie·Si-EBOi-1HS-Si+1-EBOiHS+hie+hi+1e·Si+1-EBOiHS-Si+2-EBOi+1HS+…+∑m=ij-1hme·Sj-1-EBOj-2HS-Sj-EBOj-1HS+∑m=ijhme·Sj-EBOj-1HS+STj·μ+EBOjHS+p·EBOjHS-∑m=ijhme·EBOjHS(32)=hie·Si-EBOi-1HS+STj·μ+hi+1e·Si+1-EBOiHS+STj·μ+…+hj-1e·Sj-1-EBOj-2HS+STj·μ+hje·Sj-EBOj-1HS+STj·μ+p·EBOjHSwithBOkHS,k=i-1,…,j-1as defined in (26), andEBOjHSas specified in (25). At each stage k=i,…,j−1, the sum of the expected pipeline inventory and on-hand stock is given by the difference between the respective echelon base-stock levels minus the expected shortfall, i.e. the expected backorders of the preceding stage. Similarly, at the final stage j (fifth line in (31)), where the echelon base-stock level equals the local base-stock level,Sj-EBOj-1HSdenotes the pipeline inventory plus the safety stock, if the outgoing service time was zero, STj=0. Since we want to assign holding costs only to positive realizations of this expression and penalty costs to the negative ones, we add the expected backorders at that stage,EBOjHS, in the holding cost expression plus a separate penalty-cost expression. If the outgoing service time is positive, the stock level at j is not depleted by STj·μ. Hence, we need to add this term in the holding cost expression at j, too. The final term in (31), represents the expected cost reduction due to expediting from pipeline inventory as derived in (25). After rearranging terms, (32) follows. For j=n, we can proceed in the same way. Here, the average cost for HS subnetwork 〈i,j〉HScorresponds to (31) without the last term, because no expediting takes place at the final supply chain stage n.For the base-stock level optimization within HS subnetwork 〈i,j〉HSwe define subsystem k, k=i,…,j as the system consisting of stages k,…,j (including the pipeline inventory leading to stage k) with infinite supply at stage k−1, if k=i+1,…,j, or backorders ofBOi-1HS=D(STi-1), if k=i. An echelon base-stock level policy for subsystem k is denoted byS→〈k,j〉, withSm∈Rfor all m=k,…,j. The corresponding average costs are denoted byGk(S→〈k,j〉). Note that, whereasC〈i,j〉HSdenotes the average costs in the entire HS subnetwork from stage i to j, Gkonly denotes the average costs in the subsystem from stage k to j with k=i,…,j. Subsystem k=i is identical to the full HS subnetwork 〈i,j〉HSand thusGi=C〈i,j〉HS. Further, defineBOm(k)as the backorders at the end of a period at stage m, k⩽m⩽j in subsystem k. Given the above explanations, we find:Lemma 3Average subsystem costConsider HS subnetwork 〈i,j〉HS. Let i⩽k⩽j. For subsystem k with given incoming and outgoing service times, STi−1and STj, the average cost of an echelon base-stock level policyS→〈k,j〉, withSm∈Rfor all m=k,…,j, is(33)Gk(S→〈k,j〉)=∑m=kjhme·Sm-EBOm-1(k)+STj·μ+p·EBOj(k)j<n∑m=kjhme·Sm-EBOm-1(k)+STj·μ+p+∑m=ijhme·EBOj(k)j=nwith(34)BOk-1(k)=D(STi-1)k=i0otherwise,(35)BOm(k)=BOm-1(k)+D(Tm)-(Sm-Sm+1)+k⩽m<j,(36)BOj(k)=(D(STj-1+Tj-STj)-Sj)+k=i=jBOj-1(k)+D(Tj-STj)-Sj+otherwise.The optimal echelon base-stock levels can be obtained from the minimization of the average costs in subsystems according to:Proposition 3Newsvendor-type equationsLet the one-period demand distribution F be continuous on (0,∞) with F(0)=0. For k=i,i+1,…,j in HS subnetwork 〈i,j〉HSwith given incoming and outgoing service times, STi−1and STj, under given optimal echelon base-stock levelsSk+1∗,…,Sj∗for stagesk+1,…,j,Sk∗is such that(37)PrBOj(k)=0=p-∑m=kjhmepj<np+∑m=ik-1hmep+∑m=ijhmej=nwhereBOj(k)is given by the recursive formulas(34)–(36)with Smreplaced bySm∗for all m. (Note that the formula for case j=n is exactly the one derived in Theorem 5 invan Houtum (2006), because HS subnetwork 〈i,n〉HScorresponds to a pure SS subnetwork from stage i to n.)We find the optimal partitioning of a supply chain into HS subnetworks and the respective optimal base-stock levels by dynamic programming with backward recursion starting at stage n.State space. The state variable, zk, represents the replenishment time of stage k, i.e. any uncovered processing times from preceding stages (including stage k).(38)zk∈Zk={z∈N|Tk⩽z⩽Mk}k=1,…,nwhereMk=∑m=1kTmdenotes the maximum replenishment time for stage k.Decision space. Consider stage k. We define a two-dimensional decision variableuk=uk1,uk2.uk1indicates the final stage of the next downstream HS subnetwork, which might also be stage k itself in case of a degenerated one.uk2represents the outgoing service time of stageuk1.(39)uk2∈{0,1,…,zk}ifuk1=k<n∈0,1,…,Tuk1-1ifk<uk1<n=0otherwise.Due to Lemma 2, we excludeuk2=Tuk1in (39) foruk1<n. Since we assume immediate customer service, stage n chooses an outgoing service time of 0. The entire decision space of stage k for a given state, Uk(zk), is defined by all feasible combinations of the two decision variable elements.State transition equation. The state transition equation describes how the state of a succeeding stage of k depends on the state and the decision made by k.(40)zuk1+1(uk)=uk2+Tuk1+1Value function. We calculate the minimum total cost of the current stage and the downstream part of the entire supply chain depending on the state we are in and the decision we make at the current stage k. Note that the entire cost of the HS subnetwork is assigned to stage k. The direct cost assigned to stage k, DCk, can be calculated as(41)DCk(zk,uk)=∑m=kuk1hm·EOHmHSzk-Tk,uk2,B→〈k,uk1〉+EPImHSzk-Tk,uk2,B→〈k,uk1〉.Given the incoming service time, zk−Tk, and the outgoing one,uk2, the optimal base-stock levels in the HS subnetwork〈k,uk1〉HS,B→〈k,uk1〉, result as the solution toP〈k,uk1〉HS.EOHkHSzk-Tk,uk2,B→〈k,uk1〉andEPIkHSzk-Tk,uk2,B→〈k,uk1〉follow from (28) and (27), respectively. The value function is(42)vn(zn)=DCn(zn,(n,0))∀zn∈Zn(43)vk(zk)=minuk∈Uk(zk)DCk(zk,uk)+vuk1+1zuk1+1(uk)∀zk∈Zk,k=1,…,n-1.We focus on serial supply chains of length n=5 and choose the parameters such that a large range of supply chain characteristics is captured. External customer demand per period follows a Gamma distribution with a mean of 100 and coefficients of variation 0.2, 0.6, and 1.0 to reflect different levels of variability. Since operating flexibility might vary within a single supply chain, internal flexibility-level targets correspond to either 90%, 95%, or 99% and may differ between the stages. The external service-level target at the final stage is set equal to 90%, 95%, or 99%. Inspired by the numerical design in Graves and Willems (2005), three different holding-cost and processing-time patterns are analyzed: progressivehie=Ti=i, linearhie=Ti=n+12, and degressive (hie=Ti=n-i+1) for i=1,…,n. With regard to the choice of ∊, Dittmar and Klosterhalfen (2012) study the ∊-impact in serial GS supply chains with 4–7 stages. They find that, even though the service-level deviation at the final stage is slightly increasing in the number of stages, for ∊=0.1% it is still basically negligible. Since we have at most 5 GS-stages in the supply chain, we set ∊=0.1% in our computations, too.

@&#CONCLUSIONS@&#
