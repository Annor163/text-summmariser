@&#MAIN-TITLE@&#
Web Service Diagnoser Model for managing faults in web services

@&#HIGHLIGHTS@&#
Automated policy generation toolA generic run time fault diagnoser modelMonitoring component in service registryMonitoring component in service providerFault taxonomy for publishing faults, binding faults, discovery faults and execution faults

@&#KEYPHRASES@&#
Web service faults,Fault diagnoser,Fault diagnosis model,Web service policy,SOAP handler,

@&#ABSTRACT@&#
Reliability is an important criterion to facilitate extensive deployment of web service technology for commercial business applications. Run-time monitoring and fault management of web services are essential to ensure uninterrupted and continuous availability of web services. This paper presents WISDOM (Web Service Diagnoser Model) a generic architecture for detecting faults during execution of web services. Policies have been proposed to describe the intended behavior of web services and faulty behavior would be detected as deviations or inconsistencies with respect to the specified behavior. The model proposes the use of monitoring components in service registries and service providers to detect run-time faults during publishing, discovery, binding and execution of web services. An independent fault diagnoser is proposed to coordinate the individual monitoring components and also act as a repository for the specified web service policies. The proposed model has been tested with a sample web service application and the results obtained are presented.

@&#INTRODUCTION@&#
Web services are self describing, self contained and loosely coupled mechanism for program to program interaction over the Internet [1]. Web service technology is being increasingly used in many commercial applications like online reservation, auction, stock trading and banking. Web services are based on eXtensible Markup Language (XML) standards and are supported by standard protocols like Simple Object Access Protocol (SOAP) for message exchange, Web Services Description Language (WSDL) for interface description and Universal Description Discovery and Integration (UDDI) for service discovery [2,3]. It facilitates the delivery of business applications as web services are accessible to anyone, anytime, at any location and using any platform.Web Service Management System (WSMS) is a comprehensive framework for managing web service lifecycle which covers the development, deployment, publishing, discovery, composition, monitoring and optimizing access to web services [4]. As web services are being extensively deployed for business applications, the reliability of the services provided becomes an important criterion to enable the usage of such services. Continuous monitoring and fault management of web services are essential to ensure uninterrupted and continuous availability of web services. Traditional fault management tools cannot automatically monitor, analyze, and resolve faults in web services. As web services are distributed in nature, it is hard to trace the flow of transactions when a large number of services, supplier and technologies collaborate together to perform an activity [5]. Thus monitoring of web services becomes more difficult when compared to monitoring a centralized application. Tools, methodologies and techniques need to be specially developed to support and automate the fault management efforts [6].This paper describes WISDOM (Web Service Diagnoser Model) a generic architecture for monitoring and detecting faults during run-time execution of web services. The rest of the paper is organized as follows. Section 2 discusses the related work and Section 3 presents WISDOM, the proposed architecture for web services run-time fault detection. In Section 4, the implementation and experimental results for a sample web service application are discussed. Section 5 presents the conclusion and future work.

@&#CONCLUSIONS@&#
