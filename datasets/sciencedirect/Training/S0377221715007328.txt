@&#MAIN-TITLE@&#
Queueing models with optional cooperative services

@&#HIGHLIGHTS@&#
Introduce cooperative services from the customers’ points of view.Discuss effectiveness through two key performance measures.One such performance measure is less-known and difficult to compute but useful.Introduction of key parameters to generalize some well-known classical queues.

@&#KEYPHRASES@&#
Queueing,Cooperative services,Matrix-analytic method,Simulation,

@&#ABSTRACT@&#
In this paper we consider a single-server queueing model in which the customers arrive according to a versatile point process that includes correlated arrivals. An arriving customer can either request for an individual service or for a cooperative service (to be offered along with other customers with similar requests) with some pre-specified probabilities. There is a limit placed on the number of customers requiring cooperative services at any given time. Assuming the service times to be exponentially distributed with possibly different parameters depending on individual or cooperative services, we analyze this model using matrix-analytic method. Second, we simulate this model to obtain a couple of key performance measures which are difficult to compute analytically as well as numerically to show the benefit of cooperative services in queueing. Interesting numerical examples from both analytical and simulated models are discussed. We believe this type of queueing model, which is very much applicable in service areas, has not been studied in the literature.

@&#INTRODUCTION@&#
The motivation for the study of this queueing model comes out of situations seen in capacitated inventory situations wherein the customers coordinate their orders so as to minimize the ordering costs (see e.g., Fiestras-Janeiro, García-Jurado, Meca, & Mosquera, 2014; 2015). While cooperative services are widely used in inventory modeling, they are very rarely considered in queueing literature. The rare situations where cooperative services are considered in queueing literature arise from the point of view of the service providers as opposed to the customers’ points of view (see e.g., Anily & Haviv, 2010; Garcia-Sanz, Fernandez, Fiestras-Janeiro, García-Jurado, & Puerto, 2008). Basically, in these queueing situations the resources (i.e., service providers) of many queueing systems are pooled in one form or the other to efficiently provide services to the pooled customers.It should be pointed out that the model studied here does not belong to any of the various types of queueing models with batch (or group) services studied extensively in the literature. The study of batch service queueing model was initiated by Bailey (1954) and has grown significantly over the years with the works of Neuts (1967), Powell and Humblet (1986), Chakravarthy (1992), Gold and Tran-Gia (1993), Baba (1996), Adan and Resing (2000), Banik, Chaudhry, and Gupta (2008), and Banik, Gupta, and Chaudhry (2009). The book by Chaudhry and Templeton (1983) provides a comprehensive study on batch service queues. These sample references are meant to point out different types of batch service queueing models studied so far and how our model is totally different from these.Thus, in our study here we focus on (certain) customers requesting cooperative services so as (a) to minimize their waiting time in the system; (b) to maximize the chances of staying in the system shorter than the average time it takes in the corresponding queueing model with first-come-first-served basis; (c) to share the costs associated with services with fellow customers; or (d) a combination of two or more of (a−c). To the best of our knowledge there is no literature on this type of queueing models. Hence, we view our paper as a first step toward a different class of queueing models which will generalize some well-known queueing models as special cases through proper choice of the key parameters.We will briefly present an application of this model and similar applications can be found in other service areas. These days the online purchasing has become so prevalent that even small and upcoming companies are becoming integral part of this e-commerce business. According to the U.S. Census Bureau (see www.census.gov) the annual retail e-commerce (which includes online shopping) has grown from 4.984 billion dollars in 1998 to 260.669 billion dollars in 2013. Thus, more and more retailers want a piece of action in this business. Consider a small to medium retailer handling customers’ orders over the phone. Suppose that two types of customers, say, Type 1 and Type 2, place orders over the phone. The orders are processed by a receiving attendant (server) and the processing times (not including the shipping and receiving times) are the actual service times. Type 1 customers prefer to get their orders shipped directly to their addresses whereas Type 2 customers, in order to save money in shipping and processing, prefer to get their orders shipped to a particular location to be picked up by them. The orders from Type 2 customers are processed as soon as the number of orders hits L on a non-preemptive priority (over Type 1) basis. This is to make sure that exactly L orders are put in the same package for shipping to a specific location for all Type 2 customers to individually pick their order. Thus, the orders are processed on a FIFO basis within Type 1 and on a non-preemptive priority basis for Type 2. Similar applications can be found in other areas notably in service systems requiring parts for offering services and these parts are ordered as and when the inventory level reaches a certain point.The rest of the paper is organized as follows. In Section 2 the model under study is described. The steady-state analysis of the model is performed in Section 3 and in this section we also display some key system performance measures. Special cases of the model under study are presented in Section 4. Illustrative numerical examples are discussed in Section 5. In Section 6 we simulate the model under study. The main purposes of this simulation approach is to see the effectiveness of cooperative service model as compared to the classical queueing model. The effectiveness comparison of the models is done through two system performance measures, of which one is very difficult to obtain analytically and hence simulation plays an important role. Further, our simulated model will help in future analytical study of the model for more general cases. Some concluding remarks are given in Section 7.We consider a single server queueing system in which customers arrive according to a Markovian arrival process (MAP) with representation (D0, D1, D2) of order m. The generator D, defined byD=D0+D1+D2,governs the underlying Markov chain of the MAP such that D0 accounts for the transitions corresponding to no arrival; D1 governs those corresponding to an arrival of a customer who requires individual services, and D2 governs those corresponding to an arrival of a customer who requires cooperative services. By assuming D0 to be a nonsingular matrix, the interarrival times will be finite with probability one and the arrival process does not terminate. Hence, we see that D0 is a stable matrix. Henceforth, we will refer to customers requiring individual services as Type 1 customers and those requiring cooperative services will be referred to as Type 2 customers.We assume that Type 1 customers have an infinite waiting space while Type 2 customers have a finite waiting space of size L, 1 ≤ L < ∞, where L is a pre-determined threshold. An arriving Type 1 customer finding the server idle will get into service immediately; otherwise will enter into Type 1 buffer and will wait for the server to be free to offer Type 1 services. An arriving Type 2 customer will either (a) get into service immediately along with other similar customers provided the server is idle and there areL−1such customers already waiting in the system to receive cooperative services; (b) get into Type 2 buffer of size L provided there is enough space available irrespective of whether the server is busy or idle; (c) with probability γ, 0 ≤ γ ≤ 1, will become a Type 1 customer and enter into Type 1 buffer since Type 2 buffer is full; or (d) be lost with probability1−γsince Type 2 buffer is full. On becoming a Type 1, the customer remains as Type 1 until leaving the system with a service.We assume that the service times are exponential with parameter depending on the type of customer(s) in service. Let μ1 and μ2, respectively, denote the rate of services for Type 1 and Type 2 customers. The cooperative services are offered in batches of size L. Note that with our assumption the system can have no more than 2L Type 2 customers (L waiting for service and L in service) at any given time. We also assume that Type 2 customers have non preemptive services over Type 1 customers. Thus, upon completion of a service the server will offer a service to a group of Type 2 customers if there are L Type 2 customers waiting; otherwise the server will offer a service to a Type 1 customer, if any, or become idle.The MAP, first introduced by Neuts (1979) as a versatile Markovian point process, is a rich class of point processes that includes many well-known processes such as Poisson, PH-renewal processes, and Markov-modulated Poisson process. For further details on MAP and their usefulness in stochastic modelling, we refer to Lucantoni, Meier-Hellstern, and Neuts (1990)Lucantoni (1991)Neuts (1989)1992) and for a review and recent work on MAP we refer the reader to Artalejo, Gomez-Correl, and He (2010)Chakravarthy (2010)Chakravarthy and Krishnamoorthy (2001).Letδbe the stationary probability vector of the Markov process with irreducible generator D. That is,δis the unique (positive) probability vector satisfying.(1)δD=0,δe=1.The constantλ=δ(D1+D2)e,referred to as the fundamental rate, gives the expected number of arrivals per unit of time in the stationary version of the MAP. Often, in model comparisons, it is convenient to select the time scale of the MAP so that λ has a certain value. That is accomplished, in the continuous MAP case, by multiplying the coefficient matrices D0, D1, and D2, by the appropriate common constant. We defineλ1=δD1eandλ2=δD2eso that these give, respectively, the rates of Type 1 and Type 2 customers arriving to the system. For use in sequel, we takep=λ1λ,q=1−p.In the sequel we need the following notations. Byewe will denote a column vector (of appropriate dimension) of 1’s;eiwe will denote a unit column vector (of appropriate dimension) with 1 in the ith position and 0 elsewhere; and I an identity matrix (of appropriate dimension). We will display the dimension should there be a need to emphasize it. For example, if there is a need to display the dimension of an identity matrix of order m, we will do so by writing Imrather than I; a unit vector of dimension m will be denoted ase(m) rather thane. The symbol ⊗ denotes the Kronecker product of matrices. Thus, if A is a matrix of order m × n and if B is a matrix of order p × q, then A⊗B will denote a matrix of order mp × nq whose (i, j)th block matrix is given by aijB. For details and properties on Kronecker products we refer the reader to Graham (1981)Marcus and Minc (1964)Steeb and Hardy (2011).In this section we will analyze the queueing model described in Section 2 in steady-state. Let N1(t), N2(t), N3(t), and N4(t) denote, respectively, the number of Type 1 customers in the queue, the number of Type 2 customers in the queue, the status of the server, and the phase of the arrival process. By takingN3(t)=0,1,2,respectively, we will denote the status of the server to be idle, busy with a Type 1 customer, and busy with Type 2 customers. The process {(N1(t), N2(t), N3(t), N4(t)): t ≥ 0} is a continuous-time Markov chain with state space given byΩ={(0,i2,0,k):0≤i2<L,1≤k≤m}⋃{(i1,i2,i3,k):i1≥0,0≤i2≤L,i3=1,2,1≤k≤m}.We now define the set of states as follows:0̲*={(0,i2,0,k),0≤i2<L,1≤k≤m}i̲={(i,i2,1,k):0≤i2≤L,1≤k≤m}⋃{(i,i2,2,k):0≤i2≤L,1≤k≤m},i≥0.It can easily be verified that the set of states,0*, corresponds to the case when the server is idle with i2, 0 ≤ i2 < L, Type 2 customers in the queue and keeping track of the phase of the arrival process. The set of states,i, corresponds to the case when the server is busy (with a Type 1 customer whenN3(t)=1and busy with a group of L Type 2 customers whenN3(t)=2) with i, i ≥ 0, Type 1 customers and i2, 0 ≤ i2 ≤ L, Type 2 customers waiting in the queue and keeping track of the phase of the arrival process.The infinitesimal generator of the Markov chain governing the system is given by(2)Q=(B1B0CA1A0A2A1A0⋱⋱⋱),where(3)B1=(D0D2D0D2⋱⋱D0D2D0),B0=(D100⋯0000⋯00D10⋯0000⋯0⋮⋮⋮⋯⋮⋮⋮⋮⋯⋮000⋯D10D20⋯0),(4)C=(μ1I0μ2I0),A0=(D1⋱D1D1+γD2D1⋱D1D1+γD2),(5)A1=(D0−μ1ID2⋱⋱D0−μ1ID2D0+(1−γ)D2−μ1Iμ1ID0−μ2ID2⋱⋱D0−μ2ID2μ2ID0+(1−γ)D2−μ2I),(6)A2=(μ1(I⊗I)000μ2(I⊗I)000).Note that the dimensions of the above matrices are as follows.•B0 is of dimensionLm×(2L+2)mB1 is a square matrix of dimension LmC is of dimension(2L+2)m×LmA0, A1, and A2 are square matrices of dimension(2L+2)mLetπ=(π(1),π(2))be the steady state probability vector of the generatorA=A0+A1+A2. That is,πsatisfies(7)πA=0,πe=1.We further partitionπ(i) asπ(i)=(π0(i),…,πL(i)),1≤i≤2.The following theorem establishes the stability condition of the queueing system under study.Theorem 1The queuing system under study is stable if and only if the following condition is satisfied:(8)λ1+γλ2<μ1+[γL−μ1μ2]π0(2)[μ2e+D2e].The queueing system under study with the QBD type generator given in (2) is stable (see, e.g., Neuts, 1981) if and only ifπA0e<πA2e. First note that the equations in (7) reduce to(9)π0(1)(D0+D1)+μ2π0(2)=0,(10)πj−1(1)D2+πj(1)(D0+D1)+μ2πj(2)=0,1≤j≤L−1,(11)πL−1(1)D2+πL(1)(D−μ1I)=0,(12)μ1πL(1)+π0(2)(D0+D1−μ2I)+μ2πL(2)=0,(13)πj−1(2)D2+πj(2)(D0+D1−μ2I)=0,1≤j≤L−1,(14)πL−1(2)D2+πL(2)(D−μ2I)=0,subject to(15)∑j=0L[πj(1)+πj(2)]e=1.Observe that by adding Eqs. (9) through (14) and using the uniqueness ofδgiven in (2), we get(16)∑j=0L[πj(1)+πj(2)]=δ,which is intuitively clear.It is easy to verify that(17)πA0e={∑j=0L[πj(1)+πj(2)]D1e}+γ[πL(1)+πL(2)]D2e=λ1+γ[πL(1)+πL(2)]D2e,πA2e=∑j=0L−1[μ1πj(1)+μ2πj(2)]e.Post-multiplying equations (9) through (11) byeand adding them we get(18)μ1πL(1)e=∑j=0L−1πj(2)e.Post-multiplying equations (11), (12) and (14) byeand adding them we get(19)[πL−1(1)+πL−1(2)]D2e=μ2π0(2)e+π0(2)D2e.Post-multiplying equations (10) and (13) byeand adding them we get(20)[πj−1(1)+πj−1(2)]D2e=(πj(1)+πj(2))D2e,1≤j≤L−1.Post-multiplying equations (9) and (12) byeand adding them we get(21)[π0(1)+π0(2)]D2e=μ1πL(1)e+μ2πL(2)e.From Eqs. (19) through (21) we note that(22)[πj(1)+πj(2)]D2e=μ1πL(1)e+μ2πL(2)e=μ2π0(2)e+π0(2)D2e,0≤j≤L−1.The stated result follows immediately from Eqs. (16), (17), (18) and (22).In the sequel, let ρ denote the traffic intensity and is given by Neuts (1981),(23)ρ=πA0eπA2e=λ1+γλ2−γL[μ2π0(2)e+π0(2)D2e]μ1−μ1μ2[μ2π0(2)e+π0(2)D2e].□Letx=(x*,x(0),x(1),⋯)denote the steady-state probability vector of Q. That is,xsatisfies(24)xQ=0,xe=1.Note that the vectorx* partitioned asx*=(x0*,…,xL−1*),is such that the kth component ofxj*,0≤j≤L−1,gives the steady-state probability that the server is idle with j Type 2 customers waiting for cooperative services and the arrival process is in phase k. The vectorx(i), partitioned asx(i)=(x1(i),x2(i))=(x0,1(i),…,xL,1(i),x0,2(i),…,xL,2(i)),is such that the kth component ofxj,r(i),i≥0,r=1,2,0≤j≤L,gives the steady-state probability that the server is busy serving Type 1 customer (whenr=1) or Type 2 customers (whenr=2) with i Type 1 customers and j Type 2 customers waiting for services, and the arrival process is in phase k.Under the stability condition given in (8) the steady-state probability vectorxis obtained (see, e.g., Neuts, 1981) as follows:(25)x(i)=x(0)Ri,i≥0,where the matrix R is the minimal nonnegative solution to the matrix quadratic equation:(26)R2A2+RA1+A0=0,and the vectors,x* andx(0) are obtained by solving(27)x*B1+x(0)C=0,x*B0+x(0)[A1+RA2]=0,subject to the normalizing condition(28)x*e+x(0)(I−R)−1e=1.The computation of the R matrix can be carried out using a number of well-known methods such as logarithmic reduction and (block) Gauss−Seidel iterative by exploiting the special structure of the coefficient matrices A0, A1, and A2, which are of dimension(2L+2)m. This is very important especially when one is dealing with large values of L and m. The details of such exploitation will be omitted; however, the key steps in the logarithmic reduction are given below and for full details on this we refer the reader to Latouche and Ramaswami (1999).Logarithmic Reduction Algorithm forR:Step 0:H←(−A1)−1A0,L←(−A1)−1A2,G=L,andT=H.Step 1:U=HL+LHM=H2H←(I−U)−1MM←L2L←(I−U)−1MG←G+TLT←THContinue Step 1 until∥e−Ge∥∞<ϵ.Step 2:R=−A0(A1+A0G)−1.We now list some useful results which are intuitively obvious and serve as accuracy checks in our numerical computation.Lemma 1We have(29)x*(e⊗I)+x(0)(I−R)−1(e⊗I)=δ.whereδis as given in(2).We have(30)μ1x(0)(I−R)−1(e1(2)⊗e((L+1)m))+Lμ2x(0)(I−R)−1(e2(2)⊗e((L+1)m))=λe,where λe is the effective arrival rate given byλe=λ1+λ2(1−Plost). [SeeSection 3.3below for an expression for Plost.]In this section we will list a number of system performance measures of interest along with their expressions. In the sequel, we denote(31)x(0)(I−R)−1=(a1,a2,…,a2L+2).1.Probability that the system is idle. The probability,PidleSystem,that the system is idle (i.e., there are no customers in the system) is given byPidleSystem=x0*e.Probability that the server is idle. The probability,PidleServer,that the server is idle is given byPidleServer=x*e.Probability that the server is busy providing individual services. The probability,PbusyIS,that the server is busy serving individual services is given byPbusyIS=x(0)(I−R)−1(e1(2)⊗e((L+1)m)).Probability that the server is busy providing cooperative services. The probability,PbusyCP,that the server is busy serving cooperative services is given byPbusyCP=x(0)(I−R)−1(e2(2)⊗e((L+1)m)).Probability that a Type 2 customer becomes a Type 1. The probability, Pchange, that an arriving Type 2 customer becomes a Type 1 customer due to lack of space in the buffer to house customers requiring cooperative services is given byPchange=γλ2[aL+1+a2L+2]D2e.Probability that a Type 2 customer is lost. The probability, Plost, that an arriving Type 2 customer is lost due to lack of space in the buffer to house customers requiring cooperative services is given byPlost=1−γλ2[aL+1+a2L+2]D2e.Probability that a customer enters into service immediately upon arrival. The probability, Pno wait, that an arriving customer will get into service immediately is given byPnowait=1λ[x*(e⊗D1e)+xL−1*D2e].Mean number of Type 1 customers waiting in the queue. The mean, μNT1, number of customers waiting for individual services in the queue is given byμNT1=x(0)R(I−R)−2e.Mean number of Type 2 customers waiting in the queue. The mean, μNT2, number of customers waiting for cooperative services in the queue is given byμNT2=∑j=1L−1jxj*e+∑j=1Lj(aj+1+aL+2+j)e.In this section we will look at some special cases of the model under study.In this case, which corresponds top=1,on noting that γ plays no role the model under study reduces to that of the classical MAP/M/1 queue. The results of this classical model can be used as another set of accuracy check in numerical computation.Herep=0,which corresponds to the initial arrivals are of Type 2; however, with probability γ an arriving Type 2 customer becomes a Type 1 when at that instant the server is busy and Type 2 buffer is full. Thus, the system can have both Type 1 and Type 2 customers unlessγ=0. Whenγ=0,the system reduces to a finite capacity MAP/M/1/L queue with group services (of size L) with the server initiating a service only when Type 2 buffer is full. Again, the results of this model can be used as another set of accuracy check for our numerical computation.The case whenL=1may not be of interest in general since cooperative services indicate that the group size should be at least 2. However, this case has some interesting applications in priority queues. For example, with a certain (but low) probability the system can receive customers who need non-preemptive services but with the restriction that there can only be at most two such customers (one in service and another waiting in the queue).In this case an arriving Type 2 customer finding Type 2 buffer full will be lost. Further, Type 1 and Type 2 customers have no interactions since no Type 2 customer can become a Type 1 customer.In this case we takeD0=−λ,D1=λ1,andD2=λ2withλ=λ1+λ2. Recall thatp=λ1λ,q=1−p. In this special case, the stability condition can be explicitly obtained as follows.Theorem 2In the case of Poisson arrivals, the queuing system under study is stable if and only if the following condition is satisfied:(32)λ1+γλ2<μ1+c[γL−μ1μ2](λ2+μ2),where c is given by(33)c=[L(λ2+μ2)λ2+λ2+μ2μ1+λ2(λ2λ2+μ2)L−1(1μ2−1μ1)]−1.Follows immediately from Theorem 1 by takingm=1,D0=−λ,D1=λ1,andD2=λ2and the fact that the steady-state vector in (7) is explicitly obtained as (note that the quantities,πj(i),0≤j≤L,i=1,2,are scalars).πj(1)=c(λ2+μ2λ2)[1−(λ2λ2+μ2)j+1],0≤j≤L−1,πL(1)=c(λ2+μ2μ1)[1−(λ2λ2+μ2)L],π0(2)=c,πj(2)=c(λ2λ2+μ2)j,1≤j≤L−1,πL(2)=c(λ2μ2)(λ2λ2+μ2)L−1,where c is as given in (33).The traffic intensity, ρ, as defined in (23) reduces for the current case to(34)ρ=λ1+γλ2−γcL(λ2+μ2)μ1−cμ1μ2(λ2+μ2),where c is as given in (33).□Note:(1)It is clear from (34) that even for the M/M/1-type queue with cooperative services the stability condition is not very transparent unless some additional assumptions are made.Whenμ1=μ2=μ,ρ=λ1λ2+γλ22+Lλ1μLμ2.Whenμ1=μ2=μandp=1,ρ=λμ.Whenμ1=μ2=μandp=0,ρ=γλ2Lμ2.In this section we discuss the qualitative aspects of the queueing system under consideration through illustrative numerical examples. First we note that it is very important to verify the correctness and the accuracy of the code written to compute various system performance measures. This is accomplished through verifying a number of results. For example, one can use the results of Lemmas 1 and 2. Also, one can use the special case whenp=1(which reduces our current model to the classical MAP/M/1 queue) to verify the correctness of the code. We also obtained the numerical solution for the Poisson arrivals in its simple form. Next, we implemented the general algorithm, but using the following MAP representation: Let D0 be an irreducible, stable matrix with eigenvalue of maximum real part−η < 0. Letκdenote the corresponding left eigenvector, normalized byκe=1. TakingD1=−pD0eκandD2=−(1−p)D0eκwith p is the probability of a customer requiring individual services, the MAP representation reduces to the Poisson arrival process with intensity rate ηNeuts (1995). The general algorithm does not utilize this fact in any manner, but the numerical results were identical.For the arrival process, we consider the following five sets of values for D0 and D as follows. Note that here we takeD1=pDandD2=(1−p)Dand p, 0 ≤ p ≤ 1, will be varied as another parameter of the model. It should be pointed that one can take D1 and D2 differently so as to incorporate any correlation between the arrivals of Type 1 and Type 2 customers.1.Erlang (ERLA):D0=(−220−2),D=(0020)Exponential (EXPA):D0=(−1),D=(1)Hyperexponential (HEXA):D0=(−1.9000−0.19),D=(1.710.190.1710.019)MAP with negative correlation (MNCA):D0=(−1.002221.0022200−1.00222000−225.75),D=(0000.0100200.9922223.492502.2575)MAP with positive correlation (MPCA):D0=(−1.002221.0022200−1.00222000−225.75),D=(0000.992200.010022.25750223.4925).The above MAP processes will be normalized so as to have a specific arrival rate. However, these are qualitatively different in that they have different variance and correlation structure. The first three arrival processes, namely, ERLA, EXPA, and HEXA, have zero correlation for two successive inter-arrival times. The arrival processes labeled MNCA and MPCA, respectively, have negative and positive correlation for two successive inter-arrival times with values−0.4889 and 0.4889. The ratio of the standard deviation of the inter-arrival times of these five arrival processes with respect to ERLA are, respectively, 1, 1.41421, 3.17451, 1.99336, and 1.99336.Example 1The purpose of this example is to see the impact of the L, p, and the type of arrival process on some selected performance measures. We fixλ=1,μ1=μ2=1.2,γ=1.0and vary p to take values 0, 0.5, 0.99 and L to take values 1, 2, 5 and 10. Under these various scenarios, the system performance measures are displayed in Table 1 (forL=1,2) and Table 2(forL=5,10).A quick look at these two tables reveal the following observations:•The traffic load, ρ, and the two system performance measures:PbusyISand μNT1 increase as p is increased or L is decreased (when all other parameters are fixed).Pidle increases as L is increased.PbusyCPdecreases when either p or L is increased (when all other parameters are fixed).With regard to Pno wait we see notice some interesting behavior. [In our next example we will discuss more on this measure when we also vary γ.]–p appears to play a role only when L > 1. This is not quite surprising since this case does not really correspond to cooperative services but rather like a non-preemptive priority type servicing.For L > 1, p plays a significant role. A plot (not shown here) of this measure shows a bell-shaped curve in p with a peak occurring at, say, p*, which depends on L and the type of arrival process.The measure μNT2 increases as L is increased and decreases as p is increased.Now we look at an interesting system performance measure, Pchange, which gives the fraction of Type 2 customers who are forced to become Type 1 due to lack of space to get their cooperative services. Instead they will get only individual services. Note that this probability does not include the fraction of customers who decide to leave (with probability1−γ) upon finding Type 2 buffer to be full.Example 2The purpose of this example is to see the impact of the L, p, γ, and the type of arrival process on Pchange. We fixλ=1,μ1=μ2=1.2,vary p and γ from 0 to 1, and vary L to take values 1, 2, 5, and 10.We notice an interesting pattern in this measure depending on the type of arrival process. Since the pattern (except for the values) is very similar for ERLA, EXPA, HEXA, and MNCA, we will display the graph only for ERLA. However, for MPCA the pattern is slightly different as it requires a larger value for L to see the same type of pattern, we will display for MPCA also. In Fig. 1, we display the graph of Pchange as functions of p and γ for the two arrival processes. The following observations can be made from this figure.•As L increases we can see a bell-shaped curve as a function of p when γ is fixed to be a positive number. For large L the effect of γ is not significant when p is close to zero. This may appear to be counter intuitive since a smaller p results in more Type 2 customers arriving and one would expect to see γ playing a significant role. Actually, smaller p results in not many Type 2 customers will see Type 2 buffer to be full due to faster clearance of batches of Type 2 services.In the case of MPCA arrivals while we see a bell shaped curve (as a function of p for fixed γ) is developing as L is increased. However, to see a full bell shaped one L has to take a larger value as opposed to other arrivals. Furthermore, for this arrival process γ plays a significant role even for relatively small p. Again, this illustrates that the correlation (especially, positively correlated ones) in the arrivals cannot be ignored.As mentioned in Example 2, we now display the graph of Pno wait as functions of p and γ for ERLA and MPCA cases in Fig. 2. We notice the following interesting observations.•For small L, namelyL=1,2,both p and γ play a role for all types of arrival process. However, the effect of p on this measure becomes insignificant when γ approaches 1. This is somewhat counter-intuitive since a large γ results in less customers getting lost resulting in more customers waiting to receive service. Thus, we would expect this measure to decrease (for fixed p) as γ is increased.For large L, namely,L=5,10,it appears that the role of γ is not very significant for all but MPCA arrivals. In the case MPCA we see some effect. However, p plays a significant role. A plot (not shown here) of this measure shows a bell-shaped curve in p with a peak occurring at, say, p*, which depends on L and the type of arrival process.While the system performance measures seen so far shed light on the model under study as compared to the classical MAP/M/1 queue from the management point of view, it will be of interest to see the effect of group services from the customers’ point of view. Toward this end we will consider two measures, μWTS and Fbelow, respectively, the mean waiting time in the system of a customer (irrespective of the type) at an arrival and the fraction of customers whose waiting time in the system is less than the average waiting time in the system of the corresponding classical MAP/M/1 queue. Suppose we denote byμWTSCQthe mean waiting time in the system of a customer at an arrival epoch in the classical MAP/M/1 queue. If we denote YWTS to be the waiting time in the system of a customer at an arrival epoch, then we haveFbelow=P(YWTS≤μWTSCQ).It is very easy to computeμWTSCQfor the classical MAP/M/1 queue using the well-known matrix-geometric approach. The values for our five arrival processes are displayed in Table 3below; however to our knowledge there is no (analytical or numerical) result reported in the literature for the fraction of customers whose waiting time in the system is less than the average waiting time for the classical MAP/M/1 queue. However, for the most simplest case involving M/M/1 queue, this can be easily seen to be1−e−1=0.6321. In order to compute this fraction one needs to derive the waiting time distribution of a customer at an arrival epoch. While deriving the Laplace−Stieltjes transform (LST) of this waiting time distribution is not overly complex for the model under study, the computation of the fraction needs the probability distribution of the waiting time distribution. Thus, computing this fraction is quite involved and requires a very careful and efficient algorithmic procedure. This will not be discussed here. However, we will use simulation approach to get this fraction in the next section.In this sectionwe will simulate the model under study with the help of ARENA (Kelton, Sadowski, & Swets, 2010) using five replicates and 1,000,000 units of time for each replicate. The main purpose of using simulation approach is to compute the fraction, Fbelow for the reason outlined in Section 5. Before we proceed to discuss the simulated results, it is important to validate our simulated model by comparing our simulated results for some special cases. First we look at the model wherep=1. This special case reduces our model to the classical MAP/M/1 queue and for which we can get numerical results using algorithmic methods to a desired level of accuracy. In Table 4 we display the simulated values for our model in the case whenp=1. Compared to the analytical values given in Table 3 forμWTSCQwe notice that our simulated results are very close. The error percentage for all except MPCA is less than 0.5 percent. For the MPCA case it is about 4 percent. Also, in Table 4 we display the simulated values for Fbelow. Note that for the Poisson arrivals (EXPA) the simulated value of this measure is 0.6325 as opposed to the theoretical value of 0.6321.Next we validate our simulated model for various combinations of L and p by fixingγ=1.0. We fixλ=1,μ1=μ2=1.2,vary p to take values 0, 0.5, and 0.99; vary L to take values 1, 2, 5, and 10. The error percentages, calculated as (Analytical−Simulated)/Analytical, for seven system performance measures under various scenarios are displayed in Table 5. A quick look at these values reveals the proximity of our simulated results to the analytical ones. It should be pointed out that there are a few very large error percentages such as 14.98 percent, 16.17 percent, 17.36 percent and 21.88 percent, and these are due to very small values for the corresponding measures. For example, in one case the actual probability is 0.0010 where as the simulated value is 0.00128. These two are very close even though the percentage error is high.We will now focus on the effectiveness of the cooperative services introduced in our model. In the following we will use μWTS to denote the mean waiting time in the system of a customer at an arrival epoch for the model under study. To study the effectiveness, we will look at our model using the two measures, μWTS and Fbelow, and compare them to the corresponding classical queue. The reasons for looking at these two measures are as follows. First from a customer’s point of view, μWTS should be less thanμWTSCQin order to request cooperative services. Second, one would like to see more customers leave the system by spending less time (as compared toμWTSCQ) in the system.Example 3Here, we fixλ=1,μ1=μ2=1.2,γ=1.0,p to take selected values in [0,1), and vary L to take values 1, 2, 5, and 10. In Figs. 3 and 4, respectively, we plot Fbelow and μWTS. An examination of these two figures reveal some interesting observations.•We see significant advantage in requesting cooperative services for all types of arrival processes. The level of advantage depends on the values of L, p, and the type of arrival process. This is the case whether one looks at μWTS or Fbelow for effectiveness.Since the group size, L, plays a role as pointed out earlier, suppose L* denotes the value of L for which Fbelow increases for L ≤ L* and decreases for L ≥ L*. Of course this L* will depend on p and the type of arrival process. In the case of ERLA, EXPA, and MNCA, we see that L* increases as p is increased. For the other two arrival processes on needs L to be greater than 10 since in our figures L is varied only from 1 to 10. While for HEXA a value of 30 for L is sufficient to see this trend, for MPCA one needs a value greater than 500. This points out that for arrival process with a larger variation and or with a positive correlation, cooperative services appear to be more desirable to minimize μWTS or to maximize Fbelow.When only a very small percentage of customers require cooperative services (i.e., when p is close to 1), μWTS will be larger compared toμWTSCQ. This is to be expected and is clearly seen in all but MPCA arrivals.The phenomenon of μWTS decreasing initially and then increasing as a function of L by keeping all others fixed can be intuitively explained as follows. Smaller L forces a Type 2 customer to become a Type 1 customer (sinceγ=1in our example) more often resulting in an increase in μWTS. Similarly a large L forces Type 2 customers to wait longer to form a group to receive service resulting in an increase in μWTS.In this paper we considered a queueing system in which customers may request for cooperative services which are offered in groups of fixed size. The purpose of such requests is to minimize the waiting time in the system or to maximize the chances of staying in the system shorter than the average time it takes in the corresponding classical queueing model with first-come-first-served basis or to share the costs associated with services with fellow customers or a combination of two or more of these. Using a versatile point process to model the arrivals and exponential services the model was studied in steady-state. We also employed simulation approach in order to quantify certain measures, which otherwise, are very difficult to obtain. Through numerical examples we showed the significant benefits in introducing cooperative services in classical queueing models. Even though the concept of cooperative services in the context of inventory exists, to our knowledge cooperative service from a customer’s point of view has not been studied in the literature.The model under study can be generalized in a number of ways. Some specific ones are as follows. Having multiple servers in the system will greatly help practitioners to implement this model in real-life applications. Currently we allow at most two groups of size L customers needing cooperative services to be present in the system at any given time. This can be relaxed to allow, say, K, 2 < K < ∞, groups and see how large a K should be to minimize the probability of a Type 2 customer is lost or converted to a Type 1. Finally, which is probably more suited to study using simulation, is to consider phase type services in the presence of multiple servers. The results of these will be reported elsewhere.

@&#CONCLUSIONS@&#
