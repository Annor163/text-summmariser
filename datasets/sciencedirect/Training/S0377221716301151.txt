@&#MAIN-TITLE@&#
A simple yet effective decision support policy for mass-casualty triage

@&#HIGHLIGHTS@&#
We consider a mass-casualty incident with an arbitrary number of patient classes.We develop a simple, effective index policy to prioritize patients.The proposed policy is ideal for providing decision support to on-scene responders.Our heuristics perform almost as well as complicated optimization models.

@&#KEYPHRASES@&#
Triage,Disaster response,Heuristics,

@&#ABSTRACT@&#
In the aftermath of a mass-casualty incident, effective policies for timely evaluation and prioritization of patients can mean the difference between life and death. While operations research methods have been used to study the patient prioritization problem, prior research has either proposed decision rules that only apply to very simple cases, or proposed formulating and solving a mathematical program in real time, which may be a barrier to implementation in an urgent situation. We connect these two regimes by proposing a general decision support rule that can handle survival probability functions and an arbitrary number of patient classifications. The proposed survival lookahead policy generalizes not only a myopic policy and a cμ type rule, but also the optimal solution to a version of the problem with two priority classes. This policy has other desirable properties, including index policy structure. Using simple heuristic parameterizations, the survival lookahead policy yields an expected number of survivors that is almost as large as published methods that require mathematical programming, while having the advantage of an intuitive structure and requiring minimal computational support.

@&#INTRODUCTION@&#
A mass-casualty incident (MCI) is an event resulting in a number of injured persons (casualties) that is larger than the number of available emergency-response resources, so that it is not possible to provide immediate treatment to every casualty. In the aftermath of a MCI, responders attempt to provide care to as many of these casualties as effectively as possible. A critical component of any such response effort is mass-casualty triage. Mass-casualty triage consists of two steps: classification and prioritization. In the classification step, casualties are evaluated based on medical criteria and assigned to one of several triage classes. In the prioritization step, responders use intelligence about the type of incident, the number of available resources, and the number of casualties in each triage class, to decide which triage class should receive priority to access the available resources. Resources could include ambulances, hospital beds, doctors and nurses, medical equipment, or medicine. In many MCIs, mass-casualty triage is performed at the site of the incident to determine how to transport the casualties to the hospital(s) participating in the response effort, in which case resources are typically ambulances. Decisions made by responders include the order in which to transport the casualties and the destination hospital for each casualty (when more than one hospital is available).The goal of mass-casualty triage is to “do the greatest good for the greatest number” (Frykberg, 2005). Towards this goal, medical researchers and operations researchers have studied the problem of patient prioritization in mass-casualty triage, and proposed methods that range widely both in terms of their level of sophistication (such as the ability to account for various operational constraints) and also in terms of their level of operational complexity (such as the technology required to implement them). While simple triage methods involving a small number of patient classes have traditionally been preferred by providers due to their ease of implementation, recent research has suggested that emergency planners may want to evaluate the use of additional triage classes or more sophisticated prioritization policies in order to increase the expected number of survivors.In this article, we propose a simple yet effective decision support policy called survival lookahead, wherein priority is assigned to the class whose survival probability decreases the most over a class-specific period of time, and we show that this type of policy performs almost as well as much more sophisticated optimization models but is far more practical from an implementation perspective. In order to develop this decision support policy, we first review existing methods for patient prioritization in mass-casualty incidents and identify desirable characteristics of a patient prioritization policy (see Section 2). Using stylized optimization problems that maximize the expected number of survivors, we show that with appropriate tuning, a survival lookahead policy generates priorities that are partially consistent with the optimal solution (see Section 3). Building on these results, we propose heuristic implementations that do not require any sophisticated computational technology (see Section 4). Finally, we conduct numerical experiments comparing the performance of the proposed heuristics to published optimization problems (see Section 5) with an extension to the case where not all casualties have arrived when the initial decision is mode, and we discuss the implications for practice (see Section 6).Prior work on mass-casualty triage and patient prioritization has involved three main methodologies. Qualitative fixed-priority methods have largely emerged from the medical community, and place a much larger emphasis on patient classification than on optimal prioritization for treatment or transportation. Triage rules based on quantitative methods offer an alternative to fixed-priority methods but without solving a full-fledged optimization problem (Argon, Ziya, & Righter, 2008; Jacobson, Argon, & Ziya, 2012; Mills, Argon, & Ziya, 2013; Mills, Argon, Ziya, Hiestand, & Winslow, 2014). Finally, mathematical programming models to determine an optimal patient prioritization schedule have been published in both the medical and operations literature (Dean and Nair, 2014; Sacco et al., 2005, 2007). We review each of the existing types of models and the benefits and drawbacks of each.One of the most popular qualitative, fixed-priority methods is START, which stands for Simple Triage and Rapid Treatment. START has been used for mass-casualty triage in the United States since the 1980s. Providers using START assess each casualty using strictly medical criteria and assign one of four triage classes: expectant or black tag for patients who are expected to die regardless of the resources provided to them, immediate or red tag for patients who need treatment most urgently, delayed or yellow tag for patients who have critical conditions but can afford to wait for some length of time, and minor or green tag for patients who do not have any critical condition and would therefore be expected to survive (Lerner et al., 2008). Fig. 1depicts the START classification. Once the casualties are classified, a simple fixed-priority policy is used, with immediate having the first priority, followed by delayed, minor, and expectant.A recent effort made to update and standardize mass-casualty triage in the medical community resulted in SALT, which stands for Sort, Assess, Lifesaving intervention, and Treatment/transport. SALT emphasizes these four steps to reflect the fact that mass-casualty triage involves more than just assessing the casualties’ conditions. The “assess” phase of SALT is depicted in Fig. 2. One of the major differences compared to START is that qualitative consideration is given both to the availability of resources and to the probability that the patient will survive when deciding whether to tag patients expectant or immediate. In other words, SALT incorporates operational considerations in a qualitative way. However, like START, once the assessment phase is over, SALT also prioritizes patients in a fixed-priority manner, without regard to the number of casualties or number of resources.Patient prioritization in mass-casualty incidents can be modeled from a queueing perspective as a multi-class clearing system. In such a system, each patient is available at time zero and belongs to a class, with different classes potentially having different rewards, service times, and lifetimes. Glazebrook, Ansell, Dunn, and Lumley (2004) establish the near-optimality of a state independent fixed-priority scheduling policy when lifetimes are exponentially distributed under the limiting case where lifetimes approach infinity. In that case, patients should be prioritized according to an “rμ” rule, where r is the expected reward, μ is the service rate; patients with larger values of rμ should be prioritized. Argon et al. (2008) and Jacobson et al. (2012) model each patient’s lifetime as a random variable whose distribution depends on the class of the patient, with more critical patients having shorter lifetimes in a stochastic sense. If a patient is not served before his or her lifetime, he or she dies, otherwise the patient either definitely survives (Argon et al., 2008) or survives with a class-dependent probability (Jacobson et al., 2012). Argon et al. (2008) show that if the optimal policy is an index policy, it must agree with the “rμ” rule, but that the optimal policy is often more complicated than an index policy. Jacobson et al. (2012) report a threshold policy based on the total number of patients performs well in the case with two classes.Mills et al. (2013) use a fluid model with decreasing survival probability functions to develop the ReSTART rule. ReSTART uses resource availability to determine the relative priority of immediate and delayed patients who are assessed using START, SALT, or another color-tag system, by computing an index τ based on the number of patients in each class, the number of resources, the service rate, and the survival probability functions. When τ takes on values below zero, delayed patients should be prioritized. When τ takes on a sufficiently large value immediate patients should be prioritized. Finally, when τ takes on an intermediate value, immediate patients should be prioritized only for the first τ minutes. In other words, τ can be thought of as a timer that indicates it is time to switch priority from the immediate to the delayed class (see Fig. 3). While ReSTART provides a simple and intuitive prioritization policy, its main specification is based on the difference between two survival probability functions and so it does not have a natural extension to more than two patient classes.Methods that formulate a mathematical program offer the greatest level of precision and can incorporate a richer variety of operational constraints, but they also pose the greatest challenges to implementation. Sacco et al. (2005) propose an approach named “Sacco Triage Method (STM)”, which is a combination of patient assessment using a Respiration–Pulse–Motor (RPM) score and patient prioritization using linear programming. An RPM score is determined by rating the casualty on a zero-to-four scale on three dimensions and adding these three numbers together, resulting in 13 possible triage classes corresponding to the integers 0–12. In the linear program, time is discretized and it is assumed that each ambulance can take one patient to the hospital in each time period, while no consideration is given to treatment time. Dean and Nair (2014) propose “Severity Adjusted Victim Evacuation (SAVE)” to incorporate multiple hospitals and different treatment times that depend on the patient’s triage class. SAVE outperforms STM and various fixed-priority policies in this more-realistic scenario (Dean and Nair (2014)). Both STM and SAVE operationalize the goal of mass-casualty triage (to do the greatest good for the greatest number) in terms of the expected number of survivors by modeling patient criticality through declining expected survival probability functions (see Fig. 4).The method of Dean and Nair (2014) is attractive because it provides a very general specification that can be adapted to many different situations, and with sufficient data, such functions may be estimated empirically. However, there are some potential drawbacks to an optimization-based approach. In our discussions with emergency planners, managers, and responders, we found that in MCIs, triage often begins (and sometimes ends) before a full incident command can be established. In the absence of a managerial structure, initial responders may be able to implement simple decision rules (such as those that can be presented on a chart or determined with a simple calculation), but they would not have the organizational capability or software support required to solve a mathematical program. Even in a well-organized incident, variations in technology adoption may necessitate using triage priorities that can be calculated offline. In the US, mass-casualty triage is usually carried out by first responders in a local emergency medical services (EMS) system. Because EMS systems are established in local jurisdictions, there is wide regional variability in the amount and type of technology resources available to EMS providers, ranging from complex electronic systems to simple pen-and-paper recordkeeping. Therefore, not every EMS system can realistically expect to implement a solution based on solving an optimization problem in real-time.A natural research question is whether we can develop decision support policies for patient prioritization that generalize existing decision rules and add additional precision or richness to the problem without solving a mathematical program for each problem instance. Ideally, we would like to have a policy that is intuitive for responders to understand, easy to implement in a chaotic environment without software support, capable of handling an arbitrary number of patient classes, and capable of handling general survival probability functions.In order to satisfy the first two characteristics, we take an approach that falls mostly in line with the stream of literature reviewed in Section 2.2, namely using a quantitative model to develop a rule or policy that can be used in decision support, and testing the resulting heuristics against an optimization model.Denote the set of triage classes by C. Each customer in class i ∈ C has expected reward Ri(t) when that customer is taken into service after waiting t ≥ 0 time units, and we can serve patients in class i ∈ C at rate μiper unit time. In the mass-casualty triage problem, rewards are equal to survival probabilities, and thus the expected total reward is equal to the expected number of survivors. We first state an assumption to guarantee that rewards are consistent with the fact that patients deteriorate over time.Assumption 1The expected reward Ri(t) is decreasing in t ≥ 0 for all i ∈ C.In Sacco et al. (2005), Dean and Nair (2014), and other papers using RPM triage,C={0,1,…,12}. In both of these papers and Mills et al. (2013), it is the case that classes with larger indices bring larger expected rewards at all points in time. We adopt this observed phenomenon as an assumption and state it formally as follows:Assumption 2The expected reward functions for classesi,i+1∈CsatisfyRi(t)≤Ri+1(t).In Dean and Nair (2014), patients in classes with smaller indices have a longer service time, while in Sacco et al. (2005) and Mills et al. (2013), all patients have the same service time. We generalize these assumptions here:Assumption 3The service rates for classesi,i+1∈Csatisfyμi≤μi+1.Assumption 3 means that casualties belonging to a less-severe class have a shorter expected service time. We note that Assumptions 2 and 3 together imply that μiRi(t) ≤ μjRj(t) for any i < j, meaning that less-severe patients always accrue more reward per unit time in service than more-severe patients.Given the assumptions defined above, we now discuss two published formulations: one discrete formulation, which is due to Sacco et al. (2005), and one fluid formulation, which is due to Mills et al. (2013). Both of these formulations are highly stylized in the sense that they consider only the decision of which class of patients should be transported, ignoring factors such as bed availability at hospitals, the presence of multiple hospitals, etc. However, both of these formulations incorporate declining survival probability functions. We will show in Section 3.2 that the optimal solution to both of these two formulations have a certain structure, which we later exploit to develop heuristics that can be used for obtaining solutions to the broader patient prioritization problem. STM formulates the patient prioritization problem as a linear program by discretizing the time horizon into k equally-spaced time periods occuring at time points{t1,t2,t3,…,tk}and supposing a common integer service rate μ for each class per time period. Given a total number of patients niin each class i ∈ C, the decision is how many patients from class i ∈ C to transport in each periodj∈{1,2,…,k},denoted by xij. Transports occur entirely within one period. Therefore, the linear programming formulation is(1)max∑i∈C∑j=1kRi(tj)xijs.t.∑i∈Cxij≤μ∀j∈{1,2,…,k}∑j=1kxij=ni∀i∈Cxij≥0∀i∈C,j∈{1,2,…,k}The objective function maximizes the expected number of survivors (assuming that casualties of class i transported in time period j have survival probability Ri(tj)). The first constraint ensures the number of patients transported in each time period cannot exceed the service rate. The second constraint ensures that all patients are eventually transported (note that it is assumed in STM that patients are stabilized and do not die before transportation begins). Because the constraint matrix is totally unimodular—in fact, (1) is a minimum cost flow problem over a network—an integer solution is guaranteed.We can approximate the reward earned in the clearing system by a fluid model, where patients are served continuously, as in the model used for ReSTART. The fluid model approximates discrete patients as a continuous quantity of fluid, which makes analysis more tractable (because a partial customer may be served without worrying about preemption, and treatment times need not correspond to an integral number of time periods) without sacrificing the basic structure of the problem. Therefore, when the system prioritizes class i ∈ C patients at time t ≥ 0, the system earns reward at the rate of μiRi(t) per unit time. By letting c(t) denote the decision variable for which class is in service at time t, we formulate the fluid maximization problem as(2)max∫0Tμc(t)Rc(t)(t)dts.t.c(t)∈C,∀t∈[0,T]λ({t:c(t)=j})=nj/μj,∀j∈C,where λ(S) is the Lebesgue measure of set S, andT=∑j∈Cnj/μjis the total time needed to serve all patients if the server does not idle. In (2), the decision variable c(t) maps each time t ≥ 0 to the class of patients receiving service at time t, andλ({t:c(t)=j})is simply the total amount of time spent serving class j patients (which must equal nj/μjif all patients are served). Without loss of generality, we can assume that{t:c(t)=i}=∪{[sil,til),l=1,2,…,ζi}such thattil<si(l+1),which is to say, there exists an optimal solution to (2) where patients of class i receive service during a set of non-overlapping time intervals. Formulation (2) is similar to the formulation used by Mills et al. (2013) but allows for different service rates by patient class.Before moving on, we note that both the discrete formulation (1) and the fluid formulation (2) approximate the real world in different ways: the discrete formulation assumes that treatment/transportation occurs in a single time period and that the reward depends only on the point in time when the patient is transported, while the fluid formulation assumes that treatment/transportation occurs continuously and the reward is averaged over the time interval in which the class of patients is served. Because we can discretize time into arbitrarily small increments, the fluid formulation (2) can be seen as a limiting case of the discrete formulation (1), but where transportation is allowed to take more than one time period.In our analysis, we begin by making an observation about the structure of the optimal solution to a special case of the fluid model (2) with two classes (see Section 3.2). Then, we analyze the solution to the discrete formulation (1) (see Section 3.3). The analytical results for both models motivate the heuristics we develop in Section 4.In ReSTART,C={0,1},μ0=μ1,and it is assumed thatR1(t)−R0(t)is quasiconcave, i.e., first increasing, then decreasing in t. Under this assumption, Mills et al. (2013) proved that priority should be given to class 1 if and only ifR1(t+Δ1)−R0(t+Δ1)≤R1(t)−R0(t),or in other words,(3)R1(t)−R1(t+Δ1)≥R0(t)−R0(t+Δ1),where Δ1 is the length of time needed to serve all class 1 patients. One can interpret (3) as saying that priority should be given to class 1 when it has “the most to lose” over a certain time interval, in this case, the length of time it would take to serve all the class 1 patients. This decision rule depends explicitly on the reward functions and implicitly on the number of class 1 patients, their service rate, and the number of servers (through Δ1). Under Assumption 3, the result of Mills et al. (2013) extends naturally to the case with unequal service rates as follows.Proposition 1Suppose thatC={0,1}and thatμ1R1(t)−μ0R0(t)is quasiconcave (increasing, then decreasing) in t ≥ 0. Then the policy that maximizes the total expected reward in the fluid model prioritizes class 1 if and only if(4)μ1(R1(t)−R1(t+Δ1))≥μ0(R0(t)−R0(t+Δ1)),The above result leads us to consider a way to generalize such a rule to more triage classes. The type of decision rule observed in Proposition 1 belongs to a class of decision rules that we call survival lookahead policies.Definition 1Survival Lookahead (SL) policyA survival lookahead policy is a policy that gives priority at time t ≥ 0 to the class i ∈ C with the largest indexμi(Ri(t)−Ri(τi(t)))(among those classes with non-zero number of patients at time t), where τi(t) ≥ t is a point in time in the future relative to t (i.e., when to “look ahead” at the survival probability).We further refine the class of survival lookahead policies as follows:Definition 2Constant SL policyA survival lookahead policy is constant if there exists constant σi≥ 0 such thatτi(t)=σifor all 0 ≤ t ≤ σiandτi(t)=tfor all t > σi.A survival lookahead policy is shifted if there exists constant ζi≥ 0 such thatτi(t)=t+ζifor all t ≥ 0.In other words, a survival lookahead policy is constant if it always looks ahead to the same point in time σifor class i regardless of the current time t. On the other hand, a SL policy is shifted if it always looks the same amount of time ζiahead into the future for class i regardless of the current time t. By examining the definitions above, we see that any given SL policy may be constant, shifted, or neither.We now give a partial characterization of the optimal solution to the discrete model (1), which lends further support to the idea that SL policies may be a good heuristic for patient prioritization.Assumption 4For any i, j ∈ C such that i < j, the functionRj(t)−Ri(t)is quasiconcave.Suppose that for any i, j ∈ C such that i < j,μi=μj=μas in(1), andAssumption 4holds. There exists an optimal solution to(1)in which for any i, j ∈ C such that i < j, one of the following holds:1.vi≤ uj,vj≤ ui, orui≤ uj≤ vj≤ vi.A proof is given in the Appendix. Proposition 2 states that there exists an optimal solution where the relationship between classes i and j takes one of three forms: (i) low index priority, i.e., class i finishes service at or before the time when class j begins, (ii) high index priority, i.e., class j finishes service at or before the time class i begins, or (iii) high-interrupts-low, where j begins service at or after when i begins, but ends at or before when i ends.Note that Assumption 4 holds for all but one of the 78 pairs of reward functions shown in Fig. 4 (the one pair for which it does not hold isj=11,i=10). Assumption 4 also holds for the fitted survival probability curves used in Mills et al. (2013).Proposition 3For any optimal solution to(1)satisfyingProposition 2, there exists a constant SL policy π such that for all i, j ∈ C such that i < j, either (a) class i always has priority over class j in the optimal solution, or (b) class i is prioritized over class j at time point t in the optimal solution only if class i is prioritized over class j at time point t in policy π.A proof is given in the Appendix. Note that Proposition 3 suggests that there is a constant SL policy that is partially consistent with the optimal solution to (1), in the sense that for any two classes, in the optimal solution the class with smaller index either always has priority over the class with the larger index or it has priority over the class with the larger index only if it has priority in the constant SL policy. Because the proposition is unidirectional (“only if” rather than “if and only if”), this leaves open the possibility that the constant SL policy may give priority to the class with the larger index in some time points where the optimal policy gives priority to the class with the smaller index. In other words, the given constant SL policy may prioritize classes with larger indices more aggressively than the optimal policy.RemarkBecause time could be discretized into arbitrarily small increments in (1) (in which case, the solution to the discrete formulation approaches the solution to the fluid formulation), the structure proved in Proposition 3 would also hold for the fluid formulation (2) for the special case where all service rates are equal, i.e.,μc=μfor all c ∈ C.Propositions 1 and 3 both indicate that under certain conditions, the optimal solution to formulations (1) and (2) are similar to an SL policy. This observation suggests that using some SL policy should be a reasonable heuristic for solving the patient prioritization problem. Unfortunately, neither proposition gives us a way to determine which SL policy to use, without already knowing the optimal solution. Therefore, while we have reason to believe a SL policy should work well, we need heuristics to determine how to translate a problem instance to an implementable SL policy. In both Propositions 1 and 3, the constant SL policy looks ahead to the last point in time when patients of a given class are served. Given this observation, in the next section, we use this intuition to develop heuristics to approximate the last point in time at which patients of a given class will be served.In this section, we construct four heuristics using the SL policy framework. Two of the heuristics are based on simple limiting cases of the SL policies (see Section 4.1). The other two heuristics are more sophisticated in the sense that they incorporate information about the number of patients in each class to approximate the constant SL policy of Proposition 3 (see Section 4.2).It is natural to consider two possible limiting cases for the SL policies. The first limiting case is the limit of the constant SL policy where σi→ ∞ for all i ∈ C. That is, the policy compares the survival probability now to the survival probability arbitrarily far in the future and selects the class with the largest difference. When the time-limiting survival probability for all injured casualties is zero, this policy amounts to simply selecting the class i at time t that has the largest value of μiRi(t). From here on, we label this policy myopic.The second limiting case is the limit of the shifted SL policy with ζi→ 0 for all i. That is, we consider the change in (service-rate-weighted) survival probability over an infinitesimally small amount of time, or in other words, the derivative of the survival probability. This policy amounts to selecting the class at time t with largest−Ri′(t)μi. This policy is very similar to the generalized cμ rule (van Mieghem, 1995), so we label this policy G–Rμ.While the existence of a constant SL policy that is partially consistent with the optimal solution suggests that constant SL policies may be good heuristics in the patient prioritization problem, constructing the constant SL policy in Proposition 3 requires knowing the time that the last patients in each class are transported in the optimal solution. While we obviously cannot know this time exactly, we do know how long it will take to transport all the patients in a given class, and from Proposition 2, we know which other class(es) may preempt patients of a given class. Specifically, at any time t, without knowing the optimal solution, we at least know that the elapsed time until the last patient in class i ∈ C is transported will be at least the amount of time to transport all remaining patients in class i and at most the amount of time to transport all remaining patients in class i and all other classes that may preempt class i. This principle forms the basis of the following two shifted SL policies, which bound the constant SL policy given in Proposition 3.Heuristic 1Lower bound on lookahead timeUse the shifted SL policy, with lookahead parameterζi=ni/μi.Heuristic 1 chooses the class whose survival probability function will deteriorate most over the length of time that would be required to serve all patients of that same class. In this case,t+ζiis a lower bound for the last point in time when class i would be served in an optimal solution, because some other classes may interrupt the service of class i (see Proposition 2).Heuristic 2Upper bound on lookahead timeUse the shifted SL policy, with lookahead parameterζi=∑j∈C:j≥inj/μj.Heuristic 2 chooses the class whose survival probability function will deteriorate most over the length of time that would be required to serve all patients of that same class, plus all patients of all other classes that could preempt the service of class i patients, according to the third case of Proposition 2. In this case,t+ζiis an upper bound for the last point in time when class i would be served in an optimal solution, because not all such classes actually will interrupt class i (i.e., there may be classes j ∈ C: j > i for which the first case of Proposition 2 applies).We can also apply the class of SL policies to the case of patient transportation to multiple hospitals. Let H be the set of available hospitals and for any class c ∈ C and hospital h ∈ H, and let μc, hbe the service rate if the available resources are used to take class-c patients to hospital h. For example, if there are a ambulances traveling at rate r and the round-trip distance to hospital h ∈ H is dh, thenμc,h=ar/dh. Then a SL policy would choose the class–hospital pair with maximum indexμi,h(Ri(t)−Ri(τi(t))). Note that for a given class of patients, it is always preferable to take them to the closest hospital with available capacity. However, depending on the relative magnitude ofRi(t)−Ri(τi(t)),it might be preferable to take patients of some other class j to a more remote hospital prior to taking patients of class i to the closest hospital, if there are no beds available for class j patients at the closest hospital. In the following, suppose without loss of generality that the hospital setH={1,2,…,|H|}and that d1 ≤ d2 ≤ ⋅⋅⋅ ≤ d|H|.For the myopic and G–Rμ heuristics, no further modification is needed since these heuristics use only μ and Ri( · ); for Heuristics 1 and 2 (lower bound and upper bound lookahead times), we modify the time shift so that ζistill represents a lower bound (Heuristic 1) or upper bound (Heuristic 2). For Heuristic 1, setζi=ni/μi,1,which is the earliest possible time that class i could finish transportation if it starts now, and for Heuristic 2, setζi=∑j∈C:j≥inj/μj,|H|,which is the latest possible time that class i could finish transportation if it starts now.We use these modifications in the results where we compare the performance of the SL policies to SAVE, which considers multiple destination hospitals (see Section 5.2). Specifically, to determine the optimal solution, a formulation generally needs to make two decisions (which class of patients to transport and to which hospital) at the same time. We separate these decisions as follows to keep the policy simple to implement and understand:1.Select the class i ∈ C with largest SL policy index (see Definition 1, with τi(t) computed according to the heuristic in use (myopic, G–Rμ, Heuristic 1, or Heuristic 2).For the selected class, send patients to the closest hospital with available beds for that class of patients.

@&#CONCLUSIONS@&#
