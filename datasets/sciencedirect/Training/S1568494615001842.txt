@&#MAIN-TITLE@&#
An ACO hybrid metaheuristic for close–open vehicle routing problems with time windows and fuzzy constraints

@&#HIGHLIGHTS@&#
A new variant of VRPTW with close and open routes is introduced that responds to a real problem.The problem includes imprecision in capacity and time window constraints, which are modelled as fuzzy constraints.Fuzzy optimization approach is applied to address the problem modelled as a linear programming problem.A hybrid ACO metaheuristic procedure based on GRASP and VNS is provided to search for optimal solutions of the problem.The experiments show that the hybridization contributes to improve the performance.

@&#KEYPHRASES@&#
Close–open vehicle routing problem with time windows,Hybrid metaheuristic,Ant colony optimization,Fuzzy constraints,

@&#ABSTRACT@&#
The close–open vehicle routing problem is a realistic variant of the “classical” vehicle routing problem where the routes can be opened and closed, i.e. all the vehicles are not required to return to the depot after completing their service. This variant is a planning model that is a standard practice in business nowadays. Companies are contracting their deliveries to other companies that hire vehicles, and payment is made based on the distance covered by the vehicles. Available information on parameters in real world situations is also imprecise, and must be included in the optimization model and method. The aims of this paper are to formulate a model of this novel variant with time windows and imprecise constraints and to propose a fuzzy optimization approach and a hybrid metaheuristic for its solutions. The full proposal is applied to a real route planning problem with outsourcing, obtaining promising practical results. Customer demands and travel times are imprecise, thus capacity and time windows constraints are considered flexible and modelled as fuzzy constraints.

@&#INTRODUCTION@&#
Outsourcing is a current business practice that provides increases in efficiency or quality in services and operations. Activities that are not directly included in strategic business objectives can be outsourced because they do not produce added value or cost savings. This situation occurs in logistics and transport activities, where many companies opt for collaboration and recruitment of specialist companies to carry out these activities. Thus, companies with their own resources hire the services of other companies, with complementary resources, to provide for occasional needs or to fulfil part of their business strategy.Route planning is among the operational decisions of logistics, transportation and distribution companies that have a high impact on the efficiency and quality of services. Nowadays these problems are of the utmost importance, and not only because of economic reasons. The possibility of obtaining high quality solutions as soon as possible with independence of the human operators cannot be ignored. Human interaction can fail, delay answers or cause unrecoverable errors. Hence, the availability of intelligent systems that effectively implement operative models and suitable solutions is a priority. However, in-depth knowledge of the models on which they are to be based is required for such systems.The most widely studied and used model for route planning is the vehicle routing problem (VRP). This model was introduced by Dantzig and Ramser in 1959 [7], as a CVRP (capacitated-VRP) but its current relevance is beyond doubt. In short VRP is the determination of the optimal set of routes to be performed by a fleet of vehicles, in order to satisfy the demand of a given set of customers. Several variants of this problem have been formulated and studied. In particular the vehicle routing problem with time windows (VRPTW) is used for its practical applications. In this variant customers must be served in a specific time interval, which are included as time windows constraints [50]. In other problems vehicles need not return to the depot after delivering goods to customers, and instead go to other locations. This variant of the VRP, in which vehicles do not return to the depot is called the open vehicle routing problem (OVRP) or the open vehicle routing problem with time windows (OVRPTW) when time windows constraints are specified. The OVRP was first described in a paper by Schrage [44] and specified the differences between closed and open trips. Bodin et al. [5] proposed the first solution approach for the OVRP. OVRPTW was first addressed as a whole by Repoussis et al. in [39]. These problems are NP-hard [6] which make them intractable with large instance problems, as is usual in real applications, and hence the need of using heuristics and metaheuristics to provide feasible methods to find optimal solutions. In recent years several researchers have used various heuristics and metaheuristics to solve the OVRP with success. The most common metaheuristics are based on search, such as tabu search [6,9,15,16,23,42], neighbourhood-based search [14,37,43,57], or threshold accepting algorithm [47,48]. Other researchers have applied bio-inspired and populations based metaheuristics, particle swarm optimization [18,35,54,59], ant colony optimization [29,30] or genetic and evolutionary computing [36,40,55]. The OVRPTW has also been studied, but with fewer references in the literature, [27,28], in these cases applied to the genetic and ant colony algorithm, respectively. Other variants of the OVRP have also been considered, with special nodes called driver nodes and time deadlines using tabu search metaheuristics [3] or the multi-depot OVRP by applying threshold accepting algorithm [46].Some companies may be aware of specific time periods when there is an increase in demand. These periods exert additional service demands on its own fleet and compromise the quality of service. However, this occasional additional demand does not justify investment in new vehicles. One solution to this situation is to outsource services from other companies to meet the additional demand. A specific practical route planning problem is one that occurs in companies that are willing to collaborate and subcontract. They must decide which demand (customers) will be served by their own fleet and which demand will be served by another operator with an external fleet, and then determine how to organize the different routes. The company has to plan routes and allocate customers and vehicles, where their own vehicles must return to the depot while external ones do not return. Route planning with owned vehicles that return to depot and outsourced vehicles that do not need to return correspond to a mixed OVRP and VRP problem, and needs to be modelled. This version of the close–open VRP was recently addressed in [31]. In this paper we address and focus on the interesting version of the close–open vehicle routing problems with time windows (COVRPTW).Moreover, in practical applications of routing problems, customer demand and travel time are often imprecise, not in a probabilistic sense, but in a linguistic one. The difficulty for a customer to know its demand beforehand is quite common, just as is the establishment of a specific form of quantity demanded. Thus it is difficult to measure in specific units an amount that will allow some comparison criteria to be established with vehicle capacity. In addition, road conditions or traffic congestion cannot allow an accurate travel time to be set. In the problem here considered, customer demand and travel time are linguistically imprecise, thus capacity and time windows constraints can be considered flexible and modelled as fuzzy constraints. An operative approach to manage this kind of uncertainty is required when studying and solving these problems.Soft computing is presented as an adequate family of problem resolution methods such as probabilistic reasoning, fuzzy logic and fuzzy sets, neural networks and metaheuristics, in addition to all of the hybrid models which have been derived from the combination of these components. A variety of soft computing techniques have been employed to supply chain management, including the vehicle routing area [25]. In particular fuzzy sets and systems provide a suitable methodological approach for dealing with uncertainty which is a product of the imprecise nature of the information and decisions. Likewise metaheuristics are a good referent because they offer efficient solutions and strategies that are integrated with other soft-computing tools to facilitate approximate solutions to more complex real world problems [53].In this paper we use the ideas introduced by Bellman and Zadeh in 1970 [4], for fuzzy optimization problems and the model developed by Verdegay et al. [7,51]. These models provide a fuzzy linear programming (FLP) approach with a number of methods for solving these problems, in a direct and easy way, obtaining solutions that are coherent with their fuzzy nature. The fuzzy mathematical programming techniques are brief reviewed in [24], which also includes this approach as a new trend.COVRPTW with fuzzy constraints can be formulated as fuzzy optimization problems. In the literature a model with fuzzy demand for OVRP is proposed in [13]. In order to solve this problem, we propose the combination of FLP approach methods and hybrid metaheuristics to obtain solutions, which are feasible in practice. These hybrid solution approaches combine ideas from ACO (ant colony optimization), GRASP (greedy randomized adaptive search procedure) and VNS (variable neighbourhood search).ACO is a population-based swarm intelligence algorithm and was proposed by Dorigo and Gambardella [11]. Swarm intelligence and Ant Colony procedures have been successfully applied to some classic optimization problems and transportation problems, including VRPTW [1,17,20,49,45,60]. These metaheuristics are applied to solve VRPTW with good results, especially hybrid versions. Zhan et al. (2008) presented a hybrid ACS with dynamic sweep algorithms [58]. Marinakis et al. (2010) proposed several hybrids combining PSO with neighbourhood search strategies, GRASP and path relinking (PR) strategy in [32] and also with a genetic algorithm in [33]. Yu et al. (2011) used an ACO to improve diversity with a neighbourhood search and tabu search [56]. Ding et al. (2012) combined ACO with the saving algorithm and λ-interchange mechanism [10]. Recent researches have proposed some novel schemes to these population metaheuristics which would be of interest to solve these problems. For instance, immigrants schemes introduced in [34] for increasing diversity in ACO. Other approaches include the knowledge extraction process proposed in the cultural algorithm [2], the adaptation of PSO based on the law of gravity and mass interactions described in [38] and the use of the proportional fairness ordered proposed in [26].The rest of the paper is organized as follows. The next section describes the COVRPTW formulations when capacity and time window constraints are fuzzy. Section 3 explains the fuzzy approach to solve these variants of VRPTW with fuzzy constraints. In Section 4 we present the hybrid metaheuristic procedure based on GRASP and VNS combined with an ACO design to find solutions. In Section 5 computational experiments and results of applying our approach to a real problem are described. Finally, conclusions are included in the last section.We propose a COVRPTW model to approach and solve route planning problems of distribution companies that have a number of own vehicles and can contract external vehicles which must serve specified and dispersed demand points, satisfying a finite set of constraints and minimizing total operating costs. The objective consists in finding a set of routes that minimize total distance travelled. Each route starts at the depot and ends either at the depot (cycle/close route) or at a customer (path/open route). The route type depends on whether the vehicles are owned or not. Each customer is visited once and only once by exactly one vehicle and the demand of each customer must be completely fulfilled by a single vehicle within flexible and imprecise time windows. Additionally, the total demand served by each vehicle must not exceed vehicle capacity with a certain tolerance.The COVRTW includes a single depot, a known set of n customers and a variable set of vehicles. The customers are identified by an index i, i=1, 2, …, n, and the index 0 denotes the depot. The cost of travelling between nodes i and j, where i, j=0, 1, 2, …, n represent nodes, is denoted by cijand tijdenotes travel time from node i to node j. Each customer has demand amount qiand an unload time ui. Each customer i has a time window [ei, li] within which it must be served. All vehicles leave from the depot to carry out the deliveries. Each vehicle is represented by an index k, k=1, 2, …, m, and has a capacity Q. The first p indices correspond to the owned vehicles that return to the depot. However, for k>p, vehicle k ends its route at the last visited customer. The model contains two sets of decision variablesxijkandsik, i, j=0, 1, …, n, k=1, 2, …, m. For each arc two indices i and j and each vehicle k, we definexijk=1if and only if vehicle k travels from i to j, andxijk=0, otherwise. The decision variablesikis defined for each customer i and each vehicle k to denote the time vehicle k starts to service customer i.The COVRPTW is formulated as a linear programming problem as follows:Minimize(1)∑k=1m∑i=0n∑j=0ncijxijkSubject to:(2)∑k=1m∑i=0nxijk=1j=1,2,…,n(3)∑j=1nx0jk=1k=1,2,…,m(4)∑i=1nxi0k=1k=1,2,…,p(5)∑i=0nxijk−∑i=0nxjik≥0k=1,2,…,m,j=1,2,…,n(6)∑i=0n∑j=1nqjxijk≤fQk=1,2,…,m,(7)sik+ui+tij≤sjk+M(1−xijk)k=1,2,…,m,i,j=1,2,…,n(8)ej≤fsjkk=1,2,…,m,j=1,2,…,n(9)sjk+uj≤fljk=1,2,…,m,j=1,2,…,n(10)sik≥0k=1,2,…,m,j=1,2,…,n(11)xijk∈{0,1}k=1,2,…,m,i,j=1,2,…,n.Eq. (1) represents the objective function in terms of costs. Constraint (2) guarantees that exactly only one route/vehicle visits each customer. Constraints (3) and (4) ensure that each vehicle leaves the depot and each owned vehicle returns to it. Constraint (5) establishes that if a vehicle leaves a customer then it has reached it. Constraint (6) ensures that the total of customer demand in any route does not exceed the vehicle capacity Q. Constraint (7) states that a vehicle k cannot arrive at j beforesik+tijif it is travelling from i to j and guarantee subtours eliminations (M is a large scalar). Constraints (8) and (9) ensure that time windows are observed. Finally (10) and (11) establish the conditions of the variables. Note that symbols ≤fdenote that constraints (6), (8) and (9) are considered as fuzzy.If there is imprecision in some of the formulation components of the optimization problem and it can be expressed with fuzzy terms, then we are faced with a fuzzy optimization problem. Discussions concerning solutions do not focus on their feasibility, nor if they are optimal solutions or not. We, in turn, have chosen to discuss the degree of feasibility and optimality of the solution. In fuzzy optimization problems objectives and constraints can be defined in an imprecise way and are characterized using a membership function such as fuzzy sets.Fuzzy linear programming constitutes the basis for solving fuzzy optimization problems and their solution methods have been the subject of many studies in the fuzzy context. Different FLP models can be considered according to the elements that contain imprecise information that are used as a basis for the classification proposed in [51]. These models are: models with fuzzy constraints, models with fuzzy goals, models with fuzzy costs and models with fuzzy coefficients in the technological matrix and resources. In addition a fifth model, the general fuzzy problem, in which all of the parameters are subject to fuzzy considerations, can be studied. The corresponding approaches offer solutions to FLP [8] that provide methods for solving COVRPTW with fuzzy terms. Therefore this problem can be solved in a direct and simple way, obtaining solutions that are coherent with their fuzzy nature.This FLP model is formulated as:(12)Minimizez=cxsubjecttoAx≤fb[x≥0]wherec∈Rn,b∈RmandA∈Rm×n; i.e., c and b are n-vector and m-vector of real numbers and A is an (m×n)-matrix of real numbers.This is the case where constraints can be satisfied, and consequently the feasible region can be defined as a fuzzy set; it should be defined by means of a membership functionμ:R→[0,1]. In such a situation, for each constraint, a desirable upper bound b is considered. However, a greater value is accepted until a maximum b+τ (τ is referred to as violation tolerance level). The symbol ≤findicates the imprecision of the constraints and where each fuzzy constraint aix≤fbiis specified by a membership function in the form:(13)μi(aix)=1aix≤bifi(aix)bi≤aix≤bi+τi0aix≥bi+τiThis means that, for each constraint i, given the level of tolerance τi, to each point (n-dimensional vector) x is associated a number μi(x)∈[0, 1] known as the degree of fulfilment of the constraint i. the functions fiare assumed to be continuous and monotonous non-decreasing functions with fi(bi)=1 and fi(bi+τi)=0, usually the linear function f(z)=1−(bi−z)/τi.In particular, Verdegay [52], using the representation theorem for fuzzy sets, proves that the solutions for the case of linear functions fican be obtained from the auxiliary model:(14)Minimizez=cxsubjecttoAx≤b+τ(1−α)[x≥0,α∈[0,1]]whereτ=(τ1,τ2,…,τm)∈Rmis the tolerance level vector.LetX(α)={x∈Rn/Ax≤b+τ(1−α)}denote the α-cut of the feasible solution set, the corresponding α-cut of the optimal solution set isS(α)={x∈Rn/z(x)=cx,x∈X(α)}. Note that, given certain values of tolerance for the constraints, for each value of α we can obtain a feasible solution set. In particular, for a certain feasible solutions set we have a certain optimal solution set where we can search the optimal solution z*(α)=minz(x), x∈S(α). In another way, for each α, we obtain a new classical LP problem from which we can obtain a new optimal solution. The end result for the decision marker is an optimal solution range varying in α. The result is consistent with the fuzzy nature of the problem.In the COVRPTW model, the constraints which are considered as fuzzy are linear and are expressed with linear membership functions. Thus, we use this approach to obtain an equivalent model to solve the COVRPTW with fuzzy constraints which is obtained by replacing (6), (8) and (9) with the following constraints:(15)∑i=0n∑j=1nqjxijk≤Q+τ1k(1−α),k=1,2,…,m,(16)sjk≥ej−τ2j(1−α),j=1,…n,k=1,…m(17)sjk≤lj−uj+τ3j(1−α),j=1,…n,k=1,…mwhereτ1∈Rmandτ2,τ3∈Rnare the tolerance level vectors or the maximum violations in the fulfilment of capacity and time windows constraints provided by the decision maker, and α∈[0, 1]. Applying this model we obtain an optimal solution range varying with α.Solutions to real route planning problems require specific approaches that can handle both the intrinsic complexity and the uncertainty of setting. Metaheuristics are algorithmic techniques whose general purpose is to offer global search strategies to explore a solution space [19]. The main advantages of metaheuristics are their adaptability to problem characteristics and their use knowledge of the same problem to find a solution. These solution procedures are capable of tackling complex optimization problems, including those with imprecise information, evaluating possible alternatives and efficiently determining the preferred solution. Metaheuristics have been applied to VRP problems and their variants with success. One of the most important characteristics of these methods is seen in their ability to adapt to the instance and the resultant consistency seen when applying slight changes in the problem model and parameters. Thus it is common to adapt metaheuristics to different contexts in real world problems, with relatively few changes while adapting perfectly to the characteristics found in route planning problems.Our proposed metaheuristic uses a ACO-GRASP-VNS hybrid metaheuristic to solve COVRPTW with fuzzy constraints. ACO is a constructive metaheuristic inspired by the trail following behaviour of real ant colonies. It is a decentralized distributed cooperative strategy, where ants act in a concurrent and independent way, without direct communication, and where they cooperate in the exchange of information. ACO incorporates new elements to the solution in a probabilistic way, using the accumulated pheromone trail and heuristic information of the problem [12]. GRASP is a two-phase metaheuristic made up of a construction phase, in which a feasible solution is produced, and a post-optimization phase, in which this feasible solution is improved [41]. VNS is an effective metaheuristic based on a systematic change of the neighbourhood structure during the search [21].The constructive aspect of ACO algorithms distinguish it from others (such as those that estimate the distribution or particle swarm optimization). GRASP is a fast constructive metaheuristic to find good solutions. ACO is a constructive nature metaheuristic that is perfectly suited to GRASP. Applying ACO improves the performance through the exploration of new solutions. The combination enables a constructive search for solutions which provide new random solutions by GRASP and the process of historical memory introduced by ACO to converge to the global optimum. VNS is introduced as systematic process of local search to improve the solutions. Other bio-inspired evolutive algorithms like PSO (particle swarm optimization) or BCO (bee colony optimization) could be used. However, due to the constructive nature, ACO is used to be combined with the GRASP.The resulting ACO hybrid approach shown in Fig. 1works as follows. Following the ACO metaheuristic, the ants construct solutions in parallel using the GRASP. At each iteration of the ACO, each ant constructs a complete solution of the problem. Specific characteristics of the procedure applied by the ants improve by using heuristic information accumulated and shared by ACO. GRASP generates new solutions using this information. The VNS improves the best solution obtained at each iteration by applying a series of movements (chain moves) from nested neighbourhoods. The best solution found in the whole procedure is proposed as the heuristic solution. The selection of new solutions is based on a probabilistic rule taking into account of both visibility and pheromone information. The updating of the pheromone trails is a key element to the adaptive learning technique of ACO and the improvement of future solutions. The artificial ants use pheromone laid on trails as an indirect communication medium to guide the search. More pheromone deposits on better routes attract more ants for later search. This effect is called dynamic positive feedback and helps speed the convergence of ACO. ACO identifies and uses information on the best solutions at each iteration.The GRASP solution construction mechanism builds a solution step-by-step by adding a new node in each stage. In each iteration the added node j to the partial solution is obtained by a random process on the restricted candidates list (RCL). The RCL is a bounded and ordered list of the best candidates, evaluated by its contribution to the objective function by adding it to the partial solution. In our case the RCL is constructed with the three best nodes (that make the solution feasible), evaluated based on a function that calculates the times to go from one node to another, that is, they are the closest candidates in time (see Fig. 2).The random selection of the node to add is carried out by means of a probabilistic distribution that assigns to each node in the RCL an equivalent probability to the pheromone value obtained using ACO. This procedure guarantees some solution diversification in the search for the best solution. One of the main disadvantages of the GRASP construction phase is that it does not use information during previous iterations. The use of pheromone trails as a bias in the candidate selection is one of the reasons why it is combined with the ACO. Once the selected element has been added to the partial solution, then the obtained improvements are updated according to the proposed function. The feasibility of the solution means that the customer is served within the time window and that the total demand served does not exceed vehicle capacity. When the RCL is empty and there are no more customers to serve and the ant ends the route. It then initializes another route to visit other new customers. This operation is repeated until all customers are visited. The last customer visit then leads to a solution. Note that if the vehicle is external then the route ends at the last customer served otherwise the route ends and returns to the depot.The standard VNS obtains a better solution starting from a solution in its current setting and executing a local monotone search until finding a local optimum. If there is improvement it substitutes the current solution, otherwise it systematically modifies the neighbourhood structures. That is, it applies an improvement movement in the current solution while possible and, otherwise, it changes neighbourhood structure. The series of neighbourhood structures Nk(x);k=1, …, kmax is applied successively ordering from the simplest to the most complex. The improvement phase applied to the best solution constructed by GRASP consists in a variable neighbourhood descent method (VND) [22]. VND is a deterministic version of VNS. It applies a monotone search by systematically changing the neighbourhood structures each time a local minimum is reached. VND is based on the fact that a local minimum with respect to an neighbourhood structure is not necessarily a local minimum with respect to another. The final solution provided by this procedure is a local minimum with respect to all of the kmax movements and consequently the probability of reaching a global minimum is greater than using just one structure. The neighbourhood structures used are based on a mechanism that moves a subset of consecutive elements of the solution and can be described as follows. Let Nk(x) be the set of solutions obtained from x by a k-chain move. A k-chain move consists in taking a chain or segment of the solution with length k and moving it to another part of the solution. Given that k is fixed, we choose two positions i and j of the solution vector and insert the k elements which are in positions j, j+1, j+2, …, j+k−1 after position i (Fig. 3).The implemented ACO is an iterative procedure, where in each stage we use k ants (k<n, where n is the number of customers), each one constructs a solution that is obtained from the GRASP construct phase. First an initial pheromone is applied to the arcs (τij(0)=1). Each one of the solutions using GRASP is then constructed. Once all the ants have build their solutions, the best solution is enhanced with VND. During the constructive process, when the ant moves from node i to node j the pheromone value τijis updated, increasing its value by Δτij. The procedure also reduces the intensity of the pheromone in an amount ρ throughout the iterations to avoid a very fast convergence to a local optimal.The increase of the pheromone in every arc (i, j) is:(18)Δτij=C/L*ifarc(i,j)belongstothebestsolution0otherwisewhere C is a constant fixed by decision maker, L* is the total distance of the best solution found by the ants. The pheromone level at each cycle t is then obtained as(19)τij(t)=ρτij(t−1)+Δτijwhere ρ (0<ρ<1) is the amount of pheromone that disappears by evaporation in each cycle.Note as described previously in Section 4.1 that in the GRASP constructive stage, the probability that a node (client) j is chosen from the RCL to form part of the solution depends on the pheromone value τij, where i is the last element added to the solution. The probability used for the selection is described as follows:(20)pijk(t)=τij(t)∑j∈RCLτij(t)ifj∈RCL0otherwiseA description of the proposed algorithm is shown in Fig. 4.This approach is applied to several instances of the proposed COVRPTW model to search for high quality solutions.With the aim of verifying the viability of the proposed focus and evaluating the behaviour of the implemented hybrid procedure we carried out an experimental study with instances obtained with real data provided by a company that distributes frozen bakery products.The company transports goods to retailers which will eventually be thawed, baked, and sold to the public. The data used in the study comes from the company database. Customer data and depot location where are given. The time window of the depot indicates the working hours when the distribution task should be performed. The service time of the depot indicates the time needed to load a vehicle with the goods to perform a route. The company receives each customer demand by midday the day before and then identifies the routes for the next day. Customer number and demand to be served varies each day. Market estimates can indicate constant moderate growth from customers and general demand, in the next years, both requiring an expanded fleet. Nevertheless, the company cannot know with precision the equivalent units of the load capacity, or client demand but instead must rely only an approximation. Precise travel times to go from one node to another are also unknown, because problems such as traffic congestion, road conditions and stopping times make these times imprecise. Although the company has nine vehicles available in its fleet, it only uses seven vehicles each day when planning distribution routes. The remaining part of the excess load is distributed using externally contracted vehicles and currently is not considered in the planning.The company is interested in stabilizing its fleet and human resources to seven vehicles and also in incorporating in the planning all their customers and potential demand, including distribution by external fleets. This approach guarantees greater service control and quality, improved customer assignment and subcontracted demand, which in turn generates a reduction in costs.Our experimental study used a real instance with 91 customers, corresponding with the data from a specific day (approximate daily average of customers served is 80) and a generated instance with 120 customers, which simulates a growth scenario for the number of customers and their demand. These instances are obtained based on available data of approximately 250 customers provided by the company. In both cases the customers and depot locations correspond to real location data provided by the company.The distance matrix is real and travel times are provided by the company based on its expertise. Demand amounts, unload times and time windows in the first case study were real while the second one was generated randomly, taking into account the current cases described by the company. Vehicle capacities and demand amounts are expressed in number of standard boxes used by the company to handle goods. Specific tolerance levels are fixed in the constraints as well as the time windows and load capacity.Table 1shows the data of the instances used.We evaluate the performance of the hybrid algorithm that combines ACO, GRASP and VNS by considering these two instances.We apply to the model proposed in Section 2 the optimization approach described in Section 3. The solutions were obtained applying GRASP, GRASP-VNS and ACO hybrid metaheuristics described in Section 4.As described in Section 3 the fuzzy constraints are checked by the corresponding crisp constraints (15), (16) and (17) of the transformed formulation. We get heuristic solutions for the values α=0.0, 0.2, 0.4, 0.6, 0.8. A crisp problem is generated for each value of α and each one has a different value of the optimal solution, which is in line with the fuzzy nature of the problem.Each solution of the optimization model consists in a set of routes to be used by the vehicles. As described in Section 2 the set of variables of the optimization problem consists of those variables that determine this set of routes. This set consists in two sets of decision variablesxijkandsik, i, j=0, 1, …, n, k=1, 2, …, m. For each two indices i and j and each vehicle k,xijk=1if and only if vehicle k travels from i to j, andxijk=0otherwise. The decision variablesikis defined for each customer i and each vehicle k to denote the time vehicle k starts to service customer i. The model variables determine the order of the different customer nodes that are visited during the routes, so the solutions of the problem represent the visited nodes and the order that they are visited.Following the proposed procedure in Section 4, a solution for the problem is obtained by GRASP, checking the model constraints in a constructive way to reach a feasible solution. This procedure ensures compliance with all constraints except capacity (15) and time windows (16), (17), which must be evaluated. These two constraints are checked every time a new customer is inserted into the route, as described in Section 4.1. The cost function is the total distance travelled by the vehicles following the selected routes that is computed by 1. The number of iterations of the ACO procedure in the experimentation is 100.The values for the parameters in the metaheuristics are:•The number of nodes in the RCL is 3.The kmax value in the VNS is 4.The number of ants is equal to the number of nodes (customers).The constant for the pheromone updating rule is C=100.The pheromone evaporation parameter is ρ=0.5.We used parameters found in the literature which provided optimal results for a similar problem. The size of the RCL (restricted candidate list) must be large enough to ensure appropriated diversification in the constructed solutions. The value kmax for the number of neighbourhoods used in the VNS has to be sufficient to allow the improvement of the solutions provided by GRASP. The values for the evaporation process mean a balance between the convergence times of the algorithm and the ability to obtain the global optimum. The smaller evaporation factor ensures sufficient diversity of the search space and guides following ants to explore better solutions. A more rapid pheromone evaporation allows a search to be trapped in local minima more easily. All of these parameters must allow the algorithm to end in reasonable computational time.We compared the solutions obtained by our ACO-GRASP-VNS hybrid metaheuristic (AGV) with those obtained only with GRASP, and by the GRASP-VNS hybrid that combines GRASP and VNS. The proposed algorithms were coded in C++ and executed on IntelCore2 Duo processor at 2.66GHz and 4Gb of RAM.Tables show the values of the objective function and the number of routes (vehicles) for the crisp solutions (Table 2) and for the fuzzy solutions for α∈{0.0, 0.2, 0.4, 0.6, 0.8} (Tables 3–6). Tables 3 and 5show the results, respectively, for the VRPTW and COVRPTW when only time windows constraints are fuzzy. Tables 4 and 6show the results, respectively, for the VRPTW and COVRPTW when both, time windows constraints and capacity constraints, are fuzzy.Figs. 5 and 6are used to illustrate the effect of the hybridized developed optimizing algorithm. These figure show the values of the cost function of the COVRPTW model obtained by applying metaheuristics. Fig. 5 presents the best values obtained for the case of 11 vehicles and imprecise constraints (capacity and time windows) for the instance of 91 customers. In Fig. 6 the values with 10 and 11 vehicles for instance with 120 customers is shown.Firstly we state that our procedures are able to find good solutions from a practical point of view. Solutions are found that incorporate imprecision in travel times and load units, providing flexibility in the affected constraints. Secondly, a solution is offered in which included subcontracted route planning. Both offer a wide set of flexible and operative solutions which facilitate decision making with a follow up evaluation of the best alternative from an economic perspective. The company is interested in assigning routes which imply improved profitability of its own fleet and lower subcontracting costs.Regarding implemented procedures, the data in the table reveals that the hybrid metaheuristics generate the highest quality solutions. In particular, the ACO hybrid metaheuristic proposed in this work improves the results in most cases, especially when the complexity is increased because of the problem size.Note that in the case of adding flexibility in load capacity with the initial real problem of 91 customers the solutions obtained are the same as if they were not flexible. This occurs because the time window constraints are the hardest and cannot provide better feasible solutions associated to the increase in load capacity. On the other hand, load capacity constraints are not determinant, and consequently vehicle capacity does not act as a strong constraint.CPU times for solutions obtained using the different metaheuristics were given in minutes. We tested the use of CPLEX to solve these real instances. However CPLEX required excessive computation time and produced memory overflows with moderate size instances. Consequently execution time was stopped without obtaining any solution. Our metaheuristic got high quality solutions within a reasonable computation time for this problem, one which the company must solve every day.

@&#CONCLUSIONS@&#
Tackling real world vehicle routing problems requires consideration of specific parameters and constraints. We consider the ability to plan routes with an owned fleet and outsourced vehicles and to use uncertainty of available knowledge. Both scenarios offer solutions that are required from real cases found in distribution companies.We proposed a new variant of VRPTW with close and open routes. In addition we consider imprecise capacities and time windows constraints, which are modelled as fuzzy constraints.Our approach applies fuzzy optimization to address these problems modelled as linear programming problems. Hybrid metaheuristics are also implemented to solve them. In particular, we use a ACO hybrid metaheuristic procedure based on GRASP and VNS to search for optimal solutions of the problems. The experiments performed show that our hybrid procedure is effective to find a good enough solution in short running time. These experiments also show that the ingredients introduced in the hybridization improve performance.Some aspects can be improved. For instance, the parameter adjustment of the metaheuristics used can be more efficient, studying other objective functions that consider economic or environmental aspects and the balanced load, times and distances in the routes.Finally we feel that the implementation of tools in this study can be used to assist in the development of intelligent systems that are able to tackle the uncertainty, variability and complexity of logistics distribution problems, and which can improve solutions provided by route distribution optimization applications used at present.