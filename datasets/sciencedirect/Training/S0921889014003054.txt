@&#MAIN-TITLE@&#
Symbolically structured database for human whole body motions based on association between motion symbols and motion words

@&#HIGHLIGHTS@&#
This paper proposes a database of human motions and their descriptive words.The stochastic model constructs the mapping between the motions and words.The database can be applied to the retrieval of the motion data from the word.

@&#KEYPHRASES@&#
Motion database,Motion recognition/generation,Hidden Markov Model,Motion symbol,Motion words,

@&#ABSTRACT@&#
Motion capture systems have been commonly used to enable humanoid robots or CG characters to perform human-like motions. However, prerecorded motion capture data cannot be reused efficiently because picking a specific motion from a large database and modifying the motion data to fit the desired motion patterns are difficult tasks. We have developed an imitative learning framework based on the symbolization of motion patterns using Hidden Markov Models (HMMs), where each HMM (hereafter referred to as “motion symbol”) abstracts the dynamics of a motion pattern and allows motion recognition and generation. This paper describes a symbolically structured motion database that consists of original motion data, motion symbols, and motion words. Each motion data is labeled with motion symbols and motion words. Moreover, a network is formed between two layers of motion symbols and motion words based on their probability association. This network makes it possible to associate motion symbols with motion words and to search for motion datasets using motion symbols. The motion symbols can also generate motion data. Therefore, the developed framework can provide the desired motion data when only the motion words are input into the database.

@&#INTRODUCTION@&#
In the fields of robotics and animation, humanoid robots or CG human figures need to perform human-like motions. Thus far, creating realistic motions has remained challenging. One effective solution that has been proposed to solve this problem is the use of human behavioral data measured using motion capture systems  [1–3]. A motion capture system can reliably be used to obtain realistic motion data. However, it remains difficult to efficiently reuse the captured motion data because of the need to search for specific motion data. Doing so in a motion archive is difficult because the search depends on recording date labels or motion pattern labels provided by the designers. Several reuse technologies of prerecorded captured data have been proposed, such as Motion Graph  [4–9] or Motion Warping[10,11]. The Motion Graph measures similarities among motion frames, makes new transitions between similar motion frames, concatenates motion frames according to the transitions, and finally creates human-like motions. The Motion Warping interpolates between two key motion frames spatio-temporally, and creates new motions. These notable reuse technologies presuppose that users have their motion data or motion frames, or special skills of editing CG character motions. Interfaces allowing users to reuse prerecorded motion data in a simple way are necessary.In the field of robotics, various imitative learning frameworks have been proposed thus far  [12]. These frameworks make it possible to symbolize motion data as a set of model parameters and to recognize and generate motion data through dynamical systems  [13–17] or stochastic models  [18–21]. The motion symbols are expected to be connected to language which is a symbolic system unique to human being, and to lead to a novel interface to reuse motion data. Sugita et al. proposed a method for creating motion from sentences by joining together neural networks for motion and text processing  [22]. One neural network encodes motions into bias parameters, and another neural network encodes sentences into the same bias parameters. Ogata et al. extended this framework to creating sentences from motion  [23]. The computation for generating sentences consists of the process of associating multiple sentences with a motion, and the process of creating motion from the associated sentences and selecting the appropriate sentence by comparison with the original motion. This creates the problem of large computational load for generating sentences. Furthermore, since the framework of this neural network adds the new condition that the motion and sentence are joined by parameters shared by two neural networks for motion and text processing, training using a large number of motions and sentences is difficult.In computer graphics, research has been conducted into synthesizing a wide variety of motions from the perspectives of motion and language. Arikan et al. proposed a method for synthesizing computer graphics character motion from words. Verb labels are attached to each frame of the motions in a database. New motions that correspond to language can be synthesized by finding a continuous sequence of motions through dynamic programming while satisfying the constraint condition that the motion in the frames corresponds to the entered verb  [24]. Rose et al. introduced a parameter called “adverb” that represents the difference between two motions within a group of similar motions called “verbs” and proposed a new technique that interpolates between two motions by controlling this parameter  [25]. Although this introduced the concept of verbs and adverbs, the sequential relations of motions and words were not dealt.In this study, we develop a symbolically structured motion database based on an association between symbolized motion patterns and motion words. Motion pattern data are represented by Hidden Markov Models (HMMs), hereafter referred to as motion symbols  [26]. The motion data cannot only be recognized as the motion symbol but also be generated by the motion symbol, as shown in Fig. 1. The designed motion database consists of motion data, motion symbols, motion words which are linguistic representations, and the probability association between the motion symbols and the motion words. The motion symbols are automatically derived from the motion data through a motion recognition process. The motion words are manually assigned to the motion data. The association between the motion symbols and the motion words is hierarchically structured based on the motion data, as shown in Fig. 2. The associative network between the motion symbols and the motion words allows the interpretation of the motion words as the motion symbols, which facilitates the search and generation of motion data corresponding to the motion symbols. Therefore, the proposed motion database solves the problems involved in the search and modification of motion data and provides users with a useful interface.We propose a simple approach to search for the desired motion data based on motion symbols. In our framework, an HMM, which we refer to as a motion symbol, represents a motion pattern because the parameters of the HMM are optimized with the motion pattern data. The motion symbols can be autonomously acquired through motion segmentation and competitive learning of motion data included in the motion database [27]. Theith motion dataO(i)is segmented into motion pattern data, and each motion pattern datao(i)[k]is recognized as a motion symbolλR(i)[k].(1)O(i)={o(i)[1],o(i)[2],…,o(i)[l]}(2)Λ(i)={λR(i)[1],λR(i)[2],…,λR(i)[l]}(3)λR(i)[k]=argmaxλjP(o(i)[k]|λj).The motion data is expressed by a sequence of motion symbols. Note that the motion symbolλR(i)[k]outputs the largest likelihood that the motion symbol generates the motion pattern datao(i)[k]. Motion segmentation and motion recognition allow the motion dataO(i)to be interpreted as a sequence of motion symbolsΛ(i). The sequence of motion symbolsΛ(i)is assigned to the corresponding motion pattern dataO(i)in the database.The database can find motion data similar to the desired motion pattern. The desired sample dataOˆcan also be expressed by a sequence of motion symbolsΛˆ={λˆ[1],λˆ[2],…}through automatic segmentation and recognition. The motion dataOcandidate, which the symbolic sequenceΛˆis assigned to, is detected because the selected motion data should be similar to the desired motion. In this manner, motion data that closely resembles the desired motion can be searched. This approach enables the users to obtain the desired motion data by inputting sample motion data.In the previous section, users have to input a sample motion to obtain desired motion data. The users do not necessarily have the sample motion. A new approach to the design of a motion database is required such that the database can search for the desired motion data corresponding to the motion words. The users only have to linguistically input the motion words. This provides for a simple interface to reuse prerecorded motion data.A linguistic interface is founded on interpretation of motion words as motion symbols and search for motion data according to the motion symbols in the same manner as detailed in the previous section. More specifically, the mapping between the motion symbols and motion words is required to establish the linguistic interface. We propose an association model between motion symbols and motion words.This model represents a stochastic mapping between a sequence of motion symbols and a sequence of motion words through motion data using IBM translation model, as shown in Fig. 3. The designer subjectively segments the motion dataO(i)into motion primitives, and assigns a sequence of motion wordsΩ(i)={ω(i)[1],ω(i)[2],…,ω(i)[m]}to the motion primitives. The same motion data is also interpreted as a sequence of motion symbols by the motion recognition process described by Eq. (3). Note that the segmentation criterion used by the designer differs from that used in the automatic segmentation method. This means that the boundaries of motion primitives derived by the automatic segmentation are not consistent with those by the manual segmentation. It results in the fact that the number of motion primitives generated by the designer is not always equal to the number of primitives generated by the automatic segmentation method(l≠m).The stochastic mapping between a sequence of motion symbolsΛand a sequence of motion wordsΩis represented by the IBM translation model  [28]. Five types of IBM translation models are presented. These models are numbered in order of increasing complexity. In this study, we adopt the second model. This model consists of parameters for translation probabilities and alignment probabilities. The translation probabilityt(f|e)denotes the probability that the wordeis translated to the wordf. The alignment probabilitya(i|j,m,l)denotes the probability that positioniin the source sentenceecan align to positionjin the target sentencef, wherelandmare the length of the source and the target sentence, respectively. In this study, a sequence of motion symbolsΛand a sequence of motion wordsΩare regarded as a source sentence and a target sentence respectively. The translation probabilityt(ω|λ)is the probability that the motion symbolλis associated with the motion wordω. Let the translation probability be the association probability. The association model between the motion symbols and motion words is optimized such that the sum of the likelihood that a sequence of motion symbolsΛ(i)generates a sequence of motion wordsΩ(i)becomes the largest.(4)Ψ=∑O(i)P(Ω(i)|Λ(i))whereΛ(i)andΩ(i)express the motion capture dataO(i)symbolically and linguistically, respectively. The optimum solution for the parameters of the association probabilities and the alignment probabilities can be computed by the EM algorithm.We propose the conversion from a sequence of motion words,Ω, to a sequence of motion symbols,Λˆ, by using the association model described above. Note thatΩgeneratesΛˆwith the largest likelihood. However, computing for a sequence of motion symbols only based on the association model provides us with a sequence of symbols in an inadequate order, because the association model does not impose sufficient constraints on motion symbolic order. We therefore establish a symbol-transition model that stochastically represents transitions among the motion symbols. We adopt an N-gram model based on the assumption that the current motion symbol depends on onlyN−1previous motion symbols. Specifically, we use a bigram(N=2), as shown in Fig. 4. The probability for a sequence of symbolsΛ={λ[1],λ[2],…,λ[l]}can be expressed by Eq. (5).(5)P(Λ)=∏i=2lP(λ[i]|λ[i−1]).The conditional probability on the right-hand side of Eq. (5),P(λi|λj), can be optimized by using the relative frequency as follows.(6)P(λi|λj)=C(λj,λi)C(λj)whereP(λi|λj)is the probability that the motion symbolλifollows the motion symbolλj.C(λj,λi)is the number of times that the motion symbolλifollows the motion symbolλjin training sequences of motion symbols.C(λj)is the number of times the motion symbolλjis included in the training sequences.The association model and symbol-transition model are integrated to conversion from a sequence of wordsΩto a sequence of symbolsΛˆ, as indicated in Eq. (7).(7)Λˆ=argmaxΛP(Λ|Ω)=argmaxΛP(Λ)P(Ω|Λ).The symbol-transition model allows us to convert a sequence of motion words to a sequence of motion symbols in an appropriate order.We describe how a sequence of symbolsΛˆis calculated in Eq. (7). TheA∗search algorithm is employed in this calculation  [29]. TheA∗search algorithm is one of the most efficient graph search algorithms in the field of computer science. A graph consists of a tree structure with nodes and edges, and graph search involves finding a path from a given initial node to a given goal node. TheA∗search method employs a heuristic estimation that ranks each node by estimating the best path that passes through that node. The node with the largest heuristic estimate is visited first so that the best path can be found in a short time.The sequence of motion symbols calculated by Eq. (7) allows the same search for motion data as described in the previous section. Moreover, the sequence of motion symbolsΛˆ={λ1ˆ,λ2ˆ,…,λlˆ}can generate motion data. Each motion symbol is represented by a left-to-right HMM. The motion symbols inΛˆare concatenated in series by setting the transition probability from the node at the end in the previous HMMλito the node at the head in the next HMMλi+1to 1. This concatenation forms one left-to-right HMM. The motion can then be stochastically generated by this HMM through Monte-Carlo algorithm  [30].The association model and the symbol-transition model described in the previous subsections represent the mapping between motion symbols and words and the stochastic transition of motion symbols in training data, which means that this strategy may not be useful for untrained sequences of motion words or motion symbols, especially if the training dataset is small. This problem is often called poverty of stimulus. However, humans can adapt to unknown situations by using some knowledge and experience that have been acquired in previous situations similar to the current one. This inference based on similarity is called analogy. We believe that analogy is one of the solutions to this problem. Therefore, we extend the symbol-transition model to represent the stochastic transition among clusters of motion symbols. The cluster structure of the motion symbols can support the database’s adaptability to unknown motion. We call this strategy analogy from the viewpoint of the fact that the database can use knowledge about the similarity among motion symbols.Distance between two motion symbols,λiandλjis measured using Kullback Leibler informationKL(λi|λj)[31].KL(λi|λj)=1Ti[logP(oi|λi)−logP(oi|λj)](8)D(λi,λj)=KL(λi|λj)+KL(λj|λi)2whereoiis motion data generated by the motion symbolλiandTiis the length of the motion data. A matrix of the Kullback Leibler information is asymmetric. Eq. (8) converts this matrix to a symmetric one. The motion symbols are located in a multidimensional space such that a distance between two motion symbols in the space can become as close as possible to the distance derived in Eq. (8). The distance in the space can be measured from the locationsxiandxjcorresponding to the motion symbolsλiandλj. The locations of the motion symbols are computed by using multidimensional scaling  [32]. Thus, the motion symbol space can be constructed. The distribution of the motion symbols in the motion symbol space is represented by a Gaussian Mixture Model, as shown in Fig. 5Each Gaussian function implies a cluster of the motion symbols. The motion symbol is classified into a cluster according to the probability that each Gaussian function generates the motion symbol. We can then derive transition probability from the motion symbolλjtoλifor a new symbol-transition model as follows.(9)P(λi|λj)=C(S(λj),S(λi))C(S(λj))where each cluster corresponds to each node in the bigram shown in Fig. 4.S(λ)indicates a cluster where a motion symbolλis categorized. In the symbol-transition model without clustering, the transition probability from a motion symbolλjtoλibecomes zero if the symbolic transitional pattern in which the motion symbolλifollows the motion symbolλjis not included in training data. However, in this model, this transition probability can have a nonzero value if a sequence of motion symbol in a clusterS(λj)and a motion symbol in a clusterS(λi)has been observed in the training data. The similarities modify the transitions among the motion symbols.

@&#CONCLUSIONS@&#
