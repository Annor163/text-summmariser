@&#MAIN-TITLE@&#
An improved multi-objective bacteria colony chemotaxis algorithm and convergence analysis

@&#HIGHLIGHTS@&#
This paper proposes an improved multi-objective bacteria colony chemotaxis algorithm to solve multi-objective optimization problems.Adaptive grid, oriented mutation based on grid and adaptive external archive are introduced to the improved algorithm.The Pareto front obtained by the improved algorithm has better distribution and convergence than other optimization algorithms.The convergence property of the general Pareto-based multi-objective bacteria colony chemotaxis algorithm is proved.

@&#KEYPHRASES@&#
Multi-objective optimization,Bacterial chemotaxis,Adaptive grid,Convergence analysis,

@&#ABSTRACT@&#
In this paper, a novel algorithm based on the bacterial colony chemotaxis (BCC) algorithm is developed to solve multi-objective optimization problems. The main objective of the paper is to improve the performance of BCC. Hence, the main work is to add three improvements, which are improved adaptive grid, oriented mutation based on grid and adaptive external archive, in order to improve the convergence performance on multi-objective optimization problems and the distribution of solutions. This paper also presents a first and simple convergence analysis of the general Pareto-based MOBCC. The proposed algorithm is validated using 12 benchmark problems and four performance measures are implemented to compare its performance with the MOBCC algorithm, the NSGA-II algorithm, and the MOEA/D algorithm. The simulation results confirmed the effectiveness of the algorithm.

@&#INTRODUCTION@&#
It is common that problems with two or more (often conflicting) objectives to be simultaneously optimized in real-world applications. Such problems are called multi-objective optimization problems (MOP). MOP are optimization problems that optimize more than one objective function in a specific area and are to find solutions that contain a vector of decision variables and satisfy the restrictions. A multi-objective optimization problem can be formulated as follows [1]:Minimize/Maximize:fi(x)i=1,2,…,NSubjectto:gj(x)≤0j=1,2,…,Jhk(x)=0k=1,2,…,Kwhere x=(x1, x2, …, xn) is the vector of decision variables; fi(x) are the i objective functions which satisfy the J inequalities gj(x) and the K equalities hk(x) constraint functions.Different from single objective optimization problem (SOP), it is impossible to get a single optimal for multi-objective optimization problems. MOP contains a set of optimal solutions which are non-dominated and balanced between several objective functions, that is Pareto optimal front (POF). The traditional ways can not deal with these complex problems sufficiently for the lack of integral mathematical models and the ability to handle a large number of variables. Now there have been a lot of elitist algorithms to solve multi-objective optimization problems, such as non-dominated Sorting Genetic Algorithm (NSGA-II) [2], Strength Pareto Evolutionary Algorithm (SPEA-II) [3], Multiple Objectives Particle Swarm Optimization (MOPSO) [4], and bacterial chemotaxis (BC) [5].Many people also have researched on the algorithms for real-world application. Niknam et al. [6] developed multi-objective new fuzzy self-adaptive particle swarm optimization (MNFSAPSO) to overcome local optima problems and he also proposed an Evolutionary Algorithm using the Modified Teaching-Learning-Algorithm [7] and the two algorithms are used to solve multi-objective optimization problems in distribution network with renewable energy sources. Chen [8,9] proposed bacterial colony foraging optimization (BCFO) algorithm for complex optimization problems and it is applied to a real-world application of dynamic RFID network optimization.Recently, bacterial colony chemotaxis (BCC) optimization algorithm has attracted more and more attention. Bremermann [10] pioneered chemotaxis algorithm in 1974. Basing on the research of Berg, Brown and Bremermann, Müller et al. [11] developed BC optimization algorithm in 2002, which is an environmental chemical attractant inspired optimization algorithm that performs similar to standard evolutionary algorithm but worse than evolution strategies with enhanced convergence properties. However, it opened up a new research field. Li et al. [12] introduced the colony to improve the basic BC algorithm, proposing bacterial colony chemotaxis (BCC) optimization algorithm. Guzmán [5] firstly applied the BC algorithm to solve multi-objective optimization problems and got better result than the NSGA-II genetic algorithm and the particle swarm-based algorithm NSPSO. Cheng et al. [13] developed MOBCC algorithm to figure out Multi-objective optimization problems and it performed well. Lu et al. [14] improved multi-objective optimization bacterial colony chemotaxis with Lamarckian constraint handling method to solve low-carbon emission/economic power dispatch.BC is a simple and robust algorithm. In BC algorithm, every bacterium searches the optimal value according to its own judgment. Bacteria use their own memory to make a temporal space comparison of the gradients found, and decide the length and duration of their next movement. As the length and duration are computed by probability distributions, it indicates that they are able to escape from local optimal solutions and find the global optimal value. BCC is proposed based on BC, which adds communication features to the basic algorithm. BCC performs better on convergence ability and computation speed than BC. As it is different in the realization principle from other traditional algorithms, and is promising in multi-objective optimize problems, we study and make some improvements on its performance in this paper.The main contributions of this paper are: proposing an improved multi-objective BCC algorithm based on grid (GMOBCC) to improve the convergence performance and uniformity of solutions; analyzing the convergence properties of the multi-objective BCC algorithm.In this paper, three main modifications are introduced to improve the diversity and uniformity of nondominated solutions. Firstly, the improved adaptive grid strategy is applied to maintain the diversity and uniformity of nondominated solutions in the external archive. Secondly, the oriented mutation based on grid is proposed to generate more nondominated solutions in the sparse area of the current archive. Thirdly, the concept of adaptive archive is introduced, whose capacity can change along with the searching process. The last two methods are not only remedies to make up the loss of nondominated solutions caused by adaptive grid, but also efficient methods to generate more nondominated solutions to provide a good basic to maintain the diversity and uniformity of solutions.To appraise its performance, the proposed algorithm is tested on 12 benchmark problems, and four different performance measures are implemented to compare its properties with those of MOBCC, NSGA-II [2], and MOEA/D [15].This paper is organized as follows. Section 2 describes the basic bacterial chemotaxis model. Section 3 presents the GMOBCC algorithm. The convergence analysis of the multi-objective BCC algorithm is proved in Section 4. In Section 5, GMOBCC is applied on 12 testing functions and the results are compared with other optimization algorithms. Conclusions and some possible paths for future research are finally drawn in Section 6.The chemotactical behavior of bacteria is modeled by making the following assumptions according to Dahlquist et al. [16]. (1) The path of a bacterium is a sequence of straight-line trajectories joined by instantaneous turns, each trajectory being characterized by speed, direction, and duration. (2) All trajectories have the same constant speed. (3) When a bacterium turns, its choice of a new direction is governed by a probability distribution, which is azimuthally symmetric about the previous direction. (4) The angle between two successive trajectories is governed by a probability distribution. (5) The duration of a trajectory is governed by an exponentially decaying probability distribution. (6) The probability distributions for both the angle and the duration are independent of parameters of the previous trajectory (Fig. 1).The 2-D model of the basic multi-objective BCC algorithm is presented as follows:(1)Compute the velocity. The velocity is a constant value.(1)v=constCompute the duration τ. It is a random variable governed by an exponential probability density function.(2)P(X=τ)=1Tℓ−τ/Twhere the expectation μ=E(X)=T and the variance σ2=Var(X)=T2.The value T is given by(3)T=T0if(x→pre≻x→cur)|(x→pre∼x→cur)T01+b×minfpr1lpr,fpr2lprifx→pre≺x→curwhere T0 is the minimal mean time, T0=ɛ0.03·10−1.73; fpris the difference between the actual and the previous function value; lpr=xpr, where xpris the vector connecting the previous and the actual position in the parameter space; b is the dimensionless parameter,b=T0⋅(T0−1.54⋅100.6).Compute the new direction. The probability density distribution of the angle α between the previous and the new direction is Gaussian and reads, for turning right or left, respectively:(4)P(X=α,v=μ)=12πσexp−α−v2σ2(5)P(X=α,v=−μ)=12πσexp−α−v2σ2where α∈[0∘, 180∘] and the expectation value μ and the variance σ are determined by the formulation:(6)(μ,σ)=μ=62∘σ=26∘,if(fpre≻fcur)|(fpre∼fcur)μ=62∘(1−cos(θ))σ=26∘(1−cos(θ)),iffpre≻fcurwith:(7)cos(θ)=e−τCτPrwhere τCis the correlation time, τC=(b/T0)0.31·101.16, and τPrthe duration of the previous step.Compute the new locationx→new1.(8)x→new1=x→pre+v⋅τCompute the nondominated center. As bacteria do share information among each other [15], its movement will be affected by mutual attraction or repulsion forces. A bacterium will take the center of locations, which are better than that of its own, as the nondominated center.(9)x→i_cen=Aver((x→j|f(x→j)≻f(x→i))ANDdis(x→j,x→i)<SL)where,Aver(x→1,x→2,…,x→m)=∑j=1mx→jmwhere m is the number of bacteria that dominate i,dis(x¯i,x¯j)is the distance between the bacterium i and the bacterium j, SL is the sense limitation of the bacterium i.Compute the new locationx→new2.(10)x→new_2=x→pre−2U(0,1)×(x→pre−x→i_cen)where U(0,1) is a random number which obeys uniform distribution.Decide the new locationx→new. A bacterium will make a decision by comparingx→new1withx→new2, and choose the better one as its next location.Input all required data.1. Set the bacterial number, the original locations, the velocity, the SL and the correlative parameters.Begin2. Initialization:fori=1 to NGenerate x randomly within its feasible boundaries.xi=xi,min+(xi,max−xi,min)×U(0, 1)end for3. Update the location of the bacterial colony.fori=1 to NCalculate the duration τifrom (2) and (3).Compute the new direction from (4)–(7).xi,new1=xi,pre+v⋅τi//Compute the new location xi,new1 of ith bacterium.If any element of the new generated solution xnew1 is outside the feasible boundaries, then the following procedure will be applied to modify its value.xi,new1=xi,minxi,new1<xi,minxi,maxxi,new1>xi,maxend forforj=1 to NCompute the nondominated center xj_cenfrom (9).xj,new2=xj,pre−2U(0,1)×(xj,pre−xj,cen)//Compute the new location xj,new2 of ith bacterium.If any element of the new generated solution xnew2 is outside the feasible boundaries, then the following procedure will be applied to modify its value.xj,new2=xj,minxj,new1<xj,minxj,maxxj,new1>xj,maxend for4. Decide the new location xnew.fori=1 to NCompute the fitness of individual bacterium xi,new1.Compute the fitness of individual bacterium xi,new2.Choose the better one as its new location xi,new.end for5. Update the optimal value, the optimal position and the related parameters. The algorithm terminates as soon as the target precision or the max iteration is reached. Otherwise, go to Step 3.In the basic Pareto dominated BCC algorithm, the nondominated solutions are selected into the external archive in each iteration, and they will influence movements of bacteria in the next iteration. This character will make the solutions crowd into some compact regions in the objective function space and decrease the diversity of nondominated solutions. In this case, the adaptive grid mechanism is adopted.The adaptive grid mechanism was first used in the Pareto Archived Evolution Strategy (PAES) which is proposed by Knowles and Corne [17]. In PAES, an external archive is incorporated to store all the nondominated solutions obtained. In the reality, the adaptive grid is a space formed by hyper-cubes. Each hypercube can be described by an integer vector, which contains as many components as objective functions. As it is effective in maintaining diversity of nondominated solutions, adaptive grid and its variations are used by a number of algorithms (see for example [18–20]).The adaptive grid is started when the upper limitation of external archive is reached. This means that it cannot maintain good distribution of nondominated solutions when the number of nondominated solutions is below the upper limitation. So the improved adaptive grid method is proposed. The principle is described as follows.Suppose that the objective function space has m dimensions, and it is divided into K1×K2×…×Kmgrids. The width diof a grid on the ith dimension is calculated as follows:(11)di=maxfi(x)−minfi(x)Kiwhere fi(x) is the ith objective function of solutions in the external archive, Kiis the number of grids on the ith dimension.The grid size will change along with the optimization process: at the early stage, there are fewer nondominated solutions so the number of grid is fewer with big size; at the late stage, there are more nondominated solutions so there will be more grids with small size.The improved adaptive grid mechanism divides the objective function space into many hyper boxes. An integer vector is used to refer to such hyper boxes. These integer vectors have as many components as objective functions have the problems to be solved. Since solutions in archive are not dominated with each other, solutions in the same grid are nondominated solutions. As only one solution is accepted in each box, it is important to decide which solution should be discarded. Usually, we cannot know the true Pareto optimal front in a prior, so the deleting strategy should be effective when handling with different shapes and specific features of the Pareto front. The deleting strategy is described as follows.Take two objectives optimization problems as an example. Denote the four corners of a grid as C1, C2, C3 and C4, as shown in Fig. 2(a) and (b).Case 1: There are three solutions sharing the same box vector in grid Grid(3,3), as shown in Fig. 2(a). First, compute the Euclidian distances from each solution to corner C3 separately and denote as L1, L2, and L3. Second, find the solution with the smallest Euclidian distance and delete the other two solutions.Case 2: As shown in Fig. 2(b). If the Euclidian distances from each solution to corner C3 are the same, then calculate the crowding distance of each solution and remain the solution with the largest crowding distance.The effectiveness of this strategy when facing Pareto fronts with different geometric characteristics is discussed as follows.The five cases of eliminating nondominated solutions from the external archive are shown in Fig. 3(a)–(e) respectively. Case 1 is the convex Pareto fronts, case 2 the concave Pareto fronts, case 3 the mixed Pareto fronts, case 4 the linear Pareto fronts, and case 5 the disconnected fronts. Take case 3 as an example. As shown in Fig. 3(c), solution 2 and solution 3 share the same grid Grid(4,6). As solution 3 is closer to corner C3 than solution 2, solution 2 will be eliminated. Among the grids surrounding Grid(4,6), solutions in Grid(3,5) can dominate all solutions in Grid(4,6), and solutions in Grid(4,5) and Grid(3,6) are nondominated to any solution in Grid(4,6). As the corner C3 of Grid(4,6) has the nearest distance to Grid(3,5), Grid(3,6) and Grid(4,5), so retaining the solution closest to corner C3 will make it more possible to get better solutions in the next iteration. It is the same in other cases. Hence, we retain the solution with the smallest Euclidian distance to corner C3 in each iteration.Although the introduction of improved adaptive grid to handle well-distributed solutions in external archive is effective, the randomly searching process of bacteria colony dramatically influences the performance of the algorithm. In our experiments, we found that MOBCC with adaptive grid achieved better distribution than the original MOBCC. However, as it is to enforce a good distribution by deleting nondominated solutions, this method may cause losing a number of good ones. So it can influence the quantity of solutions in turn. Hence, we proposed the oriented mutation based on grid to generate more dominated solutions.The objective function space is divided into hyper-cubs, and each solution in a grid is associated with an identification array Grid(1, 2, 3,…, n). In the two-dimensional model, it can be described with a matrix with n rows and m columns. To avoid negative subscripts in programs when the value of an objective is negative, we divided the function space into 4 quadrants according to the values of the objective functions. As shown in Fig. 4, quadrant 1 means both of the values of functions are positive. Quadrant 2 means the value of function 1 is negative while the value of function 2 is positive. The rest can be done in the same manner. Therefore, solution 1 can be described as Grid2(3,3) in quadrant 2, and solution 3 is Grid3(1,2) in quadrant 3 and so on.The proposed oriented mutation is Gaussian mutation, which is used to generate random numbers that satisfy a Gaussian distributed. The probability density function of Gaussian distribution is(12)f(x)=12πσe−(x−μ)2/2σ2−∞<x<∞where μ is the expectation and σ is the variance.For dimension i, the new location of the bacterium is determined by(13)xi=xi+Gaussian(μ,σ)where μ is the expectation and σ is the variance.The oriented mutation based on grids of the improved algorithm is presented as follows:Step 1: search the adjacent nondominated grids. Take solution 2 as an example. As shown in Fig. 4, since the solutions in any of the green grids are nondominated to solutions in the other grids, we say that these green grids are nondominated grids. For the grid solution 2 resides in, they are the adjacent nondominated grids. If there is an empty grid (i.e., there is no solution in this grid) in any of these nondominated grids, go to Step 2; if not, go to Step 4.Step 2: oriented mutation. Take solution 2 as an example, as shown in Fig. 4, all of the adjacent nondominated grids are empty. In this case, the oriented mutation is started and the new location of a bacterium is generated as formula (13). Then compute the objective values of the new locations.Step 3: select nondominated solutions. The new solution will be accepted by the external archive in the following two cases:Case a: the new solution occurred in at least one of these nondominated grids;Case b: the new solution dominates the solutions in the external archive.Step 4: end.External archive is used to store nondominated solutions in each searching procedure, and its size can influence the distribution of solutions to some extent. With large size, more kinds of nondominated solutions will be stored during each iteration, so better diversity of the final nondominated solutions will be maintained by adaptive grid. But it is difficult for decision makers to choose. To overcome the paradox, the adaptive external archive strategy is proposed.The size of archive is updated as follows:(14)Ck+q=m×Ck,1≤k<Kwhere k is the current number of iterations, K is the number of total iterations, Ckand Ck+qare the sizes of archive corresponding to their iterations, q and m is a constant value decided by user.The adaptive external archive of the improved algorithm is presented as follows:Step 1: the initial capacity of archive is set according to the number of desired nondominated solutions provided by users.Step 2: the archive capacity is set as formula (14), the size of the external archive is updated per q iterations and the updated constant is m. In this paper q and m are set to 10 and 2 respectively.Step 3: the redundant solutions in the external archive will be discarded when the upper limitation is reached.Input all required data.Step 1. Initialization:Set the velocity, the SL and the correlative parameters.Randomly generate an initial population of size N within its feasible boundaries:fori=1 to Nxi=xi,min+(xi,max−xi,min)×U(0, 1)end forStep 2. Update the location of the bacterial colony.Step 2.1 Compute the new location xi,new1 of ith bacterium:fori=1 to NCalculate the duration τifrom (2) and (3).Compute the new direction from (4)–(7).xi,new1=xi,pre+v⋅τiIf any element of the new generated solution xnew1 is outside the feasible boundaries, then the following procedure will be applied to modify its value.xi,new1=xi,minxi,new1<xi,minxi,maxxi,new1>xi,maxend forStep 2.2 Compute the new location xi,new2 of ith bacterium:fori=1 to NCompute the nondominated center xi_cenfrom (9).xi,new2=xi,pre−2U(0,1)×(xi,pre−xi,cen)If any element of the new generated solution xnew2 is outside the feasible boundaries, then the following procedure will be applied to modify its value.xi,new2=xi,minxi,new2<xi,minxi,maxxi,new2>xi,maxend forStep 3. Decide the new location xnew.fori=1 to Nxi,new=xi,new1Compute the fitness f(xi,new1) and f(xi,new2)of bacterium i.Compute the crowding distances of the two solutions:l1=crowding_distance(xi,new1)l2=crowding_distance(xi,new2)iff(xi,new1)≻f(xi,new2)||(f(xi,new1)∼f(xi,new2)∪l1<l2)xi,new=xi,new2end ifend forfori=1 to Nforj=1 to Niff(xi)≻f(xj,new)//x is the previous location.xj,new=xend ifend forend forStep 4. Bacteria move.l=crowd_distance(xnew)[best worst]=sort(l,xnew)//sort solutions according to their crowding distancesxnew(worst)=xnew(worst)+2×rand×(xnew(best)−xnew(worst))//The solution in the most crowded place moves to the sparse area.Step 5. Update the adaptive external archive.Choose nondominated solutions from bacterial colony into the external archive.fori=1 to Nforj=1 to NU//NUis the number of solutions in the external archiveiff(archive(j))≻f(xnew(i))isc=1end ifend for (it refers to j)if isc=0NU=NU+1archive (NU+1)=xnew(i)//Insert xnew(i) into the archiveend ifend for (it refers to i)Step 6. Adaptive grid.Compute the width of each grid from (11).fori=1 to NUlocation(i)//Compute the location of ith solution of the external archive in the grids.flag=0;forj=i to NUiflocation(i)=location(j) and i≠jCompute the Euclidian distance Eu_d(i) of the ith solution to the certain corner of grid.Compute the Euclidian distance Eu_d(j) of the jth solution to the certain corner of grid.ifEu_d(i)>Eu_d(j)discard archive(i)flag=flag+1else ifEu_d(i)<Eu_d(j)discard archive(j)flag=flag+1end ififEu_d(i)=Eu_d(j)ifcrowd_distance(i)≤crowd_distance(j)discard archive(i)flag=flag+1else discard archive(j)flag=flag+1end ifend ifend ifend for (it refers to j)end for (it refers to i)NU=NU−flagStep 7. Oriented mutation based on grids.fori=1 to NUGrid_adjacent(i)//Compute the adjacent grids of ith solution in the grids.if The oriented mutation criteria is satisfied for the ith solutionStart the oriented mutation based on grids.end ifend forStep 8. Update the adaptive external archive.8.1 If there are solutions dominated by others in the external archive, discard them.8.2 ifNU>NUmax//NUmax is the upper limitation of the external archiveL=NU−NUmaxfori=1 to LC=crowding_distance(archive)[sarchive,index]=sort(C)archive=archive(sarchive,:)archive=archive(2:NU,:)NU=NU−1end forend ifStep 9. Update the optimal value, the optimal position and the related parameters. The algorithm terminates as soon as the target precision or the max iteration is reached. Otherwise, go to Step 2.There has been a plethora of significant research on analysis of the stability and convergence properties of particle swarm optimizer (PSO) [21–23] and Evolutionary Algorithm (EA) [20,24] so far, while no such analysis on MOBCC algorithms exists. This paper presents a first and simple convergence analysis of the general Pareto-based BCC.In the process of MOBCC optimization, the new positions obtained by the individual optimization and colony optimization are shown respectively as Eqs. (15) and (16):(15)x→1=x→pre+v⋅τ(16)x→2=x→pre−2U(0,1)×(x→pre−x→i_cen)(17)x→new=k×x→1+(1−k)×x→2In the optimization process, a bacterium selects the better one betweenx→1andx→2. If it moves tox→1, k is one; otherwise, k is zero as expressed in Eq. (17).Theorem 1If X is the initial swarm, in a multi-objective search space, MOBCC algorithm will cause the swarm mean to converge to the center of the Pareto-optimal set Λ*, i.e. if μnis the expected population mean after n iterations, thenlimn→∞μn=Xˆ*, whereXˆ*denotes the center of the Pareto-optimal set.Let X* be a randomly chosen solution from the Pareto-optimal set Λ*. Then without any loss of generality, for a generic MOBCC the length of path of any bacterium and the chemotaxis vector in a particular iteration can be expressed as:(18)li(t)=X*+Dl(t)−Xi(t)(19)centeri(t)=X*+Dg(t)−Xi(t)where the difference vectors Dl(t) and Dg(t) measure, respectively, the distance of the position found by a bacterium and the chemotaxis center from X* at time-step iteration t. Using such difference vectors, Eq. (15) and (16) can be described as:(20)Xi1(t+1)=Xi(t)+[X*+Dl(t)−Xi(t)](21)Xi2(t+1)=Xi(t)+rand⋅[X*+Dg(t)−Xi(t)]where rand is a random parameter of uniform distribution in range (a,b).So Eq. (17) can be modified as shown below:(22)Xi(t+1)=Xi(t)+k⋅[X*+Dl(t)−Xi(t)]+[1−k]⋅rand⋅[X*+Dg(t)−Xi(t)]Then(23)Xi(t+1)=[1−k−(1−k)⋅rand]⋅Xi(t)+[k+(1−k)⋅rand]X*+k⋅Dl(t)+(1−k)⋅rand⋅Dg(t)Then, take expectations on both sides of Eq. (23),(24)E(Xi(t+1))=E[1−k−(1−k)⋅rand]⋅E(Xi(t))+E[k+(1−k)⋅rand]⋅E(X*)E(k)⋅E(Dl(t))+E(1−k)⋅E(rand)⋅E(Dg(t))The rand is independent of other variables. Let us define, E(rand)=m, E(Xi(t+1))=μ(t+1), E(Xi(t))=μ(t),E(X*)=Xˆ*,E(Dl(t))=Dˆl,E(Dg(t))=Dˆg. So Eq. (10) can be rearranged and shown as:(25)μi(t+1)=[1−k−m(1−k)]μi(t)+[k+m(1−k)]Xˆ*+kDˆl(t)+(1−k)mDˆg(t)(26)μi(t)=[1−k−m(1−k)]μi(t−1)+[k+m(1−k)]Xˆ*+kDˆl(t−1)+(1−k)mDˆg(t−1)To examine convergence, we take Z-transform [25,26] of both sides of Eq. (26). Dropping the subscript for each such bacterium ‘i’, we get(27)Z(μ(t))=[1−k−m(1−k)]⋅Z(μ(t−1))+[k+m(1−k)]Xˆ*⋅Z(U(t))+kZ(Dˆl)+(1−k)mZ(Dˆg)where U(t) denotes the unit step function and we define α=1−k−m+mk.(28)μ(z)(1−(1−k−m+mk)z−1)=(m+k−mk)Xˆ*⋅zz−1+kDˆl(z)⋅z−1+(1−k)mDˆg(z)⋅z−1(29)μ(z)=(m+k−mk)Xˆ*⋅zz−1⋅11−(α/z)+kDˆl(z)⋅z−1⋅11−(α/z)+(1−k)mDˆg(z)⋅z−1⋅11−(α/z)(30)⇒μ(z)=(1−α)Xˆ*⋅z2z−1⋅1z−α+kDˆl(z)⋅1z−α+(1−k)mDˆg(z)⋅1z−αThe final value theorem states limt→∞μ(t)=limz→1(z−1)μ(z) in the condition that all the poles of μ(z) are within unit circle.Then,(31)limt→∞μ(t)=(1−α)Xˆ*⋅limz→1(z−1)⋅z2z−1⋅1z−α+kDˆl(z)⋅limz→1(z−1)⋅1z−α+(1−k)mDˆg(z)limz→1(z−1)⋅1z−αConsidering the first term of the expansion,(32)(1−α)Xˆ*limz→1z2z−α=(1−α)Xˆ*11−α=Xˆ*The characteristic equation is z−α=0, so the pole is z=α⇒|α|≤1, that is |1−k−m+mk|≤1. Since k is one or zero, α is zero or 1−m; in MOBCC rand is on a interval (0,2), so m=1, we can get α=0 satisfying the condition. So the limit can be given asXˆ*.For other two components, limiting value depends upon the nature ofDˆl(z)andDˆg(z). If the poles of these terms are within unit circle, i.e. the difference vectors are bounded and not oscillatory in nature, with constant magnitude; then these difference vectors can be expended as:Dˆ(z)=∑Cjz/(z−zj), such that |zj≤1. Therefore,(33)Dˆl(z)⋅limz→1(z−1)⋅1z−α=limz→1(z−1)⋅1z−α⋅∑Cjzz−zj=limz→1∑(z−1)⋅1z−α⋅Cjzz−zj|zj|≤1 and |α|≤1, soDˆl(z)⋅limz→1(z−1)⋅(1/z−α)=0, the limit value of the other two components is zero.Then Eq. (31) simplifies as:limt→∞μ(t)=Xˆ*+0+0=Xˆ*And this proves the theorem.

@&#CONCLUSIONS@&#
This paper has proposed an improved multi-objective optimization algorithm GMOBCC. In order to improve the convergence property and the diversity of non-dominated solutions, three strategies including improved adaptive grids, oriented mutation based on grid and adaptive external archive was proposed. Besides, a convergence analysis of the general Pareto-based BCC is presented. The improved multi-objective optimization algorithm has been measured on a series of Pareto-optimal problems (continuous, discontinuous, convex and concave). At last parameter optimization of the proposed algorithm is investigated. The results show that the proposed algorithm possesses better performance on converging to the Pareto set and maintains good diversity of nondominated solutions for all the test problems, and the three strategies are effective.The convergence of the general Pareto-based BCC is proved with some assumptions and the article gives an experiment statistics study on independent parameter optimization of the algorithm. In the future work, a more comprehensive convergence analysis will be investigated. It is also necessary to give an independent theory research on parameter optimization and the sensitivity of the algorithm to them to obtain best solutions in different problems.