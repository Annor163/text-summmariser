@&#MAIN-TITLE@&#
Numerically approximated Cauchy integral (NACI) for implementation of constitutive models

@&#HIGHLIGHTS@&#
Numerically approximated Cauchy integral (NACI) is proposed to find accurate higher order derivatives.NACI is used to evaluate tensor derivatives of scalar functions.NACI is used to evaluate fourth order tangent moduli in material models.Computational efficiency of NACI is compared with other numerical procedures.NACI is found to be numerically robust and computationally efficient method for evaluating derivatives.

@&#KEYPHRASES@&#
Numerically approximated Cauchy integral (NACI),Central difference methods (CDM),Tangent modulus,Hyperelastic materials,Numerical derivatives,

@&#ABSTRACT@&#
Evaluation of the tangent modulus is one of the crucial steps in the finite element implementation of a constitutive model. The analytical derivation of the fourth order tangent moduli is in general a tedious task as it involves the derivative of stress tensor with respective to an appropriate strain tensor. A constitutive model independent subroutine which numerically evaluates tangent modulus in the place of material model specific closed form analytical expressions is developed in this study. In this context, the concept of numerically approximated Cauchy integral (NACI) is introduced based on Cauchy integral formula for evaluating derivatives. The performance of this method is demonstrated by evaluating tangent moduli for five hyperelastic models. In addition, efficacy of NACI is compared to the other existing numerical methods generally employed to evaluate tangent moduli. NACI is found to be computationally efficient and numerically robust when compared to the existing procedures.

@&#INTRODUCTION@&#
Implementation of new constitutive models into a finite element framework may involve a considerable effort. In general, given a deformation state, the purpose of a material subroutine in an implicit finite element program is to (a) evaluate stress tensor, (b) update internal state variables, if applicable, and (c) evaluate tangent modulus. Stress tensors along with state variables simulates response of the body to the applied boundary conditions, and are updated based on the constitutive relationships and the state evolution laws. However, the tangent modulus has a limited physical meaning with high numerical significance. If the tangent modulus is correctly computed then the quadratic convergence of the global Newton–Raphson iteration scheme can be preserved and the solution can be found in fewer steps. The role of tangent modulus in the finite element implementation of constitutive models is well documented and can be found elsewhere [1]. In the case of constitutive models that are currently being used in various engineering fields [2–6], the closed form expressions (if available) for tangent modulus should be diligently coded and debugged for successful performance. For complex constitutive models, the major challenge in the implementation of a constitutive model is associated with the analytical evaluation of the tangent modulus as it involves a tensor derivative of a stress tensor with respect to an appropriate strain tensor [7]; and this can be a nontrivial process for complex constitutive models. As an alternative approach, numerically obtained tangent moduli can be used in the place of analytical expressions for tangent moduli.Numerical evaluation of derivatives offers many advantages when compared to the analytically evaluated derivatives. Use of numerical derivatives eliminates the need for coding multiple subroutines for the evaluation of derivatives of different functions, and a single numerical differentiation subroutine can be used to evaluate the derivatives of different functions. This often results in a compact modular code which is easy to debug and reuse. In addition, the use of numerical derivatives eliminates the need for analytical evaluation of closed form expressions for calculating the derivatives. This is an attractive feature especially for complex constitutive models where analytical evaluation of tangent modulus is a challenging task. Despite their advantages, numerically approximated derivatives cannot be used indiscriminately as they suffer from numerical errors and are computationally expensive when compared to the analytical derivatives.Miehe [8] first proposed a forward difference approximation together with perturbation techniques to evaluate the fourth order tangent moduli for finite strain problems. Performance of the proposed forward difference approximation scheme was assessed from the following aspects: (a) rate of convergence of the Euclidean norm of the residual; and (b) computational overhead when compared to the analytical derivatives. Miehe [8] reported quadratic convergence for a finite difference interval ofh∈[10−6,10−10]. It was shown that quadratic convergence is not possible for finite difference interval values other thanh∈[10−6,10−10]due to truncation and subtractive cancellation errors at lower and higher finite difference intervals, respectively. An average additional computational overhead of 85% was reported for a forward difference approximation in this study. The forward difference approximation with associated perturbations proposed by Miehe [8] was later used in several studies for the evaluation of fourth order tangent moduli [4,6,9–13].Finite difference schemes for evaluation of derivatives are simple to implement but are prone to truncation and subtractive cancellation errors. Subtractive cancellation errors arise due to loss of precision when two close numbers are subtracted. Although subtractive errors cannot be eliminated, they can be controlled by choosing a larger value of difference intervals. However, at large finite difference intervals, the truncation errors dominate. These truncation errors can be reduced by employing higher order difference methods at an additional computational cost. In addition, the higher order difference methods are not programming friendly especially when used to evaluate higher order derivatives. A robust numerical method in which the truncation errors can be controlled to obtain desired numerical accuracy without high computational costs and coding efforts is preferable. Among other applications, such a method can be used in finite element codes to evaluate tangent moduli, and this will simplify the implementation of the constitutive models and provide a better interface for implementing new constitutive models.In this study the numerically approximated Cauchy integral method (NACI) is proposed based on Cauchy integral formula for evaluation of numerical derivatives. It is shown that NACI is a programming friendly, numerically robust and computationally efficient method for evaluating derivatives of differentiable functions. NACI is extended to evaluate tensor derivatives of tensor valued functions and is used to evaluate fourth order tangent moduli which can simplify the finite element implementation of new constitutive models. The performance of this procedure is demonstrated by implementing five popularly used hyperelastic models. Although this procedure is used for hyperelastic materials in this paper, NACI is a general method to evaluate tensor derivatives and can be used for other constitutive models. Finally, the computational efficiency of NACI method is demonstrated by comparing results with higher order finite difference schemes.The paper is organized as follows: in Section 2 the existing methods for numerical differentiation are first discussed. The NACI method is developed in Section 3 and illustrative examples are presented to demonstrate the application of this method. Section 4 has the details of five hyperelastic material models used in this study together with the perturbation schemes required to evaluate tangent moduli using NACI. A detailed numerical testing is carried out in Section 5, and summary and important results of this study are provided in Section 6.This section highlights the important properties and limitations of common numerical methods used to evaluate derivatives, and provide the motivation behind the proposed numerically approximated Cauchy integral (NACI) scheme to evaluate derivatives. In this manuscript the following notation is followed: (a) scalars are represented using italics (e.g., x, y, u, v, f, A); (b) first order and second order tensors are represented by bold italics (e.g.,x,y,u,v,e,A,B); and (c) the fourth order tensor are represented by double scripts (e.g.,A,ℂ).Finite difference methods are one of the basic methods used for evaluation of numerical derivatives and are based on the Taylor series expansion of a function. The Taylor series expansion of a real valued functionf(x)with a finite difference increment h about a point x is given as(1)f(x+h)=f(x)+hf′(x)+h2f″(x)2!+h3f″′(x)3!…A simple forward difference approximation for the first derivative of an analytic functionf(x)at x=x0 is obtained by truncating the Taylor series and is given as(2)f′(x0)=f(x0+h)−f(x0)h+O(h)whereO(h)represents the first order truncation error. The truncation error is introduced as the higher order terms in the Taylor series are neglected (truncated). The magnitude of the truncation error can be reduced by choosing a smaller finite difference interval (h). The other alternative is to choose a numerical procedure which has higher order truncation errors. The central difference approximation of the first derivative is one of the simplest numerical procedures with higher order truncation errors. The central difference approximation is obtained by subtracting the Taylor series expansion off(x0−h)from the Taylor series expansion off(x0+h)and truncating the higher order terms. The central difference approximation for first derivative is given as(3)f′(x0)=f(x0+h)−f(x0−h)2h+O(h2)whereO(h2)represents the second order truncation error. As a result of this second order truncation error, the central difference approximation provides better derivative approximation when compared to the forward difference approximation. The sensitivity of these numerical procedures with respect to the incremental difference (h) is demonstrated by evaluating the numerical derivative of a simple analytical function. For this purpose, the numerical derivative of the functionf(x)=x2sin3(5x)atx=π/4is evaluated using both FDM and CDM for various finite difference intervals (h). The relative error, e, is used to quantify the sensitivity of a numerical method to the size of the finite difference interval (h); the relative error is defined as(4)e=|fNA′−fA′||fA′|wherefNA′andfA′are respectively the numerical and analytical derivatives of functionf(x). Relative errors for both CDM and FDM are plotted against the size of the finite difference interval inFig. 1. From this result the following observations can be made: (a) relative error decreased with decrease in the size of difference interval until a value ofh=5.3×10−10andh=3.1×10−7is reached for FDM and CDM, respectively; (b) the central difference method performed better than the forward difference method for difference interval values greater thanh=5.3×10−10; and (c) when the difference intervals are decreased beyond a certain limit, the relative error increased monotonically. First two observations can be described from the fact that the magnitude of the truncation errors decrease with decrease in difference interval, and this decrease is more predominant in the case of central difference method due to second order truncation. However, for finite difference intervals smaller thanh=5.3×10−10, both the procedures suffer from subtractive cancellation errors leading to increase in the relative error. Subtractive cancellation errors occur due to loss of precision when two numerically close numbers are subtracted. Hence, these cancellation errors cannot be avoided with finite precision mathematics, and the accuracy of derivatives obtained using finite difference methods crucially depends on the choice of the finite difference interval.From the above discussion, it is clear that the finite difference methods suffer from truncation and subtractive cancellation errors at large and small values of finite difference intervals, respectively. Following properties are desirable in an ideal method for evaluation of derivatives: (a) can use small value of finite difference interval to minimize the truncation errors without introducing subtractive cancellation errors; or (b) can use a large value of finite difference interval to minimize the subtractive cancellation errors without introducing significant truncation errors. In this section, case (a) is first addressed, and case (b) is addressed in further sections of this paper.Numerical procedures without subtractive cancellation errors theoretically do not have a lower bound on the size of finite difference interval. Lyness and Moler [14] proposed a numerical procedure without subtractive cancellation errors to evaluate the first derivative of an analytic function using complex step derivative approximation (CSDA). This procedure is obtained by expanding a Taylor series for a complex analytic functionf(x)using an imaginary finite difference interval(ih;i=def−1)about a point x0 which is given as(5)f(x0+ih)=f(x0)+ihf′(x0)−h2f″(x0)2!−ih3f″′(x0)3!+h4f4(x0)4!…The approximation for first derivative is obtained by taking imaginary parts and dividing by h on both sides of Eq. (5) and is given as(6)f′(x0)=Im[f(x0+ih)]h+O(h2)Unlike the FDM and CDM approximations, CSDA (Eq. (6)) does not involve any subtraction operation for the numerical evaluation of first derivative. As stated earlier, such numerical procedures do not suffer from the subtractive cancellation errors. The first derivative of the analytic functionf(x)=x2sin3(5x)atx=π/4is evaluated using CSDA and the sensitivity of this numerical procedure with respect to the size of the finite difference interval (h) is provided in Fig. 1. Fig. 1 highlights the most important benefit of employing CSDA in the place of finite difference methods to evaluate the first derivative of a function: there are no subtractive cancellation errors in the case of CSDA while evaluating the first derivative of an analytic function. Hence, CSDA is a robust numerical procedure to evaluate the first derivatives of analytic functions, and in CSDA accuracies up to machine precision can be obtained by reducing the size of finite difference interval to any limit as shown in Fig. 1. However, CSDA suffers from subtractive cancellation errors for higher order derivatives. For instance, second order derivative using CSDA is given as(7)f″(x0)=2h2(f(x0)−Re[f(x0+ih)])+O(h2)Two observations can be made from the Eq. (7): (a) CSDA for second derivative has second order truncation errors; and (b) CSDA for second derivative is not immune to subtractive cancellation errors unlike the CSDA for first derivative Eq. (6).It is important to compare the performance of CSDA for second derivative with the finite difference counterparts before investigating for an alternative numerical procedure to evaluate higher order derivatives. Simple forward and central difference approximations for the second derivative of an analytic function are given as(8)f″(x0)=1h2(f(x+2h)−2f(x+h)+f(x))+O(h)and(9)f″(x0)=1h2(f(x0+h)−2f(x0)+f(x0−h))+O(h2)The sensitivity of these numerical approximations for the second derivative off(x)=x2sin3(5x)atx0=π/4with respect to the finite difference interval (h) is provided inFig. 2. From Fig. 2, it is clear that the performance of CSDA for second derivative is no better than its central difference counterpart. The benefit of the absence of subtractive cancellation errors in the case of CSDA for first derivative is not present for higher order derivatives. In essence, the complex step derivative approximation has two limitations: (a) truncation errors are unavoidable; and (b) subtractive cancellation errors are introduced when evaluating higher order derivatives. A numerical procedure which can be used to evaluate the higher order derivatives with a capability to control the associated numerical errors is favorable, and such a numerical procedure can be used in various engineering and science applications due to the ubiquitous presence of derivatives.In summary, two major issues are identified: (a) there is no other way to control the relative errors without manipulating the size of finite difference interval; and (b) numerical evaluation of higher order derivatives where the relative errors can be systematically controlled is not a straightforward exercise. To this end, a numerical procedure which could evaluate higher derivatives of an analytic function with a flexibility to control the magnitude of relative error is desirable. These two issues are addressed in this paper by using numerically approximated Cauchy integral (NACI). To show the application of this method, NACI is used to evaluate fourth order tangent modulus for various constitutive models.The Cauchy integral formula expresses the value of a complex analytic function at a point in a certain domain in terms of function values on the boundary of this domain; the function is assumed to be analytic within the domain. Moreover, derivatives of an analytic function can be obtained by successive differentiation of Cauchy integral formula. Let f be analytic at a point x=x0 and hence differentiable in a certain neighborhoodDof x0. By choosing a positively oriented circle of radius h,Ch:|x−x0|=hsuch thatCh⊂Dand making use of the Cauchy integral formula [15], the value of functionf(x0)is given as(10)f(x0)=12πi∮Chf(x)x−x0dxwhere integral in Eq. (10) is carried out on the contour defined by the circleCh. By differentiating Eq. (10), the first derivative of the analytic functionf(x)at x=x0 is obtained as(11)f′(x0)=12πi∮Chf(x)(x−x0)2dxSimilarly, by successive differentiation of Eq. (10), the Lth derivative of the analytic functionf(x)at x=x0 is given as(12)f(L)(x0)=L!2πi∮Chf(x)(x−x0)L+1dxBy using the coordinate transformation:x=x0+hexp(iθ), Eq. (12) can be written as(13)f(L)(x0)=L!2πhL∫02πf(x0+heiθ)exp(−iLθ)dθIf the point x0 lies on the real axis as shown inFig. 3, the derivatives of the function at x=x0 are also real. Hence the Lth derivative of a real analytic function can be obtained by first extending the function in the complex domain and then evaluating the integral provided in Eq. (13). In the following discussion it is assumed that such extension into complex domain is possible for the functions under consideration. Furthermore, in practical applications the derivatives can be obtained by evaluating the integral in Eq. (13) using appropriate numerical methods. In the next section numerical integration schemes are described to evaluate the integral in Eq. (13).In this study, the standard trapezoidal rule and 1/3rd Simpson׳s rule are considered for numerically evaluation of the integral in Eq. (13). The important aspects of these numerical integration schemes are summarized in the following sections.The trapezoidal rule for numerical integration is given as follows [16]:(14)∫x0xNf(x)dx=xN−x02N[f(x0)+2(f(x1)+f(x2)….+f(xN−1))+f(xN)]where N is the number of equally spaced discretization intervals and{xk}k=0,1,…Nare the N+1 points where the function is evaluated. Bound on the numerical error associated with the trapezoidal rule is given by [16](15)|ET|≤c1N2where|ET|is the bound on the error and c1 is a constant. Using the trapezoidal rule given in Eq. (14) for the numerical integration Eq. (13) can be rewritten as(16)f(L)(x0)≈L!2NhLRe[f¯0+2(f¯1+f¯2…+f¯N−1)+f¯N]where(17)f¯k=f(x¯k)exp(−i2πkLN),k=0,1,…,Nand(18)x¯k=x0+hexp(i2πkN)When x0 is real the derivatives of the functionf(x)at x0 should be real; however, due to finite precision operations carried out, the sum –f¯0+2(f¯1+f¯2…+f¯N−1)+f¯N– in Eq. (16) can have a small residual complex part. Therefore, in practice only the real part of the sum is considered as shown in Eq. (16).The 1/3rd Simpson׳s rule for numerical integration is given as follows [16]:(19)∫x0xNf(x)dx=xN−x03N[f(x0)+4(f(x1)+f(x3)….+f(xN−1))+2(f(x2)+f(x4)….+f(xN−2))+f(xN)]In this case the error is bounded by [16](20)|ES|≤c2N4where|ES|is the error and c2 is a constant. Using the 1/3rd Simpson׳s rule given in Eq. (19), the numerical evaluation of the integral given in Eq. (13) is carried out as follows:(21)f(L)(x0)≈L!3NhLRe[f¯0+4(f¯1+f¯3…..+f¯N−1)+2(f¯2+f¯4…..+f¯N−2)+f¯N]wheref¯kis defined in Eq. (17).Numerical derivatives defined in Eqs. (16) and (20) are a function of contour radius (h) and number of discretization intervals (N). These derivatives can be evaluated by first fixing either one of the parameters – contour radius (h) or discretization intervals (N) – and then determining the other parameter for obtaining sufficiently accurate derivatives with least number of computations. Thus for a given value of contour radius (h), the performance of these derivative procedures can be enhanced by iteratively determining the optimum number of required discretization intervals (N). The details of this iterative NACI method are illustrated by means of examples in the next sections.As a numerical example, the first derivative of the analytical functionf(x)=x2sin35xatx=π/4is evaluated using both the trapezoidal and 1/3rd Simpson׳s integration schemes. Minimum N for trapezoidal and 1/3rd Simpson methods to evaluate the integral in Eq. (13) is 2 and 4, respectively. Using this minimum N, the sensitivity of these procedures with respect to the size of the radius (h) is provided inFigs. 4 and 5, respectively. From Figs. 4 and 5, it can be seen that the relative error decreased with decrease in the radius until a certain value of h (h=2.79×10−7for trapezoidal rule integration andh=1.74×10−6for 1/3rd Simpsons rule integration). But when the radius is reduced further, the relative error increased monotonically. This is because the integral given in Eq. (13) becomes small for small h and cannot be calculated accurately using finite precision mathematics, and the calculations are again swamped by subtractive cancellation errors. To further clarify this issue, the calculations behind the evaluation of first derivative off(x)=x2sin35xatx=π/4using trapezoidal rule(N=6)forh=10−3andh=10−17are provided inTable 1. The function evaluation points given in Eq. (18) are plotted inFig. 6(a) forh=10−3. Forh=10−3the absolute values of the positive part and the negative part of the sum in Eq. (16) given in Table 1 are considerably different. However, with the decrease in h the absolute values of the positive and negative parts of Eq. (16) become close leading to subtractive cancellation errors. Determination of the lower limits of h at which the integration methods will yield numerically meaningful results will depend on the function under consideration and is out of the scope of this paper. However, it is advisable to avoid very small h to avoid these errors especially when higher derivatives are evaluated using NACI.For further discussion, the derivatives are considered numerically accurate if the relative errore<10−10. From Eqs. (15) and (20), it is clear that the error in the numerical integration decreases rapidly by choosing more number of function evaluation points between the integration limits. Hence, the number of terms N in the numerically approximated Cauchy integral can be iteratively increased until a desired accuracy is obtained. The sensitivity of this iterative numerically approximated Cauchy integral with respect to the size of the contour radius (h) is provided for trapezoidal integration and 1/3rd Simpson׳s rule integration in Figs. 4 and 5, respectively. Minimum number of function evaluations,nf=N+1, used to achieve numerically accurate derivatives for different values of radii (h) are provided inFig. 7. From Figs. 4 and 5, it can be noticed that numerically accurate derivatives can be obtained using NACI irrespective of the size of radius provided h is neither too small leading to subtractive cancellation errors or too big to violate the assumptions given in Section 3.1. From this exercise, it is clear that the numerically approximated Cauchy integral can be effectively used to evaluate numerically accurate first derivatives irrespective of the size of the contour radius. The 1/3rd Simpson׳s integration is a superior numerical integration scheme when compared to trapezoidal rule. However, the 1/3rd Simpson׳s integration requires more number of terms to evaluate the integral when compared to the trapezoidal rule. The trapezoidal rule for numerical integration will be adopted for the rest of the paper and will be referred to as the numerically approximated Cauchy integral (NACI). Here, it should be noted that any reasonable numerical integration scheme can be used to evaluate the Cauchy integral provided in Eq. (13).Next the second derivative off(x)=x2sin35xatx=π/4is evaluated using NACI and the sensitivity of the relative error (e) with respect to the size of the contour radius (h) is plotted inFig. 8(a). Fornf=3, the relative error decreased untilh=2.97×10−4, but a further decrease in contour radius has led to increase in relative error due to the subtractive cancellation errors. The iterative NACI is observed to perform well until the subtractive cancellation errors disrupted the solution (Fig. 8(a)). Numerically accurate second order derivatives are again obtained using NACI by iteratively increasing the number of terms in the integration process. The number of terms required to obtain numerically accurate derivatives is provided in Fig. 8(b). The number of terms required in the iterative NACI is high for larger values of contour radii but the number of required terms decreases with decrease in the size of contour radii until the subtractive cancellation errors appears. By observing Figs. 7 and 8(b), it can be concluded that the number of terms required to obtain numerically accurate derivatives in the iterative NACI can be minimized by choosing an optimal value of contour radius: i.e. not too large or small.Finally, higher order derivatives of differentiable functions are considered. First, higher derivatives of polynomials are evaluated using NACI; the polynomials on which the differentiation is performed, relative errors and the corresponding number of terms considered for NACI evaluation are presented inTable 2. These results show that numerically accurate derivatives of a mth degree polynomials are obtained whennf=m+1, i.e. N=m, terms are used for evaluating the integral. Next, numerical differentiation is conducted on the following differentiable functions: (a)f(x)=sin(x); (b)f(x)=exp(sinx); and (c)f(x)=log(x). The first 10 derivatives of these functions are evaluated using NACI, and the relative errors and the corresponding number of terms considered for NACI evaluation are presented inTable 3. Finally, higher order derivatives (up to 50th derivative) for more complex functions are provided inTable 4; exact derivatives of these functions are obtained using Mathematica®[17]. Relative errors provided in Tables 2–4 clearly indicate that the numerically approximated Cauchy integral can be used to obtain numerically accurate higher derivatives.The numerically approximated Cauchy integral requires multiple function evaluations along with other additional operations to evaluate the numerical derivative. These additional operations may not be expensive when the derivatives of scalar functions are evaluated using NACI. However, it is important to optimize the performance of NACI to apply this method for computationally intensive problems (for example: differentiation of tensor functions). The summation provided in Eq. (16) requires the function(f)to be evaluated onnf=N+1points that lie on the periphery of a circle of radius h. As an example, let N=6 and the contour radiush=10−3; the function evaluation points{x¯}k=0Ndefined by Eq. (18) are plotted in Fig. 4(a). The sum of real parts of the functions, i.e.Re[f(x¯0)+f(x¯1)+…+f(x¯6)], should be evaluated in order to calculate the numerical derivative. However from Fig. 4(a), it is clear that the real parts of points P1, P2 and P3 are same as those of P7, P6 and P5, respectively. For this reason the real parts of the function(f)evaluated at these points will be the same; i.e.Re[f(x¯0)]=Re[f(x¯6)],Re[f(x¯1)]=RE[f(x¯5)]andRe[f(x¯2)]=Re[f(x¯4)]. Hence, the function has to be evaluated only 4 times (points P1–P4) instead of 7 times to evaluate the numerical derivative. Similarly, when N=7 (Fig. 4(b)) the function has to be evaluated for 4 times instead of 8 times. In essence,(N/2)+1and(N+1)/2function evaluations are required when N is even and odd, respectively, instead of N+1 function evaluations due to the symmetry of the points on the circle about the real axis (Figs. 3 and 4). In the further sections where derivatives of tensors are discussed, only the minimum numbers of function evaluations are made to make NACI computationally efficient. In spite of this change, NACI still involves multiple function evaluations when compared to the analytical solution. The additional computational time necessary to perform these calculations is not significant for the functions presented above. A detailed study is necessary to understand the computational efficacy of NACI for practical applications, and this study is presented for the constitutive modeling problems in further sections.In this section, NACI is used to evaluate numerically accurate first derivative of scalar valued tensor functions(f(A)). The first derivative of a scalar valued tensor function(f(A))at a pointA=A0is a second order tensor. The ij components of the derivative[f′(A0)]ijcan be obtained by numerically evaluated using NACI as follows:(22)[f′(A0)]ij=12NhRe[f¯0+2(f¯1+f¯2…+f¯N−1)+f¯N]wheref¯kare given as follows:(23)f¯k=f(Ak)exp(−i2πkLN)(24)Ak=A0+hexp(i2πkLN)D(ij)where the perturbation tensorsD(ij)are given as follows:(25)Dpq(ij)=1,ifp=iandq=jDpq(ij)=0,ifp≠iorq≠jp,q∈{1,2,3}For illustration of this method, first order analytical derivatives along with their NACI solutions of few scalar valued tensor functions that are widely used in mechanics of materials are provided inTable 5. A contour radius of h=1 is used for the evaluation of NACI. Numerically accurate first derivatives are obtained for all the chosen scalar valued tensor functions using NACI.In this section the application of NACI for evaluation of tangent moduli for hyperelastic material is considered. Let the undeformed hyperelastic body occupy the reference configuration denoted by an open setΩ0∈ℝ3. Let this body move to a new configuration as a result of the deformation denoted byΩ∈ℝ3. The boundary of the body is denoted by∂Ω, and it consists of disjoint subsets∂Ωσand∂Ωu, such that∂Ω=∂Ωσ∪∂Ωuand∂Ωσ∩∂Ωu=∅. Tractions are prescribed on∂Ωσ, while displacements are prescribed on∂Ωu. The position vectors of material points in the initial and current configurations are denoted byXandx, respectively. These position vectors are related by a one-to-one mapping (motion) given by the function:x=φ(X,t). The deformation gradient that transforms the tangent vectors defined in the material configuration to the spatial configuration is defined as a second order tensorF=def∇Xφ(X,t)whose determinant is greater than zero(J=defdet[F]>0). The associated symmetric right Cauchy–Green strain tensor(C)is defined in terms of deformation gradient as follows:(26)C=FTFwhereCis a positive definite tensor and has the following spectral representation [7]:(27)C=∑a=13λa2Na⊗Nawhereλa2andNa,a∈{1,2,3}, are the Eigen values and Eigen vectors of right Cauchy–Green strain tensor. The three invariants of the right Cauchy–Green strain tensor are given as(28)I1=tr(C)=λ12+λ22+λ32I2=12(I12−tr(C2))=λ12λ22+λ12λ32+λ22λ32I3=detC=J2=λ12λ22λ32A hyperelastic material is associated with an objective scalar valued function called Helmholtz free energy function(ψ)which is a continuous function of kinematic variables. The materials considered in this study are restricted to the isotropic homogeneous hyperelasticity [7]. For such materials, the analytical expressions for the stress tensors and tangent moduli are provided in the following section. The spatial form of the boundary value problem for finite strain quasi-static hyperelasticity is expressed as follows:(29)∇x.σ+b=0inΩu=up(x)on∂Ωut=tp(x)on∂Ωσwhereσ=(1/J)F.S.FTis the Cauchy stress tensor,b(x)is body force field,up(x)is the applied displacement field on∂Ωuandtp(x)is the applied traction field on∂Ωσ. The weak form of the boundary value problem given by Eq. (29) is expressed as follows:(30)Wint=∫Ωσ:∇xηdv=∫∂Ωση.tpds+∫Ωη.bdv=Wext∀ηwhereηare the appropriate test functions [18]. The linearized form of internal virtual work (Wint) is expressed as follows:(31)Dη˜[Wint]=∫Ω(σ:[∇xη¯]T∇xη+∇xη˜:ℂs:∇xη)dvwhereη˜andηare the appropriate test functions [18];Dη˜is directional derivative ofWintin theη˜direction;ℂsis the spatial tangent modulus obtained by contravariant push-forward of the Lagrangian tangent modulusℂ, i.e.ℂs=(1/J)P2−1[ℂ]or in component formℂsijkl=(1/J)FiIFjJFkKFlLℂIJKL; readers are further referred to the standard textbook [18] for the derivation of this weak form. The global discrete displacement based finite element is problem is then expressed as follows:(32)R(u)=Fint(u)−FextwhereR(u)is the residual force vector,Fint(u)is the internal force vector andFextis the external force vector andu(x)=φ−Xis an unknown displacement field. This global nonlinear equation is solved using the Newton–Raphson method. External force vector is calculated from the applied traction and the body force [18], and the internal force vector is calculated from the following standard finite element assembly process:(33)Fint(u)=Anelei=1FinteFinte=∫ve[Be]T[σ]dvewhereBeis the strain–displacement matrix andAis the finite element assembly operator and veis the volume of an element. For the solution of global nonlinear equilibrium Eq. (32) using the Newton–Raphson method, the tangent stiffness matrix for the evaluation of tangent of the residual is given as follows:(34)KT=Anelei=1KTeKTe=∫ve([Be]T[ℂs][Be]+[kg])dvewhere in matrix form the components of spatial tangent modulus,[ℂs], that are required include(35)[ℂs]=[c1111c1122c1133c1112c1123c1131c2211c2222c2233c2212c2223c2231c3311c3322c3333c3312c3323c3331c1211c1222c1233c1212c1223c1231c2311c2322c2333c2312c2323c2331c3111c3122c3133c3112c3123c3131]and the geometric part of the stiffness matrix is given by(36)[kg]=[k11Ik12I…k1nenIk21Ik22I……⋮⋮⋱⋮knen1Iknen2I…knennenI]withkab=∇xNa.σ.∇xNbwhere Nris the shape function associated with the node r, andnenare the number of nodes in an element andIis an identity matrix of appropriate dimension [18]. Given a trial displacement vector(un+1(0))the goal of the global Newton–Raphson iterations is to adjust the displacements such that the residualR(un+1)=0. To this end, the residual vector and the tangent stiffness are evaluated at every iteration, and this process needs Cauchy stress tensor (σ=(1/J)F.S.FT) and spatial tangent modulus,ℂs=(1/J)P2−1[ℂ], which in turn depends on the chosen hyperelastic model. Such calculations are typically carried out an integration point within a finite element. An asymptotic second order convergence rate is expected in the global Newton–Raphson iterations if the involved derivatives are correctly evaluated.For hyperelastic materials, the Helmholtz free energy function(ψ)is generally expressed in terms of the invariantsψ=ψ(I1,I2,J)or Eigen valuesψ=ψ(λ1,λ2,λ3)of right Cauchy–Green strain tensor(C). The second Piola–Kirchhoff stress tensor(S)for isotropic hyperelastic materials is obtained by evaluating the first derivative of the Helmholtz free energy function(ψ)with respect to right Cauchy–Green strain tensor(C)and is given as follows, for the two energy models:(37)S=S(C)=2∂ψ(I1,I2,J)∂C=2(∂ψ∂I1∂I1∂C+∂ψ∂I2∂I2∂C+∂ψ∂J∂J∂C)S=∑a=131λa∂ψ(λ1,λ2,λ3)∂λaNa⊗Nawhere(38)∂I1∂C=I,∂I2∂C=I1I−C,and∂J∂C=J2C−1The Lagrangian tangent modulus(ℂ)for isotropic hyperelastic materials is obtained by evaluating the first derivative of the second Piola–Kirchhoff stress tensor(S)with respect to right Cauchy–Green strain tensor(C)and is given as [7]ℂ=2∂S∂C=4∂2ψ∂C∂C=4(∂2ψ∂I12∂I1∂C⊗∂I1∂C+∂ψ∂I2∂I2∂C+∂ψ∂J∂J∂C)orℂ=c1I⊗I+c2(I⊗C+C⊗I)+c3(I⊗C−1+C−1⊗I)+c4C⊗C+c5(C⊗C−1+C−1⊗C)+c6C−1⊗C−1−c7∂C−1∂C+c8Swhere(39)c1=4(∂2ψ∂I1∂I1+2I1∂2ψ∂I1∂I2+∂ψ∂I2+I12∂2ψ∂I2∂I2),c2=−4(∂2ψ∂I1∂I2+I1∂2ψ∂I2∂I2),c3=4(I3∂2ψ∂I1∂I3+I1I3∂2ψ∂I2∂I3),c4=4(∂2ψ∂I2∂I2),c5=−4I3(∂2ψ∂I2∂I3),c6=4(I3∂ψ∂I3+I32∂2ψ∂I3∂I3),c7=−4I3∂ψ∂I3,c8=−4∂ψ∂I2I=δikδjlEi⊗Ej⊗Ek⊗El,I¯=δilδjkEi⊗Ej⊗Ek⊗El,S=12(I+I¯)(40)ℂ=∑a,b=134∂2ψ∂λa2∂λb2Na⊗Na⊗Nb⊗Nb+∑a,b=1a≠b3Saa−Sbbλa2−λb2(Na⊗Nb⊗Na⊗Nb+Na⊗Nb⊗Nb⊗Na)In case whereλa=λb, the second term of the above equation is evaluated using L′Hôpital׳s rule which is given as(41)limλa→λbSaa−Sbbλa2−λb2=2(∂2ψ∂λb2∂λb2−∂2ψ∂λa2∂λb2)Five hyperelastic constitutive models are considered in this study: (a) neo-Hookean model [18]; (b) modified neo-Hookean model [18]; (c) Blatz-Ko model [19]; (d) Log-principal model [18]; and (e) Mooney–Rivlin model [7]. The second Piola–Kirchhoff stress tensor(S)and the corresponding Lagrangian tangent moduli for these hyperelastic constitutive models are evaluated using Eqs. (37)–(41) and are summarized inTable 6. The expressions for the stresses and tangent moduli provided in Table 6 will be used to implement the constitutive models analytically. In the further sections, various computational methods for numerical approximation of the derivatives are considered.In this section a systematic procedure is laid out to evaluate the fourth order tangent modulus using NACI. The tangent modulus is obtained by evaluating the first derivative of the Piola–Kirchhoff stress tensor(S(C))with respect to the right Cauchy stress tensor(C)(Eq. (37)). Now using NACI, the[ℂ]ijklcomponents the tangent modulus(ℂ)can be expressed as follows:(42)[ℂ]ijkl=∂Sij∂Ckl≈12NhRe[S¯ij(0)+2(S¯ij(1)+S¯ij(2)…..+S¯ij(N−1))+S¯ij(N)]whereS¯ij(r)are the components of the perturbed second Piola–Kirchhoff stress tensors given as(43)S¯ij(r)=Sij(kl)exp(−i2πrN),r=0,..,NSij(kl)=Sij(C¯r(kl))andC¯r(kl)are the perturbed right Cauchy–Green strain tensors given as(44)C¯r(kl)=C+hE(kl)exp(i2πrN),r=0,..,Nwhere the perturbation tensorE(kl)is defined as follows:(45)E(kl)=defi2[Ek⊗El+El⊗Ek]whereEi,EjandEkare the standard basis vectors. The first step while evaluating the tangent modulus using NACI is to choose the number of discretization intervals(N)for a given radius (h). Hence, to obtain a column of the tangent modulus (Eq. (35)),nf=N/2+1ornf=N+1/2perturbations of right Cauchy–Green strain tensor{C¯r(kl)}r=0nfand second Piola–Kirchhoff stress tensors{S¯r(kl)}r=0nfare required. These additional perturbations and stress evaluations lead to additional computational time when compared to the analytical solution. Computational efficiency of NACI for evaluating the fourth order tangent modulus is discussed in Section 5.In this section a brief description of higher order difference methods for evaluation of tangent moduli is provided. The basic framework for this process was proposed by Miehe [8] to evaluate the tangent modulus using forward difference approximation. Finding tangent modulus using higher order central difference approximation in the place of forward difference approximation ensures quadratic convergence in a wider range of finite difference intervals (h) for the reasons discussed in Section 2. However, higher order central difference methods are more expensive when compared to the forward difference method due to the additional functional evaluations. A detailed study regarding the computational efficiencies is provided in the later sections. The linear increment of the second Piola–Kirchhoff stress tensor(ΔS)is given as [8]:(46)ΔS=defℂ:12ΔCUsing Eq. (26) the increment in the right Cauchy–Green strain tensor(C)is obtained as(47)ΔC=[FTΔF+(ΔF)TF]Now the components[ℂ]ijklof the tensorℂcan be obtained if the perturbationsΔFare appropriately chosen. To this end, let the perturbationΔFbe is defined as follows [8]:(48)ΔF(kl)=defh2[(F−T.Ek⊗El+F−T.El⊗Ek)]whereEi,EjandEkare the standard basis vectors. Using Eq. (47), the increment in the Cauchy–Green strain tensor is given as(49)ΔC(kl)=h(Ek⊗El+El⊗Ek)=2hsym(Ek⊗El)Substituting Eq. (49) in Eq. (46) the following definition for the incremental second Piola–Kirchhoff stress tensor is obtained:(50)1hΔS=ℂ:sym(Ek⊗El)and this equation yields, in component form(51)[ℂ]ijkl=1hΔSijwhereΔS=defΔS(ΔF(kl))orΔSij=def[ΔS(ΔF(kl))]ij, i.e.ΔSis the change in the second Piola–Kirchhoff calculated corresponding to the perturbationΔF(kl). The change in the second Piola–Kirchhoff stress tensor can be expressed using central difference methods. Higher order central difference approximations ofΔScan be obtained as follows:(a)Second order(O(h2))central difference method (SCDM)(52)ΔS=12(S˜+1−S˜−1)Fourth order(O(h4))central difference method (FCDM)(53)ΔS=112(S˜−2−8S˜−1+8S˜+1−S˜+2)Sixth order(O(h6))central difference method (SiCDM)(54)ΔS=160(−S˜−3+9S˜−2−45S˜−1+45S˜+1−9S˜+2+S˜+3)Eighth order(O(h8))central difference method (ECDM)(55)ΔS=1840(3S˜−4−32S˜−3+168S˜−2−672S˜−1+672S˜+1−168S˜+2+32S˜+3−3S˜+4)whereS˜−mandS˜+mare the perturbed second Piola–Kirchhoff stress tensors which are given as follows:(56)S˜−m=defS(F˜−m)S˜+m=defS(F˜+m)whereF˜−mandF˜+mare the perturbed deformation gradients which are defined as follows:(57)F˜−m(ΔF(kl))=defF−mΔF(kl)F˜+m(ΔF(kl))=defF+mΔF(kl)By substituting the higher order central difference approximations for incremental second Piola–Kirchhoff stress tensor in Eq. (50), the components of the Lagrangian tangent modulus can be written as follows:(a)Tangent modulus using SCDM(58)[ℂ]ijkl≈12h(S˜ij+1−S˜ij−1)Tangent modulus using FCDM(59)[ℂ]ijkl≈112h(S˜ij−2−8S˜ij−1+8S˜ij+1−S˜ij+2)Tangent modulus using SiCDM(60)[ℂ]ijkl≈160h(−S˜ij−3+9S˜ij−2−45S˜ij−1+45S˜ij+1−9S˜ij+2+S˜ij+3)Tangent modulus using ECDM(61)[ℂ]ijkl≈1840h(3S˜ij−4−32S˜ij−3+168S˜ij−2−672S˜ij−1+672S˜ij+1−168S˜ij+2+32S˜ij+3−3S˜ij+4)For example, when using SCDM (Eq. (58)), evaluation of the 4th column of[ℂs], i.e.[c1112,c2212,c3312,c1212,c2312,c3112]Trequires two perturbations of deformation gradient:F˜−1(ΔF(12))andF˜−1(ΔF(12))and the corresponding two stress tensors(S˜−1(F˜−1)andS˜+1(F˜+1)). Similarly, four, six and eight perturbations of deformation gradient and the corresponding perturbed stress tensors are required when using FCDM, SiCDM and ECDM, respectively to evaluate a column of tangent modulus (Eq. (35)).The relative performances of the numerical approximations of tangent moduli proposed in this paper are studied by conducting finite element analyses on Cook׳s membrane problem using five different hyperelastic constitutive models. The geometry of the Cooks membrane is given inFig. 9. Plane strain conditions are considered and a total maximum load of 200N is applied in 10 equal steps. An elastic modulus of E=200MPa and Poissons ratio ofν=0.3is used in the analyses. Four node Q4 elements with a coarse mesh of size 20×20 and finer mesh of size 40×40 are chosen to study the sensitivity of the numerical procedures to the mesh density (Fig. 10). Central difference methods (SCDM, FCDM, SiCDM and ECDM) and numerically approximated Cauchy integral (NACI) are used to evaluate the tangent moduli. The algorithms for these two numerical procedures are provided inFig. 11 and are implemented in an in-house Matlab® based finite element program ND-FEA developed at the University of Notre Dame. In this section the sensitivity of the central difference methods and NACI with respect to the size of finite difference interval and contour radii is studied, and the computational performance of the two methods is compared.Computational algorithm for the central difference methods is given in Fig. 11(a). The second Piola–Kirchhoff stress tensor(S)is obtained directly by using closed form expressions given in Table 6. The tangent modulus(ℂ)is obtained numerically using four higher order central difference approximations: SCDM, FCDM, SiCDM and ECDM described in Section 4.3. Sensitivity of these methods to the finite difference interval (h) for the Mooney–Rivlin hyperelastic constitutive model is provided inTables 7–10. From these results the following observations can be made: (a) all methods converged for finite difference intervalh∈[0.15,10−15]; (b) The range of finite difference intervals where the quadratic convergence is obtained is found to depend on the order of the numerical approximation: SCDM –h∈[0.001,10−12], FCDM –h∈[0.01,10−12], SiCDM –h∈[0.05,10−12]and ECDM –h∈[0.1,10−12]. Thus, higher order methods lead to quadratic convergence even at large values of finite difference intervals; (c) irrespective of the order of the central difference method, quadratic convergence is not achieved for finite difference intervals smaller thanh=10−12and this can be attributed to the subtractive cancellation errors; (d) for a given central difference approximation, the computational time is relatively independent of the size of the finite difference interval when quadratic convergence is obtained.The computational algorithm for the numerically approximated Cauchy integral is provided in Fig. 11(b). Similar to the central difference methods, the second Piola–Kirchhoff stress tensor(S)is evaluated using the closed form expressions given in Table 6. Tangent moduli(ℂ)are evaluated using numerically approximated Cauchy integral (NACI). Two different types of NACI are used: (a) in the first type, an iterative NACI is used where the number of discretization intervals (N) are iteratively found to achieve quadratic convergence of the Euclidean norm of the residual for a prescribed contour radii (h); and (b) in the second type, NACI with fixed number of discretization intervals are used to facilitate the comparison with the corresponding higher order central difference methods. In this section the results for the first case are presented, and the results of second case are discussed in Section 5.3.The convergence results of the Euclidean norm of the residual for all the considered hyperelastic constitutive models and mesh densities are presented inTables 11 and 12 for contour radii in the range ofh=[0.5,10−15]. The load–displacement curves obtained by employing NACI for NeoHookean and Mooney–Rivlin material models for the two meshes considered in this study are presented in Fig. 12. From Tables 11 and 12, the following important observations can be made: (a) quadratic convergence of the Euclidean norm of the residual is obtained for contour radiih=[0.5,10−12]; (b) quadratic convergence is spoiled for contour radii smaller thanh<10−12due to the subtractive cancellation errors; and (c) forh∈[10−12,10−3]only three function evaluations(nf=3)are required, i.e. N=2, to evaluate NACI in order to obtain quadratic convergence, and this can be attributed to the fact that numerical integration of the contour integral can be done with the least number of discretization intervals when the contour radius is relatively small.Quadratic convergence of the Euclidean norm of residual may not imply that the tangent moduli obtained using NACI are accurate. It was shown in the past that quadratic convergence can be obtained even by employing approximate yet numerically close tangent moduli [6]. For this reason, it is important to verify the quality of the tangent moduli obtained using NACI. This verification is conducted for all the models and the results are presented inTable 13. The tangent moduli presented in Table 13 are obtained from the last converged step. From Table 13, it is clear that NACI is able to produce analytical quality tangent moduli which contributed towards the quadratic convergence of the Euclidean norm of the residual.In essence, the iterative NACI is relatively insensitive to the size of the contour radius (h) unlike the central difference methods. However, iterative NACI suffers from subtractive cancellation errors similar to central difference methods for very smallh. Also, for a largerhmore number of function evaluations is required to numerically evaluate the tangent so that the quadratic convergence is preserved, and as a result the number of stress evaluations and strain perturbations escalates leading to high computational costs as highlighted in Tables 11 and 12. Nevertheless, the presented NACI method is robust as it can work for a wide range of contour radii.Computational performance of various methods used to evaluate the tangent moduli is compared, and to this end, the time taken to conduct the finite element analyses of the Cook׳s membrane for coarse and dense meshes for various constitutive models are provided inTables 14 and 15, respectively. The size of the contour radiush=10−8and finite difference interval ofh=10−8is chosen for the analyses so that quadratic convergence of the Euclidean norm is ensured with minimum computational cost for a given numerical method. Time taken for analyses when analytical expressions of the tangent modulus are used is also reported. The performance of various numerical methods is assessed by finding the ratio of the computational time expended by a given method to the time expended when analytical tangent modulus is used. These ratios along with the computational overheads for all the numerical methods are presented inTable 16. Among all the numerical methods considered the 3 and 4 term NACI have the least computational overhead of 52.5% followed by 6-term NACI (81%), TCDM (81.5%), 8-terms NACI (107.5%), FCDM (172.5%), and ECDM (356%). Among the considered numerical methods, 4-term NACI and FCDM, 6-term NACI and SiCDM, 8-term NACI and ECDM require 4-, 6- and 8-terms, respectively, for their numerical evaluation. On the other hand, the 3-term NACI and TCDM require 3- and 2-terms, respectively. Although, TCDM has the minimum number of terms (N=2) involved in the evaluation of a tangent modulus, 3- and 4-term NACI is found to have the least computational overhead. Indeed, when the computational times of the NACI and CDM with equal number of terms are compared with each other (Table 17), the NACI method is found to be computationally efficient for the constitutive models considered.Two advantages can be exploited by evaluating the derivatives using NACI: (a) in NACI it is very easy to iteratively change the number of discretization intervals by increasing the terms and thereby reducing the error (Eq. (15)) to achieve numerically accurate derivatives; and (b) it is also convenient to obtain higher order derivatives without changing the derivative subroutine. In the case of central difference methods, however, the weights (multiplicative constants see Eqs. (58)–(61)) have to be evaluated every time the number of terms for the numerical evaluation of the derivative is changed. In addition, these weights also should be changed when higher order derivatives are numerically evaluated. Although these weights are well documented for the first and second derivatives, they have to be evaluated for higher order derivatives. This makes the central difference methods a lesser preferable candidate when higher order derivatives are required. Therefore, NACI is a programming friendly technique and can be used to obtain numerically accurate higher order derivatives using modular subroutines.In this manuscript the numerically approximated Cauchy integral method is proposed for evaluation of numerical derivatives. Performance of NACI is illustrated for scalar functions by evaluating numerically accurate first and higher order derivatives. Furthermore, a perturbation scheme is proposed and used to evaluate the numerically accurate derivatives of scalar valued tensor functions. Finally, NACI is used to evaluate tangent moduli for five hyperelastic constitutive models and it is shown that quadratic convergence of the Euclidean of the residual is obtained for a wide range of contour radii when NACI is used to evaluate tangent moduli. Following are the important conclusions of this study:(a)Numerically approximated Cauchy integral (NACI) provides the flexibility to control the error when numerically evaluating the derivatives by iteratively changing the number of terms used in the integration procedure.Numerically approximated Cauchy integral (NACI) can be used to obtain higher order derivatives without any changes to the derivative subroutine. This leads to programming friendly and modular code development process.In constitutive modeling applications, a single NACI subroutine can be used to evaluate the tangent moduli for different material models. This simplifies the implementation of new constitutive models in to finite element programs. Furthermore, quadratic convergence of the Euclidean norm of the residual can be obtained for a wide range of contour radii when NACI is employed for the evaluation of tangent modulus.By adjusting the size of contour radius (h) and the number of discretization intervals (N), the computational efficiency of NACI can be optimized. Such an optimized NACI is proved to be computationally efficient when compared to the conventional central difference methods.In this study, NACI is used for finite strain hyperelastic constitutive models. This method can also be extended for plasticity models and continuum damage models. The authors shall pursue these important applications of NACI in their future research efforts.

@&#CONCLUSIONS@&#
