@&#MAIN-TITLE@&#
Skill-based framework for optimal software project selection and resource allocation

@&#HIGHLIGHTS@&#
We propose a conceptual skill-based framework to capture resource allocation in software development projects.We build a corresponding mathematical model for resource allocation and project selection at the level of software skills.We develop a meta-heuristic to solve this problem which overcomes the computational complexity of the proposed formulation.The proposed framework and the corresponding model are applied to the case of Lebanon.

@&#KEYPHRASES@&#
Resource allocation,Project selection,Software development,Software skills,Meta-heuristic,

@&#ABSTRACT@&#
This paper presents a conceptual framework and a mathematical formulation for software resource allocation and project selection at the level of software skills. First, we introduce a skill-based framework that considers universities, software companies, and potential projects of a country. Based on this framework, we formulate a linear integer program PMax which determines the selection of projects and the allocation of human resources that maximize profit for a certain company. We show that PMax is NP-complete. Therefore, we devise a meta-heuristic, called Tabu Select and Greedily Allocate (TSGA), to overcome the computational complexities. When compared to PMax running on CPLEX, TSGA performs 15 times faster with an accuracy of 98% on small to large size problems where CPLEX converges. On larger problems where CPLEX does not return an answer, TSGA computes a feasible solution in the order of minutes.For demonstration, the proposed skill-based framework and the corresponding mathematical model are applied to Lebanon by performing two surveys on the Lebanese software industry and academia. The case study shows that the proposed framework and mathematical model can be used in practice to improve project selection and resource allocation decisions in software companies.

@&#INTRODUCTION@&#
The project management literature generously addressed resource allocation in general (Brucker, Drexl, Mohring, Neumann, & Pesch, 1999; Herroelen & Leus, 2005; Herroelen, Reyck, & Demeulemeester, 1998; Oezdamar & Ulusoy, 1995) and project portfolio selection (Archer & Ghasemzadeh, 1999; Meade, 2002) as two separate problems. However, there is great room for suggesting models that solve the two interdependent problems simultaneously. In particular, the authors in Gutjahr, Katzensteiner, Reiter, Stummer, and Denk (2010), Yoshimuraa, Fujimia, Izuia, and Nishiwakia (2006) present models to solve the two problems one after the other assuming that the profitability of a chosen portfolio of projects is totally independent from the resources allocated on each one of them. We argue that in reality, the cost of the development of a project highly depends on the human workforce that works on it (Acuna, Juristo, & Moreno, 2006).Additionally, software specific studies concerning project selection and resource allocation are still scarce (Otero, Centeno, Ruiz-Torres, & Otero, 2009). The problem of resource allocation in software project development is a unique challenge due to specific characteristics of software projects and software developers (Kan, 1994). The work of Acuna et al. (2006) finds that human resource allocation on software projects is generally left to the judgment of experts such as software team leaders and project managers. Although judgments are educated guesses that work in practice, however, managers lack mathematical tools to develop and assess project schedules and associated human resource allocation (Padberg, 2001). In particular, Plekhanova (1999) and Otero et al. (2009) observe that project managers map each software task to one skill when allocating human resources to tasks. Otero suggests that tasks should be mapped to several skills (Otero et al., 2009). Ngo-The maps a task into a set of skills and optimally allocates resources in release planning (Ngo-The & Ruhe, 2009).In this paper, we propose a skill-based framework (SBF) that considers software projects, software companies and software related academia at the level of basic skills. That is, skills are the common thread that cuts across these three domains and are therefore at the center of our proposed framework. Educational processes, represented by universities, generate skills and form software development human resources that can be categorized into talent classes. Each talent class: S↦L is characterized as a map from skills S to a strength level L={none,weak,average,good,excellent}. We characterize software projects by collective strength levels of required skills. The required skills and their associated levels are based on expert estimations where experts are project managers and software team leaders. We denote by potential projects those projects that can be developed in a given country. The process of developing software requires skills. Companies in a given country select from a set of potential projects. Each company then allocates its human resources in the form of capita per talent class to develop the selected projects. The company does the selection and allocation with maximum profit as a target. Companies in turn enrich their human resources via (1) strengthening existing skills and (2) producing skills that are not covered in current curricula. We assume that skills produced during development work will eventually make it into curricula due to the interaction between the industry and the academia. We refine our skill set S to include the skills produced by the industry SIand assume none as the strength level for fresh graduates in such skills.Based on the above framework, we build an integer linear program to optimally select a portfolio of projects and allocate resources (i.e. talents) to them such that the allocated talents satisfy the skills required by the selected projects. PMax differs from previous project selection and resource allocation methods (Gutjahr et al., 2010; Yoshimuraa et al., 2006) in that it treats the resource allocation and project selection as a single problem and presents an integer linear program to solve it. PMax also provides a more realistic cost estimation formula as it considers a company to pay all its talents regardless of whether a talent is allocated or not. Additionally, PMax differs from existing models (Gutjahr et al., 2010; Otero et al., 2009; Yoshimuraa et al., 2006) in that it introduces the concept of critical skills. A critical skill j for a project p is a skill with a minimum level of expertise Θ[p][j], where at least one allocated talent must possess to satisfaction a strength in j⩾Θ[p][j], while other skills can be satisfied by strength levels of several talents.In this paper, we make several contributions to the software management and operations research literature.•We present SBF, a skill-based framework, to formalize the relationship between the software academia, the software industry of a given country and the potential projects at the level of skills. We formulate project selection and resource allocation as a mathematical program, PMax, which allows for critical skills and estimates cost more accurately.We introduce TSGA, a Tabu-based meta-heuristic, to overcome the computational complexity of PMax since PMax is shown to be NP-complete. We compare the performance of TSGA to CPLEX. TSGA performs 15 times faster than CPLEX and reaches an optimal solution 64% of the time. On average, the profit value obtained from TSGA is 98% of the optimal profit obtained by CPLEX.We conduct surveys covering the Lebanese software industry and academia to demonstrate how SBF can be implemented.

@&#CONCLUSIONS@&#
