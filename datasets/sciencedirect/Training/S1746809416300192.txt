@&#MAIN-TITLE@&#
A revised scheme for real time ECG Signal denoising based on recursive filtering

@&#HIGHLIGHTS@&#
A novel recursive scheme for filtering of ECG is developed.The scheme has boundary conditions that are used to remove the edge effects.The scheme was implemented in a software framework for mobile devices.Results with several denoising methods have been compared.

@&#KEYPHRASES@&#
Electrocardiogram,Real time signal denoising,Recursive filters,Rational polynomial approximation,Boundary conditions,

@&#ABSTRACT@&#
In many healthcare applications, artifacts mask or corrupt important features of Electrocardiogram (ECG) signals. In this paper we describe a revised scheme for ECG signal denoising based on a recursive filtering methodology. We suggest a suitable class of kernel functions in order to remove artifacts in the ECG signal, starting from noise frequencies in the Fourier domain. Our approach does not require high computational requirements and this feature offers the possibility of an implementation of the scheme directly on mobile computing devices. The proposed scheme allows local denoising and hence a real time visualization of the signal by means of a strategy based on boundary conditions. Experiments on real datasets have been carried out in order to test, in terms of computation and accuracy, the proposed algorithm. Finally, comparative results with other well-known denoising methods are shown.

@&#INTRODUCTION@&#
The Electrocardiogram (ECG) signal is one of the most important tools for the detection of cardiovascular diseases. It is a graphical representation of cardiac activity and it provides significant information about the functional conditions of the heart and the circulatory system. Due to the importance of the ECG signal and the related heart rate variability measurements (e.g. [1]) in the diagnosis of serious episodes, like myocardial ischemia or atrial fibrillation, the denoising signal process has become a very significant task in the medical and engineering communities [2]. Generally, the recorded signal could be corrupted by various kinds of noise signal, as discussed in [3], namely artifacts, of which the most common are well highlighted in [4]. They include power line interference, electrode contact noise, motion artifacts, muscle contraction interference, baseline drift, and some instrumental noise generated by the electronic ECG monitoring device, all of which can corrupt the ECG and lead to a wrong diagnosis. Ref. [5] studied the effects of baseline drift and power line interference on the ability of the technique to detect the morphology of some signal quality features. Several methods have been applied to model and to denoise the ECG signal, such as band pass filters (e.g. [6]), adaptive filters (e.g. [7]), the ensemble averaging technique (e.g. [8]), extended Kalman filters (e.g. [9]), Wiener filtering (e.g. [10]), Empirical Mode Decomposition (e.g. [11]), and wavelet denoising (e.g. [12]). For other methods see [13]. Although some of these methods have demonstrated a good performance in terms of Signal to Noise Ratio (SNR), they can be sensitive to varying parameters. Moreover, in ECG filtering, a crucial problem is the preservation of the shape, which is achieved by several algorithms, for example by non-local means filtering, as in [14]. These methodologies belong to the off-line methods, where the electrical data are first recorded and then a denoising algorithm is applied to improve the quality of the acquired signal. This approach represents a strong limitation in several contexts, for example in healthcare systems that are undergoing a transformation, as documented in [15]. Moreover, when the ECG recordings are provided by wearable sensors, that transmit data to a mobile device using wired or wireless communication, it is necessary to display and to process healthcare and biomedical information in a real time scenario. For this applicative health care context, new approaches based on novel algorithms and smart software frameworks have been widely explored to improve electronic health care (e-health) services, especially for the acquisition and filtering of biomedical signals [16–18]. In real time signal processing, two new aspects are required: the computational efficiency of the algorithm and the ability to process a signal in a local way. This is especially true for wearable sensors that send only a few samples of the signal (usually equivalent to a quarter of a second) in a data packet format to a mobile device. Here the computing device should first process the actual part of the received signal and then switch in the next data packets. In this paper, starting from a methodology based on recursive filtering, applied successfully in another research field, such as by [19–24], we propose a revised numerical scheme for real time ECG denoising [25], with a low computational requirement, in terms of memory and time consumption. We are interested in the removal of base line drift, power line interference and, in general, of every noise in which the frequency spectrum wanders within a known and limited range. A first version of the scheme was presented in [26]. In this paper, we describe in detail the procedure to derive the filtering coefficients which depends on the frequency range of the considered noise. Moreover, we provide suitable boundary conditions that allow the scheme to realize the signal filtering in a local way and the visualization of the data in real time directly on the mobile device. The proposed approach is based on the analysis of the signal in the Fourier domain, but it does not require a direct application of the (Fast) Fourier Transform. This feature makes our algorithm suitable for direct implementation in mobile applications or wearable sensors without the use of any library for scientific computing. Finally, in this paper we compare the proposed algorithm with other known methods, especially in terms of quality measurements and computational aspects.The paper is organized as follows: in Section 2 we report some preliminary mathematical considerations; Section 3 is devoted to the derivation of the numerical scheme; in Section 4 we provide a scheme implementation for real time denoising and compare it with other known algorithms for denoising and, finally, we draw some conclusions in Section 5.In this section, we present the preliminary mathematical considerations in order to derive a numerical scheme for the denoising of an ECG signal. Let s0 denote a real function such that:s0=s+ϵwith s the original signal and ϵ a noise function. As in [27] the denoising process can be viewed as a convolution of s0 with a function h, Lebesgue integrable, i.e.:(1)sh(t)=h(x)⊗s0(x)=∫−∞+∞h(t−x)s0(x)dx,∀t∈ℝ.In this work, to determine a suitable convolution kernel h, we use the following mathematical tools (e.g. [28]):•the Fourier TransformFof a signal f:(2)F(ω)=F(f)(ω)=12π∫−∞+∞f(x)e−iωxdx,∀ω∈ℝ;the Fourier anti-TransformF−1of F:(3)f(t)=F−1(F)(t)=12π∫−∞+∞F(x)eitxdx,∀t∈ℝ;the convolution theorem:(4)F(h⊗f)=F(h)·F(F)=H·F;the Plancherel theorem:(5)∫−∞∞|f(x)|2dx=∫−∞∞|F(ω)|2dω.The main idea of this work is to find a convolution kernel h, to denoise s0, starting from its Fourier TransformH=F(h). Now, let us suppose that:Sh=F(sh),S0=F(s0),S=F(s)andE=F(ϵ).If we assume that the Fourier TransformH=F(h)of h is such that:(6)H·S=S,H·E=0,then, it can be easily proved, by exploiting the Fourier Transform, Convolution Theorem and Fourier anti-Transform, that:(7)sh=h⊗s0=F−1(H·S0)=F−1(H·S+H·E)=F−1(H·S)=s.Observing that if the original and noise signals, s and ϵ, have the property:(8)suppS∩suppE=∅then, it is sufficient to take the following function H, that satisfies the condition (6):(9)H(ω)=0∀ω∈suppE,1otherwise.Then, in these hypotheses, the original signal s can be completely restored by the convolution in (7). Nevertheless, a satisfying solution sh(an approximation of s) can be achieved also when the measure of the setsuppS∩suppEcan be considered quite small (e.g. [29]). However, the mathematical form of H in (9), with its discontinuities, prevents us from determining the numerical scheme. Therefore, for our purpose, as we will show in the next section, instead of H, we will use another functionH˜, a rational polynomial, which emulates the properties of H. In the next section we will adapt the standard methodology on recursive filtering, which is based on the Infinite Impulse Response (IIR) Gaussian recursive filter of [19,20,23,24,30], with the aim of deriving an efficient numerical scheme for the denoising of the ECG signal in real time.In this section we derive a numerical scheme for ECG denosing. In the first discussion, we suggest a suitable kernel function adopted to select some frequencies in the Fourier domain. In the second subsection, we use the recursive filtering theory to obtain an algorithm for the denoising of an ECG signal. In this work, we have supposed the set of the frequencies (suppE) of the noise ϵ to be included in an interval [μ−σ, μ+σ] with μ and σ>0.The main idea, here, is to determine a suitable kernel functionH˜fixing its behavior in the Fourier domain. The step function H (see the continuous line in Fig. 1) is the ideal function to cut off the nonzero values on the noise frequencies and keep unchanged the nonzero values on the original signal's frequencies. However, due to its discontinuities, here it is used a function with a Gaussian like shape (see [19,30]) as for example the function G (the dash-dot line in Fig. 1):(10)G(ω)=1−e−(ω−μ)22σ2,∀ω∈ℝ.In particular, we have used the functionH˜(see the dashed line in Fig. 1) defined as:(11)H˜(ω)=(ω−μ)22σ2+(ω−μ)2,∀ω∈ℝ.The function in (11) is a rational approximation of the function G, obtained by taking the first two terms in the Taylor expansion of the following exponential function:(12)e(ω−μ)22σ2=∑i=0+∞1i!(ω−μ)22σ2i.The properties of the functionsH˜and G are given in the following proposition:Proposition 3.1For theH˜and G functions, the following properties hold:1.0≤G(ω),H˜(ω)<1,∀ω∈ℝ;H˜(μ)=G(μ)=0;limω→±∞H˜(ω)=limω→±∞G(ω)=1;H˜(ω)and G(ω) are symmetrical with respect to the axis ω=μ;H˜(μ±σ)=1/3;H˜(ω)=H˜l(ω)·H˜r(ω),∀ω∈ℝ, where we set:(13)H˜l(ω)=iω−iμiω+(2σ−iμ),H˜r(ω)=−iω+iμ−iω+(2σ+iμ).The choice of functionH˜in (11) can still remove the noisy ϵ, even if its frequency spectrum is wandering in the interval [μ−σ, μ+σ]. To proof this feature, now we give an upper bound of distance between shandsh˜in the 2 norm:(14)∥sh−sh˜∥2=∫−∞∞(sh(x)−sh˜(x))2dx(1/2),which only depends on the parameter σ.Proposition 3.2Let H be as in(9),H˜as in(11), sh=h⊗s0, withh=F−1(H)andsh˜=h˜⊗s0, withh˜=F−1(H˜). An upper bound of the distance between the signals shandsh˜is given by the following inequality:(15)∥sh−sh˜∥2<O(σ)∥s0∥2.ProofThe proof is shown in Appendix A.□The upper bound in (15) shows that, for small values of σ,sh˜can be viewed as a reliable approximation of sh, regardless of the choice of μ.Starting from [19,20,23,24,30] we reduce the effects of the additive noise function ϵ on the original signal s, whensuppE⊂[μ−σ,μ+σ]. As a preliminary remark, we observe that ifh˜=F−1(H˜), withH˜as in (11), then for the functionsh˜=h˜⊗s0it holds that:(16)sh˜=F−1(H˜·S0)=F−1(H˜l·H˜r··S0)=h˜l⊗(h˜r⊗s0),where the functionsh˜landh˜rare defined as:h˜l=F−1(H˜l)andh˜r=F−1(H˜r),withh˜landh˜ras in (13). Now we introduce the discrete signals:s→0=(s0[j])j∈ℤ,s→=(s[j])j∈ℤands→h˜=(sh˜[j])j∈ℤ,which are obtained from the continuous signals s0, s,sh˜considering only their values on a infinite grid with a stepsize τ. The discrete signals have the following form:(17)s0[j]=s0(jτ),s[j]=s(jτ),sh˜[j]=sh˜(jτ),j=−∞,…,+∞.Now, givens→0, we look for a fast method for computings→h˜givens→0. The scheme is obtained by means of the discretization of the continuous scheme:(18)Sh˜=H˜l·H˜r·S0,whereh˜landh˜rin (13) represent respectively cause and anti-cause stable differential equations for continuous signals that can be transformed into causal and anti-causal difference equations for discrete signals by means of standard techniques (e.g. [28]). The classic methods for discretization are bilinear transform, finite differences, zero-pole matching method and others (e.g. [28]).For our scheme we use the zero-pole matching method (ZPM); this approach has the advantage of transforming stable differential equations into stable difference equations. It works in the following way; given a polynomial such as:(19)p(s)=s+(a+ib),s∈ℂ;the zero-pole matching method exploits the following position:(20)z=esτ.Using Eq. (20), the zero of p(s) is transformed from a point lying in the s-plane into a point in the z-plane. This new point is later used to build the polynomial in the z variable, by posing:(21)z=e−(a+ib)τ⇔z−e−(a+ib)=0.Finally, by multiplying the right hand side of (21) to z−e−(a−ib), we obtain the following z polynomial:(22)p(z)=e−2aτ−2e−aτcos(bτ)z+z2.In the next proposition, starting from the zeros and poles (Table 1) of Hland Hrin (13), we obtain our scheme. for the computing ofs→h˜givens→0Theorem 3.3Lets→0,s→h˜be discrete signals with the sampling step τ. Then, the denoised discrete signals→h˜can be obtained from the noisy discrete signals→0by means of the following forward and backward numerical scheme:(23)ph˜[j]=b0s0[j]+b1s0[j−1]+b2s0[j−2]+a1ph˜[j−1]+a2ph˜[j−2],j=−∞,…,+∞,(24)sh˜[j]=b0ph˜[j]+b1ph˜[j+1]+b2ph˜[j+2]+a1sh˜[j+1]+a2sh˜[j+2],j=+∞,…,−∞,where the recursive scheme coefficients in(23) and (24)are:(25)b0=1,b1=−2cos(μτ),b2=1and(26)a1=2e−2στcos(μτ),a2=−e−2·2στ.ProofThe proof is shown in Appendix A. □Eqs. (23) and (24) are conveniently referred to as the advancing and backing filters, respectively, since in the former the index j must be treated as in increasing order while, in the latter, it must be treated in decreasing order (see [30]). The advancing processing in (23) derives from the Hrfunction in (13): setting −s=−iω and exploiting Eq. (20), the ZPM method and the theorem of delay [28], we derive a forward scheme for theph˜[j]values. In the same way, posing s=iω, we obtain from the Hlfunction in (13) the backing processing in (24). The forward and backward schemes in (23) and (24) are necessary to achieve the stability in the filtering algorithm (see [19,28]). More details on the derivation of the filtering scheme are given in the proof of Theorem 3.3 in Appendix A. Now, if we assume that the support of the input signals→0is in the grid {1, 2, …, n}, then Eqs. (23) and (24) can be implemented in an algorithm in which the index j increases from 1 to n, for the advancing filter, and decreases from n to 1, for the backing filter. This scheme needs to prime the advancing filter, by setting the valuesph˜[j], for j∈{0, −1, …, 1−N}, and the advancing filter, by setting the valuessh˜[j]for j∈{n+1, n+2, …, n+N}. For example, a common choice is to set to zero the requiredph˜[j]andsh˜[j]values, i.e.:(27)ph˜[−N+1]=ph˜[−N+2]=…=ph˜[0]=0;sh˜[n+1]=sh˜[n+2]=…=sh˜[n+N]=0.However, this assumption gives rise to a well-known edge effect, already noticed in [31], and discussed in detail in [21,22]. An outline of such a scheme, implementing (23), (24) and (27), is provided in Algorithm 1.Algorithm 1Filtering schemeInput:s0, μ, σOutput:sh˜1: setb0, b1, b2, a1, a2% scheme coefficients precomputation2: forj=1, 2, …, N% left zero end conditions3:ph˜[j−N]:=04: endfor5: forj=1, 2, …, n% advancing process6:ph˜[j]=b0s0[j]+b1s0[j−1]+b2s0[j−2]+a1ph˜[j−1]+a2ph˜[j−2]7: endfor8: forj=1, 2, …, N% right zero end conditions9:sh˜[n+j]:=010: endfor11: forj=n, …, 1 % backing process12:sh˜[j]=b0ph˜[j]+b1ph˜[j+1]+b2ph˜[j+2]+a1sh˜[j+1]+a2sh˜[j+2]13: endforIn this section, we discuss, some implementation details and performance results, in terms of the accuracy of the denoising and the efficiency, for the scheme presented in Theorem 3.3. In the first subsection we focus on the boundary conditions, that guarantee the local computation, in other words ensure the processing of the ECG data in real time. In the second subsection, we report the performance metrics.We have implemented a system framework for real time ECG denoising and visualization. In the denoising module of the system, for the pre-processing of the ECG data we can choose different denoising algorithms for the removal of the main artifacts on the ECGs such as power line interference, base line drift and other noises. In our system we have used as ECG device the Zephyr BioHarness BH3, an advanced physiological monitoring device in which the data are transmitted by means of Bluetooth technology. It is small in size and provides a medical-grade ECG, heart rate, breathing rate, and 3-axis accelerometery. The monitor can be used with the BioHarness strap, a lightweight elasticized component that incorporates Zephyr Smart Fabric ECG and breathing rate sensors. The heart rate (HR) data are captured through electrode sensors housed within the chest strap (i.e. detecting R wave forms) sampled at 250Hz and reported as beats per minute (brmin−1). Bluetooth-based data transmission allows the monitoring of physiological data by using any mobile device with Bluetooth technology, such as a laptop, phone or PDA. An example of the system framework is shown in Fig. 2.The numerical scheme, derived in Theorem 3.3, is the core of the software framework. All the denoising modules are obtained by Eqs. (23) and (24), setting suitably the range [μ−σ, μ+σ] of the noise frequencies to cut off. The scheme works directly on the computing devices that are for example smartphones or tablets. In real applications, this is applied to a signals→0with a bounded domain and not to a signal with an unbounded domain, as stated in Theorem 3.3. The proposed algorithm belongs to the family of recursive filters, that suffer from the transition between the forward and the backward procedures as is well-known in recursive filter theory (see [31]). In fact, the forward and backward processes only give the correct result when the full double recursion is run without any truncation, i.e. when we process signals with an infinite size. Ref. [22] studied in depth the effects of these errors on the Gaussian convolution of a generic signal, with compact support, by means of our recursive filter. In particular, the authors proposed a way of minimizing the effects of truncation on the solution, extending in a smart way the domain of the signal with respect to the number of iterations of the filter. Then, in the case of signals with a compact support, after the forward procedure (23), we need optimal initial conditions for the backward procedure in (24). An incorrect truncation can produce significant amplitude and distortion for all points close to the boundaries also called edge effects. This problem prevents our scheme the filtering and visualization of the denoised signal, in real time, during a long ECG recording. In Fig. 3, we show the results of the software framework, based on our scheme without boundary conditions, which acquires and filters an ECG signal (with a sampling frequency of 250Hz) each 0.25s. Fig. 3shows that the recursive scheme, without turning conditions, can produce distortions on the signal (marked in yellow in the figure), often localized around the connection points between two consecutive acquired portions of the signal.Here, we provide a methodology that explains how to switch from the forward procedure in (23) to the backward procedure in (24) removing the distortions (as shown in Fig. 3) caused by the truncation errors. It is based on the works of [32,31,22]. We adapt the methodology on boundary conditions to our case, in order to provide a means for the real time computation and visualization of the denoised signals→h. To achieve this aim, let s0[j], j=1, …, n a part of the signal (supposed with infinite size) as shown in Fig. 4. The aim is to obtain the denoised signalsh˜[j],from s0[j], ∀j=1, …, n. In order to apply Eqs. (23) and (24) determined for infinite signals, first, the right border ofs→0subdomain is virtually extended by adding infinite points, called ghost points, as shown in Fig. 5. Once the grid is ideally extended, later we complete the right hand side ofs→0on interval [n, n+eg] (with eg an arbitrary number of points) by means of a polynomial which sets to 0 the signal, as also shown in Fig. 5. In our implementation we have chosen a third degree Hermite polynomial q but it is possible to choose every function that goes to a zero value. The constraints on the Hermite polynomial q are the following:(28)ifs0[n]−s0[n−1]τ≥0then⇒q[1]=s0[n]q′[1]=0andq[eg]=0q′[eg]=0otherwise,(29)ifs0[n]−s0[n−1]τ<0then⇒q[1]=s0[n]q′[1]=s0[n]−s0[n−1]τandq[eg]=0q′[eg]=0.Next, we consider the new signal, still indicated with s0[j], j=1, …, +∞, defined as:(30)s0[j]=s0[j]=s0[j],∀j=1,…,n,s0[j]=q[j−n],∀j=n+1,…,n+eg,s0[j]=0,∀j=n+eg+1,…,+∞,that extends the previous signal to infinity.Using these new assumptions and a matrix formulation of the forward procedure (23), the following holds:(31)ph˜[j+1]ph˜[j]=Aph˜[j]ph˜[j−1],withA=a1a210,∀j≥n+eg+2.More generally, by means of the formulation in (31), it is easy to proof that:(32)ph˜[j+k]ph˜[j+k−1]=Akph˜[j]ph˜[j−1]∀j≥n+eg+2,∀k∈ℕ.Similarly, placed withU=1000and employing a matrix notation for the backward procedure in (24), the following identity holds:(33)sh˜[j]sh˜[j+1]=b0Uph˜[j]ph˜[j−1]+b1UAph˜[j]ph˜[j−1]+b2UA2ph˜[j]ph˜[j−1]+Ash˜[j+1]sh˜[j+2],∀j≥n+eg+2.Placing withC=U(b0I+b1A+b2A2)andI=1001then (33) becomes:(34)sh˜[j]sh˜[j+1]=Cph˜[j]ph˜[j−1]+Ash˜[j+1]sh˜[j+2],∀j≥n+eg+2from which, for K steps and ∀j≥n+eg+2, we obtain the following statement:(35)sh˜[j]sh˜[j+1]=∑k=0K−1AkCAkph˜[j]ph˜[j−1]+AKsh˜[j+K]sh˜[j+K+1].The convergence of the sequence Ak, for k→+∞ is related to the spectral ray ρ(A) of the matrix A, as stated by Gelfand's formula. It is easy to prove that ρ(A)<1 by means of the a1 and a2 values determined in Theorem 3.3. Then we obtain that:(36)ρ(A)=e−2στ<1⇒limK→+∞AK=0.Then,s→hbeing limited, the equation in (35), for K→+∞, becomes:(37)sh˜[j]sh˜[j+1]=∑k=0∞AkCAkph˜[j]ph˜[j−1],∀j≥n+eg+2.Placed with:(38)X=x1,1x1,2x2,1x2,2=∑k=0∞AkCAk,if it is possible to determine the unknowns xj,k, j, k=1, 2, that obviously depend on the filter coefficients b0, b1, b2, a1 and a2, then we obtain the initial conditions for the backward process and the problem of the incorrect truncation is eliminated. The matrix X can be developed as:(39)X=C+A∑k=0∞AkCAkAand by the statements (38) and (39), X results as the unique solution of the matrix equation:(40)X−AXA=C.The statement in (40) is equivalent to:(41)A−1X−XA=E,withA−1=011a2−a1a2andE=A−1C.The matrix equation in (41) can be arranged as the following 4×4 linear system:(42)a1110a20011a2a1a2−a1a20101a2a2−a1a2x1,1x1,2x2,1x2,2=e1,1e1,2e2,1e2,2from which we draw the following solution:(43)x1,1x1,2x2,1x2,2=a1110a20011a2a1a2−a1a20101a2a2−a1a2−1e1,1e1,2e2,1e2,2.The statement in (43) returns the explicit formulation of the xj,k, j, k=1, 2 that allows us to obtain suitable boundary conditions for the backward procedure (24). In real applications the one-dimensional grid is extended by adding a few ghost points, typically the 15% of the signal's size n is chosen for the parameter eg. After the application of the filter the ghost points are removed. In Fig. 6, we report the results of the scheme with boundary conditions that remove the distortion effects on the ECG signal of Fig. 3. Remember that these errors were caused by the wrong turning conditions in the problem of the real time processing introduced before. Using Eqs. (23), (24), (37) and (43), we report in Algorithm 2 the numerical scheme to filter the ECG signals in a local way, with the boundary conditions, to avoid the edge effects. The implementation of Algorithm 2 in our software framework allows us now to realize the real time filtering and visualization of the denoised signal by means of the recursive filtering scheme.In this section, we describe the testing of the scheme, for the removal of baseline drift and power line interference from a noisy ECG, in terms of accuracy and efficiency.Algorithm 2Filtering scheme+boundary conditionsInput:s0, μ, σOutput:sh˜1: Computeb0, b1, b2, a1, a2 by means of formulas (25) and (26)   % coefficients precomputation2: Computex1,1, x1,2, x2,1, x2,2 by means of formula (43)   % boundary coefficients precomputation3: forj=1, 2, …, N% left zero end conditions4:ph˜[j−N]:=05: endfor6: forj=1, 2, …, n+eg+2 % advancing process7:ph˜[j]=b0s0[j]+b1s0[j−1]+b2s0[j−2]+a1ph˜[j−1]+a2ph˜[j−2]8: endfor9:sh˜[n+eg+2]:=x2,1ph˜[n+eg+1]+x2,2ph˜[n+eg]10:sh˜[n+eg+1]:=x1,1ph˜[n+eg+1]+x1,2ph˜[n+eg]11: endfor12: forj=n+eg, …, 1 % backing process13:sh˜[j]=b0ph˜[j]+b1ph˜[j+1]+b2ph˜[j+2]+a1sh˜[j+1]+a2sh˜[j+2]14: endforIn our experiments, we used data from the Physionet Long-Term ST Database [34]. The Long-Term ST Database contains 86 lengthy ECG recordings of 80 human subjects, chosen to exhibit a variety of events of ST segment changes, including ischemic ST episodes, axis-related non-ischemic ST episodes, episodes of slow ST level drift, and episodes containing mixtures of these phenomena. The database was created to support the development and evaluation of algorithms capable of accurately differentiating ischemic and non-ischemic ST events, and to enable basic research into mechanisms and dynamics of myocardial ischemia. Hence, a pre-processing phase for the removal of the additional artifacts on the ECGs is necessary, in order to enable these algorithms to realize an efficient detection of physiological and pathological events.The ECG signals used in this work for our experiments last 3600s and are: s20011, s20021, s20031, s20041, s20051, s20061, s20071, s20081, s20091 and 20101. These recordings were sampled at 250Hz using 11-bit A/D converters. First, we processed the Physionet recordings (converted to millivolts) with only the synthetic baseline wander noise and then with the baseline wander noise and the power line interference added. We set the baseline wander with a frequency varying from 0.1 to 0.3Hz and an amplitude varying from 0 to 2500μV and the power line interference with a frequency varying from 49 to 51Hz and an amplitude varying from 0 to 500μV. In particular, in our first tests we compared, in terms of accuracy measurement, the results of the proposed scheme (RF) for the removal of the baseline wander. A very important feature here is that in order to test the RF with the boundary conditions, also for the real time denoising, we processed the whole ECG signal partitioning it in 14.400 parts of 0.25s. We proceeded to compare the accuracy results of the RF, only for the removal of the baseline, to those of methods that exploit the FFT (BPF), including those of a first order zero-phase lowpass filter (LPF) (e.g. [28,6]), of a single stage of median filtering (SMEDF), of a double stage of median filtering (DMEDF) [35,8,36], of a double stage of moving average filtering (DMEAF) [37] and of the Kalman filter (KF) [9].Lets→be the true signal s20071m (Fig. 8) ands→0the noisy signal (Fig. 9) obtained from s by adding synthetic baseline drift, as described above. We report in Fig. 10the deinoised signals obtained by the RF filter with μ=0.25Hz and σ=0.9Hz. In all figures, the signals were normalized for a better visualization. The first qualitative impression on the denoising and shape preserving is that RF reconstructs quite successfully the signals→also in a part of the ECG where there is a pathological event (the red zone in Fig. 10).As in [38,39], we quantify the denoising performance in terms of the Signal-to-Noise ratio (SNR) (in decibels):(44)SNR=10log10∑i=1n(s0[i]−s[i])2∑i=1n(sf[i]−s[i])2.In (44),s→fis one of the denoised signals obtained by means of the filters used and n is the length ofs→,s→0ands→f. Here we highlight that we have assumed the Physionet signalss→to be the actual signals; however, these signals also contain noise, which is neglected by the metric chosen.In Table 2, we report the SNR measures of the ECGs chosen in the paper, varying the filters considered.First of all, we can observe from Table 2, that the most accurate filter is, in any case, BPF (based on the FFT method), with in second position RF and in third position the DMEAF. We highlight that the tests on the accuracy of the RF were performed using the boundary conditions derived above in order to allow the real time processing.As a second step, we added to the considered ECG recordings a combination of synthetic baseline drift and synthetic power line interference as described before. This time we compared the accuracy results of RF to those of a method that again exploits the FFT method (BPF), of zero-phase low pass and high pass filters (Z(L/H)PF) (e.g. [28,6]) belonging to the group of Finite Impulsive Response filters (e.g. [13]), of the Wiener filter (WF) (e.g. [10]) and of a filter based on wavelet decomposition (WDF) (e.g. [12]). In Fig. 11, we report the noisy signal, obtained bys→, adding synthetic baseline drift and power line interference, as described above. In Fig. 12, we show the denoised signal obtained by means of RF applied two times, the first time with μ=0.25Hz and σ=0.9Hz for the removal of the baseline wander and the second time with μ=50Hz and σ=15Hz for the removal of the power line interference. In Table 3, we give the respective SNR measurements for the considered filters.Once again, we recall that for RF the time domain was divided into subdomains and boundary conditions were applied. In Tables 2 and 3 we show that the accuracy of our scheme, in terms of SNR measurements, is comparable with that of the other filters and is the best in some cases. To emphasize the contribution of this work, in relation to the computational cost of the new algorithm, we show respectively, in Figs. 13 and 14, the average results of the first and second experiment, in terms of execution time and memory usage, of RF and of other examined filters, for the denoising of ECG s20071 (size n=900 000). The experiments were carried out using an Asus CPU Intel(R) Core(TM) i7-4510U CPU 2.00GHZ −2.60GHZ, RAM 6GB. Figs. 13 and 14 show that RF and BPF have the lowest time consumption and use the smallest amount of memory.Taking into consideration the SNR measurements in Tables 2 and 3 and the computational cost tests in Figs. 13 and 14; RF has the possibility of an easy implementation also on architectures with a limited capacity in terms of computing and memory, such as mobile devices.Finally, from a medical point of view, the shape parameters preserving of a filter is a very important issue. To ensure that our numerical scheme had this feature, we used KubiosHRV, a software for heart rate variability (HRV) computing. (for an excellent tutorial see [40]). For all ECGs tested from Physionet database, we checked that: after the application of RF on the synthetic noisy signals, the peak to peak distance (RR) and the heart rate (HR) of the denoised signals were equal to the original signals. In Fig. 15we report the histograms of the main ECG (s20071m) parameters: the RR and HR of the noisy signal s0, the actual signal s and the denoised signalsh˜obtained by means of KubiosHRV. We can observe in Fig. 15 that starting from the noisy signals→0, after the application of the filter, all the biomedical parameters of the actual signals→and the denoised signals→h˜are preserved.

@&#CONCLUSIONS@&#
In this paper, we have described the implementation of an algorithm (RF) for ECG Signal processing applicable in the context of real-time health monitoring, where signal processing efficiency is strictly demanded.Numerical experiments on some ECGs from the Physionet database have demonstrated that our RF can significantly reduce the total computational cost of the denoising for some kinds of noise such as baseline wander and powerline interference, compared to other efficient filters, while maintaining the same level of accuracy and using only a few code lines.In the work, we have provided the theoretical development of the new algorithm, based on the studies of [19,20,30], where the authors formulated their scheme in the context of signal processing and other research fields to eliminate high frequency noise. We have adapted this for ECG signal denoising, providing a description of the process to obtain the RF coefficients for the main artifacts of ECG recordings. In addition, we have also provided the boundary conditions for local denoising that allow the visualization of the denoised signal in real time.RF is fast and accurate as shown by the numerical experiments. For those reason, in general, it is possible to implement RF also on architectures with a limited capacity in terms of computing and memory, for example mobile devices.