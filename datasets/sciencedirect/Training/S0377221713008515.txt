@&#MAIN-TITLE@&#
Robust multiobjective optimization & applications in portfolio optimization

@&#HIGHLIGHTS@&#
Multiobjective optimization problems with uncertainty can easily be robustified.The concept of the robust Pareto front is introduced.Applications to Markowitz portfolio optimization are described in detail.

@&#KEYPHRASES@&#
Robustification,Uncertainty,Markowitz,Multiobjective,

@&#ABSTRACT@&#
Motivated by Markowitz portfolio optimization problems under uncertainty in the problem data, we consider general convex parametric multiobjective optimization problems under data uncertainty. For the first time, this uncertainty is treated by a robust multiobjective formulation in the gist of Ben-Tal and Nemirovski. For this novel formulation, we investigate its relationship to the original multiobjective formulation as well as to its scalarizations. Further, we provide a characterization of the location of the robust Pareto frontier with respect to the corresponding original Pareto frontier and show that standard techniques from multiobjective optimization can be employed to characterize this robust efficient frontier. We illustrate our results based on a standard mean–variance problem.Prompted by the well-known strong data dependency of mean–variance optimization, we investigate how to treat multiobjective optimization problems with uncertain parameters. The framework of multiobjective optimization, in which several conflicting objectives have to be minimized simultaneously, can be seen as the natural setting for portfolio optimization problems, as such problems invariably have to deal with the conflicting notions of revenue and risk. However, and equally naturally, these problems also have to deal with uncertainty: problem data (like expected future return and covariances of random variables) are not known precisely, and only estimates are available. We are thus facing multiobjective optimization problems with uncertain parameters.In this paper, we want to follow the idea of the robust counterpart approach where an entire set of possible parameter realizations – called uncertainty set – is used for the optimization, but no assumptions about the distribution of the unknown parameters is needed, in contrast to many other robustification approaches. In the context of portfolio optimization, several authors have considered instances varying from theoretical to practical settings, amongst others Goldfarb and Iyengar (2003), Tütüncü and Koenig (2004), Ceria and Stubbs (2006), Meucci (2005), Lutgens (2004) or Schöttle and Werner (2006). Most of these approaches have in common that the uncertainty sets are chosen based on statistical reasoning, but other approaches are followed as well. All these approaches are based on just one specific choice of the risk-aversion parameter, i.e. only robustification of a particular instance of risk-return trade-off is considered.In contrast to these approaches, we propose a different and completely novel approach. Instead of following Markowitz (1952) and refering to some scalar portfolio optimization problem, we start with the multiobjective formulation of the mean–variance portfolio problem in the gist of Kuhn and Tucker (1951). Our main aim is then to robustify the complete efficient frontier to obtain a robust efficient frontier. In this context, our main contributions are as follows:•We introduce for the first time a robust counterpart to a multiobjective programming problem in the style of Ben-Tal and Nemirovski (1998, 1999).We investigate the relationship between the robust Pareto frontier and the original Pareto frontier and show that the robust frontier lies between the original nominal efficient frontier and some corresponding easy-to-determine upper bound.We demonstrate that robust efficient frontiers can be found by standard methods of robust and multiobjective programming under commonly made assumptions on the uncertainty.We pay particular attention to the case of portfolio optimization and show that the resulting robust multiobjective counterpart of the mean–variance portfolio optimization problem can be treated in a numerically efficient manner.We want to emphasize that, although motivated by portfolio optimization, our methodology is general enough to be applied to any convex parametric multiobjective optimization problem under data uncertainty. As such, it might be especially useful for optimization problems arising in engineering.The rest of the paper is organized as follows: Section 2 gives an overview of the necessary machinery from multiobjective optimization (Section 2.2), robust optimization (Section 2.3) and (robust) portfolio optimization (Section 2.4) that we need further on. Readers already familiar with these topics can easily skip this part of the presentation. Section 3 then contains the main results of this paper: we provide a proper notion of a robustified multiobjective problem and show that it leads, via scalarization, to families of robust single-objective problems that can also be derived in a different way. We also provide an alternative motivation for the robust counterpart and characterize the location of the robust efficient frontier with respect to the original frontier. Section 4 considers an illustrative numerical example from portfolio optimization that provides further insight into the proposed robust counterpart. Finally, we conclude in Section 5.The following notation is used throughout. We useR+={x∈R:x⩾0}andR++={x∈R:x>0}for the set of nonnegative resp.strictly positive real numbers.K(M)denotes the space of all non-empty, convex and compact subsets of a given non-empty and convex setM⊂Rn. Further,Bε(x)denotes the closedε-ball around some vectorx∈Rn,||x||denotes the 2-norm forx∈Rnand||Σ||denotes the Frobenius norm forΣ∈Sn, whereSnis the space of all symmetricn×nmatrices andS+nis the cone of positive semidefinite matrices.In this section we provide a brief introduction of the concepts in multiobjective optimization that are used in this paper. We follow closely the exposition given by Fliege and Vicente (2006).In multiobjective optimization, several functionsf1,…,fp:Rn⟶Rwithp>1have to be minimized simultaneously over a set of feasible points characterized by a (convex) compact setX∈K(Rn). The general problem can be conveniently stated in the form(M)efminf:Rn⟶Rps.t.x∈X,wheref=(f1,…,fp)⊤, and the exact meaning of “efmin” still has to be specified. We will do so in what follows.Remark 2.1Multicriteria optimization is the ideal setting to analyse portfolio optimization problems in the sense of Markowitz. If we work in a financial market with n risky assets andx∈Rnis a portfolio vector∑i=1nxi=1, we can simply setp=2, let, say,f1(x)=s(x)=x⊤Σxbe the risk function for some covariance matrixΣ∈S+nand letf2(x)=-m(x)=-μ⊤xbe the return function for some vector of expected returnsμ∈Rn.The reason for the formulation given here is that there is no standard total order for the image spaceRp. In contrast to this situation, in the classical single-objective case one always uses the standard total order defined byx<y:↔y-x∈R++(x,y∈R). Nevertheless, the idea of specifying an order by using a specific set defining it can be conveniently employed in multiobjective optimization, as the following discussion will show.If an arbitrary order relation≺onRpand a setA⊆Rpare given, the vectora∈Rpis called minimal or a minimizer w.r.t.≺in A ifa∈Aanda⪯bfor allb∈A. (Here,⪯is the reflexive hull of≺, i.e.,a⪯bif and only ifa=bora≺b.) Minimal points usually do not exist, one reason being that it is seldom the case that⪯is a total order. A weaker concept, the concept of domination is therefore needed. A point a dominates a point b, ifa≺banda≠bholds. A point a is nondominated in A, ifa∈Aand there does not exist a pointc∈Awithc≺aandc≠a. This approach raises the question about which of the many orders inRpone should choose when solving multicriteria problems.LetK⊆Rpbe an arbitrary set. DefineA≔f(X)and the order(2.1)x<Ky:↔y-x∈K.For such an order relation, define furthereffK(A)≔{a∈A|anondominated inAw.r.t<K},the set of all nondominated or efficient points of the set A. It is this notion of efficiency or optimality that we will use when we speak of solutions of(M), and the operatorefminin(M)is understood to search for such efficient points: the set of solutions of the problem(M)is the preimage of all nondominated points of the setA=f(X)with respect to the order<K.The next theorem is well known, see, e.g. Göpfert and Nehse (1990) or Fliege and Vicente (2006).Theorem 2.2LetK⊂Rpbe a set and let<Kbe the binary relation defined by K as in(2.1). Then, the following statements hold:1.If0∈Kthen<Kis reflexive.IfK+K⊆Kthen<Kis transitive.If K is a cone containing no lines, i.e.,K∩-K⊆{0}, then<Kis anti-symmetric. (In this case, the set K is also called pointed.)The order<Kis total if and only ifK∪-K=Rp.The set K is closed if and only if the relation<Kis “continuous at 0” in the following sense. For alla∈Rpand all sequences(a(i))i∈NinRpwithlimi→+∞a(i)=aand0<Ka(i)for alli∈Nit follows that0<Kaholds.Note thatK+K⊆Kholds if K is a convex cone. According to the theorem above, practicioners prefer to choose a closed convex cone K with0∈Kwhich contains no lines to define the partial order<K. (Note that the lexicographic order inRpis defined by a cone which is not closed.) Moreover, in our context the spaceRpwill be the image space of functions to be minimized. As a consequence, it is important for numerical reasons to have scale-invariance of the induced order. This means that ifx<Kyandλ>0thenλx<Kλy, a property which holds if and only if the set K is a cone.Using a fixed set K to define an order relation as in (2.1) has one additional advantage. For an arbitrary relation≺, the sets(2.2)C(a)≔{b∈Rp|a≺b}-aare constant if there exists a set K such that≺=<Kholds. Indeed, if≺=<KthenC(a)={b∈Rp|a≺b}={b∈Rp|a<Kb}={b∈Rp|b-a∈K}=a+K. This means that≺is translation-invariant, i.e.,x+z≺y+zfor all z if and only ifx≺y.To summarize the discussion above: we need to choose a convex coneK⊂Rpwith0∈Kin order to define an order<K. Other attributes of K that can be used to our advantage are closedness, pointedness, andK∪-K=Rpbut, as pointed out before, we cannot have all of these at the same time.Often, K is chosen to be the positive orthant,K=R+p, which gives exactly the standard definition of order in multicriteria optimization and especially in the specific setting of mean–variance optimization.We will now consider linear forms fromint(K∗), whereK∗is the dual cone ofKdefined byK∗={λ|∀a∈K:λ⊤a⩾0}. It turns out that in the case of convex cones and sets, these linear forms can be used to characterize almost all efficient points of a multiobjective optimization problem, as we will see below. More precisely, we need the linear forms from the quasi-interior ofK∗, i.e. from the setK+≔{λ∈Rp|∀a∈K⧹{0}:λ⊤a>0}.With this, it turns out that basically “all” efficient points can be found by minimizing functions of the formy↦λ⊤yover A, as the following theorem shows.Theorem 2.3LetK,A⊆Rpand definePK(A)≔⋃λ∈K+argmin{λ⊤a|a∈A}.Then, the following statements hold:1.Let K be a convex cone with0∈Kand{0}≠K≠Rp. ThenPK(A)⊆effK(A).Let K be a closed convex cone with0∈Ksuch that K contains no lines. Let A be closed and convex. TheneffK(A)⊆cl(PK(A)).LetK=R+pand A polyhedral. TheneffK(A)=PK(A).Different proofs can be found in various textbooks and original articles, see e.g. Göpfert and Nehse (1990, Section 2.22), Sawaragi, Nakayama, and Tanino (1985, p. 74), or Durier (1988). The first proof of part 2 is due to Arrow, Barankin, and Blackwell (1953). The setPK(A)is often called the set of properly efficient points and also allows for a different characterization, see Geoffrion (1968). Also, note that other, nonlinear K-monotone functions have only recently attracted some attention, mainly for numerical reasons. See Fliege (2004) for more details.We especially note that, under the assumptions listed in part 1 and 2 of the theorem above, we have that(2.3)PK(A)⊆effK(A)⊆cl(PK(A))holds. In other words, the setseffK(A)andPK(A)differ at most by some boundary points fromcl(PK(A))⧹PK(A)and are therefore, in a numerical setting with limited precision floating point arithmetic, indistinguishable from each other.Our motivation was to useA=f(X). So, in the convex case, by varyingλover “all” pointsλ∈K+we can generate “all” nondominant points inf(X)w.r.t.<Kand their corresponding preimages by solving the problems(P(λ))minλ⊤f(x)s.t.x∈X.Some boundary points (more precisely, a subset of measure zero) are left out in the convex case, but, as mentioned above, this is a detail rarely of importance in applications. Such a methodology, in which a multiobjective problem is replaced by several standard single-objective problems is called scalarization, and the scalarization technique described above is the classical weighted-sum scalarization henceforth denoted by WSS. Alternative numerical methods for treating multiobjective problems have only recently gained some attention, see Fliege and Svaiter (2000) and Fliege, Grana Drummond, and Svaiter (2009).We thus call the multiobjective problem(M)equivalent to the family of parameterized single-objective problemsP(λ)if and only if (2.3) holds. Theorem 2.3 gives sufficient conditions for this equivalence.Applying these results to the caseK=R+p, we readily arrive atK+=int(R+p)=(R++)pas the set of linear forms to consider, and as the scalar problems are equivalent under scaling, we see that only problems of the form(2.4)min∑i=1pλifi(x)s.t.x∈X.need to be considered forλ∈Rpwithλi>0(i=1,…,p)and∑i=1pλi=1.Remark 2.4Considering the case of portfolio optimization in the Markowitz formulation, we see that we have, as mentioned before in Remark 2.1,p=2, and it is also straightforward to see that all assumptions of item 1 and item 2 of Theorem 2.3 hold. As such, we arrive at (2.3), and we see that we can generate almost all efficient portfolios by solving all problems of the form(2.5)minλ1s(x)-λ2m(x)=λ1x⊤Σx-λ2μ⊤xs.t.x∈X.for allλ1,λ2>0withλ1+λ2=1. It is now also clear which boundary points we are missing from the set of efficient points when employing this strategy: the minimum-variance portfolio as well as the maximum return portfolios. But these can readily be generated by considering (2.5) also for the casesλ1=1,λ2=0andλ1=0,λ2=1.While solving problems of the formP(λ)appears to be an attractive method, especially as it is easy to interpret the meaning of the ”weight vectors”λ, the problemsP(λ)are often extremely sensitive to changes inλ. Thus, other methods have also been developed, among them the so-calledε-constraint scalarization, denoted by ECS in what follows. For this, consider an arbitraryk∈{1,…,p}, a parameter vectorε∈Rp, and define the scalar optimization problem(P(k,ε))minfk(x)s.t.fi(x)⩽εi∀i∈{1,…,p}⧹{k},x∈X.(Note that, formally, the problemP(k,∊)does not depend on the parameterεk.) The interconnections between solutions ofP(k,∊)and the given multiobjective problem are described in the following theorem.Theorem 2.5Letk∈{1,…,p}be fixed and defineS(k)≔⋃ε∈Rp{f(x)∈X|xsolvesP(k,∊)}as well asA≔f(X). LetK=R+p. Then, the following holds.1.We haveeffK(A)⊆S(k)⊆effint(K)(A)Letp=2. Then,(2.6)effK(A)=S(k).A proof can be found, e.g., in Eichfelder (2008, Corollaries 2.28 and 2.29).In a similar vein to the above, we can thus call the multiobjective problem(M)equivalent to the family of parameterized single-objective problemsP(k,ε), if and only if (2.6) holds. This is clearly the case for the considered problem of Markowitz portfolio optimization.Over the last decade the idea to deal with uncertainty in optimization by robust optimization has gained more and more interest among both academics and practitioners. An extensive and very recent introduction to the topic can be found in the book by Ben-Tal, El Ghaoui, and Nemirovski (2009) or in the review by Bertsimas, Brown, and Caramanis (2011), which contain large lists with references demonstrating the popularity and broadness of this approach. The robust optimization approach, especially the concept of the robust counterpart, was introduced by Ben-Tal, El Ghaoui and Nemirovski.1More precisely, the robust counterpart approach was independently introduced by Ben-Tal and Nemirovski (1998, 1999, 2002) and by El Ghaoui and Lebret (1997, 1998).1The robust counterpart takes into account uncertainty by replacing uncertain functions, i.e. functions depending on some uncertain parameter, by a conservative over-estimator, the worst-case value of the function on the whole uncertainty set. Thus, if applied to uncertain constraints, it guarantees feasibility under all (reasonable) realizations of the parameters, and if applied to the objective function, it guarantees a worst-case performance in all circumstances.To proceed, let us consider the following convex parametric optimization problem(Pu)minx∈Xf(x,u)s.t.g(x,u)⩽0,For the purpose of the subsequent results, a few mild assumptions on(Pu)are necessary which are in essence identical to the assumptions made in the seminal paper (Ben-Tal & Nemirovski, 1998) by Ben-Tal and Nemirovski:•Let us assume throughout thatX∈K(Rn)and letu∈U‾withU‾∈K(Rd). Here, u denotes the uncertain data within a global uncertainty set.For convenience, we assume that both the objectivef:X×U‾→Rand all constraintsg:X×U‾→Rmare continuously differentiable onX×U‾.To obtain a convex problem(Pu)let us assume that f and all constraintsg=(g1,…,gm)⊤are convex in x for allu∈U‾.In the above setting, it is assumed that X subsumes all certain constraints, whereas all uncertain constraints explicitly depending on u are handled by the inequalityg(x,u)⩽0. Of course, the whole setup can be generalized to conic problems by replacing the constraintg(x,u)⩽0with a convex conic constraintg(x,u)∈-K.Remark 2.6In general, it is reasonable to assume that uncertainty enters in a convex way, as it is expected that the worst uncertain parameter for a given point x lies on the boundary of U, which is the case for convex uncertainty. Taking into account a different notation for the constraints, convex uncertainty was assumed in Ben-Tal and Nemirovski (1998). Actually, in most practical applications, and especially in the situation of portfolio optimization described below, uncertainty even enters in a linear way. Nevertheless, we do not impose any assumption on the structure of uncertainty in the following.Analogously to the definition of(P∗)in Ben-Tal and Nemirovski (1998), let us define the robust counterpart of a family of optimization problems(Pu)u∈Ufor some uncertainty setU∈K(U‾)as(RPu)minx∈Xmaxu∈Uf(x,u)s.t.g(x,u)⩽0∀u∈U.To avoid pathological situations in the investigations later on, we require that there exists one pointx¯∈Xwhich is feasible for allu∈U‾:g(x¯,u)⩽0for allu∈U‾.The robust counterpart approach as such represents a worst-case approach by considering the worst-case value of the objective over the whole set U of possible parameter realizations. Further, the solution has to be feasible for all realizations of the uncertain parameter within the uncertainty set U. Thus, the feasibility of the solution is immunized against perturbations of the parameter – which is the obvious benefit of robustification.Definition 2.7Let us introduce the robust counterpartsfURCof the function f (also called robustified version of f) asfURC(x)≔maxu∈Uf(x,u)and similarly for g in a component-wise fashiongURC(x)≔maxu∈Ug1(x,u)…maxu∈Ugm(x,u)=g1,URC(x)…gm,URC(x)Then we immediately obtain for allx∈Xf(x,u)⩽fURC(x)∀u∈Uandg(x,u)⩽gURC(x)∀u∈Uwhere the second inequality is understood in the usual component-wise manner, i.e. using≤R+m. This means that the robustified versions are convex overestimators of the original functions and thus lead to more conservative, i.e. robust, solutions. Based on the robust counterparts of f and g, the robust counterpart of(Pu)becomesminx∈XfURC(x)s.t.gURC(x)⩽0.Remark 2.8Under the given assumptions, the robust counterpart remains a convex problem, which is especially important for its numerical solution. However, due to the max operator, the once smooth problem now might become non-smooth, but still sub-differentiable. Depending on the specific choice of the uncertainty set U and the structure how uncertainty enters the functions f and g, analytical expressions for the robustified versions are available for a large class of functions. This means that under suitable assumptions, the robust counterpart can be solved with similarly efficient methods as the original nominal problem, which is for instance the case for most practical examples of robust mean–variance optimization. If no analytical reformulation is available the robust counterpart can still be solved rather efficiently based on numerical methods from semi-infinite programming, cf. Werner (2008).It can be noted that in the special caseU={u}the robust counterpart coincides with the original problem instance(Pu). In most applications, a suitably chosen neighborhoodU(uˆ), e.g.U(uˆ)=Bε(uˆ), around some initially given nominal parameteruˆis used as uncertainty set. For more details on the choice of the uncertainty sets in the context of mean–variance optimization, let us refer to Section 2.4.Remark 2.9The robust counterpart is a rather elegant approach as it allows to express both design and (obviously) parameter uncertainties in a unified manner. For instance, design uncertainty, i.e. small deviations in the implementation of the optimal solution, can be considered via the uncertaintyg(x+u)⩽0∀u∈Bδ(0)instead of an original constraintg(x)⩽0. This then guarantees that the optimal solution remains feasible after slight perturbations.Our main motivation for the consideration of multiobjective problems under data uncertainty stems from mean–variance portfolio optimization as laid out by Markowitz (1952, 1959). The basic idea is that a portfolio is solely characterized by the two quantities risk (mostly measured in terms of the variance or volatility) and expected return. Since an investor is seeking for an allocation with low risk and high expected return, a trade-off between these two conflicting aims has to be made.Although the mean–variance framework is probably still the most popular approach for asset allocation, there is a large inherent risk in this framework, evolving from using possibly incorrect parameter values in the computation of the portfolio allocation. Markowitz (1952) already acknowledged that it is an open question how to derive the proper input parameters for the mean–variance model. Nowadays, this is often referred to as estimation risk in the academic literature, as usually the value that is finally used for the solution of the portfolio allocation problem is just an estimate (mostly based on a data sample) for the unknown true parameter. Due to this estimation risk, it is by now well-known that the concept of mean–variance efficient frontier has two major weaknesses, namely:•It has been demonstrated (see e.g. Barry, 1974; Jorion, 1992 or Best & Grauer, 1991) that the optimal solution of the mean–variance problem strongly depends on the particular values of the expected returns and their covariances and that especially the expected returns have a significant influence2This rather general statement is true in most practical situations, see e.g. Chopra and Ziemba (1993), but of course it depends – among others factors – on the particular choice of the risk aversion parameter. It further depends on the ratio of the number of assets to the size of the historical data sample, as shown recently by Kan and Zhou (2007).2on the optimal asset allocation.In addition, Michaud (1998) pointed out that especially the right end of the efficient frontier (the maximum return portfolio) promises unreliable high expected returns for somewhat too low volatilities. This is typically due to over-optimistic optimization based on error-prone estimates, resulting in large deviations between ex-ante and ex-post returns and volatilities.As estimation risk represents a popular and heavily researched topic, there are various approaches to account for estimation risk, especially in the context of portfolio optimization, see for example the early considerations by Jobson and Korkie (1981) or Best and Grauer (1991). To improve the allocation, many authors propose to use parameter estimators other than the classical maximum likelihood as these seem to be more robust and thus reduce the influence of estimation risk on the optimal portfolios. Bawa, Brown, and Klein (1979), Jobson and Korkie (1981) and also Efron and Morris (1975) use shrinkage or Stein-type estimators, while others (e.g., Jorion (1986)) suggest Bayesian estimators which combine a traditional parameter estimate with external prior information. More recently, robust estimators in more general terms are considered in Perret-Gentil and Victoria-Feser (2004), by Kempf and Memmel (2006) in the context of minimum variance portfolios and most recently by DeMiguel and Nogales (2009). A detailed comparison of the Bayesian approach to the popular Black–Litterman approach together with its robustification can be found in Schöttle, Werner, and Zagst (2010).Alternative types of optimization models that address the problem of estimation risk are stochastic programming and chance-constrained optimization which incorporate distributional assumptions and uncertainty about parameters into the optimization problem in terms of probabilistic constraint formulations, cf. Dupacova (1999) or Erdogan and Iyengar (2006) and the references therein, or sample-average multiobjective optimization, see Fliege and Xu (2011). Other approaches formulate the problem over a discrete set of alternatives (portfolios) and use tools from multicriteria decision aid (MCDA), see, e. g., Zopounidis and Doumpos (1999) and their review (Zopounidis & Doumpos, 1999).To formalize the approach, let us consider a financial market with n risky assets defined on a suitable probability space in a single period setting. Since it is well-known that the mean–variance approach is consistent with utility theory under the assumption of multivariate elliptical distributions, see e.g. Ingersoll (1987), we assume that the linear one period returnR∈Rnis multivariate elliptically distributed with parametersμ,Σand characteristic generatorψ, i.e.R∼E(μ,Σ,ψ).Further, we assume that R possesses a density and has finite second moments, and that2ψ′(0)=-1, which meansE[R]=μandcov[R]=-2ψ′(0)Σ=Σ.For more details on elliptical distributions, let us refer to Fang and Zhang (1990) or Fang, Kotz, and Ng (1990). Finally, let us assume that the set of feasible portfolios X is non-empty, convex and compact and that portfolio weights add up to one, i.e.X∈K({x∈Rn|x⊤1=1}).Thus, all additional constraints on the feasible portfolios which do not depend onμandΣare subsumed in X. Compactness of X is not a very strong restriction, since it is usually fulfilled in practical settings, for example if some short-selling constraints (i.e.x⩾0) are present.If asset returns R are distributed with meanμand covariance matrixΣ, the expected return of a portfoliox∈Xequalsm(x)≔E[R⊤x]=μ⊤xand the corresponding risk figure in the mean–variance framework is given by the variance of the portfolio returns(x)≔Var[R⊤x]=x⊤Σx. Translating the original work of Markowitz in our context, Markowitz suggests to solve the portfolio allocation problem, i.e. the computation of the whole efficient frontier of the following multiobjective optimization problem(MV)efminx∈Xs(x)-m(x)=efminx∈Xx⊤Σx-μ⊤xby the following procedure: start with the minimum variance portfolioxMV∗which is obtained as the unique solution ofminx∈Xs(x)=minx∈Xx⊤Σxand then increase the required expected return level from the expected return of the minimum variance portfolioμmin=mxMV∗=μ⊤xMV∗to the expected return of the maximum return portfolioxMR∗given byμmax=maxx∈Xm(x)=maxx∈Xμ⊤x,computing the corresponding efficient portfolios for each required expected return level. In modern language this means that Markowitz proposed to solve the multiobjective problem by theε-constraint method (see Section 2.2 for more details), i.e. he proposed to trace the efficient frontier by solving the following family of convex optimization problems for varying target levels of returnμT∈[μmin,μmax],(MVμT)minx∈Xx⊤Σxs.t.μT-μ⊤x⩽0,In Fig. 1we have illustrated such a resulting efficient frontier in the upper part together with the according portfolio allocationsx∗(μT)in the lower part, cf. Section 4 for more details, whereμTranges from 6.3% to 10%.As we have seen in Section 2.2, one could alternatively solve the following family of optimization problems:(MVλ)minx∈X(1-λ)x⊤Σx+λ(-μ⊤x)for0⩽λ⩽1. In Section 2.2 more details on the relationship between the original multiobjective problem, itsε-constraint formulation and its weighted-sum scalarization were already given.Remark 2.10In the specific situation outlined above the fractionλ(1-λ)has two nice and well-known interpretations:•It can be interpreted as the Lagrange multiplier to the corresponding constraint in problem (MVμT) for suitably chosen return levelμT.It can also be interpreted as the risk-aversion factor from the corresponding logarithmic utility function.As we have already pointed out, the parameteru≔(μ,Σ)∈Rn×S+nis not known exactly but subject to uncertainty. Hence some appropriate method to deal with the uncertainty in problem (MV) is critical. However, so far, uncertainty has not been considered directly in the formulation (MV), but only in its scalarized version (MVμT) and (MVλ). For this purpose we have to choose a joint uncertainty set U for the uncertain datau=(μ,Σ). For simplicity of the exposition that follows, we choose an ellipsoid around a nominal point(μˆ,Σ^)of sizeδ:(2.7)Uδ(μˆ,Σ^)≔{(μ,Σ)∈Rn×S+n:||μ-μˆ||+c||Σ-Σ^||⩽δ}.Of course, more sophisticated uncertainty sets can be chosen which lead to other robust counterparts. For a more detailed discussion on the choice of the uncertainty set let us refer to Schöttle and Werner (2006, 2009). Based on the joint uncertainty setUδ(μˆ,Σ^)we obtain the robust counterpart of (MVμT) as(RMVμT)minx∈Xmax(μ,Σ)∈Uδ(μˆ,Σ^)x⊤Σxs.t.max(μ,Σ)∈Uδ(μˆ,Σ^)μT-μ⊤x⩽0,and the robust counterpart of (MVλ) as(RMVλ)minx∈Xmax(μ,Σ)∈Uδ(μˆ,Σ^)(1-λ)x⊤Σx+λ(-μ⊤x)The problem family (RMVλ) has been considered in great detail in Schöttle and Werner (2009). There, it has been shown that the resulting robust frontier (i.e. the efficient portfolios) is actually a ‘shortened’ version of the original efficient frontier if the joint uncertainty set U is chosen in a statistically meaningful way. However, the family of robust problems (RMVμT) has not yet been investigated in this manner. Therefore, let us consider (RMVμT) more closely: First, it can be observed that now the required expected return levelμTrhas to be chosen from the intervalμminr,μmaxrwhere the robust minimum variance portfolioxRMV∗is obtained as the unique solution ofminx∈Xmax(μ,Σ)∈Uδ(μˆ,Σ^)x⊤Σxand taking into account signs (i.e. switching from max to min),μminr=min(μ,Σ)∈Uδ(μˆ,Σ^)μ⊤xRMV∗to the robust expected return of the robust maximum return portfolioμmaxr=maxx∈Xmin(μ,Σ)∈Uδ(μˆ,Σ^)μ⊤x.Second, using results on theε-constraint method of convex multiobjective problems, see Theorem 2.5, it can be easily shown that the family of problems (RMVμT) is equivalent to the multiobjective problem(GRMV)efminx∈Xmax(μ,Σ)∈Uδ(μˆ,Σ^)x⊤Σxmax(μ,Σ)∈Uδ(μˆ,Σ^)-μ⊤xwhich in turn is – by weighted-sum scalarization – equivalent to the family of problems(GRMVλ)minx∈X(1-λ)max(μ,Σ)∈Uδ(μˆ,Σ^)x⊤Σx+λmax(μ,Σ)∈Uδ(μˆ,Σ^)-μ⊤x.As the families of optimization problems (GRMVλ) and (RMVλ) do not have the same objective function, it cannot be expected that they possess the same solutions nor that they yield the same efficient frontier. Further, it is not clear yet if one formulation is advantageous over the other, and for what reasons.As we have already motivated, alongside the single-objective problem with uncertainty (Pu) we also need to consider a more general setting, where now the objective f becomes multi-dimensional, i.e.f:X×U‾→Rpwithp⩾2, and thus (Pu) becomes a multiobjective optimization problem. In this framework we are then looking for efficient points with respect to a partial ordering induced by an ordering coneK⊂Rp. In the following, we only consider the standard coneK=R+p.Instead of the single-objective problem(Pu)let us consider its multiobjective extension(MOPu)efminx∈Xf(x,u)s.t.g(x,u)⩽0,Subsequently, we denote the efficient frontier of (MOPu) aseffK(MOPu)and its corresponding preimage, i.e. the set of corresponding optimal solutions, aseffKx(MOPu). In the following, we usually do not distinguish between efficiency of pointsf(x)in the image space or the corresponding preimagex∈Xif it is clear from the context which space is referred to.Remark 3.1Markowitz called a portfolio allocationx∈Xefficient if its image under the following mappingf:x↦x⊤Σx-μ⊤xis efficient according to the above definition with respect to the partial ordering induced by the coneK=R+2.We have already discussed that there are two popular scalarization methods to calculate the whole efficient frontiereffK(MOPu):•theε-constraint scalarization method (ECS), andthe weighted-sum scalarization (WSS).As we have demonstrated in Theorems 2.3 and 2.5, both scalarization methods yield the same efficient frontier (modulo closure) as (MOPu) under reasonably mild assumptions. Unfortunately, this is no longer true in the robust multiobjective case:Example 3.2Let us consider the following two-dimensional linear multiobjective problem with linear uncertainty with feasible setX=[-1,1]and uncertainty setU=[-1,1]:efminx∈[-1,1]ux-uxLet us consider the two approaches as introduced above:1.Repeating the above steps, i.e. first scalarization via the ECS method, then robustification, and finally re-transformation back to a multiobjective formulation leads toefminx∈[-1,1]|x||x|asmaxu∈[-1,1]ux=|x|. The only optimal solution to this multiobjective problem is obviouslyx∗=0which yields the robust efficient frontier{(0,0)⊤}.However, if instead of ECS we use WSS and then robustify the scalarization obtained by the WSS method, we obtainminx∈[-1,1]maxu∈[-1,1]λux+(1-λ)(-ux)which is, as easy calculations show, the same asminx∈[-1,1]|x||2λ-1|.Forλ≠12onlyx∗=0is optimal, but forλ=12allx∈[-1,1]are actually optimal.Thus, both approaches lead, as proposed, to completely different solution sets, even in a very simple linear setting.In the previous section we have encountered a similar situation, where the transformation of the multiobjective portfolio optimization problem to a family of scalarized problems is not consistent with robustification, i.e. the operations robustification and scalarization do not commute.To understand the reason for this surprising behavior let us consider robustification and scalarization for (MOPu) in its general form. The ECS method allows to equivalently rewrite (MOPu) as(MOPu,∊)minx∈Xf1(x,u)s.t.fi(x,u)⩽εifori=2,…,p,gj(x,u)⩽0forj=1,…,m.with suitably chosenεi. Note that the same parameter u is used in allfiand in allgjin (MOPu,∊). Let us call (MOPu,∊) a traditional instance of a parametric optimization problem. The robust counterpart to this problem becomes(RMOPU,∊)minx∈Xmaxu∈Uf1(x,u)s.t.maxu∈Ufi(x,u)⩽εifori=2,…,p,maxu∈Ugj(x,u)⩽0forj=1,…,m.Now, let us consider what we like to call a generalized instance of the original problem, where now each functionfiand constraintgjgets its own copy of u:(GMOPu,∊)minx∈Xf1(x,u1)s.t.fi(x,ui)⩽εifori=2,…,p,gj(x,up+j)⩽0forj=1,…,m.withui∈U,i=1,…,p+m, or equivalently(u1,…,up+m)∈Up+m. Interestingly, the robust counterpart of (GMOPu,∊) is the same as the robust counterpart of (MOPu,∊) which is (RMOPU,∊). This means that after robustification we cannot distinguish any longer if allfishared the same parameter u or if they all had an individual parameteruifrom the same uncertainty set. (This observation was already made by Ben-Tal & Nemirovski (1998).) We have already seen in the previous example that due to this feature of robustification the operations scalarization and robustification cannot commute in general.Remark 3.3If we now equivalently re-transform the robust counterpart of the twoε-constraint families back to a multiobjective problem, we obtain in both cases:efminx∈XgURC(x)⩽0maxu∈Uf1(x,u)…maxu∈Ufp(x,u).This observation leads us to a canonical definition of a robust counterpart of a multiobjective problem:The multiobjective robust counterpart for the multiobjective problem with uncertainties (MOPu) is defined as(RMOPU)efminx∈XfURC(x)s.t.gURC(x)⩽0withfURC(x)≔maxu∈Uf1(x,u)…maxu∈Ufp(x,u)andgURC(x)≔maxu∈Ug1(x,u)…maxu∈Ugm(x,u)i.e. each component of the objective function and the constraints is replaced by its robust counterpart. The efficient frontier of (RMOPU) is referred to as robust efficient frontier and denoted byeffK(RMOPU)in the following.We note that forp=1the definition of the multiobjective robust counterpart coincides with the definition of the usual robust counterpart and hence provides a proper generalization of this concept to multiobjective optimization. Further, the robustification of the p-dimensional objective is now the very same as the robustification of the m-dimensional constraint.Remark 3.5Using this definition of a robust counterpart, we have already seen that if (MOPu) is given as a generalized instance, robustification andε-scalarization commute, i.e. it holds:ECS(robustification(MOPu))=robustification(ECS(MOPu))Let us now consider the case of WSS and see if the above result also holds in this case. The WSS of (RMOPU) is given byminx∈XgURC(x)⩽0∑i=1pλimaxu∈Ufi(x,u)with∑i=1pλi=1,λi>0. Obviously, this is equivalent to(RMOPU,λ)minx∈XgURC(x)⩽0max(u1,…,up)∈Up∑i=1pλifi(x,ui),but quite different to the robust counterpart of the weighted-sum scalarization of (MOPu):minx∈XgURC(x)⩽0maxu∈U∑i=1pλifi(x,u).We can summarize the above discussion in the following proposition:Proposition 3.6Consider the multiobjective problem with uncertainties(MOPu). Then we have the following.1.Robustifying(MOPu)and then applying ECS leads to the same family of scalar problems as applying ECS first to(MOPu)and the robustifying the result: ECS(robustification(MOPu))=robustification(ECS(MOPu)).Robustifying(MOPu)and then applying WSS leads to the same family of scalar problems as applying WSS first to(MOPu)and the robustifying the result: WSS(robustification(MOPu))=robustification(WSS(MOPu)).We can visualize the results of this proposition by the commutative diagramwhere arrows labeled with “R” denote a robustification operation and arrows labeled with “S” denote a scalarization. Of course, the actual type of scalar problems depends on the scalarization strategy in use.Remark 3.7The above proposition is the key observation to the numerical solution of (RMOPU). It states that (RMOPU) can be solved via the numerical solution of a family of ordinary scalar robust optimization problems. Therefore, it is open to a large variety of methods designed to solve robust counterpart problems, see e.g. Ben-Tal et al. (2009).For the following let us also introduce the notion of the robust image of the efficient frontiereffK(MOPu)as the image ofeffKx(MOPu)∩x∈X|gURC(x)⩽0underfURC, abbreviated aseffKRC(MOPu). We immediately note the following properties:•effKRC(MOPu)is in general not an efficient frontier itself.For the special case of the robust counterpart we haveeffK(RMOPU)=effKRC(RMOPU).On first sight it might seem that the construction of the generalized robust counterpart is quite artificial and based on the very specificε-constraint method. However, in the following we will provide an alternative motivation for the generalized robust counterpart by considerations which are independent to theε-constraint method and motivated by a pure multiobjective programming point of view. For this purpose, let us rewrite the original problem(Pu)minx∈Xf(x,u)s.t.g(x,u)⩽0,as an optimization with linear objective function that does not depend on u by introducing an auxiliary variableα∈R(Qu)minx∈Xα∈Rαs.t.f(x,u)-α⩽0,g(x,u)⩽0.The robust counterpart of (Qu) is given by(RQU)minx∈Xα∈Rαs.t.maxu∈Uf(x,u)-α⩽0,maxu∈Ugi(x,u)⩽0,fori=1,…,m.which is obviously equivalent to the robust counterpart (RPu) of (Pu).Now, the same methodology can be applied to the multiobjective problem (MOPu), which then becomes(MOQu)efminx∈Xα∈Rpα(MOQu)s.t.f(x,u)-α⩽K0,g(x,u)⩽0.after introduction of an auxiliary variableα∈Rp. Note that the only difference to (Qu) is due to the p-dimensional conic3We emphasize the meaning of the inequality≤Kby explicitly mentioning the cone K to ease understanding, but actually this is nothing else than the ordinary inequality⩽which has been used for the constraints g throughout.3inequalityf(x,u)⩽Kαinstead of the ordinary one-dimensional inequalityf(x,u)⩽αbefore. As we now deal with a conic inequality, its robustified versionf(x,u)-α⩽K0∀u∈Ucannot be rewritten in a similar manner as before. To proceed, let us fix x and let us consider the problem inαonly for the time being:efminα∈Rpαs.t.f(x,u)⩽Kα∀u∈U.Interestingly, for the standard coneK=R+pthis problem has a unique solutionα∗, given byα∗=maxu∈Uf1(x,u)…maxu∈Ufp(x,u)=fURC(x).This immediately yields that the multiobjective robust counterpart of (MOQu) is identical to (RMOPU). Thus, the multiobjective robust counterpart seems to be the canonical generalization of the concept of a robust counterpart to multiobjective optimization. In the following theorem we summarize the insights gained from the above.Theorem 3.9Letg(x,u)=g(x), i.e. let the feasible set of(MOPu)not be subject to uncertainty, and supposeK=R+p. Then the robust efficient frontier is ”bracketed” between the nominal efficient frontier and its robust image in the following sense:1.For allu∈Uand allxr∗∈effKx(RMOPU)there exists anxˆ∈effKx(MOPu)such thatf(xˆ,u)⩽fRCxr∗.For allu∈Uand allxˆ∈effKx(MOPu)there exists anxr∗∈effKx(RMOPU)such thatfRCxr∗⩽fRC(xˆ).1.From the definition offRCwe havefxr∗,u⩽fRCxr∗. Ifxr∗is already efficient for u, i.e. ifxr∗∈effKx(MOPu), the result follows immediately. Otherwise, ifxr∗is not efficient for(MOPu), we can find anxˆ∈effKx(MOPu)which dominatesfxr∗,u, i.e.f(xˆ,u)⩽fxr∗,u, which proves the first statement.Ifxˆis already robust efficient, i.e. ifxˆ∈effKx(RMOPU), the result follows immediately. OtherwisefRC(xˆ)is not robust efficient, i.e. there exists anxr∗∈effKx(RMOPU)which dominatesxˆ, i.e.fRCxr∗⩽fRC(xˆ).□This bracketing of the robust efficient frontier between the nominal efficient frontier and its robust image is illustrated in Fig. 3. We note that the robust efficient frontier and the robust image of the original nominal frontier might shrink and move to the top right significantly. Further, as we have seen from the proof of Part 1 of Theorem 3.9, the statement will remain true even if the feasible set is also subject to uncertainty. However, in case of uncertain feasibility set, Part 2 of Theorem 3.9 will no longer hold true for allxˆ∈effKx(MOPu)but only for those which are also feasible in (RMOPU). Therefore, the following corollary applies:Corollary 3.10LetK=R+p. Then the robust efficient frontier is ”bracketed” between the nominal efficient frontier and its robust image, i.e. it holds:1.For allu∈Uand allxr∗∈effKx(RMOPU)there exists anxˆ∈effKx(MOPu)such thatf(xˆ,u)⩽fRCxr∗.For allu∈Uand allxˆ∈effKx(MOPu)withgURC(xˆ)⩽0(i.e.fURC(xˆ)∈effKRC(MOPu)) there exists anxr∗∈effKx(RMOPU)such thatfRCxr∗⩽fRC(xˆ).For an illustration of the above concepts, we have chosen a simple example from mean–variance optimization. Although the following results can also be obtained with a more realistic example and sophisticated choices of uncertainty sets, the basic idea can be similarly well illustrated in such a simplified way. If not mentioned otherwise, it is easy to show that all conclusions remain valid in more general cases as well.Let us considern=6assets with nominal parameters, i.e. expected returns and volatilities,μˆ=0.050.060.070.080.090.10,σˆ=0.1000.1250.1500.1750.2000.225and pairwise return correlations equal toρˆ=0.60. Further, we letX={x∈R+n|x⊤1=1}.The resulting efficient frontier, e.g. obtained by the numerically solving problems from the weighted-sum scalarization, has already been illustrated in Fig. 1.Taking into account uncertainty in expected returns and in the covariance matrix, we use the previously introduced uncertainty setUδ(μˆ,Σ^)={(μ,Σ)∈Rn×S+n|||μ-μˆ||+c||Σ-Σ^||⩽δ}withδ=0.0075andc=2. This leads to the corresponding robust multiobjective mean–variance formulationefminx∈XsRC(x)-mRC(x)=efminx∈Xx⊤Σ^x+δc||x||2-μˆ⊤x+δ||x||.Here, based on the specific choice of the uncertainty set (2.7), the robustified versions (i.e. the robust counterparts) ofs(x)=x⊤Σxand-m(x)=-μ⊤xcan be analytically obtained assRC(x)=max(μ,Σ)∈Uδ(μˆ,Σ^)x⊤Σx=x⊤Σ^+δcIx=x⊤Σ^x+δc||x||2and-mRC(x)=max(μ,Σ)∈Uδ(μˆ,Σ^)-μ⊤x=-μˆ⊤x+δ||x||,see Schöttle and Werner (2009) for more details on the corresponding calculations. Hence, scalarizations of the robust counterpart can be solved in a numerically efficient manner by standard optimization software.Remark 4.1As already mentioned before, this is one of the cases where the robustified versions can be obtained in analytical form due to the specific interplay of the choice of the uncertainty set and the linear dependence on the uncertain parameters. In the given special situation it can be observed that robustification acts as a penalty for missing diversification as the norm of a portfolio can be interpreted as a measure of its diversification. The better the diversification, the lower the penalty due to robustification. Therefore, the penalty term is directly linked to the sensitivity of the functions with respect to the uncertain parameters, the less sensitive, the less the penalty.Although both observations are very specific to the example at hand, similar interpretations of robustification still hold true, see e.g. Schöttle and Werner (2006) for a practical discussion.Fig. 2illustrates for three specific portfolios (the minimum variance portfolio obtained with parameterλ=0; some average efficient portfolio corresponding toλ=0.25; and the maximum return portfolio withλ=1) how the return and volatility estimate of the resulting optimal portfolio (obtained by the solution of the corresponding optimization problem with nominal dataμˆandΣ^) fluctuate. The colored sets represent the images of the uncertainty setUδ(μˆ,Σ^)under the two objective functionss(x)and-m(x). Additionally, the three corresponding elements in the robust image, i.e. the images of the portfolios under the robustified objective are illustrated (as small circles). According to Theorem 3.9 these are always located to the top right of the image of the uncertainty set and to the top right of the original element of the efficient frontier.The location of the robust efficient frontier (in red) in comparison to the original nominal frontier (in black) is illustrated in Fig. 3.Remark 4.2Interestingly, the robust efficient frontier passes through the corresponding robust images of the average and the maximum return portfolio, but not through the robust image of the minimum variance portfolio. This immediately implies that the minimum variance portfolio cannot be robust efficient. This example shows that in general a nominal efficient solution does not necessarily need to be robust efficient as well.However, this observation depends on the specific problem data. Setting the correlationρˆ=0,δ=0.015andc=4, a different picture can be obtained, cf. Fig. 4. Now the minimum variance portfolio itself is already robust. However, more risky portfolios further down the efficient frontier are no longer robust; the robust efficient frontier gets significantly shortened compared to the original frontier. Due to the specific parameter choice, this example falls into the framework of Schöttle and Werner (2009) where this result has been obtained analytically.For practical purposes, it is helpful to link the robust efficient frontier to the nominal performance and to visualize this in comparison to the nominal efficient frontier. Figures like Fig. 5help the decision maker in finding an appropriate solution, as the trade-off between optimality and robustness is easily obtainable from the figure. In this representation, each element of the robust frontier is linked to its corresponding nominal element by a line segment, which gives an idea about the efficiency lost due to uncertainty. The length of the line segment represents the loss of efficiency due to optimizing a robustified objective instead of the true objective. Such an illustration, interpretation and decomposition of the efficiency loss due to uncertainty and due to optimizing a robustified objective is easily obtained in our multiobjective framework. We have thus extended the scalar case by taking into account additional information that would not have been available beforehand.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
