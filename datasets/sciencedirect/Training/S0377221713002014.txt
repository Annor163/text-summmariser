@&#MAIN-TITLE@&#
The single item uncapacitated lot-sizing problem with time-dependent batch sizes: NP-hard and polynomial cases

@&#HIGHLIGHTS@&#
We study the lot sizing problem with time-dependent batch sizes.We prove that the problem is NP-hard if one of the cost parameters is time-varying.The problem is polynomial for stationary cost parameters and null holding cost.

@&#KEYPHRASES@&#
Inventory,Uncapacitated lot sizing,Batch delivery,Stepwise cost,Polynomial time algorithm,Complexity,

@&#ABSTRACT@&#
This paper considers the uncapacitated lot sizing problem with batch delivery, focusing on the general case of time-dependent batch sizes. We study the complexity of the problem, depending on the other cost parameters, namely the setup cost, the fixed cost per batch, the unit procurement cost and the unit holding cost. We establish that if any one of the cost parameters is allowed to be time-dependent, the problem is NP-hard. On the contrary, if all the cost parameters are stationary, and assuming no unit holding cost, we show that the problem is polynomially solvable in time O(T3), where T denotes the number of periods of the horizon. We also show that, in the case of divisible batch sizes, the problem with time varying setup costs, a stationary fixed cost per batch and no unit procurement nor holding cost can be solved in time O(T3 logT).

@&#INTRODUCTION@&#
We consider in this article the single item uncapacitated lot-sizing problem where the quantities ordered are delivered by batch (typically truck or container) from an external supplier. The same problem can be seen as a single machine with an unlimited capacity, producing a single item per batch of a certain size. In the remaining of the paper this problem is called UBLS for uncapacitated batch lot sizing. Like in the classical lot sizing problem, ordering a positive amount incurs a fixed cost ft, also called setup cost, for ordering in period t, plus a procurement cost ptper unit ordered, and a holding cost htper unit of product in stock between period t and t+1. In this paper, we adopt an FTL (Full Truck Load) cost structure, where, in addition to the classical cost structure above, a fixed cost ktis paid for each batch used in period t. Observe that this model differs from other batch models where a solution is constrained to use only full batches. We do allow in our model incomplete batches, also called fractional batches, but the same fixed cost ktis paid in period t whatever the number of units actually in a batch. We denote by Btthe size of the batch in period t. Demands are known over a planning horizon of T periods and are to be satisfied without backlogging. Note that the demands and the batch sizes are both considered integer in the whole paper. The overall procurement cost qt(x) for an amount x of products ordered in period t is thus given by:q(0)=0andqt(x)=ft+ptx+⌈x/Bt⌉ktforx>0A formulation of the problem is given below, where xtrepresents the amount of products ordered in period t and stthe stock level at the end of the period t. Without loss of generality we assume no initial inventory, that is s0=0.(UBLS)min∑t=1T(qt(xt)+htst)s.t.st-1+xt=dt+st∀t=1,…,Txt,st∈R+∀t=1,…,TThe first constraint is the classical flow conservation. Notice that this formulation is non-linear due to the procurement cost qt(x).The contribution of this article is to classify the complexity of the UBLS problem with time-dependent batch sizes according to the different cost parameters, and to better identify the frontier between polynomially solvable and NP-hard problems. To the best of our knowledge, while the case of a stationary batch size has been studied in the literature (see Section 2), the case of time-dependent batch sizes is mainly unexplored. Our results show that this problem is NP-hard if none but one of the cost parameters (setup, fixed cost per batch, unit procurement or unit holding costs) is allowed to be time-dependent. Moreover, the NP-hardness results hold under very stringent conditions, that is even if almost all the other cost parameters are null. On the opposite, when all cost parameters are stationary, we establish that the UBLS problem with time-dependent batch sizes can be solved in O(T3) time complexity, assuming no holding cost. Fig. 1gives a synthetic representation of our results and the corresponding sections where they appear.For ease of the reading, in the remaining of the paper the notation (ft/kt/pt/ht) is used to designate the assumptions adopted on the cost parameters (setup cost/fixed cost per batch/unit procurement cost/unit holding cost). The field for a parameter α will take either the value ‘−’ if α is null, ‘α’ if it is assumed stationary and ‘αt’ if it is allowed to be time-dependent. For example, the rightmost problem in Fig. 1 is designated by (ft/k/−/−) in our notation, corresponding to UBLS instances with time-dependent setup costs, stationary fixed cost per batch and no unit procurement nor holding cost.This paper is organized as follows. We start by presenting in Section 2 some relevant papers studying lot sizing problems, unbounded or capacitated, with batch deliveries. All these papers restrict to a stationary batch size. Section 3 gives some insights of the difficulty of the UBLS problem with time-dependent batch sizes and time-dependent cost parameters. The NP-hardness of the problem is formally proven in the succeeding sections considering in its turn each cost parameter as the only time-varying parameter together with the batch sizes. More precisely, Section 4 is devoted to the subproblem (−/kt/−/−), Section 5 considers both (−/k/pt/−) and (−/k/−/ht), that is time-varying unit costs. In Section 6 we study the case (ft/k/−/−) with time-dependent setup costs, and propose anO(T∑tBt)pseudo-polynomial time algorithm. This section establishes also that this special case becomes polynomially solvable if the batch sizes are divisible (i.e. for any periods u and v, either Bu∣Bvor Bv∣Buholds). Finally, in Section 7, we consider the case (f/k/−/−) of stationary cost parameters and null holding cost, and we propose an O(T3) time algorithm. We then discuss some open problems and some possible extensions of this work in Section 8.

@&#CONCLUSIONS@&#
