@&#MAIN-TITLE@&#
A comparison between optimization algorithms applied to synchronization of bilateral teleoperation systems against time delay and modeling uncertainties

@&#HIGHLIGHTS@&#
An optimal controller is proposed for synchronization of teleoperation systems.Optimization algorithms are employed to tuning the controller parameters.The performance of the tuned controllers is compared against parameter uncertainty.Simulations are conducted to show the efficiency of the proposed controller.

@&#KEYPHRASES@&#
Optimization,Constrain handling,Heuristic algorithm,Teleoperation system,Time delay,

@&#ABSTRACT@&#
The goal of this paper is to achieve optimal performance for synchronization of bilateral teleoperation systems against time delay and modeling uncertainties, in both free and contact motions. Time delay in bilateral teleoperation systems imposes a delicate tradeoff between the conflicting requirements of stability and transparency. To this reason, in this paper, population-based optimization algorithms are employed to tuning the proposed controller parameters. The performance of tuned controllers is compared with the gains obtained by Cuckoo Optimization Algorithm (COA), Biogeography-Based Optimization (BBO), Imperialist Competitive Algorithm (ICA), Artificial Bee Colony (ABC), Particle Swarm Optimization (PSO), Genetic Algorithm (GA), Ant Colony Optimization with continuous domain (ACOR), Self-adaptive Differential Evolution with Neighborhood Search (SaNSDE), Adaptive Differential Evolution with Optional External Archive (JADE), Differential Evolution with Ensemble of Parameters and mutation strategies (EPSDE) and Cuckoo Search (CS). Through numerical simulations, the validity of the proposed method is illustrated. It is also shown that the COA algorithm is able to solve synchronization problem with high performance in stable transparent bilateral teleoperation systems.

@&#INTRODUCTION@&#
Over the past two decades, stability analysis and control design problems of the time delay systems have drawn an increasing attention. Teleoperation systems are one of the most well-known areas of such systems, which are widely applied to carry out complex tasks in hazardous environments such as handling materials; or inaccessible environments such as telesurgery exploring and exploiting the seas and space. A teleoperation system is composed of five interconnected components as shown in Fig. 1.The teleoperation system is said to be bilateral if the information signal flows in both directions between master and slave robots. The master robot is directly driven by the human operator in the local environment, whereas the slave robot is located in the remote environment, ready to follow commands that human operator orders by moving the master. If the slave accurately reproduces the master's commands and the master correctly feels the slave forces, the human operator experiences the same interaction as the slave would. This is called transparency in teleoperation systems.Time delay occurs during signal transfer between the master and slave robots in teleoperation systems, which can destabilize the systems. To compensate the time delay, different schemes are available [1–11]. An extensive survey of bilateral teleoperation schemes can be found in Ref. [8]. Based on the terminology provided in Ref. [9], three categories can be considered for teleoperation systems including (i) scattering-based schemes [1,2], (ii) damping injection schemes [12,13], (iii) adaptive schemes [14–16]. Other control schemes can be also found in Refs. [17–20]. Therefore, main challenge in the teleoperation systems is the selection of the control architectures as well as controller parameters. Generally the main shortcoming of the controller design is that it leads to non-optimality of the resulting controller.To achieve optimal performance, the most elegant and precise numerical techniques are gradient descents. These techniques have some fundamental issues including their dependence on unrealistic assumptions such as unimodal performance and differentiability of the performance function [21]. In addition, they are easily getting trapped into local optimum depending on the initial guess of solution. Once the model structure exhibits nonlinear performance, this approach often fails in finding a global optimum and becomes ineffective [22–25]. To overcome this shortage, modern optimization algorithms with stochastic search techniques have been proposed in literatures such as Genetic Algorithm (GA) and Particle Swarm Optimization (PSO) and they have been successfully applied in different optimization problems [26–30]. Although GA and PSO are alternative approaches for the problem, they always encounter premature convergence and their convergence rates are not thus satisfactory when dealing with some complex or multimodal functions. To handle this problem, many researchers incorporated different search and heuristic techniques [31–49], like Imperialist Competitive Algorithm (ICA) [32,35,37], Biogeography-based optimization (BBO) [33,40], Artificial Bee Colony (ABC) [36,39,41], Cuckoo Optimization Algorithm (COA) [38,42], Ant Colony Optimization with continuous domain (ACOR) [44], Self-adaptive Differential Evolution with Neighborhood Search (SaNSDE) [45], Adaptive Differential Evolution with Optional External Archive (JADE) [46], Differential Evolution with Ensemble of Parameters and mutation strategies (EPSDE) [47] and Cuckoo Search (CS) [48].Until now, few works have been reported for teleoperation controller design using the optimization algorithms. In Ref. [49], H∞ controller design based on hierarchical GA proposed. In Ref. [50], evolutionary programming has been used for designing the self-tuning controller of teleoperation system. The main drawback of the former approaches is that the time delay in communication channel has not been considered. Considering the effect of time delay on the stability, a controller has been designed using GA in Ref. [51].Motivated by the aforementioned research, the contribution of this paper is to achieve an optimal controller design for bilateral teleoperation systems for reducing time delay effects as well as modeling uncertainty, in both free and contact motions. The control framework used in this paper is adopted from Ref. [51]. In this paper, to optimize the parameters of synchronization control laws, the optimization algorithms including COA [38], BBO [33], ICA [32], ABC [34], PSO [55], GA [56], ACOR [44], SaNSDE [45], JADE [46], EPSDE [47] and CS [48] are employed. According to our knowledge, this is the first research to apply aforementioned algorithms except GA for synchronization problem for controlling of the teleoperation systems. Results show that the performance of COA is superior to other algorithms.The paper is organized as follows. In Preliminaries section, a general description of the teleoperator system is presented, and assumptions are introduced. In Control design section, the control objective and the controller design is formulated. Simulation results are discussed in Simulations section. Finally, conclusions are given in the last section.This section presents the dynamical model of the nonlinear teleoperator together with the assumptions needed for the stability analysis of the controller covered in this paper.In this paper, the master and slave robot dynamics with n-degree-of-freedom are assumed to be modeled as(1)Mm(qm)q¨m+Cm(qm,q˙m)q˙m+gm(qm)=Fh+τm(2)Ms(qs)q¨s+Cs(qs,q˙s)q˙s+gs(qs)=τs−Fewhereqi,q˙i,q¨i∈Rndenote the joint position, velocity and acceleration, respectively;Mi(qi)∈Rn×nis the positive definite inertia matrices;Ci(qi,q˙i)∈Rn×nis the matrix of centripetal and coriolis torques;gi(qi)∈Rnthe gravitational torque;Fh,Fe∈Rnindicate the forces at the joints due to the forces exerted by the human and the environment interaction, respectively;τi∈Rnis the applied torque; i=m, s stands for the master and the slave, respectively.In these equations, there are some fundamental properties [52].Property 1The inertia matrix M(q) is symmetric positive definite and there exist lower and upper bounds, i.e.,The matrixM˙i(qi)−2C(qi,q˙i)is skew symmetric, i.e.,The dynamics are linearly parameterizable. Therefore,The control schemes presented in this paper rely on the following assumptions:Assumption 1Both human operator and task environment are passive.The time delay in the communication channel T>0 exists between the master and the slave symmetrically.For the synchronization control strategy, firstly the goals need to be clarified. The main goals can be itemized as follows.Goal 1: The closed-loop of the overall system must be stable, in both free and contact motions, independent of the constant time delay.Goal 2: The position tracking between the master and the slave robots must be guaranteed. It means that the slave output qshas to follow the master output qmwith an acceptable accuracy.Goal 3: Force tracking must be guaranteed in contact motion. It means that the environment reflecting force Fehas to follow the operator force Fh.Define position synchronization errors between the master and the slave as follows:(6)em(t)=qs(t−T)−qm(t)(7)es(t)=qm(t−T)−qs(t)Therefore, the bilateral teleoperation is said to state synchronize if(8)limt→∞em(t)=limt→∞es(t)=0As a result, from Eq. (8), the master/slave robots states synchronize if the coordination errors and their derivatives approach the origin asymptotically [16]. In contact motion, the force tracking errors can be also defined as(9)efm(t)=Fe(t−T)−Fh(t)(10)efs(t)=Fh(t−T)−Fe(t)In this case, to achieve complete transparency, the following conditions must be considered.(11)limt→∞efm=limt→∞efs=0withq¨m(t)=q¨s(t)=q˙m(t)=q˙s(t)=0.In this section, the control design problem is formulated. To compensate the modeling uncertainties, it is necessary to find an appropriate mechanism. Here, an adaptive mechanism is employed. In order to achieve the design objectives given in Eqs. (8) and (11), the master and slave torques are given as [53](12)τm=−Mˆm(qm)λq˙m−Cˆm(qm,q˙m)λqm+gˆm(qm)+Fm(13)τs=−Mˆs(qs)λq˙s−Cˆs(qs,q˙s)λqs+gˆs(qs)+FswhereMˆi,Cˆi,gˆi(i=m,s)are estimated parameters due to parameter uncertainties of master and slave robots,λ∈Rn×nis a positive definite matrix andFi(i=m,s)are additional control inputs for synchronization.Substituting Eqs. (12) and (13) into Eqs. (1) and (2), we can obtain that(14)Mm(qm)(q¨m+λq˙m)+Cm(qm,q˙m)(q˙m+λqm)=M˜m(qm)λq˙m+C˜m(qm,q˙m)λqm−g˜m(qm)+Fm+Fh(15)Ms(qs)(q¨s+λq˙s)+Cs(qs,q˙s)(q˙s+λqs)=M˜s(qs)λq˙s+C˜s(qs,q˙s)λqs−g˜s(qs)+Fs−FewhereM˜i,C˜i,g˜i(i=m,s)are parameter estimation errors as(16)M˜i=Mi−Mˆi(17)C˜i=Ci−Cˆi(18)g˜i=gi−gˆiBased on Property 3, Eqs. (14) and (15) can be rewritten as(19)Mm(qm)r˙m+Cm(qm,q˙m)rm=Ym(qm,q˙m)θ˜m+Fm+Fh(20)Ms(qs)r˙s+Cs(qs,q˙s)rs=Ys(qs,q˙s)θ˜s+Fs−FewhereYm,Ys∈Rn×pare known functions of the generalized coordinates, andθ˜m,θ˜s∈Rpare the parameter estimation error vectors defined as(21)θ˜m=θm−θˆm(22)θ˜s=θs−θˆsIn addition, rm, rsare the new output variables as(23)rm=q˙m+λqm(24)rs=q˙s+λqsThe adaptive tuning laws are given by(25)θˆ˙m=ΓYmTrm(26)θˆ˙s=ΛYsTrswhereΓ,Λ∈Rn×nare positive definite constant matrices.From the new output variables given in Eqs. (23) and (24), the synchronization error can be rewritten as(27)erm(t)=rs(t−T)−rm(t)=[q˙s(t−T)+λqs(t−T)−q˙m(t)−λqm(t)]=e˙m+λem(28)ers(t)=rm(t−T)−rs(t)=[q˙m(t−T)+λqm(t−T)−q˙s(t)−λqs(t)]=e˙s+λesTo accomplish synchronization between master and slave robots, the structure of additional control inputs Fm, Fsis selectable. Here, PD controller structure is especially adopted, which is given by(29)Fm=KPem(t)+KDe˙m(t)(30)Fs=KPes(t)+KDe˙s(t)whereKP,KD∈Rn×nare positive definite diagonal matrices. For simplicity, it is assumed thatKP=kpIn×nandKD=kdIn×nwherekp,kd∈RandIn×n∈Rn×nis identity matrix.TheoremConsider the nonlinear bilateral teleoperation systems described by Eqs.(19) and (20). Then using the adaptive laws defined in Eqs.(25) and (26)and the additional control inputs given in Eqs.(29) and (30), the system is asymptotically stable and the synchronization errors converge to zero.From Eq. (29), we can obtain thatChoosingλ=KD−1KPand using Eq. (27), above equation can be rewritten as(32)Fm=KD(e˙m+λem)=KDerm=KD[rs(t−T)−rm(t)]Similarly, from Eqs. (30) and (28), we have(33)Fs=KD(e˙s+λes)=KDers=KD[rm(t−T)−rs(t)]Considering Assumption 1, it can be illustrated that [53](34)∫0t(FeTrs−FhTrm)dt≥0Choose the following Lyapunov function(35)V=V1+V2+V3with(36)V1=rmTMmrm+rsTMsrs+2∫0t(FeTrs−FhTrm)dt(37)V2=KD∫t−Tt(rmTrm+rsTrs)dt+emTλKDem+esTλKDes(38)V3=θ˜mTΓ−1θ˜m+θ˜sTΛ−1θ˜sThe time derivative of the Lyapunov function along the trajectory of the system can be expressed as(39)V˙1=2rmTMmr˙m+2rsTMsr˙s+rmTM˙mrm+rsTM˙srs+2FeTrs−2FhTrm=2rmT(−Cmrm+Fh+Ymθ˜m+Fm)+2rsT(−Csrs−Fe+Ysθ˜s+Fs)+rmTM˙mrm+rsTM˙srs+2FeTrs−2FhTrm=2rmTFm+2rsTFs+2rmTYmθ˜m+2rsTYsθ˜s+rmT(M˙m−2Cm)rm+rsT(M˙s−2Cs)rs=2rmTFm+2rsTFs+2rmTYmθ˜m+2rsTYsθ˜s(40)V˙2=KDrmTrm+rsTrs−rmT(t−T)rm(t−T)−rsT(t−T)rs(t−T)+2emTλKDe˙m+2esTλKDe˙s=KDrm−rst−TTrm+rs(t−T)+KDrs−rm(t−T)Trs+rm(t−T)+2emTλKDe˙m+2esTλKDe˙s=KDrm−rs(t−T)T2rm−rm+rs(t−T)+KDrs−rm(t−T)T2rs−rs+rm(t−T)+2emTλKDe˙m+2esTλKDe˙s=2rmTKDrm−rs(t−T)+2rsTKDrs−rm(t−T)−KDrm−rs(t−T)Trm−rs(t−T)−KDrs−rm(t−T)Trs−rm(t−T)+2emTλKDe˙m+2esTλKDe˙s=−2rmTKDrst−T−rm−2rsTKDrmt−T−rs−KDrm−rst−TTrm−rst−T−KDrs−rmt−TTrs−rmt−T+2emTλKDe˙m+2esTλKDe˙s=−2rmTKDrst−T−rm−2rsTKDrmt−T−rs−e˙m+λemTKDe˙m+λem−e˙s+λesTKDe˙s+λes+2emTλKDe˙m+2esTλKDe˙s=−2rmTFm−2rsTFs−e˙mTKDe˙m−e˙sTKDe˙s−emTλTKDλem−esTλTKDλes(41)V˙3=2θ˜mTΓ−1θ˜˙m+2θ˜sTΛ−1θ˜˙s+θ˜mTΓ˙−1θ˜m+θ˜sTΛ˙−1θ˜s=−2θ˜mTΓ−1θˆ˙m−2θ˜sTΛ−1θˆ˙sSubstituting the adaptive laws given in Eqs. (25) and (26), it yields(42)V˙3=−2θ˜mTΓ−1ΓYmTrm−2θ˜sTΛ−1ΛYsTrs=−2θ˜mTYmTrm−2θ˜sTYsTrsConsequently(43)V˙=V˙1+V˙2+V˙3=(2rmTFm+2rsTFs+2rmTYmθ˜m+2rsTYsθ˜s)+(−2rmTFm−2rsTFs−e˙mTKDe˙m−e˙sTKDe˙s−emTλTKDλem−esTλTKDλes)+(−2θ˜mTYmTrm−2θ˜sTYsTrs)=−e˙mTKDe˙m−e˙sTKDe˙s−emTλTKDλem−esTλTKDλesNow we prove thatV˙is the uniformly continuous in time. To this reason, it is necessary to show thatV¨is finite. Taking the time derivative from Eq. (43) yields(44)V¨=−2e˙mTKDe¨m−2e˙sTKDe¨s−2emTλTKDλe˙m−2esTλTKDλe˙sWith the definition of the controller parameters and the system parameters, form Eq. (43), it is straightforward to see thatV˙≤0. Thusrm,rs,θ˜m,θ˜sare bounded. From there, it is reasonable to assume thatqs,qm,q˙s,q˙mare bounded and therefore we havees,em,e˙s,e˙mare bounded. With the boundednessq˙s,q˙m,rm,rsand from Eq. (5), it is obvious thatq¨sandq¨mare also bounded. Therefore, we haveq˙s→0andq˙m→0ast→∞based on Barbalat's lemma [54]. Additionally,r˙s,r˙mare bounded. The boundedness ofq˙s,q˙m,q¨s,q¨mimply thate¨s,e¨mare bounded. Consequently, it can be concluded thatV¨satisfies the boundedness condition. By using Barbalat's lemma, we haveq¨s→0andq¨m→0ast→∞. This proves that the tracking error converges to zero asymptotically. This completes the proof.□When applying the controllers into the system, we face with choosing an arbitrary set of the gains for the dynamic of error synchronization, which is determined by the matrices KP, KD. It is unclear how the control parameters are properly chosen. Hence, the performance of the controller depends directly upon these matrices. It seems that control engineer attempts several different values by trial and error until a desirable performance is obtained, which is a very time-consuming task because of depends considerably on knowledge of the plant.To achieve an optimal performance, in this paper, the optimization algorithms namely COA [38], BBO [33], ICA [32], ABC [34], PSO [55], GA [56], ACOR [44], SaNSDE [45], JADE [46], EPSDE [47] and CS [48] are employed. Almost all of optimization algorithms are iterative algorithms. In these algorithms, it is usual given an initial population, and then repeatedly iterates from old population to a new one by some cooperative mechanism such as sharing information among individuals. Finally, the best individual in last population can be considered as a desired solution.It is necessary to recall that to solve an optimization problem, it is necessary that the values of problem variables be formed as an array, which is called problem solutions. The fitness values of the problem solutions are evaluated according to the fitness function. To obtain final results with the best fitness function value, the search process are carried out in each iteration. Using this procedure, the optimal gains of the controller (KP, KD) are obtained to minimize the synchronization errors given in Eqs. (27) and (28).In this section, first the performance of the optimization algorithms used in this paper is compared on solving benchmark functions. Then, these algorithms are employed to obtain the optimal controller design for the problem in hand. The software is implemented by the MATLAB 7.11.0.584 (R2010b) language on a laptop computer with Corei3 2.1GHz speed processor and 4GB RAM.The population size is an important factor in determination of optimal solution. If the population size is increased then it can better explore the solution space but it would augment the computation burden. In order to make fair comparison, the corresponding population size for each algorithm is chosen 20. The setting values of algorithmic control parameters of the mentioned algorithms adopted from the original paper are given as follows. In ICA, number of imperialist 2, total cost of empire 0.02, damp ratio 0.99, uniting threshold 0.02, revolution rate 0.3, β and γ are fixed to 2 and 0.5 (Radian), respectively [32]. In BBO algorithm, habitat modification probability 1, emigration probability bound per gen [01], step size for numerical integration of probability 1, maximum immigration and migration rates for each island 1, mutation probability 0 [33]. In ABC algorithm, employed bees and onlooker bees 10, number of food sources 10 and abandonment limit parameter 20 [34]. In COA, minimum number of eggs 5, maximum number of eggs for each cuckoo 10, maximum number of cuckoos that live at the same time 20, Control parameter of egg laying (radius coefficient) 1 [38]. In PSO, acceleration coefficients 2 and inertia weight 0.8 [55]. In GA, crossover probability and mutation probability are set to 0.8 and 0.05, respectively [56]. In ACOR, number of ants used in the iterations 2, speed of convergence 0.85, locality of the search process 0.0001 and achieve size 50 [44]. In JADE, the rate of parameter adaptation 0.1, greediness of the mutation strategy 0.05, crossover probability of each individual 0.9, the mutation factor of each individual 0.5 [46]. In EPSDE, crossover rate and scale factor are taken in the range 0.1–0.9 and 0.4–0.9, respectively, both in steps of 0.1 [47]. We also follow the parameter settings in the original paper of SaNSDE [45]. In CS, step size which should be related to the scales of the problem of interest α and discovery rate of alien eggs/solutions Paare set to 1 and 0.25 [48].To assess the effectiveness and efficiency of the algorithms, four well-known benchmarks with different characteristics are employed in terms of solution quality and convergence speed including Rosenbrock, Ackley, Rastrigrin and Griewank. This set is suitable to include many different kinds of problems such as unimodal (Rosenbrock), multimodal (Ackley, Rastrigin, Griewank), separable (Rastrigin), non-separable (Rosenbrock, Ackley, Griewank). If a function has one local optimum this function is called unimodal and it has more than one local optimum, this function is called multimodal used to test the ability of the algorithms getting rid of local minima. Another group of test problems is separable/non-separable functions. Non-separable functions have interrelation among their variables. Therefore, these functions are more difficult than the separable functions. Description of the benchmark functions are given as follows.Rosenbrock's Function:f1(X)=∑i=1n−1100(xi+1−xi2)2+(xi−1)2with boundary conditions:−30≤xi≤30min(f1(X))=0Rastrigin's Function:f2(X)=−∑i=1nxi2-10cos(2πxi)+10)with boundary conditions:−5.12≤xi≤5.12min(f2(X))=0Griewank's Function:f3(X)=14000∑i=1nxi2−∏i=1ncosxii+1with boundary conditions:−600≤xi≤600min(f3(X))=0Ackley's Function:f4(X)=−20exp−0.21n∑i=1nxi2−exp1n∑i=1ncos2πxi+20+ewith boundary conditions:−32≤xi≤32min(f4(X))=0The experimental are performed for dimensions 10, 20, and 30 with 12 trials independently, and we record the statistical results including the worst, mean, best and standard deviation (SD). Tables 1–4list the results. Comparative results indicate that COA has good global search ability. An interesting result is that the fitness function value of COA is smaller than others across the test functions. COA can also find the optimum of the complex test functions even for Rastrigin function during nearly every run. Although the Rastrigin function is a multimodal function with many peaks of nearly equal height, COA can escape these local optima and converge to the global optimum whereas others have not reached to the global optimum.In this section, COA [35], BBO [33], ICA [32], ABC [34], PSO [55], GA [56], ACOR [44], SaNSDE [45], JADE [46], EPSDE [47] and CS [48] are applied to tune optimal parameters of the control strategy. The parameters of the algorithm are assumed as given in Determination of the algorithms parameters section. In simulations, two single degree of freedom mechanical arms are considered as the master and the slave robots, which have been utilized in Refs. [5,6,18,51,53]. The corresponding dynamic equation of the single degree of freedom master and slave robots are given by [51](45)Mm(qm)q¨m=Fh+τm(46)Ms(qs)q¨s=τs−Fewhere(47)τm=−Mˆm(qm)λq˙m+Fm(48)τs=−Mˆs(qs)λq˙s+FsApplying the new output variables given in Eqs. (23) and (24), the system can be rewritten as follows.(49)Mm(qm)r˙m=Ym(qm,q˙m)θ˜m+Fm+Fh(50)Ms(qs)r˙s=Ys(qs,q˙s)θ˜s+Fs−Fewhereθ˜i=M˜i=Mi−Mˆi,Yi(q˙i)=λq˙i(i=m,s)and Fm, Fsare defined in Eqs. (29) and (30).Since the task environment is considered as an impedance, the task environment reflecting force Feare modeled as [57](51)Fe=0,ifqs<de−Beq˙s−Ke(qs−de),ifqs≥dewhere deis the distance angle to the obstacle, Beand Keare the damping and stiffness coefficients of the environment, respectively, which are considered for hard motion.Furthermore, the human force Fhis considered as [53](52)Fh=K(1−qm)where K is the stiffness coefficient.In simulations, the time delay in communication channel is set to 0.5s. The system parameters are also chosen as follows.Mm=Ms=4,de=0.5,λ=2,Be=100,Ke=3000,K=10,Γ=Λ=0.5.Before proceeding with the optimization operations, a performance criterion should be first defined. As clearly mentioned in the proof of theorem, we chooseλ=KD−1KP. Based on this, in the present optimization problem, COA, BBO, ICA, ABC, PSO, GA, ACOR, SaNSDE, JADE, EPSDE and CS are utilized for a constrained minimization. To handle the constraints in the optimization algorithm, penalty function scheme is employed which converts the unconstrained problem to a constrained one by adding an additional value corresponding to the level of constraint violation to the original objective value. The fitness function can generally be described as follows.(53)J=f(x)+∑i=1nRjΦj(x)where Rjis a penalty coefficient for jth constraint which has a relatively large value comparing to f(x). The amount of Rjshould be set by a trial and error process. This process should be repeated for any objective since it is problem-dependant. Note that excessively large amount of penalties eliminate the infeasible solutions quickly, but decrease search efficiency, also, insufficient penalties usually result in infeasible final solutions. As a result, in this paper, the following fitness function J is considered.(54)J=∫0∞{em2(t)+es2(t)}dt+100KpKd−λ2To minimize the above fitness function, all aforementioned algorithms are applied to this problem 12 independently times.In this section, we verify the efficacy of the proposed teleoperation methodology. In simulations, two scenarios are performed as follows.Scenario 1: The slave moves without any contact (Free motion).Scenario 2: The slave moves in contact with the environment (Contact motion).To obtain optimal performance of teleoperation systems, the PD-type synchronization control law is designed. To this end, the optimization algorithms are employed to obtain the parameters of PD controllers whereas the fitness function given in Eq. (54) is minimized. These results are compared in terms of cost value over 12 runs independently. From Eqs. (45) and (46), we face to a two-dimensional optimization problem. The corresponding search spaces for the control gains are also chosen askp∈=[015]andkd∈[015]. In addition, the initial of master and slave areqm(0)=0.8andqs(0)=0.4, respectively. The initial of velocities and acceleration of master and slave robots are also set to zero. To avoid confusion between the results of COA and other algorithms, thus only the result of COA, which is the best result obtained among other algorithms in terms of convergence speed, is given, excluding the rest.The statistical results of the scenario 1 including the fitness function value and the controller parameters are summarized in Tables 5–7. Fig. 2represents the position tracking response. It is to be noted that the slave starts from an offset of 0.4 units but still manages to converge to the master joint angle. It confirms the superiority of COA in terms of convergence speed. Referring to this figure, it is evident that the proposed control structure not only guarantees the optimal performance, but also robust stability is achieved in presence of the time delay existed in communication channel and parameter uncertainty. The statistical results corresponding to the scenario 2 are given in Tables 8–10. The position and force tracking are illustrated in Figs. 3 and 4, respectively. Referring to these figures, it can be seen that the complete transparency is achieved when there is an initial offset between the master and the slave. The convergence profile of the mean fitness functions are also shown in Figs. 5 and 6for scenario 1 and 2, respectively. In summary, the above simulation results in both two scenarios indicate the stable transparent bilateral teleoperation system in presence time delay and parameter uncertainties.

@&#CONCLUSIONS@&#
The motivation of this paper was to employ the evolutionary algorithms for obtaining optimal performance for synchronization of bilateral teleoperation systems against uncertainties including model parameters. To this end, COA, BBO, ICA, ABC, PSO, GA, ACOR, SaNSDE, JADE, EPSDE and CS were used to obtain optimal parameters of the PD synchronization controller. With the designed controller, not only the robust stability was achieved, but also the optimal performance was guaranteed. Future works in this area will include testing the proposed control structure in practice.