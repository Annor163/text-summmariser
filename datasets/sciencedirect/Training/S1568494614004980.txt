@&#MAIN-TITLE@&#
Automatic construction of Fuzzy Inference Systems for computerized clinical guidelines and protocols

@&#HIGHLIGHTS@&#
We create Fuzzy Inference Systems (FIS) as a means of computerizing differential diagnosis (DD) tables.Use of Model-Driven Software Engineering (MDSE) techniques to systematize FIS development process.FIS design and edition from both domain expert and knowledge engineer perspectives.Calculation results shown in an easily comprehensible and self-explanatory way.Tested in the development of two FIS for a computerized clinical guideline for hyperammonemia care.

@&#KEYPHRASES@&#
Model-Driven Software Engineering,Fuzzy Inference System,Differential diagnosis,Computerized clinical guideline,Hyperammonemia rare disease,Domain specific editors,

@&#ABSTRACT@&#
Clinical guidelines and protocols (CGPs) are standard documents with the aim of helping practitioners in their daily work. Their computerization has received much attention in recent years, but it still presents some problems, mainly due to the low sustainability and low adaptability to changes (both in knowledge and technology) of the computerized CGPs. This paper presents an approach to an easy and automatic creation of Fuzzy Inference Systems (FISs), which are suitable for the computerized interpretation of differential diagnoses. The proposed FIS development process is based on applying Model-Driven Software Engineering techniques: automatic generation of computer artefacts and separation of concerns. The process focuses on the separation of roles during the design stage: domain experts use a basic editor that allows them to define the categories and factors that will be involved in the FIS in natural language, while knowledge engineers at a later stage refine these elements using a more advanced editor. The whole system has been tested by automatically generating two FISs that have been included in a computerized CGP for the diagnosis of a rare disease called hyperammonemia. This CGP has been validated and it is currently in use.

@&#INTRODUCTION@&#
CGPs are systematically developed statements intended to assist practitioners and patients with decisions about health care [1]. They describe the best clinical practices and, thus, reduce variations in health-care, improve effectiveness of diagnoses and therapies and discourage ineffective or potentially harmful interventions [2], because they are based on the best available scientific evidence and broad consensus.However, CGP dissemination and knowledge transfer has not been successfully achieved [3]. In [4], authors point out that the transfer is ensured using Decision Support Systems (DSSs) in collaboration with Computerized CGPs (CCGPs). CCGPs provide access to the knowledge contained in CGPs and allow proposing timely patient-specific decision support and reminders [5].CGPs usually consist of several elements, such as procedures, prescriptions and differential diagnoses (DDs). A DD is a diagnostic method used to identify, for example, a given disease from a set of alternatives based on symptoms and/or lab results. They are usually presented in a table, as that shown in Fig. 1. DD are very frequent in CGPs. Denekamp and Peleg [6] state that 12% of the CGPs included in the National Guideline Clearinghouse contain procedures that begin with a differential diagnosis. This percentage increases when considering CGPs that not only include DDs at the beginning. The sustainable computerization of DDs and their integration in CCGPs remains, nonetheless, an unsolved issue.This computerization can be achieved by the use of FISs, which are often used in healthcare applications due to the ability of fuzzy variables to model both the uncertainty of diagnoses and the imprecision of symptoms [7]. One of their main advantages is that final users can understand their calculation process, instead of being black-box solutions.However, as FISs are usually created from bibliography and expert advice, they require a far from negligible effort to be edited and updated. In this way, new methodologies are needed to overcome this problem. A Model-Driven Software Engineering (MDSE) approach can help in this process. The main objective of MDSE is to minimize manual programming by generating code automatically, thus avoiding problems that usually arise when developing software in a traditional manner [8].This paper presents a novel process to automatically generate FISs representing DDs taking advantage of MDSE techniques. The main contributions consist of (1) the development of a metamodel that gathers the knowledge necessary to represent a FIS, and (2) the use of MDSE techniques for the automatic generation of executable FISs after defining a FIS model. The resulting process has been tested by developing two FISs that have been integrated into a CCGP for the Diagnosis and Treatment of Acute Hyperammonemia in Children (DTAHC). This CCGP is intended to diagnose and treat children suffering from this rare metabolic disease. DTAHC CCGP has been developed using Aide Guideline Technology Platform (Aide-GTP) [9], a system that allows the computerization of CGPs and the execution of their corresponding CCGPs. The evaluation of this CCGP is endorsed by the Spanish Society of Metabolism Inborn Errors of the Spanish Paediatrics Association.The next section introduces in detail the three pillars in which this work is based: Aide-GTP, MDSE and FISs. Then, Section 3 describes the development process of FISs. The developed FISs included in the CCGP for the DTAHC are also presented, as well as the proposed FIS metamodel and the FIS edition process. Section 4 briefly presents the results of this work, while Section 5 discusses those results and Section 6 finally points out the conclusions.

@&#CONCLUSIONS@&#
A novel system to facilitate the development of FISs related to DDs has been introduced. This system was found to be useful when applied for the development of two FISs. In fact, the development time and effort were reduced greatly in comparison with manual creation from scratch. Furthermore, allowing the experts to be an active part of the development process increased their involvement in the project and improved the collaboration with the knowledge engineers. Programming errors were also avoided and the overall quality of the executable FISs was higher than those created manually.Thanks to the use of MDSE techniques for the automatic generation of FISs from their model, developers do not need to know how to program in the target language and they can focus exclusively on the edition task. Moreover, corrections and new versions are developed at model level, which is much easier than programming and less error prone. MDSE also eases the process of introducing new features, such as new templates for the automatic generation of new solutions.It is planned to continue developing new FISs in order to better evaluate the proposed process. For the moment, the two developed FISs have been integrated in a CCGP for DTAHC. This CCGP is accessible in Aide-Portal.