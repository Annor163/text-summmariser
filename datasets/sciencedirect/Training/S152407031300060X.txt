@&#MAIN-TITLE@&#
A low-dimensional representation for robust partial isometric correspondences computation

@&#HIGHLIGHTS@&#
We characterize partial isometries of shapes by single-point maps up to first order.A novel matching algorithm for partial intrinsic matching.We use redundancy in our representation for approximate partial iso-metric matching.Robustness to strong topological noise, geometric noise and missing data.

@&#KEYPHRASES@&#
Geometry processing,3D surface correspondence,Registration,Isometric deformation model,Partial matching,

@&#ABSTRACT@&#
Intrinsic shape matching has become the standard approach for pose invariant correspondence estimation among deformable shapes. Most existing approaches assume global consistency. While global isometric matching is well understood, only a few heuristic solutions are known for partial matching. Partial matching is particularly important for robustness to topological noise, which is a common problem in real-world scanner data. We introduce a new approach to partial isometric matching based on the observation that isometries are fully determined by local information: a map of a single point and its tangent space fixes an isometry. We develop a new representation for partial isometric maps based on equivalence classes of correspondences between pairs of points and their tangent-spaces. We apply our approach to register partial point clouds and compare it to the state-of-the-art methods, where we obtain significant improvements over global methods for real-world data and stronger guarantees than previous partial matching algorithms.

@&#INTRODUCTION@&#
Modern computer graphics has experienced a paradigm shift: Traditional manual modeling is increasingly complemented by data-driven techniques where measured data, such as 3D scans, are used as a basis for building 3D models. An important data source are 3D scans of deformable models, such as humans or animals in varying poses. Today, there exist sophisticated scanning setups for acquiring moving geometry in real-time [1–4] and there are even consumer devices on the market such as the Microsoft Kinect™. This leads to new applications such as virtual cinematography [5], or the creation of data-driven generative shape models of deformable objects [6–9]. Finding correspondences among such data is a fundamental problem for all of these applications: Almost any further processing, such as the registration of partial scans into a complete shape, editing of sequences, or statistical analysis, requires dense correspondences between surface points.Matching deformable shapes is in many cases a difficult problem: If we permit rather general deformations this might require many parameters that have to be explored during matching. The size of this search space is exponential with respect to the available degrees of freedom. However, for the important special case of a single object in different poses, we can often assume that the deformation is approximately isometric, i.e., preserving the intrinsic metric structure. Concretely, the distances along surfaces of objects such as humans, animals, plants, or cloths do not change a lot without serious injury or damage. This restriction leads to a strongly constrained search space. Lipman and Funkhouser [10] argue that isometries between topological disks are a special case of conformal mappings, thereby limiting the degrees of freedom to six (three point-to-point correspondences are sufficient). Ovsjanikov et al. [11] show that a single point correspondence is sufficient for a special class of shapes where the spectrum of the Laplace–Beltrami operator is not degenerate, thus showing that there are only two degrees of freedom in this special case. Additional cues, such as carefully selected constellations of local features [12], can even reduce the complexity for many shapes to the point of leaving a trivial search space, eliminating all degrees of freedom. As approximate isometry makes the correspondence problem feasible while still permitting significant pose changes, many of the recent shape matching algorithms are based on this assumption [10–19].However, the isometric matching problem is not yet solved: Because of the intrinsic view of the geometry, it is naturally sensitive to topological noise. In case of holes, missing data, or contacts, intrinsic distances become distorted and thus no longer constitute invariants that can be exploited for matching. One solution is to replace the notion of distance. For example, by using diffusion distances, or variants thereof, one can reduce the sensitivity to topological artifacts [17,20,21] when the pieces of geometry that cause the problem are small in relation to the overall shape. Nonetheless, these invariants still break down in case of large artifacts (wide contacts, large holes, as shown for example in Section 5 of this paper). Unfortunately, real-world 3D scanner data, one of the main practical application areas, is almost universally troubled by substantial artifacts of this kind.Formulated more generally, we have to address the problem of partial matching, where not the whole manifold can be brought into correspondence by a (near-) isometric mapping but only an excerpt of the surface can be matched. In this case, typical invariants (geodesic paths, Laplacian eigenfunctions) become unreliable because they utilize global information. Importantly, the excerpts of the surfaces that can be matched are not known a priori (otherwise, we could just restrict a traditional method accordingly) but need to be determined along with the matching. This seems to re-introduce prohibitive complexity as we now have to choose from an exponential number of such subsets [22]. The most important contribution of this paper is to show that with an appropriate matching model this is not the case. The search space is not much larger than in the global problem and we give an efficient algorithm for computing such matches.The core of our method is based on the observation from differential geometry that an isometric map can be fully specified by using local information up to first order only: An isometry between Riemannian manifolds is fixed by a single point correspondence and an orthogonal map of the tangent spaces (see for example [23, p. 201]). In the case of surfaces, this means that the map of a point and a local direction (plus orientation, in case of unoriented surfaces) is sufficient to determine an isometry. We will sketch a constructive proof in Section 3 that directly yields a propagation algorithm for computing matches: Starting with a single oriented point match, correspondence information is incrementally propagated to the neighborhood, thereby flood-filling a partially consistent region of isometric geometry. Being local in nature, the method handles partial matches naturally and is robust to topological noise, which is reported naturally as boundary of partiality.From a structural point of view, we can understand partial isometries among smooth, connected manifolds as equivalence classes of mappings of a pair of points and their tangent spaces on the two surfaces involved. In the case of oriented 2-manifolds, each such object has six degrees of freedom (a point and an angle around the surface normal for each for source and target surface, respectively). The mapping is captured by a equivalence class of such 6-tuples. This set is redundant in that one degree of freedom (the sum of the angles) can be chosen arbitrarily and two further parameters (either the starting or the end point) are only needed to select the partial region to be mapped. This leaves three degrees of freedom that need to be actually explored densely, with false starting points being rejected inO(1)time.In this view, we can perform a relaxation: In order to also find approximate isometries, we can cast this problem as the task of finding approximate equivalence classes. Kim et al. [18] have used this idea in the context of globally consistent isometric mappings in order to efficiently find approximate isometries. In our paper, we demonstrate how our partial matching framework can be adapted to perform the same task in a partial matching scenario. We perform agglomerative clustering [24] in the space of near-isometric mappings, which are concisely represented using the tuples introduce above.We validate our algorithm on standard benchmark data sets and raw scanner data, and compare the results to previous work. We show a significant improvement in quality over global methods in shapes with topological noise. Our algorithm yields similar or better results as previous heuristics for partial matching, but with stronger guarantees of discovering existing isometries as outlined above.In summary, our paper proposes a systematic framework and new algorithms for extending isometric matching to the case of partial consistency, thereby making the following specific contributions:•We characterize partial isometries of shapes by single-point maps up to first order, which yields a tight bound on the inherent degrees of freedom.This leads to a novel matching algorithm that provides a systematic approach to the general setting of partial intrinsic matching, where both surfaces may be incomplete, including robustness to strong topological noise.By interpreting partial matching as a problem of finding approximate equivalent classes in our novel representation, we obtain an algorithm for approximate partial isometric matching.Our algorithmic pipeline for approximate partial isometric matching is summarized as follows. We identify distinctive feature points on both surfaces. We compute oriented point correspondences by matching feature descriptors, with orientation determined by nearby features. From oriented point matches, we perform local metric propagation, stopping the propagation when the stretching becomes too large. This gives us a set of partial isometries, covering different, but possibly overlapping regions of both surfaces. We define a dissimilarity measure between partial isometries, and use this to cluster the partial matches into equivalence classes. The cluster (equivalence class) with the smallest total intra-cluster distance is merged by taking the geodesic centroid of all candidate correspondences for each point on the source manifold.The steps in this pipeline exhibit sensitivity to certain challenges. Most prominent are the sensitivity of feature matching to surface noise, missing data and topological noise, and the sensitivity of the clustering step to under-sampling of the space of isometric mappings, which can be exacerbated by problems in the feature matching stage, in addition to the lack of a proper distance metric between partial matches. The difficulty of reliable feature matching on real data can be alleviated by the metric propagation algorithm, which will typically produce smaller partial isometries for incorrect feature matches than for correct ones since we expect the local metric to be vary significantly for different parts of the surface. However, in the presence of strong continuous intrinsic symmetries this assumption breaks down. We thoroughly discuss and explore in which situations and to what extent these challenges create problems in the final result in Section 5.In this section, we discuss different isometric matching models and their implications on the difficulty for finding a globally optimal solution to the matching problem. To the best of our knowledge, this has not yet been analyzed explicitly in literature. We do not aim to give an extensive review of surface registration methods; for this, we refer the reader to recent surveys such as van Kaick et al. [25] or Tam et al. [26].We start by introducing some formal notations.Manifolds: We consider smooth, orientable 2-manifoldsM⊂R3embedded in three-dimensional space. In order to represent partial data (such as scans with acquisition holes), we permit boundaries, denoted by∂M. The orientation ofMmight (optionally) be prescribed by oriented surface normalsn(x),x∈M, pointing outwards.Tangent space: We further useTxMto denote the tangent space ofMat pointx∈M. For its representation, we choose two arbitrary but fixed orthogonal tangent vectorsu(x),v(x), i.e.:TxM=span{u(x),v(x)}.Distances: We usedistM(x,y)forx,y∈Mto denote the intrinsic or geodesic distance between the two pointsxandy. A geodesic connectingxandyis a curve that has no geodesic curvature, which means that the derivative of the curve at a pointsprojected toTsMis zero. We call the shortest geodesic connectingxandya shortest geodesic path inM.Mappings and isometries: Consider two manifoldsSandT, and a mappingf:U→Tfrom an open subsetU⊆StoT. Letfu(x)andfv(x)denote the partial derivatives of f with respect to the tangent space directionsuandvinR3ofS. The first fundamental formIf(x)of f at pointx∈Uis then given by:If(x)=fu(x)·fu(x)fu(x)·fv(x)fv(x)·fu(x)fv(x)·fv(x).The function f is an isometry if and only ifIf(x)=Ifor allx∈U.Equipped with this notation, we will now identify and analyze three classes of approaches for finding surface correspondences. The difference is in how the notion of approximate isometry is handled, leading to different complexity characteristics and algorithms.The global model assumes that geodesic distances are global invariants of the shape, being consistent at least up to an error marginν>0that accounts only for a small fraction of the object size. This means, the energy(1)Eglobal=supx,y∈U|distS(x,y)-distT(f(x),f(y))|must be smaller thanν. For two pointsx,y∈UEq. (1) corresponds to an additive error of at mostν, i.e.(2)|distS(x,y)-distT(f(x),f(y))|⩽ν.The global consistency criterion is sometimes modified to allow for a multiplicative error ofνinstead, as(3)maxdistS(x,y)distT(f(x),f(y)),distT(f(x),f(y))distS(x,y)⩽(1+ν).The former error model considers absolute errors, while the latter one considers relative errors.In case of exact isometry, i.e.,ν=0, the set of matching candidates becomes strongly constrained. The isometry assumption has been used to embed the intrinsic geometry of a shape in a Euclidean space using multi-dimensional scaling, such that embeddings of isometric shapes become identical, which facilitates shape recognition and matching [27–29]. Alternatively, the geometry of shapeScan be embedded into shapeTusing generalized multi-dimensional scaling, thereby computing a cross-parameterization directly [14].Exact isometry results in a set of matching candidates with few degrees of freedom. Lipman and Funkhouser [10] have noticed that isometries are special cases of conformal maps, thereby having only the degrees of freedom given by the Möbius group, which are fixed by three pointwise matches on spherical topologies. Ovsjanikov et al. [11] have shown that even a single point match is sufficient to fix an isometry if the Laplace–Beltrami spectrum ofSis non-degenerate. In this paper, we exploit a different way to uniquely describe an isometry: fixing one point, a tangential direction, and the surface orientation is necessary and sufficient to specify an isometric mapping [23]. This provides the fewest possible degrees of freedom while still covering all cases including shapes with global intrinsic symmetries.In case of small, global error margins, statistical triangulation algorithms can be applied that compute all correspondences from a few landmark matches [15,16] or, similarly, by voting for several approximate solutions [10,11]. Depending on the geometry of the shape, errors can become amplified so that a bit more than only the minimal set of initial correspondences are required [12]. Nonetheless, matching according to this model is efficient and can be considered a more or less solved problem.The global approximate isometry criterion has also been employed to study matching partial overlaps of complete surfaces. van Kaick et al. [30] use a pair of features to define a map that captures a local geodesic region between the two features, and show how this descriptor can be used for partial matching. Here, using two features instead of one is crucial because two features encode orientation information on the surface, while one feature does not.The drawback of the global consistency model is its sensitivity to topological noise. To make globally consistent approaches more robust w.r.t. topological changes, several approaches have been proposed to perform a band-limited analysis in the eigenspace of the manifold’s Laplace–Beltrami operator [17,20,21,31]. Unlike prior approaches based on embedding the intrinsic geometry of the shape directly [14,27–29], these approaches successfully handle small topological errors. However, they break down in the presence of large artifacts, such as wide contacts or missing pieces. A notable exception is the heuristic region growing approach by Sharma et al. [32]. It tries to match points with similar spectral signatures using an expectation–maximization framework, which has been shown to perform well in the presence of large contacts. Despite good practical performance, the algorithm is heuristic in nature and it remains unclear under which conditions it will find a correct solution. In particular, if local descriptors are not unique, the greedy region growing might fail and the EM-algorithm does not guarantee to recover a correct global match. In contrast, our region growing algorithm, which is based on propagation of metric information rather than potentially ambiguous descriptor matching, comes with the theoretical guarantee to find correct results for exact isometries while requiring an initialization from a small search space with very few degrees of freedom.The global consistency model is incompatible with the notion of partial matching, since distances have to be measured on the complete surfacesSandT, which might not be available. Xu et al. [22] modify the criterion in Eq. (1) by restricting paths to the partially matched regionU:(4)Epartial=supx,y∈U|distU(x,y)-distf(U)(f(x),f(y))|.Note thatEpartialconsiders again absolute errors(5)|distU(x,y)-distf(U)(f(x),f(y))|⩽νand can be modified to consider relative errors as in Eq. (3).The drawback is that the shortest geodesic paths and thus the energy depend on the shape of the domain, which makes it difficult to optimizeEpartial; changing the domainUinfluences which pairs of points are mapped in a geodesically consistent way. For this reason, Xu et al. restrict their method to considering geodesically convex regionsU, which are defined as regions where for any two pointsx,yinU, there exists a shortest geodesic path betweenxandyinU. In this special case, bothEpartialandEglobalmeasure shortest paths onSandT. The solution proposed by Xu et al. optimizes the scale of consistent regions and the consistent points separately, which leads to a rather complex algorithm. Further, the notion of a scale parameter is not canonically related to the original matching problem.Sahilloglu and Yemez [33] consider the case where one of the surfaces is complete and the other an incomplete, deformed part of that surface. Using a coarse sampling and matching strategy between shape extremities, they can directly estimate a scale parameter between the two surfaces, which allows them to define a scale-invariant isometric distortion measure. This results in one-sided partial dense intrinsic matching up to an arbitrary scale. Their approach also allows matching of semantically similar, but non-isometric complete surfaces. Our approach allows both surfaces to be incomplete, at the cost that they must be scaled consistently beforehand. Given real-world scanners often provide data in known units, our method is compatible with the scenario of matching surfaces acquired with different modalities. While in this paper we do not explore the latter scenario, our approach would be compatible with this task given a reliable way to estimate scale change during metric propagation, possibly using shape extremities or other intrinsic features.Bronstein et al. [34] introduced a general framework to evaluate partial similarity using Pareto optimality. In case of partial intrinsic shape matching, this method aims to find large parts of two surfaces that are similar to each other, where similarity is measured according to Eq. (2). In practice, the parts are found using generalized multi-dimensional scaling. Raviv et al. [35] use a similar technique to find partial intrinsic symmetries.Another common way to relax the requirement of exact isometry towards approximate matching is to maintain the metric tensor in a least-squares-sense. Again, letf:U→T,U⊆Sbe a mapping between two manifolds, whereUis the open subset ofSthat should be mapped toTin a distortion minimizing way. We can measure the distortions for example by minimizing a matrix norm of the Green deformation tensor (difference of the first fundamental form to identity):(6)Elocal(f)=∫UIf(x)-IF2dx.This criterion is purely local and thus well suited for partial matching. It is worth noting that extrinsic elastic deformation techniques, such as [36–38] are closely related: They either include the preservation of the curvature tensor in the objective function to maintain the extrinsic shape, or apply Eq. (6) to the 3-manifold of the embedding Euclidean volume [39,40]. All of these methods are designed for partial matching.The problem with both intrinsic and extrinsic elastic matching models is that the search space becomes very large, rendering any approach based on exhaustive search prohibitively expensive. The structure of the search space can be approximately understood by a linearized analysis. In order to understand the degrees of freedom of the local matching model, we can use the tool of modal analysis of such elastic models, first introduced by Pentland and Williams [41] to the field of computer graphics (the aim of their paper was actually to speed up the simulation of extrinsic elastic deformations of solid objects in three-space). Modal analysis represent the deformation of an object as a linear combination of the eigenmodes of the object’s vibration, which are found using a spectral analysis of a linearized deformation energy.Typically, these energies are related to the Laplacian of the deformed domain, thus leading to eigenvalues that are only decreasing rather slowly. Many modes need to be retained to represent the space of low-energy (i.e., plausible) deformations adequately. If the local matching is not very stiff, the size of the search space explodes. This is intuitive: Permitting local deformations creates a large variety of permissible shape variants, for example by adding different local dents and combinations of those everywhere. Due to this large search space, it is impractical to match shapes purely based on the deformation model of Eq. (6). In order to reduce the large search space for elastic matching, existing methods use additional constraints, such as, template models [40], temporal coherence [39], or fairly large sets of coherent feature correspondences [37].Recently, Kim et al. [18] proposed a new paradigm for the elastic matching problem. First, the method computes multiple dense maps between two shapes by assuming a global near-isometric deformation model. Multiple maps are obtained by fixing different triples of corresponding points for the computation of global conformal maps [10]. Second, the method computes local weights for pairs of maps, depending on their local adherence to isometry, and performs a spectral analysis to combine multiple weighted maps into a single global map. The key idea is to find cliques of similar mappings by clustering approximately compatible maps. The method was shown to perform well in many interesting cases. However, it cannot handle partial mapping; in particular constellations with large topological noise cannot be handled: Each global conformal map can is highly distorted due to the lack of global consistency. This introduces distortions in many of the local matches, and it is not always possible to remove these distortions in the final blended result (as demonstrated in Section 5).Our clustering method (Section 4.4) is based on the same idea, but it combines partial maps instead of global maps, therefore avoiding the mentioned problems of artifacts due to only partial consistency. On the technical side, the main challenge is that we cannot measure the distance between all pairs of candidate maps but only between actually overlapping ones. This is a problem for the original spectral clustering, which we substitute by an alternative technique geared towards sparse pairwise constraints [24].In previous work, there have been a number of attempts to find local isometric mappings, similar to our approach. However, these did not consider mappings between general surfaces but only local planar parametrizations.Different techniques have been proposed to locally parameterize the intrinsic geometry of a surface to a plane using a local approximate isometry criterion. Schmidt et al. [42] used exponential maps to transport a local coordinate system along a surface for the purpose of texture mapping. More recently, Schmidt [43] used transported exponential maps to produce a parameterization of a local surface patch to the plane that has low metric distortion. The local surface patch is provided through user interaction as an input stroke on the surface. Malvaer and Reimers [44] propose an alternative parameterization based on an extension of polar coordinates to surfaces. In our work, we cross-parameterize local surface patches fromStoT. This cross-parameterization is more challenging than a parameterization to the plane due to the arbitrary geometry ofT. Our cross-parameterization task is further complicated as in our application scenario, bothSandTare scanned point clouds with missing surface information and scanner noise. Hence, the reviewed methods cannot be applied in a straight forward manner in our application.We saw that for general surface matching using a global approximate isometry criterion for partial matching (Eq. (4)) is difficult since the domain changes, and that using a local approximate isometry criterion (Eq. (6)) is difficult since this results in a large search space. In this section, we outline our new method: starting from a points∈Sand attached direction inTsSwith known correspondencef(s)∈Tand corresponding attached direction inTf(s)T, we find the largest domainUsuch that Eq. (5) is satisfied.The key assumption of our approach is thatSandTcan be matched using a global approximate isometry in some partial regionUcontainings, implying that Eq. 5 holds. Our goal is to find the largest regionUfor which this assumption is satisfied. This assumption holds in scenarios where we know thatSandTare actually related by a near-isometric map but the data does not comprise all of the original input and/or contains additional unrelated geometry or contacts. The most important practical example where this assumption holds is the acquisition of a surface that deforms near-isometrically but the scanning equipment introduces areas of missing data (shadowed to the scanner by other object parts) and cannot correctly resolve the topology in contact areas (such as the hand of a person being in contact with the body).Our approach can be viewed as a hybrid approach between global and local approximate isometric matching. We use the assumption thatSandTcan be matched using a global approximate isometry in some partial regionU, and we computeUby growing a region using a local approximate isometry criterion. This allows us to combine the advantage of the global methods of having a low-dimensional search space with the advantage of the local methods of being well suited to describe partial isometric matches.LetΘdenote the parameter domain of all partial isometric matchings betweenSandT. Our goal is to compute all partial isometries{fθ,Uθ}θ∈Θthat map maximal subsetsUofStoT. The vectorθ∈Θparametrizes the set of all such mappings.In the following, we will discuss that:•Isometric deformations ofShave three degrees of freedom.A partial isometry can be parametrized byΘ=S×SO(1)×T×SO(1), whereSO(1)denotes the unit circle.There exists a global representation redundancy that identifies all choices of parameterss∈U⊂Sandds∈TsS.For a (sufficiently) smooth Riemannian manifoldSfixing one pointsonS, a tangential directiondsinTsS, and a surface normalnsatssuffices to specify an isometric mapping [23]. For details on the smoothness criteria, refer to [45]. The following proof sketch aims to give the intuition behind this statement for 2-dimensional surfaces embedded inR3by showing that we can transfer the local coordinate frame defined bydsandnsto any point onSin a canonical way.We start with two definitions. The injectivity radiusρsSatsis the largest radius, such that for any pointxonSwith geodesic distance less thanρsSfroms, there is a unique shortest geodesic path betweensandx. The injectivity radius ofSis defined asρS=infs∈S(ρsS).For closed surfaces, the injectivity radius can be bounded from below by the minimum ofπ/supK, where K is the Gaussian curvature, and half of the length of the smallest periodic geodesic [23, Thm. 10]. It follows thatρS>0holds for closed Riemannian surfaces with finite Gaussian curvature. For general surfaces with boundary, the injectivity radius may become zero. Note that in this paper, we consider Riemannian surfaces with finite Gaussian curvature with boundaries. The boundaries are present because the closed Riemannian surface of interest is only partially observed by the acquisition device. In this special case, the injectivity radius is still positive.Imagine thatSis covered by overlapping regions of intrinsic radius less thanρS. These regions are all topologically equivalent to disks. Consider a disk D containing a pointsas shown in Fig. 1. In a small neighborhood ofs,Dis arbitrarily close to the tangent planeTsS. Note thats,ds, andnsfix a local orthonormal coordinate frame inR3. This coordinate frame can be transported to a pointx:x∈D,x≠salong the (unique) shortest geodesic pathPsxfromstoxin D by parallel transport, which can be thought of as repeatedly projecting the directiondsto the tangent planes of consecutive points alongPsxin infinitesimally small steps (for details on parallel transport see for example Berger [23, Chapter 3.1]). Letdxdenote the transported direction. The transferred direction lies in the tangent planeTxS, and can again be used to fix a local orthonormal coordinate frame atx. This transfer can be repeated by chaining together disks until every pointyonSwas assigned a fixed tangential directiondy∈TySby parallel transport along a path connectingsandythat consists of an arbitrary but fixed sequence of (unique) shortest geodesic paths within the chained disks. Note that by construction, we only use intrinsic information to propagate the directiondsto the entire surface. Hence, the resulting local coordinate frames are invariant with respect to isometric deformations ofSwhen encoded relative to fixed local coordinate systemsu(y),v(y),n(y)onS.This implies that any isometric deformation of an oriented surfaceScan be specified using three degrees of freedom: one pointsonS(accounting for two degrees of freedom) and a direction in the tangent plane ofs.We can use the fact that any isometric deformation of an oriented surface can be specified using three degrees of freedom to derive a representationθfor intrinsic mappings. Specifically, identifying one corresponding point and one corresponding tangential direction completely determines an isometric mapping between two oriented surfaces. More formally, to define an isometric mapping between (subsets of)SandT, it suffices to specify a points∈S, its intrinsically corresponding pointt∈T, a tangential directiondsinTsS, and its intrinsically corresponding tangential directiondtinTtT.Starting from this information, and assuming thatSandTare isometric, we can propagate the correspondence information by mapping the metric structure ofSontoTas follows. Starting from the corresponding pointssandtalong with the corresponding directionsdsanddt, we can propagate the correspondence information to a sufficiently small geodesic neighborhoodNsofsby simultaneously walking along corresponding geodesic paths starting atsandt, respectively, and by matching points that are reached at the same time. Here,Nsis sufficiently small if its geodesic radius is belowρS. Once the correspondence information is computed forNs, we continue propagating the correspondence information from a point close to the boundary ofNsto its geodesic neighborhood, and iterate until every point onShas a correspondence.The assumption thatSandTare (near-) isometric can also be used to detect the boundary of the largest regionU⊆Scontainingsfor which the mapping is near-isometric. The reason is that the propagation algorithm allows us to measure the difference in intrinsic geometry in newly mapped parts ofSandTdirectly. Hence, we can stop the region growing algorithm if a newly added correspondence would induce a stretching larger thanν.Fig. 2illustrates the near-isometric region growing process. The plane on the left (S) and the plane with a hill on the right (T) are isometric except for the hill. Beginning with a point and direction match in Fig. 2a, the isometric region grows outward in all directions where the isometry condition is locally satisfied. This way, the largest near-isometric partial match is identified, as shown in Fig. 2d. Note that this region can have a complex topology and geometry.The representation discussed above contains redundant information: Infinitely manyθmay represent the same near-isometric mapping.The first degree of redundancy is the choice of the directiondsin the tangent planeTsS. Changing this direction merely rotates the field of directionsdxinTxS(and similarly, the field of corresponding directionsdyinTyT). Hence, the choice of this direction has no influence on the final result. To remove this redundancy, we start from an arbitrary but fixed directiondsand precompute and fixdxfor allxonS.The second redundancy is the choice of the start points. LetU⊆Sbe the maximal set within which an isometryf:U→Tcan be constructed. We can replacesinθby any other points′∈U. See Fig. 3. This requires an update of the remaining parameters. The directionds′is set to the precomputed value (see above), and the remaining parameters can be updated using the computed mapping f. More specifically,t′=f(s′)and the direction ofdt′is set to the direction off(s′+∊ds′)-f(s′), where∊is set small enough thats′+∊ds′is inU. Thus, in the case of a global isometry, or when we know beforehand the isometric regionU, the mapping f has three degrees of freedom. In the general partial isometry case, however, whereUis unknown, the starting points∈Sis not fully redundant; it still selects the equivalence class that represents a certain partial map; computationally, this is the patch to be matched by the propagation algorithm. This does not increase the complexity strongly as we just have to restart the matching in case multiple partial matches exist. Ideally, we would sample one starting point per partial isometric region, which in practice will be far fewer than there are samples onS. While we do not determine this lower-bound beforehand, we maintain low complexity by using features to identify potential starting points, and marking a starting pointsas redundant if another starting points′produces an isometric regionUcontainings. In case of a mismatch, it can be discovered quickly if the target area does not match, which will become evident within constant time.In summary, all mappings represented bys′,ds′,t′,dt′form an equivalence class in the parameter spaceΘ. Since we can remove one degree of redundancy by fixing the tangential directions onS, for each mapping f we have two degrees of freedom that vary among equivalent maps (the choice of the start point onS), which along with the manifold structure ofUimplies that each equivalence class forms a 2-manifold inΘ, which can be computed directly using the propagation algorithm introduced in Section 3.2.In practice, we can take advantage of this representational redundancy as follows. SinceSandTare discretized and corrupted by noise, the error of the correspondence information computed using the propagation algorithm increases with increasing distance from the start point of the propagation. Hence, it is possible that the propagation stops prematurely due to discretization artifacts and the influence of noise, thereby identifying a regionUthat is smaller than the correct solution. Thanks to the redundancy in the representation, we can start the propagation algorithm from multiple oriented point pairs, identify a set of equivalent mapping functionsfi, and them into a single mapping function f that covers a larger area ofSand is less influenced by noise than the individualfi. The following section discusses a direct implementation of this theoretically motivated method, which we will use to compute correspondences of noisy scanner data.From the preceding analysis, we derive an algorithm for computing partial near-isometries between two surfacesSandT. We start our discussion by outlining how surfaces are represented and how basic steps of the algorithm are implemented (Section 4.1). Our direct, non-optimized implementation is based on enumerating the non-equivalent choices by selecting different oriented point matches (Section 4.2), growing the isometric region locally from there until no more points locally satisfyν(Section 4.3), and finally clustering the partial maps into equivalence classes (Section 4.4). Fig. 4gives a graphical overview of our matching pipeline.In our implementation, the surfacesSandTare either represented as oriented point clouds or meshes. While most parts of the algorithm can be extended to discretized surfaces in a straight forward manner, for some parts of the algorithm we require a continuous surface representation. We obtain a continuous surface representation as implicit moving-least-squares (MLS) manifolds using the robust method of Öztireli et al. [46]. Using this method, a discretized surfaceSis represented continuously as the zero level-set of an implicit function derived from the oriented vertices ofS.Using a MLS representation allows a point to be projected to a continuous representation ofSin the case whereSis given as oriented point cloud or mesh. In the following, whenever we refer to projecting a pointxonto a discretized surfaceS, this projection is implemented as projectingxto the MLS representation derived fromS.One basic operation needed by our algorithm is the computation of geodesic distances and paths onS. In some parts of the algorithms, rough estimates of geodesic distances and paths suffice, and these are computed using Dijkstra’s algorithm. In other parts of the algorithm, it is crucial to have accurate estimates of geodesic distances and paths. In these cases, we initialize a geodesic path P to the Dijkstra path and refine P by minimizing the length of P using the constraint that P must not leaveS. This optimization is carried out iteratively using a conjugate gradient method. After each step, P is projected back toS. In the following, we refer to these refined geodesic distances and paths as smoothed geodesic distances and paths.A core part of our approach is to compare distances measure on the target surface to distances measured on the source for corresponding points. Comparing geodesics between all pairs of correspondences quickly becomes prohibitively expensive and would limit the practical applicability of our algorithm. To remedy this, we construct a topology hierarchy onSsimilar to [47] as follows. We define level 0 of the hierarchy to be the original set of vertices and their connectivity–either the original triangle mesh or the k-nn graph for a point cloud. (In all our experiments involving point clouds, we setk=8.) The sample spacing∊0is defined as the average edge length. Level 1 of the hierarchy is constructed by selecting an evenly spaced subset of the level 0 vertices and connecting vertices in a topology preserving way. Subsequent levelsj+1are constructed in the same way as a subset of level j. At each level the subset for the next level is determined by doubling the desired sample spacing,∊j+1=2∊j. At a coarser level of this hierarchy fewer vertices are connected to any others, but at a greater distance to each other. In our algorithm, we only consider geodesic distances between vertices that share an edge in at least one level of the hierarchy, which results in a sparse set of distances to be optimized, even for a dense set of correspondences.This hierarchical structure ensures that locality is respected, as only geodesics between points that are neighbors in some level of the hierarchy are considered. Having a structure that respects locality is crucial to allow for partial matching. The number of levels in the hierarchy determines the trade-off between local and global isometry constraints. We use 5 levels in all experiments in this paper.Note that during the execution of the matching algorithm, the vertices onSare fixed, as we aim to find a correspondence for every vertex ofSonT(if such a correspondence exists). Hence, we can precompute all geodesic distances onSfor vertices connected in some level of the hierarchy. This way, only distances onTneed to be updated during the metric optimization.In principle, by exhaustively trying all possible starting points and directions, our algorithm will recover all partial isometries. However, since this is infeasible, we reduce the search space using sparse feature matches. This section outlines an algorithm to find features matches. However, note that this part is not a novel contribution of this paper and only given for completeness; in principle, any feature matches can be used to reduce the search space, as demonstrated in Section 5, where we show a result using image-based feature matches from a multi-view capture setup. We denote the feature descriptor at a points∈Swith a vectorDS(s), and similarly for points onT.We identify features onSandTusing the geodesic fingerprint descriptorDS(s)[48], which compares how an isocontour of the geodesic distance from a points∈Sdeviates in length from the isocontour of the same 2D Euclidean distance. We use 10 isocontours in all experiments, for geodesic radii betweenrminandrmax. The values ofrminandrmaxneed to be varied slightly depending on the amount of noise in the input data, and are discussed in Section 5. We define the distinctivenessFS(s)of a points∈Sas the sum ofL1distances to the rest of the vertices ofSin descriptor space. Features are points that locally maximize distinctiveness. The left-most box in Fig. 4 shows features color1For interpretation of color in Fig. 4, the reader is referred to the web version of this article.1-coded by distinctiveness (red for most distinct, blue for least distinct).To find feature matches, we begin by computing the Cartesian product ofL2descriptor distances between features onSandT. The vast majority of these are not correct mappings between the surfaces. We filter these potential feature matches using both theL2distances between descriptors and the distinctiveness of the features. More precisely, for each featuresonS, we only consider the K features ofTthat have the closest descriptor matches tos. (We useK=10in all our experiments.) The initial dissimilarityδs,t(init)between two featuress∈Sandt∈Tis defined as(7)δs,t(init)=-logFS(s)+ωDDS(s)-DT(t)22,whereωDis a weight. (We useωD=400in all our experiments.) This dissimilarity is minimized for features with high distinctiveness that are similar in descriptor space.This procedure often produces a good set of sorted feature matches on clean data. For noisy data from real scanners, however, the descriptors will be less discriminative, and considering spatial relations between features in addition to descriptors and distinctiveness leads to more reliable feature matches.To do this, we iteratively build (possibly overlapping) clustersCiof consistent feature matches. In each iteration, the feature match(s,t)with the next lowestδs,t(init)is chosen as a starting point forCi. The clusterCiis built by repeatedly adding the close-by feature match that has the lowest dissimilarity toCi. More precisely, letCi={(sj,tj)}. In the next step, all featuress′∉Cithat are neighbors ofsjin the topology hierarchy are considered, along with their K potential matchest′∈T. The dissimilarityδCi,(s′,t′)between a feature match(s′,t′)and clusterCiis defined as(8)δCi,(s′,t′)=δs,t(init)+ωC∑(sj,tj)distS(sj,s′)-distT(tj,t′)2,whereωCis a weight. (In all our experiments, we setωCto one over8×the square of the average edge length onS). We repeatedly add the match(s′,t′)with smallest dissimilarityδCi,(s′,t′)toCias long asδCi,(s′,t′)is below a threshold. (We use threshold11.5≈-log10-5in all our experiments.) We stop adding new clusters once the sum of the cardinalities of the clustersCiexceeds the initial number of feature matches.Note that the above clustering scheme is equivalent to modeling both the descriptor distances and the summed stretches of geodesic distances of a feature match to a cluster as normally distributed. Hence, the above stopping criteria correspond to stopping the clustering once the joint probability of a match belonging to a cluster becomes small.After the clustering, we place the feature matches(s,t)in a min-priority queue, so that we start isometric region growing first from the matches we expect to be most reliable. A feature match(s,t)is assigned priority∞if(s,t)is not part of any clusterCiand priorityminCi:(s,t)∈CiδCi,(s′,t′)otherwise. We repeatedly take the minimum element from queue and use it to generate partial isometric mappings using the region growing of Section 4.3.However, so far we have only established a positional correspondence between features, and we need a directional correspondence as well to fix the partial isometry we wish to grow. To establish direction, we build a min-priority queue as outlined above, but only with the subset of features in the neighborhood of the current positional match in the topology hierarchy. Matches of neighboring features allow us to find corresponding tangent plane directions from corresponding smoothed geodesic paths between feature points.Once a partial isometry has been computed, we increase the priority of feature matches that are redundant given the already computed partial match. If the same source and target points are already matched, by our model, the result of running the growing again from those same points will be equivalent.To keep the run-time of our method bounded, we stop after a fixed number of oriented point matches have been tried. (We use 200 in all our experiments.) A more general stopping criterion could be devised based on determining the maximal coverage ofSandTsubject to a consistent mapping. The second box from the left of Fig. 4 shows three oriented feature matches found using this method.Starting from an oriented point matchs,ds,t,dt, we grow the regionUby adding matches incrementally in the local neighborhood of the boundary ofU. For a new pointunear the boundary ofUsuch thatu∉U, letN1(u)denote the neighborhood ofuin level 1 of our topology hierarchy. We use parallel transport along corresponding directions inSandTemanating from an oriented point matchs′,ds′,t′,dt′, wheres′∈U∩N1(u)is in a local neighborhood ofu. We know the full path betweens′anduonS, and fromds′anddt′we know the corresponding start direction onT. Hence, we can transport the start direction along corresponding paths onSandTuntil we have traveleddistS(s′,u). In practice, we implement parallel transport by moving in small steps in the tangent plane, and by reprojecting the resulting point to the surface and updating the tangent to the path. We use smoothed geodesic paths to transport the position of the new match onTto reduce discretization errors for differently sampled surfaces. For robustness, we use all available oriented point matches inN1(u)and take the Riemannian center of mass [49] of the transported points, where all transported points have equal mass.The newly matched source pointuis added toUonly if it locally respects the stretch factorνas given in Eq. (5). This is necessary for two reasons. First, subsequent matches will be estimated based on the assumption that the existing matches are near-isometric. Second, as discussed next, we use a nonlinear least-squares optimization to refine the positions of the matched points onT, which effectively distributes the error evenly over the matched region. To avoid introducing errors, it is therefore important to verify that each newly added point match locally respects the stretch factorν.To reduce the effect of quantization errors and noise, we optimize the metric matching ofUusing a non-linear optimization technique [14] every time the area ofUhas doubled. This means more frequent optimizations at the start of the growing process. This optimization reduces the amount of drift as it re-aligns the matched regions while taking into account long geodesics, between neighbors in the top level of our topology hierarchy, inU. For increased efficiency, we only consider edges in the topology hierarchy ofS(explained in Section 4.1) during the optimization.An important difference to the global approach used by Bronstein et al. [14] is that we optimize the metric only using geodesic paths which are entirely withinUandf(U). This models the isometry criterion in partial regions and is crucial to handling topology changes and missing data. Note that such defects may cause large differences betweendistS(x,y)anddistU(x,y), as well asdistT(f(x),f(y))anddistf(U)(f(x),f(y)), respectively. The second box from the right in Fig. 4 shows the first three partial isometries found by growing isometrically from oriented feature matches in our priority queue.The proper value for the stretching thresholdνdepends on a number of factors: material properties, the resolution at which the surface is sampled (as it affects the accuracy of the Dijkstra paths), and the noise of the acquisition process. In our experiments, we do not consider material properties, and we assume that the acquisition noise has an equal influence on both source and target. Hence, we setνto0.5∊0to account for quantization effects in the computation of geodesics.It remains to identify and merge a set of partial mappings that represent the same mapping function f. If the surfaces were related by exact isometries and noise was negligible, the following step would not be required. However, for real-world data, the identification of functions that are approximately equivalent improves the results substantially.The problem at this point similar to the blending problem by Kim et al. [18]. Recall that their approach uses a spectral method to find blending weights for different maps. This is a good approach in their case as blending weights are given as the solution to a quadratic energy function. Note that since in our model, equivalent mappings form a 2-manifold in parameter spaceΘ, and the parameter spaceΘis non-linear, it is not appropriate to use a spectral approach.However, we can take advantage of the property that equivalent mappings form a 2-manifold inΘ. We employ the agglomerative clustering algorithm of Zhang et al. [24] for discovering manifold structures in high-dimensional data based on the in-degree and out-degree of the nearest-neighbor graph of points in high-dimensional space. In our case, we consider the nearest neighbor graph of partial isometric mappings, where the dissimilarity between these points inΘis measured as follows.We compare different mapsfiandfjusing a dissimilarity measure based on their domainsUiandUj:(9)dΘ(fi,fj)=W1∫UijdistT(fi(x),fj(x))dx+W2∫fi(Uij)∩fj(Uij)distS(fi-1(y),fj-1(y))dywhereUij=Ui∩Uj,W1=1A(Uij),W2=1A(fi(Uij)∩fj(Uij)), andA(·)denotes the surface area. In practice, we compute a discrete version of this dissimilarity by replacing integrals over regions by sums over vertices in the region. We cluster different mappings together until the maximum affinity between any two clusters is greater than a thresholdρ. Affinity is computed from the weighted graph degree between mappings, where the weights have a double-exponential fall-off asdΘincreases. See Zhang et al. [24] for details. While the direct relation ofρto the allowed stretch is not easily defined, it should be lower when we want to allow for greater stretching between partial maps. We only have to adjust this value in a few cases in our experiments, as discussed in Section 5. Following the clustering, we select for our final mapping the cluster with the highest intra-cluster affinity, or connectivity, as proposed by Zhang et al. [24]. This most often correlates with the cluster that covers the largest portion of the surface.We merge clustered maps by computing a weighted geodesic average onTfor each source point in the union of the mapped regions as(10)f(x)=argminy∈T∑iwi(x)distT(y,fi(x)),wherefiare the clustered partial isometries, which we want to merge into f. The weights are computed as an exponential distribution in the geodesic distance from the starting point matchsiaswi(x)=exp(-λdsdistUi(x,si)), reflecting that we expect errors to accumulate as the growing proceeds because of discretization artifacts, data noise, and deviations from isometry. We setλds=1/(5∊1), where∊1is the sample spacing of the level 1 of the topology hierarchy described in Section 4.1. Note that this is equivalent to finding the Riemannian center of mass [49] of the estimatesfi(x). The right-most box of Fig. 4 shows the final clustered and merged result.

@&#CONCLUSIONS@&#
