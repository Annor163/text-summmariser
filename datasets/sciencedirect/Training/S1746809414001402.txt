@&#MAIN-TITLE@&#
A dynamic submatrix-based P300 online brain–computer interface

@&#HIGHLIGHTS@&#
A dynamic SBP online BCI is proposed and implemented in this paper.Two threshold algorithms are proposed and compared.The number of sequences is dynamically limited by the threshold of our algorithm.Compared with CBP and NFA, the results show significant improvement of practical ITR.

@&#KEYPHRASES@&#
Brain–computer interface,Submatrix-based paradigm,Dynamic algorithms,Online,P300,

@&#ABSTRACT@&#
The P300 brain–computer interface (BCI) system relies on an oddball paradigm to elicit the P300. Besides the traditional row/column paradigm (RCP), many visual paradigms have been proposed for the P300 BCI. In our previous work, submatrix-based paradigm (SBP) was proposed and proven to be superior to the RCP in performance and user acceptability. To further improve the performance and realize an online BCI system, a dynamic SBP online BCI is proposed in this paper. The dynamic algorithm employs a threshold which dynamically limits the number of sequences. Based on analyzing the distribution characteristic of P300 in SBP, two threshold algorithms named the maximum value algorithm and the pseudo-kurtosis algorithm are proposed and compared. Online experimental results show that both dynamic algorithms can improve the performance of the SBP P300 speller, and the mean practical bit rate of the maximum value algorithm is 34.36bits/min, which is 9.04% higher than that of checkerboard paradigm (CBP) and 11.2% higher than that of Jin's n-flash adaptive system (NFA).

@&#INTRODUCTION@&#
Brain–computer interface (BCI) systems establish a direct link between the brain and the external world, without using any normal output pathways of the brain, which is composed of peripheral nerves and muscles [1]. In the non-invasive BCIs, electroencephalographic (EEG) signals are easily recorded through electrodes placed on the scalp, which is the most widespread recording modality so far [2]. Several types of EEG signals can be used to control a BCI system [2] such as slow cortical potentials (SCPs), event-related (de)synchronization (ERD/ERS), steady-state visual evoked potentials (SSVEPs), and event-related potentials (ERPs). One of the most commonly used ERPs is the P300 potential, which is produced in the oddball paradigm and manifests as a positive peak about 300ms after the presentation of the stimulus [3]. The advantages of P300 include high stability, no need for initial training and reasonably high information transfer rates (ITRs) [2,4].Since the P300 speller was first introduced by Farwell and Donchin [3], much of the research has concentrated on developing new recording methods, stimulus presentation paradigms, signal processing algorithms and applications [5]. There has been great progress in improving P300 speller's accuracy and speed. Many different stimulus presentation paradigm has been introduced and researched, such as the CBP [6], NFA [7] and C(m,n) paradigm [8]. As C(m,n) paradigm is a universal extension of the CBP, it is a general approach that can generate the RCP and the CBP, or any other possible ways to present the stimuli. A particular instance of C(m,n) paradigm called five flash paradigm (FFP) has been explored and proved to achieved high accuracy and bit rates [8].In our previous work, a new visual stimulus presentation paradigm called the submatrix-based paradigm (SBP) was proposed [9]. SBP eliminates adjacency-distraction and double-flash errors that exist in the traditional row/column paradigm (RCP), and use the sequence number as a parameter to further improve the accuracy and ITR. Offline simulation results show that the SBP is superior to the RCP in performance and user acceptability [9].In this paper, the SBP P300 speller is implemented online, and dynamic algorithms are introduced to further improve the ITR. Due to the low signal-to-noise ratio (SNR), stimulus repetitions are required in the experiments. In addition, ensemble averaging is commonly performed to detect a reliable P300. Of course, there is a trade-off between the speed and accuracy of the system. However, in order to make a decision, the number of stimulus repetitions is variable due to the non-stationary of EEG signals. If the subject gives a significant response, few stimulus repetitions are needed to make a decision; otherwise, more stimulus repetitions are needed [10]. The dynamic algorithms could dynamically limit the number of repetitions. Several alternative methods have been described in the literature [11], but most of them were proposed for RCP. SBP is a new paradigm and there exist new traits in SBP, which can be used to further improve the performance. In the following sections, the distribution of P300 in SBP and new dynamic algorithms are investigated.The rest of the paper is structured as follows: Section 2 describes the SBP we have proposed in our previous work and details the methodology that we use to improve the ITR. In Section 3, the results achieved in the online experiments are presented and compared with other studies. Finally, some conclusions are given in Section 4.SBP divides the traditional 6×6 keyboard matrix into four 3×3 submatrices. Each submatrix flashes in single cell paradigm (SCP) mode [12] and is independent of other submatrices. In each trial, four characters coming randomly from different submatrices are intensified. There are nine trials, and all characters flash once in an SBP sequence [9]. The characters in each submatrix are numbered from 1 to 9 independently. The positions of the flashing items are determined by four-digit numeric “Code” in each SBP trial. The digit position of the “Code” and the digital value represents the submatrix position and the character number in each submatrix, respectively. For example, Code=4285 means that the four characters in this flashing trial are: the fourth character in the upper-left submatrix, G; the second character in the upper-right submatrix, E; the eighth character in the lower-left submatrix, 6; and the fifth character in the lower-right submatrix, 3, as illustrated in Fig. 1[9].For each submatrix, ensemble averaging is performed separately. With the increasing numbers of sequences, ensemble averaging can enhance the P300 potential SNR for the target submatrix, while theoretically averaging to zero for non-target submatrices. Take the recognition of character “E” in our online SBP experiment as an example to illustrate the implementation of enhancing the SNR as shown in Fig. 2.P300 can be elicited when the “Code” contains the target character. Unlike RCP, there is only one target stimulus in a SBP sequence. In Fig. 2, the “Code” in the black box can elicit a P300, the solid arrow line indicates the order of flashing items, and the numbers in the 6×6 matrix indicate the distribution of P300. The distribution of P300 is calculated by the position information of the “Code”. Ensemble averaging with the first two sequences and 15 sequences is shown in Fig. 2(a) and (b) respectively.In our previous work [9], the support vector machine (SVM) algorithm was used to detect P300. The SVM score was computed for each trial, and after 15 sequences, the sum score of each character in four submatrices was performed separately. Fig. 3shows the scores assigned to each character of submatrices for the dataset in Fig. 2. The submatrices are independent of one another, and they are represented by different types of score curves in Fig. 3. The maximal score locates in the second character of the upper right submatrix, that is “E”. Therefore, the target character can be recognized correctly.According to the principle of SBP, a reliable P300 can be detected with ensemble averaging. Figs. 2 and 3 illustrate that the distribution of P300 in SBP has the following characteristics: first, all P300 components are focused on a target character of the target submatrix, but they are distributed randomly in a non-target submatrix. The score of the target character is higher than that of other characters. Second, in theory, there is no P300 component, but only noise is added to EEG data of the non-target characters in the target submatrix. So, ideally, the scores of the non-target characters in the target submatrix are much lower, and the variance is small. The score curve of the target submatrix in Fig. 3 should be relatively flat excluding the point of the target character. Third, only the SNR of the target character can be enhanced with an increasing number of sequences.The ITR in a P300 BCI can be improved by decreasing the average number of sequences. Lenhardt et al. [13] employed a threshold which dynamically limits the number of subtrial presentations. Similar approaches have been introduced to BCI [10,14,15]. In the RCP, P300 components are distributed in the same row or column of the target character, and most errors occur within the same row and column [6]. However, distribution of P300 between SBP and RCP is different, so a new dynamic algorithm should be investigated for SBP. By analyzing the distribution characteristic of P300 in SBP, two threshold algorithms are proposed and compared.After several sequences in SBP, ensemble averaging is performed separately for every submatrix. P300 components focus on the target character, which can be the maximal score of SVM, so the character with the maximal score should be recognized as the target character. The maximum value algorithm principle is similar to the method in RCP [10,13]. For the four 3×3 submatrices shown in Fig. 1, the criterion function of the maximum value algorithm in SBP is defined as:(1)Mi,j=∑n=1NSi,j(n)where S is the classifier output, i∈[1–4] is the submatrix, j∈[1, 2, …, 9] is the character number in each submatrix, and n is the number of sequences. If Mi,jis higher than the predefined threshold, the corresponding character determined by i and j is chosen as the cognition result. The threshold is predefined with offline EEG data according to a certain criterion. In this paper, an optimal threshold should ensure the obtainment of maximal practical ITR.Kurtosis is a measure of peakedness of a distribution [16]. For a target submatrix, the scores of the non-target characters are much lower, and their standard deviation is small. However, for a non-target submatrix, the standard deviation is higher because the corresponding EEG signals of characters may be added with some P300, and the score increases with increasing the number of P300. The scores of characters and the different score features between the target submatrix and non-target submatrix can be used to recognize the target character. In this paper, a pseudo-kurtosis algorithm is proposed. For the four 3×3 submatrices shown in Fig. 1, the criterion function of the pseudo-kurtosis algorithm is defined as:(2)Ki,j=Mi,jstd(Mi,j¯)qwherej¯is not equal to j,Mi,j¯=[Mi,1,…,Mi,j−1,Mi,j+1,…,Mi,9],Mi,j=∑n=1NSi,j(n), S is the classifier output, i∈[1–4], j∈[1, 2, …, 9], std is standard deviation, and q is an exponent used to adjust the effect of other characters within the same submatrix. The value of q is relevant to the SNR of the EEG signal, q=0.2 in this paper according to our previous experience and experiment results. If Ki,jis higher than the predefined threshold, the corresponding character determined by i and j is chosen as the cognition result. The threshold selection of the pseudo-kurtosis algorithm is the same as that of the maximum value algorithm described below.Seven healthy subjects, six males and one female, within the age range of 20–27 years old were participated in this experiment. During data acquisition, subjects sat in a comfortable chair approximately 1m away from a CRT monitor. The general-purpose BCI software platform BCI2000 [17] was used for stimulus presentation and data collection. EEG signals were amplified and digitized by a 64-channel Neuroscan Synamp2 system, band pass filtered between 0.1 and 50Hz, and sampled at 250Hz. Ten electrodes Fz, C3, Cz, C4, P3, Pz, P4, PO7, PO8, and Oz were used for the BCI operation [5,18–20], and all channels were referenced to the left mastoid and grounded to the right mastoid.The subjects viewed a 6×6 matrix of characters as shown in Fig. 1 without dashed lines. The paradigm was presented in copy-spelling mode in which subjects had to gaze on the prescribed target character which had been predefined intently. Meanwhile, the subjects were instructed to count the number of times that the target character flashed. Each subject completed nine runs on different days within a two-week period. In the first five runs, each run consisted of ten random characters and was recorded without feedback. Data acquired offline were used to train classifiers. In the last four runs, subjects were provided with assigned strings “HANGZHOU_XIHU” and “WELCOME_MY_FRIENDS” which were realized in the online feedback system with two threshold algorithms, respectively.For each character epoch in the run, SBP is designed as follows: the prescribed character was displayed for 3.48s to ensure that participants could find the target character during the allotted time. Four characters selected randomly from four submatrices flashed for 80ms, and then there was a 40ms delay with the gray character matrix. Thus, each trial took a total time of 120ms. There were nine trials in a sequence, so the time required in a sequence was 1.08s. The sequence was repeated 15 times for each epoch in the first five runs. But during online operation, a threshold was designed to dynamically limit the number of sequences. The minimum number of sequences required to reach a decision was set to 2. A decision was made after the 15th sequence even if the threshold had not been reached. After each target character was presented, a 3.48s pause ensued before the next target character occurred.During offline analysis, five runs of recorded EEG signals were filtered with an 8-order band pass Chebyshev Type I filter [20] with 0.1Hz and 12Hz cutoff frequencies, and decimated by selecting every tenth sample from the filtered signals. For each channel, we extracted all samples between 0 and 600ms after the beginning of intensification. So an extracted signal from a single channel was composed of 15 samples [9]. In the classification stage, SVM with a polynomial kernel was used for training and classification because SVM is a powerful classifier and proved to be superior in many BCI experiments [18,20]. To find out the optimal threshold for the online system, 5-fold cross-validation was implemented: among the five runs of recorded EEG signal, a single run is retained as validation data for testing the classifier using the ensemble strategy [20] which won in P300 classification of BCI competition III, and the remaining four runs are used as training data. The cross-validation procedure is then repeated five times, with each of the five runs used exactly once as the validation data. The five results from the folds were averaged to research the variances of classification accuracy, recognition time (number of sequences), and ITR when the threshold changes.The optimal threshold was predefined with fixed sequences of offline EEG data according to a certain criterion. Take the first five runs of EEG signals from a subject as an example, the relationship of classification accuracy, number of sequences, and threshold with the maximum value algorithm was shown in Fig. 4(a). The solid line represents the relationship between classification accuracy and the threshold, and the dashed line represents the relationship between the number of sequences and the threshold. With the increase of the threshold, in general the classification accuracy is improved, and it is up to 100% when the threshold is greater than 4.6. The number of sequences also shows an increasing trend, and it is up to 15 when the threshold is greater than 8.8.Since a BCI is a communication system, the best measure of the system's performance is ITR, which takes both the number of possible selections and the accuracy of communication into account [21]. However, ITR does not consider the fact that every error results in a penalty of two additional selections, so it is much more reasonable to use practical ITR to estimate the actual speed of communication [6,22,23]. Therefore, practical ITR is used to find the optimal threshold. ITR and practical ITR were calculated as follows [6,21]:(3)B=log2N+Plog2P+(1−P)log21−PN−1(4)PB=B(2P−1)Twhere B is the ITR, PB is the practical ITR, N is the number of possible selections, P is the classification accuracy, and T is the recognition time. So the optimal threshold should ensure that the maximal practical ITR be obtained. According to the test results in Fig. 4(a), the practical ITR of the subject is calculated, and the relationship of practical ITR and the threshold is shown in Fig. 4(b). In general, as the threshold increases, the practical ITR increases first, and then decreases, so there is a maximum ITR. In Fig. 4(b), a maximal practical ITR 35.02bits/min can be found when the threshold is 2.4. The threshold is predefined for an online system as the optimal threshold.

@&#CONCLUSIONS@&#
This paper implements a dynamic online P300 BCI based on the research of SBP. To further improve the accuracy and ITR, dynamic algorithms, which dynamically limit the number of sequences, are investigated for the SBP P300 speller. Compared with traditional RCP, the distribution characteristic of P300 in SBP is different. Based on analyzing the distribution characteristic of P300 in SBP, two threshold algorithms are proposed and compared. Online experimental results show that both dynamic algorithms can improve the performance of the SBP P300 speller. The performance of the maximum value algorithm is slightly better than that of the pseudo-kurtosis algorithm, but the difference is not statistically significant. Compared with other paradigms, the proposed dynamic SBP P300 speller can lead to better performance. The mean practical ITR of the maximum value algorithm is 34.36bits/min, 9.04% higher than that of CBP and 11.2% higher than that of NFA. With the increasing number of possible selections, the proposed dynamic SBP P300 speller can further improve the communication speed.