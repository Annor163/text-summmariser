@&#MAIN-TITLE@&#
Scenario-based model predictive control for multi-echelon supply chain management

@&#HIGHLIGHTS@&#
New method based on recent, groundbreaking results in scenario optimization.Applicable to many different models in operations research/supply chain mgt.Handles uncertain parameters of a very general type and distribution.Computationally efficient, hence applicable to large problem instances.Many open theoretical questions and a large range of further applications.

@&#KEYPHRASES@&#
Stochastic programming,Applied probability,Model predictive control,Scenario-based optimization,Randomized algorithms,

@&#ABSTRACT@&#
Policies for managing multi-echelon supply chains can be considered mathematically as large-scale dynamic programs, affected by uncertainty and incomplete information. Except for a few special cases, optimal solutions are computationally intractable for systems of realistic size. This paper proposes a novel approximation scheme using scenario-based model predictive control (SCMPC), based on recent results in scenario-based optimization. The presented SCMPC approach can handle supply chains with stochastic planning uncertainties from various sources (demands, lead times, prices, etc.) and of a very general nature (distributions, correlations, etc.). Moreover, it guarantees a specified customer service level, when applied in a rolling horizon fashion. At the same time, SCMPC is computationally efficient and able to tackle problems of a similar scale as manageable by deterministic optimization. For a large class of supply chain models, SCMPC may therefore offer substantial advantages over robust or stochastic optimization.

@&#INTRODUCTION@&#
Methods for the automated management of supply chains continue to attract significant research attention (Sarimveis, Patrinos, Tarantilis, & Kiranoudis, 2008). The main reason is that even small improvements carry an enormous potential for cost savings and performance enhancement in actual supply chain systems (Geoffrion & Powers, 1995). However, the mathematical formulations of multi-echelon supply chain problems poses great challenges for modern theories of optimization and control. In essence, these formulations represent large-scale dynamic optimization problems, affected by uncertainty and incomplete information.The difficulty of these problems precludes the exact computation of stochastic optimal control policies, except for very special cases (Federgruen, 1993; Li & Marlin, 2009; Sarimveis et al., 2008). A variety of approximation approaches have therefore been proposed, and shown to be effective for certain problem types. One promising direction are methods related to model predictive control (MPC); see Mayne, Rawlings, Rao, and Scokaert (2000) for an overview. Various studies have demonstrated the potentials of MPC to reduce the operation costs of inventory systems and supply chains, e.g., Perea-López, Ydstie, and Grossmann (2003), Rasku, Rantala, and Koivisto (2006), Sarimveis et al. (2008), and Maestre, Muñoz de la Peña, Camacho, and Alamo (2011). Moreover, MPC-based algorithms have successfully been applied for inventory control in pharmacies (Jurado et al., 2016), the semiconductor industry (Wang, Rivera, & Kempf, 2005), and drinking water networks (Grosso, Ocampo-Martínez, Puig, & Joseph, 2014).MPC assumes that a model of the actual supply chain is available to the decision maker. This model is used to predict the state of the system (inventories, service level, etc.) over a fixed time horizon, and to optimize the operational decisions (production, shipments, etc.) through an optimization program. The model, however, may contain inaccurate parameters (capacities, etc.) or uncertain quantities (demands, lead times, etc.). MPC is known to have good robustness properties with respect to mismatches between model and system parameters (Braun, Rivera, Carlyle, & Kempf, 2003a; Braun, Rivera, Flores, Carlyle, & Kempf, 2003b). Another advantage of MPC is that available forecasts on uncertain quantities can easily be integrated into the planning problem (Bose & Pekny, 2000).The MPC theory is concerned with dynamic control – i.e., using numerical optimization in a rolling horizon implementation to optimize the long-term performance of the supply chain. In particular, the objective of MPC is to minimize the long-term costs of operation, while respecting the capacity constraints and maintaining a specific customer service level (Bose & Pekny, 2000). In this respect, it is well known that an explicit uncertainty model generally improves the performance of MPC over a deterministic-equivalent approach (Li & Marlin, 2009; Sohdi & Tang, 2012). This is because the uncertainty model conveys important information about the variability of uncertain quantities, as compared to substituting them by their expected or the most likely values.Two uncertainty models have previously been considered for integration into MPC: robust models and stochastic models; see Bertsimas and Thiele (2004) and Sohdi and Tang (2012). Robust models consider uncertainties to be set-bounded, so the resulting decisions are made irrespective of the probability of scenarios (Li & Marlin, 2009). Stochastic models have difficulties in handling multiple types of uncertainties with general correlations, or they are computationally intractable for realistic systems (Yıldırım, Tan, & Karaesmen, 2006).This paper presents a novel way of handling uncertainty in MPC, namely by considering sampled uncertainty scenarios. Hence the approach is called scenario-based model predictive control (SCMPC). As the sampled scenarios are eventually fixed, SCMPC can handle uncertainties from various sources (demands, lead times, prices, etc.) and of a very general nature (distributions, correlations, etc.). The underlying theory configures SCMPC to satisfy a specified customer service level in its rolling horizon implementation. At the same time, SCMPC is computationally efficient. It is able to tackle problems of a similar scale as manageable by deterministic optimization.The paper is organized as follows. The remainder of Section 1 provides a brief review on existing approaches for supply chain management and an introduction to the proposed method. Section 2 introduces an exemplary supply chain model, which is considered as a case study throughout the paper. The novel method described in Section 3 is indeed far more general, since it can be applied to a large variety of different models. For a demonstration of its properties, Section 4 presents some results obtained from numerical experiments. Finally, Section 5 provides a brief summary and conclusion.Since the seminal work of Clark and Scarf (1960), a great variety of quantitative methods have been proposed for the management of multi-echelon supply chains. Two fundamental approaches can be distinguished according to Federgruen (1993): centralized approaches and decentralized approaches. Both approaches are discussed briefly below.In a decentralized approach, each node of the supply chain network manages its inventory locally, typically as a pull system. The local replenishment decisions are commonly based on a base-stock policy or a (s, S)-policy (Simpson, 1958). The placement of safety stocks constitutes a strategic and centralized decision of supply chain design, with a critical effect on the overall performance of the system (Graves & Willems, 2003).A key advantage of the decentralized approach is that – after the base stock or order levels have been determined – the supply chain operation is simple and requires little computations. Therefore, well-tuned decentralized base-stock policies have been successfully deployed in several industrial applications (Graves & Willems, 2003). The base-stock policies can also be adjusted to cope with non-stationary demands, as shown by Graves and Willems (2008). Moreover, they can also account for capacity constraints, as in Schoenmeyr and Graves (2009a), and for evolving demand forecasts, as in Schoenmeyr and Graves (2009b).However, decentralized approaches face a number of potential drawbacks. First, multiple products may share a single capacity constraints for processing or transportation. Then it remains unclear how these products should be prioritized or how long they should be procured in advance. Second, base-stock policies are unable to choose between multiple sources for their supply. Therefore they are limited to simple network topologies. Third, the base-stock levels may have to be adapted in a dynamic manner. But these adjustments may cause the undesirable bullwhip effect, as described by Lee, Padmanabhan, and Whang (1997) and Sarimveis et al. (2008). In fact, higher demands lead to higher base stocks levels at all stages of the supply chain, and hence a disproportionate wave of replenishments propagates upwards through the supply chain. Fourth, the manufacturing stages may not have the flexibility to adjust their production as an instantaneous reaction to customer demand. Sohdi (2005) argues, for example, that for the consumer electronics industry the production schedule must usually be fixed several weeks in advance.Some of these shortcomings have been addressed by decentralized MPC, where separate MPC policies are designed for the local use in multiple parts of the supply chain; see, e.g., Bose and Pekny (2000) and Perea-López et al. (2003). The design typically assumes a cooperative management, as opposed to a non-cooperative management (Subramanian, Rawlings, Maravelias, Flores-Cerrillo, & Megan, 2013). This means that the local decisions are made with the intent to optimize the overall performance of the supply chain. The goal of decentralized MPC is then to recover, as closely as possible, the performance of centralized MPC, while lowering its computational burden.Centralized approaches can address the aforementioned issues by optimizing the decisions for the entire supply chain. They are often organized as push systems. A fundamental requirement is the existence of a central coordinator, who has access to all local information, and the authority to make all relevant decisions throughout the network (Perea-López et al., 2003).For centralized approaches, the decisions of each node are usually determined by solving one (or several) comprehensive mathematical program(s) for the entire supply chain. To this end, a large variety of mathematical models have been proposed; see, e.g., Mula, Peidro, Díaz-Madroñero, and Vicens (2010) for a survey.Centralized approaches may potentially reap the benefits from coordinated action of all nodes in the supply chain network. They are able to allocate limited capacities to multiple products and also to handle multiple suppliers with possibly different prices (Chen & Wang, 1997). Moreover, they can cope with very general network topologies and the integration of forecasts is straightforward (Rømo et al., 2009; Sohdi, 2005). They have also been successfully implemented in industrial applications (Lababidi, Ahmed, Alatiqi, & Al-Enzi, 2004; Sohdi, 2005).The main bottleneck of centralized approaches lies in the numerical solution to a typically large-scale mathematical program. In particular, the problem dimensions grow with the time horizon, the number of products, and the network size. Furthermore, the problem becomes distinctly more difficult if it also accounts for uncertain parameters (Sohdi & Tang, 2012). Therefore many existing contributions have chosen a certainty-equivalence approach, where uncertain quantities are substituted by fixed values (e.g., their expected or most likely values). However, this may lead to a considerable performance degradation, as shown by Li and Marlin (2009)and Sohdi and Tang (2012).This paper presents a novel centralized approach for multi-echelon supply chain management. Its key merit is the inclusion of uncertain parameters of very general nature, while it retains a computational complexity that is similar to deterministic approaches. The presented method can be used with a great variety of different supply chain models. It builds on recent results of Campi and Garatti (2008) on the scenario-based optimization approach (scenario approach) and of Schildbach, Fagiano, Frei, and Morari (2014) on scenario-based model predictive control (SCMPC).SCMPC solves, repeatedly, an optimal planning problem over a finite time horizon. Unlike most centralized approaches, SCMPC analyzes its rolling horizon implementation rather than just the finite horizon optimal solution. In the long run, SCMPC keeps capacity constraints as well as pre-specified customer service levels, which are defined as the fraction of time steps in which customer demands are met from available inventory (Bitran & Yanasse, 1984; Bookbinder & Tan, 1988). At the same time it aims at keeping the long-term operational costs low.SCMPC can handle supply chains with multiple operational uncertainties over the planning horizon – such as demand quantities, lead times, production yields, perishable inventories, backlog carry-overs, prices, etc. (Oke & Gopalakrishnan, 2009). For notational convenience, they are combined into a large random uncertainty vector δt∈ Δ. SCMPC can also incorporate estimations or forecasts on these uncertainties. In this case, δtrepresents the random deviation from the nominal forecast that is available. The distribution of δtis completely arbitrary – as long as a sufficient number K of independent samples (i.e., the scenarios) can be obtained in each time step t. In particular, there are no restrictions on the dimension of δt, nor on the type of distribution or on the correlations. The distribution of δtmay also be time-varying and correlated in time.SCMPC bases its decisions on a particular number K of sampled scenarios. Since the scenarios are sampled at random, SCMPC is essentially a randomized algorithm. After this randomization, however, the optimization problem becomes deterministic and fixed. The key advantage of this procedure is computational efficiency, allowing SCMPC to handle problems of similar scale as those within the reach of deterministic algorithms. Moreover, it means that the included uncertainty variables can be of arbitrary dimension and follow any joint distribution function, as long as fixed samples can be obtained for it.The number of sampled scenarios K can be shown to stand in a precise inverse relationship to the desired service level. Moreover, K turns out to be relatively small for most problems and does not grow with the horizon or problem dimensions. Compared to multi-stage stochastic optimization, SCMPC thus avoids the combinatorial complexity arising e.g., from the exhaustive sampling from a (binary) scenario tree used by Sohdi and Tang (2012). Compared to robust optimization, SCMPC accounts for the probability of scenarios and needs to handle only a finite uncertainty set in the computations; compare Bertsimas and Thiele (2004).The SCMPC method proposed in this paper can be used with a great variety of supply chain models (Schildbach et al., 2014). Here a concrete case study is introduced for illustration purposes, which is comparable in size and type to the deterministic model of Perea-López et al. (2003). Its basic structure is depicted in Fig. 1.The supply chain model has been selected as a typical example of models that may appear across several industries (Geoffrion & Powers, 1995), such as consumer electronics (Sohdi, 2005), chemical products (Perea, Grossmann, Ydstie, & Tahmassebi, 2000), or retail goods (Simchi-Levi, Kaminsky, and Simchi-Levi, 2008, Cha. 2). The time period T over which the system is operated is considered to be ‘very long’; that is much longer than a sensible planning horizon.The supply chain model has a tree-like structure with simple loops, three supply chain stages (or echelons) and multiple facilities per stage. The first echelon consists ofL=3suppliers or production facilitiesl∈L:={1,…,L}; the second echelon consists ofM=5warehouses or distribution centersm∈M:={1,…,M}; and the third echelon consists ofN=15customers or retail storesn∈N:={1,…,N}.Products can be shipped along the pre-defined routes, as indicated by arrows in Fig. 1. These routes could vary with time, but here they are assumed to be constant. Mainly downstream shipments are considered, with the additional possibility for a re-distribution of products from the retailers over the warehouse level. For notational convenience, the sets of routesSl,m⊆L×M,Sm,m⊆M×M,Sm,n⊆M×N,Sn,m⊆N×M,are defined as subsets of ordered tuples of an origin and a target destination. The set of all shipment routes is denotedS:=Sl,m∪Sm,m∪Sm,n∪Sn,m.Time is separated into discrete periodst∈T:={1,…,T}. There are multipleJ=2productsj∈J:={1,…,J}that can be manufactured by the production facilities (or sourced from suppliers)l∈L,at given production costs γt, j, l. Each production facilityl∈Lhas a limited production capacity of Cl, of which one productj∈Jconsumes cj, l. The finished productsj∈Jcan then be shipped along the routess∈S,incurring shipment costs of σt, j, s. They can also be stored at each node, up to its storage capacity Pl(for production facilitiesl∈L), Wm(for warehousesm∈M), or Rn(for retail storesn∈N); e.g., represented by the storage volume. Each productj∈Jhas a storage coefficient pj, l, wj, m, and rj, n, respectively, indicating the amount of storage capacity needed for one unit of that product; e.g., proportional to its size. The storage cost for productj∈Jamounts to ϕj, l(for production facilitiesl∈L), ωj, m(for warehousesm∈M), or ρj, n(for retail storesn∈N) per time step.Before the end of each periodt∈Tand for each productj∈J,first the decisions about the production yt, j, latl∈Land the shipments xt, j, salongs∈Sare taken. Shipped products leave the respective inventoryIt−1,j,l,It−1,j,m,orIt−1,j,nof their origin s1 immediately.The shipments xt, j, sarrive at their destination s2 after a transportation lead time of λt, sfor routes∈S. The productions yt, j, lhave a lead time λt, latl∈L. Moreover, the production schedule must be determined Tprodtime steps in advance (Sohdi, 2005). This means that at each time t, the next Tprodproduction quantities fort+1,…,t+Tprodare already fixed by previous decisions, while previous transportation decisions from all production facilitiesl∈Lcan still be changed.After the shipments for the periodt∈Tare dispatched, the shipments and produced quantities from previous periods are received, and then the demand quantities dt, j, nfor productj∈Jat the retail storen∈Nare observed. Any demand that is higher than the corresponding inventory level It, j, nis backordered. However, more involved constructions of handling unmet demand, such as random backlog carry-over (Sohdi, 2005), could alternatively be incorporated.In this case study, the demand quantitiesδt:={dt,j,n|j∈J,n∈N}are considered as the main source of uncertainty. In many practical cases, however, SCM has to cope also with different uncertainties (Simchi-Levi et al., 2008; Sohdi & Tang, 2012). Any additional uncertainties can be incorporated the SCMPC approach, as long as they meet the following condition.Assumption 1The uncertainties in the SCM model formulation must be such that the resulting optimization problem (objective function and constraints, see below) would become convex if all uncertain variables were known and fixed.SCMPC is generally more suited for high-probability low-impact operational risks – such as demand quantities, lead times, production yields, perishable inventories, backlog carry-overs, prices, etc. – rather than low-probability high-impact disruption risks (Oke & Gopalakrishnan, 2009). Furthermore, without loss of generality, joint forecasts for all uncertain variables in the form of scenarios are assumed to exist. They may be inexact (Simchi-Levi et al., 2008), but nonetheless contain some information that is valuable for operational planning.More precisely, let δtbe the set of all uncertainties at timet∈T(i.e., not only the demands, in general). Letδt+τ−1|t−1be the forecast for the uncertainty over the Tplannext time steps,τ=1,…,Tplan,conditional on the information available at timet−1when the decisions for periodst,t+1,…have to be made. Here Tplan≪ T represents a rolling planning horizon, which is much shorter than the total operation time T for the supply chain.Assumption 2At each time step t,(t+1)∈T,a ‘sufficient number’k=1,…,Kof random samplesδt+τ|t(k)of the uncertaintyδt+τ|tis available, over the entire planning horizonτ=1,…,Tplan. In particular, combiningδt+τ|t(k)for allk∈{1,…,K}together withδt+τ|tforms a set of independent and identically distributed (i.i.d.) random variables, for allτ∈{1,…,Tplan}.For notational convenience, the forecasts over one planning are combined into multi-samples (or scenarios):Ωt(k):={δt+1|t(k),δt+2|t(k),…,δt+Tplan|t(k)}∀k∈K:={1,…,K}.Assumption 2 poses no restriction on the joint distribution of eachδt+τ|t(k). In fact, it is quite plausible that future demands at different retail storesn∈Nand between different productsj∈Jare (positively or negatively) correlated. Similarly, the forecasted uncertainties in the scenariosΩt(k)can be correlated in time. Furthermore, the distributions of the forecasts are allowed to change over time; e.g., the distribution ofδt+2|tneed not be the same as that ofδt+2|t+1. In particular, the variance of forecasted demands may decrease due to new market information becoming available over time.Assumption 2 also does not require exact knowledge of the distributions of any future uncertainties. It suffices to have a ‘sufficient number’ of scenarios available (the exact number will be derived in Section 3). These scenarios may be obtained, for instance, from a stochastic prediction model or based on historical data.For SCM, the supply chain system has to be operated over the time stepst∈{1,…,T}by a control policy, that is a function mapping all available information (past demands, forecasts, etc.) into a possible decision at timet−1(about production and shipments). The objective is to minimize the expected sum of stage costs(1)∑t∈T∑j∈J∑l∈Lγt,j,lyt,j,l︸productioncosts+∑t∈T∑j∈J∑s∈Sσt,j,sxt,j,s︸shipmentcosts+∑t∈T∑j∈J(∑l∈Lϕj,lIt,j,l+∑m∈Mωj,lIt,j,m+∑n∈Nρj,lIt,j,n)︸inventoryholdingcosts.The production and shipments costs result directly from the decision variables. For the holding costs, the inventory quantities in (1) are recursively computed as(2a)It,j,l=It−1,j,l−∑s∈S,s1=lxt,j,s︸shipmentsoutbound+∑s∈Syt−λt,j,l︸production∀l∈L,(2b)It,j,m=It−1,j,m−∑s∈S,s1=mxt,j,s︸shipmentsoutbound+∑s∈S,s2=mxt−λt,s,j,s︸shipmentsinbound∀m∈M,(2c)It,j,n=It−1,j,n−∑s∈S,s1=nxt,j,s︸shipmentsoutbound+∑s∈S,s2=nxt−λt,s,j,s︸shipmentsinbound−∑s∈Sdt,j,n︸demand∀n∈N,for allj∈Jandt∈T.The control policy has to respect constraints on the production quantities and the shipment quantities(3a)0≤yt,j,l,∑j∈Jcjyt,j,l≤Cl∀l∈L,(3b)0≤xt,j,s∀s∈S,for allj∈Jandt∈T. Analogous to the maximum production capacities in (3a), constraints on the maximum shipment quantities in (3b) could be incorporated. However, they are not considered for this case study.Finally, the following constraints on the inventory holdings at the production sites and the warehouses must be observed,(4a)0≤It,j,l,∑j∈JpjIt,j,l≤Pl∀l∈L,(4b)0≤It,j,m,∑j∈JwjIt,j,m≤Wm∀m∈M,(4c)∑j∈JrjIt,j,n≤Rn∀n∈N,for allj∈Jandt∈T. For the retail stores, despite of the uncertainty about the inventory levels, the inventory capacity constraint can be kept by sufficiently careful order placements.Unless reliable upper bounds on the demands dt, j, nare known, a robust satisfaction of the demands at all times cannot be ensured. Moreover, in practice, such a policy is often too conservative (Schildbach et al., 2014), in the sense that it entails very high inventory holding costs. Instead, constraints on minimum service levels of the supply chain shall be imposed:(5)1T∑t∈T1(It,j,n<0)≤ɛj,n∀j∈J,n∈N.1(·) denotes an indicator function that equals to 1 if its argument condition is true and to 0 if it is false. The values of εj, n∈ (0, 1) represent the prescribed service levels of productj∈Jat storen∈Nover the operation timet∈T. Note that (5) essentially corresponds to the concept of an α-service level (Bitran & Yanasse, 1984; Bookbinder & Tan, 1988), except that it is considered as the time-average over a long period T rather than a forward-looking probability.The generic supply chain model described in Section 2 can be considered as a linear control system (Schildbach et al., 2014). The level of all inventories at timet∈Trepresent the state of the system, the decision variables the input of the system, and the inventory update Eq. (2) the (uncertain) dynamics.The SCMPC policy operates the supply chain in a rolling horizon planning framework, as illustrated in Fig. 2. Besides the planning horizon Tplan, it involves a decision horizon Tdec≪ Tplan(usuallyTdec=1) and a fixed production schedule Tprod≪ Tplan.In each decision stept=(i−1)Tdecwherei∈{1,2,⋯},it computes the optimal decisions for the next Tplantime steps, which satisfy the constraints and guarantee demand satisfaction under all scenariosk∈K.The corresponding Rolling Horizon Scenario Program (RHSCP) reads as follows:(6a)min1K∑k∈K[∑τ=1Tplan∑j∈J∑l∈Lγt+τ,j,lyt+τ|t,j,l+∑τ=1Tplan∑j∈J∑s∈Sσt+τ,j,sxt+τ|t,j,s+∑τ=1Tplan∑j∈J(∑l∈Lϕj,lIt+τ|t,j,l+∑m∈Mωj,lIt+τ|t,j,m+∑n∈Nρj,lIt+τ|t,j,n(k))],(6b)s.t.It+τ|t,j,l=It+τ−1|t,j,l−∑s∈S,s1=lxt+τ|t,j,s+yt+τ−λt|t,j,l∀l∈L,a(6c)It+τ|t,j,m=It+τ−1|t,j,m−∑s∈S,s1=mxt+τ|t,j,s+∑s∈S,s2=mxt+τ−λt,s|t,j,s∀m∈M,(6d)It+τ|t,j,n(k)=It+τ−1|t,j,n(k)−∑s∈S,s1=nxt+τ|t,j,s+∑s∈S,s2=nxt+τ−λt,s|t,j,s−dt+τ|t,j,n(k)∀n∈N,(6e)0≤yt+τ|t,j,l,∑j∈Jcjyt+τ|t,j,l≤Cl∀l∈L,(6f)0≤xt+τ|t,j,s∀s∈S,(6g)0≤It+τ|t,j,l,∑j∈JpjIt+τ|t,j,l≤Pl∀l∈L,(6h)0≤It+τ|t,j,m,∑j∈JwjIt+τ|t,j,m≤Wm∀m∈M,(6i)0≤It+τ|t,j,n(k),∑j∈JrjIt+τ|t,j,n(k)≤Rn∀n∈N,where the constraints (6b–i) must hold for allk∈K,j∈J,andτ∈{1,…,Tplan}. The minimization refers to the decisions of shipments and productions,(7)xt+τ|t,j,sandyt+τ|t,j,l∀τ∈{1,…,Tplan},j∈J,s∈S,l∈L,except that the productionsyt+τ|t,j,sforτ=1,…,Tprodare already fixed. Moreover, the initial inventory levels It|t, j, l, It|t, j, m,It|t,j,n(k)are given from previous steps.In (6), thek=1,…,Kuncertainty scenariosΩt(k)have been substituted to obtain a deterministic and convex optimization program. The cost function (6 a) intends to approximate the expectation in (1) by taking the average costs over all K scenarios.In this particular case study, the demand scenariosdt+τ|t,j,n(k)lead to scenario-specific inventory levelsIt+τ|t,j,n(k)for the retail stores. An artificial scenarioK+1,in which all demandsdt+τ|t,j,n(K+1)are zero, can be introduced to ensure the satisfaction of the retail storage capacity constraints with certainty. If other uncertainties are present – such as lead times, production yields, perishable inventories, or backlog carry-overs – they must also be included in the RHSCP, by adding a scenario-specific superscript to all scenario-dependent variables.The overall algorithm of SCMPC can be summarized as follows.As the number K of scenarios increases, the operation of the supply chain by SCMPC becomes more conservative – i.e., the service levels are expected to improve while the total storage costs are expected to increase. A quantitative analysis of this intuitive relationship is provided below. In particular, a lower bound on K is derived such that the desired service level constraints (5) are satisfied. In order to minimize the long-term operational costs, and also to keep the computational efforts low, K should be selected equal to that lower bound.Remark 3In the RHSCP, the future decisionsxt+τ|t,j,sforτ∈{2,…,Tplan}andyt+τ|t,j,lforτ∈{Tprod+1,…,Tplan}are assumed as ‘here-and-now’ decisions. They may also be implemented as ‘wait-and-see’ decisions; i.e., by reacting to the information that becomes available until timet+τ−1(Skaf & Boyd, 2009). In fact, they can be modeled as the sum of (arbitrary) basis functions of the past uncertaintiesδt+1,…,δt+τ−1(Schildbach et al., 2014, Rem. 7).The subsequent analysis examines the behavior of the SCMPC policy over the entire operation timet∈T. The theory draws heavily on the results of Campi and Garatti (2008) and Schildbach, Fagiano, and Morari (2013), as well as on the SCMPC approach presented in Schildbach et al. (2014). Note that the mathematical statements are kept brief, and the reader is referred to the previous work for further details. The following basic assumption is made throughout.Assumption 4The RHSCP remains a feasible optimization program at each decision stept=(i−1)Tdec,i∈{1,2,⋯}(Schildbach et al., 2014, Ass. 5).Assumption 4 appears to be restrictive from a theoretical point of view. However, it is quite reasonable for many practical applications. It presumes that the supply chain is ‘well designed’ with regards to the available capacities. Moreover, it requires that a ‘back-up decision rule’ is available for cases when the demands cannot be fulfilled; e.g., by replacing the lower inventory constraints with high penalties on stockout quantities. This soft constrained approach shall be used for the simulation results in Section 4 (Qin & Badgwell, 2003).Definition 5(a) An uncertain convex program is a general optimization program with one (or multiple) uncertain constraint(s), that becomes convex if any possible value of the uncertainty were fixed. (b) The scenario program derives from the uncertain convex program by replacing the uncertain constraint with a finite number of sampled versions of this constraint, which are obtained by substituting fixed samples of the uncertainty (Campi and Garatti, 2008, Sec. 1).Observe that the RHSCP is a scenario program, with the retail inventory levels (6 i) being the sampled constraints. It can be shown that the solution of a scenario program (scenario solution) has certain generalization properties with respect to the original uncertain convex program (Campi & Garatti, 2008). Only some of these aspects, however, are relevant for the theory of this paper.Definition 6(a) The unconstrained subspace of a sampled constraint in a scenario program is the largest linear subspace (in a set inclusion sense) of the decision space that remains unconstrained by the sampled instances of this constraint. (b) The support rank of a sampled constraint in a scenario program is the co-dimension of its unconstrained subspace (Schildbach et al., 2013, Def. 3.6).Letζt+τ|t,j,nbe the support rank of the sampled retail inventory constraint (6i) of the RHSCP, forτ∈{1,…,Tdec}and anyt=(i−1)Tdec,i∈{1,2,⋯},j∈J,n∈N. Then, for any value of these indices,ζt+τ|t,j,n=1.Consider the sampled retail inventory constraint (6 i) of the RHSCP, for a fixedτ∈{1,…,Tdec}and anyt=(i−1)Tdec,i∈{1,2,⋯},j∈J,n∈N. Of all the decision variables (7), the constraint directly affects only the subsets(8){−xt+α|t,j,s|α≤τ,s1=n}and{xt+α|t,j,s|α+λt+α,s≤τ,s2=n}.Moreover, the sampled constraints require that the sum of all decision variables in (8) must be greater than or equal to the quantities(9)∑i=1τdt+i|t,j,n(k)︸sumofdemands−It|t,j,n(k)︸initialinventoryforallsamplesk∈K.For allk∈K,the sum of all decision variables in (8) is equivalent to a vector product of the entire decision vector with a fixed vector (of zeros, ones, and negative ones). This fixed vector has a null space of co-dimension one (Schildbach et al., 2013, Ex. 3.5), and hence the result follows.□Lett=(i−1)Tdec,i∈{1,2,…},j∈J,n∈Nbe fixed. For anyτ∈{1,…,Tdec},the violation probabilityVt+τ|t,j,n∈[0,1]is the probability with the inventory att+τbecomes negative if the scenario solution of the RHSCP at time step t is applied to the supply chain (Campi and Garatti, 2008, Def. 1.1).For the first part of the analysis, fix an arbitrary state of the supply chain at time t; see Fig. 3. Note that each violation probabilityVt+τ|t,j,nis then a function of the scenariosΩt(k)fork∈Kextracted at time t. Since the scenarios are random,Vt+τ|t,j,nis itself a random variable (Schildbach et al., 2014, Sec. 4.2).Theorem 9LetAssumptions 2and4hold and an arbitrary state of the supply chain at timet=(i−1)Tdec,wherei∈{1,2,⋯},be fixed. Then for anyj∈J,n∈N,andτ∈{1,…,Tdec}the random violation probability satisfies(10)EΩt(k)[Vt+τ|t,j,n]≤ζt+τ|t,j,nK+1=1K+1,where the expectationEΩt(k)[·]refers to the random scenariosΩt(k),k∈K.By Lemma 7, for anyt=(i−1)Tdec,i∈{1,2,⋯},j∈J,n∈N,τ∈{1,…,Tdec}the support rank of the corresponding sampled constraint in (6 i) isζt+τ|t,j,n=1. By (Schildbach et al., 2013, Thm. 4.1), the distribution ofVt+τ|t,j,nis therefore upper bounded by(11)PΩt(k)[Vt+τ|t,j,n≥ν]≤B(ν;0,K),where B( · ; ·, ·) denotes the beta distribution (Abramowitz & Stegun, 1970, Sec. 26.5.3,26.5.7). An integration of this distribution yields the desired result.□As a result of Theorem 9, the lower bound on K that is required for the service level constraint (5) is given by(12)1K+1≤ɛ⟺K≥1ɛ−1.For the remainder of the section, it is therefore assumed that the sample size K is chosen according to (12).After the scenariosΩt(k)att=(i−1)Tdecare fixed, the actual violations1(It+τ,j,n<0)over the decision horizonτ=1,…,Tdecare random variables with (now fixed) parametersVt+τ|t,j,n,respectively. Their outcome is determined by the actual uncertaintiesδt+τoverτ=1,…,Tdecand they satisfy(13)EΩt(k)[Eδt+τ[1(It+τ,j,n<0)]]=EΩt(k)[Vt+τ|t,j,n]︸≤ɛ,whereEδt+τ[·]refers to the expectation with respect to the uncertaintiesδt+1,…,δt+Tdec. Note that (13) holds because1(It+τ,j,n<0)is a generic binomial random variable with parameterVt+τ|t,j,n,onceVt+τ|t,j,nis fixed.In general, the random variables1(It+τ,j,n<0)forτ∈{1,…,Tdec},j∈J,n∈Nare correlated. Nonetheless, by linearity of expectation, they satisfy(14)EΩt(k)[Eδt+τ[1(It+1,j,n<0)+⋯+1(It+Tdec,j,n<0)]]=EΩt(k)[Vt+1|t,j,n]+⋯+EΩt(k)[Vt+Tdec|t,j,n]≤Tdec·ɛ.With the above observations, it is possible to analyze the sequence of identical decision periods, see Fig. 3. Hence the following fundamental result for the long-term properties of SCMPC is obtained.Theorem 10LetAssumptions 2and4hold and consider the supply chain over a sequencei∈{1,2,…,T/Tdec}of decision periods. Then(15)lim supi→∞1i(1(It+1,j,n<0)+⋯+1(It+Tdec,j,n<0))≤Tdec·ɛfor anyj∈Jandn∈N,almost surely.Note that Theorem 10 is essentially the same as saying(16)lim supT→∞1T∑t∈T1(It,j,n<0)≤ɛalmost surely, except for the minor requirement that the time length T be divisible by Tdec. The limit supremum in (15) and (16) refers to the sequence of time-average constraint violations. Therefore (16) means satisfaction of the service level constraint (5) in the strongest sense possible: namely, SCMPC keeps the service level of1−ɛalmost surely as time goes to infinity.ProofThe violations of each decision periodi∈{1,2,…,T/Tdec}are generally dependent on the decisions and uncertainty outcomes of the previous time periods. However, they are independent conditionally on a fixed state of the system in the time period(i−1)Tdec,respectively.Theorem 9 holds identically for all states at the beginning of each time period(i−1)Tdec,under Assumptions 2 and 4. Therefore, the actual violations (14) over the decision periodsi=1,2,⋯form a sequence of martingale differences (Hall & Heyde, 1980). The result now follows by noting that the left-hand side of (15) is the sum of martingale differences (Schildbach et al., 2014, Lem. 16 and Thm. 17).□In general, the service levels εj, n∈ (0, 1) can be chosen individually for each productj∈Jand retail storen∈N. However, then individual sample sizes Kj, nmust be selected accordingly (Schildbach et al., 2014). Henceforth, a universal service levelɛj,n=ɛis assumed in this paper, for allj∈Jandn∈N.This case study considers the supply chain model introduced in Section 2 under the SCMPC algorithm described in Section 3. First, the numerical parameters of the model are specified. Thereafter, the results of the simulation experiments are presented and discussed.The numerical values of the simulation model are given in Table 1. The costs are assumed to be in any unit currency, and the time stepst∈Tcan be considered to be weeks. The planning horizon isTplan=26weeks,the decision horizon isTdec=1week,and the production schedule is fixedTprod=4weeksin advance. The simulations are run for a total operation time of two years (T=104weeks).The demand quantities dt, 1, nfor productj=1are modeled as the sum of a constant, a seasonal, and a random component. The random component is given by an autoregressive model with stationary, uniformly distributed innovations. In contrast, productj=2is assumed to have a finite life cycle, such that the demand quantities dt, 2, npeak aroundt=40tot=60. However, the size and the time of the peak are uncertain. For an illustration of the demand patterns, Fig. 4depicts a few random sample paths.Consider the case where the service level ofɛ=5%is fixed. Fig. 5 depicts a typical trajectory for the productions by the facilitiesl=1,2,3. Observe that during the weeks around the peak demand of productj=2,its production (long dashed lines) utilizes almost all of the available capacities (solid lines).Fig. 6depicts the inventories of the warehousesm∈Mand retail storesn∈Nduring the simulation period. Observe that for productj=1the retail inventory levels are fairly constant, and for productj=2the retail inventory levels are distinctly higher during the peak demand period; see Fig. 6(c and d). The explanation is that the retail inventories serve as a buffer against the demand uncertainty, while they are unrelated to the demand level. In particular, for productj=1the demand uncertainty is constant over time, while there are seasonal fluctuations in the demand level. For productj=2,the highest demand uncertainty is around the peak of the life cycle; see Fig. 4.Some safety stocks are also kept on the warehouse level, where inventory holding costs are significantly lower; see Fig. 6(a and b). However, an additional peak can be observed in the inventory, in particular of productj=1,around weeks 40 to 50. This is due the anticipated bottleneck in the production capacity during weeks 40–60; compare Fig. 5. Since the inventory holding cost per production capacity coefficient is cheaper for productj=1,the peak demand for productj=2induces a pre-production of productj=1.For the simulation run in Fig. 6, the average service levels of all retail storesn∈N(i.e., the fraction of time steps in with stockout) areɛ¯1,n=4.68%for productj=1andɛ¯2,n=4.04%for productj=2. Hence they satisfy the desired service level of ε1, n, ε2, n≤ 5%.The results of a more extensive study is summarized in Table 2. For a variety of sample sizes K and its corresponding guaranteed service levels εj, n, the empirical service levelsɛ¯j,nare evaluated based on one hundred simulation runs. Observe that in all cases the theoretical services level bounds of1K+1,as derived in (12), are matched quite tightly by the empirical service levels.A comparison of the performance of SCMPC to other approaches is not straightforward, because they are difficult to apply in this setting. Indeed, the uncertainty consists of 30 demand quantities dt, j, n(for 2 products at 15 stores) at each time step over the planning horizonτ=1,…,26. Moreover, the demand quantities evolve in time by an autoregressive process – therefore, they are correlated in time and an explicit distribution is not available.Stochastic optimization would have to handle a general multi-variate (30-dimensional), continuous, time-varying demand distribution at each stageτ=1,…,26that is conditionally dependent on the uncertainty of previous stages. Since this is generally impossible, an approximation by a much simpler stochastic model, e.g., a binary scenario tree, is required. Yet even this simple model consists of 226 ≈ 67.1 million scenarios, so the computations would become intractable (Sohdi & Tang, 2012).Robust optimization would have to (optimally) fit uncertainty sets for the 30-dimensional demand quantities, in particular such that these sets contain(1−ɛ)of the multi-variate probability mass. In general, this problem is extremely hard and it must be solved repeatedly for the time-varying distribution (Bertsimas & Thiele, 2004).However, robust optimization can make a simple, conservative approximation (ROPT). Each uncertain demand quantity dt, j, nis independently set to its(1−ɛ)quantile; that is, the value that it will not exceed with a probability of more than ε. This procedure is simple and tractable, e.g., by a Monte Carlo simulation. However, it is conservative because, for instance, the(1−ɛ)quantile of the sum of demands (over some storesn∈Nor periodst∈T) is much lower than the sum of their(1−ɛ)quantiles (except if they are perfectly correlated).Table 3compares the performances of SCMPC to ROPT, regarding the total transportation costs Htranand total storage costs Hstor. Observe that the transportation costs remain fairly constant between SCMPC and ROPT, and across all service levels. However, the storage costs rise for an increasing service level, both within SCMPC and ROPT. Finally, SCMPC shows significant savings in the storage cost compared to ROPT for all service levels.

@&#CONCLUSIONS@&#
