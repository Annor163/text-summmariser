@&#MAIN-TITLE@&#
A local extrapolation method for finite elements

@&#HIGHLIGHTS@&#
A generic methodology to perform local extrapolation in finite elements is proposed.The methodology satisfies the criterion of least square error.It aims to keep the trend defined by internal sampling points values.It is applicable for any shape of 2D and 3D elements using simple operations.

@&#KEYPHRASES@&#
Finite elements,Extrapolation,Smoothing,Stress recovery,Post-processing,

@&#ABSTRACT@&#
In most numerical analyses using the Finite Element Method, several quantities, such as stresses, strains, fluid velocities and gradients, are computed at points in the interior of the solid elements, such as Gauss integration points for instance. Nevertheless, in many applications it is necessary to extrapolate these values to nodal points. That is the case with most visualization tools and post-processors, also in programs with auto-adaptive meshes, large deformations schemes such as Arbitrary Lagrangian–Eulerian Methods, and in programs using the Dynamic Programming Method. A generic methodology to perform this extrapolation in a precise and efficient way is proposed.

@&#INTRODUCTION@&#
Most boundary value problems in Engineering may be formulated with the Finite Element Method using an approach similar to the displacement formulation [1]. In these finite elements analyses, primary variables, such as displacements in equilibrium problems and water head in seepage problems, are computed at the nodes of the elements. However, secondary or derivate variables are computed at internal points rather than at the nodal points. Such variables may be, for instance, the components of stresses and strain, or the fluid velocities and gradients.The internal points at which the secondary variables are computed include the center of the element and/or the numerical integration points. The most widely adopted integration points are those given by the Gauss–Legendre quadrature. These points are supposed to give the best sampling position for the secondary variables [2].In many applications, however, it is necessary to evaluate the values of secondary variables at the nodal points. That is the case with most graphical finite element (FE) post-processors. They use the nodal values to compute the variables in a grid of points inside the element, using the interpolation functions of that element. This grid is later used to draw iso-lines or contour plots. Another important application is related to auto-adaptive meshing. The values computed at the Gauss points of a mesh have to be somehow transported to the integration points of a new mesh. Nodal stress values are necessary to compute some error measure used to define the degree of refinement necessary in a certain region of the domain [3]. Other application which requires nodal stress values is related to the Dynamic Programming Method (DPM). DPM may be used to search for the critical surface in slope stability problems, using the stress field produced (at the Gauss points) in a previous FE analyses. These values have to be extrapolated to a grid of points used in a minimization procedure [4–6].Other numerical methods such as Arbitrary Lagrangian–Eulerian FE (ALE), the Material Point Method (MPM) and its generalization (GIMP) require computation of derivate variables at nodal points. In ALE, convective terms such as spatial derivatives need to be defined as a continuous field over the domain. For instance, stresses are computed at the integration points, and the stress field is generally discontinuous across element edges. In this case the stresses at the integration points are extrapolated using a least square approximation to obtain the nodal stresses [7]. The MPM uses a background calculation grid where any variable can be expressed as a piecewise continuous function by using standard finite element shape functions. In each time step positions, velocities, stresses and strains are updated to define a new state in a deformed background grid. This background grid is then discarded and a new one is created for the next time step. At the start of the next step, the velocities must be calculated by extrapolation from the material points to the new grid. Since there are always more material points than grid vertices, this extrapolation is achieved using a Least Square Method [8]. This extrapolation procedure in MPM requires inversion of a large mass matrix. For a more efficient algorithm, a local extrapolation could be used.Mathematically, values at the nodal points could be evaluated directly, i.e., in the same way as those computed at the Gauss points. However, points close the border of a finite element are the worst sampling points and might produce serious errors, since equilibrium is satisfied only in an average sense when using weak formulations (displacement approach). The existence of optimal sampling points has been suggested and investigated numerically and mathematically by many authors [9–11]. These points might coincide with the ones given by Gauss–Legendre quadrature in some elements, but this is not always the case. If these optimal points or other points with good overall accuracy are known, then it is intuitive that some extrapolation from these values to the nodal points, plus some smoothing procedure such as averaging, might give more accurate solutions than those obtained directly from the displacement formulation. This idea produced several nodal stress recovery algorithms such as the original work proposed by Hinton and Campbell [12]. More details may be found in [13].Stress recovery procedures may be applied in a local (element) area or globally, i.e., over the whole finite element mesh [14,15]. Global methods are considerably more costly and most efforts have been concentrated in refining local procedures. Among these, perhaps the most popular is the Superconvergent Patch Recovery (SPR) method introduced by Zienkiewicz and Zhu [16,17]. In this technique, the smoothed stresses corresponding to a fixed nodal point are obtained from a polynomial expansion defined over a “patch of elements” sharing the node. This polynomial is determined from a minimum square fitting using the calculated stresses at the surrounding superconvergent points. Usually, the superconvergent points are the same as the Gauss integration points and the polynomial expansion has the same complete order as the shape functions. Contrary to the original local methods focused in an element rather than a patch of elements, the SPR method requires the extra identification of the elements and the corresponding superconvengent points surrounding the particular nodal point for which the stresses are desired. Moreover, a system of equations must be solved for each nodal point individually. Therefore, in the present paper, the authors propose a method that enhances and generalizes the local recovery process over an element. The proposed method can be eventually modified to work over a patch of elements although this extension is not presented here.Local recovery procedures, such as proposed by Hinton and Campbell [12], work only for certain element types and particular cases, as for instance, when the number of Gauss points is greater or equal to the number of nodal points. On the other hand, it is not uncommon the use of reduced integration in many engineering applications. In fact, eight node quadrilateral elements (Q8 Serendipity type element), with 2×2 Gaussian integration (four points), are perhaps the most widely used in two-dimensional problems. Also it is common to use brick elements of 20 nodes with 2×2×2 integration in three-dimensional (3D) finite element applications. If someone wishes to extrapolate the stress components computed at the four Gauss points of a Q8 element to its nodes, an efficient scheme should be used, since the problem is underdetermined. This problem is illustrated in Fig. 1.Therefore, the main objective of this paper is to present a local extrapolation methodology, which might be generically applied to quantities computed at any number of internal points of finite elements with different shapes. The proposed scheme shows accuracy, efficiency and it can be easily implemented in any computer program.In some cases, as depicted in Fig. 1, there might be infinite combinations of nodal values that produce, upon interpolation, the desired set of computed values at Gauss integration points. Therefore, the extrapolation of Gauss point values to nodal values may be underdetermined. Yet, it is possible to devise extrapolation schemes, which fit the sampling points and keep a smooth trend over the whole element domain. For the development of such a scheme the following requirements should be fulfilled:i.Extrapolation should be independent of element type or stress state, i.e., it should be applicable to any type of element either in two or three dimensions (2D or 3D).The scheme should be valid for any number of nodes and any number of internal sampling points (i.e. number of integration points). The number of nodes could be greater, equal or less than sampling points.The scheme should minimize the error when the extrapolated nodal point values are interpolated back to the sampling points.The procedure should keep a smooth variation inside the element and not produce spurious nodal values.In the following let m denote the number of sampling (Gauss) points and n denote the number of nodal points. By the way, the sampling points may also lie along the sides of the elements. Condition (ii) will be divided in two general cases: (1) m⩾n; or (2) m<n. These cases are treated separately in the next sections.In the derivation below, it is used the concept of generalized inverse matrix attributed to Moore and Penrose, see e.g. [18,19]. This concept indicates that for a given non-square matrix A, its generalized inverse A+ can be calculated by the following equation, when the number of lines is greater than the number of columns:(1)A+=(ATA)-1AT,and by the following expression when the number of columns is greater than the number of rows:(2)A+=AT(AAT)-1.In addition, the sample points values are denoted by wiand the resultant nodal values are denoted by vi.For the sake of generality, let w denote the value of any quantity evaluated at any point with natural coordinates (ξ, η, ζ) inside a finite element. This value can be approximated by a weighted average of nodal values vi, using the interpolation functions of the element. This approximation is denoted byw¯and is expressed in the following equation:(3)w¯(ξ,η,ζ)=∑i=1nNi(ξ,η,ζ)viwhere n is the number of nodes, Niis the shape function of the node i evaluated at point (ξ, η, ζ), and viare the nodal values, yet to be determined, for i=1,…,n.Therefore the values at the m sampling points may be expressed as a function of the unknown nodal values viaccording the following expression:(4)w¯1w¯2⋮w¯m=N1p1N2p1…Nnp1N1p2N2p2…Nnp2⋮⋮⋱⋮N1pmN2pm…Nnpmv1v2⋮vnin whichw¯1,…,w¯mare the calculated values at the sampling points,Nijis the value of the shape function of node i evaluated at the location of sampling point j, and v1,…,vnare the nodal values. Eq. (4) can be written using matrices (denoted by bold face letters) in a condensed notation, as:(5)w¯=Nvwhere w is a vector containing the values computed at the sampling points, N is a (m×n) matrix with the values of the shape functions evaluated at sampling points and v is a vector containing the unknown nodal values.The values(w¯j)at the sampling points, computed according to the interpolation of Eq. (5), may in principle differ from the original input values (wj). Therefore an approximation error can be defined as follows:(6)E=∑j=1m(w¯j-wj)2In order to satisfy condition (iii), the error defined in Eq. (6) must be minimized. This can be accomplished by using the Least Square Method as suggested by [2]. Thus, taking the partial derivatives of the error function in Eq. (6) with respect to each component viof the nodal value vector and forcing them to be zero, one gets:(7)∂E∂vi=∂∑j=1m(w¯j-wj)2∂vi=0Evaluating the derivatives of Eq. (5) and substituting into Eq. (7), the following system with n equations and n unknowns (v1,…,vn) is obtained:(8)∂E∂v1=-2(w1-w¯1)∂w¯1∂v1-2(w2-w¯2)∂w¯2∂v1-2(w3-w¯3)∂w¯3∂v1⋯-2(wm-w¯m)∂w¯m∂v1=0∂E∂v2=-2(w1-w¯1)∂w¯1∂v2-2(w2-w¯2)∂w¯2∂v2-2(w3-w¯3)∂w¯3∂v2⋯-2(wm-w¯m)∂w¯m∂v2=0⋮∂E∂vn=-2(w1-w¯1)∂w¯1∂vn-2(w2-w¯2)∂w¯2∂vn-2(w3-w¯3)∂w¯3∂vn⋯-2(wm-w¯m)∂w¯m∂vn=0For each equation k (with k=1,…,n) of system (8), substituting the valuesw¯jat the samplings points (with j=1,…,m), estimated according to Eq. (5), the following expression is obtained:(9)∂E∂vk=-2w1-∑i=1nNip1vi∂∑i=1nNip1vi∂vk-2w2-∑i=1nNip2vi∂∑i=1nNip2vi∂vk-2w3-∑i=1nNip3vi∂∑i=1nNip3vi∂vk⋮-2wm-∑i=1nNipmvi∂∑i=1nNipmvi∂vk=0Evaluating the derivatives in Eq. (3) and substituting into Eq. (9) and then rearranging, one gets:(10)Nkp1∑i=1nNip1vi+Nkp2∑i=1nNip2vi+Nkp3∑i=1nNip3vi+⋯+Nkpm∑i=1nNipmvi=w1Nkp1+w2Nkp2+w3Nkp3+⋯+wmNkpmReorganizing properly and writing the n equations in (10) using matrices, the following equation is obtained:(11)NTNv=NTwwhere matrix N was previously defined in Eq. (5).The term NTN in the left hand side of Eq. (11) produces an (n×n) square matrix M, which may be inverted to finally obtain the desired vector v of nodal values according to:(12)v=(NTN)-1NTwor simply:(13)v=N+wThe term (NTN)−1NTin Eq. (12) is a (n×m) matrix, which can be applied to any vector with the m given values of a quantity at the sampling points in order to produce the desired values at the n nodes of the element. Note that the matrix N does not necessarily need to be a square matrix. If m=n, the problem has a unique solution and the sampling point values are reproduced exactly when evaluated from the interpolation of the computed nodal values. The error in Eq. (6) will be zero. In this case (m=n), matrix N itself is invertible (NTN=I) and the solution could be obtained directly from the inversion of Eq. (5). Accordingly, in this situation, the system in Eq. (12) reduces to:(14)v︸n×1=NT︸n×nN︸n×n-1︸n×nNT︸n×nw︸n×1=NT︸n×nN︸n×n-1︸n×nNT︸n×nN︸n×nN-1︸n×nw︸n×1=N-1︸n×nw︸n×1If m>n, the system in Eq. (12) is over-determined. The solution obtained for the nodal values is just an approximation. However, it will ensure the best fit through the given values at the sampling points, minimizing the error of Eq. (6).Finally, if m<n the problem is undetermined, and a singular matrix is obtained when trying to compute the inverse of NTN. This happens because the square matrix NTN will result in a higher order (n×n), but is generated from a single smaller matrix N (m×n). Thus the additional (n−m) lines will be linear combinations of the original ones, and the determinant will be zero. To solve this problem, additional constraints are necessary. These are described in the next section.In this case, system (11) will be undetermined and a different approach or additional equations are necessary. Here a new approach is proposed. Eq. (4) is generally regarded as an operation that allows expressing the values at the sampling pointsw¯j(j=1,…,m) as a linear combination of the nodal values vi(i=1,…,n) in which the shape functionsNijare the coefficients of this linear combination. However, the same expression can be viewed as a linear combination of the shape functions valuesNij, in which the “coefficients” are the nodal values. Therefore, it is also reasonable to suppose that the nodal values may be expressed as a linear combination of the shape functions evaluated at the sampling pointsNijby means of a series of coefficients to be determined. This hypothesis can be written mathematically as:(15)v1v2⋮vn=a1N11+a2N12+⋯+amN1ma1N21+a2N22+⋯+amN2m⋮a1Nn1+a2Nn2+⋯+amNnmin which aj(j=1,…,m) are coefficients yet to be determined. If these coefficients are found, an estimate of the values at the sampling points may be computed using Eq. (4), which now takes the following form:(16)w¯1w¯2⋮w¯m=∑i=1n∑j=1majN1jNi1∑i=1n∑j=1majN2jNi2⋮∑i=1n∑j=1majNmjNimThe error in this estimate of the sampling point values is still given by Eq. (6). The unknown coefficients ajof Eq. (16) should be determined in such a way as to minimize that error. So, using the Least Square Method, the derivatives of Eq. (6) with respect to the unknown coefficients should vanish:(17)∂E∂ak=∂∑j=1m(wj-w¯j)2∂ak=0Computing the derivatives, the following system of equations is obtained:(18)∂E∂a1=-2(w1-w¯1)∂v1∂a1-2(w¯2-w2)∂v2∂a1⋯⋯-2(w¯m-wm)∂vm∂a1=0∂E∂a2=-2(w¯1-w1)∂v1∂a2-2(w¯2-w2)∂v2∂a2⋯⋯-2(w¯m-wm)∂vm∂a2=0∂E∂am=-2(w¯1-w1)∂v1∂am-2(w¯2-w2)∂v2∂am⋯⋯-2(w¯m-wm)∂vm∂am=0It should be emphasized here that the number of equations in system (18) is the same as the number of unknowns a1,…,amand equal to the number of sampling points m. Substituting the values of the estimates at the sample points,w¯1,…,w¯m, given by Eq. (16), into the system of Eq. (18), each equation k of this system takes the following form:(19)∂E∂ak=-2w1-∑i=1n∑j=1majN1pjNip1×∂∂ak∑i=1n∑j=1majN1pjNip1-2w2-∑i=1n∑j=1majN2pjNip2×∂∂ak∑i=1n∑j=1majN2pjNip2…-2wm-∑i=1n∑j=1majNmpjNipm×∂∂ak∑i=1n∑j=1majNmpjNipm=0Proceeding with the derivatives and rearranging the terms, Eq. (19) becomes:(20)∑i=1n∑j=1majN1pjNip1∑i=1nNipkNip1+∑i=1n∑j=1majN2pjNip1∑i=1nNipkNip2+⋯+∑i=1n∑j=1majNmpjNip1∑i=1nNipkNipm=w1∑i=1nNipkNip1+w2∑i=1nNipkNip2+⋯+wm∑i=1nNipkNipmReorganizing properly, the entire system of equations can be written using matrices as follows:(21)(NNT)(NNT)a=(NNT)wThe product NNTrepresents a (m×m) square matrix M. Pre-multiplying Eq. (21) twice by M−1, the vector of unknown coefficients is finally determined by:(22)a=(NNT)-1wTherefore the vector of nodal values v can be calculated from Eq. (15) as follows:(23)v=NTawhich by means of Eq. (22) becomes:(24)v=NT(NNT)-1wor, according to the second case of generalized inverse, simply:(25)v=N+wThe only condition that is really assured by the solution given by Eq. (24) is that the evaluation error at the sampling points, Eq. (6), when the computed nodal values are interpolated back to these points, yields the smallest possible value. However, when the number of nodes exceeds the number of sampling points (n>m), the solution given by Eq. (24), despite assuring minimal error at the sampling points, might produce nodal results that do not satisfy the rigid body condition [1]. For instance, given constant values at two Gauss points (w1=w2=w) of a one-dimensional bar element with 3 nodes, the scheme of Eq. (24) may produce a set of nodal values (v1, v2, v3) all of them different from the constant value w, but with a zero error at the Gauss points as illustrated in Fig. 2.The trend set by the two internal points (p1 and p2) in Fig. 2 is obviously a straight line (constant in this case) and one would expect to have the same constant values extrapolated to the nodes. However, as the interpolation functions for an element with three nodes are quadratic, a higher order function of the nodal values may reproduce the same values of the internal points with a totally different trend.One possible way to enforce that the trend set by the internal sampling do not differ much from the curve given by the interpolation of the computed nodal values, in the case of having m<n, is to add more equations to the system of restrictions given by Eq. (17). These equations could derive, for instance, from a measure of the curvature of the fitting curve in the sampling points. However, that requires a few second derivatives and might complicate the minimization procedure. Therefore a simpler procedure that tries to keep the internal trend, without adding new equations or computing second derivatives, is proposed herein as explained as follows.The only situation in which Eq. (24) is guaranteed to satisfy the rigid body condition and to give the same values in the nodes for constant values in the sampling points is when these internal values are zero. This fact is used to enhance the extrapolation procedure, by initially fitting a plane through the values at the internal points. This is illustrated in Fig. 3using n=4 nodal points and m=3 sampling points (pale diamonds and stars along ξ axis), in which the full star symbols indicate the known values (wj) at sampling points j (j=1,…,m). This plane will set a new reference for the values which will be extrapolated. Therefore the imposed values at the internal points wjare diminished by the valuesw̃jevaluated at these points using the best fit plane (full diamond symbols). The process can be interpreted as a translation, as illustrated in Fig. 4. The translated values (wpj-w̃pj), represented by open stars in Fig. 4, are then extrapolated to the nodes (open circles), using Eq. (24). Finally the computed translated nodal values should be shifted back to the original reference by adding to each node i (i=1,…,n) a quantityṽiwhich corresponds to the estimated value at a given node according to the trend given by the best fit plane, as illustrated by the full circles in Fig. 3. The final solution is illustrated in Fig. 5.The proposed methodology assures a minimum fitting error and at the same time preserves the general trend set by the known sampling point values, without adding new equations or restraints. In fact it is a means of imposing some condition in the curvature of the values that fit the sampling points, and satisfying condition (iv) established at the beginning of Section 2. Therefore, when a constant value is imposed at all sampling points, this same value is extrapolated to the nodes thus satisfying the condition of rigid body movement.Mathematically the proposed method can be written as:(26)v=N+(w-w̃)+ṽin which the values with an over tilde,w̃andṽ, represent vectors of a first estimate for the values at the sampling points and at the nodes, respectively, using a best fit plane through the given sampling point values.The best fit “plane” is actually a straight line in one-dimensional (1D) problems given by a function P(ξ) as:(27)P(ξ)=b1ξ+b2For 2D elements the mean plane is given by a function P(ξ, η):(28)P(ξ,η)=b1ξ+b2η+b3For 3D elements the best fit represents a hyper-plane given by:(29)P(ξ,η,ζ)=b1ξ+b2η+b3ζ+b4Generalizing, for d dimensions, there are d+1 coefficients, b1,…,bd+1, which define the best fit plane. These coefficients are obtained from a linear regression process and can be written in matrix notation by a general expression as follows:(30)b=ξˆ+win whichξˆis a matrix containing the local coordinates of the sampling points and will be fully presented later.Once the best fit plane is defined, using Eq. (30), the first estimatesw̃andṽcan be readily computed substituting the local coordinates of sampling points and the nodes into the respective equation for the fitting plane:(31)w̃=ξˆbandṽ=ξbin whichξis a matrix containing the local coordinates of nodes. Matricesξandξˆare given below for 1D, 2D and 3D cases, respectively.(32)ξ=ξ11ξ21⋮⋮ξn1;ξˆ=ξˆ11ξˆ21⋮⋮ξˆm1(33)ξ=ξ1η11ξ2η21⋮⋮⋮ξnηn1;ξˆ=ξˆ1ηˆ11ξˆ2ηˆ21⋮⋮⋮ξˆmηˆm1(34)ξ=ξ1η1ζ11ξ2η2ζ21⋮⋮⋮⋮ξnηnζn1;ξˆ=ξˆ1ηˆ1ζˆ11ξˆ2ηˆ2ζˆ21⋮⋮⋮⋮ξˆmηˆmζˆm1Substituting the expression in (31) into Eq. (26) the nodal values are calculated by:(35)v=NT(NNT)(w-ξˆb)+ξbSubstituting Eq. (30) into Eq. (35) and after some arrangement the proposed extrapolation method is finally expressed as:(36)v=[N+(I-ξˆξˆ+)+ξξˆ+]wwhere I is a m×m identity matrix.Note that the term NNTresults in a square matrix (m×m). Thus, if m>n then matrix NNTwill be bigger than the original N (m×n) and becomes singular, since the additional m−n lines will be linear combinations of the original ones, and the determinant will be zero. In this case, Eq. (12) should be used.Each case described above ends up with a matrix–vector product in order to perform the extrapolation process and obtain the nodal values. Therefore it is possible to obtain a unique extrapolation matrix E for each case. It is important to note that the extrapolation matrix E depends only on the element type. A summary of the proposed technique is presented in Table 1.As a first example, consider a two-dimensional quadrilateral element with eight nodes (Q8) and 4 integration points, so that n>m. The coordinates of nodes and sampling points are shown in Table 2.For this case it was chosen a constant set of values at all sampling points as shown in the last line of Table 2. In such a case one would expect the same value to be computed at the nodal points. Since n>m, Eq. (12) cannot be used. If Eq. (24) is applied, only the minimum error requirement is satisfied. This is shown in Table 3, which gives the extrapolated nodal values, as well as the re-interpolation error at the Gauss points. It can be seen that this error is zero, but the nodal values are not constant. If the computed nodal values are used to interpolate a surface over the whole element domain, the picture in Fig. 6is obtained. This picture does not keep the trend set by the Gauss point values, despite reproducing them accurately. In order to get the proper solution, one could apply the proposed Eq. (36). The correct result obtained in this case is shown in Table (4)and the interpolated surface from the computed nodal values is a plane as expected and depicted in Fig. 7.This example uses the same Q8 element as in the previous section. However a different set of values (not constant) is imposed to the sampling points as shown in Table 5. These values were chosen deliberately as fitting in a plane, i.e., they are co-planar in a 3D space.As n>m, again the solutions were obtained with Eqs. (24) and (36). The results for both equations are shown in Table 6. It is seen that both solutions satisfy the condition of error minimization. However, when Eq. (24) is used the curvature trend is totally wrong, especially close to the nodal points as shown in Fig. 8. In order to get the correct extension of the plane from the Gauss points to the nodes, Eq. (36) should be used as illustrated by the results in Fig. 9.In this example a cantilever beam, as depicted in Fig. 10, was analyzed using rectangular isoparametric plane stress Q8 elements. The beam was subject to a uniformly distributed load along its length at the top. The analysis was performed using a 2×2 Gauss reduced integration. This test is similar to the one presented in [12,20] were the shear stress along the beam axis is evaluated for comparison between locally smoothed and unsmoothed nodal values.Fig. 11shows the distribution of shear stress. The unsmoothed element stress was calculated at different points inside the elements using the nodal displacements, the displacement–strain matrix (B) and the constitutive matrix (D). On the other hand, the smoothed values were obtained using the proposed local extrapolation. A good approximation between the smoothed values and the analytical ones given by conventional beam theory were found. Similar results were obtained using three-dimensional hexahedral elements with 20 nodes and a 2×2×2 quadrature. The obtained results are quite as good as the presented by [12], despite the simplicity in the application of the proposed method as well as its generality.A surface strip load over a semi-infinite mass is analyzed in this case. The purpose of this example is to determine the vertical stress distribution along a vertical line below the load center and compare the results with reference values. A coarse mesh illustrated in Fig. 12represents a half of the semi-infinite mass. In the analysis, triangular elements T3 and T6 with 1 and 3 points quadrature respectively and quadrilateral elements Q4 and Q8 both with 2×2 quadrature are used. All element types except Q4 fall in the case where the number of sampling points are bigger than the number of nodal points.After the analysis, integration points which are closer to the left side of the domain were used to approximate stresses along the vertical line below the load center. In a similar fashion, nodes along the left side of the domain were used to extract stress values obtained by extrapolation. For reference, results are compared with the analytical solution provided by [21]. Since the analytical solution is for a semi-infinite mass, a second reference curve is used which is obtained from a previous analysis with a very fine domain discretization, i.e. (100×100).Figs. 13–16show stress results at integration points and nodal points along the normalized vertical coordinate z compared with analytical and reference values. Figs. 13 and 14 show the results using triangular elements. Those triangular elements were obtained dividing quadrilateral elements from the mesh in Fig. 12. It can be seen that for a coarse mesh of constant stress T3 elements the results at integration points (open circles) are not accurate. However the nodal values obtained by extrapolation and averaging (full squares) are not in much disagree with the reference curve. In the other hand, for linear stress distribution T6 elements, the values at integrations points are more accurate and the nodal values obtained by extrapolation are in good agreement with the reference curve.Figs. 15 and 16 show the results for quadrilateral elements. For Q4 elements, the stresses along their local y axis remain constant, so values at integration points are not accurate. However the nodal values obtained by extrapolation and averaging show more accurate results. For the case of Q8 elements, the integration points values and nodal extrapolated values show the same trend and are in good agreement with the reference curve.The present work investigates different alternatives to extrapolate known data from internal sampling points, such as Gauss integration points, to the nodes of a finite element. Two formulations are presented, both satisfying the criterion of least square error when the nodal values are re-interpolated to the sampling points. These are represented by Eqs. (12) and (36). If the number of sampling points equals the number of nodes, then the solution is unique and both methods give the same result, which can be directly obtained by a simple inversion procedure. The summary of the proposed technique presented in Table 1 shows the formulas for all cases which can be quickly and efficiently implemented in finite element programs.The formulation for the proposed extrapolation matrix depends only on the element type (shape and sampling points locations). So, during a finite element analysis all extrapolation matrices for all element types in the mesh may be computed only once and stored to be used later for the whole mesh, saving computational time.From case studies, it can be concluded that finite elements that develop at least a linear stress field can show accurate nodal values obtained by extrapolation. Although the examples shown here used Gaussian integration points as sampling points, the developed formulation is applicable to any disposition of sampling points and nodes. In this regard, it is desirable that sampling points contain accurate values in order to get good extrapolated results at nodal points. It should be noted also that integration points are not always the best points for sampling quantities as stresses inside the element [9].

@&#CONCLUSIONS@&#
