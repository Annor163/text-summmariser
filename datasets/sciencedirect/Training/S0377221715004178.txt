@&#MAIN-TITLE@&#
A group decision-making approach based on evidential reasoning for multiple criteria sorting problem with uncertainty

@&#HIGHLIGHTS@&#
We propose an evidential reasoning-based approach for the sorting problem with uncertainty.The utility of assessment grade is inferred from the assignment examples.A consensus-reaching process is developed to help decision makers to reach an agreement.We define a consensus measure for the multiple criteria group decision sorting problem.

@&#KEYPHRASES@&#
Multiple criteria analysis,Multiple criteria sorting,Evidential reasoning approach,Group consensus,

@&#ABSTRACT@&#
A new group decision-making approach is developed to address a multiple criteria sorting problem with uncertainty. The uncertainty in this paper refers to imprecise evaluations of alternatives with respect to the considered criteria. The belief structure and the evidential reasoning approach are employed to represent and aggregate the uncertain evaluations. In our approach, the preference information elicited from a group of decision makers is composed of the assignment examples of some reference alternatives. The disaggregation–aggregation paradigm is utilized to infer compatible preference models from these assignment examples. To help the group reach an agreement on the assignment of alternatives, we propose a consensus-reaching process. In this process, a consensus degree is defined to measure the agreement among the decision makers’ opinions. When the decision makers are not satisfied with the consensus degree, possible solutions are explored to help them adjust assignment examples in order to improve the consensus level. If the consensus degree arrives at a satisfactory level, a linear program is built to determine the collective assignment of alternatives. The application of the proposed approach to a customer satisfaction analysis is presented at the end of the paper.

@&#INTRODUCTION@&#
The multiple criteria sorting (MCS) problem is concerned with the assignment of a set of decision alternatives evaluated on a family of criteria into predefined ordered categories. In practice, MCS is used in many fields, such as supplier management (Araz & Ozkarahan, 2007), water resource planning (Chen, Hipel, & Kilgour, 2007), ABC inventory classification (Chen, Li, Kilgour, & Hipel 2008), energy management (Neves, Martins, Antunes, & Dias, 2008), credit rating (Doumpos & Zopounidis, 2011), assisted reproduction (Figueira et al., 2011), construction project management (Mota & Almeida, 2012), regional competitiveness analysis (Fernandez, Navarro, Duarte, & Ibarra, 2013), water contamination risk assessment (Macary, Almeida-Dias, Uny, & Probst, 2013), recommender system (Marin, Isern, Moreno, & Valls, 2013), climate classification (Mailly, Abi-Zeid, & Pepin, 2014), and research unit evaluation (Kadziński & Słowiński, 2015).Various approaches for addressing the MCS problem have been proposed in the literature. These approaches can be classified into the following four categories: (1) the methods inspired by the outranking relations (e.g., Almeida-Dias, Figueira, & Roy, 2010, 2012; Janssen & Nemery, 2013; Köksalan, Mousseau, Özpeynirci, & Özpeynirci, 2009; Kadziński, Tervonen, & Figueira, 2014; Nemery & Lamboray, 2008; Rocha & Dias, 2008); (2) the methods motivated by the value functions (e.g., Doumpos, Zanakis, & Zopounidis, 2001; Doumpos & Zopounidis, 2004; Greco, Kadziński, & Słowiński, 2011; Greco, Mousseau, & Słowiński, 2010; Kadziński, Ciomek, & Słowiński 2015; Köksalan & Özpeynirci, 2009; Kadziński & Tervonen, 2013; Köksalan & Ulu, 2003); (3) the methods based on the weighted Euclidean distance (e.g., Chen et al., 2007, 2008; Vetschera, Chen, Hipel, & Kilgour, 2010); and (4) the rule induction-oriented methods (e.g., Dembczyński, Greco, & Słowiński, 2009; Greco, Matarazzo, & Słowiński, 2010; Kadziński, Greco, & Słowiński, 2014). These methods were originally designed to address the MCS problem for which the preferences are expressed by a single decision maker (DM). However, group decision-making is the most important and frequently encountered process within companies and organizations (Greco, Kadziński, Mousseau, & Słowiński, 2012). Therefore, it is important to study the MCS problem in the context of group decision-making. Moving from a single-DM setting to a multiple-DM setting introduces a great deal of complexity into the MCS problem. In the extant literature, Dias and Clímaco (2000) addressed the sorting problem of a group of DMs with imprecise information on the parameters. Damart, Dias, and Mousseau (2007) provided a methodology that could help a group iteratively reach an agreement on how to sort exemplary alternatives. Jabeur and Martel (2007) proposed a sorting method that determines at least one collective assignment from the individual preference systems. Bregar, Györkös, and Jurič (2008) implemented an active iterative mechanism for group consensus seeking that could automatically unify the opinions of the DMs. Greco et al. (2012) and Kadziński, Greco, and Słowiński (2013) extended the robust ordinal regression to the sorting problem in the context of group decision-making. Cai, Liao, and Wang (2012) proposed an interactive sorting approach based on the assignment examples of multiple DMs with different priorities. Bezerra, Melo, and Costa (2014) applied the visual, interactive and comparative analysis methodology to the ELECTRE Tri method (Yu, 1992) for the consensus-building in cooperative groups.Most of the MCS approaches proposed in the literature assume that the evaluation of alternatives on criteria is accurately defined. However, in real life, the evaluation of certain alternatives on particular criteria may involve various types of uncertainties such as ignorance, fuzziness, interval data, and interval belief degrees (Fu & Yang, 2010). It is therefore necessary to use a scheme to represent and process such uncertain information. Within the field of MCS, few methods suit scenarios in which the evaluation of alternatives is not precisely defined. One of the exceptions is the study developed by Janssen and Nemery (2013) in which the authors extended the FlowSort method (Nemery & Lamboray, 2008) to the case of imprecision in the input data which are defined by intervals. Dembczyński et al. (2009) considered an extension of DRSA (the Dominance-based Rough Set Approach) to the context of the imprecise evaluation of alternatives on criteria and the imprecise assignment of alternatives to categories. However, the two methods are not suitable for handling situations in which the data for measuring the performance of an alternative on a criterion is absent or incomplete or in the form of a probability distribution.Within the field of multiple criteria decision analysis (MCDA), the evidential reasoning (ER) approach (Yang & Xu, 2002a, 2002b) is a well-known method for addressing decision situations characterized by uncertainty. Unlike the majority of conventional MCDA methods, the ER approach describes the performance of an alternative on a criterion with a distributed assessment using a belief structure. In addition, the ER approach uses a new procedure for aggregating multiple criteria based on the distributed assessment framework. The ER approach provides a new avenue for handling various types of uncertainties in a unified format that includes precise data, the absence of data, incomplete data and probability uncertainty. It has been applied to decision problems in many areas, such as engineering design (Chin, Yang, Guo, & Lam, 2009; Yang, Xu, Xie, & Maddulapalli, 2011), environmental impact assessment (Wang, Yang, & Xu, 2006), business management (Hilhorst, Ribbers, van Heck, & Smits, 2008), and group decision-making (Fu & Yang, 2010).In this paper, we propose a group decision-making approach based on ER to address the MCS problem with uncertainty. We employ the belief structure and the ER algorithm to represent and aggregate uncertain assessments, respectively. In the ER approach, it is necessary for the DMs to specify the utilities of grades in the assessment framework to obtain the global evaluation of alternatives. This elicitation of the preference information is often referred to as the direct elicitation technique, in which the DMs are guided to directly specify the values of the parameters used in the preference model (Greco, Mousseau, & Słowiński, 2008). However, such direct elicitation is considered to be cognitively cumbersome and difficult for the DMs. Alternatively, there is a preference elicitation technique known as indirect elicitation, which is of interest because it requires relatively less cognitive efforts from the DM (Corrente, Greco, & Słowiński, 2012; Kadziński & Słowiński, 2013; Köksalan et al., 2009). For the indirect elicitation technique, the DMs specify certain examples of holistic judgments, from which compatible values of the preference model parameters are induced using the disaggregation–aggregation (or regression) paradigm. The approach proposed in this paper utilizes the indirect preference elicitation technique. Specifically, the DMs participating in the sorting process are required to provide assignment examples for some reference alternatives. A methodology using the disaggregation–aggregation paradigm is then adopted to infer a set of compatible utility function models integrating the utilities of grades from these assignment examples, which is applied to sort other alternatives.In the context of group decision-making, one major issue to consider is how to help a group cooperatively develop a common MCS model to sort alternatives into categories. However, due to the DMs’ different knowledge bases and levels of experience, there may be a diversity of opinions among the group members. What makes the process more difficult is that an agreement between the DMs may have to be reached in spite of the diversity of judgments and the subjective perception of reality (Damart et al., 2007). Thus, prior to the actual sorting of alternatives it is necessary to reach some type of consensus among the DMs in the decision process. In the proposed approach, a consensus-reaching process is developed to help the DMs to interact for the purpose of iteratively reaching an agreement on how to sort alternatives, with consistency preserved at both the individual level and the collective level. A consensus degree is defined to analyze, control and monitor the consensus-reaching process. The consensus degree measures the agreement among the DMs’ opinions. The iterative process is composed of several rounds of consensus-reaching. When the consensus degree is at a low level and the DMs are not satisfied with it, we explore possible solutions to help the group adjust assignment examples in order to improve the consensus level. If the consensus degree arrives at a satisfactory level, we build a linear program to determine the collective assignment of alternatives.The approach proposed in this paper is distinguished from the previous methods by the following new features. First, the ER approach is extended to the case of the sorting problem for the first time. Despite its successful application to ranking and choice problems with uncertainty, no previous method has introduced the ER approach to the sorting problem. The approach proposed in this paper reveals the applicability and flexibility of the ER approach in modelling the uncertainty in the MCS problem. Second, the proposed approach employs the disaggregation–aggregation paradigm to infer a compatible utility function model from the assignment examples provided by the DMs. This technique reduces the cognitive efforts of the DMs to specify the utilities of assessment grades in the ER approach. Third, this paper develops a consensus-reaching process to support interaction among the DMs, helping them to reach a consensus on how to sort the alternatives. The process contributes to the search for a transparent, justifiable and collectively constructed consensus. An additional appeal of this paper stems from the fact that it provides a definition of the consensus measure for the MCS problem in the context of group decision-making. The definition of this consensus measure could be easily integrated with the other existing MCS approaches to the case of group decision-making and could help accelerate the consensus-reaching process.The remainder of this paper is organized as follows. In Section 2, we provide a brief introduction to the ER approach. In Section 3, we present a group decision-making approach based on ER for the MCS problem with uncertainty. Section 4 demonstrates the approach using an example. The paper ends with conclusions and discussion regarding future research.The ER approach is a general approach for analyzing MCDA problems characterized by various types of uncertainty using a unified framework – belief structures (Xu, 2012). With belief structures, the performance of an alternative on a criterion is described as a distribution assessment using belief degrees.We consider a decision problem in which a finite set of alternatives, denoted byA={a1,a2,…,ai,…,aK}, can have uncertain evaluations with respect to L evaluation criteriaG={g1,g2,…,gl,…,gL}. Suppose the weights of criteria are given asω=(ω1,ω2,…,ωl,…,ωL), where ωlis the relative importance of the lth criterion glwith ωl> 0,l=1,2,…,L, and∑l=1Lωl=1. Suppose N distinctive evaluation grades are defined to collectively provide a complete set of standards for assessing a criterion, as represented byH={H1,H2,…,Hn,…,HN},where Hnis the nth evaluation grade. Without the loss of generality, it is assumed thatHn+1is preferred to Hn,n=1,2,…,N−1. The assessment of alternative aion criterion glcan be represented as the following distribution:sl(ai)={(H1,β1,l(ai)),(H2,β2,l(ai)),…,(HN,βN,l(ai))},where βn, l(ai) ≥ 0,n=1,2,…,N, and∑n=1Nβn,l(ai)≤1and βn, l(ai) denotes the belief degree of alternative aibeing assessed to grade Hnon criterion gl. An assessment sl(ai) is said to be complete if∑n=1Nβn,l(ai)=1and incomplete if∑n=1Nβn,l(ai)<1. The assessments of the K alternatives on the L criteria can be represented by the following performance matrix:S=(sl(ai))K×L.We should mention that for the assessment of different qualitative criteria, however, different sets of evaluation grades may need to be defined to facilitate data collection. Moreover, some criteria are quantitative and may be assessed using precise or random numbers. This increases the complexity in criteria aggregation. Yang (2001) proposed the rule and utility based information transformation techniques to deal with various types of assessment information under a unified belief structure defined by the same set of grades.Based on the unified belief structure, Yang and Xu (2002a, 2002b) developed the ER algorithm for the aggregation of multiple criteria. The algorithm in detail can be found in Appendix A. After all the L criteria have been aggregated, we obtain the combined belief degrees for the grade Hn, denoted by βn(ai),n=1,2,…,N, and the combined belief degree that is not assigned to any individual grade, denoted by βH(ai).If it is required to rank alternatives or choose the best one or assign them to predefined categories, their performances represented by belief structures may not be directly comparable. Hence the concept of expected utility is introduced as a measure to evaluate the performances of alternatives, which requires that the utility of one assessment grade is disjoint from the utility of any other assessment grade in the belief structure. The expected utility of alternative aiis given by:U(ai)=∑n=1N(βn(ai)+βn(ai)∑n′=1Nβn′(ai)βH(ai))u(Hn)=∑n=1N(βn(ai)+βn(ai)1−βH(ai)βH(ai))u(Hn)=∑n=1Nβn(ai)1−βH(ai)u(Hn),where u(Hn) is the utility of grade Hnsatisfying that0=u(H1)<u(H2)<⋯<u(HN)=1. Note that βH(ai) is proportionally assigned to each grade Hn,n=1,2,…,N.Assume that several DMs, denoted byE={e1,e2,…,et…,eT}, collaborate to sort a set of alternatives A into predefined ordered categoriesC={C1,C2,…,Cq,…,CQ}, such thatCq+1is preferred to Cq,q=1,2,…,Q−1. The evaluation of alternative aion criterion glis expressed by belief structure sl(ai). The DMs share the same “description” of the sorting problem, i.e., the set of alternatives A, the family of criteria G, the performance matrix S, and the set of categories C (Greco et al., 2012). We consider the different role of each DM in the decision process and hence differentiate their priorities by a weight vectorλ=(λ1,λ2,…,λt,…,λT)such that∑t=1Tλt=1and λt> 0,t=1,2,…,T.In this study, we focus on introducing the ER approach to address the MCS problem and developing a consensus-reaching process. Note that the raw data of alternatives on criteria could be either qualitative or quantitative in different formats and we should transform them into the unified belief structure in advance. Moreover, similarly to some multiple criteria group decision-making methods (Chin et al., 2009; Fu & Yang, 2010; Huang, Chang, Li, & Lin, 2013; Tavana, Sodenkamp, & Suhl, 2010), we assume that all members of the group accept the common weights of criteria, i.e.,ω=(ω1,ω2,…,ωl,…,ωL). The collective weights of criteria can be obtained by using some methods such as direct rating (Doyle, Green, & Bottomley, 1997), eigenvector method (Takeda, Cogger, & Yu, 1987), and Delphi method (Hwang & Yoon, 1981). Concerning the DMs’ priorities, the leader of the group could specify the weight vectorλ=(λ1,λ2,…,λt,…,λT), or we could ask each DM to evaluate other DMs’ importance and then determine the weight vector (Figueira & Roy, 2002).We assume that the preference information of each DM et,t=1,2,…,T, is a set of assignment examples for the reference alternativesa*∈AtR⊂A. The assignment example provided by the DM etspecifies a desired assignmenta*→[CLtDM(a*),CRtDM(a*)]on a corresponding reference alternativea*∈AtR, where[CLtDM(a*),CRtDM(a*)]is an interval of contiguous categoriesCLtDM(a*),CLtDM(a*)+1,…,CRtDM(a*)withLtDM(a*)≤RtDM(a*). An assignment example can be precise ifLtDM(a*)=RtDM(a*)or imprecise, otherwise.In the context of group decision-making, the DMs may have different utility values on u(Hn),n=1,2,…,N. Thus, we use ut(Hn) to denote the utility of the DM eton grade Hnand Ut(a) to denote the expected utility of the DM etfor alternative α. In the proposed method, we take the threshold-based sorting procedure (Greco, Mousseau et al., 2010), and the sorting is performed through the comparison between the utility of each alternative with category thresholdsb0t,b1t,...,bQt, i.e.,(1.1)bq−1t≤Ut(a)<bqt,t=1,2,…,T⇔a→Cq,wherebht,h=0,1,…,Q, such thatb0t<b1t<b2t<⋯<bQt, are the thresholds of the DM et.bq−1tandbqtare the lower and upper thresholds of category Cq,q=1,2,…,Q, respectively.The iterative process of the approach proposed in this paper is depicted in Fig. 1, and its phases are described in detail below.Step 1.Define the sorting problem and collect related information, including the set of alternatives A, the set of criteria G, the general scale of evaluation grades H, the performance matrix S, and the set of categories C. Transform the raw data into the unified belief structure. Organize a group discussion and help the DMs to determine the weight vectorsω=(ω1,ω2,…,ωl,…,ωL)andλ=(λ1,λ2,…,λt,…,λT).Apply the ER algorithm to aggregate the belief structures on multiple criteria into the combined belief degrees and then present the outcomes to the group. Each DM is asked to provide his/her assignment examples based on the combined belief degrees.Detect and solve the possible inconsistency of assignment examples provided by each DM et,t=1,2,…,T, at the individual level (see Section 3.3 for more details).For each alternative a ∈ A, compute its possible assignment[CLt(a),CRt(a)]for each DM et,t=1,2,…,T, at the individual level (see Section 3.4 for more details).Calculate the consensus degree cog(a) for each alternative a ∈ A and the average consensus degreecog¯at the group level (see Section 3.5.1 for more details).The members in the group verify the consensus levelcog¯. If they are not satisfied with it, choose the alternativea*∈∪t=1,2,...,TAtRwith the minimum consensus degree cog(a*) and ask the DMs to revise its assignment example (see Section 3.5.2 for more details) and then proceed to Step 4. If the members are satisfied withcog¯or they want to terminate the consensus-reaching process, proceed to Step 7.Determine the collective assignment of alternatives (see Section 3.6 for more details) and present the sorting results to the group.The MCS approach proposed in this paper extends the disaggregation–aggregation paradigm to the case of group decision-making. In this case, a group of DMs collaborate to sort a set of alternatives into predefined ordered categories. The approach aims to support interaction among the DMs and to help them to reach a consensus on the assignment of alternatives. In this context, we identify two types of inconsistency that may occur at the individual level and the group level. The former stems from the possible inconsistency in the assignment examples of an individual DM. Indeed, the preferences of a DM may be incoherent and unstable, so it is difficult for him/her to provide consistent assignment examples. The second type of inconsistency arises from the group's pursuance of an agreement on the assignment of alternatives. Due to the difference of the DMs’ preferences, there is usually a divergence about the assignment among the DMs. Thus, it is required to make the entire group move toward a collective assignment while keeping the individual assignment consistent.To meet this requirement, we develop a process to help the group reach a consensus on the assignment of alternatives progressively. On the one hand, to maintain consistency at the individual level, any possible inconsistency in the assignment examples is detected and solved by constructing linear programs based on the principle of the minimum sum of shifts. On the other hand, the possible assignment of each non-reference alternative is computed based on the consistent assignment examples, and an index is defined to measure the consensus level of the group. If the DMs are not satisfied with the consensus level, possible adjustment solutions are explored and presented to the DMs and they could choose among these solutions to improve the consensus level. When the consensus level is satisfactory, we build a linear program to determine the collective assignment of alternatives. Note that we assume that all members in the group are sufficiently cooperative to follow this procedure.The preference information provided by the DM et,t=1,2,…,T, can be represented by a pair (ut,bt), whereut=(ut(H1),ut(H2),…,ut(HN))is a vector of utilities of grades andbt=(b0t,b1t,…,bQt)is a vector of thresholds (Greco, Mousseau et al., 2010). Let us define the following set of constraintsEAtRwhich incorporates the preference information provided by the DM et.(3.1)EAtR:Ut(a*)=∑n=1Nβn(a*)1−βH(a*)ut(Hn),a*∈AtR,(3.2)Ut(a*)≥bLtDM(a*)−1t,a*∈AtR,(3.3)Ut(a*)+ɛ≤bRtDM(a*)t,a*∈AtR,(3.4)ut(Hn+1)−ut(Hn)≥ɛ,n=1,2,…,N−1,(3.5)ut(H1)=0,ut(HN)=1,(3.6)bq+1t−bqt≥ɛ,q=0,1,2,…,Q−1,(3.7)b0t=0,bQt=1+ɛ.For constraints (3.2) and (3.3), the expected utility Ut(a*) of the reference alternative a* should be larger than or equal to the lower thresholdbLtDM(a*)−1tand less than the upper thresholdbRtDM(a*)t, if the DM etdesires the reference alternative a* to be assigned to the interval of contiguous categories[CLtDM(a*),CRtDM(a*)]. Constraints (3.4) and (3.7) ensure the monotonicity and normalization of utility values ut(Hn),n=1,2,…,N, and thresholds bq,q=0,1,2,…,Q, for the DM et.Let∂tRbe the set of pairs (ut,bt) satisfying the constraint setEAtR. To check that∂tRis not empty, it is sufficient to solve the following linear program (Greco, Mousseau et al., 2010):LP1:maxf1=ɛs.t.EAtR.Iff1*>0, wheref1*=maxf1, s.t.,EAtR, then there exists at least a pair (ut,bt) compatible with the assignment examples provided by the DM et; otherwise, no compatible pair (ut,bt) exists. This incompatibility may result from the following reasons: (1) the assignment examples of the DM do not match the expected utility model; (2) the statements provided by the DM are contradictory because, for instance, his/her preferences are unstable, and certain hidden criteria are taken into account (Greco et al., 2008). In such a case, we could help the DM to find the assignment examples which cause the inconsistency and then to adjust them to make the constraint setEAtRfeasible.Definition 1Leta*∈AtR. The DM etoriginally assigned a* to the interval[CLtDM(a*),CRtDM(a*)]. Suppose etadjusts it to the interval[CLtDM′(a*),CRtDM′(a*)]withLtDM′(a*)≤RtDM′(a*). The adjustment range ζt(a*) of a* by etis defined as the sum of the “shifts” (Damart et al., 2007) of the minimum and maximum assignment, i.e.,(3.8)ζt(a*)=|LtDM(a)−LtDM′(a)|+|RtDM(a)−RtDM′(a)|.When pursuing to make the constraint setEAtRconsistent, we wish to maintain original assignment examples as much as possible, that is, to minimize the sum of shifts of all reference alternatives. The following linear program can then be performed to provide an adjustment solution for the DM et.(3.9)LP2:minf2=∑a*∈AtR(ζt+(a*)+ζt−(a*))(3.10)s.t.Ut(a*)−bq−1t≥yqt(a*)−1,q=1,2,…,Q,a*∈AtR,(3.11)Ut(a*)−bqt+ɛ≤1−yqt(a*),q=1,2,…,Q,a*∈AtR,(3.12)∑q=1Qyqt(a*)=1,a*∈AtR,(3.13)yqt(a*)∈{0,1},q=1,2,…,Q,a*∈AtR,(3.14)ht(a*)=∑q=1Qqyqt(a*),a*∈AtR,(3.15)LtDM′(a*)≤ht(a*),a*∈AtR,(3.16)ht(a*)≤RtDM′(a*),a*∈AtR,(3.17)LtDM(a*)−LtDM′(a*)≤ζt−(a*),a*∈AtR,(3.18)LtDM′(a*)−LtDM(a*)≤ζt−(a*),a*∈AtR,(3.19)RtDM(a*)−RtDM′(a*)≤ζt+(a*),a*∈AtR,(3.20)RtDM′(a*)−RtDM(a*)≤ζt+(a*),a*∈AtR,(3.21)LtDM′(a*),RtDM′(a*)∈{1,2,…,Q},a*∈AtR,Constraints(3.1),(3.4)--(3.7),where ε is a small positive value representing the smallest discernable difference. The objective function (3.9) is to minimize the sum of shifts of all reference alternativesa*∈AtR.yqt(a*)is a binary variable such thatyqt(a*)=1if a* is assigned to Cq; otherwise,yqt(a*)=0. For constraints (3.10) and (3.11), the expected utility Ut(a*) should be larger than or equal to the lower thresholdbq−1tand less than the upper thresholdbqt, if a* is assigned to Cq. Constraint (3.12) ensures that each alternative is assigned to a single category. Constraints (3.14)–(3.16) indicate the assignment interval of a* after adjustment. Constraints (3.17) and (3.18) specify the shift of the minimum assignment, while constraints (3.19) and (3.20) measure the shift of the maximum assignment.The optimal solution of LP2 shows one possible solution with the minimum sum of shifts. In some cases, there are multiple possible solutions corresponding to the minimum sum of shifts. We can search for more solutions by solving LP2 with additional constraints and then present these solutions to the DM and ask him/her to choose one. See Appendix B for more details about this issue.If∂tRis not empty, there is usually more than one compatible pair (ut,bt). Because different instances of (ut,bt) may produce different assignment for the same alternative, we consider a sorting procedure based on a set of pairs (ut,bt).Definition 2Given a setAtRof assignment examples provided by the DM etand a corresponding set∂tRof pairs (ut,bt), for any alternative a ∈ A, the possible assignmentCtP(a)(Greco, Mousseau et al., 2010; Köksalan et al., 2009) is defined as a set of categories Cqfor which there exists at least one pair of(ut,bt)∈∂tRassigning α to Cq, that is:(4.1)CtP(a)={Cq:∃(ut,bt)∈∂tRforwhichbq−1t≤Ut(a)<bqt,q=1,2,…,Q}.Proposition 1IfCq,Cq′∈CtP(a), with q < q', thenCq′′∈CtP(a), ∀q'' ∈ [q, q'].ProofSee Appendix C.□Proposition 1 states that any category between two possible assignments is also a possible assignment.Definition 3Given a setAtRof assignment examples provided by the DM etand a corresponding set∂tRof pairs (ut,bt), for any alternative a ∈ A, we define the following categories (Damart et al., 2007):•minimum possible assignmentCLt(a), where Lt(a) is defined by:(4.2)Lt(a)=min{q:Cq∈CtP(a)},maximum possible assignmentCRt(a), where Rt(a) is defined by:(4.3)Rt(a)=max{q:Cq∈CtP(a)}.According to Proposition 1, for any alternative a ∈ A, if its minimum possible assignmentCLt(a)and maximum possible assignmentCRt(a)have been obtained, its possible assignmentCtP(a)can be obtained as[CLt(a),CRt(a)]. The category index of the minimum and the maximum possible assignment of α can be calculated as follows:LP3:Lt(a)=minht(a)(Rt(a)=maxht(a))s.t.Constraints(3.1),(3.10)−(3.14)forα,EAtR,where ε is a small positive value representing the smallest discernable difference.Note that the possible assignment[CLt(a*),CRt(a*)]for a reference alternativea*∈AtRmay differ from the range[CLtDM(a*),CRtDM(a*)]desired by the DM et, and[CLt(a*),CRt(a*)]could be more precise. This means that if the DM specifies an imprecise assignment example, some categories from this range may not be feasible.The group consensus is an important issue for finding the collective solution of a group decision-making problem. In this section, we will propose a new method to measure the consensus degree for the MCS problem in the context of group decision-making.The consensus measure of a single alternative is constructed at three levels: the pairwise comparison level, the individual level and the group level. With the possible assignment of alternative, the measures at the above three levels can be defined as follows.Definition 4Let et, et, ∈E, t ≠ t', a ∈ A. The consensus degree of alternative α at the pairwise comparison level is defined as the consistency between[CLt(a),CRt(a)]and[CLt′(a),CRt′(a)], which is(5.1)copt,t′(a)=|{Lt(a),Lt(a)+1,…,Rt(a)}∩{Lt′(a),Lt′(a)+1,…,Rt′(a)}||{Lt(a),Lt(a)+1,…,Rt(a)}∪{Lt′(a),Lt′(a)+1,…,Rt′(a)}|,a∈A,t,t′=1,2,…,T.Definition 5Let et∈ E, a ∈ A. The consensus degree of alternative α for the DM etat the individual level is defined as the consistency between the DM etand other DMs, which is(5.2)codt(a)=∑t′=1;t′≠tTcopt,t′(a)T−1,a∈A,t=1,2,…,T.Definition 6Let a ∈ A. The consensus degree of alternative α at the group level is defined as the consistency among the group, which is(5.3)cog(a)=∑t=1Tλtcodt(a),a∈A.Example 1Suppose that the assignment of alternative α provided by the DMs e1, e2, e3, e4 is depicted with gray cells in Fig. 2. The normalized priority vector of the DMs isλ=(0.4,0.2,0.3,0.1).According to Definitions 4, 5 and 6, we obtain the following consensus degrees of alternative α based on the assignment of each DM:(a)The consensus degree at the pairwise comparison level. The consensus degrees copt, t'(a) of alternative α at the pairwise comparison level arecop1,2(a)=1/3,cop1,3(a)=0,cop1,4(a)=2/3,cop2,3(a)=1/3,cop2,4(a)=2/3andcop3,4(a)=1/4.The consensus degree at the individual level. The consensus degrees codt(a) of alternative α for each DM at the individual level arecod1(a)=1/3,cod2(a)=4/9,cod3(a)=7/36andcod4(a)=19/36.The consensus degree at the group level. The consensus degree cog(a) of alternative α at the group level iscog(a)=1/3.Definition 7Based on the consensus measure of a single alternative, the average consensus degree of all alternatives is defined as follows:(5.4)cog¯=∑a∈Acog(a)K.The average consensus degree of all alternatives can serve as an index to measure the consensus level of the group's opinions and be used to monitor the process of consensus reaching.cog¯is bound within the interval [0,1].According to the process of consensus reaching, ifcog¯is small and the DMs are not satisfied with the consensus level, the way to improve consensus level should be explored to help the DMs to revise their preference information. In this paper we propose a simple method which is implemented as follows.Definition 8Leta*∈∪t=1,2,…,TAtR. Suppose the DM etadjusts his/her assignment example of a* asa*→[CLtDM′(a*),CRtDM′(a*)]. Letcog¯andcog′¯be the average consensus degrees before and after this adjustment, respectively. The improvement of consensus level can be defined as follows:(5.5)Δcog¯=cog′¯−cog¯.IfΔcog¯>0, it means that the adjustment ofa*→[CLtDM′(a*),CRtDM′(a*)]by the DM etwill improve the consensus level and it is called an efficient adjustment.Note that ifa*∈AtR, this adjustment means that the DM etassigns a* to a different interval of categories, and the number of possible assignments for etto adjust his/her assignment example of a* is(1+Q)Q/2−2. For example, supposeQ=5and the DM e2 originally assigned the alternative a5 to the interval [C2, C4]. Thus there are 13 possible assignments for e2 to make an adjustment of a5, i.e., C1, C2, C3, C4, C5, [C1, C2], [C2, C3], [C3, C4], [C4, C5], [C1, C3], [C3, C5], [C1, C4], and [C2, C5]. In contrast, ifa*∉AtR, this adjustment means that etadds a new assignment example of a*, and the number of possible assignments is(1+Q)Q/2−1. For example, supposeQ=5and the DM e3 did not provide any assignment example for the alternative a2 initially. Thus there are 14 possible assignments for e3 to provide a new assignment example for a2, i.e., C1, C2, C3, C4, C5, [C1, C2], [C2, C3], [C3, C4], [C4, C5], [C1, C3], [C2, C4], [C3, C5], [C1, C4], and [C2, C5]. We do not consider the whole range [C1, C5] of all categories as it does not incorporate any preference information.The following procedure is used to find the efficient adjustments to improve consensus level:Step 1.Choosea*∈∪t=1,2,…,TAtRwith the minimum consensus degree cog(a*).Sort λtcodt(a*),t=1,2,…,T, in the ascending order. For the DM etwith the minimum λtcodt(a*), enumerate all possible adjustments of a*.For any possible adjustment ofa*→[CLtDM′(a*),CRtDM′(a*)], employ the linear program LP1 to check the compatibility between this adjustment and other assignment examples provided by et. If this adjustment is compatible with other assignment examples, the adjustment is feasible; otherwise, it is not feasible.For any feasible adjustment ofa*→[CLtDM′(a*),CRtDM′(a*)], calculate the possible assignment of any alternative a ∈ A after adjustment, consensus degree cog'(a) and average consensus degreecog′¯.Verify the improvement of consensus level for all feasible adjustments. If there is no efficient adjustment, find the DM et' whose λt'codt'(a*) is greater than and adjacent to λtcodt(a*) and then enumerate all possible adjustments of a* for et' and proceed to Step 3; otherwise, present all efficient adjustments to etin the descending order ofcog¯′and etis allowed to choose one to revise his/her preference information and then terminate the procedure.Note that in this method we need to enumerate all possible adjustment solutions and then verify the improvement of consensus level and it seems time-consuming. Nevertheless, we should remember that decision analysis problems often deal with relatively small data sets (Corrente, Greco, Kadziński, & Słowiński, 2013) and the enumeration can be implemented with a modern computer in acceptable time.Through several rounds of consensus-reaching, the consensus level will improve and the average consensus degreecog¯will get closer to one. The group could continue such rounds untilcog¯=1. However, in many cases the improvement of consensus level will be not significant whencog¯is close to one. Therefore, it will take many more rounds to arrive atcog¯=1and the group may not wish to continue. In this section we provide a method to determine the collective assignment of alternatives when the DMs are satisfied with the consensus level and decide to terminate the consensus-reaching process.In order to determine the collective assignment of alternatives, we need to consider the assignment of all the DMs comprehensively. Due to the difference of the DMs’ preference information, the assignment of the DMs may be inconsistent. Thus we follow the idea of the proportion of DMs accepting each possible assignment in Damart et al. (2007) and propose a measure to indicate the supporting degree for each possible assignment when the DMs have different priorities.Definition 9The measure of support for assigning a ∈ A to Cqis defined as follows:(6.1)supq(a)={Eq(a),q=1,Qmax{Eq(a),min{maxq′<q{Eq′(a)},maxq′>q{Eq′(a)}}},1<q<QwithEq(a)=∑t|a∈AandLt(a)≤q≤Rt(a)λt|{Lt(a),Lt(a)+1,…,Rt(a)}|.In this definition, Eq(a) is the sum of the equal allocation of DMs’ weights to their assignment intervals. The definition of supq(a) means that Eq(a) of category Cqis compared with Eq'(a) of lower categories Cq' (i.e., q' < q) and Eq''(a) of upper categories Cq'' (i.e., q'' > q). If Eq(a) is greater than the minimum of Eq'(a) and Eq''(a), supq(a) will be equal to Eq(a); otherwise, supq(a) will be equal to the minimum of Eq'(a) and Eq''(a). This reinforces the supporting degree of assigning α to a middle category for the purpose of consensus-reaching.Remark that for q, q', q'' ∈ {1, 2, ..., Q}, if q < q'' < q', supq(a) > 0 and supq'(a) > 0, we have supq''(a) > 0. Definition 9 ensures the continuity of supporting degrees. The property is illustrated by the following example.Example 2Suppose that the assignment of alternative α is depicted with gray cells in Fig. 3. The normalized priority vector of the DMs isλ=(0.4,0.2,0.1,0.3).Based on the definition of the supporting degree of each assignment, we would haveE1(a)=0.2,E2(a)=0.3,E3(a)=0,E4(a)=0.4, andE5(a)=0.1. Thus, the supporting degrees of assigning α to each category are computed and listed as follows:sup1(a)=0.2,sup2(a)=0.3,sup3(a)=0.3,sup4(a)=0.4, andsup5(a)=0.1. In this case, we observe that the opinions of the DMs are divided into two sub-groups, with e1 and e3 intending to assign α to lower categories C1 and C2 but e2 and e4 deciding to assign α to upper categories C4 and C5. When we seek for consensus assignment, it is highlighted that assigning α to C3 should be considered. Although no DM assigns α to C3, we can consider C3 as a trade-off for consensus reaching.We propose a linear program to determine the collective assignment of alternatives. The linear program has two objectives, with the first one being to maximize the sum of supporting degrees of all alternatives and the second one to maximize the sum of margins between the utilities of alternatives and the category thresholds.(6.2)LP4:maxf3=ρ∑a∈A∑q=1Qsupq(a)yq(a)+∑a∈A∑q=1Q(dq+(a)+dq−(a))(6.3)s.t.U(a)=∑n=1Nβn(a)1−βH(a)u(Hn),a∈A,(6.4)U(a)−bq−1≥yq(a)−1,q=1,2,…,Q,a∈A,(6.5)U(a)−bq+ɛ≤1−yq(a),q=1,2,…,Q,a∈A,(6.6)∑q=1Qyq(a)=1,a∈A,(6.7)yq(a)∈{0,1},q=1,2,…,Q,a∈A,(6.8)dq+(a)≥0,q=1,2,…,Q,a∈A,(6.9)dq+(a)≤yq(a),q=1,2,…,Q,a∈A,(6.10)dq+(a)≥bq−U(a)−(1−yq(a)),q=1,2,…,Q,a∈A,(6.11)dq+(a)≤bq−U(a)+(1−yq(a)),q=1,2,…,Q,a∈A,(6.12)dq−(a)≥0,q=1,2,…,Q,a∈A,(6.13)dq−(a)≤yq(a),q=1,2,…,Q,a∈A,(6.14)dq−(a)≥U(a)−bq−1−(1−yq(a)),q=1,2,…,Q,a∈A,(6.15)dq−(a)≤U(a)−bq−1+(1−yq(a)),q=1,2,…,Q,a∈A,(6.16)u(Hn+1)−u(Hn)≥ɛ,n=1,2,…,N−1,(6.17)u(H1)=0,u(HN)=1,(6.18)bq+1−bq≥ɛ,q=0,1,2,…,Q−1,(6.19)b0=0,bQ=1+ɛ,where ε is a small positive value representing the smallest discernable difference and ρ is a sufficiently large value satisfyingρ>Kɛ(recall that|A|=K). As LP4 is to determine the collective assignment, we omit the subscript t and use the collective preference model. In the objective function (6.2),∑a∈A∑q=1Qsupq(a)yq(a)is the sum of supporting degrees of all the alternatives and∑a∈A∑q=1Q(dq+(a)+dq−(a))is the sum of margins between the utilities of alternatives and the category thresholds. The variablesdq+(a)anddq−(a)are the margins between the utility U(a) and the upper threshold bqand the lower thresholdbq−1of the category Cq, respectively. Constraints (6.8)–(6.15) ensure that if alternative α is assigned to Cq(i.e.yq(a)=1),dq+(a)anddq−(a)will be equal tobq−U(a)andU(a)−bq−1, respectively; otherwise,dq+(a)anddq−(a)will be equal to zero. With the optimal solution of LP4, the collective assignment of alternative α can be obtained asCh*(a), where h*(a) is the optimum of h(a).Proposition 2The optimal solution of LP4 is also the optimal solution of the linear programmaxf3′=∑a∈A∑q=1Qsupq(a)yq(a)subject to the same constraints of LP4.ProofSee Appendix D.□Proposition 2 states thatmax∑a∈A∑q=1Qsupq(a)yq(a)is the primary objective of LP4 andmax∑a∈A∑q=1Q(dq+(a)+dq−(a))is also incorporated into the formulation of LP4 as a secondary goal to avoid possible arbitrariness in determining the collective assignment.In this section, the proposed approach is applied to a customer satisfaction analysis for the demonstration of its detailed implementation process and potential applications in the MCS problem with uncertainty.The MCS problem in question is related to a software corporation in China that provides 20 software services for enterprise applications, such as OA, ERP, SCM, and CRM. The corporation has a large customer population in the nation. The corporation is planning to measure and analyze customer satisfaction with its software services based on seven evaluation criteria identified by the corporation: g1 = “Core functions (CF)”, g2 = “Extended functions (EF)”, g3 = “Validity of solution (VS)”, g4 = “Implementation experience (IE)”, g5 = “Technical support level (TSL)”, g6 = “Value for money regarding software expense (VMSE)”, and g7 = “Value for money regarding consultation expense (VMCE)”. The following general grade set is defined to evaluate the services:H={Hn,n=1,2,…,5}={poor,average,good,verygood,excellent}={P,A,G,V,E}.Table 1lists the belief structures of the services referred to asa1,a2,…,a20. The belief structures are collected from the returned 100 questionnaires emailed to the customers who have adopted the 20 services. The basic probability mass βn, lin the belief structure is represented by the proportion of the customers who gave the grade rating Hn. Note that the proportion of the customers who did not give any grade rating is denoted by the remaining probability mass βH, l. For example, to evaluate the service a1 on the criterion g2 = “Extended functions (EF)”, six customers rated “Poor”, nine rated “Average”, seven rated “Good”, four rated “Very good”, sixty-six rated “Excellent”, and the remaining eight did not give any rating.The manager of the corporation, denoted by e1, an expert from the R&D department, denoted by e2, an expert from the financial department, denoted by e3, and an expert from the project department, denoted by e4, are invited to participate in the process, and they act as the decision group. They analyze the belief structures and decide to sort the 20 services into five categories: C1 = “Poor”, C2 = “Average”, C3 = “Good”, C4 = “Very good”, and C5 = “Excellent”. Suppose that the weight vector of the seven criteria isω={1/7,1/7,…,1/7}and that the weight vector of the DMs isλ={0.2,0.3,0.15,0.35}as specified by the manager based on their different positions and roles in the corporation.The ER algorithm is used to aggregate the belief structures on multiple criteria into the combined belief degrees and the outcomes are presented in Table 2. All the DMs analyze the combined belief degrees and then provide assignment examples based on their knowledge and experiences. Their assignment examples are listed in Table 3(a). The reference sets of the DMs areA1R={a1,a3,a4,a6,a8},A2R={a2,a4,a5,a7,a10},A3R={a3,a5,a6,a8,a9},A4R={a2,a4,a6,a8,a9}.The linear program LP1 is built to check the consistency of the assignment examples at the individual level. IBM ILOG CPLEX® is used to solve LP1. The assignment examples provided by the DM e1 are found to be inconsistent, while those provided by the DMs e2, e3 and e4 are consistent. To make the assignment examples consistent, the linear program LP2 is solved to help the DM e1 to adjust his assignment examples. In the LP2 model, ε and M are set to be 10−5 and 6, respectively. We obtain three possible solutions as follows: (1) {a3 → [C3, C5], a4 → [C1, C3], a6 → [C2, C3]}; (2) {a3 → [C2, C5], a4 → [C1, C3]}; (3) {a3 → [C2, C5], a8 → [C2, C3]}. All these solutions correspond to the minimum sum of shifts of four. Suppose the DM e1 chooses the solution {a3 → [C2, C5], a4 → [C1, C3]} to adjust his assignment examples. Thus, the adjusted assignment examples of the DM e1 are a1 → [C2, C3],a3 → [C2, C5], a4 → [C1, C3], a6 → C2, and a8 → C3. The assignment examples after adjustment are presented in Table 3(b).Based on the consistent assignment examples, we can compute possible assignment of services a ∈ A for each DM et,t=1,2,3,4, and the results are presented in Table 4. We observe that the possible assignment of some reference alternatives differs from the range desired by some DMs. For example, the possible assignment of service a1 for the DM e1 is C3, which is more precise than the assignment example [C2, C3] specified by him.Table 4 shows that the services a12 and a15 have the maximum consensus degree of 0.78333 and the service a9 has the minimum consensus degree of 0.22916. The average consensus degreecog¯of all the services is 0.51279.As a9 has the minimum consensus degree and e4 has the minimumλ4cod4(a9)=0.02916, we explore the efficient adjustment solutions of a9 for e4 to improve the consensus level. Table 5 lists all efficient adjustment solutions in the descending order ofcog′¯. It is presented to e4 and he is asked to choose one solution to revise his preference information. Suppose e4 chooses the first solution and adjusts a9 to the interval [C2, C3] and then we proceed to the next round.Since only e4 adjusts his assignment examples, the possible assignment of the other three DMs remain the same. We compute possible assignment of services a ∈ A for e4 and the results are presented in Table 6. We observe that the services a12 and a15 still have the maximum consensus degrees of 0.78333 and the service a5 has the minimum consensus degree of 0.23166. The average consensus degreecog¯of all the services is 0.52779.As a5 has the minimum consensus degree and e1 has the minimumλ1cod1(a5)=0.01333, we explore the efficient adjustment solutions of a5 for e1 to improve the consensus level. However, there is no efficient adjustment solution and thus e1 cannot provide a new assignment example for a5 to improve the consensus level. This is due to the fact that a5 can only be assigned to C2 by e1 based on his preference information.For e3 has the second minimumλ3cod3(a5)=0.03499, we explore the efficient adjustment solutions of a5 for e3 to improve the consensus level. Table 7 lists all efficient adjustment solutions in the descending order ofcog′¯. It is presented to e3 and he is asked to choose one solution to revise his preference information. Suppose e3 chooses the first solution and adjusts a5 to the interval [C3, C4] and then we proceed to the next round.For the compactness of presentation, we shall not present more details of the following rounds of consensus-reaching. Table 8 presents the selected adjustment solutions from Round 3 to Round 11. Fig. 4depicts the improvement of average consensus degreecog¯during the whole process.After the adjustment in Round 11, the group finds that thecog¯is greater than 0.8 and they are satisfied with the consensus level. Moreover, they consider that it may need more rounds to arrive atcog¯=1. Hence they decide to terminate the process and determine the collective assignment of services.The possible assignment at the end of Round 11 is presented in Table 9. Based on the possible assignment, we obtain the supporting degrees of assigning services to each category which is listed in Table 10.Then we employ the linear program LP4 to determine the collective assignment of services. In the LP4 model, ε and ρ are set to be 10−5 and 3 × 106, respectively. With the optimal solution of LP4, the collective assignment of each service is obtained as: a8, a12, a15 and a20 are assigned to the category C1, a1, a3, a7 and a11 are assigned to the category C2, a5, a9, a16, a18 and a19 are assigned to the category C3, a2, a6, a13, a14 and a17 are assigned to the category C4, a4 and a10 are assigned to the category C5. The classification results are also presented in Table 11.We observe that for any service a ∈ A, it is collectively assigned to the corresponding category with the maximum supporting degree. When there are multiple categories corresponding to the maximum supporting degree, the second goal of LP4 is used to determine the collective assignment of α by maximizing the margins between its utility and the category thresholds. For example, for the service a5, we have the maximum supporting degrees of assigning a5 to the categories a3 and a4, i.e.,sup3(a5)=sup4(a5)=0.36666and its collective assignment of a5 → C3 is determined through the second goalof LP4.

@&#CONCLUSIONS@&#
In this paper, we presented a group decision support approach for the MCS problem with uncertainty. The belief structure and the ER approach are employed to represent and aggregate uncertain information. To specify the sorting model, each DM is asked to provide individual assignment examples (the desired assignment for specific reference alternatives) that yield a set of compatible utility functions. Taking into account the set of assignment examples as preference information, the approach provides a possible assignment interval for each alternative at the individual level. A consensus degree is defined to measure the agreement among the DMs’ opinions. When the DMs are not satisfied with the consensus degree, possible solutions are explored to help them adjust assignment examples in order to improve the consensus level. If the consensus degree arrives at a satisfactory level, a linear program is built to determine the collective assignment of alternatives.Note that the consensus-reaching process developed in this paper can be applied to other sorting models for dealing with the case of group decision-making in a straightforward way. In this study, we focus on the design of the consensus-reaching process for MCS and thus assume that all the DMs share the same belief structure and the same criteria weights. When the DMs use different belief structures to express their uncertain judgments or the weights of criteria could be different for the DMs, it will be challenging but interesting to solve such problems, which requires further research.However, we should acknowledge that the consensus-reaching process may require many rounds to reach a satisfactory consensus level, especially when there is a large divergence among the opinions of the DMs. In such a case, the DMs may feel that the tedious process is boring and may not have confidence in participating in the consensus-reaching process. This is due to the fact that only one DM is asked to revise a single assignment example at each round and thus the improvement of consensus level is not significant. In future research, more efficient adjustment solutions should be explored to accelerate the consensus-reaching process.