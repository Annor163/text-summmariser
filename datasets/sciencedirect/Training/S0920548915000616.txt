@&#MAIN-TITLE@&#
Shared RFID ownership transfer protocols

@&#HIGHLIGHTS@&#
We propose a shared RFID ownership transfer protocol without the trusted third party.A group of users can share the ownership of a tag with high security.The group key size is constant regardless of the number of group users.We provide the formal definition of shared ownership transfer system.We prove the security of the shared ownership transfer protocol.

@&#KEYPHRASES@&#
RFID security,Ownership transfer,Security protocol,

@&#ABSTRACT@&#
Radio Frequency Identification (RFID) has been widely adopted in practice for objects identification. The ownership of an object can be represented by the ownership of the RFID tag attached to the object. An ownership could be shared among different parties and should be transferable. Although many RFID ownership transfer protocols were proposed, a shared ownership transfer protocol remains as a daunting task with absence of a trusted party. In this paper, we propose the first provably secure shared ownership transfer protocol, which requires merely hashing computations and has a constant key size.

@&#INTRODUCTION@&#
A Radio Frequency Identification (RFID) tag could be owned by two parties. As an example, two people jointly own (and hence, share the ownership of) a car with an RFID tag. Either of them can show the partial ownership of the car, but neither of them can sell the car without the agreement of the other, since he/she is not entitled to sell the car solely based on his/her will, without the other party's consent. Unfortunately, traditional RFID ownership transfer (ROT for short) protocols (e.g., [6,5,14,7,12]) do not capture this kind of application. We call an RFID ownership transfer protocol, which supports multiple owners as a shared RFID ownership transfer (SROT for short) protocol.Intuitionally, an SROT protocol consists of two phases, namely ownership verification and ownership transfer. In the first phase, the current owners jointly prove their ownership of the tag and the potential (new) owners verify the ownership proof. If the verification outputs true, subsequently they request an ownership transfer in the second phase. Upon the completion of a successful transfer, the current owners become previous owners and cannot interpret any further communications of the tag anymore. The new owners become current owners of the tag. The SROT protocol provides the forward secrecy, which means that the current owner cannot recover the previous communication flows.SROT protocols should possess three properties: secure ownership, exclusive ownership and secure ownership transfer[3]. These properties are also considered in ROT, but the attackers of SROT protocols are more powerful than the attackers of ROT protocols, where a dishonest subgroup of current owners can launch collusion attacks.Passive RFID tags have a very limited computational power. Usually, a tag can only cope with symmetric-key cryptography. The size of non-volatile memory of a tag is normally only several hundred bits; therefore it is not possible to store cryptographic keys for each owner. The power of tag is also not sufficient to support a large memory. Furthermore, passive tags are not tamper-resistant. An attacker can physically disclose a tag and read/write its internal state.The ownership transfer protocols for RFID systems can be modeled using either a trusted third party (TTP) based model or two-party model [17]. In the TTP based model, the solution is trivial, since the proof of ownership can be provided by the TTP, who can even transfer the ownership to new owners on behalf of current owners. However, this system model requires the availability of TTP, which can interact with owner and tag, during the ownership transfer (e.g., [13,9]). This model is undesired due to the scalability problem, because a TTP may need to simultaneously participate in a number of ownership transfers. To eliminate this problem, we adopt an extended two-party model. In this model, there are two types of owners, namely the current owner and the new owner. Specifically, it does not require the presence of TTP and supports multiple current/new owners.In symmetric-key based single-owner ownership transfer protocols, the owner shares an authentication key with the tag. In a multi-owner scenario, each valid owner also shares an authentication key with the tag, while we found some new security issues:1.Collusion attack: A trivial solution for multi-owner ownership transfer is that owners share the same key with the tag. However, a dishonest owner can use the knowledge of key to change the secret of tag without the agreement of other owners, therefore, he can claim that he is the only owner of the tag. We consider that at most n−1 dishonest owners could launch such an attack, where n is the number of owners.Key size: To resist the collusion attack in the extended two-party model, each owner can share a separate key with the tag. However, the number of keys to be stored on the tag could become a burden to the tag.Computational capacity: An alternative solution to collusion attacks is to adopt public key cryptography, which allows the keys to be accumulated into a constant size. Unfortunately, it is too heavy to passive tags.Corruption attack: Most (passive) tags are not tamper-resistant. A powerful attacker can read the state of a tag [18,22]. It is particularly a problem if only the symmetric key cryptography is applied.We propose the first shared RFID ownership transfer protocol based on the extended two-party model. It does not require a trusted third party and therefore differs from the shared ownership transfer protocol described in [10].We provide the formal definition of shared ownership transfer and its security model, which captures active attacks such as the collusion attack and corruption attack. Any attack to the SROT protocols could be considered in a collusion fashion. We prove that our protocol is secure in our security model.In our protocol, the keys stored in a tag have a constant size regardless of the number of owners. It only needs to execute the hashing calculation (e.g., [19]).Our protocol is secure against corruption attacks. We adopt both symmetric and asymmetric key cryptographic algorithms in order to achieve the desirable security. The computationally more powerful owners are responsible for the computation of asymmetric key cryptography, while the tags only require handling very light hashing operations [5].The rest of this paper is organized as follows. In Section 2, we review related work in the literature. The mathematical preliminaries and notions are given in Section 3. The system model and the definition of SROT protocols are presented in Section 4. In Section 5, we describe the concrete construction of our protocol. A security model of SROT protocols is given in Section 6, followed by the security proof in Section 7. Section 8 concludes the paper.

@&#CONCLUSIONS@&#
