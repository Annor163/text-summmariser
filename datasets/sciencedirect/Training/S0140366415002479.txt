@&#MAIN-TITLE@&#
Practical identity-based private sharing for online social networks

@&#HIGHLIGHTS@&#
Novel practical solution using Identity based Encryption with multiple untrusted Key Servers (PKGs) to be used on top of current Online Social Networks (OSNs) to protect privacy as condentiality of the content.An outsider anonymous Identity Based broadcast encryption protocol with a multi-PKG model to support multiple recipients.A prototype implementation as Firefox extension requiring a relatively small overhead.

@&#KEYPHRASES@&#
Online social networks,Privacy,Identity-based encryption,

@&#ABSTRACT@&#
Online Social Networks (OSNs) constitute vital communication and information sharing channels. Unfortunately, existing coarse-grained privacy preferences insufficiently protect the shared information. Although cryptographic techniques provide interesting mechanisms to protect privacy, several issues remain problematic, such as, OSN provider acceptance, user adoption, key management and usability. To mitigate these problems, we propose a practical solution that uses Identity-Based Encryption to simplify key management and enforce data confidentiality. Moreover, we devise an Identity-Based outsider anonymous private sharing scheme to disseminate information among multiple users. Furthermore, we demonstrate the viability and tolerable overhead of our solution via an open-source prototype.

@&#INTRODUCTION@&#
Online Social Networks (OSNs), such as Facebook, Google+, and Twitter present a significant growth and have become a prominent communication channel for many millions of users. OSNs offer users an efficient and reliable channel to distribute and share information. At the same time, OSNs store large amounts of data which prompts several privacy concerns, in particular as it is possible to infer a considerable amount of sensitive information from the shared and stored content. Although users are allowed to configure “privacy preferences” to limit access and select which users or groups can access the shared content, these preferences are generally too coarse-grained and difficult to configure [1]. In addition, these preferences do not exclude providers along with the dangers of data beaches and leaks [2] nor government. As proved by recent events like the PRISM project [3] and the iCloud breach [4].All these worrisome issues motivate the need for effective techniques to properly protect user’s privacy in OSNs. Several solutions have been proposed advocating the use of cryptographic mechanisms to address the privacy issues, either by an add-on atop of existing OSNs [5–8], or by complete new privacy-friendly architectures [9], mainly decentralized [10,11]. In general, those solutions suffer from user adoption and key management issues as users are required to register and then share, certify and store public keys [12]. Günther et al. [13] formalize cryptographic models for private profile management achieving confidentiality and unlinkability, however their sharing information protocols similar complex key management do not protect privacy of the recipients. Completely new architectures represent a difficult step for users as the trade-off of moving away from the commonly used social ecosystem compared with the risk of losing interactions is high. Arguably, current centralized OSNs are here to stay and will continue to be actively used by millions of people. In light of recent events, such as Edward Snowden’s whistle-blowing on US surveillance programs [3], OSN providers have an interest to maintain their users and a privacy-friendly image. Hence, it is important to protect user’s sharing information, such as text and media content, as well as the identity of the recipients as it can contain private and sensitive information.Identity Based Encryption (IBE) [14] solutions overcome the key management problem as the public key of the user can be represented by any valid string, such as the email, uniqueidand username. Therefore, by using a OSN username any savvy and concerned user can share encrypted content with other users who are not using the solution, thereby motivating curious ones to use the system as well. However, IBE-based systems require a trusted central Private Key Generator (PKG) server to generate the private parameters for each user based on the PKG master secret. Consequently, such an architecture only shifts the trusted party from the OSN to the PKG. This problem can be mitigated if the master secret is divided among multiple PKGs following a Distributed Key Generation (DKG) [15] protocol based on Verifiable Secret Sharing (VSS) [16]. A DKG protocol allows n entities to jointly generate a secret requiring that a threshold t of the n entities does not get compromised. In fact, each entity holds only a share of the master secret, that can be reconstructed by atleast t shares.Many OSN users are represented on several OSNs, and potentially hold multiple public keys. In this way, the multi-PKG setting could be supported and maintained by several OSNs, in particular if considering the collaboration between competing OSN providers to be difficult and orthogonal to their business model. Fig. 1shows an overview of the proposed model, in which users authenticate to t-PKGs of their choice; to retrieve private keys. This action is performed after the reception of encrypted content. For an additional level of security, PKG servers can also be represented by governmental entities from different continents, with no incentives to collaborate, thus overcoming more powerful adversaries using legal measures [17] that may at least affect t-PKGs.In this paper, we propose a novel practical solution using IBE with multiple semi-trusted PKGs on top of current OSNs. We highlight that multi-PKGs can be supported by several OSNs in view of business competition. We present an IBE broadcast encryption protocol with a multi-PKG model to support multiple recipients. Using a broadcast IBE-based mechanism users can share content with multiple recipients, thus, enforcing data confidentiality while hiding the recipient set. Furthermore, this solution is implemented on top of the Scramble Firefox extension [6], requiring a relatively small overhead.The remainder of this paper is organized as follows. Section 2 gives a brief overview of the cryptographic background. Next, Section 3 presents the model followed by the description of the suggested solution in Section 4. Section 5 describes the implementation details, while Section 6 reviews related work. Finally, Section 7 summarizes and concludes the paper.

@&#CONCLUSIONS@&#
