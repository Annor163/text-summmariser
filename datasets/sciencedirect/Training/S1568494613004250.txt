@&#MAIN-TITLE@&#
League Championship Algorithm (LCA): An algorithm for global optimization inspired by sport championships

@&#HIGHLIGHTS@&#
Investigating the behavior of LCA under various setting for parameters.Examining the validity of updating equations and learning strategies followed in LCA.The algorithm is capable to find the global optimum in most of investigated problems.The algorithm behaves more constantly and reliable.

@&#KEYPHRASES@&#
Global optimization,Numerical optimization,Metaheuristic algorithms,League championships algorithm,

@&#ABSTRACT@&#
League Championship Algorithm (LCA) is a recently proposed stochastic population based algorithm for continuous global optimization which tries to mimic a championship environment wherein artificial teams play in an artificial league for several weeks (iterations). Given the league schedule in each week, a number of individuals as sport teams play in pairs and their game outcome is determined in terms of win or loss (or tie), given the playing strength (fitness value) along with the intended team formation/arrangement (solution) developed by each team. Modeling an artificial match analysis, each team devises the required changes in its formation (generation of a new solution) for the next week contest and the championship goes on for a number of seasons (stopping condition). An add-on module based on modeling the end season transfer of players is also developed to possibly speed up the global convergence of the algorithm. Extensive analysis to verify the rationale of the algorithm and suitability of the updating equations together with investigating the effect of different settings for the control parameters are carried out empirically on a large number of benchmark functions. Results indicate that LCA exhibits promising performance suggesting that its further developments and practical applications would be worth investigating in the future studies.

@&#INTRODUCTION@&#
Since 1970s that the idea of a general algorithmic framework emerged, many algorithms have been introduced. With the aim of being applicable with relatively few modifications to different optimization problems, these algorithms have got their source of inspiration from nature, society, culture, politics, human, etc. The term “metaheuristic” is used for such methods that combine rules and randomness while imitating natural, social, cultural and political phenomena. These methods are from now on regularly employed in all sectors of business, industry, engineering, etc. However, besides all of the interest necessary to applications of metaheuristics for solving difficult and complex optimization problems, occasionally a new metaheuristic algorithm is introduced which uses a novel metaphor as a guide for solving optimization problems. For example, particle swarm optimization algorithm (PSO) [1], introduced in 1995, models the flocking behavior of birds; harmony search (HS) [2], introduced in 2001, is conceptualized using the musical process of searching for a perfect state of harmony; bacterial foraging optimization algorithm (BFOA) [3], introduced in 2002, models foraging as an optimization process where an animal seeks to maximize energy per unit time spent for foraging; artificial bee colony algorithm (ABC) [4], introduced in 2005, simulates the intelligent foraging behavior of a honeybee swarm; central force optimization algorithm (CFO) [5], introduced in 2007, makes an analogy between the process of searching a decision space for the maxima of an objective function and flying probes through 3-dimensional physical space under the influence of gravity; fire fly algorithm (FA) [6], introduced in 2007, performs based on the idealization of the flashing characteristics of fireflies; group search optimizer (GSO) [7], introduced in 2009, simulates the animal searching behavior (an active movement by which animals find or attempt to find resources such as food, mates, oviposition, or nesting sites); krill herd algorithm (KH) [8], introduced in 2012, works based on the simulation of the herding of the krill swarms in response to specific biological and environmental processes; and optics inspired optimization (OIO) [9], introduced in 2013, treats the surface of the numerical function to be optimized as a reflecting surface in which each peak is assumed to reflect as a convex mirror and each valley to reflect as a concave one.The League Championship Algorithm (LCA) is a recently proposed algorithm for global optimization, which mimics the championship process in sport leagues [10]. Beside the nature, culture, politics, human, etc. as the typical sources of inspiration of various algorithms, the metaphor of sporting competitions is used for the first time in LCA. The methodology of LCA can be described as follows. A number of individuals making role as sport teams compete in an artificial league for several weeks (iterations). Based on the league schedule in each week, teams play in pairs and their game outcome is determined in terms of win or loss (or tie), given the playing strength (fitness value) along with the particular team formation/arrangement (solution) followed by each team. Keeping track of the previous week events, each team devises the required changes in its formation/playing style (a new solution is generated) for the next week contest and the championship goes on for a number of seasons (stopping condition). LCA is a population based algorithm where its “teams” are similar to PSO's “particles” but with a quite different way of performing their search. The way in which a new solution associated to an LCA's team is generated is governed via imitating the match analysis process followed by coaches to design a suitable arrangement for their forthcoming match. In a typical match analysis, coaches will modify their arrangement on the basis of their own game experiences and their opponent's style of play.The above rationale is modeled by some LCA-specific paradigm as follows. To determine the winner/loser individuals to bias the search toward/outward them, LCA focuses on the relative comparison of individuals, and not their absolute fitness gains. Such a mechanism ensures that the win portion for the better solution (team) is greater than the win portion of the weaker solution (team). Therefore the search direction is expected to be toward winner (more likely the better solution) and in opposition of loser (more likely the weaker solution). Such a mechanism allows that the algorithm moves the population toward promising areas and at the same time escapes from local or fruitless areas. Modeling artificial match analysis mathematically in LCA yields four equations which generate new solutions in the search space. The development of these equations is closely related to develop a balance between intensification and diversification. Unlike many algorithms which only allow a given solution approaches to better solutions in the search space, LCA also allows retreat from solutions in a scheduled manner (supplied by the league schedule module). For this reason, we will see that LCA performs well on various types of problems. To preserve diversity and avoid premature convergence, LCA uses a truncated geometric probability distribution to choose the number of elements in a given solution that their value should change via one of the four mutation equations to generate a new solution. Using a truncated geometric distribution we can set the number of changes dynamically with more emphasis given to the smaller or larger rate of changes.In this paper we investigate the effect of control parameters on the performance of LCA and examine the role of updating equations of LCA in the sense that whether these equations have a lump sum significant effect or we can achieve the same or better performance with a subset of these equations. We then examine whether different learning strategies followed in the artificial post-match analysis of LCA are crucial or not. We finally try to speed up the convergence of basic LCA via (1) allowing the tie outcome happens beside the win or loss outcomes which are typically allowed in the basic LCA. Five scenarios are considered for interpretation of ties and updating equations are adapted accordingly (2) introducing the end season transfer operator which mimics the player transfers between teams and allows the component of better solutions being propagated among other solutions in certain iterations.The remainder of the paper is organized as follows. Section 2 briefly reviews the common terminology related to team games. Section 3 puts forward some idealized rules on the characteristics of the championship environment and describes the algorithm in a step-by-step manner. Section 4 deals with the computational tests and comparisons. Intensive studies are presented in this section to verify the rationale of the algorithm empirically and to investigate the effect of control parameters. Finally Section 5 concludes the paper.In this section, we shall have an overview on the keywords commonly related to team games, especially those terms which will be used metaphorically in LCA.☆Sport league – A sports league is an organization that exists to provide a regulated competition for a number of people to compete in a specific sport. League is generally used to refer to competitions involving team sports, not individual sports. A league championship may be contested in a number of ways. Each team may play every other team a certain number of times in a round-robin tournament. In such a set-up, a team with the best record becomes champion, based on either a strict win-loss-tie system or on a points system where a certain number of points are awarded for a win, loss, or tie [11].☆Formations – Normally each team has a playing style which can be realized during the game via team formation. A formation is a specific structure defining a distribution of players based on their positions within the field of play [12]. For example, the most common formations in soccer are variations of 4-4-2, 4-3-3, 3-2-3-2, 5-3-2 and 4-5-1. Different formations can be used depending on whether a team wishes to play more attacking or defensive. Every team pursues a best formation which is often related to the type of players available to the coach.☆Match analysis – match analysis refers to the objective recording and examination of behavioural events occurring during competitions [13]. The main aim of match analysis when observing one's own team's performance is to identify strengths which can then be further built upon and weaknesses which suggest areas for improvement. Likewise, a coach analyzing opposition performance will use data to try to counter opposing strengths (threats) and exploit weaknesses (opportunities) [13]. An extremely important ingredient of the match analysis process is the presentation of feedback to players on their own or opponent's performance through video footage, match reconstructions and presentation of data. Feedback can and should be given pre-match, post-match or in the build up to next match [13].Such kind of analysis is typically known as strengths/weaknesses/opportunities/threats (SWOT) analysis, which explicitly links internal (strengths and weaknesses) and external factors (opportunities and threats). Identification of SWOTs is essential because subsequent steps in the process of planning for achievement of the main objective may be derived from the SWOTs. The primary strength of SWOT analysis arises from matching specific internal and external factors and evaluating the multiple interrelationships involved. There are four basic categories of matches for which strategic alternatives can be considered [14]:•S/T matches show the strengths in light of major threats from competitors. The team should use its strengths to avoid or defuse threats.S/O matches show the strengths and opportunities. The team should attempt to use its strengths to exploit opportunities.W/T matches show the weaknesses against existing threats. The team must attempt to minimize its weaknesses and avoid threats. Such strategies are generally defensive.W/O matches illustrate the weaknesses coupled with major opportunities. The team should try to overcome its weaknesses by taking advantage of opportunities.Later, in Section 3.3, we will use these strategies in the metaphorical “LCA match analysis process”, wherein each artificial team devises a suitable team formation for its next match.The SWOT analysis provides a structured approach to conduct the gap analysis. A gap is sometimes spoken of as “the space between where we are and where we want to be”. When the process of identifying gaps includes a deep analysis of the factors that have created the current state of the team, the groundwork has been laid for improvement planning. The gap analysis process can be used to ensure that the improvement process does not jump from identification of problem areas to proposed solutions without understanding the conditions that created the current state of the team.☆Transfer – At the end of each season, teams review their performance over the past season and various changes may occur, e.g. changes in the coaching configuration, transfer of players or even changes in the managerial board. A transfer is the action taken whenever a player moves between clubs. It refers to the transferring of a player's registration from one team to another.LCA is a population based algorithmic framework for global optimization over a continuous search space. A common feature among all population based algorithms like LCA is that they attempt to move a population of possible solutions to promising areas of the search space during seeking the optimum. Similar to most of population-based algorithms, a set of L solutions in the search space, chosen a priori at random, form the initial population of LCA. Using the sporting terminology, “league” in LCA stands for “population”. Like most of population-based algorithms, LCA consists in evolving gradually the composition of the population in successive iterations, by maintaining the size of population constant. For the sake of consistency we may use “week” in place of “iteration”. Each solution in the population is associated to one of L teams (L is an even number) and is interpreted as the team's current formation. Therefore, “team i” is matched to the “ith member of the population” and a particular “formation” for team i is matched to the ith “solution” in the population. Each solution in the population has a certain fitness value, which measures its degree of adaptation to the objective aimed. In LCA the “fitness value” can be interpreted as the “playing strength” along with the intended team formation. Almost in all population-based algorithms a succession of operators is applied to individuals in each iteration to generate the new solutions for the next iteration. The way in which a new solution associated to an LCA's team is generated is governed via imitating the match analysis process which is typically followed by coaches to design a suitable arrangement for their team. In Section 3.3, we will explain how we make an analogy between the process of generating a new solution in LCA and the sport match analysis process. A broad group of population-based algorithms are Evolutionary Algorithms (EA) in which during iterations, the objective is to overall improve of the fitness of the individuals [15]. Such a result is obtained by simulating the selection mechanism, which governs the evolution of the living beings through supporting the survival of the fittest individuals, according to the Darwinian Theory. As a pseudo evolutionary algorithm, selection in LCA is a greedy selection which replaces the current best formation with a more productive team formation having a better playing strength. The algorithm terminates after a certain number of “seasons” (S) being passed in which each season comprises L−1 weeks (iterations), yielding S×(L−1) weeks of contests.Now we idealize some characteristics of the regular championship environment to visualize the artificial championship modeled by LCA. Each of the following idealized rules will be used in the subsequent parts of the paper, where we provide a detailed report on different modules developed in LCA.Idealized rule 1. It is more likely that a team with better playing strength wins the game. The term “playing strength” refers to ability of one team to beat another team.Idealized rule 2. The outcome of a game is not foretellable given known the teams’ playing strength perfectly.Idealized rule 3. The probability that team i beats team j is assumed equal from both teams point of view.Idealized rule 4. The outcome of the game is only win or loss. Tie outcome is not considered in the basic version of LCA (We will later break this assumption via inclusion of the tie outcome, when introducing other variants of the algorithm).Idealized rule 5. When team i beats team j, any strength helped team i to win has a dual weakness caused team j to lose. In other words, any weakness is a lack of a particular strength. An implicit implication of this rule is that while the match outcome is imputed to chance, teams may not believe it technically.Idealized rule 6. Teams only focus on their upcoming match without regards of the other future matches. Formation settings are done just based on the previous week events.The basic steps of the League championship algorithm can be represented as a schematic flowchart shown in Fig. 1. In practice, a representation must be chosen for the individuals in the population. In LCA, a team formation (solution) can be represented with a vector of size 1×n (n is the number of problem parameters or variables) of real numbers. Each element is associated to one of the players and represents the value of the corresponding variable of the problem. One can imagine that a change in the value of a variable reflects a change in the job of the relevant player in the new formation. Let f(X=(x1, x2, …, xn)) be an n variable numerical function that should be minimized over the decision space defined as a subset ofℝn. A team formation (a potential solution) for team i at week t can be represented byXit=(xi1t,xi2t,…,xint),withf(Xit)indicating the fitness/function value resulted fromXit. Back to our terminology, this value is called the playing strength along with formationXit. ByBit=(bi1t,bi2t,…,bint)we denote the best previously experienced formation by team i until week t, yielding the best playing strength value. To determineBit, we employ a greedy selection betweenXitandBit−1based on the value off(Xit)andf(Bit−1).In the subsequent subsections we will describe the main modules of LCA; especially the manner of generating the league schedule, determining the winner/loser; and setting up a new team formation.A common thread between all sport leagues is a structure that allows teams to compete against each other in a nonrandom order on a set schedule, usually called a season. Likewise in LCA, the first step necessary to simulate a championship environment is to schedule the matches in each season. A single round-robin schedule is utilized in which each team plays every other team once in each season. For a sport league composed of L teams, the single round-robin tournament requires L(L−1)/2 matches, because in each of (L−1) rounds (weeks), L/2 matches will be run in parallel (if L is odd, there will be L rounds with (L−1)/2 matches, and one team have no game in that round).The scheduling algorithm is simple and we illustrate it using a sport league composed of 8 teams (L=8). Let assign each team a number and pair them off in the first week (Fig. 2a). Fig. 2a implies that team 1 plays 8, 2 plays 7 and so on. For the second week, fix one team, say team 1, and rotate the others clockwise (Fig. 2b). In this week, 1 plays 7, 8 plays 6 and so on. For the third week, once again rotate the order clockwise. So, 1 plays 6, 7 plays 5 and so on (Fig. 2c). We continue this process until getting the initial state. The last week (week 7) schedule can be obtained from Fig. 2d. If L is odd, a dummy team is added. In each week, the opponent of the dummy team does not play and gets rest.It is worth to mention that the round-robin tournament problem can be modelled as an edge-coloring problem in a diagraph [16]. In LCA, the championship continues for S successive seasons in which the league schedule for each season is a single round-robin schedule, yielding S×(L−1) weeks of contests (if L is odd, there will be S×L weeks of contests). In our implementation of LCA we use the same schedule for all of the S seasons.In a regular league system, teams compete on a weekly basis and their game outcome is determined in terms of win, loss or tie for each team. In this way, for example in soccer, each team is scored by 3 points for win, 0 for loss and 1 for tie. Disregarding the occasional crisis which may entrap even excellent teams in a continuum of abortive results, it is more likely that a more powerful team having a better playing strength beats the weaker one (idealized rule 1).Given an ideal league environment devoid of the influence of uninvited effects, we can assume a linear relationship between the playing strength of a team and the outcome of its game. Therefore, proportional to its playing strength, each team may have a chance of win. This conclusion comes from our second idealized rule (idealized rule 2).Using the playing strength criterion, the winner/loser in LCA is recognized in a stochastic manner with this condition that the chance of win for a team is proportional to its degree of fit (recall that in the basic version of LCA there is no tie outcome). The degree of fit is proportional to the team's playing strength and is measured by means of the distance with an ideal reference point.Let us consider teams i and j playing at week t, with their formationsXitandXjtand playing strengthsf(Xit)andf(Xjt), respectively. Letpitdenotes the chance of team i to beat team j at week t (pjtcan be defined accordingly). Let alsofˆbe an ideal value (e.g., a lower bound on the optimal value). Based on the idealized rule 1 we can write:(1)f(Xit)−fˆf(Xjt)−fˆ=pjtpit.Eq. (1) implies that the expected chance of win for team i (or j) is proportional to the difference between its current playing strength and the ideal strength along with an ideal team. In Eq. (1), we assume that a better team can comply with more factors that an ideal team owns. Since teams are evaluated based on their distance with a common reference point, the ratio of distances can determine the winning portion for each team.Based on the idealized rule 3 we can also write:(2)pit+pjt=1.From Eqs. (1) and (2) we get:(3)pit=f(Xjt)−fˆf(Xjt)+f(Xit)−2fˆ.To determine the winner or loser, a random number in [0,1] is generated; if it is less than or equal topit, team i wins and team j loses; otherwise j wins and i loses. Such a procedure for determining the winner/loser is consistent with idealized rules 2 and 4.Iff(Xit)be arbitrarily closed tof(Xjt),thenpitcan be arbitrarily closed to 1/2. Moreover, iff(Xjt)becomes far greater thanf(Xit),namelyf(Xjt)≫f(Xit),thenpitapproaches to 1. Since the value offˆmay be unavailable in advance, we use from the best function value found so far (i.e.,fˆ=tmini=1,...,L{f(Bit)}).Before any strategy is applied, it is important for a coach to evaluate the strengths and weaknesses of the individual members and the team as a whole. This will serve as a guide as to how to approach them and the kind of professional relationship that should be developed, which area to focus on, and how to teach the required game skills to enhance their performance. The analysis should also include the evaluation of opportunities and threats that comes along with the unique dynamics of the team. Strengths and weaknesses are often internal factors while opportunities and threats are external factors.Likewise in LCA, the artificial analysis of the team's previous performance (at week t) is treated as internal evaluation (strengths/weaknesses) while analysis of the opponent's previous performance is accounted as external evaluation (opportunities/threats). Modelling an artificial match analysis for team (individual) i (to devise for a new team formation for week t+1), if it had won (lost) the artificial game from (to) team j at week t, then we assume that the success (loss) was directly due to the strengths (weaknesses) of team i or based on the idealized rule 5 of Section 3, it was directly resulted by the weaknesses (strengths) of team j. Fig. 3(left branch) shows such a hypothetical internal evaluation for team i in a flowchart format. Now, based on the league schedule at week t+1, assume that the next mach of team i is with team l. If team l had won (lost) the game from (to) team k at week t, then that success (loss) and the team formation behind it may be a direct threat (opportunity) for team i. Apparently, such a success (loss) has been achieved by means of some strengths (weaknesses). Focusing on the strengths (weaknesses) of team l, gives us an intuitive way to avoid from possible threats (to receive benefits from the possible opportunities). Referring to idealized rule 5, we can focus on the weaknesses (strengths) of team k instead. Fig. 3 (right branch) demonstrates the hypothetical external evaluation followed by team i.Based on the previous week events (idealized rule 6 of Section 3), the possible actions for team i derived from the artificial match analysis can be summarized in the hypothetical SWOT matrix of Fig. 4. Given the basic S/T, S/O, W/T, W/O strategies explained earlier in Section 2, Fig. 4 demonstrates the conditions under which each of these metaphorical strategies is applicable for team i. For example, if team i had won and team l had lost, then it is reasonable that team i focuses on the strengths which made it capable to win. At the same time it should focus on the weaknesses that brought the loss for team l. These weaknesses may open opportunities for team i. Therefore, adopting an S/O type strategy would be a proper action for team i. The matrix presented in Fig. 4 is a metaphorical demonstration of the SWOT matrix which is typically used in planning [14].The above analysis is carried out by all participants during week t+1 to plan for a suitable team formation for their next match at the end of week t+1. After adopting a suitable focus strategy with the aid of the artificial SWOT matrix of Fig. 4, now teams should try to fill their gaps. For example, assume that team i has lost the game to team j and during match analysis it has been detected that the reason was for the weakness in a man to man defence (which allowed counter attacks by team j). Therefore, there is a gap between the current penetrable defensive state and the state which ensures a man-to-man pressure defence.Let us introduce the following indices:l=Index of the team that will play with team i (i=1,…,L) at week t+1 based on the league schedule.j=Index of the team that has played with team i (i=1,…,L) at week t based on the league schedule.k=Index of the team that has played with team l at week t based on the league schedule.LetXit,XjtandXktbe the team formations associated to teams i, j and k at week t, respectively. ByXkt−Xitawe address the gap between the playing style of team i and team k, sensed via “focusing on the strengths of team k”. In this situation, team k has won the game from team l and to beat l, it is reasonable that team i devises for a playing style almost similar to that was adopted by team k at week t (for example, playing counter attacking or high pressure defence). In a similar way we can interpretXit−Xktwhen “focusing on the weaknesses of team k”. Here, it may be sensible to avoid a playing style rather similar to that was adopted by team k (for example, avoid playing counter attacking or high pressure defence). We can interpretXjt−XitorXit−Xjtin a similar manner.Given the fact that usually teams play based on their current best formation (found it suitable over the time) while preparing the required changes recommended by the match analysis, the new formationXit+1=(xi1t+1,xi2t+1,…,xint+1)for team i (i=1,…,L) at week t+1 can be set up by one of the following equations.Ifi had won and l had won too, then the new formation is generated based on the adaptation of S/T strategy:(4)(S/Tequation):xidt+1=bidt+yidt(ψ1r1id(xidt−xkdt)+ψ1r2id(xidt−xjdt))∀d=1,…,nElse ifi had won and l had lost, then the new formation is generated based on the adaptation of S/O strategy:(5)(S/Oequation):xidt+1=bidt+yidt(ψ2r1id(xkdt−xidt)+ψ1r2id(xidt−xjdt))∀d=1,…,nElse ifi had lost and l had won, then the new formation is generated based on the adaptation of W/T strategy:(6)(W/Tequation):xidt+1=bidt+yidt(ψ1r1id(xidt−xkdt)+ψ2r2id(xjdt−xidt))∀d=1,…,nElse ifi had lost and l had lost too, then the new formation is generated based on the adaptation of W/O strategy:(7)(W/Oequation):xidt+1=bidt+yidt(ψ2r1id(xkdt−xidt)+ψ2r2id(xjdt−xidt))∀d=1,…,nEnd ifIn the above equations, d is the variable or dimension index. r1idand r2idare uniform random numbers in [0,1]. Ψ1 and Ψ2are coefficients used to scale the contribution of “retreat” or “approach” components, respectively. Note that the difference sign in parenthesis results in acceleration toward winner or retreat from loser.In Eqs. (4)–(7),yidtis a binary change variable which indicates whether the dth element in the new formation should differ from its counterpart in the current best formation or not. Onlyyidt=1allows for difference. Let us defineYit=(yi1t,yi2t,...,yint)as the binary change array in which the number of ones is equal toqit.It is not usual that coaches do changes in all or many aspects of their team. Normally a small number of changes are recommended. By analogy, it is sensible that the number of changes made inBit(i.e., the value ofqit) be small. To simulate the number of changes, we use a truncated geometric probability distribution [17]. Using a truncated geometric distribution, we can set the number of changes dynamically with more emphasis given to the smaller rate of changes. The following formula simulates the random number of changes made inBitto get the new team formationXit+1(see the Appendix).(8)qit=ln(1−(1−(1−pc)n−q0+1)r)ln(1−pc)+q0−1:qit∈{q0,q0+1,…,n}where r is a random number in [0,1] and pc<1, pc≠0 is a control parameter. If pc<0 then the situation is reversed and the more negative the value of pc, the more emphasis is given to the greater rate of changes. q0 is the least number of changes realized during the artificial match analysis. We assume that the number of changes made in the best formation is at least one, (i.e., q0=1). Typically, pcis known as the probability of success in the truncated geometric distribution. The greater the value of pc, the smaller number of changes are recommended. After simulating the number of changes by (8),qitnumber of elements are selected randomly fromBitand their value changes according to one of Eqs. (4)–(7).Example: The step-wise procedure for the implementation of the first iteration of LCA is given as follows. For demonstration of the procedure, the Rastrigin multimodal function is considered in 3 dimensions. We assume that the league size (L) is 4 and ψ1=ψ2=1.(1) Randomly initialize the team formations according to the league size and the number of variables and determine the playing strength along with each team formation. Let initialization be also the teams’ current best formation.Initial team formations=Team1Team2Team3Team4=X11X21X31X41=x111x121⋯x1n1x211x221⋯x2n1⋮⋮⋮⋮xL11xL21⋯xLn1=B11B21B31B41=b111b121⋯b1n1b211b221⋯b2n1⋮⋮⋮⋮bL11bL21⋯bLn1=1.55741.78731.5547−4.64282.5774−3.28813.49122.43132.06044.3399−1.0777−4.6816The corresponding playing strength(objective function)value=f(X11)f(X21)f(X31)f(X41)=54.482186.458462.127372.6008⇒fˆ=mini=1,...,4{f(Bi1)}=54.4821(2) Generate a league schedule.Week 1Week 2Week 3Team 1Team 4Team 3Team 2Team 2Team 3Team 4Team 1Team 3Team 2Team 1Team 4Team 4Team 1Team 2Team 3(3) Based on the league schedule at week 1, determine the winner/loser among each pair of teams using Eq. (3):p11=f(X41)−fˆf(X41)+f(X11)−2fˆ=72.5008−54.482172.5008+54.4821−2×54.4821=1p41=f(X11)−fˆf(X41)+f(X11)−2fˆ=54.4821−54.482172.5008+54.4821−2×54.4821=0⇒Team1is winnerTeam4is losserp21=f(X31)−fˆf(X31)+f(X21)−2fˆ=62.1273−54.482162.1273+86.4584−2×54.4821=0.193p31=f(X21)−fˆf(X31)+f(X21)−2fˆ=86.4584−54.482162.1273+86.4584−2×54.4821=0.807⟶r=0.159<0.193Team2is winnerTeam3is losser(4) Assume thatq11=q31=q41=1,q21=2and therefore assume thatY11=(0,1,0),Y21=(1,1,0),Y31=(1,0,0),Y41=(0,0,1). To generateq11,...,q41we use from Eq. (8). Set up a new team formation for each team for its forthcoming match at week 2, via the artificial match analysis process and apply the greedy selection to find the team's best formation as follows (the value of r1id and r2id is generated randomly):i=1⟶j=4,l=3,k=2,r112=0.225,r212=0.512Team1has won and Team3has lost.UseS/Ostrategyx112=b111=1.5574x122=b121+y121(ψ2r112(x221−x121)+ψ1r212(x121−x421))=1.7873+0.225(2.5774−1.7873)+0.512(1.7873+1.0777)=3.4319x132=b131=1.5547i=2⟶j=3,l=4,k=1,r121=0.124,r221=0.954,r122=0.765,r222=0.034Team2has won and Team4has lost.UseS/Ostrategyx212=b211+y211(ψ2r121(x111−x211)+ψ1r221(x211−x311))=−4.6428+0.124(1.5574+4.6428)+0.954(−4.6428−3.4912)=−11.6338x222=b221+y221(ψ2r122(x121−x221)+ψ1r222(x221−x321))=2.5774+0.765(1.7873−2.5774)+0.034(2.5774−2.4313)=1.9779x232=b23t=−3.2881i=3⟶j=2,l=1,k=4,r131=0.478,r231=0.201Team3has lost and Team1has won.UseW/Tstrategyx312=b311+y311(ψ1r131(x311−x411)+ψ2r231(x211−x311))=3.4912+0.478(3.4912−4.3399)+0.201(−4.6428−3.4912)=1.4505x322=b322=2.4313x332=b332=2.0604i=4⟶j=1,l=2,k=3,r143=0.871,r243=0.367Team4has lost and Team2has won.UseW/Tstrategyx412=b411=4.3399x422=b421=−1.0777x432=b431+y431(ψ1r143(x431−x331)+ψ2r243(x131−x431))=−4.6816+0.871(−4.6816−2.0604)+0.367(1.5547+4.6816)=−8.2651New team formations for week2=Team1Team2Team3Team4=X12X22X32X42=1.55743.43191.5547−11.63381.9779−3.28811.45052.43132.06044.3399−1.0777−8.2651The corresponding playing strength(objective function)value=f(X12)f(X22)f(X32)f(X42)=74.4908179.205851.5749115.7765Greedy selection phase:f(B11)<f(X12)⇒B12←B11f(B21)<f(X22)⇒B22←B21f(B31)>f(X32)⇒B32←X32f(B41)<f(X42)⇒B42←B41⇒B12B22B32B42=1.55741.78731.5547−4.64282.5774−3.28811.45052.43132.06044.3399−1.0777−4.6816⇒f(B12)f(B22)f(B32)f(B42)=54.482186.458451.574972.6008⇒fˆ=mini=1,...,4{f(Bi1)}=51.5749(5) The process is stopped if the maximum number of function evaluations achieved; otherwise repeat from step (3).Eqs. (4)–(7) use the teams’ most recent formations as a basis to determine the new formationXit+1. Let us use the notation “LCA/recent” to address such a variant of LCA. It is also possible to introduce another variant of LCA through developing an alternative set of equations for generating the new team formations. Instead of using the most recent formations in the differential operations in Eqs. (4)–(7), we can use the current best formations. This means replacing xtwith btin Eqs. (4)–(7). Therefore, an alternative system of equations can be introduced by Eqs. (9)–(12), respectively.(9)(S/Tequation):xidt+1=bidt+yidt(ψ1r1id(bidt−bkdt)+ψ1r2id(bidt−bjdt))∀d=1,...,n(10)(S/Oequation):xidt+1=bidt+yidt(ψ2r1id(bkdt−bidt)+ψ1r2id(bidt−bjdt))∀d=1,...,n(11)(W/Tequation):xidt+1=bidt+yidt(ψ1r1id(bidt−bkdt)+ψ2r2id(bjdt−bidt))∀d=1,...,n(12)(W/Oequation):xidt+1=bidt+yidt(ψ2r1id(bkdt−bidt)+ψ2r2id(bjdt−bidt))∀d=1,...,nUsing our twofold notation, the new variant is introduced by “LCA/best”. The idea behind introducing this variant is closely related to the fact that generally, changes in the legacy formations are minor and therefore coaches are able to anticipate the playing strategy of their opponents relying on the knowledge they have acquired over the time form the opponents’ best style. In order to accelerate the convergence process, when a team formation replaces its best formation in LCA/best, it is allowed that the new solution, which is a better solution, contributes in creation of the other two solutions in the current generation. In this way, a promising solution does not need to wait for the next generation to share its components.Before finishing this section, it is worthy of note that in LCA diversification is controlled by allowing “retreat” from a solution and also by coefficient Ψ1, while intensification is implicitly controlled by permitting “approach” to a solution and by coefficient Ψ2. Moreover, the greedy selection employed to update the current best formations affects the intensification ability of the algorithm.

@&#CONCLUSIONS@&#
