@&#MAIN-TITLE@&#
MGP-INTACTSKY: Multitree Genetic Programming-based learning of INTerpretable and ACcurate TSK sYstems for dynamic portfolio trading

@&#HIGHLIGHTS@&#
MGP-INTACTSKY is a fuzzy rule based system for dynamic portfolio trading.Multitree Genetic Programming (MGP) is applied to learn the TSK fuzzy rule bases.The new TSK structure leads to a more interpretable and accurate system.Input variables are technical indices selected by stepwise regression analysis.The results are based on testing of the model on one emerging and two mature markets.

@&#KEYPHRASES@&#
Dynamic portfolio trading,Interpretability–accuracy tradeoff,Multitree genetic programming,Technical indices,TSK fuzzy rule based system,

@&#ABSTRACT@&#
In this paper, a Multitree Genetic Programming-based method is developed to learn an INTerpretable and ACcurate Takagi-Sugeno-Kang (TSK) fuzzy rule based sYstem (MGP-INTACTSKY) for dynamic portfolio trading. The MGP-INTACTSKY utilizes a TSK model with a new structure to develop a more interpretable and accurate system for dynamic portfolio trading. In the new structure of TSK, disjunctive normal form rules with variable structured consequent parts are developed in which the absence of some input variables is allowed. Input variables are the most influential technical indices which are selected by stepwise regression analysis. The technical indices are computed using wavelet transformed stock price series to eliminate the noise. The proposed system directly induces the preferred portfolio weights from the stock's technical indices through time. Here, genetic programming with the multitree structure is applied to learn the TSK fuzzy rule bases with the Pittsburgh approach. With this approach, the correlation of different stocks is properly considered during the evolutionary process. To evaluate the performance of the MGP-INTACTSKY for portfolio trading, the proposed model is implemented on the Tehran Stock Exchange as an emerging market as well as Toronto and Frankfurt Stock Exchanges as two mature markets. The experimental results show that the proposed model outperforms other methods such as the momentum strategy, the multitree genetic programming-based crisp system, the genetic algorithm-based first order TSK system, the buy and hold approach and the market's main index in terms of accuracy and interpretability.

@&#INTRODUCTION@&#
Portfolio selection and management involves the construction of a portfolio of assets, combined efficiently to achieve a set of return and risk objectives. Two approaches are currently used in portfolio management, including passive and active portfolio management [1]. In passive management, the investor establishes a well-diversified portfolio and maintains it for a specific set of time. This strategy is related to the idea that it is not possible to beat the market, as stated by random walk theory. Most of the researches dealing with portfolio selection focus on a passive management approach. The foundation of portfolio optimization with the passive approach was laid by Markowitz in 1952 [2].On the other hand, in active management, the portfolio is rebalanced through time. The investor with the active management approach tries to find undervalued and overvalued stocks dynamically in order to achieve a significant profit with the price's rise or fall. The genetic algorithm (GA) and genetic programming (GP) have been used successfully for active portfolio management based on the fundamental analysis approach [3–6].Another approach manages a financial portfolio using technical analysis indicators. A GA-based dynamic portfolio management system has been proposed by combining some well-known technical trading rules [7]. A dynamic portfolio optimization model has been developed for adapting to the change of stock prices based on time adapting genetic network programming (TA-GNP) [8]. Transaction cost and risk are the two factors that can affect the performance of the dynamic portfolio trading models significantly. However, they were not considered in [7,8]. The GNP model is extended to consider the risk of trading in terms of conditional value at risk [9,10]. Also, a fuzzy rule based system has been developed using an artificial evolutionary process for portfolio trading considering transaction cost and risk [11]. The fuzzy portfolio trading system uses some technical indices as the inputs and ranks the stocks according to their fit as a “buy” recommendation. Despite the attractiveness of the above mentioned studies [7–9,11], they did not present a model which specifies the amount of each stock in the portfolio composition. They just advised undervalued stocks for buying and overvalued ones for selling. The developed models in [7,11] extract a single pattern for the fluctuations of all stocks and the systems use the same rule base for them. In another work, an adaptive neuro-fuzzy inference system (ANFIS) was integrated with the capital asset pricing model (CAPM) for dynamic portfolio management [12]. Furthermore, a fuzzy rule based expert system has been developed for this problem [13]. The models proposed by [10,12,13] support portfolio managers in their middle term stock evaluation and portfolio construction decisions. They used two distinct models for single stock price forecasting and evaluation and portfolio management. Recently, a portfolio trading system has been proposed that directly induces portfolio weights from time series of asset prices and volumes [14]. The multitree GP is used to learn the portfolio trading system considering transaction cost and risk.The trading systems are widely used in investment decision making and a lot of traders modify the trading systems with their views to make a final decision. Therefore, the comprehensibility of the system is a major problem in this context. In fuzzy logic, the rules are represented in a natural language and consequently it can model human reasoning better than classical logic and probability theory. This paper intends to improve the interpretability and performance of the portfolio trading system using fuzzy logic. Table 1summarizes this study in comparison with the previous researches for developing a portfolio trading system with the technical approach.The main objective of this study is to develop a fuzzy rule based system that directly induces portfolio trading decisions from time series of asset prices and technical indices. This fuzzy system learns a direct mapping from technical indices to portfolio weights and can specify dynamically the preferred weight of the stocks in the portfolio composition, regarding return, imposed risk and transaction costs. In this paper, a TSK (Takagi-Sugeno-Kang) type fuzzy rule based system will be developed, because TSK systems have shown a powerful representative capability. They are able to describe nonlinear mappings using a small number of simple rules [15] especially in comparison with Mamdani type systems [16]. Moreover, TSK systems are very suitable for modeling dynamic systems in comparison with other fuzzy modeling methods [17]. Also, the good ability of the TSK systems in forecasting the stock prices has been confirmed [18,19].Evolutionary algorithms (EAs) and particularly genetic algorithms have been successfully applied for learning fuzzy systems which leads to genetic fuzzy systems (GFS) [20–22]. EAs are selected for learning the system because of their powerful and flexible search capability with flexible representation structures [23]. Moreover, there are many successful GFSs developed for stock price prediction in the literature [24–27].Although most GFSs are GA-based, there are some researches that used other types of EAs such as GP. In the case of GP-based GFSs, a tree representation of fuzzy models has been proposed and GP has been used to simultaneously identify the rule structure and the parameters of the membership functions in a TSK system [28]. Also, a GP approach has been introduced for only the structure identification of the TSK fuzzy systems [29]. GP has been used to learn the consequent part of TSK models with unusual structures [30] as well as compact and accurate fuzzy rule based classification systems for high dimensional problems [31]. In the context of financial forecasting, GP has been applied successfully in single stock trading system development [32–34] as well as portfolio trading system development [14]. Therefore, we will pay special attention to the GFSs which learn fuzzy rule bases by GP.Although the TSK systems are very powerful in designing an accurate and precise system, they suffer from interpretability issues [15,35]. There are some studies that try to improve the interpretability of the TSK systems maintaining its accuracy. For example, singular value decomposition was used to construct interpretable TSK fuzzy models and reduce a given fuzzy rule set [36,37]. An interpretable TSK fuzzy neural model has been proposed in which the local behavior of each obtained rule consequent is improved [38]. A reduced interval type-2 neural fuzzy system using weighted bound-set boundaries (RIT2NFS-WB) has been introduced for computation speedup and chip implementation [39]. In RIT2NFS-WB, the distinguishability of the fuzzy sets has been improved as a semantics-based interpretability and the number of fuzzy sets and rules has been reduced as a complexity-based interpretability. Recently, the minimax probability decision technique is introduced to train TSK fuzzy systems with a high level of interpretability and transparent model reliability for classification tasks [40]. All of the above mentioned studies attempted to develop interpretable TSK systems when the desired output is known. Fazzolari et al. [41] has provided an overview of multi-objective evolutionary fuzzy systems designed to construct TSK rules with a good accuracy-interpretability tradeoff for classification and regression problems.Our study introduces a TSK fuzzy rule based system with a new structure to develop a more interpretable system with a good performance when the desired output is unknown. The structure of the TSK rules is developed using disjunctive normal form fuzzy rules with variable structured consequents that allow the absence of some input variables in antecedent and consequent parts. To learn such a rule base, we need an algorithm that has the ability to learn variable sized rules with variable structures and some restrictions on the rules structures. In this study, the new TSK fuzzy system is learned by GP with a context free grammar. The GP individuals are coded in the Pittsburgh approach by which a whole rule base is represented by one individual. Therefore, a GP with a specific structure named Multitree GP is developed to learn an INTerpretable and ACcurate TSK sYstem (MGP-INTACTSKY) for dynamic portfolio trading.The novelty of this paper can be stated from two different aspects. First, the structure of the TSK rule base is extended to design a more interpretable, compact and accurate system. Second, for the first time, the TSK rule based model is developed for dynamic portfolio trading. The main contribution of this paper is the development of an interpretable TSK system with a good performance for portfolio trading. The advantages of the developed portfolio trading system can be mentioned as follows:(1)The portfolio trading system directly induces the preferred portfolio composition from the technical indices of the stocks.It considers the transaction cost and risk of the trading as two important factors in dynamic trading.It considers the correlation of different stocks in the portfolio composition.It is easily understandable for financial managers and could be modified according to their experiences.The proposed model includes four stages to develop the TSK fuzzy system with the new structure for portfolio trading. At the first stage, the time series of the stocks prices are transformed using wavelet transformation. The unnecessary information and the data noises are eliminated in this stage. At the second stage, the most effective technical indices are chosen using stepwise regression analysis. At the third stage, the triangular membership functions are assigned to the selected indices using a modified Adeli–Hung algorithm. Finally, at the fourth stage, the TSK type portfolio trading systems are learned using multitree GP.The rest of the paper is organized in the following way. In Section 2, the TSK type fuzzy system with its new structure will be described. The GP and multi tree GP are introduced in Section 3. Section 4 presents a comprehensive description of the MGP-INTACTSKY for dynamic portfolio trading. The presented model is implemented to develop portfolio trading systems in an emerging and two mature markets and the experimental results are reported in Section 5. Finally, in Section 6 some concluding remarks are pointed out.As was mentioned, this study aims to develop a TSK fuzzy system for dynamic portfolio trading applying the technical indices as the input variables. In the TSK model, the knowledge base includes fuzzy rules with crisp functions as the consequent, of the form:IFx1isrAi1ANDx2isrAi2THENyi=fi(x1,x2)where x1, x2 are linguistic variables, Ai1, Ai2 are corresponding fuzzy sets and fiis a crisp function of the condition variables. For the first order TSK model, the crisp function is represented as fi(x1, x2)=ai0+ai1x1+ai2x2.For Rule i, a weighting parameter wiis obtained corresponding to the condition membership functions, by using a t-norm operator. The crisp inferenceyˆis determined as a weighted average of the individual rule inferences according to (1)(1)yˆ=∑i=1rwiyi∑i=1rwiwhere r is the total number of rules.The fuzzy rule based systems with TSK structures have the capability of explaining complex relations among variables using rule consequents that are functions of the input variables. Although they are powerful tools regarding accuracy, they present the great drawback of the lack of interpretability. Consequently, they are not so suitable for a wide range of problems where interpretability of the model is important [15]. Interpretability refers to the capability of the fuzzy model to express the behavior of the system in an understandable way [42]. Interpretability is a subjective property that depends on several factors, such as the interpretability of the input fuzzy sets (transparency), the number of fuzzy rules, the number of conditions and variables in each fuzzy rule (compactness). The first factor, transparency, is related to interpretability of the fuzzy sets. The fuzzy sets should be interpretable as linguistic labels that are meaningful for experts in the problem under study [43]. In MGP-INTACTSKY, a specified number of fuzzy sets are assigned to each input variable that are interpretable as linguistic labels. Furthermore, the overlapping among the fuzzy sets of the adjacent labels should be restricted to some degree and their vertex points should not intersect [44]. In our proposed model, the selected algorithm for fuzzification assigns symmetrical triangular membership functions to each label with these properties. However, in this design the number of rules increases exponentially with the number of input variables and linguistic labels, which deteriorates the compactness of the fuzzy model [16]. The exponential growth of the number of the rules, which is regarded as combinatorial complexity, is for canonical form fuzzy rule bases. In canonical form rules, the input variables are combined using the conjunction operator. Fig. 1(a) shows a typical combinatorial antecedent space partition for a two-dimensional antecedent with three fuzzy sets for each input variable. As shown in this figure, 9 rules are required to design a complete fuzzy model. In practice, a more compact fuzzy model can be designed by merging regions that exhibit a similar local behavior [42]. Fig. 1(b) shows a possible partition after merging some similar regions which reduces the number of rules to 5. In this approach, the antecedent of the fuzzy rules contains conjunction, disjunction and complement operators.In this study, the usual structure of the TSK fuzzy rule based system is extended to a more compact and interpretable structure. In the new structure, the input variables are combined using AND operator, and the linguistic terms within each input variable are combined using OR operator. Also, the NOT operator is allowed for the linguistic terms of input variables. This structure introduces a special type of fuzzy rule that can comprise several canonical rules, called disjunctive normal form (DNF) fuzzy rule [31]. Moreover, the absence of some input variables is allowed in the antecedent part of the rules. This leads to a more interpretable TSK system, regarding the number of conditions per rule.Additionally, the consequent part of the TSK system is extended to derive a more accurate and interpretable model. The consequent part of the new TSK system is not restricted to a first or a higher order polynomial. It can be in the form of any function of the input variables where the absence of some input variables is allowed. In this way, the expressive power that each rule can provide is increased and therefore a more accurate system can be developed [15]. Furthermore, the dimension difference between antecedents and consequents leads to a system having a smaller number of rules and a more compact rule base [45].Therefore, a more accurate and interpretable TSK system, in terms of compactness and transparency, is modeled with a new structure. The following is an example of a TSK rule with the new structure:IFx1isrA11AND(x3isrA32ORx3isrA33)ANDx4isrNotA41THENyi=ai0+ai1x1+ai2x1x2+ai3x32+ai5x4/x1which is equivalent to the following rule [46]:IFx1isrA11ANDx3isr(A32ORA33)ANDx4isrNotA41THENyi=ai0+ai1x1+ai2x1x2+ai3x32+ai5x4/x1To learn such a rule base, the algorithm must have the ability to represent variable sized rules with different structures. Although the possible structures of the rules are flexible, all of them are not valid and some restrictions have to be imposed. A compact representation of the valid structures of the TSK rules can be defined through a context-free grammar. Therefore, this study uses genetic programming with a context free grammar to learn a TSK fuzzy system with variable structures in both the antecedent and the consequent parts.Genetic programming was developed by Koza in 1992, as an extension of the genetic algorithm [47]. The main difference between GP and GA is the representation scheme used. In GP, the individuals encode variable sized programs that provide the solutions to the problem instead of the fixed length solutions. These programs are usually expressed as trees.According to the literature, GP has been used successfully to extract knowledge in the form of IF-THEN rules as technical trading rules [32–34]. In this approach, GP individuals encode complete decision trees and thus the evolutionary process is computationally complex.In this paper, we will pay special attention to the GPs which learn rule bases in the form of TSK fuzzy systems. Therefore, we should evolve multiple decision trees as a rule base, rather than one tree as a decision rule. There are two approaches that are used in different genetic learning methods to learn the rules of a rule based system as:(1)The Pittsburgh approach, in which a whole rule base is coded by one individual [48].The second approach, in which one rule is coded by one individual and the whole rule base is generated as a combination of several individuals in one population (rule cooperation) or different populations during the evolutionary process (rule competition). The Michigan, iterative rule learning and genetic cooperative-competitive learning approaches follow this approach.The above mentioned genetic learning approaches have been used to learn fuzzy systems. Although most of the related researches are GA-based, there are some studies that use other types of EAs like GP. For example, the Pittsburgh approach has been followed to evolve GP-based GFS for classification [29]. The genetic cooperative-competitive learning approach has been used for GP-based learning [30,31]. Each of the learning approaches has some advantages and disadvantages [49,50]. Although in the Pittsburgh approach, the individuals are more complex and often more elaborate genetic operators are needed; however, this is the best approach that takes into account the interaction among the rules within the rule base [51,52]. This study uses the Pittsburgh approach to learn multiple TSK systems for multiple stocks portfolio trading. With this approach the interaction between different stocks is properly considered in the evolutionary process. The Pittsburgh-style learning needs a specific GP structure which is named multitree GP or GP forest. In multitree GP, each GP individual contains multiple trees rather than one tree.This section presents a hybrid artificial intelligence method, to construct an interpretable and accurate TSK system with a new structure, named MGP-INTACTSKY for portfolio trading. In this approach, technical variables and indices are used to predict the future behavior of each stock and a portfolio of stocks is suggested based on the predictions to achieve the two portfolio optimization goals of maximizing return and minimizing risk. Since many trades take place in dynamic trading, transaction cost would affect the profitability of trading systems and it is considered in the model. For each stock, the crisp technical indices are entered to the TSK system as inputs and the proportion of the stock in the portfolio composition is obtained as the weighted average of the rule's outputs. Since different stocks fluctuate in different patterns in stock markets, a unique TSK system is developed for each stock and each TSK system is implemented for its corresponding stock separately. On the other hand, the correlation of the stocks is considered during the evolutionary process with the Pittsburgh learning approach.The overall framework of the MGP-INTACTSKY is shown in Fig. 2. The following sections describe each step in detail.The stock price series are affected by a mixture of deterministic and random variables that operate on different time scales simultaneously. Therefore, the relationships between variables may differ across different time scales [53]. Wavelet transforms are used to decompose time series data into different frequency components. Wavelet transform is powerful in dealing with the nonstationarity involved with financial time series. Recently, wavelet transform has been applied successfully in stock price forecasting and also exchange rate prediction [53–56].The practical procedure for the application of discrete wavelet transform is known as Mallat's algorithm [57]. In this algorithm, the original signal is decomposed into a low frequency content named approximation signal and a high frequency content named detailed signal. The decomposition process is repeated until the desired decomposition level is reached. Mallat's algorithm in three levels is illustrated in Fig. 3.In this work, wavelet transform using the Haar wavelet is applied on the stock price series to decompose the series and eliminate the noise. Haar wavelet is selected because it is simpler and faster to visualize and implement with an acceptable performance. Haar wavelet has been widely used to decompose time series data especially in economics and finance [53,55,56]. The decomposition level depends on the length of the original time series and the time horizon [55]. As the investment horizon is longer, the higher decomposition level is desired. Since our portfolio trading system concentrates on day-to-day fluctuations, low level wavelet decomposition is more useful than high level ones.Variable selection selects the most influential subset of input variables and removes some variables with low impacts which may decrease the explanation ability of the model and increase the error. This step is essential especially in the case of a large number of potentially useful variables. There are a variety of variable selection methods such as principal component analysis, gray relation analysis and stepwise regression analysis (SRA). SRA has been applied promisingly for variable selection in the field of stock market forecasting [18,19,24]. At each step of SRA, a single variable is added or removed from the current variable set, the simple regression is carried out and then the F-test statistic decides whether to add or remove variables from the model to decrease the sum of squared error.Adeli and Hung proposed an algorithm to determine membership functions using neural networks [58]. The Adeli–Hung algorithm (AHA) includes two stages: Adeli–Hung clustering and membership functions assignment. The AHA assigns a membership degree to each training instance. However, we should assign a specified number of fuzzy sets to each input variable in our design. Therefore, we modified AHA to apply it to MGP-INTACTSKY. In the modified algorithm, the input variables are first clustered using a topology and weight change neural network including the following steps:1.Normalize the input variable data set (X).Initialize the cluster center (C1) as the median of the data.Define a threshold value (k) for the input variable and the cluster center.Cluster the input variable using AHC:Set i=1.Calculate the Euclidean distance between the ith data (Xi) and the available cluster center(s) (D(Xi, Cj)).If min{D(Xi, Cj), j=1, 2, …, c}>k then define the Xias a new cluster center; otherwise, add the ith data to the cluster with minimum distance and update the cluster center as the average value of the data belonging to the cluster.If all the data are clustered go to step 5; otherwise increment i and go to step 4.2.If the desired number of clusters (linguistic labels) is reached stop; otherwise go to step 2.Then the fuzzy membership degree of the ith data in the jth cluster, μj(Xi) can be defined using triangular-shaped membership functions as (2)[59]:(2)μj(Xi)=f[D(Xi,Cj)]=0ifD(Xi,Cj)>k1−D(Xi,Cj)/kifD(Xi,Cj)≤kIn this way, each input variable is partitioned into a number of fuzzy sets and a linguistic label is assigned to each fuzzy set that is easily understandable and meaningful for the experts. Furthermore, the fuzzy sets are symmetric, triangular and the fuzzy sets of the adjacent labels overlap to some degree where their vertex points do not intersect. This makes the developed system more transparent.One of the most important and difficult tasks in developing a fuzzy rule based system is to derive an appropriate knowledge base about the problem. In this paper, GP as an artificial intelligence technique is used to learn TSK fuzzy rule based systems for dynamic portfolio trading. The proposed GP model learns the TSK rule bases in disjunctive normal forms with variable structured consequent parts where the absence of some input features is allowed. The coding mechanism of the GP chromosomes and the GP basic steps for developing a dynamic portfolio trading system are described in the following sections.As was mentioned in Section 3, the Pittsburgh approach is used to learn the TSK fuzzy systems. In this approach, each chromosome encodes the whole fuzzy rule bases. In order to develop a portfolio trading system for m stocks in which each TSK system is planned to have n rules, each GP chromosome must include m×n rules. The rules are expressed in tree structures. Due to the specific structure of the TSK fuzzy rules, each tree is composed of two different parts. The root node is always a conditional operator, i.e. IF-THEN node with two subtrees. The left subtree represents the structure of the antecedent of the rule and the right one represents the consequent part of the rule. These two parts of rule evolve with different structures and have different function and terminal sets introduced in Table 2.Fig. 4shows a typical GP chromosome representing m TSK fuzzy systems for m stocks portfolio trading. In this figure, the TSK system for the second stock and its third rule are highlighted as an example. The highlighted tree represents one of the TSK rules as:IF((k9isrA21)OR(k9isrA22))AND((BIAS6isrA13)AND(D9isrA32))THENy3,2=D9/K9×(4×0.5)+((BIAS6×2)−D9/3)which is equivalent to:IF(k9isr(A21ORA22))AND(BIAS6isrA13)AND(D9isrA32)THENy3,2=2D9/K9+2BIAS6−D9/3Trees are initialized randomly using the specified function and terminal sets. The initial population is generated by a widely used initialization method, known as ramped half-and-half [60]. In this method, half of the initial population is constructed using the full method (all tree branches have the ultimate depth) and another half of the population is constructed using the grow method (there are some tree branches with lower depth).In this paper, the risk adjusted measure is used for fitness evaluation of the GP individuals. Risk adjusted measures are generally calculated by the excess return of the investment over its risk, where excess return is the return of the investment over the risk free rate. Variation of most measures is based on their different definitions of risk. Among a large number of risk adjusted measures, the conditional Sharpe ratio is chosen for the MGP-INTACTSKY, since it uses CVaR as a risk measure which is an optimal coherent risk measure and considers the subjective risk aversion of the investor [61,62]. Conditional Sharpe ratio is calculated by (3):(3)ConditionalSharperatio=E(r−rf)CVaR1−αwhere r: the return of the portfolio; rf: risk free rate; CVaR1−α: conditional value at risk over the given time horizon with 100 (1−α)% confidence level.CVaR is the expected loss under the condition that the value at risk is exceeded. In order to calculate CVaR, historical simulation has been chosen among the three available methods of variance–covariance method, historical simulation and Monte Carlo simulation.The GP individuals are evaluated by the cumulative risk adjusted measure of their advised portfolio trading system as:(4)fitnessfunction=∑i=1tRi−rfCVaR1−αwhere t is the number of portfolio rebalancing in the period advised by the trading system, Ri: return of the ith rebalancing considering related transaction costs.From the two most common selection algorithms, i.e. roulette wheel and tournament selection [60], roulette wheel or fitness proportionate selection is used. In the roulette wheel, each member's chance for selection is proportionate to its fitness.Genetic operators are applied to the selected individuals to create a new population. Among these operators, crossover, mutation and reproduction have been used in MGP-INTACTSKY. The following sections present a detailed description of the used operators in our model.Bloat, uncontrolled growth of program sizes during GP runs, is an inevitable event in the GP evolutionary process especially after crossover operation. Here, the maximum depth of programs is specified to prevent bloating in new offspring. The genetic operator is implemented again if offspring depth exceeds the specified depth [63]. When a population of offspring is generated using genetic operators, a new joint population is formed by adding new offspring to the last population. Individuals in the joint population are arranged according to their fitness and the best individuals are selected as the new population.Crossover plays a vital role in the GP evolutionary process, which is applied to two selected chromosomes (C1, C2) with a specified crossover rate. In MGP-INTACTSKY, three crossover strategies are designed for the specific structure of the GP individuals. The strategies are planned such that a part or the whole rule base of one stock from the first parent is swapped with the same stock from the second parent.•Multitree crossover: two multitrees representing two rule bases for a stock (SI1, SI2) are randomly selected at C1, C2. Then SI1 and SI2 are swapped.Tree crossover: two trees representing two rules (RJ,I1, RJ,I2) are randomly selected from the randomly selected multitrees. Then RJ,I1and RJ,I2are swapped.Subtree crossover: a part of the selected trees are swapped. At first, a multitree of the first parent is randomly selected (SI1) and a tree is randomly selected (RJ,I1) from the selected multitree. Then a node is randomly selected from the RJ,I1as the first crossover point. The second crossover point is randomly selected from a subset of allowed nodes of RJ,I2. The subset of allowed nodes are a subset of RJ,I2nodes that produce valid offspring which represents a meaningful rule after crossover. Offsprings are created by swapping the subtrees rooted at the crossover points.These crossover strategies are implemented with a specified rate. They are like two point crossover in GA. After the above crossover strategies, the multitrees of Si1 and Si2 are swapped for all i=I, I+1,…,m with a specified rate. This is similar to one point crossover in GA.Mutation is the other genetic operator which is implemented on some individuals with a specified mutation rate. In MGP-INTACTSKY, four mutation strategies are designed as follows:•Multitree mutation: a multitree representing a rule base for a stock is randomly selected and is replaced by a new generated rule base.Tree mutation: a tree representing a rule of a stock's rule base is randomly selected and replaced with a new rule.Subtree mutation: for the antecedent part of the rule a subtree representing a part of the antecedent is randomly selected and is replaced with a new subtree. The root of the new subtree should be selected from the subset of allowed function set to generate a valid rule. This strategy is similar to the grow mutation introduced in [64] when a non-leaf node is selected as the mutation point. However, for the consequent part of the rules, both the prune and grow mutation strategies are possible. In the prune mutation, a non-leaf node is randomly selected and replaced with a leaf node. In the grow mutation, a node whether leaf or non-leaf is randomly selected and replaced by a subtree.Node mutation: a node, whether leaf or non-leaf, is randomly selected and is mutated by another value from a subset of allowed function or terminal set.Every time, one of the above mutation strategies is selected with a specified rate and is applied to the selected individual.Reproduction is the last implemented genetic operator which inserts a copy of the selected individuals into the next generation without any modification. MGP-INTACTSKY applies this operator with a specified reproduction rate to maintain some of the best individuals in the next population.

@&#CONCLUSIONS@&#
This paper presents a Multitree GP-based approach to learn an INTerpretable and ACcurate TSK fuzzy sYstem (MGP-INTACTSKY) for dynamic portfolio trading. A TSK system with a new structure was introduced to design a more interpretable, compact and accurate system. In the new structure, disjunctive normal form TSK rules are developed where the absence of some input variables is permitted. Also, the consequent part of the TSK rules is not restricted to the first order or the higher order polynomials.Our proposed portfolio trading system directly induces the preferred portfolio weights from technical indices. Compared with the MGP model [14] for portfolio trading, the proposed MGP-INTACTSKY model has four advantages. First, two preprocessing steps of wavelet transformation and stepwise regression analysis are done to eliminate the noise and select the most influential factors for forecasting the stock market. Second, the MGP-INTACTSKY includes a rule base for each stock rather than one rule per stock. This makes the system more profitable. Third, in the MGP model, the new portfolio weights are a function of the previous portfolio weights. Therefore, the new portfolio composition is strongly influenced by the initial portfolio composition. It can be regarded as the main drawback of the MGP model. However, in MGP-INTACTSKY, the portfolio weights are a function of technical indices. Fourth, the proposed TSK system for portfolio trading is more interpretable than the system advised by the MGP model. Our proposed model presents multiple rule bases which are easily understandable for all investors. Hence, they can modify the rule bases according to their financial knowledge and expectations.The proposed model was implemented in the Tehran, Toronto and Frankfurt Stock Exchanges to evaluate the performance of the portfolio trading system in an emerging market as well as two mature markets. Four experiments with different time windows were designed to test the performance of the system along different time periods. The profitability of the MGP-INTACTSKY was compared with the momentum strategy, multitree genetic programming-based crisp system (MGP), genetic algorithm-based first order TSK system (GA-TSK), buy and hold approach and the market's main index in terms of the rate of return and risk. Furthermore, the interpretability of the proposed model was examined in terms of compactness. The experimental results showed that the MGP-INTACTSKY significantly outperforms the other models on the risk adjusted and unadjusted basis. Furthermore, the proposed model generated TSK systems that were more interpretable than TSK systems with the usual structures.The MGP-INTACTSKY could be extended to cover the derivative tools as well as other financial assets. Furthermore, incorporating fundamental and macroeconomic variables could improve the performance of the MGP-INTACTSKY. Above all, the MGP-INTACTSKY uses well-known aggregation connectors of minimum t-norm, maximum t-conorm and standard complement. Cooperative learning of linguistic fuzzy rule bases and parametric aggregation connectors can be considered to get more accurate fuzzy models [70]. Additionally, a hierarchical optimization approach could be developed to optimize the parameters of the fuzzy system such as the number and the type of membership functions, their parameters and also the percentage of rules in the system [71,72]. These issues are left for our future study.