@&#MAIN-TITLE@&#
Smooth surfaces from rational bilinear patches

@&#HIGHLIGHTS@&#
We approximate negatively curved surfaces by smooth unions of rational bilinear patches.We prove vertex consistency of hyperbolic nets using a CAGD approach.We generate smooth surfaces composed of Darboux cyclide patches.

@&#KEYPHRASES@&#
Discrete differential geometry,Architectural geometry,Fabrication-aware design,Asymptotic net,Hyperbolic net,Rational bilinear patch,Darboux cyclide,Darboux transformation,

@&#ABSTRACT@&#
Smooth freeform skins from simple panels constitute a challenging topic arising in contemporary architecture. We contribute to this problem area by showing how to approximate a negatively curved surface by smoothly joined rational bilinear patches. The approximation problem is solved with help of a new computational approach to the hyperbolic nets of Huhnen-Venedey and Rörig and optimization algorithms based on it. We also discuss its limits which lie in the topology of the input surface. Finally, freeform deformations based on Darboux transformations are used to generate smooth surfaces from smoothly joined Darboux cyclide patches; in this way we eliminate the restriction to surfaces with negative Gaussian curvature.

@&#INTRODUCTION@&#
The growing interest of contemporary architects in freeform structures poses new challenges to digital design. In this area, there are numerous open problems, one of them being the production of smooth architectural freeform skins (surfaces). To make them affordable, they have to be composed of simple and easily manufacturable panels (patches). The manufacturing cost of a panel depends on the material and the process to produce it, which includes the production of the mold.Let us look at an example: To produce a curved glass-fibre reinforced concrete panel, a mold is produced from styrofoam. The cheapest way of mold production is to use heated wire cutting, which can only produce ruled surfaces. Hence ruled panels are an advantage. Ruled surfaces are also advantageous for the manufacturing of form work on which the concrete is poured, for substructures and for timber constructions.Hence, as a contribution towards fabrication-aware design, we ask ourselves how to compose smooth surfaces from simple ruled patches. The simplest case, smooth surfaces from bilinear patches, has been investigated recently by Käferböck and Pottmann (2013). The resulting surfaces possess rather strong shape restrictions as they represent discrete versions of affine minimal surfaces previously introduced by Craizer et al. (2010).Can we do more with rational bilinear patches? It is clear that smoothly joined negatively curved patches will only generate models of negatively curved surfaces S. It turns out that the only remaining restriction is on the topology of S: the surface S has to be simply connected. As in many other instances of geometric problems in freeform architecture (Wallner and Pottmann, 2011), we are again led to discrete differential geometry: Useful discrete representations of negatively curved surfaces are discrete asymptotic parameterizations, namely quad meshes with planar vertex stars (A-nets; see e.g. Bobenko and Suris, 2008). Huhnen-Venedey and Rörig (2013) could show that simply connected A-nets (whose extraordinary vertices are of even valence) can be extended to smooth surfaces via rational bilinear patches (under a certain mild condition on the way how the quad strips in the mesh are twisted, which for a sufficiently fine A-net is satisfied anyway). They call the resulting structures hyperbolic nets (H-nets), as they are typically composed of hyperboloid patches (but may contain patches of hyperbolic paraboloids as well).In the present paper, we further elaborate on hyperbolic nets by providing a new elementary derivation: While Huhnen-Venedey and Rörig (2013) work in the Plücker quadric model of line geometry, we just use the rational Bézier form and thus also contribute to a simple computation based on standard CAGD methods. Moreover, we add a proper algorithmic treatment of surface approximation with H-nets, formulated within a global geometric optimization framework.Paneling freeform skins is an important issue in architecture. Eigensatz et al. (2010) presented an optimization framework which allows one to achieve a good balance between production cost and skin quality, the latter being evaluated through the size of gaps and the kink angles occurring at adjacent panels. Ideally, these measures should be zero, but this is in general not achievable, unless the geometry and the panel seam layout are special.Negatively curved smooth surfaces which are composed of ruled surface strips, have been addressed by Flöry (2010), Flöry and Pottmann (2010), Flöry et al. (2012). This work does not employ rational bilinear patches. It can be seen as a computational approach to semidiscrete asymptotic parameterizations, which have been investigated from a mathematical viewpoint by Wallner (2012).As we deal here with a smooth extension of a mesh, we point to the related problem of extending the vertices of a circular mesh (quad mesh all whose quads possess a circum-circle) smoothly with Dupin cyclide patches (Bobenko and Huhnen-Venedey, 2012); a computational treatment of these cyclidic nets along with generalizations aiming at substructures in freeform architecture, has been presented by Bo et al. (2011). The theoretical beauty of the approach by Huhnen-Venedey and Rörig (2013) lies in the use of the Plücker quadric model, which reveals the close relation to cyclidic nets, in accordance with the famous line-sphere transformation of S. Lie (which is of theoretical interest, but not directly applicable as it is not real). Independently from our work, Huhnen-Venedey and Schief (2013) developed an affine approach to H-nets which is related to ours and which they use for the study of Weingarten transformations.While cyclidic nets are always arranged along curvature lines, we may ask for generalizations by replacing Dupin cyclides by Darboux cyclides (Pottmann et al., 2012). Like Dupin cyclides, the latter also contain families of circles (up to six!), which is an advantage for production on the large architectural scale. As a first step towards the most general Darboux cyclide patchworks we address here a simple computation from hyperbolic nets via so-called Darboux transformations.The contributions of the present paper are as follows:1.We provide a simple CAGD proof of the main result of Huhnen-Venedey and Rörig (2013) along with formulae for computations based on the rational Bézier form (Section 2).We show how to approximate a given negatively curved surface with a smooth union of rational bilinear patches, through a numerical optimization algorithm which combines A-net generation and its smooth extension with ruled quadric patches (Section 3).We apply Darboux transformations to obtain smooth surfaces from Darboux cyclide patches; these surfaces are no longer restricted to negative Gaussian curvature (Section 4).A rational bilinear patch with control pointsb0,…,b3and positive weightsw0,…,w3is given by the parametric representation(1)x(u,v)=(1−u)(1−v)w0b0+u(1−v)w1b1+(1−u)vw3b3+uvw2b2(1−u)(1−v)w0+u(1−v)w1+(1−u)vw3+uvw2,with(u,v)∈[0,1]2. One can obtain it from a bilinear patchx¯(u,v)inR4, with verticesb¯i:=(wibi,wi), by mapping it into 3-space with help of the canonical projection(x1,…,x4)↦(x1/x4,x2/x4,x3/x4). The patch lies on a ruled quadric and carries two families of straight line segments (rulings), namely the u- and v-isoparameter lines.Let us first discuss why it is sufficient to set three of the four weights equal to 1, say(2)w0=w1=w3=1,without losing the possible variety of quadric patches with a given boundary polygonb0…b3. One way of proving this uses the so-called frame points which are the canonical projections of the edge midpoints ofx¯. These pointsf0=x(1/2,0),f1=x(1,1/2),f2=x(1/2,1),f3=x(0,1/2), are expressed asfi:=(wibi+wi+1bi+1)/(wi+wi+1)(with indices taken modulo 4). They divide the boundary edges in the inverse ratio of the corresponding weights (see Fig. 1, left). Frame points on opposite edges are connected by straight line segments which lie entirely on the patch x (isoparameter linesu=1/2andv=1/2, respectively). A given ruled quadric patch has infinitely many rational bilinear parameterizations: We can choose a ruling in each of the two families as those connecting the frame points, and this determines the weights and hence the parameterization of the patch. Let us choose rulings so that two frame points on adjacent edges, sayf0,f3, are edge midpoints (Fig. 1, right). This impliesw0=w1=w3, and as only the ratio of weights matters, we can set these three weights to 1. Hence we are left with a single “shape parameter”, the weightw2, in accordance with the fact that there is only a one-parameter family of ruled quadric patches through a given skew quadrilateral with verticesb0,…,b3. Note thatw2=1characterizes a patch of a hyperbolic paraboloid; otherwise the patch lies on a one-sheeted hyperboloid.While it is convenient for some of our discussions to have three weights equal to 1, we also need to convert to the general case: Two rational bilinear patches with the same control points and weightswiandwi′, respectively, define the same quadric patch, if and only if(3)w0w2w1w3=w0′w2′w1′w3′.This follows easily from projective geometry, namely the fact that the cross ratios determined by control points and frame points on one pair of opposite edges of the control quad have to agree (then they also agree on the other edge pair),cr(b1,b2,f1,f1′)=cr(b0,b3,f3,f3′),which is equivalent to (3) and once again shows that we can set three of the weights equal to 1. If the value(4)W:=w0w2w1w3approaches 0 or ∞, the patch exhibits increasing curvature along a diagonal of the control quad, and in the limit it becomes a pair of triangles. As this is very undesirable for our applications, we want W to be sufficiently close to 1, which we will later use in our optimization algorithm. Note that the value W depends on the selection of a diagonal in the quad. The product of weights of the vertices of this diagonal are in the numerator. Depending on the diagonal selection, the value of the shape parameter is W or1/W.Using the notation from Fig. 2, we prove a simple condition for smoothly joined rational bilinear patches:Proposition 1Let us consider two rational bilinear patches with verticesb0,b1,b2,b3andb0,b3,b4,b5, and weightswiofbiequal to one, except weightsw2andw4. Then these patches join smoothly along the common edgeb0b3if the vertex stars at the common vertices are planar, i.e., pointsb0,b1,b3,b5andb0,b2,b3,b4are coplanar, and if the following condition holds,(5)w2det(b30,b50,b20)=w4det(b30,b10,b40),withbij:=bi−bj.ProofIt is well known that two ruled surfaces join smoothly along a common ruling as soon as we have agreement of tangent planes at three points of that ruling. Two of these points areb0,b3, and so we just need to ensure a common tangent plane at a third point. We choose the frame point(b0+b3)/2and get the conditiondet(b30,b1+w2b21+w2−b0+b32,b5+w4b41+w4−b0+b32)=0.This equation can be rewritten asdet(b30,b10+b13+w2b23+w2b20,b50+b53+w4b43+w4b40)=0,and by adding(1+w2)b30to the 2nd vector and(1+w4)b30to the third, we arrive atdet(b30,2b10+2w2b20,2b50+2w4b40)=0.Due to the planarity constraints atb0andb3, we havedet(b30,b10,b50)=det(b30,b20,b40)=0and this reduces the condition to Eq. (5).  □Remark 2Positive weightsw2,w4for the smoothly joined patches require equal sign of the two determinantsdet(b30,b50,b20)anddet(b30,b10,b40)(called equitwist condition in Huhnen-Venedey and Rörig, 2013). Let us denote the tangent planes of the vertex stars atb0andb3byT0andT3, respectively. Then, a practically useful net will have (i)b1andb5on different sides of the common edgeb0b3(inside planeT0) and (ii)b2andb4on different sides ofb0b3(inside planeT3); the latter implies thatb2andb4are on different sides ofT0, and thus the sign condition is satisfied. Hence, ensuring positive weights does not cause any problems in the practical computations discussed below.Remark 3For general weightswi, we obtain in view of (3) the following condition for a smooth connection,(6)w2w5det(b30,b50,b20)=w1w4det(b30,b10,b40).We can nicely rewrite this condition in terms of the shape parameters W defined in (4). Selecting the diagonalb0b2for the left patch, we define the shape parameterWl:=w0w2/w1w3. Selecting the diagonalb0b4for the right patch, we haveWr:=w0w4/w3w5. Then, (6) can be rewritten as(7)WrWl=det(b30,b50,b20)det(b30,b10,b40).Hence, any two smoothly joined pairs of quadric patches have shape parameters with a constant ratio,Wr:Wl=Wr′:Wl′, which is determined by the control points alone.We allow extraordinary verticesv (with planar vertex star) in an A-net, but note that they must be of even valence. This is so, since the quads assembled around a vertex v have their free vertex (the one which is not connected to v by an edge) alternately on different sides of the tangent plane T at v (see Remark 2).We are now in a position to provide a simple proof of the main result of Huhnen-Venedey and Rörig (2013).Theorem 4Any simply connected A-net whose interior vertices are of even valence and which satisfies the equitwist condition (cf.Remark 2) possesses a one-parameter family of smooth extensions to a hyperbolic net (patchwork of smoothly joined rational bilinear patches).ProofWe arbitrarily fill a patch into one quad of the A-net and then obtain the others through application of the smoothness condition (5). As we have a simply connected A-net, there are no global closure problems. Hence, it is sufficient to prove consistency around vertices. At a vertexb0of even valence n, we have to ensure that successive patchesPiandPi+1meet smoothly,(8)w2idet(b2i+1,0,b2i+3,0,b2i,0)=w2i+2det(b2i+1,0,b2i−1,0,b2i+2,0),i=1,…,n,where indices are taken modulo 2n (see Fig. 3). Starting to fill in patchP1, i.e., selectingw2, these smoothness conditions yieldw4,w6,…,w2n, and then the last patchPnmust join smoothly withP1alongb0b1. This amounts to the closure condition(9)∏i=1ndet(b2i+1,0,b2i+3,0,b2i,0)=∏i=1ndet(b2i+1,0,b2i−1,0,b2i+2,0).A determinant is a signed volume of a parallelepiped. Fixing an orientation of the tangent planeT0atv0, we consider the signed areaAiof the parallelogram defined byb2i−1,0,b2i+1,0and the signed distancediofPiʼs free vertexb2ifromT0. Then, we havedet(b2i+1,0,b2i+3,0,b2i,0)=Ai+1di,det(b2i+1,0,b2i−1,0,b2i+2,0)=−Aidi+1,so that left and right hand side of (9) are equal, since n is even. □Remark 5We have seen that there is a one-parameter family of smooth extensions of an A-net. The shape parametersWiof these solutions are very closely related: To see this, let us select diagonals in the A-net so that diagonals of quads with a common edge meet at a common vertex of that edge. In view of Eq. (7), we just need to compute one set of parameters, say(W0,W1,…). Any other solution must have the same ratio of shape parameters and thus be of the formλ⋅(W0,W1,…).In this section, we show how to approximate a simply connected, negatively curved surface S (given as a triangle mesh) by a hyperbolic netH. This includes a global optimization algorithm which we use to get high quality results for problems where we have direct constructions, like extending an A-net to an H-net. Moreover, optimization can be employed also in scenarios where we have no theoretical guarantee that an H-net exists; this is illustrated by surfaces S that are not of disk topology.The computational pipeline of the approximation algorithm is as follows:•Compute the frame field of asymptotic directions of the input surface S and approximate S by a quad meshQwhich follows the asymptotic directions (Section 3.1).OptimizeQto a hyperbolic netHapproximating S (Section 3.2).Given a triangle mesh S, we firstly estimate the curvature tensor for the barycenter of each face by the 3rd order jet fit of Cazals and Pouget (2003) and compute the asymptotic directions from it. These asymptotic directions can be considered as a special frame field. Singularities of the asymptotic direction field occur at flat points of the surface S, therefore they are also singularities of the principal direction field. Singularities of a frame field are classified via the cross field of bisectors (in our case, principal directions), and thus – as for the principal direction field – the indices of the asymptotic field are integer multiples of 1/2 (for a proof, see e.g. Zadravec et al., 2010). However, we can show even more (for a proof, see Appendix A):Theorem 6An ordinary flat point (i.e., a surface point whose tangent plane has 2nd order contact with the surface, but not 3rd order contact) which lies inside a surface region with negative Gaussian curvature, is a singularity of index−1/2for the principal field and the asymptotic field.It has to be expected that higher order flat points can be seen as limit cases of several nearby ordinary flat points. Since indices in an area add up, we conjecture that the index is always negative. For rationalization of freeform structures, the non-generic case is very unlikely to appear: According to Smyth and Xavier (1992), umbilics with an index different from±1/2are critical points of Gaussian curvature K, mean curvature H and, additionally, the 3-jet ofH2−Kvanishes there.Once we have the asymptotic directions on each face, we re-mesh S to obtain a quad meshQwhose edges follow the asymptotic directions. We can make use of quad re-meshing algorithms such as QuadCover (Kälberer et al., 2007) or mixed-integer quadrangulation (Bommes et al., 2009). In our implementation, we adopt the method of Liu et al. (2011), which is a version of mixed-integer quadrangulation.Since we aim at the optimization ofQtowards an A-net that is extendable to an H-net, we have to make sure that all inner vertices ofQhave even valence. As discussed above, a flatpoint of the input surface S will most likely be an ordinary one (index−1/2) and thus lead to a vertex of valence 6. If our conjecture that the index is always negative holds true, we would only get even valences and thus be able to model all cases.In a quad meshQwhich follows the asymptotic field, the vertex stars are nearly planar, and thusQserves as a good initialization for optimization towards an A-netAand subsequently towards an H-netH. We proceed as follows (see the flowchart in Fig. 4):1.Taking the quad meshQas input, we optimize it towards an A-netA, i.e., we flatten its vertex stars while keeping fairness and proximity to the reference surface S.We extend the A-netAto a hyperbolic netHby computing the best possible shape parameters, avoiding unnecessarily high mean curvature in patches. This step has an explicit solution.We fix the shape parameters and update mesh vertices by a global optimization of the H-netHto achieve an even better curvature behavior and satisfaction of constraints to higher precision. This step is iterated with the 2nd step, as illustrated in Fig. 4.The quad meshQprovides a good initialization for optimization towards an A-netA, which we obtain by minimizing the following objective function,(10)Fanet(b)=∑iFp(bi)+λ1Ffairness+λ2Fprox.HereFp(bi)ensures planarity of the vertex star around vertexbi,Ffairnessaims at high mesh fairness andFproxmakes sure that the mesh stays close to the reference surface S.The proximity termFproxis composed of two parts: the squared distance of each vertexbito its closest pointbicon S and the squared distance ofbito the tangent plane of S atbic. This yields a good approximation of the squared distance function of S, especially in our case, where one is close to S and gives the tangent plane distance a higher weight (see e.g. Pottmann and Leopoldseder, 2003).Fairness is achieved with an energyFfairnesswhich is a sum of squares of second or third order differences at vertices of all those mesh polylines which should be fair; we follow Deng et al. (2011).To handle planarity of vertex stars, we have two options: (i) We can add to each mesh vertexbia vertex normalnias additional variable and in this way define the plane of the vertex star. ThenFpis the sum of squared plane distances of direct neighbor vertices (see Deng et al., 2011). (ii) Planarity of a vertex star is expressed by planarity of a number of quads, where quad planarity is measured by the squared diagonal distanced2. In fact, as a planarity measure of a quadb0,…,b3we only employ the following approximation ofd2,Fquad(b0,b1,b2,b3)=(n⋅d)2,wheren=(b02×b13)/‖b02×b13‖is a unit vector orthogonal to both diagonals andd:=(b0+b2−b1−b3)/2. Obviously, to achieve planarity of a vertex star of valence n, we need to ensure planarity ofn−2quads. This is the approach taken in our implementation.For numerical optimization, we use a Gauss–Newton method. At the end of this step, we have an A-netA.Based on the smoothness condition (7) and Remark 5, we can easily extend an A-netAto an H-netHby computing the shape parameterWiof each patchPi. Starting at an arbitrary patchP0to which we assign an initial parameterW00=1, we move to neighboring faces and compute via (7) their shape parameters. This results in an initial set of parameters(W00,W10,…). Any other shape parameter set is of the formλ⋅(W00,W10,…). To determine the optimal factor λ, we try to achieve patches whose shape parameterWiis not close to 0 or ∞. This is achieved by minimizingFshape=∑i[(Wi−1)2+(1Wi−1)2],or equivalently(11)Fshape(λ)=∑i[(λWi0−1)2+(1λWi0−1)2].Minimization of this univariate function amounts to computing the roots of a quartic polynomial and thus this problem has an explicit solution.This step is taken for two reasons. (i) Numerical optimization is limited to a certain accuracy and thus vertex stars inAare not fully planar, resulting in small deviations from smooth patch joints inH. (ii) More importantly, the shape parameters forHare computed from a givenA, and there is hope that by slightly changingAwe get an even better curvature behavior of the quadric patches inH.The entire global optimization ofHalternates between Step 3, which updates the mesh vertices (shape parameters fixed) and Step 2 (which updates shape parameters, but keeps vertices fixed). Here, we only have to discuss the update of vertices inH. We want to jointly address the A-net property and smoothness of patch joints (with fixed weights). For a smooth joint of two patches along an edge, sayb0,b3, frame pointsf1,f4should be co-planar with that edge, see Fig. 2. Hence, we add an extra planarity term for the frame points. Recall that the frame points are computed from the weights (shape parameters), which are fixed in this step. Summarizing, the target functional isFframe(b)=Fanet(b)+λ3∑jFquad(b0j,f1j,b3j,f4j).Here the superscript j is used to enumerate all adjacent quad faces (inner edges).

@&#CONCLUSIONS@&#
