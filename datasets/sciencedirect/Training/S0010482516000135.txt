@&#MAIN-TITLE@&#
Locally adaptive 2D–3D registration using vascular structure model for liver catheterization

@&#HIGHLIGHTS@&#
A registration algorithm between 2D DSA image and 3D CTA scans is proposed.A vascular structure model is constructed using the augmented fast marching method.The tree model is divided into subtrees based on the connectivity and the length.Our method performs the registration focusing on the selected subtree.Our method performs the registration very accurately.

@&#KEYPHRASES@&#
2D–3D Registration,Vascular structure model,Subtree,Skeletonization,Catheterization,

@&#ABSTRACT@&#
Two-dimensional–three-dimensional (2D–3D) registration between intra-operative 2D digital subtraction angiography (DSA) and pre-operative 3D computed tomography angiography (CTA) can be used for roadmapping purposes. However, through the projection of 3D vessels, incorrect intersections and overlaps between vessels are produced because of the complex vascular structure, which makes it difficult to obtain the correct solution of 2D–3D registration. To overcome these problems, we propose a registration method that selects a suitable part of a 3D vascular structure for a given DSA image and finds the optimized solution to the partial 3D structure. The proposed algorithm can reduce the registration errors because it restricts the range of the 3D vascular structure for the registration by using only the relevant 3D vessels with the given DSA. To search for the appropriate 3D partial structure, we first construct a tree model of the 3D vascular structure and divide it into several subtrees in accordance with the connectivity. Then, the best matched subtree with the given DSA image is selected using the results from the coarse registration between each subtree and the vessels in the DSA image. Finally, a fine registration is conducted to minimize the difference between the selected subtree and the vessels of the DSA image. In experimental results obtained using 10 clinical datasets, the average distance errors in the case of the proposed method were 2.34±1.94mm. The proposed algorithm converges faster and produces more correct results than the conventional method in evaluations on patient datasets.

@&#INTRODUCTION@&#
Pre-operative three-dimensional (3D) computed tomography (CT) angiographic images can aid in planning intravascular interventions and guiding catheter-directed procedures. Since intra-operative two-dimensional (2D) angiography images scan the limited areas near the catheter, it is difficult to figure out the overall structure of the vasculature and the location of the catheter. Moreover, geometric information is lost through projection, which makes it difficult to recognize the connectivity between vessels. Pre-operative computed tomography angiography (CTA) data can compensate for these limitations of 2D angiography because they provide the overall 3D vascular structure. Hence, it can be used for planning the path for the catheter to be moved before the intervention, and for making a roadmap that shows the currently traversed vessels and the distal vessel tree.To utilize the 3D CTA data effectively, an accurate registration between 2D digital subtraction angiography (DSA) and 3D CTA images is needed. Therefore, many approaches have been proposed for 2D–3D registration in abdominal [1–4], cardiac [5–9], and neurological [10–12] interventions, and Markelj et al. [13] has provided a review of the existing 2D–3D registration methods.Many algorithms follow the strategy of minimizing the difference between the vessels of a 2D image and the projection of 3D vessels. Groher et al. [1] optimizes the transformation parameters by using the difference between centerlines and the projection of 3D vessels. Further, they use topological information such as the degree of bifurcation points in order to enhance the accuracy of the registration algorithm. However, accurate 2D–3D branching point matching might be difficult when enhanced 2D vessel regions are considerably smaller than the whole 3D vessel regions. Further, this method detects the branching points of the thickest 2D and 3D vessels as root nodes and finds the x–y translation in the initialization step. The correspondence of the root nodes of the 2D and 3D vessels might be incorrectly generated and accordingly degrade the registration accuracy when the enhanced range of 2D vessels is different from that of 3D vessels. Jomier et al. [3] proposed the sum of the Gaussian-blurred intensity values in the 2D image at the projected model points as a registration metric. This method improves the registration accuracy by using bi-plane images. In clinical practice, bi-plane images are not acquired for all clinical applications. Rivest-Hénault et al. [6] proposed a non-rigid registration algorithm with a distance measure and regularization constraints that maintain the smoothness and a certain degree of rigidity of the vessels. Although these algorithms show a high accuracy and a robust convergence, they assume that the contrasted vessels in DSA have a similar range to that of the 3D vessels from CTA scans. However, in the liver catheterization, a contrast medium is injected, and only the limited areas near the catheter are displayed in the angiography images while the catheter is moved through the vascular structure. Ambrosini et al. [24] overcame this problem by selecting an appropriate leaf vessel centerline from the 3D vascular structure according to the shape similarity with the catheter centerline. This method selects the appropriate vessel centerline in most cases and shows a high accuracy in the registration results. However, it fails to find a correct solution when a small part of the catheter is visible on the image or the shape of the catheter does not have a predominant feature.In this paper, we propose a method that finds a currently traversed area in a 3D vascular structure for a given DSA image and registers the 3D vessels to the 2D vessels on the DSA by using the subtree structure of the 3D vessels. We improve the accuracy of the registration by dividing a 3D vascular tree model into several subtrees and using only one of the subtrees in the registration process. The 3D vascular structure is very complex, and therefore, the projection of the entire structure causes a considerable number of overlapped vessels and incorrect intersection points. This leads to a false local minima in the registration process, particularly when a DSA image shows only a part of the vascular structure. We overcome these problems by dividing the 3D structure into several subtrees and using only the relevant part of the given DSA image. To search for the appropriate part of the DSA image, we first construct a tree model of the 3D vascular structure considering their connectivity and divide it into several subtrees. Subsequently, the best matched subtree for the given DSA image is selected according to the dissimilarity measure from the coarse registration between each subtree and the DSA image. Finally, fine registration is conducted for the selected subtree by using a distance metric. Then, by restricting the range for the registration process, we obtain better convergence and higher accuracy than the registration using all the 3D vessels.The remainder of this paper is organized as follows: the next section describes a method of constructing the 3D vascular structure model. Section 3 explains the locally adaptive registration algorithm using the 3D model. Section 4 discusses the experimental results and is followed by Section 5 that presents the conclusion and future work.The proposed method consists of four main steps, as shown inFig. 1. First, we analyze the pre-operative 3D CTA and the intra-operative 2D DSA. From the 3D CTA, a 3D vascular structural model is constructed and divided into several subtrees. During intervention, a 2D vessel centerline and its distance transform are computed from the 2D DSA. Next, the best matched subtree for a 2D vessel centerline is selected by comparing the dissimilarity among the subtrees. Finally, fine registration is conducted for the selected subtree. The fine registration follows the strategy of minimizing the difference between the vessels of a 2D image and the projection of 3D vessels as described in [5]. However, the vessels used for the fine registration is restricted to the subtree which is selected in the third step. It leads to the high accuracy of the fine registration results.In this section, we describe the construction and separation process for the 3D vascular model. Since a CTA scan is pre-operative data, the process can be conducted before the interventions. The registration process during an intervention will be explained in the next section.We construct a tree model that represents the connectivity of vessels from the pre-operative CTA scans. The vessels are segmented from CTA scans by using a 3D connected component analysis method based on the vesselness measure. Subsequently, the skeletons are computed from the segmented vessels and converted into a tree model.To segment vessels from CTA, the vesselness filter [14] is calculated for each voxel. The vesselness measure is frequently used in searching for a tubular shape such as that of vessels. It is obtained with eigenvalues of the Hessian matrix. Ifλkdenotes the eigenvalue with thek-th smallest magnitude (|λ1|≤|λ2|≤|λ3|), the vesselness filter for scalescan be defined as follows:(1)V(s)={0,ifλ2>0orλ3>0,(1−exp(−RA22α2))exp(−RB22β2)(1−exp(−S22c2)),otherwisewhereRA=|λ2||λ3|,RB=|λ1||λ2λ3|andS=∑j≤3λj2. Further,α,β, andcdenote the thresholds to control the sensitivity of the filter to the measuresRA,RB, andS, respectively. The vesselness measure is calculated at different scales, and the final estimate of vesselness is obtained as follows:(2)V(x)=maxsmin≤s≤smaxV(s,x)After computing the vesselness measure for each voxel in the CTA scan, we binarize the volume data using a threshold for the vesselness measure. Then, we perform a 3D connected component analysis and detect the largest connected component as a 3D vessel. The threshold for the vesselness measure is set to 0.05.The skeleton is extracted from the segmented vessels by an automatic skeletonization algorithm based on fast marching method [15]. Although there are many algorithms for computing the skeletons [16–18], we apply the method proposed in [15] because it is suitable for constructing a graph model. The skeleton computed by this method consists of several branches, each of which can be defined as a node of a graph where a branch is a set of connected voxels on the skeleton. Further, the connectivity between branches is decided during the skeletonization, and therefore, it is easy to construct the tree model hierarchically.The main steps of the skeletonization algorithm are as follows: the point with the largest distance from the object׳s boundary is computed using the Euclidean distance field, which is used as an input for the fast marching propagation. The geodesic distance inside the object starting at the maximum point is computed using augmented fast marching propagation. A fast marching level-set curve is the solution of the following Eikonal equation:(3)|∇T|F=1,T=0onΓ,whereTdenotes the arrival time function,Frepresents the speed of the evolution function, andΓstands for the initial isosurface at time zero. Ifddenotes the distance value of the Euclidean distance field andDrepresents the maximum value of the field dataset, then the speed is given by(4)speed=(dD)2.Using the speed image, the augmented fast marching algorithm computes the geodesic distance from the start point to each voxel. Then, the furthest point from the global maximum distance point is used as the start point of the branches, and the remaining points of the branch are determined by performing a gradient descent back-tracking procedure satisfying the following equation on the fast marching time-crossing map:(5)dCdt=−∇T|∇T|,C(0)=pf,whereC(t)denotes the centerline andpfrepresents the furthest geodesic distance point. This process is repeated for each branch of the skeleton.The constructed skeleton is represented as a graphG=(V,E)inFig. 2. Each branchBi(a white node in Fig. 2) becomes a node ofG, and then,Vis defined asρ∪{B1,B2,…,Bn}, wherendenotes the number of branches andρrepresents an empty node for the root of G (a black node in Fig. 2).Edenotes a set of edges, which are contact points between branches. The skeletonization procedure finds the shortest path from the point with the furthest geodesic distance to the previously constructed branches, and the path becomes a new branchBi. Therefore, the contact point betweenBiand one of the previously constructed branches,Bj, is detected without additional computation.Bibecomes a child node ofBj, and the contact point betweenBiandBjbecomes an edge connecting two nodes. Thus, the graphGis constructed simultaneously while extracting skeletons.After the tree construction, we divide the tree model into several subtrees on the basis of the following rules:•A subtree is connected.⋃imSTi=G,wheremdenotesthenumberofsubtreesandSTirepresentsasubtree.STi∩STj=∅orek, whereek∈E.The trees are divided according to the length of vessels and the connectivity. Hence, a weight for each node is computed on the basis of the length before the subtree separation. The weight of a node is defined as the number of skeleton voxels in the node and its descendants. The weight for a node is initialized as the number of voxels included in the node. Next, the weight is updated by adding the weight of a child node to the weight of its parent node while going up from each leaf node to the root nodeρ. Through this process, the weight of a nodeNis updated as the number of voxels of a subtree whose root node isN, and the weight of the root nodeρbecomes the number of all voxels on the skeleton. After updating the weights of all nodes in G, the nodes are sorted in the descending order of the weights. The pseudocode for a tree update is given in Algorithm 1 of Appendix.To divide a tree into subtrees, all nodes of G are initially set asST0, and the child nodes of the root nodeρare inserted into a priority queue. Subsequently, the node with the largest weight in the priority queue is selected as the root node of a new subtree. Then, all descendants of the selected node are updated asST1, and the child nodes of the selected node are inserted into the priority queue. This process is repeated while the number of subtrees is smaller than a given number, which is set to 6 in our implementation. The parameter study about the number of subtrees is explained in Section 4.4. The pseudocode of this separation step is given in Algorithm 2 of Appendix.Fig. 3 shows the 3D vessels and their skeleton, which is separated by the proposed method. In Fig. 3(b), each color represents a subtree. The tree is divided exactly on a junction point, and each subtree is connected. Then, one of the subtrees can have a similar range with the given DSA image since the injection medium is inserted near the junction point and flows into the closely connected vessels.Fig. 4 shows that the DSA image and the projection of the subtree can display a similar range.To use 3D CTA data as a roadmap during an intervention procedure, an accurate registration between the CTA and the DSA images is necessary. During an intervention, a catheter moves through an artery and contrast medium is injected near the catheter. Then, the injected area is projected to produce new DSA images. Through this process, very limited areas of the vascular structure are displayed in the DSA. Therefore, it is difficult to match the DSA with the entire 3D vessel structure. In this study, we overcome this problem by comparing the DSA with the 3D subtrees constructed as discussed in the previous section, not with the entire structure. By running the registration process with only a part of the structure, we can find the correct transformation parameters for the given DSA image.The method consists of two steps. First, we find the best matched subtree with vessel centerlines that are extracted from the DSA (Section 3.1). Next, a rigid registration between the 2D centerlines and the selected subtree is conducted (Section 3.2).To find the best matched subtree with DSA, the centerlines are extracted from DSA, and the dissimilarity between the centerlines and each subtree is computed. The subtree with the smallest dissimilarity is selected as the matched subtree with the current DSA.The centerlines of the 2D DSA are extracted in a way similar to that used for the 3D skeleton. The 2D vesselness measure is calculated for each pixel, and we binarize the image data with a threshold for the vesselness measure. Then, we perform a 2D connected component analysis and detect the largest connected component as a 2D vessel. The threshold for the 2D vesselness measure is set to 0.7. Further, the centerline is extracted by the augmented fast marching method.Fig. 5 shows an example of the centerline extraction process.The dissimilarity is defined as the difference between a projected subtree and the 2D centerlines. To be accurate, the dissimilarity ofSTkis the mean of the distance differences between points on the projected subtree and the corresponding points on the 2D centerlines. In Section 2,STkis defined as a set of branches labeled k, and each branch consists of voxels on a part of the 3D skeleton. Hence,STkcan be re-defined as a set of voxels on the skeleton with the label k. Thus, we can define the dissimilarity ofSTkas follows:(6)f(k)=1nk∑xi∈STk‖Φ(Txi)−yi‖,wherenkdenotes the size ofSTk, Φ represents a projection function, T indicates a4×4transformation matrix, andyidenotes the closest point on the 2D centerlines toΦ(Txi). The dissimilarity is used as the cost function for a coarse registration between the 2D centerlines and a subtree. By the coarse registration, the dissimilarity of each subtree is minimized, and then, the subtree with the smallest dissimilarity is selected as the best matched subtree.The registration in the selection step is only concerned with the translation transformations for the fast computation, and a rigid registration is conducted in the subsequent step. Therefore, when a parameter set forSTkto be optimized is given asPT,k=[tx,ty,tz]∈R3,Tin Eq. (6) is defined asT=[10010tx0ty00001tz01].The functionΦ:R3→R2projects a 3D point onto a detector plane and is determined by using the information in the DICOM header [24]. Then, we draw a ray from a source to each voxelxi∈STkand directly compute a location to be projected on the 2D plane [20]. It is considerably more efficient to project the skeleton directly than to use a ray-casting algorithm [19] because the skeleton is only a small portion of the entire 3D volume.We need to find the closest point of the 2D centerlines for each projected point in order to calculate Eq. (6) whenever the transformation of a subtree is changed. This can be considerably faster by using a distance transform [22]. We compute a distance transform for the 2D centerlines by using the algorithm in [21], and the computation is requested only once because the 2D centerline is reference data and therefore, not changed. The distance transform for the 2D centerlines is denoted asDTcls. Then, Eq. (6) is defined as follows:(7)f(k)=1nk∑xi∈STkDTcls(Φ(Txi))For each subtree, we optimizePT,kby using the cost function, Eq. (7). The parameters are initialized to zero. We use the Nelder–Mead optimizer as the optimization algorithm, which shows a good performance for the 2D–3D registration among the local optimization algorithms [6]. The final value of the cost function through the optimization becomes the dissimilarity for each subtree, and then, the subtree with the smallest dissimilarity is chosen as the best matched subtree to the DSA data. The parameter for the selected subtreeSTk,PT.k′=[tx′,ty′,tz′]is used as the initial parameter value in the next step.In Section 3.1, we concerned ourselves only with the translation transformation for the fast computation, and in order to obtain more correct results, we now conduct a rigid registration for the selected subtree. Eq. (7) is used as the cost function, but the transformation matrixTin Eq. (7) is re-defined asT=TT∙TR, whereTTdenotes a translation matrix andTRrepresents a rotation matrix. Given a parameter setP=[tx,ty,tz,rx,ry,rz]∈R6, the matrices are defined as follows:TT=[10010tx0ty00001tz01]andTR=[cos(rz)sin(rz)−sin(rz)cos(rz)000000001001]×[cos(ry)001−sin(ry)000sin(ry)000cos(ry)001]×[100cos(rx)00sin(rx)00−sin(rx)00cos(rx)001]The initial value ofPis set as[tx′,ty′,tz′,0,0,0]whenPT.k′=[tx′,ty′,tz′]is obtained in the previous section and the Nelder–Mead optimizer is used.Fig. 6 shows how the proposed registration algorithm works. The green lines represent the projected subtree, which is selected as the best match by the proposed method. The first image is a projection after the initial placement, the second after the selection step, and the third after the rigid registration.

@&#CONCLUSIONS@&#
