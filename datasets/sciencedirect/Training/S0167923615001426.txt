@&#MAIN-TITLE@&#
Towards a highly effective and robust Web credibility evaluation system

@&#HIGHLIGHTS@&#
We study methods to improve efficiency of crowdsourcing Web credibility evaluation systems (WCESs).Recommendation algorithm (RA) increases coverage in WCES.Joint application of RA and reputation system helps fight down imitation attacks.

@&#KEYPHRASES@&#
Web credibility,Recommendation,Robustness,Imitating attack,

@&#ABSTRACT@&#
By leveraging crowdsourcing, Web credibility evaluation systems (WCESs) have become a promising tool to assess the credibility of Web content, e.g., Web pages. However, existing systems adopt a passive way to collect users' credibility ratings, which incurs two crucial challenges: (1) a considerable fraction of Web content have few or even no ratings, so the coverage (or effectiveness) of the system is low; (2) malicious users may submit fake ratings to damage the reliability of the system. In order to realize a highly effective and robust WCES, we propose to integrate recommendation functionality into the system. On the one hand, by fusing Matrix Factorization and Latent Dirichlet Allocation, a personalized Web content recommendation model is proposed to attract users to rate more Web pages, i.e., the coverage is increased. On the other hand, by analyzing a user's reaction to the recommended Web content, we detect imitating attackers, which have recently been recognized as a particular threat to WCES to make the system more robust. Moreover, an adaptive reputation system is designed to motivate users to more actively interact with the integrated recommendation functionality. We conduct experiments using both real datasets and synthetic data to demonstrate how our proposed recommendation components significantly improve the effectiveness and robustness of existing WCES.

@&#INTRODUCTION@&#
The Internet has become the primary information source to serve people's daily life. However, unlike traditional media such as television and newspapers, a considerable fraction of contents are posted online without being seriously fact-checked. This may incur serious consequences if non-credible Web information is used for decision making. It is thus important to assess the credibility of Web content [6,20,17].Recently, by leveraging crowdsourcing, several Web credibility evaluation systems (WCESs) have emerged. For instance, MyWOT (www.mywot.com) aggregates users' ratings on two aspects of Web credibility: trustworthiness and child safety. In academia, similar systems have also been proposed, improving the commercial counterparts in various aspects [22,21,18].Although WCES has become a promising tool to assess Web credibility, most existing systems adopt a passive way to collect users' ratings (i.e., they wait for users to submit ratings, but actually only a few users voluntarily provide Web credibility assessments), which incurs two crucial challenges. First, given the huge volume of Web pages, a considerable fraction of them have no credibility information. For instance, based on our analysis, among the top 1 million domains in Alexa traffic ranking (www.alexa.com), only around 42.67% of them (as of January 9th, 2013) are covered by the most representative credibility evaluation site MyWOT, not to mention the domains with low popularity.11Based on our study, the probability that a Website has credibility evaluation is strongly correlated with its popularity, i.e., ranking.Furthermore, most domains covered by MyWOT have a limited amount of ratings, i.e., the confidence of their credibility information is low.Second, malicious users may submit fake ratings to attack certain Web content. Although existing reputation systems can handle average malicious users, they are not effective in detecting smart attackers. In [14], a new type of attack called imitating attack is identified and verified: an attacker queries the credibility of certain Web content, when he receives the rating from the system, he just copies and resubmits the same rating to the system again as his own contribution.22Note that aggregating users' ratings to derive system's ratings is another yet challenging research question, particularly when a Web content is highly subjective [11]. However, this issue is beyond the scope of this paper and here we assume that system's ratings have been reliably generated.From the perspective of the system, this attacker behaves quite similarly to a highly reputable user because his ratings are always consistent with the system's ratings. In this way, the attacker can easily build high reputation by cheating the system and then effectively attack certain Web content. A machine learning based defense mechanism is proposed in [14], but its computational complexity analysis is missing, so its applicability in a large-scale system with millions of users has not been verified.In order to address the two challenges mentioned above, we propose to integrate recommendation functionality into a WCES to (1) attract users to rate more Web pages to increase the coverage of the system and (2) defend against the imitating attack to make the system more robust. To achieve the first goal, we propose a recommendation model to learn users' interests in Web content by fusing Matrix Factorization (MF) and Latent Dirichlet Allocation (LDA) [4]. Specifically, each Web content is represented by a “bag-of-words”. We apply LDA to extract a set of topics for the Web content, and assign a latent factor vector to each topic. A user's interest in a Web content is inferred by combining (1) the correlation between a user and the topics (by multiplying user-specific and topic-specific latent factors) and (2) the correlation between the Web content and the topics (by LDA).In order to realize the second goal, we propose a recommendation based defense mechanism. The system first selects a set of active users33In order to quickly build high reputation, attackers typically densely submit ratings thus are highly active in certain periods of time.and recommends a set of interesting Web pages to them. Along with a recommended content, a fake credibility rating is shown and the system entices users to provide their ratings to make the system's rating more confident. Since imitating attackers simply copy system's ratings, they will copy (submit) the fake rating with a high probability. On the other hand, honest users often spend efforts in evaluating the recommended Web content, and submit a rating that is closer to the real credibility. We propose to model users' responses to the recommended Web content using beta distribution to detect imitating attackers.To further enhance the effectiveness and efficacy of the integrated recommendation functionality, we design an adaptive reputation system to motivate users to more actively rate the recommended Web content. The basic idea is to assign different reputation points to users when they rate Web content in different ways. For instance, more reputation will be awarded if a user rates a recommended content than a self-selected content. Since rating the recommended Web content can boost reputation rapidly, both honest users and attackers are motivated to actively interact with recommendations thus further improving the system's coverage and robustness.Although Web credibility, recommender systems and reputation systems have been well studied in their respective literature, to the best of our knowledge, this work is the first one that seamlessly integrates diverse information sources by applying various information retrieval techniques to realize a highly effective and robust WCES. The contributions of this work are summarized as follows: (1) In order to handle the challenges of coverage and robustness, we propose to integrate recommendation functionality into a WCES (see Section 3 System model). Note that such a system is independent and self-contained, i.e., it is not designed as a component of other information systems, e.g., Web search engines. (2) By combining MF and LDA, we propose a personalized recommendation model to motivate users to rate more Web pages (Section 4.1). (3) In order to defend against the imitating attack, we propose a recommendation based defense mechanism. The system recommends a set of Web pages with fake credibility ratings to users and analyzes their rating behavior in the presence of recommendations. Beta distribution is used to model a user's imitating behavior probability (Section 4.2). (4) For the purpose of enhancing the effectiveness of the integrated recommendation functionality, in Section 4.3, we design an adaptive reputation system to award more reputation points when a user rates the recommended Web content. This not only motivates normal users to rate more to increase system's coverage, but also entices malicious users to copy fake credibility rating (i.e., get detected). (5) We evaluate the effectiveness of the recommendation functionality using the data published by Wikimedia foundation as well as a simulated multi-agent system (Section 5).Quite a few works have identified a variety of factors that may influence an individual's perception of Web credibility [7,6,24]. For instance, Schwarz et al. [20] showed that visualizations by considering features such as Webpage popularity, domain type and the PageRank metric, can improve a user's Web credibility assessment in Web search results.Recently, WCES has become popular in both academia and industry. Sharifi et al. [22] proposed SmartNotes, a crowdsourcing system to detect Web security threats such as Internet scams. Machine learning and natural language processing are applied to analyze and integrate users' reports. In [18], Web credibility is assessed by a decentralized recommender system. A single credibility metric is derived by combining three components: (1) item-based collaborative filtering, which is based on features identified from pages' textual contents, (2) user-based collaborative filtering, which is based on users' social relationships and (3) Web search page ranking.In practice, MyWOT is a real-world example of a WCES that can have a real economic impact on content providers. In MyWOT, entire domains receive credibility ratings, and these ratings are later used by a Web browser extension that displays them next to Google search results. A domain that has a very low rating could therefore experience a significant decrease of Web traffic, even if it would be ranked high by Google. Therefore, a competitor of some commercial company would have a real incentive to maliciously decrease his competitor's credibility rating. This could be achieved through several simple means, such as spamming the MyWOT system automatically with negative credibility ratings. However, such crude means could be equally easily detected. This motivates attackers to devise more sophisticated means, out of which an imitating attack is one of the least expensive and most effective.Although WCES has been studied recently, its robustness issue is relatively unexplored. Most existing solutions apply reputation systems to constrain users' rating behavior, however, smart attackers can easily cheat for high reputation. Liu et al. [14] identified a new type of attack called imitating attack, where a malicious user simply copies and resubmits the system's ratings to pretend to be a reputable user to gain high reputation. By studying Web pages' characteristics and users' rating behavior patterns, a two-stage machine learning based defense mechanism is proposed. Experimental results demonstrate the effectiveness of the approach, but its computational complexity analysis is not provided. In this work, we try to defend against the imitating attack using a light-weight, recommendation based approach.Although no recommendation is provided in existing WCES, recommender systems have been widely studied in many other application scenarios such as e-commerce and online social networks. Traditional recommender systems rely on collaborative filtering [1], which predicts a user's interest in an item by mining rating information of other similar users and items. In particular, MF has been proved to be one of the most effective methods in terms of rating prediction [12].In order to improve recommendation quality, a variety of types of information, e.g., social information and contextual information is integrated into MF. For instance, in [13], the authors applied random decision trees to combine diverse types of contexts. Social information is integrated as a MF regularization term, but different from previous work [15], contexts are considered when measuring user similarity. Recently, content based recommendation has been improved by fusing topic modeling and MF [2,16]. The basic idea is to assign a latent topic to each word of an item, and then generate item latent factors by averaging the topics of all words associated with this item. A missing rating is predicted by combining the target user's affinity to the topics and the correlation between the topics and the target item.Any collaborative recommender system that takes as input users' ratings is vulnerable to the imitating attack. An example can be MovieLens, a system for recommending movies (www.movielens.org) that lets a user search for a movie and rate it. This means that users select movies they want to rate, and see the system's recommendation before they rate. These are the necessary condition for vulnerability to the imitating attack and a variety of other attacks. Needless to say, movie distributors have a real incentive to influence the ratings of this popular service.Reputation systems have been widely deployed in many online applications (e.g., online auction sites) to constrain malicious users' behavior [10]. The beta reputation system proposed by Josang et al. [9] estimates the reputation of an agent using a probabilistic model, i.e., based on the beta probability density function (PDF). The distribution parameters α and β are determined by the number of successful and unsuccessful interactions between a pair of agents. On the basis of beta reputation system, Travos et al. [23] paid more attention to the issue of fake third party feedback. That is, if firsthand experience is insufficient to reliably estimate the reputation of the target agent, second hand experience is used, considering the reliability of the information provider.In WCES, e.g., MyWOT, a reputation system is also applied. Reputation scores are assigned to users if they provide credibility ratings and the weight of a user's rating on the final credibility aggregation is determined by his reputation. Although MyWOT does not reveal details of how reputation is computed, a user's reputation is indeed proportional to the activeness of his rating behavior: “When you start using MyWOT, your ratings have little weight, but if you keep rating sites consistently, your ratings will be considered more reliable over time44http://www.mywot.com/en/faq/website/rating-websites#reliableratings.”. As discussed in [14], imitating attackers can easily cheat such a reputation system by frequently copying system's ratings. Furthermore, current reputation systems are not particularly designed for recommendation based credibility assessment, so in this work, we propose an adaptive reputation system to both motivate users to rate recommended Web content and assist to expose imitating attackers.Logically, a WCES acts as a knowledge repository that provides credibility ratings for the queried Web content. Fig. 1demonstrates how a WCES works. A user browses a Web content and rates it (if she wants) based on her personal judgment about the credibility of this content. The rating is then submitted to the system for contributing to the final credibility of this Web content. As a consumer, a user may also query the credibility of certain Web content for decision making. The system processes the query (via query engine) by checking its credibility information storage module and returns the rating information (if any) which is derived by credibility calculation engine. Reputation system is used to assess the reliability of individual users based on their past rating behavior, which is stored in user information storage module. Typically, more reputable users' ratings have higher impact on the final credibility assessment.On the basis of a traditional WCES model, we add the recommendation functionality by integrating a recommendation component (see Fig. 1, red box). Web content recommendation engine serves two purposes: (1) it provides personalized Web content recommendation to individual users to attract them to rate more recommended Web pages (see Section 4.1). (2) It deliberately recommends Web content with fake credibility information to suspicious users and analyzes their reactions to the recommendations. Users with evident imitation behavior will be detected (see Section 4.2).Note that within our Reconcile project, the proposed model has been implemented as a prototype WCES (http://reconcile.pl). The Reconcile system works similarly to MyWOT — users can install a browser extension that receives ratings from the Reconcile backend. The system has been designed to be resistant to adversaries, because little weight is given to ratings received from users who select the rated content themselves, and who have a low reputation. In order to earn reputation, a user has to rate Web pages chosen by the recommender system, which are displayed in the “Suggested pages” panel. The recommender system works similarly to the recommendation method described in Section 4.1. When a user submits a rating, the rating is used to update her reputation, using the method described in Section 4.3. Overall, the proposed method gives a significant degree of protection not just against imitating attacks, but also against coalition attacks and other kinds of adversary strategies.The goal of our recommendation model is to recommend Web pages that are likely to interest individual users such that they will rate more Web pages to significantly increase the system's coverage. We denote a set of Web pages byP=p1p2…. Each Web content is associated with a credibility rating that is a discrete quantitative value in the range L={l1,l2,…,ll}∪l0, where l0 indicates that a Web content's credibility rating is unknown.U=u1u2…denotes a set of users participating in the WCES.We use MF [12], which is the state-of-the-art collaborative filtering technique to build our recommendation model. We first construct a probability matrixMp∈RU×Pwhich records the interactions between users and Web content. An element mu,cpis 1 if user u has rated the Web content c, otherwise, the element is empty (i.e., missing). We then apply MF to factorize Mpinto one user specific matrixUp∈Rkp×Uand one Web content specific matrixVp∈Rkp×P. Each user u's latent factor vector Uupand each Web content c's latent factor vector Vcpcan be derived (iteratively updated) over existing matrix entries by performing stochastic gradient descent (SGD) [8]:Uup←Uup−γ∂LUup,Vcp←Vcp−γ∂LVcp, where γ is the learning rate. Eqs. (1) and (2) show how gradient descent is performed with respect to Upand Vprespectively.(1)∂LUup=eu,cVup−λUup,(2)∂LVcp=eu,cUup−λVcp,where eu,cis the aggregated difference between the predicted value and the corresponding ground truth. The probability of an interaction between user u and a Web content c (i.e., u rated c) is then predicted:(3)mu,cp=UupTVcp.For the target user u, we sort in descending order a list of Web pages that have little credibility information and have not been rated by u based on the predicted probabilities, and recommend top-K Web pages to u.Pure MF based approach recommends Web content to users based on their rating information. However, it is non-trivial to accurately interpret and infer a user's interest simply using ratings. For instance, rating based recommendation infers that a user is interested in sports news. However, this user actually only read and rated articles about basketball, and in particular, about NBA, so recommending other irrelevant sports news (based on similar users' ratings) like Formula One may not attract the user to rate. On the other hand, topic modeling is able to infer latent topic variables from a corpus of documents [4], and such topics can be naturally applied to describe the interest of a user based on the textual contents she has interacted with. We therefore propose to integrate texts into MF to improve the accuracy of interest matching.We first sample a set of Web pages as training data. The main content of every Web content is extracted55There are several open source tools to extract main contents from HTML, e.g., cx-extractor (https://code.google.com/p/cx-extractor/). We also remove stop words to make the texts more compact and informative.to form a textual content corpusT. We then apply LDA, a popular topic model on the corpusTto extract D topics. Different from previous work [16] where the dimensionality of user/item latent factor vector is bounded by the number of topics, in this work, each topic is also associated with a latent factor vector, sharing the same latent space with the user specific latent factors.Accordingly, the correlation between a user and a Web content, which was captured through the user specific and Web content specific latent factors (see Eq. (3)), is reformulated by incorporating the effect of texts/topics. Specifically, Web content specific matrix Vpis represented by the product of two matrices:(4)Vp=XY,whereX∈Rkp×Dis the topic specific latent factor matrix. Each column of X is a latent factor vector that characterizes the corresponding topic.Y∈RD×|P|is a matrix that stores correlations between Web content and topics. For a Web content c, we extract its main content to construct “bag-of-words”, denoted by Tc. LDA assigns a latent topic t to each word w∈Tcwith a probability ζw,t. The correlation between topic t and Web content c is calculated by averaging the topic distribution of all words from Tc:Yc,t=∑i=1Ncζi,tNc, where Ncis the number of words extracted from Tc. Therefore, when inferring user u's interest in Web content c, u's interests in the D topics are firstly measured through user specific and topic specific latent factors, and then the correlations between the D topics and the Web content c are obtained, finally the two factors are fused to capture u's interest in c.With topics, the correlation between users and Web content can be more meaningfully inferred than traditional approaches where only rating information (less interpretable) is used. Furthermore, the dimensionality of latent factor vector is not bounded by the number of topics thus is more flexible (i.e., the optimal dimensionality and topic number may not be identical, thus should be learned separately). By incorporating topics, the objective function is redefined to minimize the sum of prediction errors:(5)L′=minU,X12∑u=1U∑c=1PIucRuc−UupTXYc2+λ′2UF2+XF2.We apply SGD to optimize this objective function by performing gradient descent with respect to latent factors Upand X:(6)∂L′Uup=eu,cXYc−λ′Uup,(7)∂L′X=eu,cUupYcT−λ′X,where eu,cis the difference between the predicted value and the corresponding ground truth. The final user specific matrix Upand topic specific matrix X are obtained by being iteratively updated:Uup←Uup−γ′∂L′UupandX←X−γ′∂L′X, where γ′ is the learning rate. By integrating topics which are extracted from textual contents into MF, we predict the probability that user u will rate a Web content c, which has no or insufficient ratings. According to the predicted probabilities, we sort a list of candidate Web pages, among which we recommend top-K ones to user u.

@&#CONCLUSIONS@&#
