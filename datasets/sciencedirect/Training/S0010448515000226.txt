@&#MAIN-TITLE@&#
A physically-based model for global collision avoidance in 5-axis point milling

@&#HIGHLIGHTS@&#
A new approach is proposed for collision avoidance in 5-axis end milling.The method is based on a physical modeling to compute the tool axis orientation.The ball-end tool is considered as a rigid body moving in 3D space.Repulsive forces are deriving from a scalar potential linked to check surfaces.Check surfaces tessellation ensures smooth variations of the tool axis orientation.

@&#KEYPHRASES@&#
5-axis machining,Collision-free,Potential field,Tool path generation,Ball-end milling,

@&#ABSTRACT@&#
Although 5-axis free form surface machining is commonly proposed in CAD/CAM software, several issues still need to be addressed and especially collision avoidance between the tool and the part. Indeed, advanced user skills are often required to define smooth tool axis orientations along the tool path in high speed machining. In the literature, the problem of collision avoidance is mainly treated as an iterative process based on local and global collision tests with a geometrical method. In this paper, an innovative method based on physical modeling is used to generate 5-axis collision-free smooth tool paths. In the proposed approach, the ball-end tool is considered as a rigid body moving in the 3D space on which repulsive forces, deriving from a scalar potential field attached to the check surfaces, and attractive forces are acting. A study of the check surface tessellation is carried out to ensure smooth variations of the tool axis orientation. The proposed algorithm is applied to open pocket parts such as an impeller to emphasize the effectiveness of this method to avoid collision.

@&#INTRODUCTION@&#
5-axis surface machining is an essential process in the field of aerospace, molds and dies industries. 5-axis milling is required for the realization of difficult parts such as blades and impellers and is also very convenient to improve quality for the machining of deep molds in plastic injection and casting by reducing tool length. Despite the evolution of CAM software, 5-axis tool path programming requires advanced skills and collision detection remains a challenge during tool path computation. One can distinguish two kinds of tool collision when addressing machining issues: local gouging, involving the active part of the tool and global collisions where the whole body of the tool, the tool holder and the spindle can be considered. In this paper, only global collisions are studied. In the literature numerous papers deal with global collision avoidance in 5-axis milling. Several approaches exist and are based on collision tests executed during the tool path computation or after during a post-processing of the tool path. The proposed methods often address the problem from point to point, without an entire view of the tool path, which leads to non-optimal tool paths and oscillations of the tool axis. Methods are usually based on models to represent the tool geometry and the environment (part surface, check surfaces, etc.), a collision test between the obstacle and the tool and finally a correction or optimization of the tool axis orientation to avoid the obstacle. It is during this final stage of optimization that the smoothness of the trajectory may be corrected.Two main approaches exist in the literature: geometric methods, which are the most used, and potential methods. In both approaches the modeling of the tool and the check surface is required. In most cases, the tool is divided into implicit surfaces (cylinders, cones)  [1] leading to the description of the tool under the APT formalism  [2]. The check surface, usually designed in the CAD system by a parametric surface, is modeled as a NURBS surface  [3] by its convex envelope  [4] or by a tessellated representation to simplify computations.With the geometric approach, the problem is mainly treated in a local coordinate system attached to the tool using the C-Space approach  [5]. Interferences between the tool and the check surface are detected using algorithms primarily based on surface intersections  [6]. These tests lead to the definition of a collision-free area in the C-Space to orient the tool axis  [7].Another geometric method frequently used to evaluate the interferences is based on the cones and maps of visibility. This problem addressed by  [8,9] enables, using a Gaussian sphere, to generate a local visibility map taking into account the part surface and then to integrate the machine constraints of accessibility (tool, tool holder, environment) to reduce the space available for the tool axis (global visibility). Other works increase the visibility relevance even further by taking into account the travel range of the machine tool which reduces the available area on the Gaussian sphere  [10,11].The final step is the optimization of the tool path in the resulting C-Space collision-free domain including constraints such as smoothness of the tool postures or tool length minimization  [12,13].The other approach, based on potential fields, has been developed in the domain of mobile robotics for collision avoidance. This consists in using virtual potential fields that allow a robot to avoid the obstacle during an excessive approach  [14]. Indeed, a repulsive force, calculated as the gradient of the scalar potential field, tends to infinity when the distance between the mobile robot and the obstacle tends to zero, thereby deflecting the initially programmed path. This method has been improved to handle special cases associated to the position of the obstacles and the “goal” point to reach  [15,16]. In addition, taking into account the dynamics  [17] illustrates the presence of oscillations when the robot moves back towards the programmed position. However, in the field of mobile robotics, this issue is less critical due to the large tolerances allowed on the trajectories.This approach has already been applied within the context of 5-axis machining for collision avoidance in a static case. Indeed, the work of  [18] uses a simplified version of the formulation of repulsive forces developed by  [14] to treat local and global collisions. The distances between the tool and the part and the check surfaces are reformulated into an energy minimization problem to iteratively determine a better tool posture. However, since the proposed approach is quasi-static, i.e. applied from point to point on the trajectory, the appearance of oscillations is a problem raised by the authors themselves. Finally, this type of static application was also developed as part of a haptic manipulation to guide the tool axis  [19].Thus the aim of this paper is to show the benefit of a dynamic method using potential fields to compute the tool axis orientation along a given tool path ensuring collision avoidance and smooth trajectories in 5-axis ball-end milling. This new approach allows in particular to avoid the optimization stage of the tool axis orientation in the collision-free C-Space domain required to ensure the smoothness of the tool path. A particular attention is paid to the influence of the check surface tessellation to compute the repulsive force. The computation of the cutter location points according to a chordal deviation and a scallop height is out of the scope of this paper. Cutter location points are modeled as continuous polynomial curves.The rest of the paper is organized as follows: the mechanical model of the tool movement computation is presented in Section  2. Simulation parameter values are investigated in Section  3. An application to the machining of a 5-axis open pocket is carried out in Section  4 and results demonstrate the efficiency of the proposed method in terms of collision avoidance and smoothness. Finally, the conclusions are summarized in Section  5.In the proposed approach, the tool is considered as a rigid body moving in the 3D space on which repulsive and attractive forces are acting. 5-axis collision avoidance is managed thanks to repulsive forces deriving from a potential field. Thus, the aim of this section is to set up the equations of the tool movement along the tool path and between the obstacles.In order to illustrate the effect of repulsive and attractive forces, the tool geometry is reduced to a unique point such as its center of massG, located on the tool axis. However, the tool could be modeled as a set of pointsPwhich are distributed whether on the tool axis or on the tool surface.In 5-axis ball-end milling, the tool axis orientation is defined in the local coordinate system (C¯L,f¯,n¯,t¯) whereC¯Lis the tool center,f¯is the unit vector tangent to the tool path,n¯is the unit vector normal to the part surface andt¯is given byt¯=f¯∧n¯(Fig. 1). In this coordinate system, the tool axis can be rotated around each of the three unit vectors without generating local collision on the active part. In the proposed method, roll angle (θf,f¯) and pitch angle (θt,t¯) are used to control the tool axis orientation.The tool center follows the programmed tool path whereas the tool axis orientation is computed to avoid the obstacles by resolving the fundamental principle of dynamics. Furthermore, the tool velocity along the tool path is supposed to be constant and equal to a value defined by the end user. This also establishes a simple relationship between timetand the path displacements(cumulative arc length) throughout the tool path. This principle applied to the center of massGof the tool and expressed in the local frame (C¯L,f¯,n¯,t¯), leads to the following Eq. (1):(1)J¯¯⋅dΩ¯(t)dt=T¯(t)whereJ¯¯is the inertia tensor,Ω¯(t), the angular velocity of the tool, which derivates from the angular positionθtandθnwithin the local frame, andT¯(t)the total torque.Since the tool axis can spin around the two vectorsf¯andt¯, Eq. (1) can be split into two separated scalar equations (2) and (3):(2)Jf⋅d2θf(t)dt2=Tf(t)(3)Jt⋅d2θt(t)dt2=Tt(t).Thus the problem of tool axis orientation can be modeled as two independent pendulum systems in two different planes and ordinary differential equation solver is used to compute the tool motion.Therefore, the behavior of the tool axis orientation is computed thanks to Eq. (1) whereas the tool center follows the tool path at constant velocityv0with:(4)s(t)=v0⋅t+s(0).Once the framework is established, it is necessary to define a model for the repulsive and attractive forces acting on the tool, in order to compute the resulting torque.Repulsive forces acting on the tool are due to scalar potential attached to the check surfaces. More precisely, each check surface is tessellated into a set of check points which are considered as collision potential sources.In order to ensure collision avoidance between the check surface and the tool, the expression of the scalar potential generated by each check pointOiis the following Eq. (5):(5)Urepi={12⋅(1(ri−rs)−1r0)2if(ri−rs)<r00elsewith:•ri: distance between the considered pointPof the tool and the given check point (Oi);r0: check point neighborhood value (neighborhood sphere radius on Fig. 3);rs: security clearance.Given the scalar potentialUrepi, the repulsive vector fieldF¯repiis defined by:(6)F¯repi=−∇(Urepi)=−∂Urepi∂ri.(∂ri∂x∂ri∂y∂ri∂z).Assuming thatr=ri−rsandui¯=Oi.P¯‖Oi.P¯‖, this leads to:(7)F¯repi={(1r−1r0)⋅1r2⋅ui¯ifr<r00¯else .The evolution of‖Frepi¯‖relative tori, the distance between the considered point of the tool and the given check pointOiis plotted in Fig. 2. The repulsive force tends to infinity when the tool is entering the neighborhood of the check point and becomes closer to it. Collision avoidance is ensured thanks to this behavior.Thus, the total repulsive forceF¯repapplied to the considered pointPof the tool results from the sum of the elementary repulsive forces produced by each of thencheck pointsOiwith:(8)F¯rep=∑i=1nF¯repi.The torque generated at theCLpoint by the total repulsive force at each point of the toolPjis given in Eq. (9):(9)T¯rep=∑j=1mCLPj¯∧F¯rep(Pj).An attractive torque exerted by a spring is introduced to restore the tool axis orientation in the programmed configuration as well as a viscous damper to allow the system to return to its steady state without oscillating. Two attractive torques, for roll and pitch angles, are used. Thus the additional repulsive and attractive torques lead to the two equations (10) and (11):(10)Jθf̈+cθḟ+k(θf−θfgoal)=Tfrep(11)Jθẗ+cθṫ+k(θt−θtgoal)=Ttrepwith:•k: stiffness coefficient;c: damping coefficient;θfgoal: programmed angle aroundf¯;θtgoal: programmed angle aroundt¯.When the tool leaves the neighborhood area after avoiding obstacles, it is essential that the tool axis returns in its steady state with a smooth response. In this area, the behavior of the tool axis orientation can be modeled as a damped harmonic oscillator without external applied force. The resulting differential equation is then:(12)J⋅θ̈+c⋅θ̇+k⋅θ=0which can be rewritten into the classical form:(13)θ̈+2⋅ξ⋅ω0⋅θ̇+ω02⋅θ=0with:•ω0=kJ, the natural oscillating frequency;ξ=c2⋅k⋅J, the damping ratio.Thus, the damping parameter has to be determined according to the next equation relative to a critically damped harmonic oscillator (ξ≥1):(14)c≥2⋅k⋅JwhereJhas been set to 1.Solving the differential equation without second member ensures a modification of the tool axis orientation with an aperiodic behavior. The second order differential equations with second member corresponding to Eqs. (10) and (11) are not formally resolvable. These equations are thus solved using a differential equation solver based on the Runge–Kutta RK4 numerical method. The solver is the ODE 45 solver proposed in Matlab.The proposed example allows the validation of the transient behavior of the system when the tool enters and exits an obstacle neighborhood. The tool, reduced to its center of massGand represented by its axis, is following a straight line. An obstacle, defined by a check point with a given neighborhood, is located on the tool path.The torque generated by the repulsive force is given in Eq. (9) withn=1andP=G. As Eqs. (10) and (11) are independent, only the roll angleθfaround the feed vectorf¯has been used in this example. When the tool is entering the obstacle neighborhood, the repulsive force is acting on the tool and modifies the tool axis orientation. The attractive torque generates the return of the tool axis to its programmed orientation. Fig. 3 illustrates the resulting smooth tool axis motion. This simple example shows the benefit of the proposed method to avoid collisions.The stiffness parameterk, the neighborhood valuer0and the inertiaJof the tool model have an influence on the way the tool axis orientation is modified when the tool comes closer to an obstacle. To illustrate this behavior, the example of a single point obstacle is re-used. Several values ofr0,Jandkare studied and the resulting behaviors of the tool axis orientation, especially the location in the (f¯,t¯) plane of the center of massGlocated on the tool axis, are plotted in Fig. 4. Initial values ofr0,kandJproduce the red curve.The curve resulting from a multiplication by two of the neighborhood valuer0is the blue one. Results show that the neighborhood parameterr0can be seen as an anticipation parameter to start modifying the tool axis orientation more or less further from the obstacle.The influence of the inertia increase is illustrated by the black curve. As might be expected, the result demonstrates that a heavier tool is pushed back later by the repulsive force. The behavior after the obstacle is very different as the return of the tool axis to the programmed orientation is very long.As for the stiffness parameterk, the curve resulting from a multiplication of its value is the green one. Its influence is on how fast the orientation of the tool axis is changed to avoid the obstacle. When the stiffness value increases, the modification of the tool axis orientation occurs later and the spring force pulls back the tool quicker when leaving the neighborhood.This section has shown the relevance of the method to avoid a single point obstacle with a critical damped behavior as well as the influence of the parameters on this behavior. The next section is devoted to the general case of a surface obstacle as usually encountered in Computer-Aided Manufacturing.Usually, parts encountered in 5-axis milling exhibit continuous check surfaces modeled as parametric surfaces. In order to apply the proposed approach, the check surfaces have to be tessellated and each point of the mesh is considered as a repulsive point whether it belongs to the neighborhood. By applying repulsive and attractive forces as described in the previous section on a rough tessellation of a Bezier patch, the following behavior occurs (Fig. 5).In this example, the mesh size is set to 4 mm leading to 45 nodes in the mesh. The low repulsive point density in the check surface mesh allows the tool to penetrate between the points, thus generating collisions and oscillations. It is therefore important to study the density of the check surface mesh to avoid this type of behavior.In order to determine the mesh size of the check surfaces to get a smooth response, the influence of points of the obstacle’s mesh has to be investigated. The following case of study illustrates the worst configuration in terms of steady-state solution. A tool moving along a planar check surface enters successively different spherical potential fields created by a structured mesh of the check surface which is aligned with the tool axis orientation. The tool geometry is reduced to a unique point located at its center of mass. Before entering the first neighborhood, the orientation of the tool axis is constant, equal to the programmed value. As the tool penetrates in the different neighborhoods, large amplitude oscillations are generated due to the distance between the aligned obstacles (Fig. 6). Finally, the tool exits neighborhoods without oscillation respecting the aperiodic response.To study the amplitude of the observed oscillations when the tool enters the different neighborhoods, an analytical model is proposed based on a driven harmonic oscillator. The total repulsive force generated by the aligned obstacles is modeled as a sinusoidal driving force such as:(15)F¯rep=F0¯⋅(1+cos(ω⋅t)).The driving frequencyωof these oscillations depends on the distancedbetween each obstacle and the velocityv0of the tool along the trajectory:(16)ω=2⋅π⋅v0/d.The behavior of this model is depicted by the black curve in Fig. 6 and the repulsive force created by the obstacles is the green one. Aligned mesh points are represented by the vertical blue lines. The amplitude of the modelF0¯has been calibrated according to the real amplitude. Thus, the proposed model with thecosfunction is relatively close to the actual behavior of the repulsive force.Then, the considered differential equation is the following:(17)J⋅θ̈+c⋅θ̇+k⋅θ=T0⋅(1+cos(ω⋅t))with:T0=CLG⋅F0.The response is the sum of the transient solution (without second member)θ1(t)and the steady-state solutionθ2(t)with:(18)θ(t)=θ1(t)+θ2(t)with:(19){θ1(t)=A1⋅e−tτ1+A2⋅e−tτ2θ2(t)=B⋅cos(ω⋅t−Φ)+T0k.Regarding the steady-state solution, the amplitudeBand the phaseΦare expressed as follows:(20)B=T0/k(1−(ωω0)2)2+4⋅ξ2⋅(ωω0)2(21)tan(Φ)=2⋅ξ⋅(ωω0)1−(ωω0)2.The amplitude of the steady-state solution is illustrated in Fig. 7in the case of an aperiodic response (ξ=1) with the parameters of Table 1. Thus, the choice of a driven frequency such asωω0→∞corresponding to the reduction of the distance between the obstaclesdalong the tool path decreases the amplitude ratio.Reducing the distance between the obstacles by a factor of 3,ω2=3ω1, leads to a greater attenuation of oscillations as illustrated in Figs. 7 and 8. However, oscillations are still visible in accordance with the model. Indeed, the case study is very unfavorable because the tool is reduced to a point so it can penetrate between two consecutive obstacles.Based on this analysis, the mesh of the considered Bezier patch is densified with a mesh sizedequal to 1 mm as illustrated in Fig. 9. The total repulsive forceF¯repis plotted as well as the resulting roll angleθf. One can then observe thatF¯reppresents small oscillations in contrast to the smooth evolution of the angleθf. Indeed, the mesh nodes of the check surface are sufficiently close and are not aligned with the tool axis. The oscillations are attenuated on one hand by the dynamic behavior of the second order system and on the other hand by the numerical resolution done by the ODE 45 solver. Collision avoidance is respected and the return to the initial programmed orientation is performed without oscillation. It should be noticed that the mesh size must be adapted to the size of the check surface geometrical features in order to avoid subsampling. Otherwise, collision may happen between the tool and these small local features.Fig. 9 also emphasizes the positive effect of the dynamic approach compared to a static approach. As the differential equation of the tool motion is of second order, the variation of the tool axis orientation always starts with a tangency continuity even for the worst case which is the step-response. The resulting tool axis motion is smooth and the delay time is visible at the beginning and at the end of the tool path. Finally, various parameters are at our disposal to prevent oscillations, including the damping parameter and the mesh size of the check surface. If necessary, it also remains the possibility of further improving the method using an unstructured mesh (Fig. 10). Indeed, when the mesh is unstructured, the check points are randomly distributed and the repulsive force cannot be regular as a sinusoidal signal. Thus it helps to reduce the amplitude of the repulsive force oscillations and to remove oscillations of the tool axis orientation. It would, for the same efficiency, reduce the number of nodes while ensuring a non-sinusoidal repulsive force.As the total repulsive forceF¯repis computed as the sum of the elementary forces produced by each check point (Eq. (8)), the densification of the mesh generates a greater total repulsive torque on the tool. Consequently, the steady state solution is modified according to Eqs. (10) and (11) and leads to:(22)θ−θgoal=Tfrepk.Thus, the tool axis orientation is more tilted when the density of the mesh increases. The stiffness parameterkhas to be modified according to the mesh size in order to maintain the same tool axis behavior whatever be the mesh density.To show the benefit of the proposed approach, the following example deals with the machining of an impeller, CAD model of which is displayed in Fig. 11. The study focuses on the 5-axis sweeping of the vanes along the isoparametric curves of the surface with a ball-end mill, diameter of which is equal to 5 mm.In this computation, the total repulsive forceF¯repis calculated by summing the forces generated by the mesh points of the left and right blades considered as check surfaces. The mesh of the check surfaces leads to 4800 nodes. The programmed orientation of the tool axis is set normal to the part surface which meansθf=θn=0. With such a tool axis orientation strategy, the tool should inevitably collide with the blades. The constant parameters of the computation are listed in Table 1. In this table, one can notice that only three parameters are driving the simulation, the stiffness parameterk, the neighborhoodr0and the mesh sized.Results are illustrated in Fig. 12where only the isoparametric path for the valuev∗=0.5of the part surface is plotted for better readability. At the beginning of the tool path, the tool is outside the check surfaces neighborhood and the tool axis orientation is not modified. Then, the tool axis orientation is continuously modified and the tool passes between the two check surfaces without collision. At the end of the tool path, the tool axis orientation is only modified by the right hand check surface which pushes the tool on the left. This behavior is visible fors=80mmon Fig. 12. Thus the computation generates a smooth trajectory and the potential collisions with the two check surfaces are avoided. In this example, the chosen tool has enough space to pass between the two check surfaces. It is possible to encounter cases where the tool axis orientation cannot be modified without collisions due to the spatial arrangement of the check surfaces. In this case the ODE 45 solver would not find a solution and the algorithm would stop according to a termination criterion.Therefore, the proposed approach provides a good alternative to conventional approaches in the case of 5-axis open pocket parts.

@&#CONCLUSIONS@&#
This paper presents an original method for 5-axis collision avoidance between the tool and the check surfaces. Newton’s laws are used to compute a continuous tool motion along the tool path. The use of potential fields allows that no collision will occur with the obstacles as the neighborhood generates a repulsive force growing to infinity when the tool gets closer to the obstacle. As the tool axis orientation behaves like a damped harmonic oscillator, investigations are carried out to prevent the tool axis orientation from oscillating and to ensure a smooth behavior along the check surfaces. Numerical investigations show that the proposed approach is efficient and does not require advanced CAM programming skills to compute the collision-free tool path.