@&#MAIN-TITLE@&#
An economic replica placement mechanism for streaming content distribution in Hybrid CDN-P2P networks

@&#HIGHLIGHTS@&#
Economic model of streaming content distribution in HCDNs is introduced.A novel replica placement mechanism is introduced for streaming content in HCDN.Asymptotic resource consumption of the solution is studied.Performance of the solution is analyzed in comparison to other strategies.

@&#KEYPHRASES@&#
Hybrid CDN-P2P network,Replica placement,Economic mechanism design,Content Delivery Network,

@&#ABSTRACT@&#
Hybrid CDN-P2P networks blend Content Delivery Networks (CDN) and Peer-to-Peer (P2P) networks to overcome their shortcomings. Replica placement in these networks is still an open problem. Hierarchical structure of these networks makes it inefficient to use available replica placement strategies specialized to CDN or P2P network domains. In this work, we introduce a novel replication strategy which enables traditional CDNs to offer Hybrid CDN-P2P streaming content delivery services. The proposed solution relies on economic model of the Hybrid CDN and employs a dynamic mechanism to optimize the number and places of replicas for P2P service. In particular, processing and communication complexities of the proposed solution are studied and its performance is analyzed in a typical Hybrid CDN-P2P network in comparison to related strategies.

@&#INTRODUCTION@&#
Hybrid CDN-P2P networks (HCDN) blend Content Delivery Network (CDN) and Peer-to-Peer (P2P) technologies. They benefit from the advantages of both architectures. CDNs benefit from the ease of management and are able to guarantee high Quality of Service (QoS) [1], but compared to P2P networks, they have higher costs and lower scalability [2]. P2P networks have low running costs and are more scalable, but it is not easy to guarantee their QoS and their management is more challenging [3]. Hybrid CDN-P2P networks combine these technologies to offer low priced high quality services [4].In HCDNs, users can receive the service in either of Clientâ€“Server (CS) or Peer-to-Peer (P2P) approaches. In P2P mode, users need to contribute to content delivery using their upload bandwidth. In order to incentivize the end-users to contribute to P2P content delivery, HCDNs offer P2P service with higher quality compared with CS service [3]. Therefore, for streaming content distribution, an HCDN needs to replicate the stream with different qualities for CS and P2P end-users. In this work, by introducing a novel Replica Placement (RP) mechanism, a traditional CDN has been enabled to offer hybrid streaming content delivery services. It is assumed that the CDN employs its own replica placement strategy for distribution of the content in CS mode. Based on this assumption, a dynamic replica placement mechanism is designed to replicate the streaming content in P2P mode. This RP mechanism requires cooperation of edge servers and relies on communication of a few small messages to determine the best location of replicas for higher quality content distribution in P2P mode.HCDNs receive the content from content providers and deliver it to end-users either in CS or P2P modes. They charge the content providers based on the delivered traffic and the Service Level Agreement (SLA), similar to traditional CDNs. In HCDNs, higher QoS in P2P mode encourages users to contribute in P2P content delivery using their upload bandwidth. Therefore, in P2P content delivery approach, the HCDN spends less bandwidth to deliver the content to end-users. As a result, in the SLA between the content provider and HCDN provider, price of content delivery in P2P mode must be kept less than traditional CS service. This is necessary to prevent the HCDN from reducing to a pure P2P service provider and to convince the content provider to request for the hybrid content delivery service. HCDN spends different amount of resources for CS and P2P end-users and charges the content provider differently for CS and P2P services. Therefore, in order to select the best number and places of replicas of P2P content, not only the content delivery costs and popularity of the content (like traditional CDNs) but also revenue of the HCDN must be taken into account.CDNs, P2P networks and consequently HCDNs consist of thousands of servers and peers. This raises concern over the resource consumption of the RP mechanism. Moreover, high expected availability makes it mandatory to implement the RP as a distributed algorithm. The RP problem in this domain has many varying parameters like popularity of the content, prices of bandwidth and storage, and structure of the network. Therefore, the solution must consider many effective parameters but it must not spend much of valuable network bandwidth for transferring these parameters to and from the agents. It is also important to consume the minimum processing resources to solve the problem.Existing studies of replica placement in HCDNs [6,7], are confined to replication of static content and employ non-cooperative pull-based approach. In this work, we introduce a cooperative push-based replication strategy that extends the use of the HCDN to streaming content distribution, which is called Hybrid Replica Placement (HPR). To answer the resource consumption concerns, the economic model of the system is introduced. Then a hierarchical tree-based cooperative replica placement is proposed based on the Economic Mechanism Design Theory [5]. Experiments show that using HPR, it is possible to find the optimum placement of replicas. The major contribution of this paper is proposing an economic RP mechanism for replication of streaming content on a traditional CDN to offer Hybrid CDN-P2P streaming content delivery service.The rest of the paper is organized as follows. We explore related works and compare the problem with similar problems in Section 2. In Section 3, the economic model of the HCDN is introduced. Section 4 is devoted to formal definition of the economic replica placement problem. In Section 5 the economic push based cooperative replica placement mechanism is introduced. The solution is studied through simulation and its outcome is compared with some other strategies in Section 6. Practical implications are discussed in Section 7. Finally the paper is concluded in Section 8.Effectiveness of combining CDNs and P2P networks has been covered in earlier literature [8,9]. In [10] the cost savings in Hybrid CDN-P2P architecture is studied. A survey of different architectures and models of Hybrid CDN-P2P networks is reported in [11]. In some works, e.g. [12,13,8], the architecture of the HCDN is inspired from P2P systems and the CDN part is employed to fill the missing blocks of the playback buffer. Authors in [14] have tried to introduce a resource scheduling mechanism for these networks. In the literature, there is also another class of HCDN architecture that can be deployed as a commercial Hybrid CDN-P2P network. They can extend existing commercial CDNs and are able to tolerate the fact that some end-users might not prefer to install the special hybrid content distribution application on their machines [15]. This architecture is able to serve the end-users directly; therefore it is not mandatory for end-users to install the application software. However, end-users equipped with this special software are able to receive the content with higher quality [9]. Livesky [15] can be referred as one of these architectures and also as the first successful deployment of Hybrid CDN-P2P networks. It extends a traditional CDN to a Hybrid CDN-P2P network and has succeeded to serve 10million concurrent requests for streaming videos. Accordingly, the architecture introduced in this network was adopted in the present study.CDNs host the third-party content for high performance delivery of any digital content, including static files, dynamic content, streaming media (e.g. audio, real time video), and different content services (e.g. e-commerce service) [1]. Among these categories, HCDNs are most suited for distribution of streaming content, where it is possible to offer the end-users a higher level of quality and benefit from their contribution [12]. It can be observed that most of the works in the field of HCDNs are concentrated on distribution of streaming content [11].Replica Placement (RP) and Request Routing (RR) are two key mechanisms affecting performance of CDNs [16]. Most commercial CDNs rely on DNS-based request routing mechanism [1]. Consequently, in order to optimize the performance and economics of content distribution, the RP strategy must be designed considering that the RR mechanism has a predefined DNS-based behavior. Despite the fact that there has been a significant body of research on replica placement in traditional CDNs [1] and P2P networks [3], replica placement in Hybrid CDN-P2P networks is studied just in [6,7]. Both of these works are confined to placement of replicas of static content while in this work we employ the HCDN for distribution of streaming content.In CDNs, content replication is performed using cooperative push-based, non-cooperative pull-based or cooperative pull-based approaches [1]. In the non-cooperative pull-based approach, requests of clients are redirected to their closest edge server and edge servers pull content from the origin server in case of cache misses. Many commercial CDNs use this approach [16]. This approach leads to high traffic on the origin server and seems to be inefficient for replication of high quality streaming content in a hybrid CDN environment. The cooperative pull-based approach differs from the non-cooperative approach in the sense that edge servers cooperate with each other to get the requested content in case of a cache miss. This approach is employed mostly by academic CDNs like Coral [17]. This approach also seems to be inefficient in HCDNs, since churn rate of P2P end-users makes it necessary to run the replication algorithm when a new P2P end-user appears. Cooperative push-based approach relies on the pre-fetching of content to the edge servers. Content is pushed to the edge servers from the origin, and edge servers cooperate to reduce replication and update cost [1]. In the literature, push-based cooperative RP algorithms have been used successfully in many domains from Data-Grids [18], and P2P networks [19] to CDNs [1]. This approach is compatible with our problem and we have introduced our solution based on this approach. Our solution has two key differences with aforementioned works; first, instead of trying to minimize replication costs, it considers both revenue and costs of the system and maximizes the net profit of the HCDN. Second, in order to preserve compatibility with the CDN environment, it cooperates with the existing replica placement of the CDN and considers current CS content delivery service.Several works can be found in the literature demonstrating the effectiveness of different replication strategies for the content. Under cooperative push-based approach, greedy-global heuristic algorithm is reported to be efficient for making replication decision among cooperating edge servers [20]. Kangasharju et al. [20] have employed four heuristics, namely random, popularity, greedy-single, and greedy-global for replication of the content and in this work we compare outcome of the proposed solutions with this set of strategies.Thanks to the high potential of Economic Mechanism Design Theory [5], we have employed it to introduce the problem formally and design an efficient mechanism considering resource consumption. Implementation of privacy preserving mechanisms demands minimum of communication resources [5]. Economic mechanisms are classified as direct and indirect. In direct mechanisms, all the decisions are made based on private information of each agent plus information which is transferred to it by other agents. These mechanisms demand less processing resources [5]. In order to guarantee that minimum communication and processing resources are spent in the implementation; our solution is based on a direct and privacy preserving mechanism.Table 1summarizes the notations used in this paper to model economics and performance of streaming content distribution in HCDN. Fig. 1illustrates architecture of a Hybrid CDN-P2P network employed to define the replica placement problem. In these networks, the content provider signs an SLA with the HCDN provider and supplies the content i having two different qualities (BWCS,iand BWP2P,i) to distribution servers of the HCDN. The revenue in the contracted SLAifor distribution of content i between a commercial HCDN provider and content provider can be quantified as follows:(1)RSLAi=PCS,iÂ·BWCS,iÂ·NtotalCS,i+PP2P,iÂ·BWP2P,iÂ·NtotalP2P,i,where RSLAidetermines the revenue of the Hybrid CDN provider according to SLAi. NtotalCS,iand NtotalP2P,irepresent total number of users served with content i using CS and P2P approaches, respectively. PCS,iand PP2P,idenote contracted prices of bandwidth in CS and P2P modes. Bandwidth of content i in CS and P2P modes are indicated by BWCS,iand BWP2P,i, respectively. In order to keep P2P content distribution economic and also prevent the HCDN from becoming a pure CDN, it is assumed that PCS,i>PP2P,i>0. Additionally, BWCS,iâ‰ªBWP2P,iguarantees that the users have enough incentives to contribute to P2P content delivery. The cost function of content distribution at the edge servers in Hybrid CDN-P2P network for SLAican be represented as:(2)CostSLAi=DistCosti+RepCosti=âˆ‘ESâˆˆReplicasi(DistCostES,i+RepCostES,i),where the set Replicasidenotes all the edge servers containing a replica of the content i. DistCostiand RepCostiindicate costs spent by HCDN for distribution and replication of the content i. DistCostES,iand RepCostES,idenote content distribution and replication cost on edge server ES for content i.In this system, the RR mechanism redirects end-users requesting the content i to the suitable edge servers containing replicas of i. End-users have the option to request content i in either of CS or P2P modes. Therefore, each edge server receives ReqES,CS,iand ReqES,P2P,irequests for the stream in CS and P2P modes, respectively. Users interested to receive the higher quality content in P2P mode need to have their machines equipped with the special software and in practice [6] it is not likely to have the software installed on all the receiving machines. Therefore, an edge server even with high number of P2P receivers cannot stop to serve the content in CS mode [15]. When the number of requests on an edge server is small, all the requests are served in CS mode but whenever the number of P2P enabled end-users exceeds the bootstrapping threshold, P2P content delivery begins [14]. Therefore, we have:(3)RepP2P,iâŠ‚RepCS,i=Replicasi,where RepP2P,iand RepCS,irepresent the set of edge servers containing replicas of high quality content (P2P mode) and base quality content (CS mode). In HCDNs, P2P content delivery becomes promising when the number of end-users interested to receive the content in P2P mode increases beyond a bootstrapping threshold, TB. In other words, when the number of end-users requesting to receive the content in P2P mode is below the bootstrapping threshold or when the edge server does not contain a replica of the requested content for P2P content delivery, all the end-users will be served with the base quality CS content. Therefore, we have:(4)NP2P,ES,i=0andNCS,ES,i=ReqCS,ES,i+ReqP2P,ES,iif(ESâˆ‰RepP2P,iorNP2P,ES,i<TB)NP2P,ES,i=ReqP2P,ES,iandNCS,ES,i=ReqCS,ES,iif(ESâˆˆRepP2P,iandNP2P,ES,i>TB),where ReqP2P,ES,iand ReqCS,ES,idenote the number of end-users requesting to receive content i from the edge server ES in P2P and CS mode, respectively. NCS,ES,iand NP2P,ES,iindicate the number of end-users receiving content i in CS and P2P modes from ES, respectively. TBrepresents the bootstrapping threshold of P2P content distribution.The bandwidth consumption of an edge server to serve CS and P2P end-users receiving content i is expressed as follows:(5)BWES,i=BWCS,ES,i+BWP2P,ES,i=BWCS,iÂ·NCS,ES,i+(1-Î±ES,i)Â·BWP2P,iÂ·NP2P,ES,i,where BWES,i, BWCS,ES,iand BWP2P,ES,isymbolize the total bandwidth consumption, the bandwidth spent for CS end-users (NCS,ES,i) and the bandwidth spent to serve P2P end-users (NP2P,ES,i) at this edge server, respectively. Î±ES,irepresents the effectiveness factor of P2P content delivery for content i at this edge server. The prices of bandwidth at different edge servers are neither equal nor constant in practice and are represented by BWPES. So, content distribution cost is quantified by Eq. (6) and denoted by DistCosti.(6)DistCosti=âˆ‘ESâˆˆReplicasiDistCostES,i=âˆ‘ESâˆˆReplicasi(BWES,iÂ·BWPriceES),Replication cost consists of two parts: replica transmission cost denoted by TransCostES,iand buffering (storage cost) symbolized by StrCostES,i. Therefore, the replication cost for content i can be quantified by:(7)RepCosti=âˆ‘ESâˆˆReplicasiRepCostES,i=âˆ‘ESâˆˆRepCS,iRepCostES,CS,i+âˆ‘ESâˆˆRepP2P,iRepCostES,P2P,i=âˆ‘ESâˆˆRepCS,i(TransCostES,CS,i+StrCostES,CS,i)+âˆ‘ESâˆˆRepP2P,i(TransCostES,P2P,i+StrCostES,P2P,i).We aim to add an RP mechanism to a traditional CDN and enable it to perform as an HCDN. Therefore, it is assumed that the set RepCS,iis determined by the existing RP mechanism of the CDN and it is considered as an input variable of our problem. We focus on optimizing economics of the system considering RepP2P,ias optimization variable. Consequently, we have:(8)RepCostES,P2P,i=TransCostES,P2P,i+StrCostES,P2P,i=BWP2P,iÂ·PBWSource,ES+SizeP2P,iÂ·PSTRES,where BWP2P,iand SizeP2P,idenote the bandwidth of content i in P2P mode and its required storage space, respectively. PBWES,Sourcerepresents the price of bandwidth for transferring the stream of content for distribution in P2P mode from the source (cooperating edge server containing the replica of the content i in P2P mode) to ES, and PSTRESsymbolizes the price of storage at ES. Therefore, the objective function, net-profit of the HCDN, based on Eqs. (1)â€“(3), (5)â€“(8) can be quantified as:(9)NetProfitSLAi=RSLAi-CostSLAi.In order to maximize NetProfitSLAi, the RP mechanism must determine RepP2P,i. All the other parameters of the problem including the set of replicas for CS content, the population of requests, bootstrapping threshold, storage costs and communication costs are not controllable in this phase; therefore, the decision problem to put replicas of P2P content is defined as follows:(10)RepP2P,i=argmaxrepP2PâˆˆP(RepCS,i)(NetProfitSLAi(repP2P)),where P(RepCS,i) denotes the power set of RepCS,i. Since |P(RepCS,i)|=2(|RepCS,i|), finding the optimum replication set for the stream in P2P mode for small replica sets is trivial. However, considering the fact that popular CDNs, e.g. Akamai, benefit from thousands of edge servers [1], it can be concluded that it is not possible to rely on an exhaustive search solution to find the optimum set of replicas for the content in Hybrid mode.In order to design the RP mechanism of the HCDN (HRP), the Economic Mechanism Design Theory is employed. In this section, economic model of the problem which is called Hybrid Replica Placement Model (HRPM) is formalized mathematically. Subsequently, HRP is introduced formally using the popular notations of the Economic Mechanism Design Theory [5]. The major advantages of HRPM over popular cost models used in the literature of content distribution are twofold. First, it computes the complex net profit function of hybrid content delivery system instead of raw cost function of replica placement considered in traditional CDNs [1]. Second, it embeds all the constraints and goals of the problem in a single dimensional objective function suitable for efficient mechanism design [5].As seen in Eq. (3), the underlying network for the replication of RepP2P,iconsists of an overlay network composed of edge servers that contain replicas of the content in CS mode. The first responsibility of this overlay network is to disseminate the base quality content from origin servers to replica servers for CS service, RepCS,i, through multicasting. In order to keep the problem tractable, we make a technical assumption about the overlay network. We assume that the overlay multicast network employed for distribution of replicas for P2P content distribution is equal to the multicasting infrastructure composed of RepCS,i. This technical assumption confines the source of transferring the P2P content for cooperative replication to ancestor servers in this multicasting infrastructure. Relying on this hierarchical infrastructure, it is possible to quantify the net profit of HCDN for distribution of content i in a sub-tree rooted at ES recursively as:(11)NetProfit(ES,h,i)=Maxâˆ‘childâˆˆES_childNetProfit(child,h+1,i)(case:a No replica atES)+RPureCDN,ES,i-RepCostCS,ES,i-DistCostPureCDN,ES,i,âˆ‘childâˆˆES_childNetProfit(child,1,i)(case:b 1 replica atES)+RHCDN,ES,i-RepCostCS,ES,i-RepCostP2P,ES-DistCostHCDN,ES,i,where NetProfit(ES,h,i) denotes the maximum net profit of content distribution for the sub-tree rooted at ES when the first replica of the high quality content is located at h steps higher than ES. In this equation, when it is not economic to have a replica of high quality content at ES, (case a in Eq. (11) and Fig. 2), all the child sub-trees of ES denoted by ES_child have to fetch the content from h+1 steps upper. In this case, all the requests redirected to ES are served in the CS mode. Thus, the revenue of ES is denoted with RPureCDN,ES,iand is therefore calculated like that of a pure CDN server. In this case, the replication cost is paid only for the CS content. Consequently, the distribution cost is calculated multiplying bandwidth of content i in CS mode by price of the bandwidth at ES, and total number of requests redirected to ES, (DistCostPureCDN,ES,i=BWCS,iâ‹…PBWESâ‹…(ReqES,CS,i+ReqES,P2P,i)).When it is economic and possible to have a replica at ES, (case b in Eq. (11) and Fig. 2), all the child sub-trees receive the high quality P2P content replicated at ES from one step upper; however, in addition to the replication cost for base quality content, ES has to pay for the replication of high quality instance of content i in P2P mode (RepCostP2P,ES,i). In this case, ES acts as a hybrid content distribution server. Therefore, the revenue of edge server, ES, is calculated as an HCDN server using Eq. (1). Based on Eq. (11) and knowing that the maximum depth of the multicasting trees in IP networks is limited, it is possible to find the maximum net profit for every multicasting infrastructure, finding the maximum net profit for the root server (NetProfit(Root,0,i)), recursively.In order to employ Eq. (11) efficiently and design a resourceful replication mechanism, Economic Mechanism Design Theory is employed. In this approach, notations illustrated in Fig. 3are used to introduce problems and mechanisms formally [5].Relying on this theory the problem is defined as follows:Given:â€¢a class Î˜ of environments (here all the replica placement problems in this domain with parameters introduced in Table 1),an outcome space Z (single dimension profit function of the HCDN based on Eq. (1)),and a goal function F (Eq. (10)).Requested:An economic mechanism Ï€=(M, Î¼, h) that realizes the problem (in this case maximizes the net profit of HCDN)â€¢where M represents the message space used to solve the problem and yield equilibrium,Î¼ symbolizes the function used for generating the group equilibrium messages,and h denotes the function which determines the outcome.The problem is solved and the best mechanism is chosen if and only if:(12)âˆ€Î¸âˆˆÎ˜F(Î¸)=h(Î¼(Î¸)).In this problem, the outcome function, h, equals the total net profit of the HCDN, NetProfit(Root,0,i). Based on Eq. (11), every edge server needs to receive the tabular function NetProfit from its direct child sub-trees. Therefore, M includes messages containing the profit function and Î¼ consists of messages carrying the values of NetProfit function between each node and its parent. Agents employed to implement the mechanism include all the members of RepCS,i. In order to find the exact value of net profit for the HCDN and evaluate Eq. (11) for all the edge servers, it is needed to traverse the multicasting tree in a Reverse Beneath First Search (RBFS) order and calculate the NetProfit function recursively. After the maximum of NetProfit(Root,0,i) is found, in order to determine the replication set for P2P content, it is needed to traverse the multicasting tree with Beneath First Search (BFS) order. Moreover, the selected value of NetProfit function at each node determines which nodes are to replicate the P2P content. Fig. 4illustrates the flow of messages among the agents in this mechanism.For the first phase (RBFS), since the parent node by itself requests the successors to calculate and transfer their NetProfit function, it is not necessary for the messages to contain the address of the edge server, ES, and the ID of the content, i. Therefore, the profit function in direct implementation of the solution can be expressed by at least a single dimension data matrix with a maximum length of H (maximum height of the tree). For the second phase (BFS), the parent node needs to declare the selected value of NetProfit vector calculated previously by the child node which maximizes its net profit. Therefore, in this phase, messages contain just one number. Since in Eq. (11) each edge server just relies on its own information and the value of net profit function calculated by its direct child sub trees, it can be concluded that this solution is a direct mechanism.

@&#CONCLUSIONS@&#
