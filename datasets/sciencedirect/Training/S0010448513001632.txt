@&#MAIN-TITLE@&#
A unified method for hybrid subdivision surface design using geometric partial differential equations

@&#HIGHLIGHTS@&#
We composite surface subdivision and the GPDE to form a unified method for freeform surface design.We present a novel technique to evaluate the finite element basis functions.This is a first attempt for constructing the GPDE subdivision surface with hybrid control meshes.

@&#KEYPHRASES@&#
Hybrid subdivision surface,Geometric partial differential equations,Finite element method,

@&#ABSTRACT@&#
Surface subdivision gains popularity in surface design owing to its flexible applications for geometry with complicated topology and simple computational scheme, and the geometric partial differential equation (GPDE) method is an advanced technology for constructing high-quality smooth surfaces. In this paper, we composite these two ingredients to form a unified method for freeform surface design. We choose the mean curvature flow and Willmore flow as our driven GPDEs, and the finite element method coupled with a hybrid Loop and Catmull–Clark subdivision algorithm as the numerical simulation method. This research presents a novel technique to evaluate the finite element basis functions and the first attempt for constructing the GPDE subdivision surface with hybrid control meshes consisting of triangles and quadrilaterals. Numerical experiments show that the construction method is efficient and robust, yielding high-quality hybrid subdivision surfaces.

@&#INTRODUCTION@&#
Freeform surface design has been extensively demanded in airplane, ship, automobile and light industry. It helps us accomplish the design and manufacture from a little screw to a big airplane (see Fig. 1). It has also been vividly developed in architecture design. To be able to manipulate the designed surface, designers often require extra flexibilities to model certain regions in detail with triangular (tri) patches, while preserving quadrilateral (quad) patches on regular areas. Hence, the designers will have more degrees of freedom for designing more natural and reasonable surface shape if there is no limitation on the mesh structure. Consequently, it is always desirable to have surfaces with a hybrid tri–quad patch structure which is obviously superior over only one mesh form. In this paper, we aim to construct freeform subdivision surfaces with tri–quad control meshes using specified geometric partial differential equations (GPDEs). In the following, we first briefly review the previous work on subdivision surfaces and GPDEs.Previous work on subdivision surfaces. As classical tools for representing surface, Bézier,B-spline and NURBS (Non-Uniform RationalB-spline) have been widely accepted and used. However, to join several such surface patches with specified continuity, complicated editing and blending tools are needed even for surfaces with simple topology. To overcome this difficulty, subdivision surfaces have been developed. There are plenty of research works on subdivision surfaces. Here we just review a few of them. For a comprehensive description of the subdivision methods, we refer the readers to the book by Warren  [1].The concept of discrete subdivision was first introduced by Chaikin in 1974 (see  [2]). Thereafter, many subdivision schemes have been developed, such as Catmull–Clark (see  [3]), Loop (see [4]), Doo–Sabin (see  [5]), Butterfly (see  [6]), and Kobbelt (see  [7]) techniques. Since the subdivision technology has been proposed, it has rapidly gained popularity in computer graphics and computer-aided design because it can not only generate smooth surfaces with aesthetically pleasing looking through a simple fundamental algorithm but also handle shapes of arbitrary topology, which overcomes the difficulty in joining regular NURBS surface patches. A simple and computationally efficient algorithm for approximating Catmull–Clark subdivision surfaces by a minimal set of bicubic patches was presented in  [8]. A method for using polygonal complexes to generate Catmull–Clark subdivision surfaces with curve interpolation constraints was proposed in  [9].Complicated surface shapes are often produced by connecting surface patches with non-uniform sizes and different shapes. This needs adjustable curve frames to sketch their contours and keep certain smoothness. These curves can be actual boundaries of the surface, or lie on the surfaces. To address an input control mesh with marked edges/vertices and boundary features, such as concave corners, convex corners, sharp creases and smooth creases, several boundary subdivision rules have been proposed (see [10,5,11,12]). The subdivision scheme described in  [13] combines the Catmull–Clark subdivision and Loop’s subdivision which allows us to freely distribute quadrilaterals and triangles in the control mesh. A 4–3 subdivision (see  [13]) applies a 4-direction alternative to the Catmull–Clark subdivision on quad submeshes and a modification of Loop’s scheme on triangle submeshes, which was proved to beC1-continuous and with bounded curvature everywhere.Previous work on GPDE surfaces. There have been rich results (see  [14–18]) since GPDEs were applied to surface modeling 30 years ago. For a comprehensive description of the GPDE surfaces, we refer the readers to the book  [19]. This surface modeling tool can construct smooth surfaces which satisfy certain boundary continuity constraints. The obtained surfaces are completely determined by the chosen GPDEs and their boundary constraints.A surface minimizing a global energy is often called a fair surface. These kinds of surfaces are important and preferred in the shape design and modeling because they share certain optimal properties. Examples of such surfaces include: minimal surfaces (see  [20]), constant mean curvature surfaces (see  [21,22]), constant Gauss-curvature surfaces (see  [23]), Willmore surfaces (see [24,25]), and minimal mean curvature variation surfaces (see  [26]). All these surfaces are solutions of GPDEs.A method was presented in  [17] to approximate the solution surfaces of PDEs in terms ofB-splines. Recently, Feng and Warren (see  [27]) constructed biharmonicB-spline surfaces using discrete Laplace operators and derived a discrete refinement scheme for these splines. Pan and Xu have done some research work on constructing subdivision surfaces with prescribedG0andG1boundary conditions using finite element methods, where the mesh topology of the initial surface is pure triangular (see  [28]) or pure quadrilateral (see  [29]). However, the problem of constructing GPDE subdivision surface with hybrid control mesh has not been attempted. In this paper, we intend to treat the hybrid tri–quad mesh topology.Our contributions. The finite element methods for pure triangular (see [28]) or pure quadrilateral (see  [29]) meshes are based on the fast evaluation methods of subdivision surfaces proposed by Stam (see  [30,31]). For the hybrid control mesh, a fast evaluation method of subdivision surface could also be constructed. However, it is much more complicated than the pure triangular or pure quadrilateral case, due to the complexity of the topology structure of the hybrid control mesh (see Remark 4 in Section  3.5). In this paper, we develop a novel technique to evaluate the finite element basis functions, which leads to a systematic and comprehensive method for hybrid subdivision GPDE surface design with prescribedG0andG1boundary conditions. We contribute not only a novel method for constructing a hybrid subdivision GPDE surface, but also advanced computational tools. In particular, our main contributions are summarized as follows.(i)Different from the earlier finite element methods (see [28,29]) based on Stam’s fast algorithms (see  [30,31]) for the pure triangular or quadrilateral subdivision surfaces, our finite element method does not involve surface evaluation of irregular patches. It is very efficient and robust. Furthermore, the proposed method is simple and therefore it is easy to implement.The first attempt for constructing GPDE subdivision surfaces with control meshes consisting of triangles and quadrilaterals.A unified treatment for hybrid tri–quad control meshes with fixed boundaries and interior sharp feature curves. It therefore treats pure triangular or quadrilateral control meshes as two special cases.The remainder of this paper is organized as follows: Section  2 provides problem description and algorithm outline. Section  3describes our geometric PDE methods based on subdivision technology. Section  4 talks about the hybrid tri–quad surface mesh regularization. Some examples are shown in Section  5. Finally, Section  6 draws conclusions and points out future work.Given an initial open or closed surface whose control mesh has a coarse arbitrary connectivity with a hybrid tri–quad polygon (see Fig. 1(b)), our approach produces a smooth subdivision geometric PDE surface (see Fig. 1(c)) with topology preservation. The input has fixed boundaries, inner sharp feature curves and prescribed tangential vectors (co-normal) (see Fig. 1(a)) on these curves. Each boundary or inner sharp feature curve is defined as a piecewise cubicB-spline whose control points are equally-spaced. The interpolated boundary control points serve as the end-points of theB-spline curves. The generated surface not only possesses a certain global (G0orG1) smoothness, but also satisfies certain boundary conditions where theG0boundary condition means interpolating the boundary and inner sharp feature curves, and theG1boundary condition means interpolating these curves and the prescribed tangential vectors. Our algorithm contains four main steps:Step  1: Specify the co-normal conditions on the given boundaries and inner sharp feature curves if the Willmore flow is used;Step  2: Evolve the hybrid mesh using our geometric PDEs;Step  3: Regularize the mesh control points using anL2gradient flow; andStep  4: Check the termination condition and go to Step 2 if it is not satisfied.Since we adopt the Willmore flow and the mean curvature flow in our algorithm, let us first review them. The governing equation for the Willmore flow is as follows:(1){∂x∂t=−[ΔsH+2H(H2−K)]n,S(0)=S0,∂S(t)=Γ,nc(x)=nc(Γ)(x),∀x∈Γ,wherexis the surface point ofS,Δsis the Laplace–Beltrami operator defined onS,Γis the boundary curve of the surfaceS, andnc(Γ)is the given co-normal on the boundary curveΓ.H,Kandndenote the mean curvature, the Gaussian curvature and the surface normal ofS, respectively. To solve Eq. (1), we use the following mixed variational form (see  [29] for details): find(x,H)∈H2(S)3×H1(S)3such that(2){∫S∂x∂tϕdA+∫S[ϕ⊘H−n(∇sϕ)T∇sH]ndA+∫S2n(H2−K)ϕnTHdA=0,∀ϕ∈H01(S),∫SHψdA+12∫S(∇sx)T∇sψdA−12∫∂Sncψds=0,∀ψ∈H1(S),S(0)=S0,∂S(t)=Γ,nc(x)=nc(Γ)(x),∀x∈Γ,whereHis the mean curvature vector ofS.The governing equation of the Mean Curvature Flow is(3){∂x∂t=Δsx,S(0)=S0,∂S(t)=Γ.The mixed variational form for the mean curvature flow is as follows (see  [28] for details): findx∈H2(S)3, such that(4){∫S(t)[∂x∂tϕ+(∇sx)T∇sϕ]dA=0,∀ϕ∈H01(S),S(0)=S0,∂S(t)=Γ.Eqs. (2) and (4) are solved using the finite element method (see Section  3) in the space defined by a hybrid surface subdivision scheme.The variational forms of the two adopted geometric PDEs are discretized in certain finite element function spaces. Here, we choose subdivision basis functions which are piecewise high-order polynomials. The superiority of using these high-order elements over traditional linear/bilinear elements is listed in the following.(i)If we choose the traditional linear elements to represent the geometric terms of our variational formulation of the Willmore flow, the mean and Gaussian curvatures will vanish. Hence the flow cannot be correctly represented, and thus it cannot be correctly discretized.The basis functions of the space defined by Loop’s and Catmull–Clark subdivision have the compact support within 2-ring neighboring vertices, which is stronger than the support of the hat basis functions (within 1-ring neighboring vertices). Due to this reason, for linear elements, tiny surface patches will yield very small elements in the matrix of the discretized linear systems, which makes the numerical condition of the systems worsen.High-order elements can essentially represent surfaces more accurately than the traditional linear/bilinear elements. With finite dimensional high-order smooth functions instead of linear elements, related quantities such as gradients, tangents, normals and curvatures can be computed directly and exactly. The framework of using high-order smooth basis functions allows us to trade off accuracy and speed with computational complexity.Curvature continuous surface can be achieved except the local region around extraordinary vertices, where the surface isC1-continuous (see  [3,4]). While for linear/bilinear elements, the surface continuity isC0.In the following subsections, we describe how the finite element space is defined, and how to evaluate the surface and finite element basis functions.Let{x1,…,xn1}be the vertex set of the control mesh. We associate each control vertexxiof the surfaceSwith a basis functionϕiwhich depends upon the mesh local topology aroundxi, and is independent of the vertex positions. The basis functionϕiis defined as the limit function of the hybrid subdivision scheme and it takes 1 at vertexxiand 0 at all other neighboring vertices. Hence the support ofϕiis local and it covers the 2-ring neighborhood of vertexxi.Let{x1,…,xn0}(n0≤n1)be the set of all the interior vertices. Then we define the following two finite element spaces to represent the subdivision surface and its mean curvature, respectively,Eh(0)=span{ϕ1,…,ϕn0},Eh(1)=span{ϕ1,…,ϕn1}.The unknownsxandHin Eqs. (2) and (4) are represented as(5)x(t)=∑j=1n0ϕjxj(t)+∑j=n0+1n1ϕjxj,(6)H(t)=∑j=1n1ϕjHj(t),wherexj(t)∈R3(j=1,…,n0)are the unknown interior vertices,xj∈R3(j=n0+1,…,n1)are the fixed boundary vertices, andHj(t)∈R3(j=1,…,n1)are the unknown mean curvature normals.Substituting (5) and (6) into (2) and (4), respectively, by takingH01(S)=Eh(0)andH1(S)=Eh(1), we obtain two linear systems (see  [28,29]). The computation of the matrix elements involves integration over boundary curves and surface patches. The boundary curves are cubic splines over equidistant knots. The integrations on these curves are computed by 4-point Gaussian quadrature formulas. The integration over surface is computed as a summation of the numerical integrations of Gaussian quadrature formulas over surface patches (see Section  3.4). Each surface patch is defined locally by its control vertices and their 1-ring neighboring vertices; therefore the bandwidth of the coefficient matrix in the linear systems is the number of 3-ring neighbors. For each time step of the evolution, the systems need to be updated since the surface is changed. However, the values of the basis functions do not need to be recomputed. We speed up our PDE evolution through pre-computing basis functions and storing them in a data structure.The control vertices of the hybrid mesh are classified as boundary vertices, sub-boundary vertices and interior vertices. Edges are tagged as boundary edges, sub-boundary edges and interior edges. Boundary edges are at the boundary of the control mesh in general, but they could also lie in the interior of the mesh and are called sharp features. The sub-boundary edges are the ones that are not boundary edges but incident to boundary vertices. The remainders are called interior ones. Then patches can be named as boundary patches, sub-boundary patches and interior patches. The patches containing boundary vertices are named as boundary patches. The ones adjacent to the boundary patches are called sub-boundary patches. All the others are called interior ones.To handle a control mesh consisting of triangles and quadrilaterals, we need a hybrid subdivision scheme. In this paper, we adopt a generalized hybrid subdivision algorithm proposed by Stam and Loop (see  [32] for the algorithm details) that unifies the well-known Loop’s and Catmull–Clark subdivision schemes and results inC1subdivision surface everywhere except at the boundaries. The subdivision scheme is a linear and local refinement algorithm. It includes the rules of vertex recomputation, edge insertion points and additional face insertion points only for quadrilateral patches. Rules of vertex recomputation require that all old vertices of the refined mesh get new positions except boundary vertices to be fixed. Rules of edge insertion points require generating a new vertex on each edge where it needs to be redefined around boundary and sub-boundary edges (see  [10]). Only for quadrilateral patches, rules of face insertion points require generating a new vertex in the middle of each patch. Therefore, each quadrilateral is subdivided linearly into four sub-quadrilaterals, and each triangle is subdivided linearly into four sub-triangles.The limit surface of the hybrid subdivision consists of triangular and quadrilateral surface patches. An interior triangular patch, whose 1-ring neighboring patches are triangular and three control vertices have a valence of 6, can be exactly described by a quartic box-spline. We name such a patch as a regular patch. An interior quadrilateral patch, whose 1-ring neighboring patches are quadrilateral and the control vertices have a valence of 4, can be exactly described by a uniform bicubicB-spline. We also name such a patch as a regular one. In this paper, the finite element method only involves the surface evaluation of regular patches by bringing the integration knots into regular patches (see Section  3.5). The evaluations of the regular patches are described in the next subsection.Remark 1An important feature of the hybrid subdivision scheme (see  [32]) we adopted here is that at the boundaries (including interior boundaries), vertices of the refined control mesh are not related to the interior vertices of the original control mesh. Due to this reason, the basis functionsϕiat the interior vertices vanish at the boundaries. This feature is the basis for achieving sharp features in the subdivision surface.A regular triangular patch can be controlled by 12 basis functions (see  [4]):x(u,v)=∑i=112Ni(u,v)xi,where the labelirefers to the local numbering of 12 control vertices that is shown in Fig. 2(a). The basisNiare given as follows:N1=112(w4+2w3u),N2=112(w4+2w3v),N3=112[w4+u4+6w3u+6wu3+12w2u2+(2w3+2u3+6w2u+6wu2)v],N4=112[6w4+24w3(u+v)+w2(24u2+60uv+24v2)+w(8u3+36u2v+36uv2+8v3)+(u4+6u3v+12u2v2+6uv3+v4)],where(w,u,v)are barycentric coordinates of the triangle with vertices numbered as4,7,8, andw=1−u−v. We getN10,N6,N11,N7by replacing(w,u,v)by(u,v,w)inN1,N2,N3,N4, and getN9,N12,N5,N8by replacing(w,u,v)by(v,w,u)inN1,N2,N3,N4.A regular quadrilateral patch can be represented by 16 basis functions (see  [3]):x(u,v)=∑i=116Bi(u,v)xi,where the labelirefers to the local sorting of 16 control vertices shown in Fig. 2(b), andu,vare the barycentric coordinates of this shaded patch in Fig. 2(b). The 16 basis functionsBiareBi(u,v)=N(i−1)%4(u)N(i−1)/4(v),where “%” and “/” stand for the remainder and division respectively. The functionsNi(t)are the cubic uniformB-spline basis functions:N0(t)=(1−3t+3t2−t3)/6,N1(t)=(4−6t2+3t3)/6,N2(t)=(1+3t+3t2−3t3)/6,N3(t)=t3/6.The discretizations of Eqs. (2) and (4) lead to two linear systems. The matrix elements of these systems are computed as a summation of the numerical integrations over the unit triangle and unit square. These integrations are computed using the 4-point Gaussian quadrature formula. It is known that the algebraic precision of the 4-point Gaussian quadrature rules is three. Hence, the error isO(h4), wherehis the maximal edge length of the control mesh. In order to increase the precision of the numerical integration, the current control mesh needsktimes subdivision before the numerical integration, that is, the integration over each surface patch is computed by first dividing the patch into4ksub-patches, and then the 4-point Gaussian quadrature rule is used on each sub-patch.LetM(0)be the current control mesh andM(k)be the mesh afterktimes subdivision using the hybrid subdivision scheme described in Section  3.2. It is well known that the 4-point Gaussian integration rule has an error ofO(hk4)over each patch of the control meshM(k), wherehkis the maximal edge length ofM(k). Therefore, we take the numberkof the subdivision such that(7)hk4<ϵ,whereϵis a small value likeϵ=0.0001. Then we compute the Gaussian integration over each sub-patch after the initial subdivision.Remark 2In the error boundO(hk4)=Chk4, the constantCis unknown in general. In determining the numberkof subdivisions, we simply ignore the constant (means takingC=1). Furthermore, the error boundO(hk4)holds only for properly smooth functions. For the irregular surface patches, the smoothness isC1only. Hence, the determination of the subdivision numberkdoes not guarantee that the integration error is within the control boundϵ. A more elaborate integration scheme could be devised by subdividing each surface patch defined byM(0)locally and adaptively till the difference of the integrations on the patch is within a given threshold. However, the computational cost and the implementation complexity would be high. Therefore, we prefer to use a simple and fast integration strategy.Each sub-quadrilateral patch has only one old control vertex and three newly generated control vertices after each refinement step. To evaluate the surface and the basis functions exactly, we need to subdivide the surface repeatedly such that each Gaussian knot locates in a regular patch. Let us first consider a local parametrization of the sub-quadrilateral patch. We defineTasT={(u,v)∈R2,0≤u≤1,0≤v≤1}. The unit squareTin the(u,v)-plane may be used as a master element domain. Let the parameter coordinate of the old control vertex be(u,v)=(0,0). It is easy to see that the outside domain adjacent to the boundaries of the unit square domain with the parametric valueu=0orv=0can be quadrilateral, triangular or empty; however the outside sub-patch adjacent to the boundaries of the unit square domain with the parametric valueu=1orv=1is still quadrilateral. The parameter values(u,v)of the 4 Gaussian points for the numerical integration areq1,…,q4, which are listed in the second column of Table 1. Each Gaussian knot locates in a regular sub-domain (see Fig. 3(a) and (b)) after subdividing the unit square three times. The third column of Table 1 lists the sub-domains that contain Gaussian knots. The fourth column lists the local coordinates of the Gaussian knots with respect to the sub-domains that contain the Gaussian knots.Three sub-triangle patches have only one old control vertex and two newly generated control vertices; the remaining sub-triangle patch in the middle has three newly generated control vertices after each refinement step. Now we consider a local parametrization of the sub-triangle patch. We defineTasT={(u,v)∈R2,u≥0,v≥0,u+v≤1}. The unit triangleTin the(u,v)-plane may be used as a master element domain. For the three sub-patches respectively with only one old control vertex, we let the parameter coordinate of the old control vertex be(u,v)=(0,0). The outside domain adjacent to the boundaries of their unit triangle domain with the parametric valueu=0orv=0can be quadrilateral, triangular or empty; however the outside sub-patch adjacent to the boundaries of the unit triangle domain with the parametric valuew=0is still triangular. For the middle sub-patch, all of its three sub-patches adjacent to the boundaries are triangles. The parameter values(u,v)of the 4 Gaussian points for the numerical integration are chosen to bet1,…,t4, which are listed in the second column of Table 2. Each Gaussian knot locates in a regular sub-domain (see Fig. 4(a) and (b)) after subdividing the unit triangle three times. The third column of Table 2 lists the sub-domains. The fourth column lists the local coordinates of the Gaussian knots with respect to the sub-domains that contain the Gaussian knots.In summary, we have in fact proved the following lemma by using the above square and triangle patches.Lemma 1Subdividing the control mesh  3  times brings all the  4-point Gaussian knots over triangles and quadrilaterals into regular patches.LetK=k+3. Then we subdivide the current control meshKtimes and then evaluate the surface and basis functions. Now all the Gaussian knots are in regular patches. The subdivision surface and the basis functions can be evaluated exactly at the Gaussian knots using the formulas given in Section  3.3.Now let us summarize the algorithm steps. LetM(0)be the current control mesh andM(k)be the mesh afterktimes subdivision using the hybrid subdivision scheme described in Section  3.2.Algorithm outline(i)Subdivide the control meshM(0)repeatedly till condition (7) is satisfied, obtaining control meshM(k).On each surface patch defined byM(k), form the linear systems from discretizing Eqs. (2) and (4) as follows.(a)Subdivide the control meshM(k)3times, obtaining control meshM(K)withK=k+3.On each sub-patch, whose domains (domainsΩ22,Ω27,Ω72andΩ77for quadrilateral patches; domainsΩ22,Ω26,Ω62andΩ33for triangular patches) contain Gaussian knots, compute the related basis functions and their partial derivatives up to the second order.Compute the subdivision surface and its geometric entries that appear in Eqs. (2) and (4), such as curvatures, metric, at the Gaussian knots using the information of the basis functions and the control meshM(K).Compute the matrix elements in the linear systems.Solve the linear systems; then obtain a new control meshM(0).Stop the computation if the termination condition is satisfied, otherwise go back to step (i). The termination condition ismax1≤i≤n0‖xi(tk+1)−xi(tk)‖<ϵτ(k),whereϵis a given threshold value; we take it as 10−5.x(tk+1)andx(tk)respectively are the approximate solution at the timetk+1andtkwheretk+1=tk+τ(k).Remark 3To speed up the computation, basis functions and their partial derivatives up to the second order in step (ii)b can be pre-computed, since they are independent of the control mesh.Remark 4Through repeated subdivision using the hybrid method presented in Section  3.2, we bring all the Gaussian knots into regular patches that can be exactly and easily evaluated. This strategy avoids the evaluation of the basis function at irregular patches. For evaluation of a pure triangular subdivision surface or pure quadrilateral subdivision surface, fast algorithms have been proposed by Stam (see  [30,31]). The key step in the fast algorithm is the efficient evaluation of the eigenvalues of the subdivision matrixAvaround the vertex with valencev. The eigenvalues of the subdivision matrixAvhave been computed and stored in a data structure forv=3,4,…,500by Stam. However, for the hybrid control mesh, a similar fast algorithm has not been proposed yet. The main difficulty is that for each valencev, there are too many (about2v) combinations of triangles and quadrilaterals around each vertex. Our algorithm is not based on this kind of fast evaluation algorithm.Remark 5In the above algorithm description, we did not clearly address the issue of boundary conditions. One may wonder how the boundary conditions are satisfied. It is easy to observe that the boundary vertices are fixed in Eq. (5) and the basis functions at the interior vertices vanish at the boundary (see Remark 1). Hence, theG0boundary condition is automatically satisfied. Sharp features are achieved at the boundaries because the adopted subdivision scheme has such a property. For the Willmore flow, theG1boundary condition is satisfied because the boundary integration term∫∂Sncψdsis included in Eq. (2).Remark 6It should be pointed out that the construction algorithm can be used to solve other second order and fourth order GPDEs, such as averaged mean curvature flow, Gaussian curvature flow, surface diffusion flow, and quasi surface diffusion flow (see  [19] for more second and fourth order GPDEs). The control mesh could be pure triangular, pure quadrilateral or hybrid. Hence, the proposed method is quite general. However, it cannot be used directly to solve sixth order equations.The surface evolution process driven by geometric PDEs may produce very irregular mesh which results in ill-conditioned linear systems, and there even appears singular phenomena. A recent work  [33] considers the question whether the mean curvature flow can be modified to avoid the formation of singularities. In this paper we adopt mesh regularization to reduce the possibility of the collapse of geometric PDE evolution, and make our resulting surfaces with high quality. SupposeSis a piece of surface patch consisting of triangular and quadrilateral control polygons with fixed boundaries and inner sharp feature curves, we intend to regularize it by relocating its interior vertices on their tangential plane because the tangent movement does not change the shape of surfaces. LetA1be the sum area of all triangular polygons with the numberm1andA2be the sum area of all quadrilateral polygons with the numberm2. Denotea=234A1m1+A2m22,whereais the expected edge length if all triangles are equilateral and all quads are squares. We define the regularization energy asE(S)=12∑i=1n∑j∈N(i)(‖xj−xi‖−a)2,whereN(i)is the index set of all the 1-ring neighboring interior vertices ofxi. We relocate every interior vertexxiasxi→xi+ϵiΦi,Φi∈R3,i=1,…,n,for a givenΦi∈R3.E(S)can be denoted asE(S,ϵ1,…,ϵn). We have∂E(S,ϵ1,…,ϵn)∂ϵi|ϵi=0=∑j∈N(i)(‖xj−xi‖−a)ΦiT(xi−xj)‖xi−xj‖.We construct a system of two sets ofL2gradient flow to minimizeE(S)(8)dxidt+ei(l)(ei(l))T∑j∈N(i)(‖xj−xi‖−a)xi−xj‖xi−xj‖=0,i=1,2,…,n,l=1,2,whereei(1)andei(2)are the two tangential directions atxi. We discretize (8) asxi(k+1)+τei(l)(ei(l))T[∑j∈N(i)(‖xj(k)−xi(k)‖−a)xi(k+1)−xj(k+1)‖xi(k)−xj(k)‖]=xi(k),i=1,2,…,n,l=1,2.The initial value is chosen asxi(0)=xi.ei(1)andei(2)are computed using the surface data at the time stepk. We also use Saad’s iterative method (see  [34]), named GMRES, to solve this system. The time step-size is chosen to beO(h), wherehis the maximum length of the control mesh. The regularization step is stopped when the difference between the maximum and the minimum edge length is less than half of the minimum edge length. We show the effect of our regularization technology in Fig. 5. It is obvious that the control points in the surface patch become notably uniform through ourL2gradient flow action.In this section, we present several examples to illustrate that the proposed method is effective. Suppose we are given several boundaries and inner sharp feature curves which need to be interpolated for theG0boundary condition for the mean curvature flow, and additional co-normals on them as theG1boundary condition for the Willmore flow.Figs. 1, 6 and 7show three models designed by using the Willmore flow. TheG1boundary conditions are the inner sharp feature curves and the prescribed co-normals on them as shown in (a). The initial constructions are described in (b) where the model in Fig. 6 has randomly distributed tri–quad meshes. To show that the adopted geometric PDEs have the capability of improving the quality of the constructed surfaces, noises are added to the initial control meshes. The resulting subdivision PDE surfaces are shown in (c).The final shape of the constructed surfaces is determined by: (1) the boundary curves; (2) the co-normals at the boundary curves; and (3) the driven geometric PDE. It is well known that the Willmore flow minimizes the total squared mean curvature. Table 3lists the total squared mean curvatures of the initial surfaces and the final surfaces for each case. It is easy to see that the total squared mean curvatures are significantly reduced. One may wonder: could the total squared mean curvature be close to zero? Our observation is that the total squared mean curvature depends on how the co-normal is given. If the co-normals are given as the co-normals of the minimal surface, the total squared mean curvature will be close to zero. The total squared mean curvature is computed by the Gaussian quadrature described in Section  3.Playing with the co-normals at the boundary, the designers have an instrument to alter the surface shape to obtain the desirable design. However, sometimes specifying co-normals may not be an easy task for the shape designer, and a default choice of the co-normals is to take them as zeros. This implies that there is no normal control for the shape. In this case, the minimal surface will be the final surface. From Eq. (1), we know that a surface with zero mean curvature is indeed the steady solution of the Willmore flow.We present two examples for the mean curvature flow. The streamline architecture design has a distant origin and a long development in Chinese old architecture, which was especially embodied in the roof design. They are myriads of changes and full of magnificent carriage with the remarkable character of smooth curves and upturned eaves. The roof in Fig. 8resulted from the mean curvature flow, which is an outstanding Chinese old architecture, named Yueyanglou. In addition, we designed an outdoor pavilion; see Fig. 9. The pavilion consists of four parts which are open surfaces. We achieved four minimum surfaces by using the mean curvature flow. The boundary curves are given in (a). The initial construction result and the final PDE surfaces are shown in (b) and (c).Since the steady solution of the mean curvature flow is the minimal surface, the mean curvatures of the final surface are close to zero and the area of the surface is minimized. Table 4lists the area and the maximal absolute values of the mean curvature for the initial construction result and the final surface. It is easy to observe that the area is significantly reduced and the maximal absolute value of the mean curvature is close to zero. This verifies that the proposed method is effective. The area of the subdivision surface is computed by the Gaussian quadrature described in Section  3. The maximal mean curvature is approximated by computing the maximal mean curvature at the Gaussian knots.Table 5shows the time cost for the five models. We used C++ in the Linux system running on a Dell PC with a 2.4 GHz Q6600 Intel CPU. In this table, the second column shows the adopted geometric PDEs, and the third column is the number of triangular/quadrilateral patches. The fourth and fifth columns are the time cost (in second) for computing their corresponding basis functions and forming the coefficient matrix of the linear systems, respectively. The sixth column is the temporal step-size for geometric PDE evolution. The seventh column is the time cost of one step GMRES iteration, and the eighth column is the number of iteration steps to obtain the final results where the threshold is 10−5. We should mention that the computation in the fourth column is performed one time before the flow evolution, and the computation in the fifth column should be performed in every step of the flow evolution.We use the Willmore flow to show, in Fig. 10, the effect of our approach for different boundary conditions. The initial surface with a tri–quad topological mesh is rendered in (a). The boundary curves with different specified co-normals are rendered in (b), (c) and (d). Three different shapes of resulting surfaces which correspond to three differentG1boundary conditions are rendered (b′), (c′) and (d′). In (b) we do not specify the co-normals (zero co-normals) on the boundaries. From this example, we can see that setting the co-normals to zero is a desirable default because it removes the trouble of co-normal specification. The black curves rendered on the surfaces from(b″)to(d″)are the iso-curves of the mean curvature. The smoother the iso-curves, the more uniformly distributed the mean curvature. This example shows the power of our approach for the freeform shape design.In this paper we introduced a novel and unified hybrid subdivision geometric PDE method to design freeform surfaces containing both triangular and quadrilateral patches. Our method is efficient, and we can uniformly treat both outer boundaries and inner sharp feature conditions. We have successfully completed shape design and modification with the facilitation of geometric PDEs and boundary condition control. We believe that our research provides an efficient and advanced tool to design high-quality freeform surfaces. It can greatly give more freedom enriching the design space, and improve the control and quality of surface shapes.We do not give the convergence proof for our finite element method based on the subdivision technology which will be part of our future work. Moreover, it is important to further construct the subdivision surface using higher-order geometric PDEs in special industry manufacture, such as the design of car bodies and ship hulls. We intend to investigate how to use this subdivision finite element system to design aG2smooth surface in the future.

@&#CONCLUSIONS@&#
