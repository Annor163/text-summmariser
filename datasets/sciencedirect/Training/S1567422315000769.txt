@&#MAIN-TITLE@&#
E-services in e-business engineering

@&#HIGHLIGHTS@&#
This paper highlights the role of e-business engineering in e-commerce and e-business and its scope in computer and management science.The paper illustrates the interdependency between ICT and e-business market by their intricate interactions.New business model takes advantage of innovative technologies to create new market opportunity and new technologies are developed to meet the requirements of new business model.Some of hottest commodities in e-commerce in the current market are cloud service and Internet of services.This leads to the fast growing e-service marketplaces, but they cannot be managed and governed properly due to lack of methods to automate generation of service descriptions.The paper points out the research directions such as developing appropriate standardized service description and registry and proposing new AI based methods to achieve automated generation of service description for service discovery, selection and composition.

@&#KEYPHRASES@&#
E-business engineering,Electronic commerce,Methods advances,Research directions,Service-oriented computing,

@&#ABSTRACT@&#
E-business engineering involves the study of evolving IT technologies and management science approaches to revolutionise e-business models and behaviors, and the demands from new e-business activities that prompt the development of new technologies and to make progress on management methods. In this essay, the scope of e-business engineering is illustrated and its importance to e-business is highlighted. Service-oriented computing (SOC) was chosen among numerous related topics for further analysis due to its role in the increasing popularity of cloud services and Internet of services (IoS) as they are hot commodities in e-business and important enabling technologies for e-business. The focus of this state-of-the-art review is on two SOC core technologies: service description language and service registries for service discovery and composition. A number of key frameworks and developments in the area are discussed in terms of their pros and cons and their associated challenges in the fast growing e-services marketplace. This essay also points out future developments and research directions to meet the related challenges, such as the standardization of service description and directory modelling, and the automated generation of annotation based on semantics and domain ontology.

@&#INTRODUCTION@&#
The introduction of computer and information systems to business changed the way in which enterprises operate and manage their businesses, and have moved from paper-based manual operations to digitalised and automated processes. Inadequate traditional business management methods have led to the boom of business engineering, which focuses on the joint efforts of business management and information technologies (IT) researchers and entrepreneurs to develop innovative business solutions. They include new business models and processes to adaptive organization structure and culture (Davenport and Short 1990). With the emergence of the Internet, businesses and individual users have utilized the related technologies to expand their activities and business relationships with other individuals, groups and businesses. E-business is the term used to describe the administration of conducting businesses via the Internet (Damanpour and Damanpour 2001).E-business engineering has evolved from the aforementioned areas of business engineering and e-business, which also involve the study of computer science and management science. The methods of these disciplines have been leveraged to improve business processes and business models. They also have been applied to create innovative enabling technologies on the Internet to shape the future of IT-transformed enterprises, business commerce and government capabilities with computing.New IT breakthroughs have brought about the evolution of e-business, including the development of new marketing and sales channels, and rapid sense-and-respond capabilities for organizations. E-business engineering aims to offer new methods, models, systems, software applications, services, processes and businesses for modern enterprises to adapt to the changing computing paradigm and stay competitive in the challenging new environment with the aid of technology. The interdependency between technologies and the e-business market is exhibited by their intricate interactions (Lee and Phang 2015) as new business models take advantage of innovative technologies to create new market opportunities and new technologies are developed to meet the extended requirements of the new business models.An example is the Internet of Things (IoT). Business and individual users have adopted a growing number of IoT-enabled devices, and smart phones have become more popular and powerful too. These technologies have encouraged new approaches to supply chain management and courier services. They help to provide real-time information that allows decision-makers or businesses to visualize and monitor business processes and material flows anywhere and anytime (Lou et al. 2011).Security and insurance companies can deploy security alarm systems using low processing power chips and IoT devices (Ansari et al. 2015), for example, to monitor unoccupied houses or business premises, and to receive notifications when any abnormal motion or activity is detected. The system can automatically send photos and recorded videos to a cloud server, which can be remotely viewed and analyzed by the relevant personnel to make decisions. The business or individual user can use the services by purchasing an insurance policy and registering their devices with an insurance company over the web, to set up a guarantee to receive the services. A new business model is needed to determine business process, product and service price, quality of services and service boundary for the emerging market due to the new technologies.Researchers in e-business engineering are not only interested in mechanisms design and economic models, but they also have great interest in IT. This is a driving force that is shaping the e-business engineering landscape and the research directions that make sense to pursue. This has led to the changing themes over time in e-business engineering in the presence of technological evolution. This includes recent developments in: agent technologies for e-business (He et al. 2003, Si et al. 2007) big data technologies and data science (Chen et al. 2014, Stanton 2012) cloud computing (Mirashe and Kalyankar 2010) SOC (Chung and Chao 2007, Papazoglou and Georgakopoulos 2003) and virtual marketplace engineering. It also includes: IoT, mobile and pervasive commerce (Karagiannidis et al. 2009) security, privacy, trust, and credit; and software engineering for e-business. The recognition of technology progress in these themes has made great contributions to the maturity and expansion of e-business. Researchers from academic and industry in the last two decades have expressed an interest in the development of SOC based on web technologies also, and this is an important foundation to advance IoT and cloud computing to support further development of e-business.Web technologies, such as HTML5, AJAX and JASON, are important vehicles to deliver e-commerce (Andriole 2010). But they focus on technological advances – programming languages, communication protocols, web data access, and the evolution of the Internet – with little consideration given to the business issues. SOC utilizes existing web technologies and provides facilities to extend its capabilities. The issues addressed include workflow, high-level interfaces for functions, and standardized communication protocols for the enterprises and businesses to develop e-business applications by allowing services that are available on the web to be discovered and reused. This constitutes a new aggregated value-added service. In service-oriented architecture (SOA) and SOC, all resources, such as software, platforms, and physical machines in a physical or virtual pool, are modeled or instantiated as services that can be temporarily leased or allocated to those who subscribe to them (Tsai et al. 2010). They also can be released back to the pool when their use is completed.The number of services in the pool can be very large, the sizes of the services are varied, the behavior or functionality of services can be very complex, and the status of the services is dynamic. As a result, the supporting technologies for managing and governing such services are important to ensure that the quality of service (QoS) is up to standard.With the increasing number of services available on the web, an advance is that search facilities have been developed for service consumers to specify their required functionalities and discover services from registries. Their functionality is similar to a search engine that operates on the Internet. The consumer in this context can be human users or even machines. Platforms are necessary for service providers to publish and advertise their services, and so service consumers can locate them to successfully achieve matches with their computing needs.In addition, a descriptive language called the Web Services Description Language (WSDL) (Christensen et al. 2001) was developed some years ago. It represents the service functions by exposing externally-observable service behavior in input and output terms, and hiding their complex interactions. WSDL was specified by the Worldwide Web Consortium (W3C), and has been widely adopted. It provides standard and effective interfaces for services to increase their interoperability. However, WSDL lacks semantically-rich descriptive ontology annotation capabilities (Hohpe and Woolf 2004) and context information-based methods to facilitate automatic service discovery and composition (Da Silva et al. 2013).Semantic Markup for Web Services (OWL-S), proposed by W3C (Martin et al. 2004), is the first attempt to address automatic service discovery by providing semantics-based descriptions with additional mechanisms to model services. These include the profile of a service, so that its functions and characteristics can be published to a registry. It also encompasses the process model, which provides essential information for clients to interact with and control the operation of the service. The description also includes some grounding, which allows a service to interact with others via messages. A number of researchers (Roman et al. 2005) have adopted this approach to model services for automated composition. Although they have proved its usability, but other have recognized that this approach lacks the ability to model asynchronous communication and sufficient descriptions in its process model to support effective service composition.The Semantic Annotations for WSDL and XML Schema Semantic Annotations for WSDL and XML Schema (SAWSDL) (Kopecký et al. 2007) is a light-weight model compared with OWL-S. It extends attributes for the Web Services Description Language and XML Schema definition language to annotate WSDL components with its semantic models. These then can be defined as concepts outside the WSDL document. The advantage of this approach is a language-independent semantics-based modeling approach. Its disadvantage is that it requires a significant effort to develop a parser or interpreter for registries or client side services. This will allow it to take full advantage of SAWSDL annotations in service classification, discovery and matching.There are other semantics-based modelling approaches or frameworks too. They include: Yet Another Semantic Annotation for WSDL (YASA4WSDL) (Chabeb et al. 2009) the Web Service Modeling Ontology (WSMO) and the Semantic Web Services Language (SWSL) (Battle et al. 2005). They all have advantages and disadvantages, and are mainly designed for web services that cannot be used with the RESTful web services.The emerging RESTful web service (Zhao and Doshi, 2009) has become a popular alterative modelling method for services to support SOAP and WSDL-based web services. It is designed for easy use and operates with the web as a resource. It focuses on the management and transition of resource states.The Web Application Description Language (WADL) (Hadley 2006) is the most well-accepted description language for REST interfaces. It offers resource modelling tools for application development and visualization to analyse resource interlinks, generate code for the client and the server, based on a specified interface. It uses a portable format to configure both the server and the client. So it is goes beyond the functionality of a traditional descriptive language by providing extra functions for managing and modelling services. Others, for example, SEREDASj and SA-REST (Gomadam et al. 2010) with different characteristics and purposes, were proposed to model RESTful services to facilitate discovery and composition. These, however, do not have facilities to integrate with the domain ontology and the business aspects to increase service information exposure. So it is difficult to automate the process of service composition.The unified service description language (USDL) (Barros et al. 2012, Dustdar and Treiber 2006) is another standards initiative to enable service descriptions from the operational and technical angle, and for the business aspects of services. It is intended to fill the gap between different perspectives on services by providing common and unified service semantics, such as ownership, provisioning, pricing, and legal considerations. It is a promising standard, as a language-independent modelling approach with support from the semantic web and linked data. Its drawback is the lack of an automatic checking mechanism to ensure that the terms and semantics used in the descriptions are consistent and without conflicts (Slimani 2013).WSDL, OWL-S, and USDL are frameworks to describe individual services and their relationships, but services still need a registry or directory to be published, discovered, shared, and reused. Universal Description Discovery and Integration (UDDI) is the first XML-based registry for web services to advertise in the yellow or white-page style to enhance the likelihood of discovery. The services registered in UDDI can be invoked directly through other development tools or services for e-business applications also. E-business XML (ebXML) is another domain-specific service directory (Patil and Newcomer, 2003), with a standard mechanism for describing a business process and its associated information model. It includes business service interfaces for invoking business processes and business messages that are exchanged between their respective business services. These web service registry methods initially recommend a centralized approach with a single central registry, but this has a number of issues, such as performance and security. Distributed registries can overcome disadvantages of a single central registry in scalability, no single point of failure, and no performance bottleneck.The View-Based Integration of Web Service Registries (VISR) is a distributed registries approach based on peer-to-peer architecture and a community concept to manage registry information among multiple registries (Dustdar and Treiber 2006). A view is the core concept of VISR. It offers common light-weight web profiles for the corresponding services to form a unified global data model. The shared data model allows communication among registries to become more dynamic and flexible, as any new or updated information on services published by providers can be shared via notifications to services consumer who subscribe.The Distributed Registry by ExAMple (DREAM) (Baresi et al. 2016) is a light-weight distributed web service registry platform based on a publish-subscribe approach. It is intended to increase the interoperability among registry technologies with facilities to support UDDI, the ebXML Registry, and other registries. DREAM implements facets linked to WSDL descriptions to enable users of a service to create some additional facets and describe the service from their points of view.The advantage of introducing facets is that users can attach additional information to services. They may include ratings on customization and QoS information, for example. The information in these facets can be helpful to rank selected services in the service-selection phase. Other service registries, including the IBM WebSphere Service Registry and Repository (WSRR) and Zookeeper, are also available, but they do not provide semantics and annotation facilities to facilitate automation of service matching (Wang and Wang 2013).METEOR-S (Patil et al. 2004) is an ontology-based platform for the integration of distributed registries. It includes a lightweight web service description language (WSDL-S) that extends WSDL 2.0 service descriptions with semantic annotations to build peer-to-peer infrastructures for the publication and discovery of services (Chinnici et al. 2007, Mandel 2008). PYRAMID-S (Pilioura et al. 2004) is similar to METEOR-S based on meta-information that allows developers to use their own algorithms for the publication and discovery of services. Sivashanmugam et al. 2004 proposed an Extended Registries Ontology (XTRO). It inherits a number of features from METEOR-S to create registry federations. The authors also introduced the dimensions of distribution, autonomy and heterogeneity to registries to increase their modelling capability. The FUSION Semantic Registry (Kourtesis and Paraskakis 2008) and jUDDI+ (Colasuonno et al. 2006) are other semantically-enhanced service registries that build on the UDDI to improve its processing semantics. The semantics base approaches provide a foundation for automating the process of service discovery, ranking and selection. However, these approaches face a number of common issues.Even though they are mainly based on XML technologies to represent service description and directories, some also try to address incompatibilities among service descriptions and directory modeling. But these de facto specifications still need a standardized service description language or meta- language to accommodate their differences in heterogeneous service interfaces and advertisements in service directories for the automation of the discovery and composition of web services.The quality of the web service information is another concern in the market for e-services. It is difficult to maintain public service repositories, as there is the large amount of required information for service registration in the directories. They also lack control and governance over incomplete and inaccurate service descriptions. So the information in the service directories may not be accurate or consistent in the first place. This leads to reliability and legal issues in building and executing composite services. This issue has started to attract more attention, but it has not been fully explored yet. Also, interoperability across services from different providers is still not resolved due to their different marketing strategies and other issues with service migration protocols that are not standardized. At the moment, as a result, the existing frameworks only work in closed or private environments. So they can only be used with a limited number of service providers and consumers.A group of researchers has been addressing these issues. They have been looking into different aspects of the problem and have proposed a number of solutions. They include artificial intelligence (AI) and agent-based service selection and discovery methods, and service ranking. They also have been exploring matching based on non-functional matrices, such as QoS, trust and reputation, and the use of service-level agreements to bind contracts (Immonen and Pakkala 2014). Some of these approaches do not rely on a standard format of service description to locate or discover services (Al-Masri and Mahmoud 2008), but any update of the service status may be difficult to propagate due to ad hoc formats and the processing methods employed.This issue has become increasingly urgent as cloud services have gain traction and momentum in the e-services market around the world. The services that need to be considered include: software-as-a-service (SaaS), infrastructure-as-a-service (IaaS), platform-as-a-service (PaaS), and everything-as-a-service (XaaS). The service marketplaces supported by Windows Azure, Google Apps, Marketplace, AppExchange, and Force.com have become popular. As a result, a rapidly growing number of cloud services now are populating the content available in the market, and they have attracted many new users (Menychtas et al. 2014). The Internet of services (IoSs), extension of IoTs, are poised to take e-service markets to the next stage (Terzidis et al. 2012, Wahlster et al. 2014). These services need semantic descriptions to be generated in a consistent and timely way, and are not only functional interfaces. Consider JSR 181 for services meta-data as an example. Semantic descriptions support discovery, and automatic and accurate web service matching via contextual information and a rich set of QoS attributes. However, this research area has not drawn much attention to date from the related research communities of late: only a handful of researchers have produced works that address this issue.The METEOR-S Web Service Annotation Framework (MWSAF) uses a pre-classified domain ontology and its proposed algorithms can semi-automatically annotate WSDL (Patil et al. 2004). The ASSAM WSDL annotator (Heß et al. 2004) enables the user to semantically annotate a web service using a point-and-click interface. The key feature of ASSAM is the ability to suggest which ontological class to use to annotate each element in the WSDL. The recommendations are based on a machine learning algorithm. Similar to MWSAF, Alexandros and George (2010) use a domain ontology and WSDL to generate WSDL with annotation; it also has a mapping approach which combines various existing methods to recommend the services.The works that have been discussed to this point in this essay have taken some first steps to overcome the problem of the automatic generation of service descriptions with semantics. The automatic generation of semantic base service descriptions remains a key challenge for more effective service discovery. They can only generate service descriptions that comply with the specific language and service registry they have selected. The standardization of service description languages and service registries will ultimately support automated semantic base service descriptions and their interoperability, but they will not complete the work that needs to be accomplished to create more effective web services.A standardized and well-accepted semantic base service description specification to define service interfaces must include functional and non-functional information for service invocation, discovery, selection and composition. These are key elements to improve the presentation of service quality. Various specifications and frameworks have been proposed, but they are not consistent and compatible. So a more unified specification for semantic base service description is required to resolve their differences. According to the specification, each vendor can develop its own generator or compiler to produce the effective corresponding code. IDL in CORBA, proposed by the OMG consortium for producing distributed objects, is such an example. It can be adopted to develop a common set of elements for a standard semantic base service description language. Service descriptions that are generated with annotation can provide rich semantic information for service directories.From the discussion in the previous sections, it is clear that there is incompatibility among the frameworks and approaches for modelling service directories. The solution to this issue can share the idea proposed for the standard semantics-based service description language. This is a standard framework for a service directory to advertise and publish its services in a consistent, comprehensive and semantically-rich manner. Service consumers can search their desired services with the same mechanism from multiple service directories in a single request. This also requires cooperation between industry and academia to recommend a semantically-rich and well-defined framework.Manually adding descriptions for services and their publication can be an error-prone and time-consuming task that cannot meet the demands from a fast growing and dynamic e-services market. The unreliable and inaccurate service descriptions hinder its development. Automatically generating them makes it possible to mitigate these issues. The standardization of service descriptions and directories is a first step toward the automation of their generation. Services are normally designed or used for specific domains, so they are likely to be domain-dependant. Domain ontologies are needed to provide a coherent and context-rich environment and method. This will support discovery and intelligent approaches based on artificial intelligence to classify services to facilitate service matching. From the above discussion though, room for improvement in AI-based automatic service descriptions generation will require researchers to develop more domain ontologies, and also design more effective machine learning methods for semantic expression, classification and matching.

@&#CONCLUSIONS@&#
