@&#MAIN-TITLE@&#
An integrated approach for earthwork allocation, sequencing and routing

@&#HIGHLIGHTS@&#
An integrated earthwork allocation, sequencing and routing problem was solved.The solution approach is graph theoretic. A digraph models the dynamically changing terrain.The digraph is continually altered and is evaluated to quantify the real cost and effort of haulage.Parallel processing of the digraph is very effective and greatly reduces computational time.Solutions are constructed by advanced constructive algorithms and meta-heuristic techniques.

@&#KEYPHRASES@&#
Earthworks,Road design,Terrain modelling,Meta-heuristics,

@&#ABSTRACT@&#
Planning techniques for large scale earthworks have been considered in this article. To improve these activities a “block theoretic” approach was developed that provides an integrated solution consisting of an allocation of cuts to fills and a sequence of cuts and fills over time. It considers the constantly changing terrain by computing haulage routes dynamically. Consequently more realistic haulage costs are used in the decision making process. A digraph is utilised to describe the terrain surface which has been partitioned into uniform grids. It reflects the true state of the terrain, and is altered after each cut and fill. A shortest path algorithm is successively applied to calculate the cost of each haul, and these costs are summed over the entire sequence, to provide a total cost of haulage. To solve this integrated optimisation problem a variety of solution techniques were applied, including constructive algorithms, meta-heuristics and parallel programming. The extensive numerical investigations have successfully shown the applicability of our approach to real sized earthwork problems.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
An earthwork planning problem, consisting of cut to fill allocation, routing and sequencing has been considered in this article, and a new modelling and solution approach has been developed. This planning problem is a necessary task in linear infrastructure projects due to their large size and their great cost. Additional motivation for this research also arises from current concerns over the environmental impact of earthworks. Our approach can reduce the environmental impact via the reduction of fuel consumption and emissions. This is accomplished by using a fuel consumption proxy in our objective function and by identifying shortest path/smallest cost routes. Our approach provides a significant improvement over previous approaches which are not as accurate or detailed. It can be extended easily, for example by incorporating additional technical conditions and constraints.As this problem involves integrated decision making, sequencing, and has an objective function with non-static costs, a traditional analytical approach was avoided. Simulated Annealing and Evolutionary Search have therefore been exploited. The fact that more accurate fuel consumption metrics exist, that are quite non-linear and non-deterministic, has also contributed to our choice of approach. Furthermore we have taken into account the large number of blocks that could be present in an actual earthwork project and the intractability of the associated assignment and sequencing model.This article is significant and innovative in a number of ways. The partitioning of the project site into discrete blocks (i.e. containers of earth) and the development of a block theoretic formulation for this integrated earthworks planning problem, is an approach yet to be reported in the literature. It differs greatly from the approaches proposed in our earlier articles. As most previous calculations for determining the cost of haulage are static and do not necessarily reflect the real terrain after cutting and filling activities have begun, our modelling and evaluation approach is also novel. The application of our approach has shown that the main computational difficulty is the necessity to evaluate the terrain graph repetitively and chronologically. The objective function however can be evaluated in parallel; this requires multiple surface graphs to be constructed and we have demonstrated how to do this. The additional computational effort to construct these graphs was shown to be acceptable and numerical investigations have shown a remarkable reduction when this parallel approach is used. This means that very large earthworks problems can now be solved.Many further improvements are also possible and could vastly reduce computing times, and could vastly increase the size of problems, for example by considering much smaller blocks. In our implementation, and during the optimisations, a complete solution evaluation was always performed after each solution perturbation. Some perturbations however, alter the solution in a minimal fashion and in retrospect it makes no sense to re-evaluate the entire solution in those situations, but to only re-evaluate the affected parts. The benefit of an improved re-evaluation approach will be a huge reduction in the number of times the shortest path algorithm must be called. This could provide a significant reduction in computational time. Preliminary investigations have shown that the opportunity to do this is far greater for SA, as in EA too many parts of the solution are altered. The cost of each haul and the state of the terrain after each cut–fill should be recorded to facilitate a new approach for solution re-evaluation. The identification of the affected areas is a source of future research and the details will be different for each of the perturbation operators.Another avenue is to use dynamic algorithms, that are compared in Demetrescu, Frigioni, Marchetti-Spaccamela, and Nanni (2001), that are able to update the shortest path information after arc insertions and deletions and weight updates of arcs. In theory this could also reduce the computational overhead. For objectives that introduce negative arc weights, a quicker single source shortest path algorithm is required as the overhead of the Bellman–Ford approach is prohibitive. The article of Cantone and Faro (2014) describes an approach. In this article the scaling of arc weights has been investigated, as an exact approach in the right circumstances, or as a fast heuristic in other situations. In our opinion scaling is sufficiently accurate for practical purposes and provides a strong measure of the real cost of haulage. In this article scaling is consistent for the work metric and standard grid structures.In this article the integrated solution consisted of an assignment of cuts to fills and a sequence of cut–fill pairs. An additional requirement to select how much material is moved between blocks could also be included. This was outside the scope of the paper and is a source of future research and testing. It should however be pointed out that the solution representation for this situation would be as follows:S={(b,b′,q)|b∈B-,b′∈B+,q⩾0}, where q is the amount shifted between block b and b′ in each cut–fill pair. As a consequence of this extension, cut to fills could occur multiple times within the sequence and each pairing “occurrence” could have a different haul amount. Solution infeasibility may also occur if the sum of the hauled amounts, over multiple occurrences of each cut–fill pair, is not satisfied. There are many ways to resolve these types of infeasibilities. Though straightforward, the added computational burden of applying these corrective measures, repeatedly within optimisation routines, is undesirable, but perhaps unavoidable.It should also be noted that multiple cuts and fills can be performed concurrently in practice. An approach for haulage evaluation, in this situation, is relatively straightforward, given that the original sequence is divided into sub sequences in the following way: S=⋃k=1,…,KSkwhereSk={(b,b′)|b∈Cut,b′∈Fill}, and Sk≺Sk+1. In other words Skis the set of cut–fills that occur concurrently. Each cut and fill block must occur in only one of the sets Sk. This approach requires that a specified number of shortest path problems be solved before each graph update. The required number is ∣Sk∣ and each graph update would make the moves given in set Sk. Hence there will be K updates of the digraph. It should be pointed out that concurrency opportunities can be identified from a current sequence solution. Two cut–fill pairs (say (ci,fi) and (cf,fj)) are concurrent if the shortest path between each cut and fill (i.e. path (ci,fi) and path (cf,fj)) is not affected by the order in which the cuts and fills are performed. In other words the change in elevation at the cut and fill positions does not affect the shortest path or its value.