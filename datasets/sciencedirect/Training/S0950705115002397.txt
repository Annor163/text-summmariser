@&#MAIN-TITLE@&#
MEdit4CEP: A model-driven solution for real-time decision making in SOA 2.0

@&#HIGHLIGHTS@&#
A model-driven approach has been proposed for integrating CEP with SOA 2.0.A graphical modeling editor has been provided for CEP domain definition.A graphical modeling editor has been supplied for event pattern definition.Code can be automatically generated from the graphical modeling editor.A novel solution has been proposed to bring CEP technology closer to any user.

@&#KEYPHRASES@&#
Decision making,Complex event processing,Model-driven development,Graphical modeling editor,SOA 2.0,

@&#ABSTRACT@&#
Organizations all around the world need to manage huge amounts of data from heterogeneous sources every day in order to conduct decision making processes. This requires them to infer what the value of such data is for the business in question through data analysis as well as acting promptly for critical or relevant situations. Complex Event Processing (CEP) is a technology that helps tackle this issue by detecting event patterns in real time. However, this technology forces domain experts to define these patterns indicating such situations and the appropriate actions to be executed in their information systems, generally based on Service-Oriented Architectures (SOAs). In particular, these users face the incommodity of implementing these patterns manually or by using editors which are not user-friendly enough. To deal with this problem, a model-driven solution for real-time decision making in event-driven SOAs is proposed and conducted in this paper. This approach allows the integration of CEP with this architecture type as well as defining CEP domain and event pattern through a graphical and intuitive editor, which also permits automatic code generation. Moreover, the solution is evaluated and its benefits are discussed. As a result, we can assert this is a novel solution for bringing CEP technology closer to any user, positively impacting on business decision making processes.

@&#INTRODUCTION@&#
Nowadays, organizations all around the world need to manage huge amounts of data from heterogeneous sources every day in order to conduct decision making processes. Decision making is the process by which one action is chosen among others based on the additional benefits it can provide us with [1]. To be successful, a decision making process requires, among other factors, prompt information regarding what the value of such data is for the business in question. A thorough analysis of data, as well as fast reaction for critical or relevant situations, will allow the organization to be positioned above its competitors [2]. Nevertheless, it is a complex process since, among other reasons, data are heterogeneous – they do not share a common format – and they should be processed in real time. Therefore, a computerized decision support system may help human beings make real-world decisions [3,4].In this context, Complex Event Processing (CEP) [5] is a technology that allows the analysis and correlation of large volumes of data with the aim of detecting complex and meaningful events and of inferring valuable knowledge for end users. This knowledge will be really helpful in the decision making process. In order to do this, so-called event patterns are used. These patterns specify which conditions must be met in order to detect such situations of interest.Despite the great advantages that CEP can bring to a business, it is a substantial challenge for users who are business experts, but do not have the necessary experience and they lack knowledge of how this technology is used. One of the main problems these users have to face is precisely the definition of these event patterns using particular languages, those called Event Processing Languages (EPLs). Although some current software solutions provide graphical tools in order to solve this problem [6–8], none of them are user-friendly enough, since they require users to hand-write at least a portion of the code for pattern definition.On the other hand, current information systems tend to be based on Service-Oriented Architectures (SOAs) due to the fact that this type of software architecture allows the development of highly scalable distributed systems as well as their integration with own and third-party systems. These are being combined with Event-Driven Architectures (EDAs), known as Event-Driven Service-Oriented Architectures (ED-SOAs or SOAs 2.0) [9]. The latter enable us to establish decoupled communications between users, applications and services. The integration of CEP with SOA 2.0 is required to be able to detect real-time, relevant or critical situations in these complex and heterogeneous systems, as well as for the execution of appropriate actions.In order to respond to these needs, in this paper, we propose MEdit4CEP1https://ucase.uca.es/medit4cep/.1, a model-driven solution for real-time decision making in SOA 2.0. The main aim of our proposal is to make domain experts’ tasks of defining both event patterns to be detected and alerts for real time notification easier, hiding all implementation details from them.More specifically, our solution is composed of a model-driven approach for CEP in SOA 2.0 together with both a graphical modeling editor for CEP domain definition and a graphical modeling editor for event pattern and action definition as well as code generation. The key feature of our event pattern editor is its ability to reconfigure itself for different CEP domains, modeled by domain experts. The fact that the editor can reconfigure the tool palette dynamically from different CEP domain models allows users to enjoy a graphical interface adapted to the specific context required. Our proposal has been evaluated and discussed not only through the development of a case study but also by comparing it to other existing ones. As a result, we can assert that this is a novel solution for bringing CEP technology closer to any user, positively impacting on the decision making process.The remainder of the paper is organized as follows: Section 2 includes background on Model-Driven Development (MDD), SOA 2.0 and CEP, and describes related work. Section 3 overviews our model-driven approach for CEP in SOA 2.0. Afterwards, Section 4 presents our graphical modeling editors for CEP domain and event pattern definition, and Section 5 describes our proposal for integrating CEP with SOA 2.0. Then, a case study for network security is conducted in Section 6. Finally, our approach and graphical editors are evaluated in Section 7, followed by conclusions and future work discussed in Section 8.Background information and an overview of related work are provided in this section.

@&#CONCLUSIONS@&#
In this paper, we have proposed and implemented a model-driven solution that enables the integration of CEP with SOA 2.0, thus preventing end users from having to learn the technologies required for the detection of relevant or critical situations and decision-making in real time.In particular, a CEP domain can be modeled at design time. This model can be manually created by a domain expert using our CEP domain graphical editor described in this paper, or it can be automatically inferred from the events flowing through the SOA 2.0 to which this editor is connected. From the modeled CEP domain, users will be able to model patterns about situations of interest to be detected as well as actions to be performed by using the event pattern graphical editor also unveiled in this paper. Subsequently, these event pattern models will be automatically validated and transformed into code, which will be deployed in a CEP engine and an ESB at runtime, making these tasks transparent to users thanks to the use of model-driven techniques.Regarding the advantages provided by our CEP domain editor, it supports the unification of CEP domain description (event types and properties) by using models, hiding the implementation details necessary to define such domains from domain experts. Additionally, these models can be shared and reused by other domain experts.Besides, one of the most relevant contributions offered by our event pattern editor is the possibility of modeling event patterns regardless of their implementation. Thanks to the use of model-driven techniques, every event pattern is graphically designed once and it can then be automatically transformed into any specific error-free EPL code, such as Esper EPL, StreamSQL or CCL, as well as into any error-free action code to be executed, such as XML. The fact that the editor is able to reconfigure the tool palette dynamically from different CEP domain models will enable users to enjoy a graphical interface adapted to the specific context required.As a result, we conclude that our model-driven solution facilitates for any user, neither a programmer nor CEP expert, the graphical definition of situations of interest for a specific domain and their detection from real-time information flowing through complex and heterogeneous systems.Concerning our future work, we consider a relevant issue to extend the editor with the ability to recommend event patterns in a semi-automatic way. This will allow end users to create new patterns by reusing other event patterns, which will be suggested by the editor itself from the analysis and interpretation of existing pattern usage statistics. Another research work to be developed in the future is the dynamic generation of event patterns from the information in the form of events, which flow through the organization’s information systems. This fact would enable users not to have to design event patterns from scratch, but simply make some modifications on them, saving time when modeling event patterns, particularly when a large number of them have to be defined for an application domain.So far, our model-driven solution has only been evaluated in the research and academic world. Also as future work, we intend to apply it in the industry with the purpose of checking business experts’ acceptance and satisfaction levels. Given the scalability and independence of the CEP domain in which the proposed approach is applied, as well as the functionality and usability of our graphical editors, the industry is expected to welcome this research.