@&#MAIN-TITLE@&#
Simultaneous topology and sizing optimization of a water distribution network using a hybrid multiobjective evolutionary algorithm

@&#HIGHLIGHTS@&#
Numerical scheme for multiobjective simultaneous topology and sizing design of pipe networks.Network repairing technique for dealing with an illegitimate network topology.New hybrid multiobjective evolutionary algorithm.Performance comparison based on a hypervolume indicator.

@&#KEYPHRASES@&#
Hybrid differential evolution,Pipe network,Population-based incremental learning,Topology optimization,Water distribution systems,

@&#ABSTRACT@&#
This paper proposes a new direction for design optimization of a water distribution network (WDN). The new approach introduces an optimization process to the conceptual design stage of a WDN. The use of multiobjective evolutionary algorithms (MOEAs) for simultaneous topology and sizing design of piping networks is presented. The design problem includes both topological and sizing design variables while the objective functions are network cost and total head loss in pipes. The numerical technique, called a network repairing technique (NRT), is proposed to overcome difficulties in operating MOEAs for network topological design. The problem is then solved by using a number of established and newly developed MOEAs. Also, two new MOEAs namely multiobjective real code population-based incremental learning (RPBIL) and a hybrid algorithm of RPBIL with differential evolution (termed RPBIL–DE) are proposed to tackle the design problems. The optimum results obtained are illustrated and compared. It is shown that the proposed network repairing technique is an efficient and effective tool for topological design of WDNs. Based on the hypervolume indicator, the proposed RPBIL–DE is among the best MOEA performers.

@&#INTRODUCTION@&#
A piping or water distribution network is one of the most important engineering systems found in daily life. The network normally consists of pumps, tanks, reservoirs, valves, and other devices interconnected by pipes for providing water to the public. It can be viewed as a graph having pipes as links while nodes represent sources, consumers, pipe connections, and hydraulic control elements. Piping network design can be classified into three phases as conceptual, preliminary and detailed design. These are not completely separated design phases since we can sometimes perform several design phases simultaneously. The conceptual design is usually accomplished in such a way that a network topology (layout) is defined based on the premise that a network with loops will become more reliable and more expensive whereas one with branches will be less reliable but cheaper [1,2]. The network topology is also dependent on many restrictions such as households, roads, and other obstructions.Having obtained a predefined network layout, network parameters e.g. pipe diameters, tank and pump sizes, are determined to meet the optimum design objectives while fulfilling network constraints. Optimal pipe sizing of WDN has been investigated for many years. The optimization problems for pipe networks can have either single [1,3–9] or multiple [1,10–13] design objectives. A typical single-objective design problem is assigned to find a minimum network cost while nodal heads are constrained ensuring that the network is sufficiently reliable. Since Walski in 2001 [14] and other researchers illustrated that minimizing the network cost will reduce network benefits (reliability) or vice versa, it means there are multiple design objectives to be optimized for one WDN. This study leads to a new direction for the preliminary design of WDN. Network reliability can be defined as the ability of a network system to provide adequate performance under both normal and abnormal conditions [15]. Some work has been made towards network reliability models due to mechanical and hydraulic failures [4,16–20]. The network simulation by means of head-driven analysis has been proposed so as to make up for the shortcomings of the demand-driven model [15,20,21]. The criteria used to measure network reliability for use in an optimization process have been defined. The minimum surplus head index was probably the first reliability index proposed for an optimization process by Walski and Gessler in 90s [22]. Later, there have been other indices proposed for measuring the WDN reliability e.g. the total surplus head index [22], the resilience index [10], and the network resilience [2]. As for the optimizers, gradient-based linear and nonlinear optimization methods were implemented in the early years [4]. The use of evolutionary algorithms has later become more popular and attractive due to their robustness, simplicity and universality [1–3,10–13].Some work related to the more practical detailed design and analysis of WDNs has been made. The network connectivity/topology analysis [23] as well as the algorithm for an automatic detection of topological changes in WDN due to abnormal operating conditions [15] has been developed. As the real network system uses valves to isolate some segments from the network, the impacts of valve location and distribution on the network in both normal and abnormal conditions have been studied [24–27].From the above-mentioned literature, considerable progress has been made towards the preliminary and detailed design stages of WDN but there has been limited work contributing to the use of optimization techniques to find optimum WDN layouts at the conceptual design stage. However, in other engineering fields, it has been found that the application of topological optimization at the conceptual design stage usually leads to better design results e.g. communication networks [28], internet topology [29], and artificial neural networks [30]. In practice, a network topology is normally formed by an experienced design engineer. If implementation of topology optimization on water distribution networks is possible, it means even inexperienced designers can perform a design task whereas practical and high performance network topology can be expected.This paper presents a new approach for optimizing WDNs at the conceptual design stage. Multiobjective evolutionary algorithms are employed to find initial WDN layouts by means of simultaneous topological and sizing optimization. This design approach is said to combine and carry out the conceptual and preliminary design stages of WDNs within one simulation run. Design of piping networks using multiobjective evolutionary algorithms is demonstrated. The design problem includes both topological and sizing design variables while the objective functions are network cost and total head loss in pipes. The numerical technique, called a network repairing technique, is proposed to overcome difficulties in operating MOEAs for network topology optimization. The design problem is then solved by using a number of MOEAs, i.e. version two of strength Pareto evolutionary algorithm (SPEA2) using real codes [31], version two of non-dominated sorting genetic algorithm (NSGAII) using real codes [32], multiobjective particle swarm optimization (MPSO) [33], unrestricted population size-evolutionary multiobjective optimization algorithm (UPS-EMOA) [34], and multiobjective harmony search (MOHS) [35]. Apart from those state-of-the-art MOEAs, two new multiobjective meta-heuristics RPBIL and RPBIL–DE are introduced. The former is based on real code population-based incremental leaning [36] while the latter is a hybrid algorithm that integrates the operator of RPBIL and DE. The Pareto optimal solutions obtained from the various MOEAs are illustrated and compared. The comparative performance of MOEAs is investigated. Based on the hypervolume indicator, the proposed hybrid optimizer RPBIL–DE is among the top performers. The proposed network repairing technique is an efficient tool for topological design of water distribution networks.The rest of the paper is organized as follows. Section 2 briefly details a simultaneous topology and sizing optimization of pipe networks. The network repairing technique used to deal with illegitimate design solution is explained in Section 3. Section 4 presents a new hybrid multiobjective evolutionary algorithm which is the combination of RPBIL and DE. Design demonstration and performance assessment of various MOEAs are setup in Section 5 whereas the comparative results are given in Section 6. Finally, the conclusions are drawn in Section 7.In practice, a pipe network is designed by taking into account economics, safety, maintenance and public health. The common design criteria include network cost and reliability, redundancy [21], total head loss in pipes, water quality, network infrastructure etc. The optimization process is not only applied to the design of a new network but also used in the rehabilitation of an existing network. Network cost is an unavoidable design objective for many engineering systems. For pipe network design, minimizing cost always affects network reliability; therefore, practical network design needs to simultaneously minimize cost and maximize reliability. Several indicators are proposed for measuring pipe network reliability such as network resilience [2], and total head loss in pipes.A multiobjective optimization problem used in this work can be written as:(1)minx:{f1,f2}subject toFi(H,D)=0;i=1,…nnHi≥Himin;i=1,…nnwherexis a design vector determining a network topology and pipe sizes, f1 is the total network cost, f2 is the total head loss in the network, Hiis the head at node i, andHiminis a minimum allowable nodal head of node i. The hydraulic constraints Fi(H,D) are nodal mass balance, and loop or path energy balance equations, which can be handled by using the EPANET 2 software. The objective functions can be computed as:(2)f1=∑i=1npCosti(Di,Li)f2=∑i=1npLihi(Di)where Costiis the cost of pipe i, Liare pipe lengths, hiare head loss per unit length, and Diare the discrete pipe sizes.In order to achieve a simultaneous topological and sizing optimization, the predefined nodes, links, and other network conditions are assigned. Fig. 1shows a particular 9-node network having 3×3 junctions and one tank. Then, the ground network containing all possible pipe elements connecting between nodes in the network is generated as shown in the figure. This ground network has 21 pipes where pipe 21 linking node 9 and the tank is not assigned to be a design variable. The design variables determine the 20 pipe diameters while the list of available pipe diameters, their corresponding prices, and the encoded integers is given in Table 1. The diameter of the 21st pipe is fixed as 300mm.Figs. 2 and 3illustrate how the proposed decoding technique works. In Fig. 2, the vector of integer design variables isx1={1, 1, 1, 4, 2, 3, 3, 1, 1, 3, 1, 1, 1, 2, 4, 2, 1, 1, 4, 1}T. It can be seen that pipe elements having an integer ‘1’ as a diameter identification number are removed from the ground network whereas the others represent the existing pipe elements with various diameters. By using this concept, a network topology is obtained. A difficulty arises when most pipe diameters become zeros as shown in Fig. 3 wherex2={3, 2, 1, 4, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}T. The obtained network topology has three disconnected pipe groups and one junction having no links to the others. Such a network is said to be unfeasible since the network analysis via EPANET cannot be accomplished. This illegitimate solution needs to be repaired so that it is usable; as a result, a numerical scheme called a network repairing technique is proposed.According to the design solution in Fig. 3, the network needs to be repaired to enable a pipe network simulation (demand-driven analysis). The term network repairing technique is borrowed from the technique called chromosome repairing technique [37]. Although having a similar name and the same purpose of use, which is to make an unacceptable design solution become solvable, they are totally different in details and computational procedures. The process of repairing a water distribution network consists of two main stages: the first stage is used to repair nodes that have no links or isolated nodes while the second stage is used to repair disconnected pipe groups.Initially, the ground network is created from the predefined junctions. The closest neighbor of every junction needs to be identified, which means its neighbor pipe element is obtained. Fig. 4shows 9 junctions of the 9-node network from the previous section and their neighbor pipe elements where Eistands for the neighbor element of the ith junction. It should be noted that all the junctions must have different neighbor elements. As an isolated node is detected, its neighbor element (10th element) with 100mm diameter is added to the network and the input design solution is changed to bex3={3, 2, 1, 4, 2, 3, 1, 1, 1,2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}T. The new network is shown in Fig. 5, which has 3 disconnected pipe groups.The second repairing task is to connect all disconnected pipe groups to become one group. From Fig. 6, at the beginning, the algorithm to find the total number of pipe groups is activated. The primary pipe group is the group that contains the element which links to the tank as shown (Group 1). The secondary pipe group (Group 2) which is the closest group to the primary group is then detected and linked together by adding the pipe element that connects the closest nodes of the two groups. In this process, the node 4 of the primary group and node 5 of the secondary group are linked together by adding to the network the 3rd element with 100mm diameter and the updated design solution becomesx4={3, 2,2, 4, 2, 3, 1, 1, 1,2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}T. The pipe group obtained from connecting these two groups is set as a new primary pipe group. Afterwards, a new secondary pipe group (Group 3) is found and connected to the primary pipe group by linking node 4 and node 1. The procedure is terminated when there remains only one pipe group which implies that a legitimate pipe network is obtained. The network in Fig. 3 after being repaired is shown in Fig. 6. The finally repaired design solution isx5={3, 2,2, 4, 2, 3,2, 1, 1,2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}T.Using this concept, the objective and constraint functions become many-to-one functions since the solutionsx2,x3,x4 andx5 produce the same function values. In the optimization process, the junctions, ground network as well as neighbor elements of the junctions are provided initially. It is also useful to construct a matrix that is used to detect disconnected pipe groups. Function evaluation is carried out in such a way that, if the input design variables vector is legitimate, the analysis of the pipe network can then be performed. In cases that the design solution is illegitimate, the NRT is invoked to enable the network analysis. With the use of NRT, any design solution is feasible and it is always possible to analyze the network. It is possible to use evolutionary algorithms with binary, integer or real codes since we can use a round-off operator to convert design variables to integer numbers. The flowchart for NRT is given in Fig. 7.It should be noted that selection of neighbor elements for network nodes is based on designer's decision. Obviously, with two different sets of neighbor elements, a particular solutionxwill result in different network topologies after repairing. However, optimum topologies of the design problem according to two different sets of neighbor elements will be the same and a good optimization method should be able to find it using any set of neighbor elements. In practice, there will also be some field constraints. For example, diagonal pipes in a ground network must be removed due to some obstructions. Some pipe elements in the ground network are assigned to have certain diameters and thus cannot be assigned as design variables. Apart from that, nodal positions may not be aligned due to obstructions. With such constraints, the concept NRT still works as demonstrated in the OPT3 design problem in Sections 5 and 6. It is recommended to contact the corresponding author for more details of the NRT algorithm.The first ever version of population-based incremental learning (PBIL) was introduced as a meta-heuristic that search for a single objective optimum solution based on binary codes [38]. The method was then extended for use with real codes [36]. For simplicity, RPBIL will be presented as an optimizer for a bound-constrained problem that minimize a single objective function f(x) where Li≤xi≤Uifor i=1, …, n. Liand Uiare lower and upper bounds ofxrespectively.A real code population in RPBIL is represented by the so-called probability matrixPor Pijsized n×m where m is a predefine number of subsections of the interval [Li, Ui]. The element Pijdetermines the probability of which the i-th element ofxwill be located in the range [Li+(j−1)δ, Li+jδ] where δ=(Ui−Li)/m. Generating a real-code population can be carried out in the similar manners as with binary PBIL where a simple procedure is given in Fig. 8. The procedure of single objective RPBIL starts with a probability matrixPwhere all elements values are assigned as 1/m. A population according toPis then created with their corresponding objectives being evaluated while the best individualxbest is detected. The probability matrix is then updated based uponxbest as(3)P′ij=(1−LR)Pijold+LRand(4)LR=0.5exp(−(j−r)2)The element r is determined in such a way thatxibestis located in the range [Li+(r−1)δ, Li+rδ]. The learning rate LRin Eq. (4) is set to prevent premature convergence. In order to preserve the condition∑j=1TPij=1, the i-th row ofP′ is normalized as:(5)P″ij=1∑j=1mP′ijP′ijAs a result, the eventually updated Pijis in Eq. (5). The probability matrix andxbest are iteratively improved until the termination condition is met.In this paper, RPBIL is further extended to deal with a multiobjective design problem. Rather than using one probability matrix, the multiobjective version of RPBIL uses several probability matrices in order to maintain population diversity. The probability matrix will be called a probability tray to be more insightful. Given that multiobjective RPBIL uses nTprobability trays for searching, each tray will be used to produce one sub-population whereas one real code population is obtained from the combination of all nTsub-populations. The search procedure starts with nTof initial probability trays whose elements are full of the value 1/m. An initial Pareto archive is also created. Then the population is generated based on the probability trays. The Pareto archive is then updated by replacing it with the non-dominated solutions sorted from the union set of the current population and the members in the previous archive. Afterwards, those non-dominated solutions are classified into nTgroups by means of a clustering technique. The centroid of each group will be used asxbest for updating a probability tray (Eqs. (3)–(5)). In cases that the number of non-dominated solutions is less than nT,xbest will be a randomly selected solution from the archive. The procedure is repeated until a termination condition is met.Fig. 9shows the search procedure of multiobjective RPBIL where k is an index of probability tray number and A is an external Pareto archive. The function NonDominatedSort(Pop) gives non-dominated solutions obtained from sorting all members in Pop.Multiobjective RPBIL in Fig. 9 is one efficient MOEA. However, from the performance test conducted by the authors, it is shown that the proposed multiobjective RPBIL provide good population diversity but its convergence rate is somewhat lower than expected. In the literature e.g. [39], it has been shown that hybridization of strong points of different evolutionary algorithms can lead to a better optimizer. As a result, differential evolution operators are introduced to the search procedure to explore new area of the design space. According to Fig. 9, the obtained real code population Pop is recombined with the members in the Pareto archive by using the DE operators (here it is DE/best/2/bin). The Pareto archive members are used in the recombination process so as to increase the convergence rate. This hybrid multiobjective evolutionary algorithm is termed RPBIL–DE and its computational steps are detailed in Fig. 10.The numerical experiment is performed to test the proposed design strategy and the newly proposed MOEAs. Two networks with 4×4 nodes and 7×7 nodes were used for design demonstration and their ground networks are illustrated in Figs. 11 and 12respectively. The optimization design problems for the two networks are termed OPT1 and OPT2 respectively. The third ground network (Fig. 13) is somewhat more practical than the first two ground networks as the nodal positions are not aligned, most of diagonal ground pipe elements are removed (supposedly due to some obstructions), and some pipe diameters (dashed line) are set to be unchangeable. The design problem using this ground network is termed OPT3. The fourth network is a practical network currently used in the Chumponburee district, Surin province, Thailand. It is the network of the main pipes designed by experienced design engineers. The ground network for the Chumponburee network is illustrated in Fig. 14and the corresponding design problem is named OPT4. All the networks have one tank. The first network has 42 design variables while OPT2, OPT3 and OPT4 have 156, 64, and 20 design variables respectively. It should be noted that ground networks having diagonal pipes was created merely for design demonstration. In real world problems as with the Chumponburee network, using diagonal pipes may be impossible due to infrastructures of houses and roads. The objective and constraint functions are evaluated by using a non-commercial software EPANET version 2 [40]. Since the optimization codes were developed using MATLAB, an interface between these two programs is required.The optimizers employed are as follows:-MOHS using harmony memory considering rate (HMCR), minimum pitch adjustment rate (PARmin), maximum pitch adjustment rate (PARmax), minimum bandwidth rate (BWmin), and maximum bandwidth rate (BWmax) as 0.5, 0.2, 2, 0.45, and 0.9 respectively.UPS-EMOA using minimum population size, burst-size, crossover rate (pc), scaling factor (F), and probability of choosing an element from offspring in crossover (CR) as 10, 25, 0.7, 0.8, and 0.5 respectively.MPSO using a starting inertia weight, an ending inertia weight, a cognitive learning factor, and a social learning factor as 0.5, 0.01, 0.5 and 0.5 respectively.SPEA2 using real codes where the real code crossover and mutation operators are detailed in [41]. The crossover and mutation rates are set to be 1 and 0.1 respectively.NSGAII using real codes where the real code crossover and mutation operators are detailed in [41]. The crossover and mutation rates are set to be 1 and 0.1 respectively.RPBIL using the number of subintervals for bound constraints (m), and number of probability trays (nT) as 30, and N/5 respectively.RPBIL–DE using the number of subintervals for bound constraints, number of probability trays, crossover rate, scaling factor, and probability of choosing an element from offspring in crossover as 30, N/5, 0.7, 0.8, and 0.5 respectively.All of the MOEAs employ the non-dominated sorting technique for constrained optimization presented in [42]. For the OPT1 and OPT3 design problems, the number of generations is set to be 150 loops (200 for OPT2 and 100 for OPT3) while the population size and external Pareto archive size are set to be 100 (150 for OPT2 and 80 for OPT3). Each multiobjective optimizer is used to solve the design problems for 10 runs so as to measure their convergence rate and consistency. In this work, the so-called hypervolume one of the most reliable Pareto front indicators is used for MOEAs search performance comparison.Having run all the 7 multiobjective evolutionary optimizers for tackling four design problems of simultaneous topology and sizing optimization of pipe networks, 7×3×10 non-dominated fronts are obtained. The performance comparison of the various MOEAs is given in Table 2. Based on the hypervolume indicator, the higher hypervolume means the better non-dominated front. The values of a hypervolume are normalized to the range of [0,1] (the best front has the hypervolume of 1 while the worst front has the hypervolume value of 0) so as to ease in comparison. From the results, the best optimizer for both convergence rate (average hypervolume) and consistency (standard deviation of hypervolume) for OPT1 is RPBIL–DE while the second best is SPEA2. For OPT2 which has higher number of design variables, the best optimizer based on convergence rate is SPEA2 while the second best is RPBIL–DE. Based on the standard deviation, the most consistent method is RPBIL–DE while the second best is SPEA2. RPBIL–DE is also the best for OPT3 while NSGAII is the close second best. The most and second most consistent methods based on the standard deviation of hypervolume are MPSO and UPS-EMOA respectively. For OPT4, the method that gives best convergence rate is RPBIL–DE while the second best is MPSO. The most consistent method is MOHS whereas the second most consistent algorithm is RPBIL–DE.Overall, the top two performers for this performance test are RPBIL–DE and SPEA2. The former is more efficient with design problems having lower number of design variables and sufficiently high number of generations and population size. The latter is superior when dealing with a design problem with higher number of design variables and limited number of generations and population size. By adding the DE operators to RPBIL, the performance of the hybrid algorithm is greatly improved. Other MOEAs are said to have acceptable performance although they are slightly inferior to the proposed RPBIL–DE.Fig. 15shows the best front of OPT1 obtained from running RPBIL–DE while the networks of the 12 selected design points are illustrated in Fig. 16. The non-dominated front has various network topologies. The best front of OPT2 obtained from using SPEA2 is shown in Fig. 17where the corresponding networks of some selected points are displayed in Fig. 18. The best front of OPT3 obtained from NSGAII is displayed in Fig. 19while the selected network topologies are shown in Fig. 20. The best front of the Chumponburee network design problem obtained from using RPBIL–DE is illustrated in Fig. 21while some selected design points are shown as the networks in Fig. 22. The star marker in Fig. 22 is the design solution currently used and obtained from an experienced designer. It is shown that the current solution of the Chumponburee network is dominated by a number of design solutions obtained from the proposed design process. Moreover, it can be observed from Figs. 16, 18, 20 and 22 that a network topology with less cost and higher head loss comprises branches rather than loops while, in contrast, a network having higher cost, bigger pipe diameters, and smaller head loss tends to have loops rather than branches. This result is reasonable and agrees well with common knowledge in pipe networks since a network consisting of bigger pipes and more loops will have lower total head loss.NRT is proposed to cope with difficulties in the topological optimization process. It is an efficient numerical scheme for dealing with an illegitimate pipe network topology in the conceptual design of WDNs. NRT helps combine and achieve the conceptual and preliminary design of a water distribution network within one evolutionary optimization run. From the numerical experiment, it can be concluded that NRT can be applied for simultaneous topology and sizing optimization of water distribution networks efficiently and effectively. It can be implemented for practical networks, for which designers can define their own ground networks with realistic restrictions. The technique results in many-to-one objective and constraint functions. With the use of NRT, any multiobjective evolutionary algorithm can be employed to solve pipe network topological optimization. For the proposed hybrid RPBIL–DE for solving simultaneous topology and sizing optimization of pipe networks, it is shown that the algorithm is among the top performer MOEAs according to the hypervolume indicator. The method gives the best convergence rate for the cases of design problems with lower number of design variables. It is also the overall best multiobjective optimizer for this type of optimization problem whereas the second best is SPEA2. It should be noted that this comparative performance study is based on constant optimization parameter settings. Investigation on adaptive optimization parameters will be conducted in the future.With the use of the proposed optimization strategy, a set of Pareto optimal solutions can be obtained and a designer can apply decision making techniques to select an appropriate network solution. The selected network can then be refined in the detailed design stage. From this preliminary study, it is open for future studies to improve this type of design process. The comparison of NRT with a penalty function technique needs to be examined. The use of other reliability indices such as the resilience index and the network resilience as an objective function requires investigation. NRT is said to be complicated, thus a simple numerical scheme that is as effective as NRT should be invented. It is also challenging if we can perform the conceptual, preliminary, and detailed design (such as valve locations and distribution) at the same time, which means we can have a ready to work network within one optimization run.

@&#CONCLUSIONS@&#
