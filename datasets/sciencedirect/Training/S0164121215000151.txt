@&#MAIN-TITLE@&#
Diagrams or structural lists in software project retrospectives – An experimental comparison

@&#HIGHLIGHTS@&#
Root cause analysis is a recommended practice in retrospectives.We compare the use of cause–effect diagram to the use of structural lists in root cause analysis.Cause–effect diagram improves the root cause analysis.Cause–effect diagram is preferred by participants (75%).

@&#KEYPHRASES@&#
Root cause analysis,Retrospective,Post mortem analysis,Cause–effect diagram,Controlled experiment,

@&#ABSTRACT@&#
Root cause analysis (RCA) is a recommended practice in retrospectives and cause–effect diagram (CED) is a commonly recommended technique for RCA. Our objective is to evaluate whether CED improves the outcome and perceived utility of RCA. We conducted a controlled experiment with 11 student software project teams by using a single factor paired design resulting in a total of 22 experimental units. Two visualization techniques of underlying causes were compared: CED and a structural list of causes. We used the output of RCA, questionnaires, and group interviews to compare the two techniques. In our results, CED increased the total number of detected causes. CED also increased the links between causes, thus, suggesting more structured analysis of problems. Furthermore, the participants perceived that CED improved organizing and outlining the detected causes. The implication of our results is that using CED in the RCA of retrospectives is recommended, yet, not mandatory as the groups also performed well with the structural list. In addition to increased number of detected causes, CED is visually more attractive and preferred by retrospective participants, even though it is somewhat harder to read and requires specific software tools.

@&#INTRODUCTION@&#
In software project retrospectives, individuals work together in order to create an understanding of what worked well in the prior project, and what could be improved (Bjørnson et al., 2009). Root cause analysis (RCA) is used in software project retrospectives, which are recommended practice for example in the Scrum software development method (Schwaber and Sutherland, 2011). RCA helps in capturing the lessons learned from individuals (Lehtinen et al., 2011) and aims to state what the perceived problem causes are and where they occur (Lehtinen and Mäntylä, 2011; Lehtinen et al., 2014a). Furthermore, RCA can be a part of project retrospectives, but it can also be a part of continuous software process optimization as recommended by the CMMI model (Software Engineering Institute).A cause–effect diagram (CED) is a commonly recommended technique for RCA (Anbari et al., 2008; Bjørnson et al., 2009; Dingsøyr, 2005; Lehtinen et al., 2011). The diagram is used to register and visualize the outcome of RCA, i.e., the underlying causes of the problem. Its objective is to ease the detection and communication of the underlying causes and their causal structures. However, there are no studies comparing the use of CED with the use of textual notations, which represent the most straightforward approach to documenting retrospectives as they require no special tools other than a standard text editor. The use of structural lists can be thought as a natural baseline for such textual notations, which graphical diagrams, such as the CED, should be compared with. In our previous work, we operated with software organizations that have used textual notations to document the retrospectives instead of CEDs (Lehtinen et al., 2011,2014b). Thus, reporting and visualizing the causal structures of a problem do not necessarily require CED and the benefits of CED have not been investigated in previous work.Our research problem is the following: Is CED needed in the RCA of software project retrospectives, and if so, why? We studied the research problem by organizing a controlled student experiment as a part of a software engineering capstone project course, where students conduct software projects in industrial like environment. We compared the outcome of RCA and the perceptions of the retrospective participants between a CED and a structural list technique.The rest of the paper is structured as follows. Section 2 introduces the related work, which includes using RCA in the retrospectives of software projects. Additionally, we will present how the CED and structural list techniques can be used in RCA to visualize and organize the causes of problems. At the end of the section, gaps in the existing research are presented. Section 3 presents the research objectives, questions, and methods. We will also introduce the research context, research hypotheses, the used retrospective method (Bjørnson et al., 2009) and the experiment design including the treatments, response variables, and controlling the undesired variation. Section 4 presents the study results. Furthermore, we will answer the research questions and discuss the validity threats in Section 5. Section 6 summarizes our findings and suggests future work on the topic.

@&#CONCLUSIONS@&#
CED is a commonly recommended technique for RCA, as indicated in our earlier literature review (Lehtinen et al., 2011). However, there are no studies where the effectiveness of using CED is compared with the effectiveness of RCA without it. In this paper, we performed a controlled experiment comparing CED with the structural list in the context of project teams (n = 22) of a software engineering capstone course. We evaluated the outcome of RCA in software project retrospectives and the perceptions of retrospective participants using CED in comparison to those using the structural list technique. We made three main findings in this research.First, we found weak evidence that the measured output of CED is better in comparison to the structural list. CED increased the cause count with medium effect size, however, the difference is not statistically significant due to small sample size. The difference was caused by the fact that CED had more causes on the deeper levels than structural lists. Thus, using CED can be beneficial if a problem cannot be solved only by looking at the shallow causes. In addition, the causal structures which were created with CED had higher proportion of hub causes indicating that CED allows the creation of richer understanding about the interconnections between the causes of the problem. This difference was statistically significant with large effect size.Second, in terms of the perceptions of the retrospective participants, there are significant differences between the techniques. CED was perceived as a better technique in the questionnaires and most of the participants (75%) prefer using CED, instead of the structural list.Third, the qualitative analysis of both methods showed that both methods had advantages. CED was perceived as a better technique to organize the causes of problems, because it provides a more flexible and visually attractive structure and it is also perceived as easier to navigate when making sense about the causes of the problems. The structural list was seen as easier to read and it could present more causes simultaneously on screen than CED.Our implications for practice are as follows.•CED was preferred by the participants. Using CED can increase the motivation to conduct RCA in the project retrospectives.CED provides richer analysis on the interrelations of causes and thus, it is preferable in particular for the more complex problems.The differences between these techniques are not large, which means the found benefits do not justify enforcing CED on a reluctant project team.Drawing a CED requires a specific software tool, in practice, whereas a structural list can be used with a standard text editor.Obviously, software companies rarely have time to conduct retrospectives (Glass, 2002). However, they are likely valuable and therefore they should also be as optimized and lightweight as possible. In the future, more comparisons between the CED techniques should be done. We should continue the work of Björnsson et al. (2009) as one of the major challenges in the RCA of retrospectives is the high number of causes of problems. Similarly, we should continue to develop new emerging methods for capturing and refining the findings of software project retrospectives in order to improve the organizational learning. For example combing CED with retrospective timelines is an interesting future work area. We should also analyze the feasibility of software tools for the RCA of retrospectives. For example, software tools that support conducting RCA in distributed retrospectives are scarce (Lehtinen et al., 2014b).This inquiry is 100% anonymous. The people names won't be published. All the results are analyzed as a one mass of answers.1Your name: […]Answer by circling a choice for each question.My role in the project team is… [1=project manager, 2=quality manager, 3=architect, 4=developer]Cause collectionThe scale was: [1=very bad; 2=bad, 3=somewhat bad, 4=neutral; 5=somewhat good, 6=good, 7=very good, *=I don't answer]-Technique used to collect the causes is…[Result ID = 1.3]-Technique used to organize the causes is…[Result ID = 2.1]-Advantageousness of cause collection in comparison to used effort was…[Result ID = 3.1]-Correctness of the detected causes is…[Result ID = 3.6]-Easiness to solve the detected causes is…[Result ID = 3.7]-My effort in the cause collection was…[Result ID = 4.3]-Effort of my team in the cause collection was…[Result ID = 4.2]-Efficiency of the method to detect improvement targets compared to the other methods you have experience…[Result ID = 3.2]GeneralThe scale was: [1=fully disagree; 2=disagree, 3=somewhat disagree, 4=neutral; 5=somewhat agree, 6=agree, 7=fully agree, *=I don't answer]-There was an open communication in the session…[Result ID = 4.1]-In general, this was a useful workshop…[Result ID = 3.4]-The used RCA method helps to develop corrective actions…[Result ID = 3.3]-Team spirit of our project team is great…[Result ID = 4.4]-This workshop was nothing more than waste of time…[Result ID = 3.5]GeneralThe scale was: [1=fully disagree; 2=disagree, 3=somewhat disagree, 4=neutral; 5=somewhat agree, 6=agree, 7=fully agree, *=I don't answer]-Detecting the fundamental causes of the problem was challenging…[Result ID = 1.1]-Problem causes should be collected by writing them on papers…-Problem causes should be collected by discussing on them…-It is a good idea to articulate publicly the written causes…-The participants purposefully did not name some important causes…[Result ID = 4.5]-The participants did not care to name all the causes publicly…[Result ID = 4.6]-The only way to solve a problem is through solving its fundamental causes…-It was hard to me to get the big picture of the fundamental causes of the problem, because of their high number…[Result ID = 2.2]-It was easy to register the causes I detected among the other causes…[Result ID = 2.3]-It is important to collect sub causes of a problem…[Result ID = 1.5]-Technique used to collect problem causes is easy to use…[Result ID = 1.2]-Technique used to collect problem causes is useful…[Result ID = 1.4]This inquiry is 100% anonymous. The people names won't be published. All the results are analyzed as a one mass of answers.1Your name: […]Answer by circling a choice for each question.The scale was: [1=fully disagree; 2=disagree, 3=somewhat disagree, 4=neutral; 5=somewhat agree, 6=agree, 7=fully agree, *=I don't answer]-I think that RCA should rather be conducted by using the directed graph than by using the structural list…The high number of causes in the first workshop created a problem of being difficult to get the big picture of the fundamental problem causes…It was easier in the first workshop to register the causes I detected among the other causes…Technique used to collect the causes in the first workshop is easier than the method used in this second workshop…Technique used to organize the causes in the first workshop is easier than the method used in this second workshop…The high number of causes in this second workshop created a problem of being difficult to get the big picture of the fundamental problem causes…It was easier in this second workshop to register the causes I detected among the other causes…It was easier to get the big picture of the fundamental causes of the problem in this second workshop than in the first workshop…Technique used to organize the causes in this second workshop is more difficult than the method used in the first workshop…Technique used to organize the causes in the first workshop is more difficult than the method used in this second workshop…