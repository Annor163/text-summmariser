@&#MAIN-TITLE@&#
High-order mesh curving by distortion minimization with boundary nodes free to slide on a 3D CAD representation

@&#HIGHLIGHTS@&#
We present a method to generate curved high-order meshes for industrial applications.The method is based on the minimization of a single and global objective function.The objective function is defined as the distortion of the volume mesh.To enlarge the feasible region, boundary nodes are free to slide on the CAD model.A block iterative implementation of the global objective function is presented.

@&#KEYPHRASES@&#
Curved high-order meshing,Mesh smoothing,Mesh untangling,Mesh quality,CAD interpolation,Hierarchical minimization,

@&#ABSTRACT@&#
We propose a 3D mesh curving method that converts a straight-sided mesh to an optimal-quality curved high-order mesh that interpolates a CAD boundary representation. The main application of this method is the generation of discrete approximations of curved domains that are valid for simulation analysis with unstructured high-order methods. We devise the method as follows. First, the boundary of a straight-sided high-order mesh is curved to match the curves and surfaces of a CAD model. Second, the method minimizes the volume mesh distortion with respect to the coordinates of the inner nodes and the parametric coordinates of the curve and surface nodes. The proposed minimization features untangling capabilities and therefore, it repairs the invalid elements that may arise from the initial curving step. Compared with other mesh curving methods, the only goal of the proposed residual system is to minimize the volume mesh distortion. Furthermore, it is less constrained since the boundary nodes are free to slide on the CAD curves and surfaces. Hence, the proposed method is well suited to generate curved high-order meshes of optimal quality from CAD models that contain thin parts or high-curvature entities. To illustrate these capabilities, we generate several curved high-order meshes from CAD models with the implementation detailed in this work. Specifically, we detail a node-by-node non-linear iterative solver that minimizes the proposed objective function in a block Gauss–Seidel manner.

@&#INTRODUCTION@&#
In the last decade, unstructured high-order methods  [1–5] have been proved to be well suited to perform high-fidelity simulations on complex domains. First, they are ready to approximate complex curved domains. Second, they feature low numerical dissipation and dispersion. Third, they are faster than low-order methods in several applications  [6–12], specially for problems that require high-accuracy and implicit time stepping. Finally, they favor dense floating-point operations that can be efficiently implemented in current computing architectures. A key ingredient to meet all these practical advantages is the generation of curved high-order discretizations of the simulation domain.In the most common framework, curved high-order meshes are generated using an a posteriori approach referred as mesh curving  [13–22]. First, an initial linear mesh that features the element size and stretching required by the simulation is generated. For instance, the mesh may present higher resolution in the regions of interest, and highly stretched elements to capture the boundary layers or shocks in the solution. Then, the linear mesh is converted to a straight-sided high-order mesh by introducing additional nodes. Finally, the straight-sided high-order mesh is curved to match the corresponding CAD model boundary.Typically, the mesh curving is performed in two steps. First, the high-order nodes at the mesh boundary are relocated on the CAD boundary entities to ensure that the corresponding surface elements are smooth and valid. This curving of the mesh boundary may introduce inverted volume elements. Then, the boundary nodes are fixed and the inner high-order nodes are relocated (smoothing) to accommodate the curved boundary and repair the invalid elements (untangling). However, the fixed coordinates of the boundary nodes may excessively constrain the volume mesh and therefore, low-quality or inverted volume elements could be obtained for specific configurations, specially for those configurations that present high-curvature entities, thin regions, or opposite curves and surfaces meshed with the same topology of structured elements.To overcome this issue, we propose an untangling and smoothing process based on minimizing a global objective function defined only in terms of the distortion of the volume mesh  [23], that takes the coordinates of the high-order nodes as arguments [22,24–26]. The novelty of the approach is that we consider a single target objective function (mesh distortion) where all the nodes, except the nodes located on the geometry vertices, are free to move on the corresponding container CAD entity. Thus, we directly improve the quality of the volume mesh in a single step, instead of first relocating the boundary elements, according to a given surface curving criteria, and then improving the inner elements, according to a different volume curving criteria.It is important to point out that our method targets the quality of the volume mesh, which is critical in the simulation analysis. That is, low-quality meshes may hinder the accuracy of the simulation approximation to the solution. Furthermore, if the quality of the volume mesh is optimal, then the quality of the boundary mesh is high. Counter-wise, optimal surface meshes can determine the boundary of low-quality or even invalid volume meshes. That is, the reciprocal, the case for standard mesh curving methods, is not true in general.Although the objective function is globally defined for all the nodes, we propose to optimize it using a hierarchical approach in three stages. First, we improve the quality of the volume mesh by moving the curve nodes along the CAD curves. Second, we improve the quality of the volume mesh by moving the surface nodes on the CAD surfaces. Finally, we improve the quality of the volume mesh moving the interior nodes. During the first two steps of the proposed method, we have to ensure that the boundary nodes are located on the corresponding curves and surfaces. To this end, we consider the parameterization of curves and surfaces provided by the CAD model. Specifically, the unknowns that correspond to the curve and surface nodes are determined by their parametric coordinates on the CAD entities as in  [27,28]. Following this approach, we ensure that the nodes lie on the corresponding entity, and we avoid expensive and non-robust projections of the nodes onto the boundary.The main advantage of the proposed approach is that we only take into account the quality of the volume mesh. Moreover, the location of the curve and surface nodes is not fixed. This results in an optimization process that is less constrained than the standard approach (fixed boundary nodes) and therefore, a better configuration of nodes can be achieved. It is important to point out that the node type (vertex, curve, surface or volume) is assigned during the hierarchical meshing process. That is, when the curve, surface and volume meshes are generated, the corresponding nodes are marked with the appropriate type.The remaining of the paper is structured as follows. In Section  2, we review the existing literature related to the presented work. In Section  3, we present a simple two-dimensional example to illustrate the objectives of this work. In Section  4 we present the scope of this work, the statement of the problem we aim to solve, and the selected approach. In Section  5, we show the proposed formulation for the optimization process. In Section  6, we present the proposed hierarchical optimization approach. Then, in Section  7, we present several examples in order to show that the proposed method is able to untangle inverted elements and improve the overall mesh quality. Finally, in Section  8, we present the concluding remarks and the future work.

@&#CONCLUSIONS@&#
We have presented a novel untangling and smoothing method to curve high-order meshes. The untangling and smoothing process is accomplished by optimizing a single objective function defined in terms of a regularized distortion measure of the volume mesh. The main contribution is that we use a single target objective function in the whole process. On the contrary, the standard mesh curving approaches apply two separate curving methods with their corresponding associated residual systems. The first stage takes into account curving criteria for surface meshes, while the second one takes into account curving criteria for volume meshes. In our approach, the target of the proposed objective function is the distortion of the volume mesh. Thus, we are able to obtain meshes composed of better quality elements, specially when the boundary mesh constrains the quality of the whole mesh, like in thin regions of the geometry. However, in order to obtain a mesh without inverted elements, we need to move the interior nodes of the mesh, as well as the boundary nodes. With this objective in mind, we have deduced an objective function that takes the physical coordinates of the inner nodes and the parametric coordinates of the boundary nodes as input parameters. Finally, it is worth to notice that the proposed hierarchical approach can be directly applied to meshes of assembly models, composed of several volumes. Accordingly, the objective function for the nodes on the interface between volumes takes into account the quality of the all the surrounding elements, even when they are located in different volumes.Although we have deduced a global objective function, for implementation purposes we have adopted a local optimization approach. That is, instead of moving all the nodes at the same time, we perform a node-by-node iteration until convergence is achieved. This allows to perform a hierarchical smoothing approach which is divided into three stages. First, we move the nodes on the curves; second, we move the nodes on the surfaces; and third, we move the inner nodes. Since we did not prove that the proposed objective function is convex, there is no convergence guarantee. In practical applications, we use backtracking line search to improve the global convergence features of the implementation. It is important to point out that with all the tested examples we have converged to a local minima that provides a valid mesh, and we did not experience non-convergent or oscillatory behavior during the optimization process.The proposed method is in general terms more expensive than standard smoothing approaches (without untangling) implemented in a hierarchical manner. For instance, the proposed implementation of our method is more expensive than standard node-by-node Laplacian smoothing. That is, the cost of moving a node is also proportional to the number of neighbors, but there are more floating operations involved. Nevertheless, our implementation scales as the node-by-node Laplacian method up to an implementation constant. Note that our formulation may need several smoothing cycles to achieve the minimum of the objective function. On the contrary, standard hierarchical approaches only require one smoothing cycle: first, curve meshes are smoothed while the limiting vertex nodes are fixed; second, surface meshes are smoothed while the boundary curve nodes are fixed; finally, the volume mesh is smoothed while the boundary nodes are fixed. Nevertheless, we highlight that the overhead of our method pays off in those applications where a valid mesh cannot be obtained with a standard hierarchical smoothing method.We consider that our method is a relevant alternative over the standard hierarchical approach to curve high-order meshes. Specifically, by smoothing and untangling simultaneously boundary and inner nodes we can generate curved high-order meshes in geometries where other methods fail. Specially, in geometries that feature thin regions or high-curvature values where fixing the boundary nodes may add artificial constraints that impede obtaining a valid mesh. These concerns are properly corroborated by the examples presented in this work.We have restricted ourselves to geometries delimited by parameterized curves and surfaces, since CAD models are the preferred representation for industrial applications. Accordingly, the algorithm in its current form requires the utilization of a CAD engine that provides the evaluation of the parameterizations and their first and second derivatives. However, there are several applications where the geometry is enclosed by a non-parameterized representation such as a triangular mesh. To extend our method to deal with these non-parameterized representations of the geometry, it would be required to obtain a local parameterization that provides the required derivatives for the optimization method of choice. We point out that this extension would not be straight forward since obtaining such parameterizations is still an open problem and an active area of research.Several aspects of the algorithm can be extended in the near future. The proposed approach is an optimization based method with untangling capabilities constrained to move the nodes on the CAD entities. Hence, it requires more floating point operations per node than other methods, e.g. Laplacian smoothing. It would be interesting to explore additional techniques to reduce the computational cost of smoothing a given mesh. For instance, we could use a parallel version of the presented algorithm to reduce the time to smooth a mesh. With this objective in mind, we need to partition properly the mesh nodes to avoid that different processors access and modify the same node position at the same time. In addition, we have chosen to implement the global function in a node-by-node manner to simplify the solver implementation, reduce the memory footprint, and exploit the local behavior of the objective function. However, we need to explore additional minimization approaches in order to investigate the robustness and the performance of different solvers. One of the most interesting approaches is to consider a global solver, in which all the nodes are moved at the same time. It is important to point out that the global implementation could lead to an ill-conditioned Hessian matrix since the scales of motion in the curves, surfaces, and volumes are different. This could require to scale the optimization variables to improve the conditioning as proposed in  [21].