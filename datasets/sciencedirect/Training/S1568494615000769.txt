@&#MAIN-TITLE@&#
Fuzzy utility mining with upper-bound measure

@&#HIGHLIGHTS@&#
We introduce a new fuzzy utility function to evaluate the fuzzy utilities of itemsets.The fuzzy minimum operator is applied to the proposed fuzzy utility function.An effective model is designed to keep downward-closure property.A two-phase fuzzy utility mining algorithm, namely TPFU, is proposed.The experiments in synthetic and real dataset prove the practicality of TPFU.

@&#KEYPHRASES@&#
Data mining,Fuzzy data mining,Fuzzy utility mining,High fuzzy utility itemset,Upper bound,

@&#ABSTRACT@&#
Fuzzy utility mining has been an emerging research issue because of its simplicity and comprehensibility. Different from traditional fuzzy data mining, fuzzy utility mining considers not only quantities of items in transactions but also their profits for deriving high fuzzy utility itemsets. In this paper, we introduce a new fuzzy utility measure with the fuzzy minimum operator to evaluate the fuzzy utilities of itemsets. Besides, an effective fuzzy utility upper-bound model based on the proposed measure is designed to provide the downward-closure property in fuzzy sets, thus reducing the search space of finding high fuzzy utility itemsets. A two-phase fuzzy utility mining algorithm, named TPFU, is also proposed and described for solving the problem of fuzzy utility mining. At last, the experimental results on both synthetic and real datasets show that the proposed algorithm has good performance.

@&#INTRODUCTION@&#
Data mining on knowledge discovery is a very important phase for extracting interesting rules and patterns from various data applications. Traditional association-rule mining was first proposed to find the relationship between items from a set of data [1,2], but transactions in retail databases usually included not only bought items but also the bought quantities of the items. Since traditional association-rule mining techniques were not sufficient to be used to handle such quantitative data, Srikant and Agrawal then proposed a new issue named quantitative association rule mining, which partitioned several attribute value ranges for each attribute to find useful quantitative rules. For example, assume a quantitative rule “{age: [20∼29]→Car: [0,1]}”, which most customers with age ranging 20–29 usually do not buy cars or buy one car [21]. However, how to decide the suitable intervals for the domain values in each attribute is difficult, and the discovered rules are not easily to be comprehended by decision makers.Afterward, Chan et al. thus proposed another new issue, namely utility mining, which considered not only quantities of items in transactions but also profits of items in a database, to find itemsets with high utility values in databases [5]. Recently, utility mining has been an emerging issue in data mining due to its practical applications, such as medical data application, mobile data application, behavior data application, stream data application, etc. But, there is a big challenge in utility mining. That is, downward-closure property in association-rule mining cannot be applied to handle the problem of utility mining. To address this, Liu et al. subsequently proposed the two-phase utility mining algorithm (abbreviated as TP), which consisted of two main phases to find high utility itemsets in transaction databases [20]. In the first phase, an effective model, called transaction-weighted utilization (abbreviated as TWU), was proposed to construct a new downward-closure property [20]. The main principle was that the transaction utility (tu) of a transaction was regarded as the upper-bound of any subset in that transaction. The transaction-weighted utility (twu) of an itemset was then the summation of transaction utility values of the transactions including the itemset in the database. Next in the second phase, a predefined minimum utility threshold was used to find out itemsets with high utilities, and the itemsets could then be output as auxiliary information. According to definitions in utility mining, however, the output information for a high utility itemset only provided its utility and the items in it for decision makers [20]. Then, we could not acquire more other information from the results discovered by utility mining techniques, such as quantity interval of each item in an itemset [20]. As traditional association-rule mining, in addition, the utility itemset results might be not easily to be comprehended by users.As above mentioned, Wang et al. then proposed a new issue, namely fuzzy utility mining, which combined fuzzy set theory with utility mining to find high fuzzy utility itemsets (HFU) from quantitative databases [22]. Moreover, Wang et al.’s also defined a fuzzy utility function to evaluate fuzzy utility of an item in databases. For example, assume there is a quantitative transaction {1A, 3B}, in which the symbols and the numbers represent the bought items and their sold quantities, respectively. Also, assume the same membership function with three fuzzy regions: Low, Middle, and High, is assumed for the two distinct items, A and B. With the membership in Fig. 1, the quantities of the two items in the transaction can be converted into the two fuzzy sets fA={1/A.Low, 0/A.Middle, 0/A.High} and fB={0.6/B.Low, 0.4/B.Middle, 0/B.High}. In addition, assume the profits of the two items, A and B, are 1 and 8. Take the fuzzy itemset {A.Low, B.Low} as an example. For the fuzzy term {B.Low} of {A.Low, B.Low}, since the centroid value of the fuzzy region “Low” in Fig. 1 is 1, and its profit and membership value are 8 and 0.6, the fuzzy utility of {B.Low} can be calculated as 0.6*(1*8), which is 4.8. Similarly, the fuzzy utility of {A.Low} can be calculated as 1*(1*1), which is 1. The fuzzy utility of the itemset {A.Low, B.Low} in the transaction is the summation of the two fuzzy terms in the transaction, which is 5.8 (=1+4.8). Finally, the fuzzy utility of an itemset is the summation of fuzzy utilities of the itemset in all transactions including the itemset in a database. As this example notes, however, the common membership degree value for the fuzzy terms in an itemset in fuzzy set theory is not considered in the fuzzy utility function, and the calculated fuzzy utility values for itemsets are also not easily to be explained.Due to above reasons, this work thus presents a new fuzzy utility function, which considers not only quantities and profits of items but also the minimum operator principle of fuzzy set theory, to evaluate the actual fuzzy utility of an itemset in a set of transactions. However, since downward-closure property in fuzzy itemset mining cannot be kept in fuzzy utility mining with the proposed function, the effective fuzzy utility upper-bound model (abbreviated as FUUB) is proposed to avoid information losing. Based on the FUUB model, in addition, this work also presents the two-phase fuzzy utility mining approach (abbreviated as TPFU). At last, experimental results reveal the proposed TPFU approach can have good performance in terms of execution efficiency under various parameter settings.The rest of parts in this paper is organized as follows. The related works are reviewed in Section 2. The problem to be solved and definitions are described in Section 3. The execution details of the proposed TPFU approach are explained in Section 4. An example in Section 4.2 is given to describe how to perform the mining process by using the proposed TPFU. The experimental results are then showed in Section 5. Finally, conclusions and future work are discussed in Section 6.In this section, some related studies on association-rule mining, fuzzy data mining, and fuzzy utility mining are briefly reviewed.In the field of data mining, discovery of association rules in large databases is one of the important issues due to the consideration of relationship of items [1,2]. For example, assume a product combination “{milks, breads}” has a high frequency in a database. It means the most customers usually buy milks and breads together in the retail. To deal with this problem, a famous algorithm, namely Apriori, was first proposed to find frequent itemsets in databases [1]. The Apriori algorithm consists of two main phases, finding frequent itemsets and finding association rules. In the first phase, all possible items in a database are regarded as candidate 1-itemsets, and the support of each item is scanned to count the support values of the candidates. Then, the frequent 1-itemsets with supports being larger than or equal to a pre-defined minimum support threshold could be found from the set of candidate 1-itemsets. Next, candidate 2-itemsets with two items are generated from the set of frequent 1-itemsets, and then the process of both the scanning data and counting supports is executed again for the candidate 2-itemsets. The whole mining task can be terminated until no candidate itemsets can be generated in the next pass. After the whole mining process, the final set of frequent itemsets in the database is then found.As mentioned previously, a transaction in retail databases usually also includes quantities bought of items in that transaction in addition to items in the transaction. Then, traditional frequent itemset mining techniques cannot be sufficient to be used to handle such data with quantitative values [8,21]. To deal with such data, Srikant et al. thus proposed a new research issue, named quantitative association rule mining, which partitioned several attribute value ranges for each attribute to find useful quantitative association rules [21]. However, there exist some challenges in quantitative rule mining, such as that it is difficult for how to determine the suitable value ranges for the domain values of each attribute, and it is not easily to be comprehended by users for the rules discovered by the quantitative rule mining techniques.The fuzzy set theory has widely been used various intelligent systems because of its simplicity and comprehensibility to human reasoning. To reach the goal, Kuok et al. first proposed a new research issue, fuzzy data mining, which applied the concept of fuzzy set theory to the data mining [16]. The main concept behind the issue is that quantitative values in transactions are converted into linguistic regions by fuzzy theory, and a minimum operator in fuzzy theory is applied to obtain the overlap value (minimum value) of membership regions in different items. Different from traditional association rules and quantitative rules, the interesting knowledge with simplicity and comprehensibility for fuzzy data mining could be found from the set of transactions with linguistic regions. To handle this problem, in addition, Hong et al. proposed an effective Apriori-based mining algorithm, which adopted a minimum operator in fuzzy theory to count the scalar cardinality value for an itemset in a transaction, to find interesting fuzzy association rules [10]. In addition, Hong et al. proposed an advanced mining approach, which considered the trade-off problem between number of rules and the cost of computation time. The main concept is that fuzzy term with the highest fuzzy count for the items could be kept in the set of fuzzy frequent 1-itemsets, and then a great deal of fuzzy rules could thus be avoided or the execution efficiency could be improved [11]. Several other fuzzy data mining studies have also been published [4,6–8,12,14,18,19], but they were all Apriori-based techniques. Thus, the existing approaches had to spend a good deal of time cost generating a large number of candidates and counting their actual fuzzy counts in transactions. Based on the reasons, it is thus a quite critical issue to efficiently find fuzzy rules in quantitative databases.In association-rule mining, only binary itemsets are considered [1,2]. In real-world applications, however, products bought in transactions contain both profits and quantities. In particular, some high-profit products may occur with low frequency in a transaction database. For example, both jewel and diamond have high utility values but may not be frequent product combinations when compared to food and drink in a transaction database. Thus high-profit but low-frequency itemsets may not be found by the traditional association-rule mining approaches. To deal with this, Chan et al. proposed utility mining to discover high utility itemsets from a transaction database [5]. In this study, a high utility itemset considers not only the quantities of the items in transactions, but also their individual profits. Formally, local transaction utility and external utility are used to measure the utility of an item. The local transaction utility of an item is directly obtained from the information stored in a transaction database, like the quantity of the item sold in a transaction. The external utility of an item, like its profit, is given by users. External utility often reflects user preferences, and can be represented by a utility table or a utility function. By using a transaction dataset and a utility table together, the discovered itemset is able to better match a user's expectations than if found by considering only the transaction dataset itself.Traditional association-rule mining keeps the downward-closure property [1,2], but utility mining does not, and thus the latter is much harder than the former. Liu et al. proposed a two-phase utility mining algorithm (TP) to discover high utility itemsets from a database by adopting the downward-closure property [20], and this approach was named as the transaction-weighted utilization (TWU) model. Based on principle of two-phase utility mining algorithm, several other studies about utility mining have also been published [3,13,17,23,24].In real-world applications, however, how to get suitable promotion quantities of products in a product combination is a quite important. But, an itemset in utility mining only provides both of items in that itemset and its utility information for decision makers. To address this, Wang et al. proposed a new research issue, fuzzy utility mining, which combined fuzzy set theory with utility mining, to find high fuzzy utility itemsets (HFU) [22]. In particular, a new fuzzy utility function was defined to evaluate fuzzy utility of an item by the corresponding linguistic region value and degree value in its membership function. According to the fuzzy utility function in [22], however, it was observed that the minimum operator in traditional fuzzy data mining is not considered to evaluate the common degree values of fuzzy terms in a fuzzy itemset.As mentioned above, this motivates our exploration of the issue, which designs a suitable fuzzy utility function and develops an efficient fuzzy utility mining approach.To describe the proposed fuzzy utility mining problem clearly, assume a quantitative transaction database (QDB) with 10 transactions is given in Table 1, in which each transaction consists of three features – transaction identification (TID), items purchased, and their quantities in the transaction. There are four items in the transactions, respectively denoted as A to D. The value attached to each item in the corresponding slot is the quantity sold in a transaction. Also, assume the profit value of each item is showed in Table 2, and the same membership functions with the three fuzzy regions, Low, Middle and High, are given for the four items for simplicity.According to the above example, a set of terms related to the proposed fuzzy utility mining approach is then defined as follows.Definition 1An itemset X is a subset of items; That is, X⊆I. If |X|=r, the itemset X is called an r-itemset. Here let I={i1, i2, i3, …, ir} be a set of all distinct items which may appear in transactions. For example, the itemset {AB} contains 2 items and is called a 2-itemset.A quantitative transaction (Trans) is composed of a set of purchased items with their quantities, and a quantitative transaction database QDB is composed of a set of quantitative transactions. That is, QDB={Trans1, Trans2, …, Transy, …, Transz}, where Transyis the yth quantitative transaction in QDB and z is the number of transactions.The fuzzy set fyzof the quantitative value vyzof the zth item izin a Transycan be represented by the given membership functions for the item izas:fyz=fyz1Rz1+fyz2Rz2+⋯+fyzlRzl+⋯+fyzhRzhwhere h is the number of regions for the item iz, Rzlis the lth fuzzy region (linguistic term) of iz, and fyzlis the fuzzy membership value of the quantitative value vyzof the zth item izin the lth fuzzy region Rzl.For example in Table 1, the quantitative value (=3) of item D in Trans6 can be converted tof6,D=(0.6/D.Low,0.4/D.Middle,0/D.High)by using the given membership function of item D with the three fuzzy regions shown in Fig. 1.The external utility s(i) of an item i in I is the corresponding utility value of the item in a utility table. Note that the external utility of an item can be obtained by users’ expectation or a utility function to reflect the importance of the item, and thus the s(i) value is a positive integer value or positive decimal value. For example, the external utility s(D) of item D is 3 from Table 2.The fuzzy utility fuyzlof the lth fuzzy region of an item izin a quantitative transaction Transyis the external utility s(iz) of izmultiplied by the quantitative value vyzand the fuzzy membership value fyzlof vyzin the lth fuzzy region Ryzl. That is,fuyzl=fyzl*vyz*s(iz).For example from Tables 1 and 2, the quantity and the profit (external utility) of item D in Trans6 are 3 and 3, respectively, and the fuzzy membership value of the quantity of item D in the first fuzzy region (RD.Low) is 0.6 according to the given membership functions of the item D (as shown in Fig. 1). Thus, fu6,D.Low=0.6*3*3=5.4.Note that Definition 3 defines the fuzzy membership values of fuzzy regions and the fuzzy utility used here is derived according to a crisp multiplication operation on the fuzzy membership values of fuzzy regions. These derived utility values are actually attached to fuzzy regions and thus the term of fuzzy utility is used to represent that the values are derived from fuzzy regions. Similar terms are adopted in the following definitions for simplicity.The fuzzy utility fuyXof a fuzzy itemset X in a transaction Transyis the summation of the fuzzy utility values of all the fuzzy terms in X in Transy. That is,fuyX=fyX*∑Ryzl⊆X(vyz*s(iz)),where vyz, s(iz), and fyzlrepresent the quantity of the item izin Transy, the profit value of iz, and the membership value of the lth fuzzy region of the item izin X, respectively. The term fyXrepresents the membership value of X, and fyXcan be calculated by the minimum of all the membership values of all the fuzzy terms in X in Transyby using the minimum operator.For example in Table 1, the membership values of the two fuzzy terms C.Low and D.Low in the fuzzy itemset {C.Low, D.Low} in Trans6 are 1 and 0.6, respectively, according to the given membership function. By using the minimum operator, the membership value for the 2-itemset {C.Low, D.Low} in Trans6 is thus 0.6. The fuzzy utility of the fuzzy 2-itemset {C.Low, D.Low} in Trans6 can thus be calculated as 0.6*((1*5)+(3*3)), which is 8.4.The actual fuzzy utility afuXof a fuzzy itemset X in a quantitative transaction database QDB is the summation of all fuzzy utility values of X in all the transactions including X. That is,afuX=∑yfuyX,where fuyXis the fuzzy utility of the fuzzy itemset X in the yth transaction Transyin QDB.For example in Table 1, afu{C.Low,D.Low}=fu2,{C.Low,D.Low}+fu4,{C.Low,D.Low}+fu6,{C.Low,D.Low}+fu8,{C.Low,D.Low}=33.2.Let λ be a pre-defined minimum fuzzy utility threshold. A fuzzy itemset X is called a high fuzzy utility itemset (abbreviated as HFU) if afuX≧λ. For example in Table 1, if λ=25 then the fuzzy 2-itemset {C.Low, D.Low} is a high fuzzy utility 2-itemset because afu{C.Low,D.Low}=33.2, which is larger than λ.Based on the above definitions, a fuzzy utility itemset considers not only the individual profits and quantities of items in quantitative transaction data but also the membership values of quantities of items. However, the fuzzy utility mining problem does not have the downward-closure property of traditional association-rule mining. For example, assume the threshold λ is set at 25. Since afu{D.Low}=21<λ, {D.Low} is a low utility fuzzy item in Table 1. However, its superset {C.Low, D.Low} is a high fuzzy utility itemset because its afu({C.Low, D.Low}) is 33.2, larger than λ. This example thus shows the downward-closure property cannot be hold for the problem. The proposed fuzzy utility mining is thus much harder than the traditional association-rule mining. To deal with this, we propose an effective upper-bound model, which is named fuzzy utility upper-bound (abbreviated as FUUB), to achieve the goal. A set of related terms in the proposed FUUB model is stated below.The maximal fuzzy utility mfuyzof an item izin Transyis defined as follows:mfuyz=max{fuyz1,fuyz2,…,fuyzl},where fuyzlis the fuzzy utility value of the lth fuzzy region Rzlof the item izin Transy. For example, according to Table 1 and Fig. 1, the membership values of the three regions (Low, Middle, and High) of item C in Trans7 can be found as 0.6, 0.4 and 0, respectively, and the quantitative and the profit of item C in Trans7 are 3 and 5, respectively. Then, fu7,{C.Low}=0.6*3*5=9, fu7,{C.Middle}=0.4*3*5=6, and fu7,{C.High}=0*3*5=0. Thus, mfu7,{C.Low}=9.The maximal transaction fuzzy utility mtfuyof a quantitative transaction Transyis the summation of the maximal fuzzy utility values of all the items in Transy. That is,mtfuy=∑iz⊆Transymfuyz,where mfuyzis the maximal fuzzy utility of the zth item izin Transy. For example in Trans7, mtfu=mfu6,{B.Low}+mfu6,{C.Low}=12.8+9=21.8.The fuzzy utility upper-bound fuubXof a fuzzy itemset X is the summation of the maximal transaction fuzzy utility values of all the transactions including X in QDB. That is,fuubX=∑X⊆Transy^Transy⊆QDBmtfuy.For example in Table 1, fuub{C.Low}=mtfu2+mtfu4+mtfu6+mtfu7+mtfu8=9.6+14.6+16+21.8+9.6=71.6.Let λ be a pre-defined minimum fuzzy utility threshold. A fuzzy itemset X is called a high fuzzy utility upper-bound itemset if fuubX≧λ. For example in Table 1, the fuzzy itemset {C.Low} is a high fuzzy utility upper-bound 1-itemset.The problem of fuzzy utility mining to be solved in this study is defined as follows. Assume a quantitative transaction database QDB contains a number of quantitative transactions, and each transaction is recorded with the purchased items and quantities. Besides, a utility table with the profits of the items is given. The problem to be solved here is to find all the fuzzy itemsets with their actual fuzzy utility values being larger than or equal to a predefined minimum fuzzy utility threshold λ. In this paper, a two-phase fuzzy utility mining algorithm (abbreviated as TPFU) is proposed to effectively and efficiently discover high fuzzy utility itemsets from a given quantitative transaction database QDB.In this section, we propose an effective upper-bound model and an efficient algorithm to find high fuzzy utility itemsets with the consideration of the fuzzy minimum operator. The details of the proposed two-phase fuzzy utility mining algorithm (abbreviated as TPFU) are then described as follows.This section introduces the proposed TPFU algorithm for efficiently finding high fuzzy utility itemsets in a quantitative transaction database QDB. Fig. 2shows the execution procedure of the proposed TPFU algorithm.The inputs of TPFU include: (1) a quantitative transaction database, QDB, (2) a utility table for each item with a profit value s(i), (3) a set of membership functions for each item and (4) a minimum fuzzy utility threshold λ. The output is the set of high fuzzy utility itemsets (HFUs) in QDB. The main phases of the TPFU algorithm consist of two phases, (1) finding high fuzzy utility upper-bound itemsets and (2) finding high fuzzy utility itemsets. The key two phases of the TPFU algorithm are executed and described as follows.In the first phase, when the input data are fed, the quantitative value vyzof each item izin each transaction Transyis converted to a fuzzy set fyz(Lines 01–03), and then the maximal transaction fuzzy utility (mtfuy) of each transaction Transyin QDB is first found by the maximal fuzzy utility mfuyzof each item izin Transy(Lines 04–08). Next, the fuzzy utility upper-bounds (fuub) of all distinct fuzzy terms in QDB are calculated (Lines 09–11), and the sets of high fuzzy utility upper-bound 1-itemsets (HFUUB1) are found by their fuub values (Lines 12–14). For now, the level-wise technique is adopted to generate candidate fuzzy (r+1)-itemsets in the next pass by the current set of HFUUBr(Line 16), and the transactions in QDB are scanned to calculate and find the fuub value of each candidate (r+1)-itemset (Line 17). After that, the set of high fuzzy utility upper-bound (r+1)-itemsets (HFUUBr+1) are found by their fuub values (Line 18). The above process (Lines 16–18) is repeatedly done until no candidate (r+1)-itemsets can be generated by the current set of HFUUBr(Line 19).Next in the second phase, the data scan is executed once to find the actual fuzzy utility values of all itemsets in all HFUUB sets (Line 20). Finally, all the high fuzzy utility itemsets (HFUs) can be found by their fuub values, and the final set of all HFUs are outputted as users’ auxiliary information in making decisions (Lines 21–22).In this section, an example is given to show how the proposed algorithm can find high fuzzy utility itemsets from a quantitative transaction database. Assume there are 10 transactions shown in Table 1 for mining, and there are four items in the transactions, respectively denoted as A to D. Also, assume the profit value of each item is shown in Table 2, and the same membership function with three fuzzy regions: Low, Middle, and High, is assumed for the four items to simplify and describe the problem of the fuzzy utility mining. Moreover, the minimum fuzzy utility threshold λ is set as 25. The proposed algorithm proceeds as follows to find high fuzzy utility itemsets from the quantitative transaction data in Table 1.The quantity value of each item in each quantitative transaction is first converted into the corresponding a fuzzy set according to the membership functions of the items (Lines 01–03 in Fig. 2). Take the first quantitative transaction Trans2 in Table 1 as an example. The transaction Trans2 includes three items, A, C, and D, and their quantity values are 3, 1 and 1, respectively. Also, the same membership function for the three items, A, C, and D is given in Fig. 1. According to the membership function in Fig. 1, the quantity values of the three items in Trans2 can be then converted into the three fuzzy sets, (0.8/A.Low+0.2/A.Middle+0/A.High), (1/C.Low+0/C.Middle+0/C.High), and (1/D.Low+0/D.Middle+0/D.High), respectively. The corresponding fuzzy set of the second transaction Trans2 can be then consisted of (0.8/A.Low+0.2/A.Middle+0/A.High), (1/C.Low+0/C.Middle+0/C.High), and (1/D.Low+0/D.Middle+0/D.High). All other quantitative transactions in Table 1 can be similarly processed. After that, the results for the fuzzy sets of items of all transactions in Table 1 are then showed in Table 3. Note that “L”, “M”, and “H” in Table 3 are simplified as “Low”, “Middle”, and “High”.For each transaction in Table 3, the fuzzy utility of each fuzzy region for each item in the transaction can be found (Lines 04–08 in Fig. 2). Take the item A in the second transaction Trans2 in Table 3 as an example. The quantity of the item A in Trans2 is 2, and its profit is 1. In addition, the membership values of the three fuzzy regions (A.Low, A.Middle, and A.High) of the item A, are 0.8, 0.2, and 0, respectively. The fuzzy utility values of the three regions of A in Trans2 can be then calculated as 0.8*2*1 (=1.6), 0.2*2*1 (=0.4), and 0*2*1 (=0). The same process can be done for all the other items in the second transaction Trans2. The results for the corresponding fuzzy utility values of fuzzy regions of all items in Trans2 are showed in Table 4.Next, the maximal transaction fuzzy utility of the transaction can be found. Continuing the example of the second transaction Trans2 in Table 4, the maximal fuzzy utility values in fuzzy utility of regions of the three items A, C, and D are found as 1.6, 5, and 3. The maximal transaction fuzzy utility of Trans2 can be calculated as 1.6+5+3, which is 9.6. All the other transactions in Table 3 can be similarly processed. The results for maximal transaction fuzzy utility (mtfu) values of all transactions in Table 3 are shown in Table 5.For each possible fuzzy terms in Table 5, the fuzzy utility upper-bound of the fuzzy item are found (Lines 09–11 in Fig. 2). Take the fuzzy term A.Low in Table 5 as an example. The fuzzy term, A.Low, appears in the two transactions, Trans2 and Trans8, and the maximal transaction fuzzy utility values of the two transactions are all 9.6. The fuzzy utility upper-bound of A.Low can then be calculated as 9.6+9.6, which is 19.2, and the A.Low and its upper-bound value are put in the set of candidate 1-itemsets, as shown in Table 6. All the other fuzzy items in Table 5 can be processed in the same way. The results for the fuzzy utility upper-bounds (fuub) of all fuzzy terms in the set of C1 are shown in Table 6.The high fuzzy utility upper-bound 1-itemsets (HFUUB1) are found from the set of candidate 1-itemsets (C1) (Lines 12–14 in Fig. 2). Take the fuzzy 1-itemset {B.Low} in Table 6 as an example. The fuzzy utility upper-bound values of {B.Low} in Table 6 are found as 37.8, and the minimum fuzzy utility threshold λ is set at 25. For the fuzzy itemset {B.Low}, since its fuzzy utility upper-bound is larger than or equal to the minimum fuzzy utility threshold, it is put in the set of high fuzzy utility upper-bound 1-itemsets (HFUUB1). The same process can be executed for all the other 1-itemsets in Table 6. The results for the sets of all high fuzzy utility upper-bound 1-itemsets (HFUUB1) are showed in Table 7.The variable r is currently set at 1, where r is used to represent the number of items in the current candidate fuzzy itemsets to be processed (Line 15 in Fig. 2).In this example, thirteen candidate fuzzy utility 2-itemsets can be generated from the set HFUUB1 as follows: {A.Middle, B.Low}, {A.Middle, C.Low}, {A.Middle, D.Low}, {A.Middle, D.Middle}, {A.High, B.Low}, {A.High, C.Low}, {A.High, D.Low}, {A.High, D.Middle}, {B.Low, C.Low}, {B.Low, D.Low}, {B.Low, D.Middle}, {C.Low, D.Low} and {C.Low, D.Middle} (Line 16 in Fig. 2). Note that there is a constraint for each valid fuzzy utility itemset. That is, it has to be different for all items without fuzzy regions in a fuzzy itemset. For example, the fuzzy utility 2-itemset {A.Middle, A.High} is not a valid one, but {A.Middle, B.Low} is.The fuzzy utility upper-bound (fuub) values of the candidate itemsets to be processed can be found in the set of transactions in Table 5 (Line 17 in Fig. 2). Take the candidate fuzzy utility 2-itemset {A.Middle, C.Low} as an example. The candidate itemset appears in the four transactions, Trans2, Trans4, Trans6, and Trans8, and the maximal transaction fuzzy utility values of the four transactions are 9.6, 14.6, 16, and 9.6, respectively. The fuzzy utility upper-bound of the candidate 2-itemset can then be calculated as 9.6+14.6+16+9.6, which is 49.8. The results for the fuzzy utility upper-bound values of all candidate 2-itemsets are shown in Table 8.The high fuzzy utility upper-bound 2-itemsets (HFUUB2) are found from the set of candidate 2-itemsets (C2) (Line 18 in Fig. 2). The process is the same as that mentioned in STEP 4. In this example, there are eight high fuzzy utility upper-bound 2-itemsets (HFUUB2) in the set of C2, which their fuzzy utility upper-bounds satisfy the minimum fuzzy utility threshold (=25), as shown in Table 9.STEP 10: In this example, since set HFUUB2 is not null, r is incremented to 2 and STEPs 6–10 are repeated (Line 19 in Fig. 2). The whole mining task can be terminated until no candidate itemsets can be generated in the next pass.The actual fuzzy utility (afu) of each itemset in the set of all high fuzzy utility upper-bound itemsets found in the first phase can be found (Line 20 in Fig. 2). Take the candidate fuzzy utility 2-itemset {A.Middle, C.Low} as an example. The candidate itemset appears in the four transactions, Trans2, Trans4, Trans6, and Trans8, the membership values of the fuzzy item A.Middle in the four transactions are 0.2, 0.6, 0.8, and 0.2, and the values of C.Low are all 1. The actual fuzzy utility of {A.Middle, C.Low}, the minimum membership value of all items in the itemset in each transaction has to be first found. Continuing the example, take the second transaction Trans2 in Table 5 as an example. Since the membership values of the two fuzzy items in Trans2 are 0.2 and 1, respectively, the minimum value of the two membership values is 0.2. In addition, the quantities of the two items, A and C, in the transaction in Table 1 are 2 and 1, and the profits of the two items A and C in Table 2 are found as 1 and 5. Then, the fuzzy utility of the itemset {A.Middle, C.Low} in Trans2 can be calculated as 0.2*(2*1+1*5), which is 1.4. The same process can be done for the other three transactions with the candidate 2-itemset {A.Middle, C.Low}, Trans4, Trans6, and Trans8. Then, the result values of the three transactions are 7.8, 9.6, and 1.4. Thus, the actual fuzzy utility of the itemset {A.Middle, C.Low} can be calculated as 1.4+7.8+9.6+1.4, which is 20.2. All the other twelve candidate 2-itemsets in the set of C2 can be processed in the same fashion. The results for the actual fuzzy utility values of all candidate 2-itemsets are showed in Table 10.All high fuzzy utility itemsets are found in Table 10 (Line 21 in Fig. 2). Take the fuzzy itemset {B.Low} in Table 10 as an example. The actual fuzzy utility of {B.Low} in Table 10 is 28.8, and the minimum fuzzy utility threshold λ is set at 25. Thus, {B.Low} can be put in the set of high fuzzy utility itemsets (HFU) because its actual fuzzy utility is larger than or equal to the minimum fuzzy utility threshold. The same process can be done for all the other itemsets in Table 10. After the step, the results for all high fuzzy utility itemsets (HFU) are showed in Table 11.In this example, the four high fuzzy utility itemsets in Table 11, {B.Low}, {C.Low}, {A.Middle, D.Low}, and {C.Low, D.Low}, are output as the decision makers’ auxiliary information (Line 22 in Fig. 2).As this example shows, the proposed upper-bound model can be used to effectively reduce the search space of find high fuzzy utility itemsets, and then all high fuzzy utility itemsets in a quantitative database can be found by using the proposed TPFU algorithm.A series of experiments were conducted to compare the performance of the proposed two-phase fuzzy utility algorithm (named TPFU) for various parameter values. The algorithm was implemented in J2SDK 1.6.0 and executed on a PC with a 3.30GHz CPU and 1GB memory.To show the practical performance, a real public dataset (called BMS-POS) [9] was used in the experiments. This dataset was used in the KDDCUP 2000 competition, and it collected several years of point-of-sale data from a large electronics retailer, making it very suitable as a test dataset in the experiments. The details of this dataset were follows. Each transaction consisted of all the product categories purchased by a customer at one time. There were 515,597 transactions in this dataset and the total number of different items was 1657. In addition, the maximal length of a transaction was 164 and the average length of the transactions was 6.5.On the other hand, the public IBM data generator was also used in our experiments to produce the data sets [15]. Since our purpose was to find out high fuzzy utility itemsets, we thus developed a simulation model, which was similar to that used in Liu et al.’s study [20], to generate the quantities of the items in the transactions. Each quantity ranged among 1–10 according to the described way in [20]. Moreover, for each dataset generated, a corresponding utility table was also produced, in which a profit value using a log normal distribution in the range from 0.01 to 10.00 was randomly assigned to an item according to Liu et al.’s study [20]. The default values of parameters used in the experiments are listed in Table 12, and Fig. 3showed the profit-value distribution of all the items generated by the simulation model in the utility table. Note that uses can set a percentage value of the minimum fuzzy utility, and then the total utility of a database multiplied by the user-specified percentage value is the corresponding actual minimum fuzzy utility value (min_futil).In the experiments, we assumed that all items had the same membership function, in which there are three fuzzy regions, Low, Middle, and High, as shown in Fig. 4.Experiments were first conducted on the synthetic datasets to evaluate the difference in the number of high fuzzy utility itemsets (HFUs) and high utility itemsets (HFs) under various parameters. Fig. 5(a)–(e) showed a comparison of the numbers of HFUs and HUs for the synthetic datasets for various min_fuil, FR, T, N, and D, respectively. Note that FR represents the number of the fuzzy regions in a membership function.It could clearly be observed from the figures that the number of HFUs is less than that of HUs in various parameters. The main reason is that our proposed fuzzy utility function is extended from both the original utility function and minimum operator concept. That is, according to Definitions 6 and 7, the minimum value of fuzzy regions of all fuzzy terms in a fuzzy utility itemset in a transaction is multiplied by the original utility value of the itemset without consideration of minimum operator concept. Thus, the fuzzy utility of an itemset is less than the original utility value of that itemset. However, although the fuzzy utility of an itemset is less than the original utility value of that itemset, more useful quantitative information of fuzzy terms in that fuzzy utility itemset could be provided users because of its simplicity and comprehensibility when compared with itemsets in the traditional utility mining without consideration of the fuzzy set theory. Accordingly, the effectiveness of the mined high fuzzy utility itemsets can be showed in the figures.Experiments were then on the synthetic datasets to evaluate the execution efficiency of the TPFU algorithms under parameter settings. Fig. 6(a)–(e) showed the execution efficiency of the proposed TPFU for the synthetic datasets under various varied min_futil, FR, N, T, and D, respectively.As shown the figures, it could be observed that the execution efficiency of the proposed TPFU could still keep good efficiency to handle the problem of fuzzy utility mining with the help of the proposed upper-bound model. The reason for this is that based on the model, the proposed TPFU could effective reduce the search space of finding fuzzy utility itemsets in comparison with the full search space of itemsets. Hence, the proposed TPFU could perform the fuzzy utility mining task efficiently under various parameter settings.In the experiment, the real dataset BMS-POS[9] was then used to evaluate the performance of the proposed TPFU algorithm. Fig. 7showed the number of two kinds of itemsets and execution efficiency of the TPFU for different thresholds, varying from 1% to 5%, respectively. Note that the min_futil value in Fig. 7(b) is set s the value of 1%, and the membership function with three fuzzy regions (as shown in Fig. 4) is set assumed in the two figures.As shown in the figures, the number of the mined HFUs is less than that of the traditional HUs, and the proposed TPFU has stable efficiency in mining. The reason was the same as that mentioned in Sections 5.2 and 5.3. Accordingly, the TPFU algorithm has good performance on the real BMS-POS dataset in terms of effectiveness of HFUs and execution efficiency.

@&#CONCLUSIONS@&#
This work presents a new fuzzy utility function and an efficient two-phase fuzzy utility mining algorithm, named TPFU, to find high fuzzy utility itemsets in quantitative transaction databases. Different from the existing fuzzy utility algorithms, in particular, the defined fuzzy utility function in the TPFU considers not only the quantities and profits of items in transactions but also the common degrees of fuzzy terms in an itemset by using the concept of fuzzy minimum operator. In addition, an effective upper-bound model is developed to form the downward-closure property in fuzzy utility mining problem, and then all high fuzzy utility itemsets can be found in databases by using the proposed TPFU. The experimental results reveal the proposed TPFU algorithm based on the proposed upper-bound model can keep good performance in mining under different parameter settings when working with synthetic datasets and a public real dataset, BMS-POS.In the future, we aim to apply the proposed approach to other practical applications, such as data streams. In addition, how to further improve the execution efficiency for mining high fuzzy utility itemsets is another interesting topic, such as the development of tree-based techniques. Besides, we will also attempt to address the maintenance problem of high fuzzy utility mining when transactions are inserted, deleted or modified.