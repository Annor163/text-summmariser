@&#MAIN-TITLE@&#
Predicting ad click-through rates via feature-based fully coupled interaction tensor factorization

@&#HIGHLIGHTS@&#
We address CTR prediction by a novel tensor factorization model named FCTF.We incorporate all types of information into FCTF model to relieve data sparsity.We give the relationship between FCTF and PITF, Tucker, CD decomposition.We evaluate our model and algorithm on real-world bidding log data.

@&#KEYPHRASES@&#
Click through rate prediction,Tensor factorization,Feature-based,Fully coupled interaction,Real-time bidding,Demand-side platform,

@&#ABSTRACT@&#
In the real-time bidding (RTB) display advertising ecosystem, when receiving a bid request, the demand-side platform (DSP) needs to predict the click-through rate (CTR) for ads and calculate the bid price according to the CTR estimated. In addition to challenges similar to those encountered in sponsored search advertising, such as data sparsity and cold start problems, more complicated feature interactions involving multi-aspects, such as the user, publisher and advertiser, make CTR estimation in RTB more difficult. We consider CTR estimation in RTB as a tensor complement problem and propose a fully coupled interactions tensor factorization (FCTF) model based on Tucker decomposition (TD) to model three pairwise interactions between the user, publisher and advertiser and ultimately complete the tensor complement task. FCTF is a special case of the Tucker decomposition model; however, it is linear in runtime for both learning and prediction. Different from pairwise interaction tensor factorization (PITF), which is another special case of TD, FCTF is independent from the Bayesian personalized ranking optimization algorithm and is applicable to generic third-order tensor decomposition with popular simple optimizations, such as the least square method or mean square error. In addition, we also incorporate all explicit information obtained from different aspects into the FCTF model to alleviate the impact of cold start and sparse data on the final performance. We compare the performance and runtime complexity of our method with Tucker decomposition, canonical decomposition and other popular methods for CTR prediction over real-world advertising datasets. Our experimental results demonstrate that the improved model not only achieves better prediction quality than the others due to considering fully coupled interactions between three entities, user, publisher and advertiser but also can accomplish training and prediction with linear runtime.

@&#INTRODUCTION@&#
With the emergence and development of spot markets, real-time bidding (RTB) advertising has become an increasingly important way for publishers to sell their ad inventory. In the RTB-enabled display advertising ecosystem (see Fig. 1), there are three major entities: the supply-side platform (on behalf of publishers), ad exchange and demand-side platform (on behalf of advertisers). The arrows in Fig. 1 represent the path an advertiser’s dollar could take to reach a publisher. Publishers supply advertising inventory to advertisers through ad exchange systems. Ad exchanges aggregate advertising inventory from multiple publishers and sell ads to several demand-side platforms (DSPs) via real-time auction or bidding. DSPs help many advertisers manage their display advertising campaigns simultaneously across multiple direct ad exchanges and employ specialized technology solutions to reach the most receptive online audiences in the right context, who will then hopefully click their displayed ads and eventually take a desired action.The display of an ad on a webpage to a user is considered an ad impression. The life of a programmatic RTB ad impression is illustrated in Fig. 2. When a user clicks a hyperlink to a publisher’s webpage, besides producing and showing high-quality content to the user, the publisher’s main task is to sell its ad inventory to advertisers for monetization. If the publisher decides to monetize the ad impression through RTB, the publisher would pass the ad slot information to an ad exchange through a supply-side platform (SSP), and then the ad exchange composes a bid request and sends it to several DSPs. When receiving a bid request, a DSP needs to use bidding algorithms to decide whether to bid for the ad impression and what the appropriate bidding price is and then reply to the ad exchange in real-time. The impression will be sold to the highest bidder in the public auction. The publisher’s web server requests the advertiser’s ad server for the winning ad creative and displays it on their webpage. Finally, the user will see the ad on the publisher’s webpage. Note that the entire life of a programmatic RTB ad impression, from a user clicking a hyperlink to the publisher’s webpage to a final ad impression, must be accomplished during a very short interval of time, such as 100ms.From the perspective of a DSP, to achieve optimal return on investment (ROI), each bid price must be lower than the expected cost-per-impression (eCPM) of that impression. If cost per click (CPC) is the pricing model between DSPs and advertisers, eCPM is equal to the click-through-rate (CTR) for the impression multiplied by the CPC (or click value for advertisers). Therefore, the eCPM directly depends on how well the CTR can be estimated. If the CTR is overestimated, bid prices will be higher than what they should be, and the campaign budget of advertisers will be wasted on useless impressions. Conversely, if these quantities are underestimated, high-value impressions that may have led to actions will be missed, and the campaign will under-deliver (Lee et al. 2012).In this paper, we focus on the DSP’s approach for CTR estimation for ad impressions in real-time bidding systems. We consider the CTR prediction problem as a recommendation problem, where ads must be recommended for appropriate users and collaborative filtering techniques are employed to handle this. However, compared with recommender systems or sponsored search advertising, there are at least three new challenges specific to this problem. Firstly, more complicated interactions between multiple features primarily involving at least three different aspects (the user, publisher and advertiser) greatly increase the difficulty of CTR prediction in RTB. This is because a user’s response to an impression relies on how well the topic of the ad matches the user’s requirements, as well as the quality of the publishing context. Publishing context involves the size, position and format of an ad slot, the content of the surrounding webpage, etc. For example, if an ad is outside the range of a user’s vision, even if the content of the ad exactly satisfies the user’s taste, the probability of the ad being clicked will still be dramatically reduced. Secondly, RTB compels the DSP to reply to the bid request in real-time. Therefore, the DSP must select a time-saving prediction algorithm for ad CTR to ensure its timely response. Lastly, the data in RTB being more extremely sparse and imbalanced than in other systems makes it more difficult to achieve better optimal prediction results. Data statistics show that the average CTR for desktop display advertising in practice is usually approximately 0.1%. This quantity is not only far less than that in recommendation datasets, such as the approximate 4.5% in MovieLens or 1.2% in Netflix (Lü et al. 2012), but it is also far lower than the average click-through rate on AdWords paid search ads (2%) according to Google. Factorization models provide a powerful technique to make use of explicit data to overcome the sparsity of the implicit data. Popular latent factor models based on a matrix for collaborative filtering have been successfully used to address the recommendation problem (Koren et al. 2009; Chen et al. 2012) and even ad CTR prediction for sponsored search (Wu et al. 2012). In typical recommender systems or sponsored search advertising, the relations that need to be learned are usually binary ones between users and candidate items (ads). However, for display advertising in RTB, the complicated interactions are ternary relations between users, publishers and ads, as shown in Fig. 3. Both the matrix factorization model and linear regression model widely used in industrial systems are weak in regard to learning these complicated interactions. Therefore, factorization models based on the Tucker decomposition model (TD), such as higher order singular value decomposition (HOSVD) (Symeonidis 2008) and ranking tensor factorization (Rendle et al. 2009), which have been used to exploit ternary relations between users, items and tags for personalized tag recommendation, are skilled in learning these complicated interactions between more than three aspects. However, the drawback of using the full TD is that the model equation is cubic in the factorization dimension. This makes it unfeasible for TD models to be used with a high factorization dimension for midsized and large datasets (Rendle and Schmidt-Thieme 2010). Thus, it is difficult to apply TD models directly to address CTR estimation in real-time for RTB. There are other tensor decomposition models, such as the canonical decomposition (CD) and the pairwise interaction tensor factorization (PITF) (Rendle and Schmidt-Thieme 2010), that have linear runtime complexity for the number of factorization dimensions, but the performance of the CD model for solving our problem is not outstanding, and the PITF model depends on specific optimization criteria and particular data interpretations that are not suitable for our circumstances. To address these problems, we propose a novel tensor factorization named fully coupled interaction tensor factorization (FCTF), which is based on the Tucker decomposition model. Because it considers fully coupled interactions between three entities (the user, publisher and advertiser), FCTF not only has linear runtime complexity for training and prediction but also has more promising performance than traditional factorization models.The rest of the paper is organized as follows:We discuss related work in the next section. In Section 3, we give the notations and formulate the task performed in our system. Section 4 gives the specific implementation of tensor factorization models and explains the relationship between FCTF and these approaches. In Section 5, we propose the featured-based FCTF model, which incorporates side information to relieve the impact of sparse data on the final performance. Experimental results and analyses are given in Section 6, and in the last section, we summarize and outline the possible future work in this research direction.

@&#CONCLUSIONS@&#
In this paper, we examine the ad CTR prediction problem in RTB for DSPs. We address the issue by presenting the fully coupled interaction model (FCTF) based on the Tucker decomposition (TD) model. The FCTF model has three major advantages for addressing this problem. Firstly, FCTF is a third-order tensor factorization model that can effectively capture complicated ternary relations between three players: the user, publisher and advertiser in RTB. Instead of training only one latent matrix for each object, FCTF learns two different latent matrices, each of which is trained by interacting with each of another two objects. Therefore, without the loss of attempting to compromise as in TD or CD, FCTF achieves better performance than other TD-based models such as TD and CD in real-world datasets. Furthermore, our model also shows relatively stable performance for both diverse numbers of factors and different sizes of the training dataset. Secondly, the runtime complexity of the FCTF equation is linear for the number of factorization dimensions, which makes it feasible for high dimensions even when fulfilling real-time tasks. Lastly, compared with PITF, which is accompanied by the BPR algorithm and a specific data interpretation, FCTF is suitable for generic third-order tensor factorization tasks regardless of what optimization strategy is applied, including simple methods such as a quadratic loss function or logarithmic loss function.Moreover, we incorporate all types of side information related to multi-aspects into the FCTF model to represent users, publishers and ads. This approach enormously alleviates the issue of the sparsity of training data and simultaneously overcomes the cold-start problem to a certain extent.In future work, to relieve the impact of the imbalance of positive and negative samples in the training dataset on the final result, we will attempt to apply a pairwise learning algorithm to train FCTF to optimize the AUC directly. We also want to study how the preferences of users change over time and find the proper size for the training dataset.