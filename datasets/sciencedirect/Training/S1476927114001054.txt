@&#MAIN-TITLE@&#
newDNA-Prot: Prediction of DNA-binding proteins by employing support vector machine and a comprehensive sequence representation

@&#HIGHLIGHTS@&#
Give a comprehensive sequence representation.Establish our prediction model basing on support vector machine classifier.Compared with the relevant prediction methods in two independent test datasets.

@&#KEYPHRASES@&#
DNA-binding proteins,Features,Feature selection methods,SVM,ROC,

@&#ABSTRACT@&#
Identification of DNA-binding proteins is essential in studying cellular activities as the DNA-binding proteins play a pivotal role in gene regulation. In this study, we propose newDNA-Prot, a DNA-binding protein predictor that employs support vector machine classifier and a comprehensive feature representation. The sequence representation are categorized into 6 groups: primary sequence based, evolutionary profile based, predicted secondary structure based, predicted relative solvent accessibility based, physicochemical property based and biological function based features. The mRMR, wrapper and two-stage feature selection methods are employed for removing irrelevant features and reducing redundant features. Experiments demonstrate that the two-stage method performs better than the mRMR and wrapper methods. We also perform a statistical analysis on the selected features and results show that more than 95% of the selected features are statistically significant and they cover all 6 feature groups. The newDNA-Prot method is compared with several state of the art algorithms, including iDNA-Prot, DNAbinder and DNA-Prot. The results demonstrate that newDNA-Prot method outperforms the iDNA-Prot, DNAbinder and DNA-Prot methods. More specific, newDNA-Prot improves the runner-up method, DNA-Prot for around 10% on several evaluation measures. The proposed newDNA-Prot method is available at http://sourceforge.net/projects/newdnaprot/

@&#INTRODUCTION@&#
DNA-binding proteins are functional molecules in a cell and play an important role in a variety of biological processes, i.e., transcription regulation, DNA replication, DNA packaging, DNA repair and DNA rearrangement (Gao and Skolnick, 2009). Moreover, proteins that interact with specific DNA sequences may be a potential therapeutics for genetic diseases. At present, both experimental and computational techniques have been developed for identification of the DNA-protein interactions. Although, the experimental techniques, including filter binding assays (Cajone et al., 1989), ChIP-chip (Buck and Lieb, 2004), genetic analysis (Freeman et al., 1995) and X-ray crystallography (Chou et al., 2003) provide atomic-level perspective on DNA-protein interaction, they are time-consuming and expensive. Therefore, there is an urgent need to develop computational methods that identify DNA-binding proteins with high success rates (Gromiha and Nagarajan, 2013). Presently, the in silico methods are mainly categorized into two class: methods based on protein structures (Ahmad and Sarai, 2004; Zhao et al., 2010; Tjiong and Zhao, 2007; Stawiski et al., 2003; Szilagyi and Skolnick, 2006) and methods based on primary sequence (Cai and Lin, 2003; Robert and Hui, 2010; Huang et al., 2011; Kumar et al., 2007; Shao et al., 2009; Lin et al., 2011). Although, the structure-based methods achieve higher accuracy when compared with the sequence-based techniques, they are not applicable for high-throughput annotation of DNA-binding proteins as structures are only determined for a small fraction of known proteins. Since it is widely recognized that primary sequence determines the tertiary structure which further determines the function of a protein (Cai and Doig, 2004), majority of the computational methods took primary sequence as the only input. The sequence-based methods mainly include two steps: firstly, transforms the primary sequence into a fixed number of numerical features, i.e., the composition of the amino acids; second, choose a machine learning algorithm and build a computation model for prediction. Previously, dozens of machine-learning algorithms such as support vector machine (SVM) (Zhao et al., 2010; Tjiong and Zhao, 2007; Brown and Akutsu, 2009; Wang et al., 2010; Xiong et al., 2011; Zou et al., 2013), artificial neural network (ANN) (Ahmad et al., 2004; Keil et al., 2004; Ahmad et al., 2009), random forest (Cai and Lin, 2003; Nimrod et al., 2010; Wang et al., 2009), naive Bayes (Yan et al., 2006) and nearest neighbor (Qian et al., 2006) have been proposed which performs prediction of DNA-binding proteins. Among these algorithms, the SVM is especially widely implemented.The performance of SVM is largely dependent on the quality of the features (Liu et al., 2008). Although, plenty of feature representation and selection methods were proposed for protein sequence (Fang et al., 2008; Chou, 2011; Yuan et al., 2010; Song et al., 2008) and these methods were systematically surveyed (Nanni et al., 2010; Zhang et al., 2005), the underlying principle of protein-DNA interaction is still largely unknown. To this end, we propose a comprehensive feature representation, including the sequence information, evolutionary profiles, predicted secondary structural, predict relative solvent accessibility (RSA) information, physicochemical properties, and biological function information. Moreover, we employ three feature selection methods, mRMR, wrapper and two-stage (mRMR and wrapper), to remove the irrelevant features and reduce redundancy among the features. The proposed method outperforms existing sequence-based methods including the DNAbinder (Kumar et al., 2007), iDNA-Prot (Lin et al., 2011), DNA-Prot (Kumar et al., 2009) which either have a web server or provide standalone program. The framework of the proposed DNA-binding predictor is given in Fig. 1.The training set, namely DNAdset, contains 231 DNA-binding and 231 non-binding protein chains or domains which were obtained from a union of datasets used in previously related studies (Zou et al., 2013; Gao et al., 2012; Fang et al., 2008). By employing the CD-HIT program (Huang et al., 2010), any pair of the protein chains have a sequence similarity less than 40%.Additionally, we build an independent test set, namely DNAiset, to perform an independent evaluation of the predictive model. The test set includes 97 DNA-binding proteins and 192 non-DNA binding proteins. The DNA-binding proteins are culled from PDB by keyword searching (released on 2014-06–01 and later) while the non-binding proteins were culled by Lin et al. (2011). We employ the CD-HIT (Wang and Dunbrack, 2003Huang et al., 2010) program to remove the sequence similarity between DNAiset and DNAdset. Any sequence from DNAiset has a sequence similarity less than 30% to a sequence from DNAdset.Many machine learning algorithms perform better when the number of positive samples is comparable to the number of negative samples. To this end, the numbers of DNA-binding proteins and non-binding proteins are equivalent in DNAdset and comparable in DNAiset. However, in real situation, the fraction of DNA-binding proteins is small when compared with the fraction of non-binding proteins. To this end, DNArset, which simulates the ratio between DNA-binding proteins and non-binding proteins in cellular environment, is created. DNArset contains 97 DNA-binding proteins taken from DNAiset and 1500 non-binding proteins culled by Kumar et al. (2007).The performance of a computational model is largely dependent on the quality of the feature representation (Chou, 2011; Brameier et al., 2006). In this study, we generate six groups of features that are derived from primary sequence, evolutionary information, predicted secondary structure, predicted RSA values (Faraggi et al., 2012), physicochemical properties and functional information.This group of features is directly calculated from primary sequence.•SeqLen is the length of a sequence (1 feature).Composition vector: CVi=AAi/SeqLen represents the percentage of the ith type of AA in the sequence (20 features).The first and second order composition moment vector:CMVik=∑i,j=1xinijk/Πd=1k(N−k), where nijrepresents the jth position of the ith type of AA, niis the frequency of ith type of AA in the sequence, and k=1, 2 is the order of the CMV.For an input protein sequence, its position-specific scoring matrix (PSSM) profile can be calculated from alignment profile generated by PSI-BLAST (Altschul et al., 1997). PSSM score indicates the conservation of a given AA position in the query sequence among its homologues (Wu and Zhang, 2008). Since functional sites, including DNA and RNA-binding residues, are more conserved than other residues, it was proved that PSSM profile are valuable in prediction of DNA-protein interactions (Kumar et al., 2007; Ahmad and Sarai, 2005).The PSI-BLAST program generates two position specific scoring matrices, which are conservation scores and probability of occurrence of a given AA respectively. The two matrices are denoted as PSSMconslmand PSSMproblmrespectively, where l=1,2,…,SeqLen represents the position in the sequence and m=1,2,…,20 denotes the 20 substitution positions that correspond to the 20 AA types.•Ach_CS_{AAi}=∑l=1SeqLenif AA(l)=AAi, then PSSMconslielse 0/SeqLen, sum of all normalized PSSMconslmvalues (“Ach_CS” stands for achieved conservation scores), where l includes only positions of AAiand m=AAi(20 features). The other 2 features are the sum of Ach_CS_{AAi} and the sum of Ach_CS_{AAi} if AA locates on the solvent surface.Max_CS_{AAi}=∑l=1SeqLenif AA(l)=AAi, thenmax⁡i=120(PSSMconsli) else 0/SeqLen sum of maximal, over m, PSSMconslmvalues, where l includes only positions of AAi, divided by the sequence length (20 features). The other 2 features are the sum of Max_CS_{AAi} and the sum of Max_CS_{AAi} if AA locates on the solvent surface.Max–Ach_CS_{AAi}=∑l=1SeqLenif AA(l)=AAi, then [max⁡i=120(PSSMconsli)−PSSMconsli] else 0/SeqLen, sum of differences between maximal PSSMconslmand PSSMconslivalues where l includes only positions of AAiand i=AAi, divided by the sequence length (20 features). The other 2 features are the sum of Max−Ach_CS_{AAi} and the sum of Max–Ach_CS_{AAi} if AA locates on the solvent surface.Ach_Prob_{AAi}=∑l=1SeqLenif AA(l)=AAithen PSSMBproblielse 0/SeqLen, sum of all normalized PSSMproblmvalues, where l includes only positions of AAiand i=AAi, divided by the sequence length (20 features). The other 2 features are the sum of Ach_Prob_{AAi} and the sum of Ach_Prob_{AAi} if AA locates on the solvent surface.Max_Prob_{AAi}=∑l=1SeqLenif AA(l)=AAithenmax⁡i=120(PSSMprobli) else 0/SeqLen, sum of maximal, over m, PSSMproblmvalues, where l includes only positions of AAi, divided by the sequence length (20 features). The other 2 features are the sum of Max_Prob_{AAi} and the sum of Max_Prob_{AAi} if AA locates on the solvent surface.Max–Ach_prob_{AAi}=∑l=1SeqLenif AA(l)=then [max⁡i=120(PSSMconsli)−PSSMconsli] else 0/SeqLen, sum of differences between maximal PSSMproblmand PSSMproblivalues where l includes only positions of AAiand i=AAi, divided by the sequence length (20 features). The other 2 features are the sum of Max–Ach_{AAi}and the sum of Max−Ach_{AAi} if AA locates on the solvent surface.CSSeq_{AAi}=SeqLen, sum of normalized PSSMconslmvalues where l=1,2,…,SeqLen and m=AAi, divided by the sequence length (20 features). The other 2 features are the sum of CSSeq_{AAi} and the sum of CSSeq_{AAi} if AA locates on the solvent surface.Seq_Prob_{AAi}=∑l=1SeqLenPSSMprobli/SeqLen, sum of normalized PSSMconslmvalues where l=1,2,…,SeqLen and m=AAi, divided by the sequence length (20 features). The other 2 features are the sum of Seq_Prob_{AAi} and the sum of Seq_Prob_{AAi} if AA locates on the solvent surface.Ent_{AAi}=−∑l=1SeqLen[PSSMprobli﻿×log2﻿(PSSMprobli)], entropy of PSSMproblmvalues, for l=1,2,…,SeqLen and m=AAi(20 features). The other 22 features contain the average entropy per position in sequence (which is equivalent to conservation) (1 feature), the average entropy per position in sequence if all AA locates on the solvent surface and average entropy per position in sequence for each AA type (20 features).Secondary structure is generated by the PSIPred program (McGuffin et al., 2000). PSIPred were successfully integrated into a number of computational methods that predict structural properties of proteins, i.e., structural class (Kurgan et al., 2008), beta-turns (Zheng and Kurgan, 2008), residue depth (Zhang et al., 2008), prediction fold (Reinhardt and Eisenberg, 2004) and contact orders (Song and Burrage, 2006).•Ach_Prob_{SSn}=∑l=1SeqLen⁡if AA(l)=SSnthen PMlielse 0/SeqLen, sum of normalized PMlmvalues (which represents the probability matrix (PM) by predict secondary structure), where l includes only positions of SSn, which SSn={C,H,E}, divided by the sequence length and m=SSn(3 features).Content_{SSn}=count (AA1:AA1 predicted as SSn)/SeqLen, the number of residues predicted as SSnwhere l=1,2,…,SeqLen, divided by the sequence length (3 features). The other 3 features are generated by AAs on the surface using this formula, which represent content of AAs related to binding.SegCount_{E,H}_L{Li}=count (SEG:SEG(SSn) AND length(SEG≥Li)/∑SS∈{E,H}count (SEG:SEG(SS)), the number of helix or strand segments which contain at least Li=2,3,…,20 AAs divided by the total number of helix and strand segments in the input protein chain (38 features)SegCount_C_L{Li}=count (SEG:SEG(SSn) AND length(SEG≥Li)/∑SS∈{H,E,C}count (SEG:SEG(SS)), the number of coils which contain at least Li=2,3,…,20 AAs divided by the number of all segments in a protein (19 features).SegCount_{E,H}_P{Pi}=count (SEG:SEG(SSn) AND length(SEG≥Pi﻿×SegLen)/∑SS∈{E,H}count(SEG:SEG(SS)), the number of helix or strand segments which contain at least PiAAs where Pi=2,4,…,10% of the sequence length, divided by the total number of helix and strand segments in the input protein chain (10 features).SegCount_C_P{Pi}=count (SEG:SEG(SSn) AND length(SEG≥Pi﻿×SegLen)/∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of coil segments which contain at least PiAAs where Pi=2,4,…,10% of the sequence length, divided by the number of all segments (5 features).NormSegCount_{SSn}=count (SEG:SEG(SSn))/∑SS∈{H,E,C}count(SEG:SEG(SS)), the total number of SSnsegments divided by the total number of all secondary structure segments in the input protein chains (3 features).MaxSegCount_{SSn}=maxLen(SEG(SSn)), the maximal SSnsegment length (3 features).NormMaxSegCount_{SSn}=maxLen(SEG:SEG(SSn))/SeqLen, the maximal SSn, the maximal SSnsegment length divided by the sequence length (3 features).AvgSegCount_{SSn}=avgLen(SEG(SSn)), the average SSnsegment length (3 features).NormAvgSegLength_{SSn}=avgLen(SEG:SEG(SSn))/SeqLen, the average SSnsegment length divided by the sequence length (3 features).HH=count(HH), the number of helix–coil–helix motifs divided by the total number of the secondary structure segments in a protein (1 feature).EE=count(EE), the number of strand–coil–strand motifs divided by the total number of the secondary structure segments in a protein (1 feature).HE=count(HE)+count(EH), the number of strand–coil–helix or helix–coil–strand motifs by the total number of the secondary structure segments in a protein (1 feature).{HH,HE,EE}−L{Li}=count({HH,HE,EE}:LEN(Coil)≥Li)/∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of helix–coil–helix, helix–coil–strand/strand–coil–helix, or strand–coil–strand motifs which include at least Li=2,3,…,20 AAs residues in the middle coil, divided by the total number of the secondary structure segments in a protein (57 features).{HH,HE,EE}−L{Pi}=count({HH,HE,EE}:LEN(Coil)≥Pi﻿×SeqLen)/∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of helix–coil–helix, helix–coil–strand/strand–coil–helix, or strand–coil–strand motifs which include at least Pi=2,3,…,10% of a sequence length residues in the middle coil, divided by the total number of the secondary structure segments in a protein (15 features).MaxHCH=max(HC..H:count(H)), the maximal number of helices among all helix–coil–helix–coil…coil–helix motifs, i.e., the maximal number of helix segments separated only by coils (1 feature).MaxECE=max(EC..E:count(E)), the maximal number of helices among all strand–coil–strand–coil…coil–strand motifs, i.e., the maximal number of strand segments separated only by coils (1 feature).AvgHCH=avg(HC..(H))/∑SS∈{H,E,C}count(SEG:SEG(SS)), the average number of helices in all helix–coil–helix–coil…coil–helix motifs, divided by the total number of the secondary structure segments in a protein (1 feature).AvgECE=avg(EC..(E:count:(E))/∑SS∈{H,E,C}count(SEG:SEG(SS)), the average number of helices in all strand–coil–strand–coil…coil–strand motifs, divided by the total number of the secondary structure segments in a protein (1 feature).HCH_L{Li}=count(HC..H:count(H)≥Li)/∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of helix–coil–helix–coil…coil–helix motifs with more than Li=1,2,…,20 helices, divided by the total number of the secondary structure segments (19 features).HCH_P{Pi}=count(HC..H:count(H)≥Pi﻿×SeqLen)/∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of helix–coil–helix–coil…coil–helix motifs with more than Pi=2,4,…,10 of all helics in a protein, divided by the total number of the secondary structure segments (5 features).ECE_L{Li}∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of strand–coil–strand–coil…coil-strand motifs with more than Li=1,2,…,20 strands, divided by the total number of the secondary structure segments (19 features).ECE_P{Pi}=count(EC..E:count(E)≥Pi×SeqLen)/∑SS∈{H,E,C}count(SEG:SEG(SS)), the number of strand–coil–strand–coil…coil–strand motifs with more than Pi=2,4,…,10 of all helics in a protein, divided by the total number of the secondary structure segments (5 features).•Average RSA of the residues with AA type (20 features).Average RSA of the residues with secondary structure type {C,H,E} (3 features).It is widely recognized that physicochemical properties of AAs play an important role in protein folding and protein-DNA interaction. Experimental and theoretical studies have proposed a wide variety of properties for AAs. Even for the same property, it might be assigned to different values by different studies. Based on the analysis of Huang et al. (2010), we include nine physicochemical indices, see in Table 1. Several physicochemical properties in Table 1 have been employed in prediction of protein-DNA interaction (Shao et al., 2009; Fang et al., 2008) while several other properties, i.e., the flexibility property, are utilized for prediction of DNA-binding proteins for the first time. The correlation between protein flexibility and biological function of proteins has demonstrated a linkage between protein-DNA interaction and flexibility of the corresponding domain (Gryk et al., 1996).•Kα=1N∑i=1Nαiwhere α represents the corresponding physicochemical AA index; charge, pK-C, pK-(COOH), polarity (2), pK-N, pK-a (RCOOH) and normalized index were used, and these indexes values listed in the Table 1 (8 features).Anα=1N−n∑i=1N−nαiαi+n, where α defines the corresponding physicochemical AA index; hydrophobicity index (4) n=1, 2,...,6, flexibility (2) n=1, 2,...,6, Secondary structure (4) n=1, 2,...,6, and solvent accessibility (5) n=1, 2,...,6 were used (90 features).Acumnα=∑i=1N−n(∑j=1iαj)×(∑j=1i+nαj)/N−n, where α is the hydrophobicity index (4) with n=1, 2,...,6, flexibility (2) with n=1, 2,...,6, secondary structure (4) with n=1, 2,...,6, and solvent accessibility (5) with n=1, 2,...,6 (90 features).Hsuma=∑i=1Nαi, where α is the hydrophobicity index (4), flexibility (2), secondary structure (4), and solvent accessibility (5) (15 features).The last decade had witnessed a growing recognition that a large fraction of proteins are intrinsically or natively disorder proteins (Vuzman and Levy, 2012). Plenty of intrinsically (or natively) disordered proteins (IDRs) are associated with DNA-protein interactions and play a crucial role in the interactions by increasing the affinity and specificity of DNA binding (Vuzman and Levy, 2012; Zheng and Kurgan, 2008). The ability of IDRs to interact with DNA is due to the high content of charged residues in IDRs. In general, IDRs that interact with DNA are rich in positively charged residues and these residues are spatially clustered. The IUPred (Dosztanyi et al., 2005) method is employed to calculate the pairwise energy profile along the input AA sequence. The IUPred method generates a series of scores, which stands for energy values, ranging from 0 (completely ordered) to 1 (completely disordered). In order to produce the same number of features for protein sequences with varied length, we employ the CTD method, which was firstly proposed by Dubchak et al. (1995). The CTD method is widely used in prediction of protein folding class and protein function (Cai et al., 2003; Zou et al., 2013). The letter C, which is the abbreviation of composition, stands for the percentage of AAs with a certain property (such as disorder). The letter T, which is the abbreviation of transition, stands for the percentage of AAs followed by an AA with different property, i.e., an ordered residue followed by a disordered residue. The letter D, which is the abbreviation of distribution, measures the range of the first, 25, 50, 75 and 100% of the AAs with a certain property respectively. The CTD method generates 13 features for each protein sequence.

@&#CONCLUSIONS@&#
DNA-binding proteins play an important role in a variety of biological processes. Therefore, development of computational method that identifies DNA-binding proteins at high success rate is valuable. This study proposes a novel DNA-binding protein predictor that integrates a comprehensive set of feature descriptors, including primary sequence based, evolutionary profile based, predicted secondary structure based, predicted relative solvent accessibility based, physicochemical property based and biological function based features. To the best of our knowledge, the predicted secondary structure based, predicted relative solvent accessibility based and biological function based features are first employed in prediction of DNA-binding proteins. We have also assessed the performance of three feature selection methods, i.e., the mRMR, wrapper and two-stage methods in prediction of DNA-binding proteins. Results demonstrate that the two-stage method performs better than the other two methods. Statistical analysis shows that more than 95% of the selected features are statistically significant and the selected features cover all 6 feature groups. This implies all 6 feature groups contribute to the prediction of DNA-binding proteins. The proposed newDNA-Prot method is compared with three state of the art algorithms, DNAbinder, DNA-Prot and iDNA-Prot on two independent datasets. The results show that the newDNA-Prot method outperforms existing methods.