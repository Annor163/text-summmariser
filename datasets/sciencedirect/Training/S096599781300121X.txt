@&#MAIN-TITLE@&#
An interoperability model for ultra large scale systems

@&#HIGHLIGHTS@&#
We provide a maturity model for interoperability of ultra large scale systems.We provide a framework for interoperability of ultra large scale systems.Increasing interoperability of component systems in ultra large scale systems.

@&#KEYPHRASES@&#
Ultra large scale systems,Interoperability,Maturity model,Framework,Technical,Syntactic,Semantic,Organizational,

@&#ABSTRACT@&#
Ultra large scale systems are a new generation of distributed software system that are composed of various changing, inconsistent or even conflicting components that are distributed in a wide domain. Some important characteristics of these systems include their very large size, global geographical distribution, operational and managerial independence of their member systems. The main function of these systems arises from the interoperability between their components. Nowadays one of the most important challenges facing ultra large scale systems is the interoperability of their component systems. Interoperability is the ability by which system elements can exchange and understand the information required with each other. This paper aims to solve the mentioned challenge, which is divided into two main parts. In the first part, this paper presents a maturity model for the interoperability of ultra large scale systems, by using the interoperability level of the component system of one ultra large scale system its maturity level can be determined. In the second part, by proposing a framework we try to increase the interoperability of the component systems in ultra large scale systems based on the interoperability maturity levels determined in the first part. Consequently their interoperability is improved.

@&#INTRODUCTION@&#
The Software Engineering Institute of Carnegie Mellon University introduced ultra large scale systems in 2006. Systems with ultra large scale are a new generation of software system containing various, changing, inconsistent or even conflicting elements. Global information network, Army’s combat systems, future telecommunication networks, Internet, e-government, healthcare systems are some examples of such systems.One ultra large scale system is composed of a set of operationally and managerially independent systems whose interaction forms an ultra large scale system. The functions of such a system are very diverse, even more than the total functions of its component systems. Component systems are heterogeneous, changing and inconsistent, and are created by different people using different programming languages, in different conditions and are tuned for various platforms. Therefore, generally, an ultra large scale system has the following characteristics:•Is evolved gradually.Its component systems are operationally and managerially independent.Its component systems are heterogeneous, changing and inconsistent.Its component systems are distributed all over the world.People and users can have a role as elements of the system.Failures are unpreventable and are converted to the norm.Its development and evolution continuously take place while it is operating and they should not stop the overall operation of the system.In order to develop a coalition among component systems in such a system, the available interoperability method should be strengthened or new methods should be proposed for this purpose. By interoperability, we mean the ability by which the elements of a system can exchange and understand the required information with each other. Interoperability causes the elements of a system to achieve a common understanding of each other and the environmental condition.The available interoperability methods usually provide interoperation in the form of standard protocols and pre-defined compositions. Usually, at the time of programming, the programmer knows with which components and systems his program must interoperate and also the protocol for establishing communication. Finding the required systems, components, applications and services is performed during implementation and the interoperation mechanism is developed based on how communication protocols and interfaces are defined; runtime requirements are rarely taken into account.Ultra large scale systems are very dynamic, and, at runtime, their component systems may change, destroy or relinquish their tasks temporarily or permanently to others. New elements with better services may enter the system. It is also possible that some constraining policies are applied to maintain service quality due to higher aggregation and traffic. What is important is that all elements be aware of these continuous and dynamic changes and adapt to the new condition without any disturbance in the overall function of the system. For this purpose, it should:•Be possible for systems to search and find services without human interference.Be possible for the mechanism of interoperation among the systems to be modified according to the changes.Be possible for the systems and users to find a set of components and establish a relation between them to achieve a special goal.In order to provide the mentioned items it should be possible to describe the characteristics and abilities of the elements in an unambiguous way that is translatable for a computer. Also, it should be possible for all the involved elements to define themselves using a common terminology; this means that the common conceptual interoperation between the elements of the system should be strengthened. Accordingly, one objective of this paper is to improve the available interoperation mechanisms or even introducing new mechanisms for taking a step towards the mentioned goals and meeting them.Nowadays, one of the most significant challenges facing ultra large scale systems is the interoperability of their components. Several models have been presented for improving the interoperability, the most important of which is the levels of information systems interoperability model. Each model is applicable for a special kind of system, and, as yet, there is no model for improving the interoperability of ultra large scale systems that considers the characteristics of such systems.Thus, aiming at addressing the above challenge, this paper is divided into two main parts. In the first part, which is called by the author “interoperability assessment of ultra large scale systems”, a maturity model is presented for the interoperability of ultra large scale systems, in which the interoperability of each element of an ultra large scale system can be assessed and its maturity level determined.In the second part, using interoperability technologies, one framework is presented for the interoperability among the component systems of an ultra large scale system, through which the interoperability of the component systems can be improved based on the interoperability maturity level that was determined in the first part. Then ultra large scale systems are completely defined and their characteristics are described. In part 3, some definitions of interoperability and its different models are presented. Related work to interoperability maturity is discussed in part 4. In part 5, available interoperability technologies are introduced and some weak and strong points are listed for each one. In part 6, one interoperability maturity model for ultra large scale systems is presented and the interoperability framework is discussed in part 7. Finally, in the last part, a conclusion is formulated.As inferred from the name ‘ultra large scale systems’, this type of system includes those whose scale and size are far beyond today’s systems [1]. Their large scale is investigable by different measures: number of lines of code; number of employed people; amount of data stored, accessed, and refined; number of connections and interdependencies among software components; and number of hardware elements, etc.The scale in ultra large scale systems changes everything [1]. These systems are necessarily decentralized; are used and developed by many stakeholders with conflicting needs; evolve continuously; contain heterogeneous components; people are not just users, but elements of the system; and software and hardware failures are the norm rather than the exception. Also, ultra large scale systems are used simultaneously and require new methods for control. These characteristics make the use of appropriate practices for usage, production, deployment, management, documentation and evolution of such systems inevitable [2–5].Ultra large scale systems, in contrast to today’s systems, are as cities in contrast to buildings. They are considered as a sort of ecosystem. Their scale includes boundaries far beyond the Internet.One way to understand the difference between traditional systems and ultra large scale systems is by comparing buildings with cities. The designing and building of most of today’s large systems is comparable to the design and construction of a single, large building with an infrastructure system (such as power or water distribution). In contrast, ultra large scale systems are as complex as cities. As mentioned, an ultra large scale system contains a set of component systems. Therefore, generally, it can be stated thatS={S1,S2,…,Sn}whereSis an ultra large scale system andS1toSnare system components of an ultra large scale system.Ultra large scale systems have some characteristics that mainly result from the scale of such systems. The main characteristics of ultra large scale systems is their very large size according to different measures, such as the number of lines of code; number or amount of data stored, accessed, manipulated, and refined; number of connections and interdependencies among software components; and number of hardware elements, etc.The characteristics of ultra large scale systems that mainly results from the scale of these systems include:Decentralization: The scale of ultra large scale systems means that they will necessarily be decentralized in a variety of ways – decentralized data, development, evolution, and operational control.Inherently conflicting, unknowable, and diverse requirements: ultra large scale systems will be developed and used by a wide variety of stakeholders with unavoidably different, conflicting, complex, and changing needs.Continuous evolution and deployment: There will be an increasing need to integrate new capabilities into an ultra large scale system while it is operating. New and different capabilities will be deployed, and unused capabilities will be dropped; the system will be evolving not in phases, but continuously.Heterogeneous, inconsistent, and changing elements: An ultra large scale system will not be constructed from uniform parts: there will be some misfits, especially as the system is extended and repaired.Erosion of the people/system boundary: People will not just be users of an ultra large scale system; they will be elements of the system, affecting its overall emergent behavior.Normal failures: Software and hardware failures will be the norm rather than the exception.New paradigms for acquisition and policy: The acquisition of an ultra large scale system will be simultaneous with the operation of the system and require new methods for control.Ultra large scale systems have some characteristics in common with today’s systems of systems (SoSs). A class of systems of systems, known as virtual systems of systems based on the management control that is possible, is the closest to ultra large scale systems. This class of systems of systems is defined as follows:“Virtual systems lack a centralized management. In addition, there is no agreement on the purposes of this class of systems of systems. The behavior of elements of this system is extensive, aggregated and may lead to desirable results, so supersystems should rely on other mechanisms other than localization to achieve desirable results.”Therefore, generally, it can be cited thatSi={C1,C2,…,Cn}whereSiis a component system of ultra large scale systems andC1to Cndenote the properties of that component system.Interoperability has been a topic of concern for at least 30years. It is a property that refers to the ability of different systems and organization to work together.Numerous definitions have been given for interoperability. A number of reports and technical papers offer definitions of interoperability. For instance, the following four definitions of interoperability have been given by IEEE [6]: (1) “The ability of two or more systems or elements to exchange information and to use the information that have been exchanged”; (2) “The capability for units of equipment to work efficiently together to provide useful functions”; (3) “The capability – promoted but not guaranteed – achieved through joint conformance with a given set of standards, that enables heterogeneous equipments, generally built by various vendors, to work together in a network environment”; (4) “The ability of two or more systems or components to exchange and use the exchanged information in a heterogeneous network”.The US Department of Defense also introduces multiple definitions of interoperability, some of which incorporate the IEEE definitions: (1) “The ability of systems, units, or forces to provide services to and accept services from other systems, units, or forces, and to use the services so exchanged to enable them to operate effectively together” [7]; (2) “The condition achieved among communications-electronics systems or items of communications-electronics systems equipment when information or services can be exchanged directly and satisfactorily between them and/or their users. The degree of interoperability should be defined when referring to specific cases” [8]; (3) (a) “Ability of information systems to communicate with each other and exchange information. (b) Conditions, achieved in varying levels, when information systems and/or their components can exchange information directly and satisfactorily among them. (c) The ability to operate software and exchange information in a heterogeneous network (i.e., one large network made up of several different local area networks). (d) Systems or programs capable of exchanging information and operating together effectively” [9].According to [10–17], there are four types of interoperability. The interoperability types are technical, syntactic, semantic, and organizational interoperability.Technical interoperability: technical interoperability is achieved among communications-electronics systems or items of communications-electronic equipment when services or information could be exchanged directly and satisfactorily between them and their users. In referring to specific cases, the interoperability degree must be defined [18].Syntactic interoperability is defined as the ability to exchange data. Syntactic interoperability is generally associated with data formats. The messages transferred by communication protocols should possess a well-defined syntax and encoding, even if only in the form of bit-tables [19].Semantic interoperability is defined as the ability to operate on that data according to agreed-upon semantics [20]. Semantic interoperability is normally related to the definition of content, and deals with the human rather than machine interpretation of this content. Thus, interoperability at this level denotes that a common understanding exists between people regarding the definition of the content (information) being exchanged [19,21,22].Organizational interoperability: this interoperability type concerns the definition of authority and responsibility with the intention that interoperability could happen under good conditions [23–25].Abstract models create many values in every field of technology and engineering, and have been used extensively in software engineering [26–28].In the context of software systems interoperability, defining the interoperability model has many advantages including defining and analyzing key areas and parameters of interoperability, defining and determining interoperability maturity level and creating a methodology and common structure for the interoperability of software systems.

@&#CONCLUSIONS@&#
