@&#MAIN-TITLE@&#
An impulse-based energy tracking method for collision resolution

@&#HIGHLIGHTS@&#
DEM can be based on penalties or impulses to resolve collisions.The impulse-based energy tracking method (ETM) resolves multiple collisions consistently.ETM models multiple collisions iteratively yet simultaneously, while tracking the system energy.ETM does not rely on penalties and does not require computation of penetration of bodies.The method is validated in the context of energy conservation and meso-scale angles of repose.

@&#KEYPHRASES@&#
Discrete element method,Energy conservation,Impulse method,Multiple-body collision,

@&#ABSTRACT@&#
Discrete element methods can be based on either penalties or impulses to resolve collisions. A generic impulse based method, the energy tracking method (ETM), is described to resolve collisions between multiple non-convex bodies in three dimensions. As opposed to the standard sequential impulse method (SQM) and simultaneous impulse method (SMM), which also apply impulses to avoid penetration, the energy tracking method changes the relative velocity between two colliding bodies iteratively yet simultaneously. Its main novelty is that impulses are applied gradually at multi-point contacts, and energy changes at the contact points are tracked to ensure conservation. Three main steps are involved in the propagation of the impulses during the single- and multi-contact resolution: compression, restitution-related energy loss, and separation. Numerical tests show that the energy tracking method captures the energy conservation property of perfectly elastic single- and multi-point collisions. ETM exhibits improved angular velocity estimation, as compared to SMM and SQM, as demonstrated by two numerical examples that model multi-point contact between box-shaped objects. Angles of repose estimated for multi-object pack repositioning of spheres, cubes, and crosses are in good agreement with the reported experimental values.

@&#INTRODUCTION@&#
The numerical simulation of collision-driven interactions between a large number of bodies has many applications in engineering, ranging from the simulation of rock fragmentation in mining engineering processes  [1–3], to the simulation of particle flow for tumble mills in agriculture  [4]. A robust numerical method to simulate multi-body interaction must satisfy run-time constraints and handle large amounts of fragments of a range of sizes, as well as being stable and physically realistic. Current numerical approaches to model these processes include penalty-based  [5], analytical  [6], and impulse-based methods  [7].The impulse method, first proposed by Hahn  [8], applies the impulse–momentum form of Newton’s second law to compute collision response within a multi-body system. The family of impulse methods provides an efficient and accurate alternative to resolve high-frequency collisions of hundreds or thousands of colliding bodies. Impulse methods have been shown to be energy conservative  [9], do not rely on penalty parameters, do not require the computation of penetration between bodies, and thrive on their ability of directly using meso-scale material properties. Impulse methods are regularly applied to model haptic interfaces in robotics research  [10] and to simulate the motion of tendons, joints, and muscles  [11,12]. Impulse methods have been used in engineering for simulated sensorless manipulation of objects  [13], and in combination with the finite element method for the simulation of gravity-driven fragmentation  [3]. Unlike a posteriori methods, the impulse-based method does not rely on arbitrary penalty and damping parameters that define repulsion as a function of penetration. Instead, this method models collisions as a function of predicted impact trajectory and impulse. Thus, impulse methods do not require geometric intersection checks, but instead relies on collision time estimation algorithms, e.g. the efficient Lin–Canny algorithm  [14,15]. Contact detection is based on the computation of the relative normal velocity of colliding bodies at each contact point. Newton’s impact law, as defined for a single-point collision, is applied either sequentially in sequential impulse methods (SQM)  [16] or simultaneously in simultaneous impulse methods (SMM)  [17,18] to deal with multiple collisions and multiple contact points. There are at least two versions of simultaneous impulse methods. In 1989, Baraff  [17] proposed a simple version of SMM which treated multiple collisions as a linear complementary problem; this method only considered normal impulses and the change of normal velocities, and it did not consider friction. The generic SMM  [18] enforces constraints on all collisions by solving a system of linear equations, taking into account impulses in the normal and tangential directions, and considering friction. Due to the simultaneous evaluation of collisions, SMM cannot capture the propagation of contact forces during a collision. Sequential impulse methods (SQM) treat multiple concurrent collisions one-by-one, and non-penetration constraints are enforced to multiple collisions sequentially, iterating over the contact points until no objects collide. In SQM, Newton’s impact law is locally applied to each contact, making it particularly well suited for parallelization. A drawback of SQM is that it inverts relative normal velocities of collisions one-by-one, yielding results that depend on the order in which collisions are resolved  [16,19].The penalty method iteratively computes penalty parameters to enforce collisions as a set of non-penetration constraints  [20,21]. It is widely used due to its simplicity and flexibility  [22–24]. However, this method relies on the definition of an arbitrary, experimentally estimated, normal and tangential stiffness of an enforced spring system that prevents object penetration  [25–27]. Relative high collision velocities lead to large overlaps and exaggerated repulsion forces, and introduce instability to the simulation. This results in gearing the development of the method towards increasing stability and disregarding possible emerging artificial energy gains and losses  [28,29]. The Lagrange multiplier method is an alternative approach that adds unknowns to solve bilateral constraints, such as joint constraints  [29]. The midpoint integration rule combined with the Lagrange multiplier method  [30] and penalty regularization of contact rates  [31,32] has been proposed to ensure energy conservation during collisions. Penalties are applied to solve collision and contact of objects within the context of the discrete element method (DEM)  [33,34], smoothed particle hydrodynamics (SPH)  [35,36], and the material point method (MPM)  [37,38]. Sphere-conglomerates are used to avoid penetration computation penalties  [2]; however, these models are unable to represent smooth surfaces and require large number of spheres that scale with level of detail. Smoothed particle hydrodynamics and the material point method are point-based methods that are best suited to simulate explosions and large deformation problems, and rely on point-to-point contact detection algorithms, resulting in difficult numerical computation of contact force direction  [39]. The main geometric hurdles of the penalty method are the need to calibrate micro-to-macro material properties of conglomerates using laboratory experiments, and the arbitrary definition of penalty parameters during the definition of the non-penetration constraints.The hybrid finite element–discrete element method  [40] can model deformation of colliding bodies as a function of impact. Deformation of the bodies is penalized by stark computational costs and is well suited for high-resolution models  [24], e.g. impact-driven non-linear degradation of bodies. Models that seek to study emerging behavior from the interaction of hundreds and thousands of objects often assume bodies to be rigid at the moment of impact  [41]. One-way coupling of brittle deformation, such as fragmentation, can be used in combination with the rigidity assumption to reduce computational cost  [3]. Impulse-based methods pose no restriction in their use within the context of deformability.In analytical methods, the simulation of non-penetration constraints is treated as a linear complementary problem  [42], which does not rely on penalty parameters and does not require use of a damping parameter to remain stable. Its main difficulty is in considering the influence of friction on the collision. For instance, for systems with dynamic or sliding friction, the linear complementary problem matrix becomes non-positive definite and non-symmetric, constraints at the contact point become non-linear, and the problem becomes a non-linear complementarity problem  [29].Energy conservation is critical to ensure stability of a numerical method, especially for contact and collision problems  [28,43]. A number of conserving schemes have been developed to ensure energy conservation. These schemes make use of the penalty regulation of normal contact constraint and inherit the conservation property from continuum problems. These conservation schemes can conveniently be combined with the finite element method to simulate frictionless  [44] and frictional  [43] contact and collision. Hesch and Betsch  [45] formulated the node-to-segment contact method and solved large deformation contact problems with the conserving scheme. More recently, an energy and momentum-conserving temporal discretization scheme  [46] was developed for adhesive contact problems without considering friction and dissipation. Even though the conserving scheme improves numerical stability, it also inherits from the penalty method the difficulty of having to determine penalty parameters. In order to remove penalty sensitivity, Chawla and Laursen  [47] proposed an energy and momentum conserving algorithm, which makes use of Lagrange multipliers instead of penalty parameters.The generalized impulse method presented here, called the energy tracking method (ETM), addresses the individual shortcomings of the sequential impulse method (SQM) and simultaneous impulse method (SMM). It is aimed at efficiently and accurately modeling high-frequency collisions of non-convex bodies. ETM treats multiple concurrent collisions as a series of single-point collisions, and introduces an additional level of iteration at each collision time step. At the beginning of the collision analysis the relative velocity is negative, indicating that the bodies are on a collision course. An impulse is applied to each body to avoid penetration, in a step-wise manner, incrementally increasing the relative velocity until it reaches zero. At each step, velocities at each collision point are updated. During this process, kinetic energy decreases and elastic energy at the contact points increases. Subsequently, the relative normal velocity continues to increase until all of the elastic energy is released. As opposed to the standard SQM, ETM gradually applies impulses to change relative normal velocities of multiple collisions iteratively yet simultaneously. In contrast to the SMM, ETM yields low angular velocity errors when dealing with multi-contact collisions, due to its ability to simulate the interaction of forces during collision. ETM is advantageous as it processes collisions in a simultaneous, albeit iterative, manner. Energy is shown to be conservative for large multi-body systems of spheres, cubes and non-convex crosses. Numerical experiments evaluating the angle of repose of systems of these objects compare well with macroscopic laboratory experiments reported in the literature  [48].The energy tracking method is based on two levels of iteration: iteration for time steps,t, and iteration for impulse computation at each collision time step,s. As time progresses,t={t0,t1,t2,…}, positions and velocities of bodies are updated. The non-penetration strategy  [14,15], based on the fast search of the closest features among convex polyhedra, identifies collision candidates based on the concept of collision time. Accurate estimation of collision time,tc, is required to apply impulses and avoid geometric overlap due to collision (Fig. 1). Impulses are then computed for each contact point using an iterative method, over a set of iterationss={s0,s1,s2,…}. The latter captures the propagation of impulses at a single instance in time.skindicates the stepk. At stepk, the linear velocity and angular velocity of bodyjare denoted asvj(sk)andωj(sk). The impulse applied at contact pointciis denoted aspi(sk).In SQM and SMM, the relative normal velocity is directly inverted. The energy tracking method (ETM), on the other hand, gradually applies the impulses to change the relative normal velocity over a set of iterations, applying impulses to multiple collisions at the same time. This procedure is described for a single-point collision. Without loss of generality, the colliding objects are assumed not to deform.A bodybNcollides with another bodybMat contact pointci(Fig. 2). A set of impulses,{pi(s0),pi(s1),pi(s2),…}, is applied at the contact points to each colliding body sequentially. The subscriptiinpi(sk)denotes that the impulse is applied to the contact pointci, andskdenotes this impulse is applied at the iterationsk. The velocities of colliding bodybj(j=NorM)at the contact pointciat iterationskis denoted as(1)uij(sk)=vj(sk)+ωj(sk)×rijwhererij={ri,xj,ri,yj,ri,zj}Tis the vector from the center of mass of bodybjto the contact pointci, which is assumed to be constant during the collision.uij(sk)is the velocity of bodybjat the contact pointci.vj(sk)is the linear velocity at the center of mass, andωj(sk)is the angular velocity. The relative velocity of two colliding bodies at contact pointci,ui(sk), is defined as(2)ui(sk)=uiN(sk)−uiM(sk).The change of relative velocity from iterationskto iterationsk+1is defined as(3)△ui(sk)=ui(sk+1)−ui(sk).First, an assumption for the change of relative velocity before and after applying an impulse without considering energy loss is described. Energy loss caused by the impulse in the normal direction of the contact surface is handled by Stronge’s hypothesis  [49]. The consideration of friction is introduced in Section  5 for single-point collisions and Section  6 for multiple collisions. When a pair of impulses of opposite signspi(sk)and−pi(sk)is applied to colliding bodies, these impulses effectively change their linear and angular velocities:(4)pi(sk)=mN△vN(sk)−pi(sk)=mM△vM(sk)(5)riN×pi(sk)=IN△ωN(sk)riM×−pi(sk)=IM△ωM(sk)whereINandIMare the inertia tensors, which are constant during the collision and are computed using an explicit exact expression  [50], and(6)△vN(sk)=vN(sk+1)−vN(sk)△vM(sk)=vM(sk+1)−vM(sk)(7)△ωN(sk)=ωN(sk+1)−ωN(sk)△ωM(sk)=ωM(sk+1)−ωM(sk)wheremNandmMare the masses of bodybNandbM.Once the change of relative velocity is known, impulses are computed from the collision matrix  [7],(8)pi(sk)=Ki−1△ui(sk)where the collision matrixKi, which is constant, non-singular, symmetric, and positive definite, is defined as(9)Ki=(1mN+1mM)1−(r̃iN(IN)−1r̃iN+r̃iM(IM)−1r̃iM)where1is the identity matrix, and(10)r̃iN=(0−r̃i,zNr̃i,yNr̃i,zN0−ri,xN−r̃i,yNr̃i,xN0)(11)r̃iM=(0−r̃i,zMr̃i,yMr̃i,zM0−ri,xM−r̃i,yMr̃i,xM0)wherer̃iNandr̃iMare the cross-product matrix ofriNandriM.ETM applies Stronge’s hypothesis  [49] to express the energy dissipation in the normal direction. LetWreleasebe the work done by the normal component of the collision impulse during a collision. Then,  [7](12)Wrelease=−en2Wmcwhereen∈(0,1)is the normal restitution coefficient which is a measurement of bounce, whereen=1implies a perfectly elastic collision anden=0implies that the relative normal velocity is reduced to zero after the collision, andWmcis the work done by the normal impulse at the point of maximum compression, where the relative normal velocity changes sign.For the following analysis, a local orthogonal coordinate system in{ti,ni,qi}is defined at the locality of the contact in terms of the normal and tangential components of the collision (Fig. 3). It follows that(13)ti=ni×pi(sk)|ui(sk)|(14)qi=ti×niwhereniis the normal direction of collision surface, andtiandqiare the two tangential directions at the contact point. It follows that the impulsep̃i(sk)={p̃i,t(sk),p̃i,n(sk),p̃i,q(sk)}Tand relative velocityũi(sk)can be formulated in terms of this local coordinate system as(15){ũi(sk)=Liui(sk)p̃i(sk)=Lipi(sk)whereLi=(ti,ni,qi)Tdefines the transformation from global to local coordinates.Mirtich  [7] proposed that the work done by contact forces,△Wi(sk), is path independent and is a function of the relative velocity before and after applying the impulse:(16)△Wi(sk)=12(ui(sk+1)+ui(sk))TKi−1(ui(sk+1)−ui(sk)).The amounts of work done by the normal and tangential impulses are considered separately.Lemma 3.1During a collision, the work done by the impulse can be decomposed into the work done by the impulse in the normal direction and the work done by the impulse in the tangential direction, as follows(17)△Wi,t(sk)=12(2ũi,t(sk)+△ũi,t(sk))p̃i,t(sk)(18)△Wi,n(sk)=12(2ũi,n(sk)+△ũi,n(sk))p̃i,n(sk)(19)△Wi,q(sk)=12(2ũi,q(sk)+△ũi,q(sk))p̃i,q(sk).ProofAccording to Eq. (16), the work done by the contact force from iterationsktosk+1is:(20)△Wi(sk)=12(ui(sk+1)+ui(sk))TKi−1(ui(sk+1)−ui(sk)).Substituting Eq. (8) into the previous equation yields(21)△Wi(sk)=12(ui(sk+1)+ui(sk))Tpi(sk).Considering the collision in the local coordinate system defined by Eqs. (13) and (14), it follows that:(22)△Wi(sk)=12(Li−1ũi(sk+1)+Li−1ũi(sk))TLi−1p̃i(sk)(23)△Wi(sk)=12(ũi(sk+1)+ũi(sk))TLi−TLi−1p̃i(sk).SinceLiis an orthogonal matrix,Li−1=LiT,(24)△Wi(sk)=12(ũi(sk+1)+ũi(sk))Tp̃i(sk)and(25)△Wi(sk)=12[2ũi,t(sk)+△ũi,t(sk)2ũi,n(sk)+△ũi,n(sk)2ũi,q(sk)+△ũi,q(sk)]T[p̃i,t(sk)p̃i,n(sk)p̃i,q(sk)].Thus,(26)△Wi(sk)=△Wi,t(sk)+△Wi,n(sk)+△Wi,q(sk)(27)△Wi,t(sk)=12(2ũi,t(sk)+△ũi,t(sk))p̃i,t(sk)(28)△Wi,n(sk)=12(2ũi,n(sk)+△ũi,n(sk))p̃i,n(sk)(29)△Wi,q(sk)=12(2ũi,q(sk)+△ũi,t(sk))p̃i,q(sk).□Lemma 3.2During a collision, if the impulse is only applied in the normal direction of the colliding surface, wherep̃i,t(sk)=0andp̃i,r(sk)=0in local coordinates, then, the work done by the contact force can be expressed as a function of the change of relative normal velocity:(30)△Wi(sk)=12(2ũi,n(sk)+△ũi,n(sk))(H21A+H22+H23B)△ũi,n(sk)where,(31)H=[H11H12H13H21H22H23H31H32H33]=LiKi−1(Li−1)(32)A=−H23H12−H13H32H33H11−H13H31(33)B=−H31H12−H11H32H31H13−H11H33.ProofAccording to Eq. (18), the work done by the normal contact force is independent of the change of the relative velocity in the tangential direction, and can be expressed as a function of the change of relative velocity in the normal direction:(34)△Wi(sk)=12(2ũi,n(sk)+△ũi,n(sk))p̃i,n(sk).To replacep̃i,n(sk)by a function of△ũi,n(sk), the relationship betweenp̃i,n(sk)and△ũi,n(sk)is expressed as:(35)pi(sk)=Ki−1△ui(sk)(36)L−1p̃i(sk)=Ki−1L−1△ũi(sk)(37)p̃i(sk)=LiK−1Li−1△ũi(sk)where(38)p̃i(sk)=H△ũi(sk)(39)H=LK−1(L)−1(40)[p̃i,t(sk)p̃i,n(sk)p̃i,q(sk)]=[H11H12H13H21H22H23H31H32H33][△ũi,t(sk)△ũi,n(sk)△ũi,q(sk)](41)[p̃i,t(sk)p̃i,n(sk)p̃i,q(sk)]=[H11△ũi,t(sk)+H12△ũi,n(sk)+H13△ũi,q(sk)H21△ũi,t(sk)+H22△ũi,n(sk)+H23△ũi,q(sk)H31△ũi,t(sk)+H32△ũi,n(sk)+H33△ũi,q(sk)]wherep̃i,t(sk)=0andp̃i,q(sk)=0.(42)[0p̃i,n(sk)0]=[H11△ũi,t(sk)+H12△ũi,n(sk)+H13△ũi,q(sk)H21△ũi,t(sk)+H22△ũi,n(sk)+H23△ũi,q(sk)H31△ũi,t(sk)+H32△ũi,n(sk)+H33△ũi,q(sk)].Regarding△ũi,n(sk)as unknown and solving above equation,△ũi,t(sk)and△ũi,q(sk)can be expressed as function of△ũi,n(sk):(43)△ũi,t(sk)=−H33H12−H13H32H33H11−H13H31△ũi,n(sk)=A△ũi,n(sk)(44)△ũi,q(sk)=−H31H12−H11H32H31H13−H11H33△ũi,n(sk)=B△ũi,n(sk).Thenp̃i,n(sk)is expressed as a function of△ũi,n(sk),(45)p̃i,n(sk)=(H21A+H22+H23B)△ũi,n(sk).Substituting the previous equation into Eq. (18) yields:(46)△Wi(sk)=12(2ũi,n(sk)+△ũi,n(sk))(H21A+H22+H23B)△ũi,n(sk).□By manipulating Eq. (46), the change of the relative normal velocity is defined as follows, if the change of energy is known:(47)△ũi,n(sk)=−ũi,n(sk)±C+ũi,n2(sk)(48)C=2△WiH21A+H22+H23B.Since the relative normal velocity increases during simulation, the positive solution is chosen:(49)△ui,nmax(sk)=−ũi,n(sk)+C+ũi,n2(sk)C=2△WiH21A+H22+H23B.In SQM and SMM, the impulse is defined by Eq. (8), once the change of relative velocity is determined by Newton’s impact law. In ETM, the change of relative velocity is first computed in the normal direction, after which friction is considered. A static friction condition is defined, assuming that there is no tangential velocity after collision, such that the change of relative normal velocity is given by(50)ũi(sk+1)=[0ũi,n(sk)+△ũi,n(sk)0]T.The impulse in this case is expressed aspi(sk)=(Ki)−1△ui(sk)(Eq. (8)). Decomposing this impulse into its normal and tangential directions,(51)pi,n(sk)=niTpi(sk)ni(52)pi,q(sk)=pi(sk)−pi,n(sk)where the static friction condition is defined as(53)|pi,q(sk)|≤μ|pi,n(sk)|.If the static friction condition is satisfied, the above impulse is expressed by Eq. (8). Otherwise, the impulse is re-computed as follows, to ensure that the change of relative normal velocity is△ũi,n(sk)after applying the impulses. The impulse is expressed as(54)pi(sk)=p̃i,n(sk)ni+μp̃i,n(sk)qiwhere(55)p̃i,n(sk)=△ũi,n(sk)niTKi(ni+μqi).ProofThe tangential impulse is derived as follows.(56)pi,q(sk)=μp̃i,n(sk)qi.So(57)pi(sk)=pi,n(sk)+pi,q(sk)=pi,n(sk)+μp̃i,n(sk)qi(58)Kipi(sk)=△ui(sk)(59)niTKipi(sk)=niT△ui(sk)(60)niTKi(pi,n(sk)+qiμp̃i,n(sk))=△ũi,n(sk)(61)p̃i,n(sk)=△ũi,n(sk)niTKi(ni+μqi).□Once collisions are identified, a series of impulses are applied to avoid penetration. Unlike SQM and SMM, ETM does not invert the relative normal velocity,ũi,n(s0), directly,ũi,n(s1)=−enũi,n(s0). Instead, it updates the relative normal velocity gradually over a set of iterations,{s0,s1,s2,…,sλ}, by applying a set of impulses,{pi(s0),pi(s1),pi(s2),…}, sequentially. This is advantageous, as it allows tracking of the change of relative normal velocity and elastic energy at each contact point, and the fluctuation of kinetic energy of system during a single collision (Fig. 4). The collision response is divided into three stages: compression, in whichũi,n(sk)is negative; restitution, stage in which the estimated energy loss can be accounted for; and separation, in which the relative normal velocities are positive. The initial change of relative normal velocity,△u̇n, is defined as(62)△u̇n=ũi,n(s0)λwhereũi,n(s0)is the initial relative normal velocity, andλis a positive integer which controls the rate of change of the relative normal velocity during collision analysis. The parameterλcounts the number of iterations for impulse computation at each collision time step. Without loss of generality, the change of relative normal velocity is initially chosen as△u̇nfor each iteration, and is recomputed at different stages to ensure energy conservation (Algorithm 1).The compression of two colliding bodies is modeled while taking friction into account. The assumption of the change of relative normal velocity from iterationskto iterationsk+1is expressed as(63)△ũi,n(sk)={△u̇nifũi,n(sk)+△u̇n<0|ũi,n(sk)|ifũi,n(sk)+△u̇n>0.The change of relative normal velocity is defined as△u̇n, unless the relative normal velocity becomes positive after applying the impulse. In this case, the change of relative normal velocity is recomputed to ensure that it reaches zero after applying the impulse for a single collision.Once the assumption for the change of the relative normal velocity is established, the impulse is obtained from Eqs. (50)–(55). Work done by the impulse in the normal direction,△Wi,n(sk), is expressed by Eq. (16). The elastic energy at the contact point before the collision is set to zero:Wi(s0)=0. At each step, the energy due to the normal contact force at contact pointciis updated, according to(64)Wi,n(sk+1)=Wi,n(sk)+△Wi,n(sk).At the end of the first stage, the work done by the normal impulse reaches the maximum value, and the sign of the relative normal velocity changes to positive. Energy dissipation in the normal direction is expressed by Stronge’s hypothesis  [49],(65)Wi(sk+1)=en2Wi(sk).Separation of two colliding bodies is modeled taking friction into account. The change of relative normal velocity from iterationskto iterationsk+1is expressed as(66)△ũi,n(sk)={△u̇iif△u̇n≤△ui,nmax(sk)△ui,nmax(sk)if△u̇n>△ui,nmax(sk).The change of relative normal velocity is defined as△u̇n. However, there is a limitation to the change of relative normal velocity: its maximum change is capped by the maximum work which can be done by the impulse, equal to the elastic energy absorbed at the contact point. Therefore, there is a maximum change of relative normal velocity,△ui,nmax(sk), which releases the residual energy at the contact point. This maximum change of the relative normal velocity is expressed by Eq. (49). In Eq. (47) there are two solutions for the change of relative normal velocity, the positive sign is always chosen, as the relative velocity is assumed to increase during this stage. Once the assumption of the change of relative normal velocity is established, the impulse is computed using Eqs. (50)–(55). The work done by the impulse,△Wi(sk), is expressed by Eq. (16). As in Stage I, the energy at each contact pointciis updated at each step according to Eq. (64). The relative normal velocity and energy are updated gradually over iterations. The iterating stops whenWi(sk)≤0(see Algorithm 1).Fig. 5illustrates multiple collisions,c={c0,c1,c2,…,cn}, between multiple bodies,b={b0,b1,b2,…,bm}, detected at a time steptc, wheremis the total colliding bodies andnis the total contact points. At each iteration, multiple collisions are treated as concurrent collisions and impulses are computed and applied to contact points sequentially. The interaction of multiple collisions is simulated by repeating the computation until all relative normal velocities are non-negative (Algorithm 2). The computation for multiple collisions consists of three main stages.Impulses are applied to eliminate all negative relative normal velocities among contact points. At each iterationsk, the contact point with the smallest relative normal velocity, the minimum contact point,cmin, is identified. If the minimum contact point is colliding (its relative normal velocity is negative), a pair of impulses, obtained using Eqs. (50)–(55) considering friction, is applied tocminto resolve the collision. The change of relative normal velocity is given by Eq. (63). The work done by normal impulses is computed using Eq. (16), and the energy at the contact point is updated. The linear and angular velocities of the colliding bodies, and the relative velocities of all related contact points, are also updated. The procedure is repeated untilcminis not colliding. At the end of this stage, all relative normal velocities will be non-negative, and the total energy among collisions reaches its maximum value.Energy dissipation in the normal direction is applied sequentially over all collisions, applying Stronge’s hypothesis (Eq. (65)).Impulses are applied to progressively release energy at all collision points. At each iterationsk, contact points,c, are sequentially evaluated. If the elasticWi,n(sk)is positive, a pair of impulses,pi(sk)and−pi(sk)is applied to contact pointcito release energy. This computation is repeated until the energy at all contact points is zero, i.e.max{Wi}=0. For each iterationskand each collisionci, impulses are expressed by Eqs. (50)–(55). The change of relative velocity is given by Eq. (66). The work done by normal impulses is computed using Eq. (16). Subsequently, the energy of the collision, and the velocities of the colliding bodies related to contact pointci, are updated. The three stages described above are repeated until no negative relative normal velocity remains. As in SQM, ETM cannot ensure termination after a certain number of iterations for perfectly elastic collisions. For oscillating cases, termination is enforced after the three stages have been repeated a finite amount of times, e.g. 300, after which the normal restitution is set to zero. Once the restitution is zero, the computation is ensured to terminate after a few iterations.ETM is investigated using selected numerical tests. The collision of two tetrahedra validates the performance of ETM for single-point collisions. A series of multi-contact scenarios are selected to exhibit ETM advantages as compared to SQM and SMM. In some cases gravity is disregarded, certain examples are assumed perfectly elastic to evaluate possible artificial energy losses and gains, and in all the cases time step size is assumed to be 1/600 seconds. Energy conservation and repose angles are evaluated for a series of packing and repositioning numerical tests involving spheres, cubes, and non-convex cross objects.In the following tests, the total system energy,Et, is expressed as(67)Et=∑in(Eip+Eik)=∑iN(mighi+∫Viu2(x)2dv)wherenis the number of bodies,EipandEikare the potential energy and kinetic energy of bodyi,miis the mass of bodyi,gis gravity acceleration,hiis the height of the center of gravity of bodyi,Viis the volume, andu(x)is the linear velocity at integration pointx. The relative error ofEtis measured as follows:(68)ξEt=|Etb−EtfEtb|whereEtbandEtfare the energies before and after collision.The energy tracking method is investigated using a single-point collision of two tetrahedra,aandb(Fig. 6(a)). Initial linear and angular velocities of bodyaareva=(0,0,−100)m/sandωa=(5,10,3)rad/s, respectively. Bodybis initially static and only moves after the collision. No external force acts on these bodies. In this test, the collision is assumed to be perfectly elastic and frictionless, i.e.en=1andμ=0. The experiment constitutes a simple closed system, which is expected to be energy conservative.The progression of the relative normal velocity, elastic and kinetic energy at the contact point, and the total system energy are plotted in Fig. 6(b) forλ=200. During the simulation of collision, the total energy of the system remains constant. During the first stage, the relative normal velocity changes from −211.84 to 0 m/s, the elastic energy at the contact point increases from 0 to 60124 J, and the kinetic energy decreases from 83809.2 to 23685.2 J. During the third stage, the relative normal velocity changes from 0 to 211.84 m/s, the elastic energy at the contact point decreases from 60124 to 0 J, and the kinetic energy decreases from 23685.2 to 83809.2 J. Only a single contact point is taken into account here. In Fig. 6(b), energies are divided by 300 to aid visualization.The influence ofλis investigated by measuring the relative error of total energy. A variation of the error is measured for increasingλvalues of{1,5,10,100,200,500}, yielding errors,(69)ξEt={1.73×10−16,6.94×10−16,1.21×10−15,1.73×10−16,1.51×10−14,1.42×10−14}that are initially close to the numerical epsilon, but increase by two orders of magnitude forλ=500. The consistently low errors indicate that the single collision can be resolved exactly. The increase of this error, with increasingλ, reflects the accumulation of the numerical error due to the increased number of iterations and operations. This numerical error is also observed to be low.The simultaneous impulse method (SMM) inserts all collisions into a system of linear equations, so that constraints on the relative normal velocities,ũi,n(s1)=−enũi,n(s0), are enforced simultaneously.ũi,n(s0)andũi,n(s1)are the relative normal velocities before and after collision, respectively. In some cases, this empirical velocity constraint does not match real physical behavior. The example investigated in this section is one of them.Consider the collision of two box-shaped bodies, where one is static and the other dynamic, and gravity is ignored. The initial linear velocity of the cube is (0, 0, −10) m/s and its angular velocity is zero. The moving cube is expected to rotate after the collision, as all of its contact points are located on one half of the contact surface, and are repelled upwards after the collision, generating a positive rotational moment that throws the body out of balance. For SMM, since relative normal velocities at all contact points are the same before the collision,ũi,n(s0)=−10m/s, the relative normal velocities at all contact points are the same after the collision,ũi,n(s0)=10m/s. Therefore, SMM does not model the rotation which is a function of the propagation of the impulses during collision (Fig. 7(a)). Angular velocities in thex,yandzdirections of the SQM and ETM are plotted in Fig. 7(b). SMM fails to predict post-collision non-zero angular velocities. In contrast, ETM predicts angular velocities that agree with the expected rotation.The collision of a 2×2×1 m box-shaped body and the ground is now investigated. Gravity is ignored, and the collision is assumed to be perfectly elastic. The initial linear and angular velocities are (1, 1, −10) m/s and zero, respectively. Since there is no initial angular velocity of the cube before collision, and the ground surface is perfectly horizontal, the linear velocity after the collision should be exactly inverted, and the angular velocity should remain zero.In this test, the relative error of the velocity is used to track the effect ofλon the quality of the simulation:(70)ξv=|vf−vo||vo|wherevois the initial linear or angular velocity of the object at the beginning of simulation, andvfare the final linear or angular velocity of the object after collision resolution.SQM treats multiple collisions as concurrent collisions, and simply inverts the relative normal velocity after applying the impulse. Thus, impulses are applied to collisions one by one, and not simultaneously. In contrast, ETM applies the impulses to multiple collisions simultaneously, but does so by gradually increasing the relative normal velocity during the collision. In this numerical experiment, multiple collisions occur simultaneously between the box-shaped object and the ground, exposing the difficulty of SQM in treating impulse propagation during collisions, as compared to ETM.The object collides with the ground at time step 166 (Fig. 8(a)). The relative error of the linear velocities remains close to zero, and does not vary withλfor either method. The relative error of the angular velocity is lower for ETM as compared to SQM from the onset, and further decreases asλincreases (Fig. 8(b)). For higher values ofλ, i.e.λ>50, the accumulated numerical error becomes measurable and the relative velocity error does not further reduce. In the simulations herein,λ=30.The energy conservative property of multiple bodies is now investigated. A necessary condition for the impulse-based method to be energy-conservative has been previously identified  [9]. Namely, and, in the context of an SQM formulation, the relative contact velocity must be exactly reversed, as opposed to only inverting it in the normal direction. In contrast, ETM ensures conservation by constraining iterations based on the tracking of energy during collision resolution. This property is illustrated by quantifying artificial energy loss and gain during collision resolution, in terms of the measurement of the relative error in the computation of energy conservation of the collision. To this end, two perfectly elastic cases are examined, in which 540 and 1080 spherical bodies fall into a static box. Relative energy errors for at each collision step, over 250 time steps, are plotted in Fig. 9. Overall, relative errors for both models are consistently below 8×10−3 for both SQM and ETM.The experiment models the interaction between multiple bodies of different shapes, including cubes, spheres, and concave units, discretized using a tetrahedral mesh (Fig. 10). Cubes and spheres are typical convex proxies for rock fragments, while specialized three-dimensional concrete crosses are widely used in coastal structure engineering to protect against wave action for hydraulic stability. Gravitational acceleration is assumed to be −9.8 m/s2. Spheres, cubes, and concave units are initially set up in an array randomly oriented about their centers. These bodies undergo gravity-driven fall and settle into a box with static boundary walls (Fig. 11).The ETM is used to investigate the repose angle of the slope generated by removing the right boundary of the previously generated stacks (Fig. 12). Snapshots of the final repose angles for different object shapes and for different frictions are shown in Fig. 13.To measure the angle of repose, the floor of the container is subdivided using an 8×16 grid, where the longest side of the container is subdivided sixteen times. Eight lines are fitted, using least squares, through the highest nodes identified in each of the sixteen cells. The slopes of these are regarded as the repose angles in these eight zones (Fig. 14). The average repose angle corresponds to the average measured slope. The absolute error is the average difference of the average repose angle as compared to the maximum and minimum measured repose angles. For the spheres, the absolute error ranges from0.0255°to0.8°, for cubes from1.29°to3.17°, and for crosses from1.2°up to12.89°. The angle of repose and respective measurement error is plotted as a function of the micro-scale friction coefficient in Fig. 15.For comparison, angles of repose obtained experimentally and numerically for spheres  [51] are plotted along the numerical results. Results are in good agreement with the laboratory experiments which have shown that the angle of repose increases non-linearly with the friction coefficient  [48]. The discrete element method (DEM) has been used to investigate the numerical methodologies to design concrete armor units  [52,53]. A numerically generated repose angle for the same cross-shaped particle, computed using 3D DEM  [53], is also plotted for comparison. As expected, crosses exhibit more interlocking than spheres and cubes and yield, almost consistently, higher repose angles when the friction coefficient is non-zero. When the colliding bodies are frictionless, the bodies avalanche without generating a slope (Fig. 13). For the frictionless computation, the measured angle of repose mainly depends on the packing proper of bodies. For all shapes, repose angles are close to, but greater than, those measured for dry sand. Results obtained by ETM are comparable to those reported in  [53].A novel energy tracking method (ETM) has been proposed to solve collision responses in a multi-body system. The ETM belongs to the family of impulse methods, which apply impulses to avoid penetration. In previous versions of the impulse method, i.e. SMM and SQM, the relative velocity at the contact point after collision is directly derived from the relative velocity before collision—in a purely simultaneous or sequential manner, and the impulse is a function of the change of the relative normal velocity. In this generalized form of the impulse method, the relative velocity is adjusted gradually over a set of iterations, while within each of these iterations, their effects are considered simultaneously. By applying velocities gradually to the contact points, the impulses are able to influence multiple contact points at the same time, enabling propagation of impulse effects, and thereby improving the overall ability of the method to capture propagation of forces during dynamics simulations. Furthermore, ETM ensures that no artificial energy loss or gain results from the resolution of the collisions, setting the stage for a more rigorous analysis of energy lost due to other factors, such as brittle deformation, during impact.

@&#CONCLUSIONS@&#
