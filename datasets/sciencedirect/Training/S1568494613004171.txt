@&#MAIN-TITLE@&#
Multi-level image thresholding by synergetic differential evolution

@&#HIGHLIGHTS@&#
We have applied an improved optimization technique SDE, which is improved version of basic differential evolution (DE)We have investigated the performance of SDE taking two criteria; Gaussian approximation and entropy.

@&#KEYPHRASES@&#
Image segmentation,Optimization,Entropy,Gaussian curve fitting,

@&#ABSTRACT@&#
The multi-level image thresholding is often treated as a problem of optimization. Typically, finding the parameters of these problems leads to a nonlinear optimization problem, for which obtaining the solution is computationally expensive and time-consuming. In this paper a new multi-level image thresholding technique using synergetic differential evolution (SDE), an advanced version of differential evolution (DE), is proposed. SDE is a fusion of three algorithmic concepts proposed in modified versions of DE. It utilizes two criteria (1) entropy and (2) approximation of normalized histogram of an image by a mixture of Gaussian distribution to find the optimal thresholds. The experimental results show that SDE can make optimal thresholding applicable in case of multi-level thresholding and the performance is better than some other multi-level thresholding methods.

@&#INTRODUCTION@&#
Image segmentation is a very common image processing operation, since all image processing schemes need some sort of operation of the pixels into different classes. In order to determine thresholds for segmentation, most methods analyze the histogram of the image. The optimal thresholds are those values of intensity that can separate different objects from each other or from the background to such an extent that a decision can be made without further processing [1,2] and these are often found by either minimizing or maximizing an objective function with respect to the values of the thresholds. It is typically simple and computationally efficient and based on the assumption that the objects can be distinguished by their gray levels. The automatic fitting of these thresholds is one of the main challenges in image segmentation. There are a lot of approaches classifying thresholding methods. Sezgin and Sankur [3] presented a survey of a variety of thresholding techniques. They classified the thresholding techniques in terms of parametric and non parametric approaches.Parametric thresholding methods exploit the first-order statistical characterization of the image to be segmented. An attempt to find an estimate of the parameters of the distribution that best fit the given histogram data is made by using the least-squares estimation method. Over the years, many researchers have proposed several algorithms to solve the problem of Gaussian curve fitting for multi-level thresholding. Some instances of parametric thresholding methods available in literature as follows: Snyder et al. [4] presented a method for fitting curves based on a heuristic method called tree annealing. Nakib et al. [5] proposed a fast scheme for optimal thresholding using a simulated annealing algorithm. Zahara et al. [6] proposed a hybrid Nelder–Mead Particle Swarm Optimization (NM-PSO) method, while a hybrid method based on Expectation Maximization (EM) and Particle Swarm Optimization (PSO+EM) is proposed by Fan and Lin [7] for dealing with image segmentation. Application of basic differential evolution (DE) for solving image segmentation problem is given in [8].Non-parametric approaches, on the other hand, find the thresholds that separate the gray-level regions of an image based on some discriminating criteria such as the between class variance, entropy and cross entropy. Otsu's [2] proposed a method in which optimal thresholds are selected by maximizing the between class variance. However, inefficient formulation of between class variance makes the method very time-consuming for multi-level threshold selection. To overcome this problem, Liao et al. [9] proposed a fast recursive algorithm called Fast Otsu method, along with a look-up-table and implemented it for multi-level thresholding. Ye et al. [10] applied PSO algorithm to optimize the Otsu's criterion. Kapur et al. [11] have given a method for gray-level picture thresholding by using the entropy of the histogram. Dirami et al. [12] adopted a fast multilevel thresholding image segmentation scheme through a multiphase level set method. Madhubanti and Amitava [13] presented a hybrid cooperative–comprehensive learning based PSO algorithm based on maximum entropy criterion. Yin [14] developed a recursive programming technique to reduce the order of magnitude of computing the multi-level thresholds and further used the PSO algorithm to minimize the cross entropy. Horng [15] proposed honey bee mating optimization based multi-level thresholding using maximum entropy. Recently, Kwedlo [16] presented a clustering method combining differential evolution with the K-means algorithm.Despite the availability of large amounts of algorithms/methods for dealing with image thresholding using conventional parametric and non parametric approaches, it is worth noting that the computational time using these techniques grows exponentially with the increase in the number of required thresholds. To overcome this deficiency, several algorithms have so far been proposed in literatures [4–16] which aims at reducing the computational time for searching thresholds with quality effectiveness taking the advantage of intelligent techniques, such as neural networks (NN) and evolutionary algorithms (EAs). Over the last few decades, Neural Networks have shown a good potency in dealing with the problems in complicated systems [17–20]. In the past, some researchers tried various neural network methods to solve the problem of image segmentation [21,22]. All works on neural networks illustrated that the methods of neural networks were capable in handling image segmentation problems. Taking into account the advantages of the evolutionary algorithms (EAs), the deployment of thresholding techniques based on it have flourished in recent years [4–8,10,12–16]. It has been shown that these techniques offer better performances than the classical approaches due to their domain independent nature and the capability of finding optimal or near optimal solutions in a large search space. Although these methods have shown to be efficient in solving the multi-level thresholding problem and provide better effectiveness than other traditional methods, finding of threshold in multi-level thresholding is still time taking process which indicates that further improvement is needed to enhance the efficiency of existing methods while maintaining quality.Differential evolution (DE) is one of the most prominent evolutionary algorithms, proposed by Storn and Price [23,24]. It is well known for its ability to efficiently and adaptively explore large search spaces. It has two main advantages: faster convergence over other evolutionary algorithms on some problems [25], and it has very few control parameters to adjust. The advantages of DE over other evolutionary algorithms, make it a potential choice for solving real life application problems [16,26–30]. Keeping this in view, an improvement on Gaussian curve fitting and the entropy method could be greatly enhanced in the case of multi-level thresholding.In the present study we have chosen an advanced DE version called synergetic differential evolution (SDE) which has been successfully applied by the authors for dealing with benchmark and real life problems [31]. Motivated by the results of our SDE algorithm [31] on benchmark and real life problems in this paper SDE is used for multi-level image thresholding. Gaussian curve fitting and the entropy functions respectively are considered as evaluation criteria for SDE and has been named as SDE_Gaus and SDE_Entropy respectively. SDE is a fusion of three modifications (1) opposition based learning (OBL) for population initialization [32]. The basic idea behind OBL is the simultaneous consideration of an estimate and its corresponding opposite estimate to achieve a better approximation for the current candidate solution. Mathematically, it has been proven that the opposite numbers are more likely to be closer to the optimal solution than purely random ones. (2) Best of random individuals as base individual in mutation step [33]. The rationale of using tournament best process is to prevent the search from becoming a purely random search or a purely greedy search. (3) Dynamic population update (i.e. Single population) [34], the population is updated immediately if the newly found solution is better than the target solution. While in original DE the population update step is performed after the completion of the generation. The newly found better solutions can take part in mutation and crossover operation in the current generation itself as opposed to DE where these better solutions take part in mutation and crossover operations in next generation. Although these modifications are very simple and naive, the respective studies have shown that the effects of these changes are considerable. Our objective in this study is to observe the combined effect of some of these variations that showed distinct advantages in the empirical study concerning convergence rate and solution quality. Experimental results on four synthetic and three real test images demonstrate the algorithm's ability to perform threshold selection while preserving main features of the original image.The remainder of the paper is structured as follows. Section 2 describes the SDE algorithm. Image thresholding techniques are given in Section 3. Section 4 gives the details of test images, parameter settings and performance metric. Results are analyzed and discussed in Section 5 and finally, the paper is concluded in Section 6.This section briefly introduces the Synergetic Differential Evolution (SDE) [31]. The working of SDE is given in Algorithm 1 with the help of a pseudo-code. Like all other population based search algorithms, SDE starts with a population S of NP candidate solutions:Xi=(xi,1,xi,2,…,xi,D),i=1,2,…,NP, where the index i denotes the ith individual of the population and D denotes the dimension of the problem. The main operations of SDE are as follows:Population initialization: Generate a population P of NP individuals randomly between lower and upper boundsXmin=(xmin,1,xmin,2,…,xmin,D),Xmax=(xmax,1,xmax,2,…,xmax,D)using Eq. (1) and generate it's corresponding opposite population OP, also of size NP using Eq. (2)(1)Pi,j=xmin,j+ri,j×(xmax,j−xmin,j)(2)OPi,j=xmin,j+xmax,j−Pi,j,i=1,2,…,NP;j=1,2,…,Dwhere Pi,jand OPi,jdenote the jth variable of the ith individual of the population and its opposite population, respectively and ri,jis a uniform random number between 0 and 1. Select NP best individuals as initial population S from {PUOP}.Mutation: Mutation operator used in SDE follows the rule of selecting the best individual from the three distinct individuals Xtb, Xr2 and Xr3 randomly from the population corresponding to target point Xi(distinct from Xi). After that the best individual (say) Xtbis taken as the base individual while the other individuals act as donors for vector differences. Mathematically it is given by(3)Vi=Xtb+F×(Xr2−Xr3)the scaling factor F is a positive control parameter and is used for scaling the difference of vectors.Crossover: The crossover operation of SDE is same as of DE. Here, the mutant vectorVi=(vi,1,vi,2,…,vi,D)exchanges its components with the target vectorXi=(xi,1,xi,2,…,xi,D)to form a trial vectorUi=(ui,1,ui,2,…,ui,D)using the equation(4)ui,j=vi,jifri,j≤Cr∨j=jrandxi,jotherwisewhere j=1,…,D andjrand∈1,…,Dis a random parameter's index and Cris crossover probability.Selection: Selection operation determines whether the target or the trial individuals will survive for further generation. Inspired by the advantage of Gauss–Seidel method against Jacobi method for linear equations, the dynamic strategy is used in population update. There is only one population in which individuals are continuously updated by their competitive children. The population is updated according to the following equation(5)X′i=Uiiff(Ui)≤f(Xi)XiotherwiseAlgorithm 1Pseudo-code of SDE AlgorithmStep 1:Population initialization: Generate a uniformly distributed random population P of NP individuals Xi, i=1,2,…, NP, using Eq. (1) and another population OP containing the individuals opposite to the individuals of population P with the help of Eq. (2). Both populations have the same number of individuals (NP). Now NP fittest individuals of the initial population are selected from these 2NP individuals according their fitness valueStep 2:Set i=0/* individual counter */Step 3:i=i+1Step 4:Mutation: Corresponding to target individual Xi, select three distinct individuals Xtb, Xr2 and Xr3 such that i≠tb≠r2≠r3 from population and generate perturbed individual Viusing Eq. (3)Step 5:Crossover: Recombine target vector Xiwith perturbed individual Vito generate trial vector Uiusing Eq. (4)Step 6:Selection: Evaluate the objective function value at Ui. Update the population immediately, if Uiis better than Xi(Eq. (5)); otherwise continue with old one (i.e. Xi)Step 7:If i<NP then go to Step 3; otherwise go to Step 8Step 8:Check whether the termination criterion is met. If yes then stop; otherwise go to Step 2The optimal thresholding is performed by minimizing or maximizing an objective function which uses the selected thresholds as parameters. Several objective functions have been proposed in the literature devoted to thresholding [3]. These functions are determined generally from the histogram of the image I, denoted by g(i), for i=0, …, L−1, where g(i) represents the number of pixels having the gray level i and L is the total number of gray levels. The normalized probability at gray level i is defined by the ratio h(i)=g(i)/N where N is the total number of pixels. Out of these, we have selected the objective functions defined by Kapur et al. [11] and Gaussian approximation of normalized histogram [5,6] of the image as these are the most commonly used for image segmentation. These methods are briefly described in the next subsections.The intensity distributions of objects and background in an image may be assumed to have Gaussian distributions with distinct means and standard deviations. The properly normalized multimodal histogram of a given image I is fitted to a mixture Gaussian probability density function (pdf). Mathematical formulation is as follows:(6)p(x)=∑i=1dPiexp−(x−μi)2σi2where Piis the amplitude on μi, μiis the mean and σi2 is the variance of ith Gaussian pdf respectively and d is number of probability density functions to approximate the original histogram. Our goal is to find a set of parameters,Θ=Pi,μi,σi;i=1,2,…,ncof mixture density function(6)using SDE, so that the error between the density function and the actual histogram is minimal that is given by the following expression[5]:(7)minimizeJ=∑ih(i)−p(Θ,xi)∑ih(i)where, i ranges over the bins in the measured histogram. Here, J is the objective function to be minimized with respect to Θ and work of SDE over here. Gaussian curve fitting method graphically is illustrated in Fig. 1. Suppose we want to segment the image given in Fig. 1(a) in five classes then we need five Gaussian distributions to approximate the normalized histogram (Fig. 1(b)) shown in Fig. 1(c). From these distributions mixture Gaussian probability distribution is obtained that approximate the histogram of the image (Fig. 1(d)).After fitting the mixed Gaussian probability density function, the optimal threshold could be determined by minimizing the overall probability of error, for two adjacent Gaussian pdf's (shaded by blue in Fig. 1(c)), given by(8)e(ti)=Pi∫−∞tipi(x)dx+Pi+1∫ti∞pi+1(x)dx,i=1,2,…d−1with respect to the threshold ti, where pi(x) is the ith pdf. Then the overall probability to minimize is:(9)E(T)=∑i=1de(ti)where T is the vector of thresholds:0<t1<t2<⋯<td−1<L−1. To find the thresholds values for which the error is minimal requires differentiation of e(ti) with respect to ti(using Leibniz's rule) and equating the result to zero. The obtained equation is as follows:(10)Pi×pi(ti)=Pi+1×pi+1(ti)This equation is solved for tito find the optimum threshold. Using Eq. (6) in the general solution of Eq. (10) results in the following solution for the threshold ti:(11)Ati2+Bti+C=0where(12)A=σi2−σi+12=2(μiσi+12−μi+1σi2),C=σi2μi+12−σi+12μi2+4σi2σi+12Inσi+1PiσiPi+1Out of the two possible solutions of above quadratic equation, only one will be feasible [5,6].Initially entropy algorithm was developed for bi-level thresholding and was later extended for multiple levels. The bi-level algorithm can be described as follows:(13)f(t)=H0+H1whereH0=−∑i=0t−1h(i)ω0lnh(i)ω0,ω0=∑i=0t−1h(i)H1=−∑i=tL−1h(i)ω1lnh(i)ω1,ω1=∑i=tL−1h(i)The optimum threshold t is such that the value of f (t) is maximized. The multi-level thresholding problem consists in selecting the c-dimensional vector T={(t1, t2,…, tc): t1<t2<⋯<tc} of threshold which maximize the objective function f(T):(14)f(T)=∑i=0cHiwhereHi=−∑j=titi+1−1h(j)ωilnh(j)ωi,ωi=∑j=titi+1−1h(j),∀i∈{0,1,...,c},t0=0,tc+1=Lwhere c is the number of thresholds. This entropy criterion based measure tries to achieve more and more centralized distribution for each histogram based segmentation region in the image.The application of SDE approach to the image thresholding problem depends on the criterion used for optimization. In order to apply SDE to find the parameters of mixture Gaussian probability distribution, we have to work out a method for encoding the individuals. It takes the value of variable d (number of classes) from the user. We know that to fit kth class of pixels we need three variables Pk, μkand σk, therefore to fit d classes we will need 3d variables. That is the dimension (D) of the problem is D=3d. The ith individual Xiof SDE population is represented as Fig. 2(a). To start the optimization, SDE uses the initial population generated by random number generator and the opposite number generator. At each generation of optimization process, the fitness of each individual Xiis calculated using Eq. (7). Once the value of fitness of trial individual corresponding to Xiis better, update the population. The population of the next generation is then produced from these individuals by using SDE operators (mutation, crossover, and selection). Terminate the execution of SDE when a termination criterion satisfied to obtain the final solution, i.e. optimal parameters of mixture Gaussian probability distribution.On the other hand, when SDE uses entropy as criterion function the working is same but the dimension (D) of the problem will be c (number of thresholds) and ith individual Xiis represented as Fig. 2(b). The fitness at Xiis evaluated using Eq. (14).The basic procedure of image thresholding based on SDE algorithm is shown in Fig. 3. The final solutions in case of the Gaussian curve fitting are the parameters of the mixture Gaussian probability distribution while in case of entropy it is directly thresholds values. After fitting the Gaussian pdf's the optimal (d−1) thresholds:0<t1<t2<⋯<tk<⋯<td−1<L−1are obtained by using Eq. (11).This section, evaluates the computational complexity of the proposed algorithm. Compared to the parametric methods, nonparametric approaches are more computationally efficient and are simpler to implement in practice. Both parametric and nonparametric approaches have one common problem that the computational complexity becomes exponential when bi-level thresholding is extended to multi-level thresholding (i.e. O(Lc) with the number of thresholds c in terms of fitness function evaluation). We generally agree that the computational time of SDE is reduced only to the computational time of the fitness, because the computation of the mutation and crossover operations is much faster than that of fitness. Computation time is independent of the image size, since the searching space of SDE algorithm is [0.255]. So, the computation time is in proportion to the population size and the maximum iteration of SDE algorithm. According to proposed algorithm, for determining c threshold, we need to execute bi-level thresholding procedure c times for each individual. By using the proposed algorithm, in the worst case, the objective function will be computed K×NP×c times, where K is the number of iterations and NP is the population size. So the complexity of the proposed algorithm in the worst case is O(K×NP×c). This shows that in our case computational complexity grows linearly with the number of thresholds.One can remark that the thresholding based on the Gaussian curve fitting is more complex than that of entropy based method. Since in entropy based method to find c thresholds dimension of an individual of SDE is c but in case of Gaussian curve fitting it is 3c+3. Moreover, in Gaussian curve fitting, after finding 3c+3 parameters algorithm find the c thresholds that need extra computation efforts.In the present study we have used the four synthetic images that are given in Fig. 4with resolution of 256×256 pixels. Gaussian filter is used with default parameters setting to smooth these images. Three real images are also taken from literature; Lena, Pepper and Cameraman that are given in Fig. 5. The test images “Lena” and “Pepper” are of size 512×512 each and “Cameraman” is of size 256×256 pixels with 8 bit gray-levels.SDE has 4 parameters that must be well fitted. Preliminary testing has been done for the purpose of getting suitable values of these parameters and the fine tuned results are as follows:•Population sizeNP=10×D.Scaling factor F=crossover rateCr=0.25.The stopping criterion used is the maximum number of iterations 200 for all the algorithms.Total number of runs=50.The coding is done in Matlab 7.13.To judge the quality of segmented image, uniformity measure [35] is utilized which has also been extensively used in several literatures. This uniformity measure is given as:U=1−2×(d−1)×∑j=1d∑i∈Rj(fi−μj)2N×(fmax−fmin)2where d denotes number of classes, Rjis jth segmented region, fiindicates the gray level of the pixel i, μjimplies mean of pixels in jth region, N denotes the total number of pixels in the given image, fmax and fmin give the maximum and minimum gray levels of pixels in the given image. The value of the uniformity measure, U, should be a positive fraction lying between 0 and 1. A higher value of U indicates that there is better uniformity in the thresholded image, depicting better quality of thresholding and vice versa.Computation time elapsed by the algorithms in finding the best solution are also recorded. Success rate (SR), ratio of number of successful runs to the total number of runs, is also measured to check the reliability of the algorithms.

@&#CONCLUSIONS@&#
In this paper, the efficiency of SDE was validated on the global optimization problem of image thresholding by taking two different evaluation criteria, Kapur's entropy and overall probability of error in Gaussian approximation separately to find multilevel thresholds. The objects and background components within the image were assumed to fit into Gaussian distributions exhibiting non-equal mean and standard deviation. The histogram was thus approximated by a mixture of Gaussian probability functions. SDE was used to estimate the parameters for the mixing density function as it sought to get a minimum error between the density function and the original histogram. It was referred to as SDE_Gaus. On the other hand, SDE_ Entropy used the objective function of maximum entropy to find the optimal thresholds. Experimental results demonstrated that SDE_Entropy produces more satisfactory results in comparison to SDE_Gaus, in terms of computational efficiency. These results are quite expected because the segmentation results depend heavily on the objective function selected. However, in terms of picture quality, Gaussian method is preferred over the entropy method. Experiments on the running times of the algorithms show that both the variants of SDE are scalable and that the running times of the algorithms grow at a linear rate with respect to the size of the problem. Last but not least, SDE algorithm can be successfully applied to the area of image thresholding which is an important part of image segmentation. The segmentation results are promising and it encourage further researches for applying the SDE algorithm to complex and real-time image analysis problem such as the automatic target recognition and the complex document analysis.