@&#MAIN-TITLE@&#
Flows over time in time-varying networks: Optimality conditions and strong duality

@&#HIGHLIGHTS@&#
Studying a general class of network flows over time in a continuous-time model.Developing the key concepts and techniques that are the cornerstones of static network flows.Establishing reduced cost and negative cycle optimality conditions.Deriving a strong duality result from these optimality conditions.

@&#KEYPHRASES@&#
Flows over time,Continuous linear programming,Optimality conditions,Duality,

@&#ABSTRACT@&#
There has been much research on network flows over time due to their important role in real world applications. This has led to many results, but the more challenging continuous time model still lacks some of the key concepts and techniques that are the cornerstones of static network flows. The aim of this paper is to advance the state of the art for dynamic network flows by developing the continuous time analogues of the theory for static network flows. Specifically, we make use of ideas from the static case to establish a reduced cost optimality condition, a negative cycle optimality condition, and a strong duality result for a very general class of network flows over time.

@&#INTRODUCTION@&#
In various applications of network flows, flow values on arcs are not constant but may change over time due, e.g., to seasonal altering demands, supplies and arc capacities. Moreover, flow does not travel instantaneously through a network but requires a certain amount of time to travel through each arc. These aspects are captured by network flows over time (also called dynamic network flows), which were introduced by Ford and Fulkerson (1958, 1962) in the 1950s. Since then, a large number of authors have studied different features of network flow over time models (see Skutella, 2009 and the references therein).Research on flows over time has taken two approaches depending on whether a discrete or continuous representation of time is used (Fleischer & Tardos, 1998). Research on the discrete-time model typically uses the time-expanded network, either explicitly in the algorithms, or implicitly in order to proof efficiency of theoretically or practically algorithms (see, e.g., Fleischer & Skutella, 2007). Research on the continuous-time model has been mostly conducted by Anderson, Philpott and Pullan (see, e.g., Anderson, 1989; Anderson & Philpott, 1989, 1994; Philpott, 1982, 1990; Pullan, 1993, 1997), who consider networks with time-varying parameters. They mainly focus on proving the existence and characterization of optimal solutions, establishing a duality theory, and developing solution algorithms.In this paper, we study the Minimum Cost Flow over time Problem (hereafter called MCFP for brevity) in the continuous time model. Here the task is to find a minimum cost flow to satisfy (time-varying) demands through a capacitated network, in which arc costs can vary with time, each arc has a transit time, and storage (with a corresponding cost) is allowed at the nodes. This problem was first introduced by Anderson (1989), who characterizes extreme point solutions for the problem given rational transit times. Anderson and Philpott (1994) review results relating to MCFP. They introduce a dual problem for MCFP with a corresponding definition of complementary slackness and prove a weak duality result.A closely related problem to MCFP is the maximum flow over time problem in the continuous-time model. The aim of this problem is to send as much flow as possible through a capacitated network from a source to a sink within a given time interval. This problem was studied by Anderson, Nash, and Philpott (1982). They introduce the concept of continuous-time cuts and establish a MaxFlow-MinCut theorem (see also Anderson & Nash, 1987) for the case that transit times are zero and the transit capacities are bounded measurable. This result was later extended to arbitrary transit times by Philpott (1990) and to a general model combining both discrete and continuous aspects of flows over time into a single model by Koch, Nasrabadi, and Skutella (2010).In the absence of transit times, MCFP becomes a special type of Separated Continuous Linear Programs (SCLP) (see Anderson, 1978). Pullan (1997) considers a more general class of SCLP with time-delays, so-called Separated Continuous Linear Programs with Time-Delays (SCLPTD). For the case that transit times are rational, Pullan (1997) transforms SCLPTD into a larger problem which is very close to a special class of SCLP and extends some results of SCLP to SCLPTD. In particular, he observes that the main results for SCLP can be extended with ease to give a similar theorem for SCLPTD.The common approach in solving CLP as well as SCLP is to approximate the original problem with a finite-dimensional linear program by discretization of time. This approach has attracted most of the attention for solving practical problems for the following reasons:1.Discretization of time leads to static problems that can be solved by using traditional methods.The discrete approximated solutions converge to an optimal solution for the original problem as the discretization becomes finer.While discretization-based algorithms are mainly used in practice due to these observations, the size of resulting discrete approximations is enormous, which leads to long computation times. Consequently, a number of authors attempted to generalize the simplex method to solve instances of SCLP as well as MCFP without discretization. In particular, Anderson and Philpott (1989) attempt to develop a simplex algorithm for MCFP with zero transit times and piecewise constant/linear input functions. They discuss how the simplex method can be developed for MCFP to directly produce an exact solution, rather than doing a discretization to get an approximation to the optimal solution. But, there are no guarantees for the convergence of this algorithm and it often produces a sequence of solutions which converge to a suboptimal solution. In the most recent paper, Weiss (2008) examines SCLP with piecewise linear problem data and develops a simplex algorithm that gives an exact solution after a finite number of iterations. He also characterizes the form of optimal solutions and establishes a strong duality result.So far we reviewed the literature on network flows over time where transit times are assumed to be time-invariant. There is also a number of models that allow the transit times to vary over time in both discrete-time model (Cai, Kloks, & Wong, 1997; Cai, Sha, & Wong, 2001; Miller-Hooks & Mahmassani, 1998; Miller-Hooks & Patterson, 2004; Nasrabadi & Hashemi, 2010; Opasanon & Miller-Hooks, 2006; Wen, Çatay, & Eglese, 2013) and continuous-time model (Hashemi & Nasrabadi, 2011; Orda & Rom, 1990, 1991, 1995). In particular, Miller-Hooks and Patterson (2004) present a pseudo-polynomial time algorithm for the problem of sending a given amount of flow from a single source to a single sink at the shortest possible time in a time-varying network, where all parameters can change at discrete points in time. They also present a technique for converting a network with multiple sources and multiple sinks into an equivalent single source and sink network by adding a small number of nodes and arcs to the existing network. Cai et al. (2001) study the problem of sending a given amount of flow from a single source to a single sink with minimum cost in a time-varying network. They present a kind of the successive shortest path algorithm for solving the problem that runs in pseudo-polynomial-time. Nasrabadi and Hashemi (2010) extent this model to multiple sources and multiple sinks in which the supplies at source nodes and demands at sink nodes may vary with time. They present a discrete-time version of the successive shortest path algorithm for solving the resulting problem.Our contribution. In this paper, we are concerned with the development of continuous-time analogues to those concepts and techniques which are the cornerstones of static network flows. Specifically, we develop several network based optimality conditions analogous to that found in static network flows for MCFP with piecewise analytic input functions and rational transit times. We derive a strong duality result from these optimality conditions.It is worth pointing out that previously, strong duality was developed by Pullan (1996, 1997) for SCLP given piecewise analytic problem data and for SCLPTD with rational transit times and piecewise constant/linear input functions. The main result of his paper is a strong duality theorem for SCLP with piecewise analytic data. He first showed that strong duality holds for SCLP under the conditions of piecewise constant/linear problem data in his original paper (Pullan, 1993) as a consequence of his elegant algorithm. This result was the starting point of an extensive duality theory in Pullan (1996). In this paper, we do not follow the Pullan’s approach, but rather we make use of ideas from the area of static network flows.The remainder of this paper is organized as follows. Section 2 provides preliminaries and earlier results that are required for the purpose of the paper. In Section 3, we introduce the concept of augmenting paths and cycles, and prove the existence of least cost augmenting paths. We then establish a reduced cost optimality condition, a negative cycle optimality condition, and a strong duality result for MCFP in Section 4. Section 5 is devoted to our conclusions. Our results in Sections 3 and 4 are based on the assumption that the cost functions are continuous. In Appendix A, we show that this assumption makes no restriction and all our results can be extended to the case where cost functions have some discontinuities.In this section, we give a formal description of MCFP and present some existing results, required throughout the paper.We are given a directed graphG=(V,E)with node set V and arc set E and a time horizonT>0. We denote an arc e from node v to node w bye=(v,w)and assume, without loss of generality, that there is at most one arc between any pair of nodes in G. Each arc e is associated with two functions; the transit costce:[0,T]→Rand the transit capacityue:[0,T]→R⩾0. Here,ce(θ)gives the cost per flow unit for sending flow in arc e at timeθandue(θ)gives an upper bound on the rate (i.e., amount of flow per time unit) at which flow can enter arc e at timeθ. In addition, for each arc e, a transit timeτe∈Ris given. The transit time is the amount of time required to send flow from the tail to the head of e. Thus flow entering arce=(v,w)at timeθarrives at node w at timeθ+τe.Each node v is associated with three functions; the storage costcv:[0,T]→R, the storage capacityUv:[0,T]→R⩾0, and the supply/demand ratebv:[0,T]→R. Herecv(θ)is the cost per time unit for storing one unit of flow at node v at timeθandUv(θ)is an upper bound on the amount of flow that can be stored at node v at timeθ. Moreover, depending on whetherbv(θ)>0orbv(θ)<0, the value|bv(θ)|denotes the supply or demand rate of flow at node v at timeθ. Thus, the amount of available supply or required demand up to timeθat node v equalsBv(θ)≔∫0θbv(ϑ)d(ϑ). In addition, there may be an initial storagesv∈R⩾0at node v. In this case, the total supply or demand at node v up to timeθis given byBv(θ)≔sv+∫0θbv(ϑ)d(ϑ).A flow over time (or simply flow) x is described by Lebesgue-measurable functionsxe:[0,T)⟶R⩾0∀e∈E.The valuexe(θ)denotes the rate of flow entering arc e at the point in timeθ. Therefore, the amount of flow entering arc e up to timeθequalsXe(θ)≔∫0θxe(ϑ)dϑ. We letXe-τto be a shifted function defined by(Xe-τ)(θ)≔Xe(θ-τ)for eachθ∈[0,T). The flow x induces a storage functionYv:[0,T)⟶Rat node v by the flow conservation constraint(1)Yv≔Bv-∑e∈δ+(v)Xe-∑e∈δ-(v)(Xe-τe),where the valueYv(θ)measures the amount of flow stored at node v at timeθ. Here and throughout the paper, the notationδ+(v)andδ-(v)are used to denote the set of all arcs leaving and entering node v, respectively. Obviously, the functionsX,B,Yare absolutely continuous. Moreover, we can assume without loss of generality that U is absolutely continuous as well. That is why we have used a capital letter to denote these functions in order to distinguish them from bounded measurable functions.The aim of MCFP is to find a flow over time that satisfies all demands and obeys all transit and storage capacity constraints over the time interval[0,T], while minimizing the total transit and storage costs. This problem is formulated as an infinite-dimensional linear program with a network structure and arc time-delays as below:(MCFP)min∫0T∑e∈Ece(θ)xe(θ)dθ+∫0T∑v∈Vcv(θ)Yv(θ)dθs.t.∑e∈δ+(v)Xe-∑e∈δ-(v)(Xe-τe)+Yv=Bv∀v∈V,0⩽xe⩽ue∀e∈E,0⩽Yv⩽Uv∀v∈V.This formulation is equivalent to that given by Anderson (1989) and provides a very general model for network flow over time problems.We say that flow x (with corresponding storage Y) is feasible if the pair x and Y satisfies the constraints of (MCFP). We require to work within the spaceL∞([0,T])of essentially bounded measurable functions on[0,T]in which equivalent functions differ only on a set of measure zero. In particular,ce,ue, andxefor alle∈Eandcv,bvfor allv∈Vbelong toL∞([0,T]). Hence, the feasible regionFof MCFP is defined asF≔x∈L∞E[0,T]|xwith corresponding storageYis feasible for(MCFP).We assume thatFis not empty. This guarantees the existence of an optimum solution for (MCFP) at an extreme point ofF(see Pullan, 1997, Theorem 3.1).Anderson and Philpott (1994) develop a dual problem for (MCFP) in an analogous manner to that described for static network flows. Before presenting the dual problem, let us assume without loss of generality that the storage costs are zero and there is no initial storage at nodes. Then, the dual problem can be formulated as follows:(MCFP∗)max∫0T∑v∈Vbv(θ)πv(θ)dθ-∫0T∑v∈VUv(θ)dπv-(θ)+∫0T∑v∈Vue(θ)ρe(θ)dθs.t.πv(θ)-πw(θ+τe)+ρe(θ)⩽ce(θ)∀e=(v,w)∈E,θ∈[0,T),πvof bounded variation and rightcontinuous on[0,T]withπv(T)=0∀v∈V,ρe⩽0∀e∈E.This formulation requires explanation. Sinceπvis of bounded variation, there exist two functionsπv+andπv-, known as the Jordan decomposition ofπv, that are monotonic increasing on[0,T]withπv(θ)=πv+(θ)-πv-(θ)forθ∈[0,T](see, e.g., Apostol, 1974). The functionsπv+andπv-are called the positive and negative part ofπv, respectively. In the objective function,πv-denotes the negative part ofπvand the notation∫0TUv(θ)dπv-(θ)denotes the Lebesgue–Stieltjes integral of the functionUvwith respect to functionπv-from 0 to T.For eache∈E, the dual variableρecan be eliminated from (MCFP∗) since it appears in the objective function integrated withuewhich is nonnegative on[0,T]. Hence, at an optimum solutionρeshould be as large as possible. This observation implies that if we know optimal values for the dual variablesπ, we can compute the optimal values forρeby(2)ρe(θ)=min{0,ce(θ)-πv(θ)+πw(θ+τe)}∀e=(v,w)∈E,θ∈[0,T].Theorem 1Weak Duality, Anderson and Philpott, 1994V[(MCFP)]⩽V[(MCFP*)].Here and throughout the rest of this paper, we useV[OP]to denote the optimal value of an optimization problem OP. Moreover, we useV[OP,x]to denote the objective function value for a given solution x.To state the next theorem, we introduce some basic definitions. We say that a monotonic increasing functionf:[a,b]→Ris strictly increasing atθ∈(a,b)iff(θ1)<f(θ)<f(θ2)for anyθ1,θ2∈[a,b]withθ∈(θ1,θ2),fis strictly increasing at a iff(a)<f(θ)for everyθ∈(a,b], and f is strictly increasing at b iff(θ)<f(b)for everyθ∈[a,b). A function f of bounded variation on[a,b]is said to be strictly increasing atθ∈[a,b]iff+is strictly increasing atθ, similarly f is strictly decreasing atθiff-is strictly increasing atθ.Theorem 2Complementary Slackness, Anderson and Philpott, 1994Suppose that x with corresponding storage Y derived from(1)is feasible for(MCFP)andπwith correspondingρgiven by(2)is feasible for(MCFP∗). If for eache=(v,w)∈E,v∈V, andθ∈[0,T], the following conditions are met:(CS1)ifce(θ)-πv(θ)+πw(θ+τe)>0, thenxe(θ)=0;ifce(θ)-πv(θ)+πw(θ+τe)<0, thenxe(θ)=ue(θ);ifπvis strictly increasing atθ, thenYv(θ)=0;ifπvis strictly decreasing atθ, thenYv(θ)=Uv(θ).We shall refer to conditions (CS1)–(CS4) as complementary slackness conditions. The functionπof bounded variation is said to be complementary slack with x if x andπsatisfies these conditions.It is an open question as to whether a strong duality result can be established wherebyV[(MCFP)]=V[(MCFP∗)]and these values are attained in each program. As noted previously, a primal optimal solution exists for (MCFP). Thus we are left with the task to find a dual feasible solutionπfor whichV[(MCFP),x]=V[(MCFP∗),π]. In general, strong duality may not hold, even for the special case that all transit times are zero (see Pullan, 1997 for some examples). However, we show that strong duality can be derived for (MCFP) and (MCFP∗) under the following assumptions.Assumption 1The transit timesτe,e∈Eare all rational as well as the time horizon T.The input functionsce,uefor alle∈Eandbv,uvfor eachv∈Vare all piecewise analytic on[0,T].We recall that a functionh:[0,T]→Ris said to piecewise analytic if there exists a partition{θ0,θ1,…,θm}of[0,T],∊>0, andhkanalytic on(θk-1-∊,θk)withhk(θ)=h(θ)for allθ∈[θk-1,θk)and allk=1,…,m. It follows from this definition that piecewise analytic functions are right-continuous but not necessarily left-continuous. In fact, they may be discontinuous at a finite number of points.We suppose that Assumptions 1 and 2 hold throughout the rest of the paper. These assumptions guarantee the existence of a piecewise analytic optimal solution for (MCFP).Theorem 3Pullan, 1997UnderAssumptions 1 and 2, ifFis nonempty, then(MCFP)has an optimal solution which is also piecewise analytic on[0,T].A key observation in establishing strong duality for the static minimum cost flow problem is the fact that starting from some feasible flow we can construct a dual solution if the network contains no augmenting cycles with negative cost. More precisely, the shortest distance labels from one specified node to the other nodes in the residual network define a dual feasible solution which is complementary slack with the given feasible flow. We wish to derive duality results for (MCFP) along the same lines. To do so, we need to carry over the concept of least cost augmenting paths to the continuous-time setting.For each arce=(v,w)∈E, we create a backward arce←≔(w,v). This causes no notational conflict since(w,v)is not in E if(v,w)belongs to E due to our assumption that there is at most one arc between any pair of nodes. With each backward arce←we associate a transit timeτe←≔-τeand a cost functionce←≔-(ce-τe). We denote the set of all backward arcs byE←and setEr≔E∪E←.Following Philpott (1985), a node-time pair (NTP) is a member ofV×[0,T]which refers to a particular node at a specific time. We say that NTP(v,α)is arc-linked to NTP(w,β)if we can arrive at w at timeβwhen departing from v at timeαviae≔(v,w), i.e.,e∈Erandβ=α+τe. We also say that NTP(v,α)is node-linked to NTP(w,β)ifv=w. A continuous-time dynamic walk from NTP(v,α)to NTP(w,β)is a sequence of NTPsP:(v,α)=(v1,θ1),(v2,θ2),…,(vq,θq)=(w,β),such that consecutive members are either arc- or node-linked. The sequence P is called a continuous-time dynamic path if all NTPs are distinct and is called a continuous-time dynamic cycle ifq⩾3,(v,α)=(w,β), and all other NTPs are distinct. For reasons of brevity, hereafter, the term “continuous-time dynamic” is omitted when referring to a continuous-time dynamic walk, path, or cycle.Given a flow over time x with corresponding storage Y, we define the corresponding residual network as follows. Due to Theorem 3, the flow x is assumed to be piecewise analytic. For each arce∈Ewe define the residual capacity of e ande←byuer≔uer-xeandue←r≔xe-τe, respectively. Further, for each nodev∈V, we define the upper and lower residual capacity of v asUvr≔Uv-YvandLvr≔Yv, respectively. For any arce∈E, the residual capacitiesuerandue←rgive the maximum additional flow rate that can be sent or removed from arc e, respectively, without violating the arc capacity constraint0⩽xe⩽ue. Similarly, for any nodev∈V, the residual capacitiesUvrandLvrgive the maximum additional flow that can be stored or removed from node v, respectively, without violating the node capacity constraint0⩽Yv⩽Uv.The concept of residual network is based on the following intuitive idea. Suppose that the flow rate into arce=(v,w)at timeθisxe(θ). Then we can send an additional flow at rateue(θ)-xe(θ)into arc e at timeθ. Also notice that we can send a flow at ratexe(θ)from node w to node v over the backward arce←at timeθ+τe, which amounts to canceling the existing flow on the arc e at timeθ. Whereas sending one unit flow along arc e increases the flow cost byce(θ)units, sending one unit flow from node w to node v on the arce←at timeθ+τedecreases the flow cost byce(θ)units. Hence, the residual capacity and cost of the arce←were defined asxe-τeand-(ce-τe), respectively. The concept of upper and lower residual capacities at nodes is based on a similar idea.Next, we introduce the concept of strict augmenting paths and cycles for the continuous-time setting. Given a path (or cycle)P:(v1,θ1),…,(vq,θq), the residual capacity of P is defined ascap(P)≔min{u1,…,uq-1},where fork=1,…,q-1uk≔uer(θk)ife≔(vk,vk+1)∈Ermin{Uvkr(θ)|θk⩽θ⩽θk+1}ifvk=vk+1,θk<θk+1min{Lvkr(θ)|θk+1⩽θ⩽θk}ifvk=vk+1,θk+1<θk.Note thatcap(P)is a real number and not a function as time is already encoded within P. Clearly, ifcap(P)>0, one can push additional flow along P without violating capacity constraints. We refer to such a path (or cycle) as a strict augmenting path (or cycle).The cost of P is defined as the sum of the costs of the arcs at the times when they appear along P, i.e.,(3)c(P)≔∑k:vk≠vk+1cvk,vk+1(θk).Here, the index k varies from 1 toq-1. Recall that the storage costs are supposed to be zero and therefore the cost of a path or cycle depends only on arc transit costs. We refer to path P as a least cost strict augmenting path ifcap(P)>0and in addition, it has the minimum cost among all strict augmenting paths from NTP(v,α)to NTP(w,β).Before with proceeding our discussion, we give an example to show that it is not enough to define an augmenting path to be a path with positive residual capacity.Example 1Consider a network with two nodes s and t, and one arce≔(s,t). We letT≔1and definece(θ)≔ue(θ)≔2θfor eachθ∈[0,1]. Further, we assume that the transit time of e is zero. Storage of one flow unit is allowed at the nodes s and t, i.e.,Us(θ)≔Ut(θ)≔1for allθ∈[0,1]. The storage costs are supposed to be zero. Finally, there is a supply rate ofθat node s and a demand rate ofθat node t, i.e.,bs(θ)≔-bt(θ)≔θfor eachθ∈[0,1]. Hence, there is a unique feasible flow x given byxe=θwhich is, of course, optimal.We now examine the existence of least cost strict augmenting paths from NTP(s,0)to NTPs(t,θ),θ∈[0,θ]. For eachθ∈[0,1], the cost of pathPθ:(s,0),(t,0),(t,θ)is zero, butPθis not a strict augmenting path ascap(Pθ)=0. On the other hand, the pathPθ∊:(s,0),(s,∊),(t,∊),(t,θ)with0<∊<θ, which uses arc e at point in time∊, is a strict augmenting path whose cost is2∊. Hence, the cost of pathPθ∊becomes smaller as∊approaches to zero. Consequently, there exist no least cost strict augmenting path from(s,0)to(t,θ)for allθ∈[0,1]. However, for eachθ∈[0,1], one may consider the pathPθas an augmenting path because an additional flow can be sent in the neighborhood of pathPθ. Having defined augmenting paths in this manner, the pathPθis a least cost augmenting path from NTP(s,0)to NTP(t,θ)for eachθ∈[0,1].It follows from Example 1 that we need to define augmenting paths in an appreciate way. Let P be a given path. We can identify P by a sequence of nodes, sayv1,v2,…,vqsuch thatei≔(vi,vi+1)∈Er,i=1,…,q-1together with the arrival and departure timesαiandβi, respectively, at node i fori=1,…,q, whereβi+1=αi+τei. Given an∊>0, we define the∊-neighborhoodN(P,∊)of P as the set of all paths asP′with the node sequencev1,v2,…,vqtogether with the arrival and departure timesαi′andβi′, respectively, fori=1,…,qsuch thatαi-αi′<∊andβi-βi′<∊for alli=1,…,q. In other words, a pathP′is contained inN(P,∊)if and only if P andP′are representable by the same sequence of nodes where all arrival and departure times differ by at most∊.We say that a path is augmenting if it has a strict augmenting path in its neighborhood. Intuitively, the path P is an augmenting path if we can send an additional flow rate along a path in the neighborhood of P. However, we might have some augmenting path with zero residual capacity (see Example 1). An augmenting path P from(v,α)to(w,β)is said to be a least cost augmenting path if it has the minimum cost among all augmenting paths from(v,α)to(w,β). An augmenting cycle is called a negative augmenting cycle if its cost is negative.In the following, we investigate the existence of least cost augmenting paths from a NTP to all other NTPs. We consider two arbitrary nodes s and t in V and fix NTP(s,0)as the source and NTP(t,T)as the sink. The question is whether or not there exists a least cost augmenting path from(s,0)to(t,T). A closely related problem is already studied by Koch and Nasrabadi (2010), who discuss the continuous-time dynamic shortest path problem with negative transit times. They prove that a dynamic shortest path exists in general if and only if the cost functions are piecewise analytic and transit times are rational. We use the same techniques as in Koch and Nasrabadi (2010) to show that under Assumptions 1 and 2 a least cost augmenting path from NTP(s,0)to NTP(t,T)exists.We need to give some definitions. Suppose thatP:(v1,θ1),(i2,θ2),…,(vq,θq)is an augmenting path from NTP(s,0)to NTP(t,T). The path P is said to be a local least cost augmenting path if there exists an∊>0such thatc(P)⩽c(P′)for all augmenting pathsP′in the∊-neighborhood of P.We next give a characterization of local least cost augmenting paths. LetQ:(vℓ,θℓ),…,(vr,θr)be a subsequence of consecutive NTPs in P. We refer to Q as an arc-subpath of P if any pair of consecutive NTPs in Q are arc-linked, i.e.,(vk,vk+1)∈Erfork=ℓ,…,r-1. In this case, Q can be seen as the sequence(vℓ,vℓ+1),…,(vr-1,vr)of arcs inErtogether with starting timeθℓfrom nodevℓ. If in addition,vℓ-1=vℓorvℓ=v1andvr=vr+1orvr=vq, then Q is called a maximal arc-subpath of P.In what follows, we suppose that Q is an arc-subpath of P. For a point in timeα∈[0,T], we define a pathP|Q(α)as(4)P|Q(α):(v1,θ1),…,vℓ∗,θℓ∗,(vℓ,αℓ),…,(vr,αr),vr∗,θr∗,…,(vq,θq),(5)withℓ∗≔ℓ-1ifvℓ-1=vℓℓifvℓ-1≠vℓandr∗≔r+1ifvr=vr+1rifvr≠vr+1whereαℓ≔αandαk+1≔αk+τvk,vk+1fork=ℓ,…,r-1. Roughly speaking,P|Q(α)is constructed from P by shifting the starting time of arc-subpath Q fromθℓtoα. It is obvious thatP|Q(α)is contained in the∊-neighborhood of P for some∊>0if|θℓ-α|<∊. We next determine a maximal interval[a,b], containingθℓso that the pathP|Q(α)is an augmenting path for everyα∈[a,b]. Here and subsequently, by maximal we mean with respect to inclusion. To do so, we define a functionf:[0,T]→R⩾0asf(θ)≔minℓ⩽k⩽r-1uekrθ+∑j=ℓk-1τej,whereek=(vk,vk+1)fork=ℓ,…,r-1. For eachθ∈[0,T], the valuef(θ)represents the residual capacity of Q when starting at timeθ. Further, we define two more functionsgℓ,gr:[0,T]→R⩾0asgℓ(θ)≔Uvℓr(θ)ifθ⩾θℓ∗,Lvℓr(θ)ifθ⩽θℓ∗,andgr(θ)≔Lvrr(θ+τQ)ifθ+τQ⩾θr∗,Uvrr(θ+τQ)ifθ+τQ⩽θr∗,whereτQis the transit time of arc-subpath Q, i.e.,τQ≔∑ℓ⩽k⩽r-1τek. The valuegℓ(θ)gives an upper bound on the amount of flow that can be stored at nodevℓat timeθifθ⩾θℓ∗, and gives an upper bound on the amount of flow that can be removed from the available storage at nodevℓat timeθifθ⩽θℓ∗. A similar interpretation holds for the valuegr(θ).Since P is an augmenting path,P|Q(α)is an augmenting path ifgℓandgrare strictly positive on(min{θℓ∗,α},max{θℓ∗,α})andminθr∗-τQ,α,maxθr∗-τQ,α, respectively, and f is not identically zero on any neighborhood ofα. So let[aℓ,bℓ]be the maximal interval containingθℓ∗such thatgℓis strictly positive on(aℓ,bℓ)⧹{θℓ∗}. Similarly, let[ar,br]be the maximal interval containingθr∗-τQsuch thatgris strictly positive on(ar,br)⧹{θr∗-τQ}. Finally, let[af,bf]be the maximal interval containingθℓsuch that f is strictly positive on(aℓ,bℓ)⧹{θℓ}. Then the interval[a,b]≔[aℓ,bℓ]∩[ar,br]∩[af,bf]contains all points in timeαsuch thatP|Q(α)remains an augmenting path. Further,[a,b]containsθℓasP=P|Q(θℓ)is an augmenting path. Therefore,[a,b]is the desired maximal interval.So far, we have determined the maximal interval[a,b]for which the pathP|Q(α)is an augmenting path for allα∈[a,b]. We now define a cost functioncQ:[a,b]→Rwith respect to Q as(6)cQ(α)≔∑ℓ⩽k⩽r-1cek(αk),whereαℓ=αandαk+1(α)=αk+τekfork=ℓ,…,r-1as before. It is straightforward that the cost functioncQhas a local minimum on[a,b]at the pointθℓif P is a local least cost augmenting path. Conversely, if for each arc-subpath Q of P the functioncQattains a local minimum atθℓwithin the interval[a,b], then P is a local least cost augmenting path. Thus we have established the following lemma.Lemma 1The path P is a local least cost augmenting path if and only if for each arc-subpath Q of P with starting timeθℓthe cost functioncQ, given by(6), has a local minimum at the pointθℓ.In what follows, letPlocbe the set of all augmenting paths P from NTP(s,0)to NTP(t,T)such that for each maximal arc-subpath Q of P with starting timeθthe functioncQ, given by (6), has a local minimum atθℓand is not constant on any open neighborhood containingθℓ. Further, we assume that two pathsP1andP2are identified if they differ only in the starting timeθ1andθ2(θ1<θ2), respectively, of one common arc-subpaths Q andcQis constant over[θ1,θ2]. Note that in this caseP1andP2have the same cost, i.e.,c(P1)=c(P2). Then, for each local least cost augmenting path, one augmenting path with the same cost is contained inPloc. Notice thatPloccan contain also paths which are not local least cost augmenting. Nevertheless, the following lemma shows that the set of local least cost augmenting paths from NTP(s,0)to NTP(t,T)is finite.Lemma 2The setPlocis finite.Due to Assumption 1, we can assume without loss of generality that the transit times are integral. Therefore, each arc(v,w)∈Erappears at most T times in any arc-subpath of an arbitrary path. In other words, every arc-subpath of any augmenting path contains at mostT·|E|arcs. Consequently, the number of possible maximal arc-subpaths is bounded by a constant where two arc-subpaths that differ by the starting time are identified.We now assume by contradiction that the cardinality ofPlocis infinite. Hence there exists an infinite number of paths inPlocall containing the same maximal arc-subpath Q, but with different starting times. It then follows from Lemma 1 that the cost functioncQ, given by (6), has an infinite number of local minimum points. This is a contradiction becausecQis a piecewise analytic function and has only a finite number of local extrema. This establishes the lemma. □Before we proceed with our discussion, let us make the following assumption.Assumption 3The cost functionsce,e∈Eare continuous.We suppose that this assumption holds throughout the rest of this and the next section. However, all our results hold for the case in which some cost functions have discontinuities by defining the cost of augmenting paths and cycles in a different, but complicated, way. We discuss further details in Appendix A.We next show thatPloccontains the least cost augmenting path from NTP(s,0)to NTP(t,T).Lemma 3Let P be an augmenting path from NTP(s,0)to NTP(t,T). Then there exists an augmenting pathP′∈Plocwithc(P′)⩽c(P).IfP∈Ploc, then we are done. So we consider the case where P is not inPloc. In this case we iteratively apply the following procedure to construct an augmenting pathP′∈Plocwithc(P′)⩽c(P).(i)LetQ:(vk,θk),…,(vr,θr)be a maximal arc-subpath of P such that the cost functioncQdoes not have a local minimum atθkor is constant on an open interval containingθk. Notice that such an arc-subpath exists because of the definition ofPlocand the fact that P is not inPloc. Further, chooseP′such that it contains a minimal number of arcs.Because of Assumption 3, the functioncQis continuous. Thus it takes its minimum over[a,b]at some pointθ. If it has several local minimum, then chooseθto be the one with maximum value.LetP|Q(θ)be the augmenting path from NTP(0,1)to NTP(t,T)obtained from P by shifting the arc-subpath Q byθk-θtime units. SinceP|Q(θ)may contain augmenting cycles, we delete all of them inP|Q(θ).SetP≔P|Q(θ). If P is not inPloc, then go to (i).As a consequent of Lemmas 2 and 3, we obtain the following result:Theorem 4There exists a least cost augmenting path from NTP(s,0)to NTP(t,T). In particular, an augmenting path inPlocwith minimum cost is the desired path.We can assume that the network G contains an augmenting path from NTP(s,0)to every other NTP. This assumption imposes no loss of generality since this is satisfied, if necessary, by introducing an artificial node a with infinite storage capacity and zero storage cost, and adding artificial arc(s,a)joining node s to node a and artificial arcs(a,v),v∈V⧹{s}, linking node a to all nodes inV⧹{s}. Each artificial arc has a zero transit time, a large cost, and large capacity. It is clear that no artificial arc would appear in a least cost augmenting path from(s,0)to any NTP(v,θ)unless network G contains no augmenting path from(s,0)to(v,θ)without artificial arcs. Therefore, Lemma 2 as well as Lemma 3 remain true if NTP(t,T)is replaced by every other NTP(v,θ). This leads to the main result of this section.Theorem 5Suppose that x is a piecewise analytic solution for(MCFP). For each NTP(v,θ), letdv(θ)be the cost of a least cost augmenting path from(s,0)to(v,θ). Then, for each nodev∈V, the labeldv(θ)exists for allθ∈[0,T]and the functiondv:[0,T]→Ris piecewise analytic.The existence ofdv(θ)follows from Lemmas 2 and 3 for each NTP(v,θ). It thus remains to show thatdvis piecewise analytic on[0,T]for eachv∈V. In the following we fix a nodev∈V. Similar to the definition ofPloc, definePloc(θ)as the set of augmenting paths P from(s,0)to(v,θ)such that for each maximal arc-subpath Q of P with starting timeθ′the functioncQhas a local minimum atθ′and is not constant on any open neighborhood containingθ′. ThenPv≔∪θ∈[0,T]Ploc(θ)contains (nearly) all least cost augmenting paths for any point in timeθ∈[0,T].Next we define an equivalence relation∼onPv. letP:(v1,θ1),…,(vq,θq)andP′:v1′,θ1′,…,vq′′,θq′′be two members ofPv. We define∼onPvbyP∼P′if and only ifq=q′and there is somer∈{1,…,q-1}such that(i)vk′,θk′=vk′,θk′for eachk⩽r,vr=vr+1=vr′=vr+1′andθr+1≠θk+1′,vk=vk′for eachk⩾r+1and the NTP sequences(vr+1,θr+1),…,(vq,θq)andvr+1′,θr+1′,…,vq′′,θq′′are arc-subpaths of P andP′, respectively.Roughly speaking, P andP′are equivalent if they differ only in the starting time of the last maximal arc-subpath. For an equivalence class[P]we denote byP1the path consisting of the first r NTPs of P and byP2the arc-path consisting of the lastq-r+1NTPs of P. Note thatP1andP2can be the empty path: if P is an arc-path we put it in the equivalence class for whichP1=∅andP2=Pand if the the last tow NTPs in P are node-linked, we put it in the equivalence class for whichP1=PandP2=∅. Therefore, each equivalence class[P]is identified by two pathsP1andP2and these paths are well-defined in the sense that they coincide for any member of[P]. Moreover, any augmenting path in[P]is obtained by concatenatingP1andP2and changing the starting time ofP2. More precisely,[P]contains only the pathsP|P2(θ-τP2),θ∈[0,T], for whichP|P2(θ-τP2)∈Pv.We next show that the quotient setPv/∼contains a finite number of equivalence classes. Each equivalence class inPv/∼is defined by two pathsP1andP2with the following properties:(1)The first NTP inP1is(0,1), the last NTP inP2is(v,θ)for someθ∈[0,T], the last two NTPS inP-1are node-linked, andP2is an arc-path. Moreover, the last NTP inP1and the first NTP inP2coincide.For each maximal arc-subpath Q ofP1with starting timeθ′the functioncQhas a local minimum atθ′and is not constant on any open neighborhood containingθ.The functioncP1has a local minimum atθ′and is not constant on any open neighborhood containingθ′, whereθ′is starting time ofP1.We now consider an equivalence class[P]∈Pv/∼, given by two pathsP1andP2. We define a cost functionc[P]:[0,T]→Rbyc[P](θ)≔c(P1)+cP2(θ-τP2)ifP|P2(θ-τP2)∈Pv,∞otherwise.In other words,c[P](θ)≔c(P′)if there exists a pathP′in[P], whose last NTP is(v,θ); andc[P](θ)=∞if such a path does not exist in[P]. SinceP2is an arc-path,cP2(θ-τP2)is piecewise analytic, so is the cost functionc[P].Following the above discussion, we can express the cost of each pathP∈Pvin terms of the cost functionc[P]asc(P)=c[P](θ), whereθis the last time that we reach node v along P, i.e.,(v,θ)is the last NTP of P. It implies thatdv(θ)=minP∈Pv/∼{c[P](θ)}∀θ∈[0,T].Thereforedvis piecewise analytic since it is the minimum of a finite number of piecewise analytic functions. □In this section, we turn our attention to the optimality conditions for MCFP. In particular, we first show that not only conditions (CS1)–(CS4) are sufficient for optimality, but also are necessary under Assumptions 1 and 2. We then extend the negative cycle optimality condition for MCFP and derive a strong duality result between (MCFP) and (MCFP∗). We start with the following lemma which will be used in the proof of the subsequent theorems.Lemma 4Let x be a piecewise analytic flow. Then x is not optimal if there exists a negative augmenting cycle with respect to x.Suppose thatW:(v1,θ1),…,(vq,θq)is a negative augmenting cycle under x. We show that there exists a cycleW′withcap(W′)>0andc(W′)<0. To prove this, letQ:(vℓ,θℓ),…,(vr,θr)be a maximal arc-subpath of W. Then we know that there is some∊>0such thatW|Q(α)is also an augmenting cycle for eachαin(θℓ-∊,θℓ)or(θℓ,θℓ+∊). We assume without loss of generality thatW|Q(α)is an augmenting cycle for eachαin(θℓ-∊,θℓ). Then for someα∈(θℓ-∊,θℓ), we have|c(Q(α))-c(Q)|<∊. HereQ(α)denotes the arc path(vℓ,vℓ+1),…,(vr-1,vr)with starting timeα. More precisely, we haveQ(α):(vℓ,αℓ),…,(vr,αr)whereαℓ=αandαk+1(α)=αk+τvk,vk+1fork=ℓ,…,r-1. Further,αcan be chosen in such a way thatcap(Q(α))>0. Now we consider the cycleW|Q(α)and repeat the above procedure for all remaining maximal arc-subpaths of W. LetW′be the resulting cycle. It is easy to see that for sufficiently small∊>0, we getcap(W′)>0andc(W′)<0.Based on the above observation, we assume thatcap(W)>0andc(W)<0. For everyk=2,…,qwithek=(vk-1,vk)∈Er, there existδk,γk>0such thatuekr(θ)⩾δk∀θ∈[θk-1,θk-1+γk).Letδandγbe the minimum ofδkandγk, respectively, and define∊k=2δγ. Moreover, for everyk=2,…,qwithvk-1=vk, there existδk,γk>0such thatUvkr(θ)⩾δk∀θ∈(θk-1-γk,θk+γk)ifθk-1<θk,Lvkr(θ)⩾δk∀θ∈(θk-γk,θk-1+γk)ifθk-1>θk.Letδandγbe the minimum ofδkandγk, respectively. We then define∊k≔2δγ,ifvk-1≠vk,δ,ifvk-1=vk,fork=2,…, and let(7)z∗≔12γmin{∊2,∊3,…,∊q}.We now defineze(θ)≔z∗ife=(vk,vk+1)∈E,θ∈[θk,θk+γ)fork=1,…,q-1,-z∗ife=(vk+1,i=vk)∈E,θ∈[θk+1,θk+1+γ),fork=1,…,q-1,0otherwise.We can easily see thatx+zis a feasible flow.Thus far we have seen that another feasible flowx¯=x+zcan be obtained by augmenting a constant flow ratez∗, given by (7), along the arcs involved in the cycle W. The cost of augmenting, that is, the change in the objective function value in moving from x tox¯, is computed byz∗∑k=2qζk, whereζk≔∫θkθk+γcek(θ)dtifek=(vkvk+1)∈E,∫tk+1tk+1+γ-cek(θ)dtifek=(vk+1,vk)∈E,0otherwise.fork=2,…,q. Sincez∗>0,x¯will be a strictly improved feasible solution thanx(θ)if∑k=2qζk<0. We know that the cost functions c are piecewise analytic and right-continuous. This implies∑k=2qζk<0forγsmall enough sincec(W)<0. This establishes the lemma. □We are now in a position to prove the main results of this paper.Theorem 6Let x be a piecewise analytic flow. Then x is optimal for(MCFP)if and only if there is a piecewise analytic functionπwhich is complementary slack with x.The necessary part of the theorem follows immediately from Theorem 2. For the sufficiency, suppose that x with corresponding storage Y is optimal. It follows from Lemma 4 that there are no negative augmenting cycles with respect to x. For each nodev∈V, we consider the functiondv:[0,T]→R, wheredv(θ)is the cost of a least cost augmenting path from(s,0)to(v,θ). By Theorem 5, the functiondvis well deffined and is piecewise analytic. We now defineπv≔-dv,v∈Vand show that the following conditions are met for each arce=(v,w)and each nodev∈Vover the time interval[0,T]:(RC1) ifxe(θ)>0, thence(θ)-πv(θ)+πw(θ+τe)⩽0;(RC2) ifxe(θ)<ue(θ), thence(θ)-πv(θ)+πw(θ+τe)⩾0;(RC3) ifYv(θ)>0on(a,b), thenπvis monotonic decreasing on(a,b);(RC4) ifYv(θ)<Uv(θ)on(a,b), thenπvis monotonic increasing on(a,b).Obviously, conditions (RC1) and (RC2) are equivalent to conditions (CS1) and (CS2), respectively. We next show that the condition (RC3) implies the condition (CS3). To end this, assume that for some node v, the functionπvis strictly increasing at some pointθ. Sinceπvis piecewise analytic and consequently of bounded variation, there are two monotonic increasing and piecewise analytic functionsμandηfor whichπv=μ-η. Moreover, sinceπvis strictly increasing atθ, there is an open interval(a,b)containingθsuch thatμis strictly increasing at each point in(a,b)andηis constant over(a,b). It now follows from condition (RC3) thatYvis identically zero on(a,b). This proves that the condition (RC3) must hold. In a similar way, we can show that the condition (RC4) implies the condition (CS4). Therefore, the pair x andπsatisfies the conditions (CS1)–(CS4), establishing the theorem. □The previous theorem shows that the conditions (RC1)–(RC4) are sufficient and necessary for optimality of a given flow x.Theorem 7Negative Cycle Optimality ConditionSuppose that x is a piecewise analytic flow. Then x is optimal for(MCFP)if and only if there is no negative augmenting cycle under x.Having proved Lemma 4, it is sufficient to prove that x is optimal if there is no negative augmenting cycle under x. Hence, assume that there is no negative cycle with respect to x. By a similar argument as in the proof of Theorem 6, we can deduce that there is a piecewise analytic functionsπwhich is complementary slack with x. It now follows from Theorem 2 that x is optimal for (MCFP). □There exist piecewise analytic optimal solutions x andπfor(MCFP) and (MCFP∗), respectively, so thatV[MCFP,x]=V[MCFP∗,π].We know from Theorem 3 that (MCFP) has a piecewise analytic optimal solution x. Then, it follows from Theorem 6 that there exists a piecewise analytic functionπ, which is complementary slack with x. The assertion now follows from Theorem 2. □

@&#CONCLUSIONS@&#
In this paper, we have studied the minimum cost flow problem in a time-varying network to capture temporal features of many real-world problems. In this problem, arc and node costs, arc and node capacities, and supplies and demands can change over time where time is modeled as a continuum. We developed several network-related optimality conditions under the assumption that the input functions are piecewise analytic and the transit times are constant and rational. These results can be used to develop algorithms for solving the minimum cost flow over time problem in a similar way as in static network flows. For example, Theorem 7 lays the ground for an algorithmic approach like the negative cycle-canceling algorithm for the static minimum cost flow problem. This algorithm maintains a feasible solution at each iteration and successively improves the solution towards optimality. More specifically, the algorithm first establishes an initial feasible solution. It then proceeds by identifying negative augmenting cycles and sending flow along these cycles, while preserving feasibility. The algorithm terminates when the network contains no negative cycle. Theorem 7 implies that when the algorithm terminates it has found an optimal solution. Yet, we have to investigate how to implement the essential steps of such an algorithm. Further details are beyond the scope of this paper and are left for further work.