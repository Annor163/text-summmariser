@&#MAIN-TITLE@&#
Open-loop neuro-fuzzy speed estimator applied to vector and scalar induction motor drives

@&#HIGHLIGHTS@&#
It was modeled a ANFIS speed estimator applied to both vector and scalar induction motor drives.Subtractive clustering was used to generate the membership functions.Subtractive clustering allowed training the ANFIS with experimental data with noise.In the scalar drive the ANFIS estimator used the RMS values of voltages and currents as incoming signals.Magnetizing FOC was used in the vector drive instead of Rotor FOC.

@&#KEYPHRASES@&#
Neuro-fuzzy,Estimation,Induction motor,ANFIS,

@&#ABSTRACT@&#
Scalar and vector drives have been the cornerstones of control of industrial motors for decades. In both the elimination of mechanical speed sensor consists in a trend of modern drives. This work proposes the development of an adaptive neuro-fuzzy inference system (ANFIS) angular rotor speed estimator applied to vector and scalar drives. A multi-frequency training of ANFIS is proposed, initially for a V/f scheme and after that a vector drive with magnetizing flux oriented control is proposed. In the literature ANFIS has been commonly proposed as a speed controller in substitution of the classical PI controller of the speed control loop. This paper investigates the ANFIS as an open-loop speed estimator instead. The subtractive clustering technique was used as strategy for generating the membership functions for all the incoming signal inputs of ANFIS. This provided a better analysis of the training data set improving the comprehension of the estimator. Additionally the subtractive cluster technique allowed the training with experimental data corrupted by noise improving the estimator robustness. Simulations to evaluate the performance of the estimator considering the V/f and vector drive system were realized using the Matlab/Simulink® software. Finally experimental results are presented to validate the ANFIS open loop estimator.angular speed of the magnetizing flux oriented reference frameangular slip speeddirect sumoverall function implemented by the adaptive networkarbitrary functioninstantaneous value of magnetizing currentinstantaneous value of direct component stator currentinstantaneous value of quadrature component stator currentmagnetizing inductancestator inductancepredicted network output for the pattern kdifferential operatorpositive constantpositive constantstator resistanceset of parametersdesired network output for the pattern krotor leakage time constantrotor time constantinstantaneous value of direct component stator voltageinstantaneous value of quadrature component stator voltagevector of input variablesmoment of inertianumber of training patternnumber of pole-pairs

@&#INTRODUCTION@&#
For many years several research institutes and industries have been working in strategies of driving the induction motor (IM) in a high performance context. These researches have been focusing on new control strategies, modeling of the machine, estimation techniques as new materials and assembly methods as well.Vector controlled drives provide high performance of the IM as the separately excited DC machine. Several vector control techniques have been proposed in the literature for many years. The most stressed of them is the Field Oriented Control (FOC). In FOC vector control [1], the torque of the machine is controlled indirectly. The main characteristic of this kind of control is the desired decoupling of the flux and torque components of the space phasor of stator currents.The FOC control can be implemented in two different schemes: direct and indirect. In the indirect FOC (IFOC) the flux vector is determined through the slip speed and the knowledge of the angular rotor position. The rotor speed can be measured directly from the motor shaft using an encoder, a tachometer or a resolver. This measure increases the total cost of the drive system, reduces the security and in several cases are infeasible. To eliminate the mechanical sensor in vector controlled drives observers and estimators of the rotor speed have been constantly proposed in the literature. Actually this subject is a trend in induction motor drives [2]. Drives without mechanical sensors are named sensorless drives [3,4]. Classical techniques to estimate the rotor speed include the model reference adaptive systems (MRAS) [5], Luenberger state observers [6], Extended Kalman Filter (EKF) observer [7,8], high-frequency injection [9], saliency effects, among others.The emerging techniques of speed estimation include soft computing for determining the mechanical speed. Artificial Neural Networks (ANN) [10] and Neuro-fuzzy systems can be applied in such task. Historically the ANN has been most widespread than other soft computing technique in the power electronics and motor drives applications [11,12]. In [13] an ANN was used as speed estimator in a vector drive. Recently some works have been considered the application of ANN combined to model reference adaptive systems (MRAS) in sensorless drives. In [14] the voltage model of the MRAS was substituted by an ANN model becoming the model free of pure integration and less sensitive to stator resistance variations. In [15] a neural MRAS has been proposed using TLS EXIN neuron concept and in [16] a neural based reduced order observer is proposed. In [5] the MRAS scheme was implemented in a vector controlled drive.The adaptive neuro-fuzzy inference systems (ANFIS) [17] is presented in this work as a good alternative for estimating the machine parameters such as the angular rotor speed [18,19]. However, in the literature, ANFIS have been extensively used for control not for estimation. In [20,21] the PI controller of the speed control loop was substituted by a self-tuned neuro-fuzzy controller. The same characteristic application is found in [22]. In [23] an adaptive sliding mode neuro-fuzzy control was proposed as a speed controller. Several applications, on the other hand, consider the ANFIS and ANN in the fault diagnosis of motors [24–29]. Some works consider the soft computing to estimate the machine parameters like rotor and stator resistance in vector controlled drives [26,30]. In [31] ANFIS is used to track the maximum power point in a wind generation system.Open-loop estimators has always been attracted attention in determining the speed in induction motor drives because of its simplicity and low-cost profile [32].In [33] a fuzzy system was combined with an open-loop motor model based estimator to improve the performance of the last one. A moderate performance drive was achieved in that work. Nevertheless the tests were carried out in a narrow speed range operation.This paper contributes with this subject proposing an open-loop neuro-fuzzy speed estimator with an innovative development. The ANFIS package of the Matlab/Simulink® software was used to train and check the estimator response using the hybrid learning training algorithm and the subtractive clustering to generate the fuzzy inference system.At first, a speed estimator for a V/f is proposed. To know the rotor speed in this kind of drive is important when the speed regulator is based upon the slip calculation. Unlike other works the root mean square (RMS) values of direct and quadrature voltages and current signals are used for training the ANFIS and good results were obtained for non sinusoidal voltages in the stator. To determine the ANFIS structure directly from training data set the subtractive clustering method [34] was used. As the drive will be submitted to several reference speeds the whole spectrum of associated command frequencies was dived in equal parts. This technique has been resulted in an efficient training method and used to the vector drive as well.After that a ANFIS based speed open-loop estimator is proposed to an indirect magnetizing flux oriented drive. The most used FOC for induction motors is the rotor FOC scheme due to its inherent decoupling between the flux and torque components of the stator space phasor currents. The evaluation of the ANFIS estimator in the magnetizing flux reference frame is one more contribution of this work. Moreover, despite of the ANN training which is sensitive to noise, the ANFIS estimator was trained in the experimental setup with experimental data and presented a good response under this situation.This paper is divided as follows: Section 2 presents the magnetizing flux oriented control; Section 3 presents the ANFIS basis; Section 4 presents the hybrid learning algorithm used to train the ANFIS; Section 5 presents the subtractive clustering used to generate the membership functions to the ANFIS incoming signals; development of the neuro-fuzzy speed estimator to the V/f drive is presented in Section 6; Section 7 presents the same development to the IFOC drive. Finally, the estimation errors, the impact of the rotor resistance changes, the experimental results and the conclusions are presented.To control the induction motor a magnetizing flux oriented control with impressed stator currents is proposed [3]. The most usual field oriented technique is the rotor field orientation. In this work magnetizing flux oriented control was used because of its coupling of direct and quadrature stator current components. This coupling implies in a nonlinearity of the drive and for this reason the open loop estimator proposed in this work is operating in more severe conditions. Following the basis of this control is presented.From generic reference frame the stator and rotor equations in the magnetizing reference frame were derived according to Fig. 1. Eqs. (1) and (2) present the direct and quadrature components of stator voltages in the magnetizing reference frame and Eqs. (3) and (4) present the quadrature and direct components of stator currents in the magnetizing reference frame derived from rotor equations:(1)usx=Rsisx+(Ls−Lm)pisx+Lmpimm+ωmm(Lm−Ls)isy(2)usy=Rsisy+(Ls−Lm)pisy+Lmωmmimm+ωmm(Ls−Lm)isx(3)imm+TrpimmTr1=pisx+isxTr1−ωslisy(4)ωslimmTrTr1−isx=pisy+isyTr1where usxis the instantaneous value of direct component stator voltage, usyis the instantaneous value of quadrature component stator voltage, isxis the instantaneous value of direct component stator current, isyis the instantaneous value of quadrature component stator current, immis the instantaneous value of magnetizing current, ωmmis the magnetizing flux oriented frame angular speed, ωslis the angular slip speed, Tris the rotor time constant and Tr1 is the rotor leakage time constant.From Eqs. (3) and (4) it is possible to obtain the magnetizing-flux-oriented control scheme with impressed stator currents [3]. Eq. (3) can be presented in terms of direct axis stator current component (5):(5)isx=(1+Trp)imm+isyTr1ωsl1+Tr1pwhere ωslis given by (6):(6)ωsl=(1+Tr1p)isyTrimm−Tr1isxFig. 4 presents the block diagram of the proposed magnetizing flux oriented drive.It is presented now the ANFIS concepts as proposed in [17]. The ANFIS gather the characteristics of artificial neural networks and the fuzzy systems. The number and shape of each membership function related to the input variables can be obtained in an optimized way from data set of inputs and output associated with a training algorithm. The ANFIS can approximate all non linear systems with reduced data set, fast response and accuracy [35]. Fig. 2presents the Sugeno fuzzy system with two rules. Fig. 3presents the equivalent ANFIS system. In this figure nodes of the same layer have similar functions, as described next.One of the motivation of using ANFIS as a speed estimator instead ANN is related to the fact that the ANFIS estimator can be trained using experimental data corrupted by noise when ANN normally fails.Layer 1.Every node i in this layer is an adaptive node with a node function:(7)O1,i=μAi(x),fori=1,2,orO1,i=μBi−2(y),fori=3,4,where x (or y) is the input node i and Ai(or Bi−2) is a linguistic label associated with this node. Parameters in this layer are referred to as premise parameters.Every node in this layer is a fixed labeled ∏, whose output is the product of all the incoming signals:(8)O2,i=ωi=μAi(x)μBi(y)i=1,2.Each node output represents the firing strength of a rule.Every node in this layer is a fixed node labeled N. The ith node calculates the ratio of the ith rule's firing strength to the sum of all rules’ firing strength:(9)O3,i=ωi¯=ωiω1+ω2,i=1,2.Every node i in this layer is an adaptive node with a node function:(10)O4,i=ωi¯fi=ωi¯(pix+qiy+ri),whereωi¯is a normalized firing strength from Layer 3 and {pi, qi, ri} is the parameter set of this node. Parameter in this layer are referred to as consequent parameters.The single node in this layer is a fixed node labeled ∑, which computes the overall output as the summation of all incoming signals:(11)overalloutput=O5,i=∑iωi¯fi=∑iωifi∑iωiThe hybrid learning rule combines steepest descent and least-squares estimator. In the forward pass of the hybrid learning algorithm nodes output go forward until Layer 4 and the consequent parameters are identified by the least-square method. In the backward pass, the error signals propagated backward and the premise parameters are updated by gradient descent. The hybrid approach converges much faster since it reduces the search space dimensions of the original pure backpropagation method [17].Assuming that the adaptive network has only one output represented by:(12)o=F(i,S)where i is the vector of input variables, S is the set of parameters, and F is the overall function implemented by the adaptive network. Considering that there is a function H such that the composite function HoF is linear in some elements of S, then these elements can be identified by the least-squares method [17]. If the parameter set S can be divided into two sets:(13)S=S1⊕S2where ⊕ represents direct sum such that HoF is linear in the elements of S2, then upon applying H to Eq. (12), Eq. (14) arises:(14)H(o)=HoF(Bi,S)From the ANFIS system shown in Fig. 3 with fixed premise parameters values, the overall output can be expressed as a linear consequent of the consequent parameters. The output f in Fig. 3 can be written as:(15)f=ω1ω1+ω2f1+ω2ω1+ω2f2=ω1¯(p1x+q1y+r1)+ω2¯(p2x+q2y+r2)=(ω1¯x)p1+(ω1¯y)q1+(ω1¯)r1+⋯+(ω2¯x)p2+(ω2¯y)q2+(ω2¯)r2which is linear in the consequent parameters p1, q1, r1, p2, q2, e r2. Hence we have:S = set of total parameters,S1 = set of premise (nonlinear) parameters,S2 = set of consequent (linear) parametersTo generate the membership functions of all incoming signals the subtractive clustering method was used [34]. Using this method of clustering reduces the computational burden when comparing to grid partition method because it is proportional to the number of data points and independent of the dimension of the problem under consideration [36].Considering a collection of n data points {x1, …,xn} in an M-dimensional space, each one normalized within a hypercube, since each data point is a candidate for cluster centers, a density measure at data point xiis defined as:(16)Di=∑j=1nexp−∥xi−xj∥2(ra/2)2where rais a positive constant. After the density measure of each data point has been calculated, the data point with highest density measure is selected as the first center of cluster. If xc1 is the selected point and Dc1 its density measure, the density measure of each data point xiis revised by Eq. 17:(17)Di=Di−Dc1exp−∥xi−xc1∥2(rb/2)2where rbis a positive constant. The process of revising the density measure and choosing a new cluster center continues until a sufficient number of clusters be generated. The cluster centers will be used as the centers for the fuzzy rules's premise in a zero order Sugeno fuzzy model.Among several cluster algorithms available in the literature we have chosen subtractive cluster because it is noise robust, since the outliers do not significantly influence the choice of centers, due to their low potentials [36]. This allow us to train the ANFIS directly from experimental data with good results.On the other hand, although the ANFIS package of Matlab/Simulink used herein has implemented the entire set of possible rules, it is noted that only part of them are active. This allows the system to work more optimized way in order to produce faster responses with acceptable error rates, such as those shown in following sections.Before using the ANFIS in the vector drive a preliminary study for training the ANFIS and validating the proposed method was performed in a V/f drive with sinusoidal stator voltages. The ANFIS package of Matlab/Simulink® software was used for training and validating the neuro-fuzzy estimator. The RMS values of direct and quadrature voltages and currents in a stationary reference frame (VsDRMS, VsQRMS, IsDRMS, IsQRMS) was chosen as the best incoming signals in terms of output response and minimal ANFIS configuration. Again in the literature it is found intelligent systems in this kind of drive concerning the control, not the estimation [37]. The parameters used for generating the ANFIS considering the subtractive clustering were: Range of influence (ra) equal to 0.5, Squash factor (rb) equal to 1.25, Accept ratio equal to 0.5 and Reject ratio equal to 0.15. The accept and reject ratio define the stopping criterion of the subtractive clustering method.The training strategy consisted in using a set of different final frequency commands for the V/f drive. Thus the training data set consists of the summed responses for the drive frequencies from 5 to 60Hz dived from 5 to 5Hz as presented in Fig. 5. For this training purpose were used 480 samples of the whole data set and 20 epochs for training. Figs. 6–8present the membership functions of the inputs, the training and checking results for the ANFIS estimator, respectively. The speed estimated was presented in pu. The results presented were chosen among a lot of simulations.Table 1presents the machine parameters used in simulation.After training and validating the ANFIS estimator with the original frequencies, other final speed commands were presented to the (V/f) scheme to try the generalization of the estimator. A good generalization was achieved as will be presented in the experimental results. The training process can be successfully lead by analyzing the training data set and the clusters generated from it. For example, Figs. 9 and 10present the training data set for the incoming signals IsDRMSand IsQRMSin the V/f drive and their clusters.One contribution associated to the use of the subtractive clustering in generating the membership functions is the analysis of the training data set. It is possible to understand more clearly the motives of estimation failures when they occur. As an example, before training the ANFIS using the direct and quadrature RMS values of stator currents and voltages a training using only the currents was performed. This training fails in generating an efficient number of membership functions and the training data set analysis show it clearly. For this training purpose were used 9500 samples of the whole data set and 20 epochs of training. Fig. 11presents the training data set with the respective ANFIS response. The response of the estimator shows that if fails. Additionally, Figs. 12 and 13show the training data set and the clusters generated. It is clear that the number of clusters are insufficient to represent the training data set. It is an important feature related to the ANFIS training when comparing to ANN and this analysis was used along all this work.After the early investigation of the speed estimator in a V/f drive and the validation of frequency spectrum division for training the ANFIS, the same training technique was used in the indirect magnetizing-flux-oriented control scheme with a hysteresis current regulator.Some considerations are important at this point. Since the estimator is applied to a dynamic system, it was observed that the best results should be achieved with a recurrent ANFIS. Additionally, in IFOC there is no necessity of calculating the RMS value of the variables because they are inherently constant at steady state. Finally, instead the V/f drive, the estimator presented good responses considering only the electrical currents as input signals. In this case the cost of the drive is reduced since there is no voltage sensors. Considering the early comments, the ANFIS used in simulation was trained with isy(K), isy(K−1), isy(K−2), ω(K−1) and ω(K−2). Fig. 14presents the training concept of the ANFIS speed estimator applied to the vector drive.The speed controller used in simulation is a PI controller and it was used a 100μs sample time. For this training purpose were used 3250 samples of the whole data set and 20 epochs of training. Figs. 15–17present the estimator test for training and checking data sets as the membership functions as well for inputs of the estimator.To analyze the impact of inherent changes of the induction motor parameters on the performance of the estimator some simulations were performed.At this point changes were impressed in the rotor resistance, stator resistance and magnetizing inductance. The range of changes are into the 0.8–1.2pu interval. It was not observed significant dynamic changes when considering the stator resistance and the magnetizing inductance variations. Otherwise rotor resistance changes affect the drive dynamic significantly as expected. Therefore, estimation and adaptation of this parameter are suggested but not belong to the scope of this work. Figs. 18 and 19present the speed response concerning the 0.8–1.2pu changes of the rotor resistance at the 65rad/s reference speed.In this section, the Mean Square Error (MSE) associated to the ANFIS speed estimator for both V/f and vector drive are presented. Eq. (18) presents the quadratic error and Eq. (19) presents the MSE. In these equations, n is the number of training pattern, O(k) is the predicted network output for the pattern k and T(k) is the desired network output for the pattern k.Table 2presents the MSE related to some simulations of the speed estimator in the scalar and vector drive. It is important to stress here that the training data set is reduced when comparing to ANN training data set and due to the fact of using the hybrid learning algorithm the training of the ANFIS is also faster than ANN training. In Table 2 MSE is presented for the Scalar and IFOC drives as well as a comparative study is introduced in terms of number of samples and constant frequency training results. It is possible to notice from the results that the reduced training data set provides a reduced error. All errors were determined considering 20 epochs for training (which is very reduced when comparing to ANN training).(18)E(k)=12∑k=1n(T(k)−O(k))2(19)MSE=1n∑k=1nE(k)To validate the proposed ANFIS speed estimation a test bench was constructed. For measuring the stator voltages and currents Hall effect sensors from LEM® were used (models LV-25P and LA25-NP). The acquisition of all signals was made by a digital acquisition card from National Instruments (NIDAQ6062E). The IFOC control algorithm and the ANFIS estimator were performed through Real Time Workshop Toolbox from Matlab/Simulink® software. A sample time of 200μs was used. The sample time is greater than in the simulation because of limitations of data acquisition system. The experimental tests were performed using a low power (200W) IM. Figs. 20 and 21present the block diagram and an overview of the test bench constructed, respectively. The speed signal was acquired using a DC tachometer coupled to the motor shaft with 0.0021V/rpm ratio.The first results extracted from the experimental setup are related to the V/f drive. An important observation at this point is related to the fact that only experimental data was presented to the ANFIS training. This fact is an advantage when compared to the ANN training which is less immune to noise. When training a ANN speed estimator the noise presented in the experimental data could invalidate the estimator response [38]. In the subtractive clustering the noise samples have low density when comparing to other data points. Indeed the degree of membership of these noise samples are low as well as their influence on the output response. This situation is presented in Fig. 24where the experimental training data set is presented. The samples related to noise are detached from the other samples. Figs. 25 and 26present the estimated experimental responseωˆrfor 11 and 47Hz command in the scalar V/f drive. Its important to stress that these commands do not belong to the training data set so a good generalization was achieved. Moreover despite of the simulation training, at this time a PWM voltage was used to command the drive. So the voltages are no sinusoidal. It justify the training using the RMS values of the voltages.Finally the IFOC scheme was imposed to drive the IM. Still using the tachometer in the control scheme a ANFIS speed estimator was trained using experimental data. Figs. 27–29present the measured speed from the tachometer ωrand the estimated speed by ANFISωˆrfor low, medium and high speed commands. These speed commands do not belong to the original training data set so they represent the generalization of the estimator.The preview results are related to the speed identification by ANFIS when the drive was still using the tachometer. Fig. 30presents the sensorless response of the drive with the speed estimator.Fig. 22presents the stator current reference IL* generated by IFOC and the current stator response IL. In other approach, Fig. 23presents the plot of the direct and quadrature stator currents.The simulation results for scalar and vector drive demonstrate that the partition of the whole spectrum of frequency consists of an efficient strategy for training the speed estimator. Presenting the cluster analysis of the training data set is a contribution when comparing the ANFIS with the traditional ANN estimators. It is difficult for designers to understand the fail of ANN related to the training data set. Normally this is an iterative process. From Figs. 12 and 13 it is possible to understand more clearly the error presented in Fig. 11 and the process of training the estimator should be performed in a more efficient way. From the membership function analysis of the incoming signals it is possible to optimize the estimator by melting the similar ones [36]. As an example we should mention Fig. 17. In that figure, there are very similar membership functions. Performing this task reduces the computational burden of the estimator. The estimator showed itself very robust for stator resistance and magnetizing inductance changes. On the other hand, rotor resistance changes affect the vector drive dynamics as presented. The experimental results are consistent with the simulation training technique. The fact of training the estimator using experimental data with noise is one more contribution of this work. As mentioned before, the noise samples has low density measure in the subtractive clustering technique. Considering the vector drive the results are considered satisfactory for commands from 65rad/s up to 300rad/s. At low speeds (like the 35rad/s response presented in Fig. 27) the estimator presented a steady state error. At these speeds the magnitude of the current signals are very reduced spoiling the estimator training and response. Moreover, we are using a hysteresis current regulator with a fixed band to impose the stator currents. It is possible to notice from Fig. 23 that there are a big stator current variation in steady state (center of the figure). From this result it is possible to conclude that a current regulator with an adaptive hysteresis band should improve the response of the estimator at low speeds.

@&#CONCLUSIONS@&#
