@&#MAIN-TITLE@&#
Automatic clustering method for real-time construction simulation

@&#HIGHLIGHTS@&#
This research aims to reduce the computational cost for overall collision checks in a virtual construction site.A computational method was developed specifically for clustering construction objects into larger surrounding boundary.Using surrounding boundary in place of the individual objects reduce the overall collision checks.A quality index was defined to evaluate the quality of clustering results.

@&#KEYPHRASES@&#
Clustering,Collision detection,Grouping,Virtual construction,

@&#ABSTRACT@&#
Simulation of construction activities in a virtual environment can prevent constructability problems and increase efficiency and safety at the physical construction site. The computation for collision checks creates a bottleneck during these simulations. A typical construction simulation requires collision checks to be performed between all pairs among thousands or even millions of objects, and each of these checks must be completed within 1/10th or even 1/20th of a second to provide a smooth real-time simulation. Therefore, the reduction of computational cost is paramount. An effective and commonly used method is to cluster the objects into groups and use a larger surrounding boundary shape in place of the individual objects. This significantly reduces the computational effort required. However, clustering objects manually is usually time consuming and is difficult especially for large scenarios. In this paper, we develop an automatic clustering method, called the Propagation Clustering Method (PCM). PCM employs k-means clustering to iteratively cluster objects into multiple groups. A quality index is defined to evaluate the clustering results. Once the clustering results satisfy the predefined quality requirement, the group of objects is replaced by a rectangular box using the axis-aligned bounding box (AABB) algorithm. The rectangular box is then stored in a tree structure. To verify the feasibility of the proposed PCM, we defined three testing scenarios: a site with scattered objects, such as a small plant construction; a common construction site; and a large site with both common structures and scattered objects. Experimental results show that PCM is effective for automatically grouping objects in virtual construction scenarios. It can significantly reduce the effort required to prepare a construction simulation.

@&#INTRODUCTION@&#
Virtual construction enables simulation and visualization of the progress of construction activities. The testing and verification of a construction plan using computers has emerged as an important research area in the field of construction [1]. Through virtual construction simulation, engineers are able to access a detailed preview of the construction process, identify potential problems, and find effective solutions before the actual project begins. Virtual construction provides a low-cost sandbox environment for developing and testing various construction plans. Many successful studies have been presented to demonstrate the advantages and potentials of utilizing virtual construction [2–4].As modern construction projects have become more complex and difficult to execute, there is a growing demand for virtual construction technology that can identify constructability problems in the early planning stage, and prevent delays at the real construction site; this demand is for more realism and a higher level of detail of construction simulation [6]. Kamat [5] developed Vitascope for operational-level simulation. Chi et al. [7] developed a crane simulator that simulates crane operation using a game engine. CMLabs [8], GlobalSim [9], Simlog [10] corporations developed training simulators with real-time physical behaviors and realistic rendering of scenes. They even simulated the sway of rigging objects with accuracy. These projects have demonstrated the effectiveness of integrating graphical technologies and physics engines for realistic and accurate crane simulation. Recent studies have integrated game engines into virtual construction [11–13], enabling fast-development and prototyping of construction simulation and also providing a rich interaction between users and the virtual construction scene. Methods proposed in recent studies, such as those of Hung and Kang [14], Yang et al. [15], allow users to control construction machines on the virtual site in order to identify constructability problems. This research has shown the potentials of real-time construction simulations. By simulating in detail the activities in the construction process such as cooperative crane lifts, engineers are able to find potential and unexpected problems before commencement of the project. Simulators also allow construction machine operators to rehearse various critical and high-risk tasks before or during the tasks themselves; this is expected to reduce fatal events and accidents caused by empirical misjudgments or insufficient considerations.An important and critical part of real-time construction simulation is the collision detection between dynamical (e.g. construction machines) and static objects in a virtual construction site. Collision detection must be performed at all times to ensure safe operation during construction activities. At a real construction site, collisions between construction machines, lifting objects (in crane erection activities), and any other nearby objects may occur. By collision checking at each time step of the real-time simulation for a detailed construction process, engineers are able to ensure the safety of the construction plan, reduce additional costs, and prevent critical damage. Collision detection is also the critical part to perform automatic motion planning for construction machines such as cranes, which can help finding collision free and feasible paths to accomplish risky erection tasks [16,17].The methods for collision detection have been developed over many years. Many research utilized hierarchical collision boundary trees to improve collision detection efficiency [18–22]. These methods focused on representation of a deformable or irregular 3-D model. Some researchers utilized graphics hardware to improve collision detection [23]. Recent research such as [24,25] has focused on efficient collision detection in soft bodies and cloth. Chang et al. [26] developed an algorithm which can speed up collision detection between statics rigid objects using bounding volume hierarchy which consists of an oriented bounding box (OBB) tree enhanced with bounding spheres. Other research such as Garca-Fernndez et al. [27] used a neural network approach to modeling crane collision, which is suitable for real-time simulations of environments where most of the objects have similar shape. Li et al. [28] presented a method called the sort moving boxes (SMBs) for large number of dynamical 2D/3D objects in a dynamic environment.However, there is often over thousands of structural elements in a construction scene, which is the nature of construction site. The computational cost incurred in this process has been identified in several studies as a significant drawback [29–31]. The main problem is the polynomial increase in computational cost with the number of objects in a virtual construction site [32]. Besides, a construction machine, such as a tower crane, needs to be monitored and checked with all objects around simultaneously in order to ensure the safety and its clearance, especially when the working area is limited and narrow in a construction site. These all increase the difficulty and cost of the collision detection for real-time construction simulation. Although previous research [32] has developed methods for virtual construction to compute collisions more efficiently, these methods still struggle to deal with a large number of the objects, as well as objects with irregular shapes.An ideal and effective method of reducing the number of collision checks is to group objects and replace them with larger bounding boxes, which is also a common trick used by game developers to manually define collision boundaries based on the original detailed 3-D models. In other words, two models are created: the detailed 3-D model, and the collision boundaries. The former is used for realistic rendering, and the latter for efficient collision checking. As construction simulations often involve a large number of structural elements, the generation of the collision boundaries becomes difficult and tedious. As the glowing development of building information model (BIM), these models may contain different level of details [33]; and the provided and conducted 3-D models of construction site are sometimes over-detailed for real-time construction site purposed such as crane erection simulation. Furthermore, the details of 3d retrieved model also change during the simulation period. Therefore, defining collision boundaries manually would require significant effort. An automated and efficient approach is needed to reduce the manual work involved.The generation of the collision detection boundaries is a pre-processing procedure for real-time simulation and visualization. Fig. 1shows the relationship between the generation of the collision boundaries and the real-time simulation pipeline. Appropriate boundaries are generated for real-time collision detection at each time step during simulation. To support real-time collision detection, we usually divide the model into groups of objects and generate collision detection boundaries around each of the groups. This reduces the number of detailed geometric features for the objects used in collision checking, significantly improving computational efficiency. However, the generation of ideal collision detection boundaries that accurately represent the physical structures of the objects as well as support real-time collision detection is not trivial. The challenges involved are summarized as follows:Tradeoff between efficiency and accuracy: There is always a trade-off between efficiency and accuracy when computing collision boundaries. More detailed and complex collision boundaries depict the group of objects more accurately. However, the computational effort required for collision checks may also increase as a result. On the other hand, using a simplified collision detection boundary may speed up collision checking, but reduces accuracy. Therefore, it is important to have a systematic method for balancing computational efficiency and model accuracy.Heuristic and tedious generation process: In practice, game developers usually generate collision boundaries using modeling software. They group objects based on simplified 3-D geometric primitives, such as spheres, rectangular boxes, and cones. This can reduce the computational cost of collision checks later. This simplified model is sometimes called a physics model. Game developers usually group objects based on their experience. To construct a suitable collision detection boundary, developers must tune the model by repeated modification and testing. Moreover, the scene and the objects at a construction site are very complex, and the number of elements may be over one thousand. As a result, the procedure is very time consuming, frustrating, and tedious.Frequent boundary re-generation: Unlike computer games, a general and well-designed virtual construction simulation must support the varying requirements of different project phases. Thus, collision boundaries must be re-generated several times. For this, a fast re-generation algorithm is needed. Some simulations require a 4-D model (a 3-D model with a schedule [34]), where the model changes over time. Thus, developers need to overcome this challenge of frequent boundary re-generation.To summarize, collision detection remains a significant challenge, especially for construction simulation. It is important to develop a computational method to generate boundaries automatically. Such a method would need to consider the nature of the construction simulation, balance computational efficiency and accuracy, and provide fast re-generation of boundaries to meet the requirements of construction management.The goal of this paper is to develop an automatic method for generating boundaries that can replace the numerous construction objects. The boundaries must represent objects using simple geometric primitives, which would reduce the overall computational cost of collision checking. We develop an automatic clustering method as well as an index for verifying the clustering results. The method should meet the requirements of several types of projects, including projects with scattered objects or with a large number of clustered objects. The boundaries generated should strike a balance between efficiency and level of detail. The proposed method should be sufficiently simple to support existing physics engines and visualization frameworks. For developers, this automatic method should reduce the tedious work of generating boundaries manually.

@&#CONCLUSIONS@&#
