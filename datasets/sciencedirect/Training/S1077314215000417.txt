@&#MAIN-TITLE@&#
Dynamic task decomposition for decentralized object tracking in complex scenes

@&#HIGHLIGHTS@&#
Decentralized tracking in multicamera environment is formalized as assignment problem.Assignment decomposes tracking task into subtasks under occlusion constraints.Assignment is found by minimizing a parameter-free objective function F.F derived via information theoretic measure of predicted uncertainty under assignment.Min-cost flow solver exploits graph encoding structure of F and occlusion constraints.

@&#KEYPHRASES@&#
Multi-camera tracking,Object tracking,Distributed tracking,Camera selection,Resource allocation,Task assignment,Performance evaluation,

@&#ABSTRACT@&#
The employment of visual sensor networks for video surveillance has brought in as many challenges as advantages. While the integration of multiple cameras into a network has the potential advantage of fusing complementary observations from sensors and enlarging visual coverage, it also increases the complexity of tracking tasks and poses challenges to system scalability. For real time performance, a key approach to tackling these challenges is the mapping of the global tracking task onto a distributed sensing and processing infrastructure. In this paper, we present an efficient and scalable multi-camera multi-people tracking system with a three-layer architecture, in which we formulate the overall task (i.e., tracking all people using all available cameras) as a vision based state estimation problem and aim to maximize utility and sharing of available sensing and processing resources. By exploiting the geometric relations between sensing geometry and people’s positions, our method is able to dynamically and adaptively partition the overall task into a number of nearly independent subtasks with the aid of occlusion reasoning, each of which tracks a subset of people with a subset of cameras (or agencies). The method hereby reduces task complexity dramatically and helps to boost parallelization and maximize the system’s real time throughput and reliability while accounting for intrinsic uncertainty induced, e.g., by visual clutter and occlusions. We demonstrate the efficiency of our decentralized tracker on challenging indoor and outdoor video sequences.

@&#INTRODUCTION@&#
The technology of people tracking in visual surveillance has developed fast over the past years. With the increasing demand of security and surveillance as well as other applications such as ambient assisted living, sports analysis, traffic control and smart museums, nowadays visual surveillance often involves monitoring large, open areas (eg., airports) with multiple networked cameras. The employment of visual sensor networks in surveillance systems has brought in as many challenges as advantages. While the integration of multiple cameras into a network has the potential advantage of fusing complementary observations from sensors and enlarging visual coverage, it also increases the complexity of tracking tasks and poses challenges to system scalability. Traditional methods of tracking all the targets with a joint likelihood can easily incur the curse of dimensionality as the number of targets increases. On the other hand, tracking with totally independent particle filters often results in the problem of hijacking [4]. Another issue arises from the enlarged area to be monitored and the increased number of views to be processed. Larger area means more computational resources to be allocated and more views means more data to be processed, hence engendering more computational overhead. How to curtail the computational load so as to maintain real-time tracking without losing frames is then a big issue. Besides, camera networks usually have limited resources such as communication bandwidth and sensors typically have limited or even no computational capabilities, the way of information gathering, sharing and processing among cameras is then of crucial importance. A possible approach to tackling these challenges would then be to dynamically map the demanding global task onto a decentralized or distributed sensing and processing infrastructure.In this paper, we demonstrate that the overall tracking task can be split into nearly independent subtasks corresponding to the tracking of subsets of people with a subset of cameras, thereby reducing computational load and saving communication bandwidth due to branched image transfer. Our dynamic task decomposition strategy brings out a three-layer architecture for the tracking system (Fig. 1), in which cameras constitute the bottom layer and are dynamically grouped into clusters (or agencies, the middle layer) which track a subset of targets using existing base trackers. The top layer is a supervisor process which takes care of target detection and track termination, and task decomposition. For real-time consideration, we design a simple but effective cost function which measures the cost induced by decomposing a task. Two methods for task decomposition are proposed. One is based on exhaustive search, i.e., to enumerate all feasible combinations of agencies and subsets of targets under given constraints and find out the one that results in the least cost. The other method formulates it as a minimum cost flow problem.The main contributions of this paper develop around a novel formulation of the many-to-many assignment problem in multi-target multi-camera tracking. It is based on a task decomposition cost that combines computational complexity of base trackers with camera utility measure in a parameter-free objective function. Camera utility goes beyond the concept of visual coverage of a target, and considers information theoretic measure of predicted estimation uncertainty capturing essential information from multi-view geometry of the camera network available via calibration. The assignment problem defined over the objective function is efficiently solved by a minimum cost flow method that exploits a graph encoding the structure of the function and occlusion constraints. Preliminary results have been published in conference proceedings [47,48].The remainder of the paper is structured as follows. Section 2 gives a literature review of the related work. Section 3 presents the framework of our tracking method and how we decentralize the overall tracking task. Section 4 details how we implement dynamic task decomposition. In Section 5 we present comprehensive evaluation about the proposed algorithms by conducting a number of experiments and we draw conclusions in Section 6.

@&#CONCLUSIONS@&#
