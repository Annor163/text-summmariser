@&#MAIN-TITLE@&#
A generalized surface subdivision scheme of arbitrary order with a tension parameter

@&#HIGHLIGHTS@&#
Presents a generalizedB-spline surface subdivision with arbitrary orderk.The scheme is conveniently implemented using local operations.It producesCk−2limit surfaces withC1at extraordinary vertices.It can define exact analytic, sweeping and revolution surfaces.New rules for sharp and semi-sharp features are embedded in local operations.

@&#KEYPHRASES@&#
Subdivision scheme,Generalized subdivision,Generalized,B,-splines,Arbitrary topology,Surface of revolution,Sharp features,

@&#ABSTRACT@&#
This article presents a generalizedB-spline surface subdivision scheme of arbitrary order with a tension parameter. We first propose a tensor-product subdivision scheme that producesku×kvorder generalizedB-spline limit surfaces. GeneralizedB-spline surface is the unified and extended form ofB-splines, trigonometricB-splines and hyperbolicB-splines (Fang et al. 2010). The tensor product subdivision scheme can be used to generate various surfaces of revolution, including those generated by classical analytic curves that can be exactly represented by generalizedB-spline curves. By extending a bi-order (sayk) tensor-product scheme to meshes of arbitrary topology, we further propose a generalized surface subdivision scheme with a tension parameter. Several well-known subdivision schemes, including Doo–Sabin subdivision, Catmull–Clark subdivision, and two other subdivision schemes proposed by Morin et al. (2001) and Stam (2001), become special cases of the generalized subdivision scheme. The tension parameter can be used to adjust the shape of subdivision surfaces. The scheme produces higher orderCk−2continuous limit surfaces except at extraordinary points where the continuity isC1. Convenient and hierarchical methods are also presented for embedding sharp features and semi-sharp features on the resulting limit surfaces.

@&#INTRODUCTION@&#
Recursively generating smooth surfaces from an initial control polygon is a standard method in computer graphics (CG) and computer aided design (CAD) due to its numerical stability and simplicity for implementation. Extensive work has been done in the area of subdivision-based modelling since the 1970s. Today one can find families of subdivision schemes for geometric design and graphics applications [1–6].In connection with the proposed subdivision scheme, Lane and Riesenfeld  [7] proposed an algorithm for the subdivision of uniformB-splines with an arbitrary order. Stam, Zorin and Schröder [8,9] further extended the scheme to surface subdivision for quadrilateral meshes of arbitrary topology that produces uniform bi-degreeB-spline surfaces with an arbitrary order. Lu et al. [10,11] also proposed subdivision schemes for uniform algebraic-trigonometricB-splines and uniform algebraic-hyperbolicB-splines. Fang et al. [12] further proposed a generalized curve subdivision scheme that produces uniform generalizedB-spline limit curves including classicB-splines, algebraic-trigonometricB-splines and algebraic-hyperbolicB-splines. One can also find a class of subdivision schemes based on an alternative form of generalizedB-splines known as exponentialB-splines [13–17]. Many other known subdivision schemes can be viewed as special cases of generalized subdivision schemes that can produce an individual class of generalizedB-splines [18–23].  In the literature, there are also some subdivision surfaces representing a superset of the standard non-uniform rationalB-spline (NURBS) representation [24,25] and T-NURCCs (Non-Uniform Rational Catmull–Clark Surfaces with T-junctions) representing a superset of bothT-splines and Catmull–Clark surfaces [26]. All the above subdivision schemes have their respective spline orT-spline background.This article presents a generalized subdivision scheme of arbitrary order with a tension parameter for meshes of arbitrary topology. The scheme falls in the class of non-stationary subdivision schemes and it produces uniform generalizedB-spline surfaces of an arbitrary order in the case of a regular control mesh. The scenario is similar to the subdivision schemes of [8,9] in relation toB-splines, but is different from NURBS-based subdivision or T-NURCCs [24–26] that fall in the class of non-uniform subdivision schemes. In this article, we first discuss a tensor-product version of the generalizedB-spline subdivision scheme and its applications in producing various surfaces of revolution and general sweeping surfaces. The proposed generalized subdivision scheme is then further presented for surface subdivision using meshes of arbitrary topology. The proposed scheme has the following features, all seamlessly realized in a single framework of a generalizedB-spline subdivision scheme:•The generalized surface subdivision scheme produces higher order limit surfaces withCk−2continuity except at a limited number of extraordinary vertices whereC1continuity is obtained.The scheme can be conveniently implemented using repeated local operations that only involve direct neighbors of the newly inserted or updated vertices.Depending on the orderkand the initial tension parameteru0, the scheme reduces to several well-known subdivision schemes, such as Doo–Sabin [27], Catmull–Clark [28] andB-spline subdivision [8].The scheme can also exactly reproduce sphere, torus, conical shapes, the subdivisions of Morin et al. [20], general sweeping surfaces, and various surfaces of revolution from curves of generalizedB-splines. All these geometric features are quite important for CAD applications.For a regular set of control vertices, the scheme produces uniform generalizedB-spline surfaces of an arbitrary order at the limit, including classicB-splines, algebraic-trigonometricB-splines and algebraic-hyperbolicB-splines, through mid-point knot insertion.An alternative hierarchical method is also proposed for producing sharp features and semi-sharp features with similar effect as that of a level-based method proposed by DeRose et al. [29], but with new rules hierarchically embedded in individual steps of local refinements.The article is organized as follows. In Section  2, we first give the rules of generalizedB-spline curve subdivision and construct a tensor-product version of generalizedB-spline surface subdivision. Design methodologies for generating surfaces of revolution and sweep surfaces by the tensor-product scheme are also introduced in this section. In Section  3, a generalized surface subdivision scheme for meshes of arbitrary topology is further proposed. Treatment of sharp features including semi-sharp features and discussion on continuity conditions are presented in Sections  4 and 5, respectively. Conclusions are given in Section  6.The subdivision algorithm derived from generalizedB-spline curves can be described as follows.Let{Pi0,i=1,…,n}be the sequence of zeroth level control vertices. For thelth level of generalizedB-spline curve subdivision of ordersk(k≥3), the new control vertices are computed from one step of Chaikin-like refinement [18] as defined in Eq. (1) andk−3steps of local average operations as defined in Eq. (2), i.e.,(1)Pi1={Pi/20+(1+2ul)P(i+2)/202(1+ul),ieven.(1+2ul)P(i+1)/20+P(i+3)/202(1+ul),iodd;and(2)Pir=(Pir−1+Pi+1r−1)/2,r=2,…,k−2,where the superscriptrforPrindicates step number of repeated local refinements, andulis a non-stationary tension parameter which is updated once at each level of subdivision byul=1+ul−12from a given initial parameteru0. The above curve subdivision algorithm can be naturally extended to obtain a tensor-product version generalized surface subdivision algorithm.Algorithm 1Tensor-product generalized surface subdivision:LetM0={Pi,j0}i,j=1n,mbe the initial set of control vertices. A tensor-product version of generalized surface subdivision with orderku×kvand tension parametersu0andv0is implemented by doing curve subdivision algorithm twice, i.e., one for each parameter direction.•Initialization: Letlrepresent the current level of subdivision. Initializel≔0and assign the number of levels of expected subdivision toL;Apply one level of tensor-product generalized surface subdivision: Apply one level of generalized curve subdivision of orderkuwith parameterulrow by row and apply one level of generalized curve subdivision of orderkvwith parametervlcolumn by column at the same time to control meshMlto obtain new meshMl+1;Prepare for the next level of subdivision: Ifl=L, go to the next step for completion; otherwise updatel≔l+1, letul≔1+ul−12andvl≔1+vl−12, and go to the previous step for another level of subdivision;Completion: The refined control mesh afterLlevels of subdivision can be exported asML.It should be noted that, unless stated explicitly in this article,lforMlstands for the level of subdivision as above, whilerforPrindicates the step number for repeated local refinements as seen in Eq. (2). It is also easy to note that the limit surface generated by this tensor-product surface subdivision scheme isCmin(ku,kv)−2continuous. In case of bi-order subdivision surfaces, one may directly use Algorithms 3 and 4 that are more efficient for subdivision operations similar to that of the algorithm in [2]. The above scheme for tensor-product surface subdivision can be used to generate surfaces of revolution from any curve defined using generalizedB-spline curve subdivision proposed in [12]. Many analytical surfaces can thus be defined as a generalized subdivision surface by revolving classical analytical curves, such as conic curves, Lissajous curves, trigonometric function curves, hyperbolic function curves, catenary curves and helixes, around their axes. Algorithm 2 describes how to construct the control mesh from which a revolution surface can be generated by the subdivision scheme proposed in Algorithm 1.Algorithm 2Surface of revolution: Let a revolution surfaceRsbe defined by revolving a curveRcaround an axis andPcbe the initial set of control vertices ofRcdefined using the generalizedB-spline curve subdivision scheme of orderkuwith tension parameteru0. Without loss of generality, here we assume that the rotational axis is thez-axis, as illustrated in Fig. 1(a).Rscan be generated by subdivision with ordersku×3and tension parameters(u0,cosπ4). Its control mesh is defined asMR≔[Pc1Pc2Pc3Pc4Pc5Pc6],wherePcj(i,j,q)=[2(cosθ⋅(Pc)x−sinθ⋅(Pc)y),2(sinθ⋅(Pc)x+cosθ⋅(Pc)y),(Pc)z].In the above equation,i=1,…,nindicates theith row ofMRwithnbeing the number of vertices ofPc;j=1,…,6indicates thejth column ofMR;q=1,2,3indicates theqth coordinates of the control vertices ofMR; andθ=j−12π+π4,j=1,…,6.The indexqimplies thatPc(:,:,1)=(Pc)x,Pc(:,:,2)=(Pc)y,Pc(:,:,3)=(Pc)z.Fig. 1 shows an example to construct a surface of revolution following the above algorithm. In this figure,Rcis a spatial curve, whose parametric equation is(x(t),y(t),z(t))=(t+t2,t+sin(2t),2t+cos(2t)+2t2),t∈[π/4,π]. Following Fang et al. [12], it can be generated by generalized subdivision scheme of order 5 with tension parameterv0=cosπ4and control points(Pc)x={6.002,4.320,2.638,5.891,9.143,7.461,5.779,9.032},(Pc)y={4.768,3.086,3.871,7.124,7.910,6.228,7.013,10.266},(Pc)z={21.756,29.495,33.534,43.740,60.116,72.790,81.763,96.904}. The corresponding generatrix, the control mesh, the results after one and two levels of subdivision and the final subdivision surface of revolution are all given in Fig. 1.Algorithm 2 generalizes the scheme of generating revolution surfaces by subdivision proposed in [20]. Because it is permitted to use arbitrary orders and different tension parameters in the two parameter directions, our scheme can generate various kinds of revolution surfaces. In fact, it is also easy to generate sweeping surfaces in a similar way. Fig. 2illustrates more revolution and sweeping surfaces generated by Algorithm 2. Further details about their section curves, orders, tension parameters on both parameter directions are listed in Table 1.In this section, we extend the generalizedB-spline curve subdivision scheme to surfaces of arbitrary topology. A kind of new surface subdivision scheme of arbitrary order with a tension parameter is then proposed. The tension parameter can be used to control the shape of the resulting surface and the approximation between the limit surface and the control mesh. The order determines the continuity and smoothness of the limit surface. Classic Doo–Sabin subdivision, Catmull–Clark subdivision, uniformB-spline subdivision with arbitrary order, and some other uniform subdivision schemes based on trigonometric and hyperbolic splines are special cases of the proposed new subdivision scheme.From the rule of generalizedB-spline curve subdivision, we can see that orderksubdivision involvesk−3local average operations. Further referring to [8], we merge every two local average operations into one step of smoothing average which keeps the topology unchanged during the process of subdivision. In the following, we introduce the new subdivision scheme of both bi-even order and bi-odd order for meshes of arbitrary topology.We first rewrite the rules (1) and (2) of generalizedB-spline curve subdivision. When the subdivision orderkis even, thelth level of generalizedB-spline curve subdivision includes one Chaikin-like refinement andk−3local average operations. We further divide the Chaikin-like refinement into two steps described as(3)Pi1={Pi/20,ieven,12(P(i−1)/20+P(i+1)/20),iodd,and(4)(Pi2)′={ul1+ulPi/21+11+ulP(i+2)/21,ieven,11+ulP(i−1)/21+ul1+ulP(i+1)/21,iodd,and combine the refinement of Eq. (4) with one step of local average operation to get(5)Pi2=(Pi2)′+(Pi+12)′2=12(1+ul)Pi−11+ul1+ulPi1+12(1+ul)Pi+11.Finally, we merge every two steps of the remainingk−2local average operations into one smoothing average operation as described by the following equation:(6)Pir=14Pir−1+12Pi+1r−1+14Pi+2r−1,r=3,…,k/2(k>4).Based on the rewritten curve subdivision rules (3), (5) and (6), we extend the scheme to arbitrary topology.Algorithm 3Even order generalized surface subdivision (one level):Let the orderkbe an even number withk≥4. Thelth level of even order subdivisionEven(Ml,k,ul)with its current meshMland tension parameterulcan be described as follows:•Step 1 Linear Refinement ofMl: In this step, we compute the middle point for each edge and centroid of each face ofMlusing the masks illustrated in Fig. 3(a)–(c). We then connect each centroid with those middle points incident to the same face and insert them intoMlto form a refined mesh, let us callMl+1, which must be a quadrilateral mesh.Step 2 Nonuniform Smoothing ofMl+1: In this step, the topology of the mesh remains unchanged. We only update its vertices. The rule for updating the vertices isVnew=α(N)Vold+β(N)∑VE+γ(N)∑VFas illustrated in Fig. 3(d)–(f). In the above equation,VEis a vertex which lies on the same edge withVold, andVFis a vertex which lies on the same face withVold, but notVE. We takeα(N)=(N−4)(1+2ul)+Nul2N(1+ul)2,β(N)=8ulN2(1+ul)2,γ(N)=4N2(1+ul)2,withα(N)+Nβ(N)+Nγ(N)=1, whereNrefers to the valence of the corresponding vertex.Step 3 Uniform Smoothing ofMl+1: This step is only performed ifk≥6and it will be repeated fork−42times. The topology of the mesh also remains unchanged. The refinement formula is the same as that of Step 2, except that we takeα(N)=N−3N,β(N)=2N2,γ(N)=1N2.Step 4 Tension parameter updating: The tension parameter will be updated for the next level of subdivision asul+1=1+ul2.Remark 1When the control mesh is regular, the subdivision scheme described in Algorithm 3 provides an alternative implementation of Algorithm 1 for the case of bi-even order. Many existing subdivision methods are special cases of our scheme. Whenu0=1, the proposed scheme is equivalent to the even case subdivision of [8]; Whenk=4, it reduces to the scheme proposed in [20]; Whenk=4andu0=1, it reduces to the classic Catmull–Clark subdivision scheme [28]. These conclusions are not difficult to derive from the above masks of updating vertices.Figs. 4 and 6illustrate how the order and the tension parameter affect the resulting surfaces. Obviously, the bigger theu0, the closer the resulting surface approaches to the initial control mesh. The higher the order, the smoother the resulting surface. Specially, the cases in Figs. 4(a) and 6(e) are actually the same as that of Catmull–Clark subdivision becausek=4andu0=1.Similarly, when the subdivision orderkis odd, we merge two Linear refinement operations into one uniform smoothing average operation. The generalizedB-spline curve subdivision is then rewritten as(7)Pi1={1+2ul2(1+ul)Pi/20+12(1+ul)P(i+2)/20,ieven,12(1+ul)P(i−1)/20+1+2ul2(1+ul)P(i+1)/20,iodd,and(8)Pir=14Pir−1+12Pi+1r−1+14Pi+2r−1,r=2,…,k−12.Based on the rewritten curve subdivision rules (7) and (8), we can extend them to odd order generalized surface subdivision on arbitrary topology.Algorithm 4Odd order generalized surface subdivision (one level):Let the orderkbe an odd number withk≥3. Thelth level of odd order subdivisionOdd(Ml,k,ul)with its current meshMland tension parameterulcan be described as follows:•Step 1. Chaikin-like Refinement ofMl: In this step, we compute a new vertex for each vertex in each face according to the mask illustrated in Fig. 5(a) and (b), that isVnew=α′(N)Vold+β′(N)∑VE′+γ′(N)∑VF′.HereVE′refers to a vertex which lies on the same edge in the current face, andVF′refers to other vertices except forVoldandVE′in the current face. We takeα′(N)=Nul2+(2N−4)ul+1N(1+ul)2,β′(N)=1+2ulN(1+ul)2,γ′(N)=1N(1+ul)2withα′(N)+2β′(N)+(N−3)γ′(N)=1.We denote the refined mesh asMl+1.Step 2. Uniform Smoothing ofMl+1: In this step, the topology of the mesh remains unchanged. This step is actually the same as Step 3 of Algorithm 3. The mask of updating vertices is illustrated in Fig. 5(c). Here we takeα′(N)=N−3N,β′(N)=2N2,γ′(N)=1N2.Step 3. Tension parameter updating: The tension parameter will be updated for the next level of subdivision asul+1=1+ul2.Remark 2When the control mesh is regular, the subdivision scheme described in Algorithm 4 is also an alternative implementation of Algorithm 1 for the case of bi-odd order. Whenu0=1, the proposed scheme is equivalent to the odd case subdivision of [8]; Whenk=3andu0=1, it reduces to the classic Doo–Sabin subdivision scheme [27].In Fig. 6(a)–(c), we can also see how the order and the tension parameter affect the subdivision results. In particular, Fig. 6(b) illustrates the result of Doo–Sabin subdivision as a special case becausek=3andu0=1.Sharp features need to be processed in many practical applications. In such cases, we sometimes expect to have sharp features, such as crease edges, boundaries, corner vertices, darts, cusps, defined on the limit surface. In Warren et al. (2002), a method is proposed to process sharp features through restricting the application of averaging rules to a subset of the initial mesh corresponding to crease curves and vertices. In other words, rules for defining creases and other sharp features are automatically embedded in individual averaging operations. Similarly in this article, we also define rules for crease and sharp features in association with smoothing operations. However, we directly modify the rules of smoothing steps to special rules for defining sharp features in the proposed scheme. Such special rules/operations are thus hierarchically embedded in individual refinement operations of a particular level of subdivision.We classify vertices into five types according to shape features incident to a particular vertex, i.e., smooth (0), dart (1), crease (2), corner (≥3), and cusp (all crease edges shrinking into a single point with 0) vertices, where the number inside bracket indicates the number of incident crease edges to the respective vertex. In the whole process of subdivision, types of existing vertices remain unchanged. In the middle-point insertion step, the masks illustrated in Section  3.1 are applicable to all types of vertices. However, newly inserted vertices must be classified correctly. In fact, all other newly inserted vertices are smooth, except for those of crease edges which should still be classified as crease vertices. In smoothing steps, special masks should be applied to some types of vertices. For smooth and dart vertices, no special masks are required. For crease vertices, the corresponding subdivision masks in the non-uniform smoothing step and uniform smoothing step are illustrated in Fig. 7(a) and (b), respectively. In Fig. 7(a),αs=ul1+ul,βs=12(1+ul).For cusp and corner vertices, their subdivision masks are the same as that of the two smoothing steps, as illustrated in Fig. 7(c).Fig. 8shows several examples with different sharp features. In this and all other illustrations with sharp features, crease edges are drawn in thick lines. Dart, sharp, cusp and corner vertices are drawn in black squares with small, middle and big size, respectively.In the literature, one can find a method for defining the so-called semi-sharp features by DeRose et al. [29]. The method uses special masks of sharp features in the first several levels of subdivisions, while it uses regular subdivision rules afterwards. This kind of level-based idea can be directly applied to all topologically primal subdivision schemes. It can also be applied to the proposed subdivision scheme of even order for producing semi-sharp features.In this paper, we propose an alternative hierarchical method for producing semi-sharp features for the proposed generalized subdivision scheme. With the proposed method, subdivision rules used for producing semi-sharp features are embedded in individual local operations of the subdivision scheme and are the same for all levels of subdivisions, which is different from that of the level-based method [29] where sharp features are only applied to the first few levels of subdivisions.In Algorithm 3, there arek2−1smoothing steps including one nonuniform smoothing step andk2−2uniform smoothing steps in one level ofk-order subdivision. All these smoothing steps will be substituted by special masks for sharp features. If only the frontcssmoothing steps are substituted, we obtain semi-sharp features with sharpness coefficientcs. The sharpness of the resulting crease features is thus controlled by the numbercs∈Zof special rules applied in the same level of subdivision, not the numberlof subdivision levels.For the subdivision scheme of bi-even order,cscan take values in[0,k2−1]and is integrated in Algorithm 3 as follows.•Whencs=0, sharp feature rules will not be applied at all, leading to smooth limit surfaces.Whencs=1, sharp feature rules will only be applied to replace Step 2 Nonuniform Smoothing, leading to semi-sharp features ifk≥6or sharp features ifk=4.When2≤cs≤k2−1andk≥6, sharp feature rules will be further applied to replace the firstcs−1Uniform Smoothing operations of Step 3. Ifcs<k2−1, semi-sharp features will be produced on the final limit surface, while ifcs=k2−1, i.e., all Uniform Smoothing operations of Step 3 will be replaced by sharp feature rules, pure sharp features will be produced on the final limit surface.Fig. 9provides some examples in defining semi-sharp features. In this case,k=8andcscan take values of0,1,2,3. Different effects are shown in these illustrations with differentcsvalues, which provide more alternatives for practical applications. Here we also treat open boundaries as internal crease edges commonly used by other researchers.In fact, the hierarchical method can also be used together with the level-based method to implement more plentiful semi-sharp features. For bi-odd order subdivisions, however, the methods for defining sharp features are slightly different. This case should be further addressed in future work.When the initial control meshes are regular, the subdivision surfaces converge to tensor-product generalizedB-spline surfaces of orderkwhich areCk−2continuous. Surfaces obtained by the proposed generalized surface subdivision scheme on arbitrary topology are naturallyCk−2continuous except at those extraordinary vertices.Remark 3Becauseul=ul−1+12, we haveliml→∞ul=1. Whenu0=1, we know that the generalized surface subdivision scheme reduces to the stationary subdivision scheme of [8].As for the continuity at extraordinary vertices, it isC1continuous whenu0=1because the proposed scheme reduces to the subdivision scheme in [8] in this case. Whenu0≠1, by Remark 3, we know thatliml→∞ul=1. So in the limit, our scheme has the same subdivision matrices, eigenvalues, eigenvectors and characteristic maps as those of the scheme proposed in paper [8], whoseC1continuity is verified already [8,30].Similar to many other studies [31–34], we further numerically verify that our scheme hasC1continuity at extraordinary vertices. We have computed the eigenstructures of subdivision matrices for a wide range of different valencesN=3,4,…,20, bi-even ordersk=4,6,…,22, tension parametersu0=0.01,0.5,1,2,50, and levels of subdivisionsl=1,…,10. For each case, we haveλ0=1>|λ1|=|λ2|>|λ3|, if the eigenvalues of subdivision matrix are ordered from big to small according to their absolute values. The characteristic map subdivided from the characteristic mesh, which is formed by two eigenvectors corresponding toλ1andλ2, is also regular and injective. By the theories proposed in [35,36], the scheme meeting the above two conditions isC1-continuous at extraordinary vertices.In Table 2, we list selected results of(λ,μ,δ)showing the eigenstructure of the proposed subdivision scheme with ordersk=4,6,8,…,16, valencesN=3,5,6,7, tension parameteru0=2, and the subdivision levell=1,9, whereλis the subdominant eigenvalue,μis the next largest eigenvalue afterλ,δ=logμ/logλis computed for the convenience of comparing with the results from Table 1 of paper [8]. When the results forl=1,9are the same, we only list the common result in a single line. We can see that all results are in common with that of Stam’s scheme whenl=9. The corresponding characteristic meshes at extraordinary vertices with bi-odd ordersk=4,8,12,16,22, valencesN=3,6,13,20and parameteru0=0.01are illustrated in Fig. 10.

@&#CONCLUSIONS@&#
In this paper, we first extend the generalizedB-spline curve subdivision to a tensor-product version for generalized surface subdivision. The tensor-product scheme is applied to generate various surfaces of revolution and general sweeping surfaces. We further extend the scheme to arbitrary topology and obtain a non-stationary surface subdivision scheme of arbitrary order with a tension parameter. Classic uniform spline-based subdivision schemes, such as Doo–Sabin subdivision, Catmull–Clark subdivision, arbitrary orderB-spline subdivision, and some other subdivisions based on trigonometric and hyperbolicB-splines, fall in the proposed generalized surface subdivision scheme as special cases. Shapes of the proposed subdivision surfaces can be easily adjusted by changing their tension parameters. The scheme isCk−2continuous except at a limited number of extra ordinary vertices where we numerically verify that the scheme isC1continuous for a wide range of cases of different valences, bi-degrees and tension parameters. However, a rigorous theoretical proof should be further conducted as future work.The proposed generalized subdivision scheme has also a good prospect in applications, such as isogeometric analysis (IGA), an active research area in the fields of CAD and CAE in recent years [37–39]. The scheme can be used to define not only classic analytical shapes, but also objects of arbitrary topology. The function, derivatives and integral of the proposed scheme can be efficiently evaluated. Local and adaptive refinements within the parametric domain can also be easily implemented. Details of the application of the proposed scheme in isogeometric analysis can be further addressed as future work.The proposed tensor-product generalized subdivision scheme can be of an arbitrary order with different tension parameters in two parametric directions. The generalized subdivision scheme for arbitrary topology is however limited to bi-degree and a single tension parameter. A generalized subdivision scheme with truly arbitrary orders in different parametric directions and regions may also be further developed. As the tensor-product scheme can generate many classic shapes, such as classical analytic surfaces and general sweeping surfaces, its extension to arbitrary topology will also be meaningful and important for many applications. In addition to independent definition of analytic shapes, it is also interesting to have analytic shapes embedded on a general freeform surface.