@&#MAIN-TITLE@&#
A rational cubic clipping method for computing real roots of a polynomial

@&#HIGHLIGHTS@&#
Use two rational cubics as bounding polynomials.Achieve a convergence rate 7 for a single root.It can achieve linear computational complexityO(n)for improved cases.

@&#KEYPHRASES@&#
Approximation order,Rational cubic clipping method,Root-finding,Convergence rate,

@&#ABSTRACT@&#
Many problems in computer aided geometric design and computer graphics can be turned into a root-finding problem of a polynomial equation. Among various solutions, clipping methods based on the Bernstein–Bézier form usually have good numerical stability. A traditional clipping method using polynomials of degree r can achieve a convergence rate ofr+1for a single root. It utilizes two polynomials of degree r to bound the given polynomialf(t)of degree n, wherer=2,3, and the roots of the bounding polynomials are used for clipping off the subintervals containing no roots off(t). This paper presents a rational cubic clipping method for finding the roots of a polynomialf(t)within an interval. The bounding rational cubics can achieve an approximation order of 7 and the corresponding convergence rate for finding a single root is also 7. In addition, differently from the traditional cubic clipping method solving the two bounding polynomials inO(n2), the new method directly constructs the two rational cubics inO(n)which can be used for boundingf(t)in many cases. Some examples are provided to show the efficiency, the approximation effect and the convergence rate of the new method.

@&#INTRODUCTION@&#
Many problems in computer aided geometric design and computer graphics can be turned into a root-finding problem of polynomial equations, such as curve/surface intersection (Efremov et al., 2005; Liu et al., 2009; Nishita et al., 1990; Patrikalakis and Maekawa, 2002), point projection (Chen et al., 2008), collision detection (Choi et al., 2006; Lin and Gottschalk, 1998), and bisectors/medial axes computation (Elber and Kim, 2001). In principle, a system of polynomial equations of multiple variables can be turned into a univariate polynomial equation by using the resultant theory. This paper discusses the root-finding problem of a univariate polynomial equation within an interval.Many references turn the given polynomialf(t)into its power series, and a collection of related references can be found in McNamee (1993–2002), Isaacson and Keller (1966), Mourrain and Pavone (2005), Reuter et al. (2007), Rouillier and Zimmermann (2004). The Bernstein–Bézier form off(t)has a good numerical stability with respect to perturbations of the coefficients (Farouki et al., 1987; Farouki and Goodman, 1996; Jüttler, 1998). Several clipping methods based on the Bernstein–Bézier form are developed (Bartoň and Jüttler, 2007; Liu et al., 2009; Morken and Reimers, 2007; Sederberg and Nishita, 1990). Note that the number of zeros of a Bézier function is less or equal to that of its control polygon. The method in Morken and Reimers (2007) utilizes the corresponding control polygon to approximationf(t), in which the zeros of the control polygon are used to approximate the zeros off(t)from one side. The method in Morken and Reimers (2007) achieves a convergence rate of 2 for a simple root. In principle, a B-spline (or Bézier) curve is bounded by the convex hull of its control polygon, the corresponding roots are then bounded by the roots of the convex hull. The corresponding approximation order of the approach using convex hull is 2 (Schulz, 2009). Comparing with the method in Morken and Reimers (2007), the r-clipping method in Bartoň and Jüttler (2007), Liu et al. (2009) bounds the zeros off(t)by using the zeros of two bounding polynomials of degree r, which achieves a higher approximation orderr+1, wherer=2,3.In principle, one can also use rational polynomials to boundf(t)for root finding. A rational quadratic polynomial has five free variables, which can achieve an approximation order 5 tof(t). If two rational quadratics are utilized to boundf(t), one can achieve a convergence rate of 5 for a simple root, which is much higher than that of 3 when using a quadratic clipping polynomial. However, in some cases when the curve(t,f(t))is not convex within[a,b], the denominators of the rational quadratic polynomials for boundingf(t)may have one or more zeros within[a,b], which leads to a bad approximation effect betweenf(t)and its bounding polynomials.A rational cubic polynomial, on the other hand, can approximatef(t)in a much better way than that of a rational quadratic polynomial, even in case that(t,f(t))is not convex within the given interval[a,b]. This paper presents a rational cubic clipping method which utilizes two rational cubic polynomials to boundf(t)for root-finding. The bounding rational cubics achieve the approximation order 7 tof(t)and the corresponding rational cubic clipping method can achieve a convergence rate of 7 for a simple root, which is much higher than that of 4 of previous cubic clipping methods. In addition, the method proposed in this paper directly constructs two rational cubic polynomials interpolating four positions and three derivatives off(t), which can boundf(t)in many cases and it leads to a much higher computation efficiency. Some numerical examples are provided to show both higher convergence rate and higher computation efficiency of the new method.The remainder of this paper is organized as follows. Section 2 provides an outline of clipping methods. Section 3 illustrates the rational cubic clipping method for finding two bounding rational cubics in details. Numerical examples and some further discussions are provided in Section 4, and the conclusions are drawn at the end of this paper.Suppose thatf(t),t∈[a,b], is the given polynomial of degree n. The basic idea of the clipping methods is to find two bounding polynomials, and then to clip off the subintervals containing no roots off(t)by using the roots of the bounding polynomials. The clipping process continues until the lengths of the remaining subintervals are less than a given tolerance. Finally, the middle points of the remaining subintervals are recorded as the roots off(t).The numerical convergence rate of a clipping method within an interval tends to bem¯/k¯, wherem¯is the convergence rate of a method for a single root, andk¯is the sum of multiplicities of all of the roots within the interval. Ifk¯is large for some cases, the numerical convergence rate is very slow. In this paper, at the beginning, we apply the method in Morken and Reimers (2007) to divide the given interval into several sub-intervals by utilizing the zeros of the control polygon of the given Bézier function, which can improve the corresponding convergence rate.In each clipping step, one needs to find two bounding polynomials for a given interval[a,b]and then to split the interval[a,b]into several subintervals by using the roots of the bounding polynomials. The subintervals containing no root off(t)are further clipped off. The computation of the two bounding polynomials is one of the key issues of a clipping step. Different clipping methods may obtain different bounding polynomials. Suppose that the two bounding polynomials are obtained such thatg1(t)≤f(t)≤g2(t). Note that the roots ofgi(t)is usually easily obtained, it is trivial to check whether or not a root ofgi(t)is a root off(t). Let Λ be a subinterval of[a,b]. We utilize the following lemma to clip the subintervals containing no roots off(t).Lemma 1Ifg1(t)>0org2(t)<0for allt∈Λ, then Λ can be removed.ProofFirstly, ifg1(t)>0, we havef(t)≥g1(t)>0, for allt∈Λ. That is to say, Λ contains no root off(t)and can be removed.Secondly, ifg2(t)<0, we havef(t)≤g2(t)<0. Similarly, Λ contains no root off(t)and can also be removed.  □In this paper, we provide a rational cubic clipping method to find the roots off(t), in which two rational cubic polynomials are used for boundingf(t). The roots of the two bounding rational cubic polynomials within an interval can be solved by using the Cardano formula (see more details in Liu et al., 2009). Finally, from Lemma 1, the roots of the bounding polynomials can be used for clipping the subintervals containing no roots off(t).The analysis of the convergence rate is another key issue of the clipping method, which depends on the approximation order of the bounding polynomials. We have the following theorem.Theorem 1Suppose that the two bounding polynomialsgi(t),i=1,2, achieve an approximation order m tof(t)within interval[a,b]whose length is small enough for satisfying Eq.(2), then the corresponding convergence rate for a roott⋆of multiplicity k ismk.ProofFrom the assumption thatt⋆has multiplicity k, we have that(1)f(j)(t⋆)=0,forj=0,1,⋯,k−1,andf(k)(t⋆)≠0.Combining Taylor's expansion with Eq. (1), there exist a small enoughη>0andξ1(t)such that(2)|f(t)−f(t⋆)|=|f(k)(t⋆)k!(t−t⋆)k+f(k+1)(ξ1(t))(k+1)!(t−t⋆)k+1|>|12f(k)(t⋆)k!(t−t⋆)k|,∀t∈[t⋆−η,t⋆+η].Letti⋆be a root ofgi(t). From Eq. (2), we have that(3)|f(ti⋆)−f(t⋆)|>|12f(k)(t⋆)k!(ti⋆−t⋆)k|,i=1,2.From the assumption thatgi(t)achieves an approximation order m tof(t)within[a,b], there exists a constantcisuch that(4)|f(t)−gi(t)|<ci(b−a)m,for allt∈[a,b].Combining Eq. (3) and Eq. (4), we have that(5)|12f(k)(t⋆)k!(ti⋆−t⋆)k|<|f(ti⋆)−f(t⋆)|=|f(ti⋆)|=|f(ti⋆)−gi(ti⋆)|<ci(b−a)m.LetC¯i=2ci⋅k!f(k)(t⋆). From Eq. (5), we obtain that(6)|ti⋆−t⋆|<C¯i1k(b−a)mk,which means that the corresponding convergence rate ismk.  □For the sake of convenience, leth=b−a,tj=a+j3h,j=0,1,2,3,dj=f(tj)andvj=f′(tj),j=0,1,2,3,g1(t)=(t−t0)2(t−t1)2(t−t2)2(t−t3),g2(t)=(t−t0)(t−t1)2(t−t2)2(t−t3)2.Letκ=sup0≤u≤1⁡|(u−0)2(u−1/3)2(u−2/3)2(u−1)|≈0.00149921. By substitutingt=a+uh, we have that(7)−κh7≤g1(a+uh)=(u−0)2(u−1/3)2(u−2/3)2(u−1)⋅h7≤0,0≤g2(a+uh)=(u−0)(u−1/3)2(u−2/3)2(u−1)2⋅h7≤κh7.We also introduce Theorem 3.5.1 in page 67, Chapter 3.5 of Davis (1975) as follows.Theorem 2Letw0,w1, ⋯,wrber+1distinct points in[a,b], andn0, ⋯,nrber+1integers ≥0. LetN=n0+⋯+nr+r. Suppose thatg(t)is a polynomial of degree N such thatg(i)(wj)=f(i)(wj),i=0,⋯,nj,j=0,⋯,r.Then there existsξ(t)∈[a,b]such thatf(t)−g(t)=f(N+1)(ξ(t))(N+1)!∏i=0r(t−wi)ni+1.□LetB3,j(t)=Cj3(b−t)3−j(t−a)j/h3be a Bernstein basis function of degree 3 mapping to[a,b],j=0,1,2,3. We introduce two rational cubic polynomials(8)Ri(t)=∑j=03ri,jB3,j(t)B3,0(t)+∑j=13ri,j+3B3,j(t)=Yi(t)ωi(t),whereri,jare the unknowns,i=1,2andj=0,1,⋯,6. By adding the following constraints(9)R1(tj)=djandR1′(tl)=vl,j=0,1,2,3,l=0,1,2,we obtain the values of the seven unknownsr1,jinR1(t),j=0,1,⋯,6. Similarly, we compute the values of{r2,j}j=06inR2(t)from the constraints(10)R2(tj)=djandR2′(tl)=vl,j=0,1,2,3,l=1,2,3.For a general case,R1(t)can be utilized as the reference polynomial, and the error bounds betweenf(t)andR1(t)can be estimated, i.e., there existε1andε2such thatε1≤f(t)−R1(t)≤ε2,∀t∈[a,b]. Thus, the two bounding polynomials can be set as(11)R1(t)+ε1≤f(t)≤R1(t)+ε2,∀t∈[a,b].The details for estimatingε1andε2are as follows. LetH1(t)=ω1(t)f(t)−Y1(t)be a polynomial of degreen+3. From Eq. (9), we have that(12)H1(tj)=0,H1′(tl)=0,j=0,1,2,3,l=0,1,2.Combing Eq. (12) with Theorem 2, there existsξ1(t)∈[a,b]such that(13)H1(t)=H1(7)(ξ1(t))7!g1(t).Following Eq. (13),g1(t)is a factor ofH1(t), i.e.,F1(t)=H1(t)g1(t)is a polynomial of degreen−4. BothF1(t)andH1(7)(t)are thus of degreen−4, which can be rewritten in Bernstein form such that(14)F1(t)=∑j=0n−4p1,jBn−4,j(t;a,b)andH1(7)(t)=∑j=0n−4p2,jBn−4,j(t;a,b),whereBn−4,j(t;a,b)is a Bernstein basis function within[a,b]of degreen−4. Suppose that(15)λi,1=sup0≤j≤n−4⁡{pi,j},λi,2=inf0≤j≤n−4⁡{pi,j}andμ1=infa≤t≤b⁡ω1(t).Ifμ1>0, we have thatλ1,1≤F1(t)≤λ1,2,λ2,1≤H1(7)(t)≤λ2,2,for allt∈[a,b].From Eq. (13), we obtain that(16)μ3=min⁡{−κλi,27!,0}≤H1(t)≤max⁡{−κλi,17!,0}=μ4,∀t∈[a,b],i=1,2.Thus, we have that(17)ε1=μ3⋅h7μ1≤H1(t)ω1(t)=f(t)−R1(t)≤μ4⋅h7μ1=ε2,∀t∈[a,b].Finally, we obtain two bounding rational cubic polynomials as(18)Rl(t)=R1(t)+ε1≤f(t)≤R1(t)+ε2=Rr(t).LetM=max⁡{|2μ3μ1|,|2μ4μ1|}. From Eq. (18), we have that(19)|f(t)−Ri(t)|<Mh7,i=l,r,1,which means that the two bounding polynomials achieve an approximation order 7 tof(t). From Theorem 1, it achieves a convergence rate of7/kfor a root of multiplicity k. Thus, we have Theorem 3 as follows.Theorem 3The rational cubic clipping method by using rational cubic polynomials can achieve a convergence rate of7/kfor a root of multiplicity k.  □Remark 1LetH2(t)=ω2(t)f(t)−Y2(t). Iff(4)(t)doesn't change its sign for allt∈[a,b], i.e., eitherf(4)(t)≤0orf(4)(t)≥0for allt∈[a,b], we have thatH1(7)(t)⋅H2(7)(t)≥0,∀t∈[a,b], which means thatR1(t)andR2(t)directly boundf(t)within[a,b]. The corresponding method is called the improved one in this paper.Remark 2If the denominatorω1(t)ofR1(t)has one or more zeros within[a,b]such thatμ1≤0and it leads to a bad approximation effect. In such a case, the interval[a,b]is divided into two halves for further clipping steps, which is similar to that used in the cubic clipping method in Liu et al. (2009).For the sake of convenience, letM3,MrandMIbe the cubic clipping method in Liu et al. (2009), the rational cubic clipping method in this paper and the improved method in Remark 1, respectively. If there are many roots off(t)within[a,b], both ofM3andMrmay converge very slowly. In this paper, at the beginning, if there are four or more zeros of the control polygon off(t)(in Bézier form), or if the first clipping step fails to clip the given interval, we utilize these zeros to divide[a,b]into several subintervals. All of the examples are implemented by using the Maple software on PC with 4 G memory and 2.5 G CPU, the average computation time of a clipping step is tested by setting the number of digits after the decimal point as 16, the corresponding unit is millisecond.Firstly, we compare the computational complexity and the convergence rate ofM3andMr. If the two bounding polynomials are obtained, the remaining computation of a clipping step can be done withinO(n), so the computation of the two bounding polynomials would dominant the computational complexity of the methods under discussion. InM3, it needs to estimate the bounds of a polynomial of degree n, whose computational complexity isO(n2); while inMr, for a general case, it needs to estimate the bounds of a polynomial of degreen−4in Eq. (14), whose computational complexity isO((n−4)2). So for a general case, bothM3andMrhave a comparable computational complexity. In some cases that the conditions in Remark 1 are satisfied,MIis applied to constructR1(t)andR2(t)which directly boundf(t), the corresponding computational complexity isO(n), which is much higher than that ofM3. The approximation order of the bounding polynomials tof(t)inM3,MrandMIare 4, 7 and 7, respectively. As shown in Theorem 3 and also Table 1, the convergence rates of bothMrandMIare7/kfor a root of multiplicity k, which is much higher than that of4/kofM3. (See Table 1.)By using the zeros of the control polygon off(t)to divide[a,b]at the beginning, the improved methodMImentioned in Remark 1 can be applied for computing the two bounding polynomials in most of cases. Firstly, we show two examples for illustrating the new method.Example 1Givenf1(t)=(t−1/4)(2−t)(t+5)2having a single root int∈[0,1](see also Fig. 1), the results of the first clipping process are as follows. In this case,M3obtains the resulting subinterval of length 3.9e−2, and the maximum error betweenf1(t)and its bounding polynomials is 9.1e−2. FromMr, the resulting subinterval is of length 9.6e−7, while the corresponding maximum error is 2.6e−5. FromMI, the resulting subinterval is of length 2.0e−8, while the corresponding maximum error is 2.9e−6. See Fig. 1(b–c) for the corresponding error plots.Example 2Givenf2(t)=(t−0.2)(t−0.25)(t−0.75)(t+5)7(t−6)2having three roots int∈[0,1](see also Fig. 2(a)), the results of the first clipping process are as follows. In this case,M3obtains two resulting subintervals[0.05,0.41]and[0.68,0.75]with lengths 0.26 and 0.07, respectively, and the corresponding maximum error betweenf2(t)and its bounding polynomials is 1.02e+5. FromMr, it obtains three subintervals[0.17,0.21],[0.23,0.27]and[0.7477,0.7506]with lengths 0.04, 0.04 and 0.0029, for bounding the three single roots, respectively. The corresponding maximum error is 3.73e+3. FromMI, it obtains three subintervals[0.1986,0.2004],[0.2497,0.2504]and[0.74997,0.75008]with lengths 0.0018, 7.5e−4 and 1.1e−4 for bounding the three single roots, respectively. The corresponding maximum error is 1.5e+3. See Fig. 2(b–c) for the corresponding error plots.For the above two examples, more details are listed in Table 2, where “M” means method and “Error” means the maximal approximation error betweenf1(t)and its bounding polynomials at the first clipping step. As shown in both Figs. 1–2 and Table 2, bothMrandMIcan achieve a much better approximation effect than that ofM3, and the corresponding subintervals are of much smaller lengths than that ofM3. The results of more clipping steps are shown in Table 2. It shows thatM3andMrachieve convergence rates of 4 and 7, respectively.Examples 3–5We have testedMrby using the following three examplesf3(t)=(t−0.250001)2(t+0.5)5(t−0.7)(t−1.1)6,f4(t)=(t−0.25)3(4−t)6,f5(t)=(t−18)(t−17)(t−15)(t−12)(t−59)(t−45)(t−89)(t2+2)2(t2−2t+2)3,wheret∈[0,1], which is also shown in Fig. 3. In Fig. 3, the lines in dashed black and the points in solid black are the control polygon and its control points, while the points in red circle are the zeros of its control polygon. The comparison results are shown in Table 3. In these cases, the number of the digits after decimal point is set as 1000 or more for testing purpose for achieving a high precision shown in Table 3. In Table 3, k means the multiplicity of a root and M means “method”. Table 3 shows the results of a double root off3(t), a triple root off4(t)and a single root off5(t). Similarly, note that there are seven zeros of the control polygon off5(t), we directly use the seven zeros to divide[0,1]into eight subintervals before applying bothMrandM3. It shows that bothMrandMIhave a much higher convergence rate7/kthan that of4/kofM3, where k denotes the multiplicity of the root.The average computation time of a clipping step amongM3,MrandMI, i.e.,T3,TrandTI, are listed in Table 4, where the unit is millisecond. It shows thatT3andTrare comparable, whileTIis much less than that ofT3, or in other words,MIis much faster and is about 7–10 times faster than thatM3. The convergence rates ofMrandMIare 7/4 times higher than that ofM3. Both the computational efficiency and convergence rate of a clipping step inMIare thus much better than that ofM3.The proposedMrmethod also uses the Cardano formula to solve cubic polynomial equations, which is the same toM3. The stability of Bernstein–Bézier representation is also applicable toMr, which is the same as that of theM3method.Example 6We have tested bothM3andMrto compute the roots of the Wilkinson polynomialW(x)=∏i=120(x−i),within[0,25], which has twenty zeros i,i=1,2,⋯20, see also Fig. 4. At the beginning, we compute the zeros of the corresponding control polygon, i.e.,{0.27,1.55,2.83,4.11,5.38,6.65,7.92,9.19,10.46,11.73,13.007,14.27,15.54,16.81,18.07,19.34,20.61,21.87,23.14,24.40}. Thus, the given interval[0,25]is divided into twenty-two sub-intervals by using the above twenty-one zeros. There are sixteen sub-intervals containing one or two roots off(t). We select the three of them[0.27,1.55],[2.83,4.11]and[16.81,18.07]to illustrate more details, which contain one, two and two roots off(t), respectively. The bounding polynomials at the first clipping step fromM3,MrandMIare shown in Fig. 5. As shown in Fig. 5, bothMrandMIwork for all sub-intervals, which achieve much better approximation effect than those ofM3. The other thirteen sub-intervals are similar. More details of the results are list in Table 5. It shows that the corresponding convergence rates ofM3,MrandMIfor a single root is 4, 7 and 7, respectively.

@&#CONCLUSIONS@&#
This paper presents a rational cubic clipping method (denoted asMr) for finding the roots of a polynomialf(t)within an interval, which can achieve a convergence rate of 7 for a single root by using rational cubic polynomials. Different from previous clipping methods in Bartoň and Jüttler (2007), Liu et al. (2009) for computing two bounding polynomials inO(n2)time,Mrdirectly constructs two rational cubic polynomials, which can be used to boundf(t)in many cases and leads to a computational complexity ofO(n). Numerical examples also show thatMrcan achieve a much higher convergence rate, much better approximation effect and much higher computation efficiency than previous clipping methods in Bartoň and Jüttler (2007), Liu et al. (2009).As for future work, it should also be feasible to achieve a higher computation efficiency by using two bounding B-spline curves, or to achieve a higher convergence rate by combining with reparameterization techniques. Another possible future work is to extendMrfrom the curve case to surface cases, which can be used for the root-finding problem of an equation system consisting of two bivariate polynomials.