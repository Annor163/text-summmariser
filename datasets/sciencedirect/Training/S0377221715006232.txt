@&#MAIN-TITLE@&#
The multiple container loading problem with preference

@&#HIGHLIGHTS@&#
We investigate a practical container loading problem that consider user preference.We show how to incorporate our formulation in real life decision making process.We statistically estimate the impact of data characteristics to SCLP performance.We consider estimated SCLP performance in the high level planning of our heuristic.We demonstrate effectiveness of our approach based on realistic test instances.

@&#KEYPHRASES@&#
Packing,Decision support,Combinatorial optimization,Statistical estimation,

@&#ABSTRACT@&#
An international audio equipment manufacturer would like to help its customers reduce unit shipping costs by adjusting order quantity according to product preference. We introduce the problem faced by the manufacturer as the Multiple Container Loading Problem with Preference (MCLPP) and propose a combinatorial formulation for the MCLPP. We develop a two-phase algorithm to solve the problem. In phase one, we estimate the most promising region of the solution space based on performance statistics of the sub-problem solver. In phase two, we find a feasible solution in the promising region by solving a series of 3D orthogonal packing problems. A unique feature of our approach is that we try to estimate the average capability of the sub-routine algorithm for the single container loading problem in phase one and take it into account in the overall planning. To obtain a useful estimate, we randomly generate a large set of single container loading problem instances that are statistically similar to the manufacturer’s historical order data. We generate a large set of test instances based on the historical data provided by the manufacturer and conduct extensive computational experiments to demonstrate the effectiveness of our approach.

@&#INTRODUCTION@&#
Our team collaborates with an international audio equipment manufacturer to solve problems that had emerged in its logistics process. The manufacturer receives hundreds of purchase orders every day from all over the world. One of our tasks is to design loading plans for each purchase order so as to minimize the per-dollar shipping cost. The per-dollar shipping cost is defined as the total shipping cost divided by the total dollar value of the items shipped. Minimizing the per-dollar shipping cost will reduce the unit cost thus the sales price of the manufacture’s products, thereby improving its competitiveness in the market.Currently, when fulfilling a purchase order, the manufacturer loads various items into containers in a sequential manner. As a result, all containers are almost fully utilized – except the last one. With regard to the last container, the manufacturer faces two common scenarios: either this container contains a small set of items, or it is quite full, but still has room for several items. Slightly decreasing the order quantity in the first scenario and slightly increasing the order quantity in the second scenario will likely reduce the per-dollar shipping cost.A discussion with the manufacturer’s sales team reveals that recommending adjustments in order quantity is a viable option. Firstly, customers usually determine their order quantities based on forecasts, and forecasts are not accurate anyway. Therefore, most customers are willing to adjust their orders for sound reasons. Secondly, as mentioned above, reducing per-dollar shipping cost abates the unit cost of each item in the order, which allows the customer to increase their profit and their competitive advantage. Last, but not least, customers place orders regularly, and a slight change in a given order’s quantity can always be compensated by an opposite change in the next order, if desired.Consequently, the sales team would like to develop a decision support tool that will help their customers decide on the best order quantity to minimize their per-dollar shipping costs. The tool will be incorporated into the manufacturer’s order-taking process and will work as follows.•Step 1. The sales team receives a purchase order from a customer and produces an initial loading plan using state-of-the-art multiple container loading software. If the ordered items nicely utilize all containers, the sales team continues with the normal order-taking process (i.e., checking inventory, etc.).Step 2. If one of the two scenarios for the last container occurs, the sales team runs our tool. The tool will slightly adjust the order quantity and produce an alternative loading plan so that the per-dollar shipping cost is reduced as much as possible. The sales team then sends back the adjusted order, together with the corresponding loading plan, and explains to the customer why the adjusted order is beneficial.Step 3. The customer may stick to its original order, switch to the recommended order, or set certain restrictions and ask the sales team to adjust again. Once the customer decides on the order quantity, the sales team continues with the normal order-taking process.For the decision support tool to be applicable, the adjustment must be easy to explain to the customers. A further discussion with the manufacturer sets the following criteria.Unidirectional adjustment: We can either increase or decrease the order quantity, but we cannot do both at the same time. Theoretically speaking, the loading plan with the minimum per-dollar shipping cost may be obtained by increasing the quantity of some products and decreasing the quantity of other products at the same time. However, such changes cause a large deviation from the original order and, thus, are hard to explain to customers. There is a danger of the alteration being misunderstood as a move to take advantage of customers for the purpose of inventory control. In contrast, it is much easier for the alteration to be accepted if the manufacturer says, “these few items require a separate container, and we recommend you remove them to save shipping costs” or “the last container is almost full, but it has room for a few more items, so we recommend that you load more items.”No piggyback: Products not in the original order will not be introduced into the adjusted order. The manufacturer produces many different products, and a customer usually orders a small subset of these products. It is very hard to predict which additional products the customer may like. Therefore, it is much safer to increase the quantity of existing products in the original order than recommend new products, which the customer may not like at all. This criterion is not as restrictive as it seems. For example, if a customer does not mind including additional products selected from a specific list, we can handle the situation by taking the list into consideration when adjusting the order quantity.Bounded quantity: The quantity of each product in the adjusted order must fall within a given range. There are three reasons for setting a bound on the adjustment of product quantity. Firstly, the inventory or production capacity sets an upper bound (although, for most products, we can safely ignore this). Secondly, customers rarely accept dramatic changes, such as doubling or halving the quantity of one product, though they are willing to consider milder changes. Thirdly, the sales team does not want to reduce the order quantity by too much, since this reduces profit. However, if a slight reduction in order quantity results in a noticeable reduction in per-dollar shipping costs, the manufacturer has an incentive to help the customers in an effort to maintain a long-term relationship.Preference-driven: Order quantity should be increased or decreased according to product preferences. We expect our decision support tool to be useful in various practical situations, although its primary motivation is to minimize per-dollar shipping cost. For this purpose, we use preference instead of dollar value to evaluate each product and, thus, change the objective to minimizing shipping cost per unit preference, which is defined as the total shipping cost divided by the total preference of loaded items. There are a few indicators that may determine a product’s preference, such as delivery deadline, shelf life, and dollar value. For instance, fashion products have shorter shelf lives than ordinary products, and we should make sure that fashion products are delivered as soon as possible. In this case, shelf life should be used as the preference indicator, and a high preference will be assigned to a fashion product. Furthermore, the preference of a product may be determined by different indicators in different situations. As an example, if only fashion products are being delivered, dollar value may be used as the preference indicator instead of shelf life. In more complicated situations, several indicators may be combined to determine a product’s preference.To summarize, the manufacturer’s sales team needs a tool that adjusts order quantity according to product preferences, while satisfying certain constraints, and that generates loading plans for the adjusted order so that the shipping cost per unit preference is minimized. We name the resulting optimization problem the Multiple Container Loading Problem with Preference (MCLPP), and it is formally defined in Section 3.In Section 4, we propose a combinatorial formulation for the MCLPP based on the concept of pattern sets. Each pattern set is a group of shipping plans with the same total shipping cost and total product preference. We further show that an optimal solution to the MCLPP must lie in one dominating pattern set. Therefore, we can focus on identifying dominating pattern sets before searching for a solution to the MCLPP.Accordingly, a two-phase heuristic is developed for the MCLPP, as described in Section 5. In phase one, we try to quickly estimate the dominating pattern sets instead of invoking the time-consuming sub-problem solvers. The estimation is based on the performance statistics of sub-problem solvers for randomly generated MCLPP instances with similar characteristics of MCLPP instances (see Section 6.2). In phase two, we consider each of the estimated dominating pattern sets in turn and try to identify a feasible solution to the MCLPP in the pattern set’s vicinity.We generate two classes of test data, corresponding to two different application scenarios from Section 6, based on historical data provided by the audio equipment manufacturer. We conduct extensive computational experiments to demonstrate the effectiveness of our approach.

@&#CONCLUSIONS@&#
