@&#MAIN-TITLE@&#
Parallel chaos optimization algorithm with migration and merging operation

@&#HIGHLIGHTS@&#
A novel parallel chaos optimization algorithm with migration and merging operation is proposed.Both migration and merging operation exchange information within population and produce new candidate individuals.The impacts of different one-dimensional maps and parallel numbers on the algorithm are also discussed.Simulation results, compared with other optimization algorithms, show the superiority of the proposed algorithm.

@&#KEYPHRASES@&#
Optimization algorithm,Chaos optimization algorithm (COA),Parallel chaos optimization algorithm (PCOA),Parameter identification,

@&#ABSTRACT@&#
Chaos optimization algorithm (COA) utilizes the chaotic maps to generate the pseudo-random sequences mapped as the decision variables for global optimization applications. A kind of parallel chaos optimization algorithm (PCOA) has been proposed in our former studies to improve COA. The salient feature of PCOA lies in its pseudo-parallel mechanism. However, all individuals in the PCOA search independently without utilizing the fitness and diversity information of the population. In view of the limitation of PCOA, a novel PCOA with migration and merging operation (denoted as MMO-PCOA) is proposed in this paper. Specifically, parallel individuals are randomly selected to be conducted migration and merging operation with the so far parallel solutions. Both migration and merging operation exchange information within population and produce new candidate individuals, which are different from those generated by stochastic chaotic sequences. Consequently, a good balance between exploration and exploitation can be achieved in the MMO-PCOA. The impacts of different one-dimensional maps and parallel numbers on the MMO-PCOA are also discussed. Benchmark functions and parameter identification problems are used to test the performance of the MMO-PCOA. Simulation results, compared with other optimization algorithms, show the superiority of the proposed MMO-PCOA algorithm.

@&#INTRODUCTION@&#
As an inherent characteristic of nonlinear dynamics, chaos emerges in diverse areas of science and engineering [1]. Generally speaking, chaos has several important dynamical characteristics, namely, the sensitive dependence on initial conditions, ergodicity, pseudo-randomness, and strange attractor with self-similar fractal pattern [1–5]. Recently, chaotic sequences generated by means of chaotic maps have been used in the development of global optimization techniques, and particularly, in the specification of chaos optimization algorithm (COA) [2–9]. Due to the unique characteristic of chaos, COA carries out global exploration search at higher speed than stochastic ergodic searches that depend on the probabilities [5–9]. The main advantages of COA include: (a) COA escapes from local minima more easily than classical stochastic optimization algorithms such as genetic algorithm (GA), simulated annealing (SA) and some meta-heuristics algorithms including particle swarm optimization (PSO), ant colony optimization algorithm (ACO), differential evolution (DE), and so on [9]; (b) COA does not depend on the strict mathematical properties of optimization problems, such as continuity, differentiability; (c) COA is easy to be implemented and execution time of algorithm is short [2–5].Recently, COA has also been hybridized with optimization algorithms, such as: hybrid chaos-BFGS algorithm [9], hybrid COA and quasi-Newton method [10], hybrid COA and GA [11], hybrid COA and PSO [12], hybrid COA and affine scaling search algorithm [13], hybrid COA with artificial emotion [14]. In addition to the development of COA and hybrid COA, chaos has also been integrated with optimization algorithms, such as: chaotic harmony search algorithm [15], chaotic ant swarm optimization [16], chaotic particle swarm optimization [17,18], chaotic evolutionary algorithm [19,20], chaotic genetic algorithms [21,22], chaotic-based hybrid negative selection algorithm [23], chaos embedded great deluge algorithm [24]. The above-mentioned chaos based optimization algorithms are mainly applied to complex or multidimensional functions problems, in addition, these algorithms have also been applied in various fields like parameter selection of SVM [4], parameter identification of synchronous generator [6], feature selection of text categorization [11], flow shop scheduling problem [15], feature selection [17], multi-reservoir optimization [20], etc. Various simulation results and applications in these references have shown the solutions diversity and global optimization capacity of chaos based optimization algorithms.Since the chaotic motions are pseudo-random and chaotic sequences are sensitive to the initial conditions, therefore, the success of COA in solving optimization problems crucially depends on appropriate starting values. For this reason, parallel chaos optimization algorithm (PCOA) has been proposed in our former studies [25,26]. The population-based PCOA searches from diverse initial points, therefore, it easily escapes from local minima and detracts the sensitivity of starting values. Considering its poor exploitation ability, PCOA is combined with local search method in [25,26], like simplex search method (SSM) and harmony search algorithm (HSA). However, the local search method usually has slow efficiency. In addition, parallel individuals search independently without information exchange in the PCOA.In view of the limitation of PCOA, a novel PCOA with migration and merging operation (denoted as MMO-PCOA) is proposed in this paper. In the MMO-PCOA, the so far parallel solutions are firstly selected according to the fitness. Then parallel individuals are randomly selected to be conducted migration and merging operation with the so far parallel solutions. The new produced candidate individuals compete with the original ones, and the individuals with better fitness will survive as the new solutions. By using migration and merging operation to exploit the fitness and diversity information of the population, MMO-PCOA can enhance search performance without hybrid with local search method. The main contribution of this paper is to establish a novel MMO-PCOA framework, which has the major advantages as follows: (a) The MMO-PCOA roots in population based PCOA, which easily escapes from local minima and detracts the sensitivity of initial conditions. Meanwhile, fitness and diversity information are considered by exploiting the so far parallel solutions. Therefore, a good balance between exploration and exploitation can be achieved in the MMO-PCOA. (b) The MMO-PCOA keeps the simple frame of twice carrier wave mechanism, without the need to combine with local search method. (c) The implementation of the MMO-PCOA is very simple, and there are few control parameters.The rest of this paper is organized as follows. Section 2 briefly describes chaos and PCOA approach. Section 3 describes the proposed MMO-PCOA approach. Benchmark functions are used to test the performance of MMO-PCOA in Section 4. The proposed MMO-PCOA is also applied to the parameter extraction of solar cell models and parameter identification of chaotic systems in Section 5 and Section 6, respectively. Conclusions are presented in Section 7.For more than three decades, the unusual behavior of chaotic systems has attracted attention of different scientific communities. From the mathematical aspect, chaos is defined as a pseudo-random behavior generated by nonlinear deterministic systems [1]. In COA, the chaotic sequences from chaotic maps are mapped to produce the decision variables, instead of random sequences from random number generators during the process of global optimization [5]. The concept and search process of COA are based on the regularity of chaotic motion. The regularity of chaotic motion is usually represented by using one-dimensional map, which is the simplest system with the capability of generating chaotic behavior [10,13]. Eight well-known one-dimensional maps which yield chaotic behaviors are described in Table 1. These maps are used as the sources of chaos in the proposed MMO-PCOA.Compared to individual based COA, PCOA evolves a population of N parallel candidate individuals [25,26]. In the PCOA, multiple stochastic chaos variables (like population) are simultaneously mapped onto one decision variable, and the search result is the best fitness of parallel candidate individuals.Consider an optimization problem for nonlinear multi-modal function with boundary constraints as:(1)minf(X)=f(x1,x2,…,xn),xi∈[Li,Ui].where f is an objective function, X=(x1, x2, …, xn)∈Rnis a vector in the n-dimensional decision variable space, xi∈[Li, Ui] is the feasible solution space, Liand Uirepresent the lower and upper bound of the ith variable, respectively. PCOA evolves a stochastic population of N candidate individuals with n-dimensional parameter vectors. The N is the population size, meanwhile, the number of parallel candidate individuals. In the following, the subscripts i and j stand for the decision variable and parallel candidate individuals, respectively.The process of PCOA approach is based on the twice carrier wave mechanism, and the algorithmic description of the PCOA is summarized in Table 2. The first carrier wave part of PCOA is the raw search in different chaotic traces, and the second carrier wave part is refined search to enhance the search precision.The λiin the second carrier wave part is an adjustable parameter which adjusts small ergodic ranges around parallel solutionxj*, and t>1 is a constant. The initial value of parameter λiis usually set to 0.01(Ui−Li) [5].This section presents a novel MMO-PCOA which utilizes the fitness and diversity information of the population. The remarkable distinction of MMO-PCOA is the application of migration and merging operation for exploitation. Consequently, MMO-PCOA does not need combination with local search method.In the PCOA, parallel candidate individuals search independently according to their respective chaotic sequences without information interaction. In the proposed MMO-PCOA, the migration operation is used to exploit the parallel solutions and to find new candidate individuals. The migration operation (denoted by M1) is illustrated in Fig. 1. The application of migration operation in the MMO-PCOA includes the following steps:(1) Firstly, the so far global solution, X*, is selected as the migration source based on the fitness.(2) Secondly, one decision variable from other parallel individuals is probability chosen to be replaced by the corresponding one from global solution X*. The new candidate individual by migration operation can be denoted by:(2)xij(M1)=xij*,ifithindividual is chosenxij,otherwise(3) Thirdly, the fitness ofxj(M1)is computed and the search result is updated based on the fitness. Iffj(xj(M1))<Pj*, then parallel solutionxj*=xj(M1)and parallel optimumPj*=fj(xj(M1)). IfPj*<P*, then global optimumP*=Pj*, and global solutionX*=xj*.Even if PCOA has reached the neighborhood of global optimum, it needs to spend much computational effort to achieve the optimum eventually by searching numerous points [4]. The reason is that the exploitation ability of PCOA is poor. For this reason, merging operation is also used to exploit the so far global solution in the MMO-PCOA. The merging operation (denoted by M2) is illustrated in Fig. 2. The application of merging operation in the MMO-PCOA includes the following steps:(1) Firstly, the so far global solution, X*, is selected as the merging source based on the fitness.(2) Secondly, the corresponding decision variables from other parallel individual and global solution X* are merged. The new candidate individual by merging operation is denoted by:(3)xij(M2)=γij·xij+(1−γij)·xij*where γijis one-dimensional map shown in Table 1.(3) Thirdly, the fitness ofxj(M2)is computed and the search result is updated based on the fitness. Iffj(xj(M2))<Pj*, then parallel solutionxj*=xj(M2)and parallel optimumPj*=fj(xj(M2)). IfPj*<P*, then global optimumP*=Pj*, and global solutionX*=xj*.Both migration and merging operation choose parallel individuals to operate with the so far global solution X*, and this may produce new candidate individuals for optimization problem. In essence, both migration and merging operation utilize the fitness and diversity information of the population.A flow chart for proposed MMO-PCOA approach is shown in Fig. 3, and the algorithmic description of the MMO-PCOA is summarized in Table 3.In the implementation of MMO-PCOA, both migration and merging operation are added at each iteration and used as the improvement to PCOA. The migration and merging operation choose the parallel solutions or global solution to produce new candidate individuals. If the new candidate individual by migration or merging operation brings a better objective function value than the original one, the new candidate individual will replace the original one. In another situation, if the new candidate individual brings a worse objective function value than the original one, the new candidate individual will be given up. In essence, migration and merging operation exploit the fitness and diversity information of the population.It should be mentioned that both migration and merging operation are conducted at a certain probability. More specifically, part of parallel individuals are selected to be executed the migration or merging operation at each iteration. Another problem is to choose how many parallel individuals for migration or merging operation. The more migration or merging operation, the more diversity of parallel candidate individuals, while the more computing cost. In this paper, the migration rate is PM1=0.2–0.5, and the merging rate is PM2=0.2–0.5, that is, about 20–50% of parallel individuals have been executed the migration or merging operation at each iteration.The twice carrier wave mechanism based MMO-PCOA has the feature of global exploration, in the meantime, migration and merging operation exploit the fitness accumulated by the entire population to guide exploitation search. Therefore, the MMO-PCOA provides a simple yet efficient way to deal with the balance between exploration and exploitation.The performance of the MMO-PCOA is evaluated with eight common benchmark functions described in Table 4. Several of these benchmark functions have many local minima, and these multi-modal functions are often used to test the convergence, efficiency and accuracy of optimization algorithms [25,26]. Among the benchmark functions, the former four functions f1−f4 are low-dimensional optimization problems, and the latter five functions f5−f8 are 20-dimensional optimization problems.Population size is one of the most significant characteristics that contribute to the solution of the problem [27]. Like the population size to evolutionary computing, the parallel number N in the MMO-PCOA is one of parameters that may effect the search performance. The parallel number N is usually set by experience or trial-and-error approach. Generally speaking, too small parallel number leads to similar convergence of original COAs, and too large parallel number may computationally costly. Now, different parallel numbers N are investigated on benchmark functions. The parameters of the MMO-PCOA are: PM1=0.5, PM2=0.5, ICMIC map is used as the source of chaos. For different optimization problems, appropriate maximum number of iterations S1 and S2 for MMO-PCOA are usually different. Appropriate S1 and S2 are usually chosen by trial until finding the ones which yield appropriate result. In this simulation, S1=S2 is chosen by trial with multiple runs and the value of S1+S2 (total iterations) is labeled in Fig. 4. Convergence performance of MMO-PCOA on benchmark functions with respect to different parallel numbers(N=10, 20, 30) is shown in Fig. 4.The simulation results on benchmark functions by MMO-PCOA with different parallel numbers N are reported in Table 5. The ‘Best’ and ‘Mean’ represent the best and the average objective function value by MMO-PCOA in 20 runs. The ‘Rate’ represents the success rate of reaching the global optimum X* with the error less than 0.01. The ‘Time’ represents the average CPU time by MMO-PCOA in 20 runs.The success rate and the average CPU time on benchmark functions by MMO-PCOA with different parallel numbers N are also illustrated in Fig. 5.It can be seen from Figs. 4 and 5 and Table 5 that parallel number N has a direct impact on the search performance of MMO-PCOA. With the increase of parallel number N, the search result becomes better while the CPU time becomes longer. When N=30, the MMO-PCOA shows high success rate and global optimum.The performance of MMO-PCOA using different one-dimensional maps described in Table 1 will be investigated here. The MMO-PCOA parameters are: N=20, PM1=0.5, PM2=0.5. The simulation results on benchmark functions by MMO-PCOA using different one-dimensional maps in 20 runs are reported in Table 6.The success rate of MMO-PCOA using different one-dimensional maps is also illustrated in Fig. 6. It also can be seen from Table 6 and Fig. 6 that there is very little difference with respect to different one-dimensional maps for MMO-PCOA. Therefore, different one-dimensional maps can be applied in the MMO-PCOA only if the map yields chaotic behavior.The MMO-PCOA is also compared with other two PCOA algorithms in [25,26]. With the similar conditions and parameters as PM1=0.5, PM2=0.5 and ICMIC map is used as the source of chaos. The simulation results on benchmark functions by these three algorithms in 20 runs are shown in Table 7and Fig. 7.Both the success rate and the average CPU time by these algorithms are compared. Here ‘PCOA1’ and ‘PCOA2’ represent the hybrid algorithms (hybrid PCOA with HSA) in [25,26], respectively. From Table 7 and Fig. 7, one can know that with the increase of parallel number N, the success rate of these algorithms becomes higher. The simulation results on benchmark functions show that MMO-PCOA achieves higher success rate than other two PCOA algorithms. It also can be seen from Table 7 and Fig. 7 that with the increase of parallel number N, the average CPU time of these algorithms becomes longer. Here MMO-PCOA spends the shortest CPU time, while PCOA2 spends the longest CPU time among these algorithms. The simulation results also verify the superiority of MMO-PCOA compared with other PCOA algorithms.Here the MMO-PCOA (parameters are: N=20, PM1=0.5, PM2=0.5, sinusodial map is used) is also compared with four widely used evolutionary algorithms, they are: particle swarm optimization algorithm (PSO) [28], covariance matrix adaptation evolution strategy (CMAES) [29], self-adaptive differential evolution algorithm (SaDE1) [30] and self-adaptive differential evolution algorithm (SaDE2) [31]. The simulation results on benchmark functions by these algorithms in 30 runs are reported in Table 8. The ‘Std. Dev.’ is the standard deviation of the mean objective function value (Mean). In Table 8, the MMO-PCOA has achieved the best result among these algorithms on functions f4−f8.With the increasing utilization of solar energy, researches on photovoltaic (PV) generation system have received significant attention in the past few years. To simulate solar cell systems or to optimize PV systems performance, accurate parameter values of these systems are extremely crucial. In the past decade, parameter extraction of solar cell models is usually treated as a multi-dimensional optimization problem and various optimization algorithms have been applied to search the optimal parameters of solar cell models [32–34]. In this section, the MMO-PCOA is also applied to this parameter extraction problem.The following three models are commonly used for PV systems [32–34]:(1) the double diode solar cell model:(4)f(Vt,It,X)=It−Iph+Isd1expq(Vt+RsIt)n1kT−1+Isd2expq(Vt+RsIt)n2kT−1+Vt+RsItRsh(2) the single diode solar cell model:(5)f(Vt,It,X)=It−Iph+Isdexpq(Vt+RsIt)nkT−1+Vt+RsItRsh(3) the PV module model:(6)f(Vt,It,X)=It−IphNp+IsdNpexpq(Vt/Ns+It(Rs/Np))nkT−1+(VtNp/Ns)+RsItRshFor these three kinds of PV models, X=[Rs,Rsh,Iph,Isd1,Isd2,n1,n2] in Eq. (4) and X=[Rs,Rsh,Iph,Isd,n] in Eqs. (5) and (6) are the parameters to be extracted for PV models. Therefore, there are totally seven or five parameters to be extracted for PV models. Usually, the root mean square error (RMSE) is a criterion to evaluate the difference between the real data and estimated values. Therefore, the parameters extraction of solar cell models is considered as an optimization problem with the following objective function [32–34]:(7)minRMSE=1M∑i=1Mf(Vt,It,X)2where M is the number of real V-I data.For a fair comparison, the MMO-PCOA is compared with several optimization algorithms with the same V-I data and conditions: (1) These V-I measured data in [32–34] have been used as benchmark to test algorithms for parameter extraction of solar cell models; (2) the lower and upper bounds of parameters X, provided by the literatures [32–34], are Rs(Ω)∈[0, 0.5], Rsh(Ω)∈[0, 100], Iph(A)∈[0, 1], Isd(μA)∈[0, 1], and n∈[1, 2]. The MMO-PCOA parameters are chosen as: N=30, PM1=0.5, PM2=0.5, S1=S2=1500, sinusodial map is used.Firstly, the MMO-PCOA is tested with double diode solar cell model. There are totally seven parameters to be extracted for this model: X=[Rs,Rsh,Iph,Isd1,Isd2,n1,n2] as in Eq. (4). Here MMO-PCOA is compared with several parameter extraction algorithms in [32–34]: artificial bee swarm optimization (ABSO), pattern search (PS), simulated annealing (SA) and harmony search algorithm (HSA). Since it is difficult to test all parameter extraction algorithms, these optimization algorithms have been chosen for comparison because they have been demonstrated with good results for this parameter extraction problem. The extracted optimal parameters values X* and the RMSE value of these algorithms for the double diode solar cell model have been summarized in Table 9. It can be seen from Table 9 that the MMO-PCOA achieves the lowest RMSE value (9.8104e−4) among these algorithms, followed by ABSO, HSA, PS and SA. Compared to typical optimization algorithms, like PS, SA and HSA, the RMSE by the MMO-PCOA is much more less.Secondly, the MMO-PCOA is tested with the single solar cell model. There are totally five parameters to be extracted for this model: X=[Rs,Rsh,Iph,Isd,n] as in Eq. (5). Here MMO-PCOA is also compared with several optimization algorithms, they are: ABSO, chaos particle swarm optimization (CPSO), GA, PS, SA and HSA. The extracted optimal parameters values X* and the RMSE value by these optimization algorithms for the single diode model have been summarized in Table 10. From Table 10, one can know that the MMO-PCOA achieves the lowest RMSE value (9.8736e−4) among these algorithms, followed by ABSO, HSA, CPSO, PS, SA and GA. Compared to typical optimization algorithms, like GA, PS and SA, the RMSE by the MMO-PCOA is much more less.Thirdly, the MMO-PCOA is tested with the PV module model. There are totally five parameters to be extracted for this model: X=[Rs,Rsh,Iph,Isd,n] as in Eq. (6). Extracted optimal parameters values X* and the RMSE value by optimization algorithms for the PV module have been reported in Table 11. Here MMO-PCOA is also compared with several algorithms, they are: Newton, CPSO, PS and SA. From Table 11, one can know that MMO-PCOA achieves the lowest RMSE value (0.002513) among these algorithms, followed by SA, CPSO, PS and Newton.From Tables 9–11, one can easily know that the MMO-PCOA provides the lowest RMSE value among these optimization algorithms for parameter extraction of solar cell models. This result obviously shows that parameters extracted by MMO-PCOA have the least error. As this parameter extraction problem is a typical multidimensional optimization problem, the simulation result means that the MMO-PCOA has global optimization ability.The traditional trend of analyzing and understanding chaos has already evolved a new phase in investigation: detecting the unstable periodic orbits and estimating the unknown parameters of chaotic systems [35,36]. However, it is difficult to determine the parameters because of the complexity of chaotic systems. Recently, several optimization algorithms have been applied to the parameter identification of chaotic systems [35–37]. In this section, the MMO-PCOA is applied to the parameter identification of chaotic systems.The following three chaotic systems will be identified in this simulation. The first is the Lore´nz system given by:(8)x˙=δ·(y−x)y˙=γ·x−x·z−yz˙=x·y−b·zwhen δ=10, γ=28, b=8/3, this system is chaotic. The second is Chen system, which is the dual of the Lore´nz system given by:(9)x˙=δ·(y−x)y˙=(γ−δ)·x−x·z+γ·yz˙=x·y−b·zwhen δ=35, γ=28, b=3, this system is chaotic.The third is Lu¨system, which represents the transition between the Lore´nz and the Chen attractors, given by:(10)x˙=δ·(y−x)y˙=γ·y−x·zz˙=x·y−b·zhas a chaotic attractor when δ=36, γ=20, b=3.For these three chaotic systems, p=(δ, γ, b) is the parameter vector to be identified. The objective function for this parameter identification problem can be chosen as an optimization problem [35–37]:(11)minC(pˆ)=1Ns∑k=1Ns(x(k)−xˆ(k))2+(y(k)−yˆ(k))2+(z(k)−zˆ(k))2In this simulation, MMO-PCOA is compared with several optimization algorithms, they are: PCOA1 in [25], PCOA2 in [26], PSO [35] and DEA [37]. For a fair comparison, these algorithms are computed in the same values [35]: (1) the initial state {x0, y0, z0} is chosen as {−7.96197377790701, −2.29806490100076, 32.5667577196519} for Lore´nz system, {−11.5164258219946, −3.61926241590730, 34.8855136915948} for Chen system, {2.76157804915733, 3.32661475437882, 13.4788312443589} for Lu¨system, respectively; (2) the length of the sample data Nsis set to 300; (3) the lower and upper limits for parameter vector p are [Li, Ui]=(δ, γ, b)∈[5, 15]×[20, 35]×[0.1, 10] for Lore´nz system, [Li, Ui]∈[30, 40]×[20, 35]×[0.1, 10] for Chen system, [Li, Ui]∈[30, 40]×[15, 25]×[0.1, 10] for Lu¨system, respectively; (4) the maximum number of iterations lmaxis set to 100. Other MMO-PCOA parameters are: N=50, PM1=0.5, PM2=0.5, tent map is used. In order to compare the performance of these five algorithms, Tables 12–14have summarized the statistical results of the best, the mean and the worst identified parameters for these three chaotic systems over 20 independent runs.It can be seen from Tables 12–14 that MMO-PCOA brings the minimum objective function valueC(pˆ)among these algorithms under the same conditions and initials. It also can be seen that the bestC(pˆ)obtained by MMO-PCOA is better than other four algorithms, and the same is for the mean and worstC(pˆ). Even the worst results by MMO-PCOA still outperform the mean ones of the other optimization algorithms. It can be concluded that MMO-PCOA is significantly better than all the other listed optimization algorithms in terms of parameter identification performance of chaotic systems.In order to compare the performance of these five algorithms, the evolving process of objective function valueC(pˆ)for chaotic systems parameter identification is shown in Fig. 8. It can be seen from Fig. 8 that MMO-PCOA converges faster than other four algorithms and it achieves better objective function value after 100 iterations.The evolving process of identified parameter value p=(δ, γ, b) by MMO-PCOA is shown in Fig. 9. From this figure it can be seen that MMO-PCOA converges to the optimal solution rapidly.Eight chaotic maps are also adopted in MMO-PCOA for this parameter identification application. Table 15has summarized the statistical results of objective function value by MMO-PCOA over 20 independent runs. The sampled data Nsand MMO-PCOA parameters are the same as the above simulation. Consider the mean value ofC(pˆ)as the standard, the optimal result for each chaotic system is shown in bold. Table 15 shows that MMO-PCOA using different chaotic maps can achieve good identification performance. Cubic map has achieved lowest mean value ofC(pˆ)for Lore´nz and Chen systems, and tent map has achieved lowest mean value ofC(pˆ)for Lu¨system.In this paper, a novel PCOA with migration and merging operation is proposed in order to improve PCOA. Benchmark functions tests, parameter extraction of solar cell models and parameter identification of chaotic systems have shown that the MMO-PCOA has better performance than several optimization algorithms. The impacts of different one-dimensional maps and parallel numbers on the MMO-PCOA are discussed. For the MMO-PCOA, different one-dimensional maps can be applied only if the map yields chaotic behavior. Since one-dimensional maps have some common weaknesses, improved chaotic maps such as in [38] or two-dimensional maps can be further studied in the future research.

@&#CONCLUSIONS@&#
