@&#MAIN-TITLE@&#
Energy efficient virtual network embedding for green data centers using data center topology and future migration

@&#HIGHLIGHTS@&#
We formulate energy efficient virtual network embedding that incorporates energy costs of operation and migration for nodes and links.We prove the NP-hardness of the problem and develop a heuristic algorithm to minimize the energy consumption.We consider a practical intra-DC architecture to further improve energy efficiency.We conduct extensive evaluations and comparisons with existing algorithms to show that the proposed algorithm substantially saves energy consumption and allows high acceptance ratios.

@&#KEYPHRASES@&#
Virtual network embedding,Green networks,Energy efficient,

@&#ABSTRACT@&#
With the rapid proliferation of data centers, their energy consumption and greenhouse gas emissions have significantly increased. Some efforts have been made to control and lower energy consumption of data centers such as, proportional energy consuming hardware, dynamic provisioning, and virtualization machine techniques. However, it is still common that many servers and network resources are often underutilized, and idle servers spend a large portion of their peak power consumption.We first build a novel model of virtual network embedding in order to minimize energy usage in data centers for both computing and network resources by taking practical factors into consideration. Due to the NP-hardness of the proposed model, we develop a heuristic algorithm for virtual network scheduling and mapping. In doing so, we specifically take the expected energy consumption at different times, virtual network operation and future migration costs, and a data center architecture into consideration. Our extensive evaluation results show that our algorithm could reduce energy consumption up to 40% and take up to a 57% higher number of virtual network requests over other existing virtual mapping schemes.

@&#INTRODUCTION@&#
As the main enabling technology for cloud computing, virtualization supports multi-tenant users to share computing, storage, and networking resources. Focusing on sizeable data centers (DCs), traditional virtualization technologies are mainly for computing and storage resources. However, as DCs for cloud computing rapidly grow in numbers and geographically dispersed DCs are interconnected, network resource virtualization technology becomes one of the most promising technologies for leveraging the full potential of cloud computing.With network virtualization techniques, adopting a new technique or protocol is much easier [1]. Vendors or infrastructure providers (InPs) do not need to purchase new equipment to update or deploy new techniques or protocols. An existing network could be flexibly expanded without involving much configuration work. In addition, network virtualization allows a physical network to be shared and divided into several isolated virtual networks (VNs) that consist of virtual machines (VMs) and their specified connectivities. Each VN serves a different group of users with different requirements of computing, storage, and network resources. Small institutions could have an economic option by renting VNs from an infrastructure provider rather than building and maintaining their private networks. Therefore, due to its benefits, network virtualization has been highlighted and studied from many aspects, such as resource discovery [2], admission control [3], resource scheduling [4], security issues [5], and resource allocation that is also known as virtual network embedding (VNE) [6–10].VNE is a fundamental task that maps VNs coming over time to a physical network. In a real application, an InP receives a set of VN requests from the Service Providers (SP). Each VN asks for slices of resources, including computational and network resources, to provide value-added services, such as video on demand and voice-over-IP. By properly embedding the VNs, certain optimization goals are expected to be achieved without violating resource limitations.Prior VNE algorithms mostly target InPs to maximize their profit [6,7], improve the reliability and survivability of VNs through deploying back-up nodes and links [8,9], or balance the workload in the physical networks [11]. Less effort has been done to enhance the energy efficiency of VNE.It is reported that there were more than 500,000 DCs around the world as of December 2011 [12]. With the fast growth of DCs, more and more energy has been consumed for operating and maintaining them. In 2010, between 1.1% and 1.5% of the worldwide total electricity usage was consumed by DCs [13], and their energy costs in the US doubled from 28 billion kWh to 61 billion kWh in six years, according to [14]. By 2020, greenhouse gas emissions from DCs are also projected to more than double from what they were in 2007 [15].Efforts have been made for green DCs from various aspects in order to save energy and protect environments. Companies, e.g., Google and Facebook are greening their DCs through reducing power usage for cooling and other facilities and utilizing renewable energy [16,17]. Now their DCs have a relatively small Power Utilization Effectiveness (PUE), approximately 1.1 [16,17]. On the other hand, the low PUE means most energy is used for computing that drives us to control computing energy consumption as well. With energy proportional computing [18], voltage or frequency can be adjusted according to a CPU workload, so that machines with less jobs consume less energy. Then, power management techniques can control power assignments to ensure that machines with light loads consume less power, while machines with heavy loads obtain enough power. Also, live migration of virtual machines [19] allows for demanded virtual resources to be consolidated in a physical network conserving DC energy consumption.It is noted, however, that servers in DCs typically operate at 10–50% of their maximum capacity most of time [20], and when a server is completely idle, it may still consume up to 70% of its peak power [21]. Moreover, it is also observed that many workloads are predictable in a large time scale, such as day/night and weekday/weekend [22,23]. These facts motivate us to move some virtual nodes or links to other physical nodes or links at a planned time based on predicated VN workloads, so that more idle servers and network elements can be turned off to save energy. Fig. 1 depicts an example where two VNs from cloud customers A and B are embedded onto two physical DCs during the day time due to their resource needs. At night, however, the smaller workloads permit the infrastructure provider to combine them onto one DC or rack saving the operating costs of servers and switches. For example, web servers could run on multiple physical servers during the busy hours to ensure the performance but aggregated to a less number of physical servers at night so that some idle physical servers could be turned off to save energy. This motivates us to design a VNE scheme that saves energy and supports energy efficient DCs by aggregating the workload to a less number of servers and turning off idle servers.Furthermore, in most existing VNE schemes, the physical networks to embed VN requests are modeled with random graphs. DCs are, however, typically organized in a hierarchical fat tree architecture, as depicted in Fig. 2. We consider this hierarchical structure when modeling the VNE problem, so that VN embedding can minimize the energy consumption used by intermediate switches as well as servers, as shown in Fig. 3.Our main contributions of the paper are as follows:•We formulate the problem of virtual network embedding that incorporates energy costs of operation and migration for nodes and links that is non-linear. To solve this problem, we introduce a technique to transform it to a linear programming problem with additional constraints.After proving the NP-hardness of this problem, we develop a heuristic algorithm named Topology and Migration-Aware Energy Efficient Virtual Network Embedding (TMAE-VNE) to minimize the energy consumption caused by both operation and future migration. To the best of our knowledge, this work is the first to optimize energy consumption over the VN’s entire life cycle, considering time varying resource demands of virtual network requirements. In addition, we consider a practical intra-DC architecture to further improve energy efficiency.We conduct extensive evaluations and comparisons with two state-of-the-art algorithms using various inter-DC topologies. The results show that the proposed algorithm substantially saves energy consumption and allows high acceptance ratios.The remainder of this paper is organized as follows. Section 2 discusses the background and related work. We formally model the VNE problem with dynamic VN requests, physical nodes with sleep/awake modes, and realistic DC network topologies in Section 3. The proposed algorithm is described in Section 4. A motivating example is discussed in Section 5. The performance evaluations and comparisons of the proposed algorithm with existing algorithms using multiple DC topologies are presented in Section 6. The concluding remarks are given in Section 7.

@&#CONCLUSIONS@&#
