@&#MAIN-TITLE@&#
Design of parallel conversion multichannel analog to digital converter for scan time reduction of programmable logic controller using FPGA

@&#HIGHLIGHTS@&#
Programmable logic controller deals with analog signals using analog input module.Its scan time depends on the number of analog signal to be processed.Reduction in conversion time of analog to digital converter reduces scan time.Field programmable gate array based analog input module reduces conversion time.Reduction in conversion time reduces scan time.

@&#KEYPHRASES@&#
Programmable logic controller,Analog to digital converter,Analog input module,Field programmable gate array,Scan time,

@&#ABSTRACT@&#
The execution speed of a programmable logic controller (PLC) depends upon the number of analog and digital input it scans, complication in ladder diagram and the time to store the ladder diagram outputs in memory. Next to the ladder diagram, scanning of analog signals consume enough time as they have to be converted into digital. The two facts that limit the conversion speed is that the processor used for analog signal scanning can process only one channel at a time and the multichannel analog to digital converter (ADC) has digital output for only one channel. The hardware nature of field programmable gate array (FPGA) allows simultaneous conversion of all the analog signals into digital and storage of digital data in block RAM. The proposed design discusses the design of multichannel ADC using FPGA. The simulation result shows that the conversion time of ‘n’ channel ADC is 13.17μs. This increases the PLC execution speed.

@&#INTRODUCTION@&#
Industrial automation system plays a significant role in process industries like oil, paper, sugar and cement. It ensures that it produces quality and quantity product in a stipulated time. The industrial automation system software acquires physical variables, variables that have only two states and generates control actions based on the logic written in the program [1]. Programmable logic controller (PLC) is the hardware device that reads, executes the ladder logic program and generates output [2]. The cumulative time of analog and digital signal scanning, execution of ladder logic program and storage of outputs in memory is the scan time [3]. The three parameters that are responsible for scan time are the total number of analog and digital signal, number of rung in ladder diagram and the number of output stored in memory. Adopting a suitable optimization technique can reduce the number of rung to reduce scan time. It is not possible to reduce the number of analog and digital signal and the number of output stored in memory since these signals manipulate process parameters to produce end quality product. Therefore, the only possibility to reduce the PLC scan time is to reduce the conversion time of analog to digital converter (ADC) or the scan time of digital signals. Analog input module (AIM) processes analog signals and outputs digital signals to PLC since it accepts only digital data [4]. In a conventional method, a processor in AIM converts all the analog signals into digital using multiplexing method. The total conversion time becomes the multiplication of the number of channels by the conversion time of one ADC [5]. It will be the conversion time of only one ADC if the AIM simultaneously converts all the analog signals into digital. This paper proposes a design method on how to convert all the analog signals into digital simultaneously with the help of field programmable gate array (FPGA).The architecture of PLC is similar to that of microcomputer architecture. It reads analog and digital inputs through dedicated analog and digital input modules. In the same way, it sends outputs to the control devices through dedicated analog or digital output modules. An industrial standard AIM has eight or sixteen channels. The number of AIM varies based on the number of analog signal to be processed. All these AIMs use a common bus system to communicate to PLC. The architecture of AIM shown in Fig. 1has a multichannel ADC, processor and memory. The sample and hold circuits change analog signals into discrete signals. The number of sample and hold circuit is equivalent to the number of channel. Based on the selector inputs to the multiplexer by the processor, discrete signal of a particular channel is available at the input of ADC [6]. The processor enables start conversion input of ADC and waits for the ADC to enable its end of conversion (EOC) output. After the processor identifies the EOC output enabled, it reads digital output of ADC and stores in memory. An alternate way to do this process is that the processor first selects a specific channel by applying suitable selector signals to the multiplexer and allows the sample and holds circuit to change analog signal into discrete. In this case, the number of sample and hold circuit is only one. Now the processor takes care of conversion and finally stores the digital output in memory. In either case, the two parameters that slow down the AIM operation are,1.The processor is capable of processing only one channel at a time.At a time, the multichannel ADC architecture is able to provide digital output for only one channel.Industrial standard multichannel ADC has only one ADC that uses any one of the conversion technique like integration, successive approximation, flash type or sigma-delta. Flash type ADC architecture provides high-speed conversion at the expense of higher hardware [7]. Its architecture has resistor circuit, comparators and the decoder circuit. The resistor circuit generates ‘n’ reference voltages for ‘n’ bit ADC. ‘n’ bit comparators compare all these reference voltages with the analog signal. The remaining part of the ADC utilizes comparator output and generates equivalent digital output for the analog signal. The drawback in flash type is that the number of comparator increases along with the bit size.A single channel ADC in the proposed design has voltage divider circuit, two comparators and FPGA as shown in Fig. 2. FPGA enables the voltage divider circuit to generate two generate reference voltages. The two comparators compare these voltages with the analog signal. FPGA assigns a binary value and store in its RAM based on the comparators output and the output it released to enable the voltage divider circuit. FPGA repeats the process until the comparators compare all the reference voltages with the analog signal.The basic requirement in the conversion process of analog signal into digital is the reference voltage. The flash type ADC generates reference voltage by passing the supply voltage through the resistor network. CMOS transistors in the proposed design generate reference voltages. The low power dissipation and high speed are the basic advantages of CMOS inverter. It is less sensitive to noise signal and has a very high input resistance. The logic levels are independent of size that helps to minimize the size. It has pMOS on pull up side and nMOS on pull down side. When the input to the inverter is 0V, pMOS acts as a resistor and nMOS acts as an open switch. The condition reverses when the input changes to 5V. In both situations, either nMOS or pMOS acts as a resistor and hence the CMOS acts as a resistor. Eq. (1) and Eq. (2) are the ON resistance of CMOS calculated in terms of ON resistance of pMOS and nMOS [8].(1)Ronp=1/KpWp/LpVDD−Vt(2)Ronn=1/KnWn/LnVDD−Vtwhere Kp=μpCoxpand Kn=μnCoxnA pull up resistor connected at the drain terminal of pMOS shown in Fig. 3blocks the supply voltage when it is in OFF condition. Pull up resistor occupies more space when fabricated on to a chip. A diode connected nMOS transistor replaces the pull up resistor [8]. Interconnection between the nMOS gate and drain terminal creates diode connected nMOS. It acts as a non-linear resistor. It is always in the ON condition as the gate terminal continuously receives voltage from Vdd. Its Vds is greater than Vgs−Vt and hence it is in the saturation region. The drain current of nMOS is,(3)Id=KnWVGS−Vt22LReplacing the constant terms in Eq. (3) by K, it becomes as shown in Eq. (4)(4)Id=KVGS−Vt2whereK=μnnCoxW2LDifferentiate Eq. (4) by VGS(5)dIddVGS=2KVGS−VtRearranging Eq. (5) to get change in resistance,(6)dVGSdId=12KVGS−VtFrom Eq. (6), nMOS resistance is inversely proportional to VGS−Vt. Connecting two nMOS transistors Q1 and Q2 in parallel is equivalent to two resistors connected in parallel. This decreases the total resistance and voltage drop across them. Eq. (7) shows the total resistance for this condition.(7)RT=11RQ1+1RQ2=12KVGSQ1−Vt+2KVGSQ2−Vt=12KVGSQ1+VGSQ2−2VtConnecting ‘n’ nMOS in parallel as shown in Fig. 4(a) will lead to the total resistance as shown in Eq. (8).(8)RT=12KVGSQ1+VGSQ2+……+VGSQn−nVtSimilarly, the total resistance for series connected ‘n’ nMOS as shown in Fig. 4(b) will become as shown in Eq. (9).(9)RT=12KVGSQ1−Vt+12KVGSQ2−Vt+……+12KVGSQn−VtFig. 5shows the equivalent resistor circuit for parallel and series connected ‘n’ nMOS. Two comparators use the output voltages Vo1 and Vo2 as reference voltages to compare them with the analog signal. The ‘n’ CMOS connected in parallel with a nMOS results into the resistor circuit as shown in Fig. 6. The circuit generated 32 reference voltages when it used 16 CMOS along with a nMOS.Researchers find better solutions when replacing microprocessor based applications with FPGA. It provides enough resources and generates outputs within nano seconds. The CMOS voltage divider circuit with the comparator and FPGA shown in Fig. 7forms a single channel ADC. The number of CMOS transistor decides the total number of reference voltage. ADC resolution increases with the increase in reference voltages. FPGA generates two reference voltages at a time for comparison when it changes the state of a CMOS. It uses 16 clock pulses to generate 32 reference voltages from a 16 CMOS voltage divider circuit and complete the conversion. The circuit used two-stage comparator to compare the reference voltage with the analog signal [9]. Based on the comparators output, it assigns equivalent digital value and stores in block RAM. The proposed design used two-stage comparator for comparison and generated 128 reference voltages using 64 CMOS voltage divider circuit.Applications requiring larger memories like image processing and network applications utilize FPGA block RAM and distributed RAM. The performance of data transfer is faster since these memories are available within the chip itself. Block select RAMs are available as multiple block RAM. For example, the block RAM capacity of XC3S500E is 360Kb [10]. It divides the total memory into 20 block RAMs so that each block RAM will have 18Kb of static RAM. In that, 16Kb of memory is allocated for data storage and 2Kb is allocated for parity bits or it shall be used for data storage. The read or write operation is synchronous. Therefore, it is possible to read or write 20 data (data size varies with respect the chip specification) in a single clock pulse.It is possible to store or retrieve 324 data using block RAM of XC5VLX330T FPGA in a single clock pulse as it has 324 blocks RAM. The only limitation in dealing with multiple block RAM is to refer the same memory location for all the block RAM during memory operation. Multichannel ADC design simultaneously writes all the digital data into block RAM.In the proposed design, multichannel ADC shown in Fig. 8plays the role of AIM. Every addition of a channel in the design includes two comparators to the CMOS voltage divider circuit. For example, an eight channel ADC required a voltage divider circuit, sixteen comparators and an FPGA. All the comparators receive the reference voltages from the CMOS voltage divider circuit whenever the FPGA changes the states of CMOS transistors. FGPA reads comparator outputs, assigns digital values for all the channels and stores them in block RAM. The FPGA requires constant number of clock pulse to complete the conversion irrespective of the number of channels in the design.

@&#CONCLUSIONS@&#
