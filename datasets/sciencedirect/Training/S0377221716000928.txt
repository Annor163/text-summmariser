@&#MAIN-TITLE@&#
Advanced Greedy Randomized Adaptive Search Procedure for the Obnoxious p-Median problem

@&#HIGHLIGHTS@&#
GRASP is proposed with two constructive and two local search procedures.A memory structure is presented to allow incremental calculation of solutions.A mechanism to discard low quality solutions before the local search is proposed.A complete experimental experience is provided that studies the parameter values.The proposal is tested against the state of the art for the current problem.

@&#KEYPHRASES@&#
Obnoxious location,Diversity problem,Metaheuristics,GRASP,Filter solutions,

@&#ABSTRACT@&#
The Obnoxious p-Median problem consists in selecting a subset of p facilities from a given set of possible locations, in such a way that the sum of the distances between each customer and its nearest facility is maximized. The problem isNP-hard and can be formulated as an integer linear program. It was introduced in the 1990s, and a branch and cut method coupled with a tabu search has been recently proposed. In this paper, we propose a heuristic method – based on the Greedy Randomized Adaptive Search Procedure, GRASP, methodology – for finding approximate solutions to this optimization problem. In particular, we consider an advanced GRASP design in which a filtering mechanism avoids applying the local search method to low quality constructed solutions. Empirical results indicate that the proposed implementation compares favorably to previous methods. This fact is confirmed with non-parametric statistical tests.

@&#INTRODUCTION@&#
Facility location has been of practical and theoretical interest for more than the half of a century (Cohen, 1973; Klose & Drexl, 2005). First linear programming (LP) formulations origin in the late fifties and were soon followed by solution techniques, which later on became well-known as Branch and Bound (B&B) or Mixed Integer Programing (MIP). The classical so-called warehouse location problem (WLP), also well-known as (simple) facility or plant location problem, is an uncapacitated optimization problem, which can be modeled as an LP (Balinski, 1965) or network problem (Drezner & Hamacher, 2004; Melkote & Daskin, 2001). It is a site-selecting location-allocation model with a min–sum objective, where from a number of potential facility or warehouse sites the set of costumers has to be serviced, while minimizing the total fixed site-costs (location) plus the total variable customer assignment costs (allocation). The WLP isNP-hard (Garey & Johnson, 1979; Papadimitriou & Yannakakis, 1991) and, as such, has been in the focus of researchers interested in developing specialized LP-approaches (Körkel, 1999) or approximative constructive and local search or improvement algorithms, including standard add- or drop-heuristics, and Lagrangian approaches (Beasley, 1993; Kuehn & Hamburger, 1963), which then were followed by more advanced metaheuristics like genetic algorithms or tabu search and its derivatives (Greistorfer & Rego, 2006; Kratica, Tošić, Filipović, & Ljubic, 2001; Michel & Hentenryck, 2004). Comparing the WLP with the p-median problem, pMP (Hakimi, 1964; 1965), one identifies two differences: (1) there are no fixed site-costs involved and (2) the number of finally opened sites, p, is no longer a decision variable, but becomes included in the model. The pMP can be solved in polynomial time for fixed values of p, but is stronglyNP-hard for variable values of p (Current, Daskin, and Shilling, 2004, chap. 3; Garey & Johnson, 1979; Megiddo & Supowit, 1984). Consequently, any pMP is a special case of the general class of WLPs. Such as for the WLP, a variety of solution procedures, exact approaches, primal-dual approaches and metaheuristics, have been introduced for the pMP (Mladenović, Brimberg, Hansen, & Moreno-Pérez, 2007; Reese, 2006; Tansel, Francis, & Lowe, 1983). A most recent paper, Batta, Lejeuneb, and Prasad (2014), is recommended for a classical as well as modern view (dispersion, population, and equity criteria) on locational developments, offering an additional special focus on pMP.This work relates to location type problems like the WLP and pMP, additionally taking account of the so-called obnoxious or semi-obnoxious effects. Such effects often occur when interesting services of some provider are based on unwanted, but inevitably necessary locations, which do not add additional value to the product. Quite contrary, pure obnoxiousness clearly devalues the production process. Obnoxious problems were firstly coined in Church and Garfinkel (1978) who located a facility in a network using an exact method and also introduced the term of the so-called bottleneck points for a network.Erkut and Neuman (1989) used the terms disservice and service of the people in the vicinity of an (semi-)obnoxious facility that occurs during the processing of a product. In general, such services include a type of hazardous material, waste disposal, water treatment, nuclear power or chemical plants as well as big public facilities like airports. Regularly, these problems arise in the context of urban settings when the network may consist of noisy or polluting roads, transportation corridors, or rail lines (Segal, 2003).The present work deals with the Obnoxious p-Median (OpM) problem. It can be formally defined as follows. Let I be a set of clients, J a set of facilities, and dijthe distance between the client i ∈ I and the facility j ∈ J. The OpM problem consists in finding a set S with p facilities (with S ⊆ J and p < |J|), such that the sum of the minimum distance between each client and the set of facilities is maximized. In mathematical terms:max∑i∈Imin{dij:j∈S}subjecttoS⊆J,|S|=pFacilities in S are called open facilities, while facilities in J∖S are known as closed or unopened facilities.Table 1shows an example of pair-client distances, where there are 9 clientsI={i1,i2,i3,i4,i5,i6,i7,i8,i9}and 6 potential facilitiesJ={j1,j2,j3,j4,j5,j6}. Suppose thatp=3. Then, a solution of the OpM consists of selecting 3 facilities out of 6 in J. Table 2a shows a solution withS={j2,j5,j6}. The minimum distance between each client and the corresponding facility is highlighted with bold font. For example, the distances from client i1 to each facility are:d(i1,j2)=2,d(i1,j5)=4,andd(i1,j8)=8. Then, j2 is the closest facility to client i1. The value of the objective function of this solution, denoted as f(S), is the sum of the minimum distances from each client to the set of facilities:f(S)=2+12+4+1+4+4+2+2+4=35.Table 2 b shows a different solutionS′={j2,j3,j4},where the value of the objective function isf(S′)=23. Considering that the OpM is a maximization problem, solution S is better than solution S′. In other words, the minimum distances among the clients and facilities in S has a sum that is larger than the one in S′.In this paper we explore the adaptation of the Greedy Randomized Adaptive Search Procedure methodology, GRASP, introduced in Feo and Resende (1989), to solve the OpM problem. Each GRASP iteration consists of constructing a trial solution and then applying an improvement procedure to find a local optimum. We explore different designs for both phases, construction and improvement. In particular, in Section 3 we propose two different constructive methods and in Section 4, we describe two local search algorithms. Additionally, we propose an efficient strategy to update the objective function value that considerably reduces the running time of GRASP. In Section 5, we present a filtering strategy intended to discard low-quality solutions and to selectively apply the local search only to promising solutions. This mechanism reduces the computing time without deteriorating the quality of the final solution. Section 6 reports on an extensive computational experience to validate the proposed algorithm by comparing its performance with those in the current state of the art. Finally, Section 7 summarizes the main conclusions of our research.

@&#CONCLUSIONS@&#
In this work we have studied the application of a GRASP approach to solve the Obnoxious p-Median problem. In particular, we have developed two constructive algorithms based on a greedy function that calculates the contribution of a facility to the current solution. Our experimentation showed that one of them emphasizes search intensification, while the other one mainly diversifies the search into different regions.We also proposed two different local search procedures to be executed after the constructive phase. Knowing that the local search changes only one facility in a given solution, an incremental move evaluation of the solutions was proposed, which geometrically averages an 81 percent reduction in the execution time in relation to a full evaluation of the solutions. In line with our objective of designing an efficient method, we implemented a filtering mechanism that is able to skip the application of the improvement phase in not promising constructed solutions. In this way, this technique saves an average of 91.4 percent of the computation time for the GRASP with 100 constructions, obtaining similar results in terms of cost than the approach with no filter.Finally, before engaging in competitive testing, we performed a series of scientific preliminary tests to determine the contribution of the various elements that we have designed. We believe that the reader can find them very useful since valuable lessons can be learned from them, and applied to other problems.The experimental results show that our GRASP algorithm is able to outperform the current state-of-the-art methods in both short and long time horizons.As future work, we will incorporate additional cost functions to enhance the quality of the solutions. The idea is to deal with a multi-objective optimization scenario for the OpM problem.In order to contribute to a further research in this problem, we detail in this appendix the results of our experiments breaking down them to the instance level. Table 11 shows the best cost found for each one of the 72 instances we have dealt with. In addition, it is also indicated the algorithm/s that obtained that solution, as well as the time spent to reach the solution. In the cases where two or more algorithms found the same best solution, the reported time corresponds to the faster one, which will be shown in bold font.