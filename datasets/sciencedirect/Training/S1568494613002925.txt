@&#MAIN-TITLE@&#
The classroom assignment problem: Complexity, size reduction and heuristics

@&#HIGHLIGHTS@&#
This paper treats essentially an important compound of the exam timetabling.The NP hardness proof of the problem is deduced by reduction from the numerical matching with target sum problems.Two reduction procedures are proposed in order to reduce the size of the problem.To finalize the assignment procedure, we have used the VNS metaheuristic in order to obtain a good quality complete solution.

@&#KEYPHRASES@&#
Exam timetabling,Classroom assignment,Complexity,Size reduction,Variable neighbourhood search,

@&#ABSTRACT@&#
In this paper, we investigate a compound of the exam timetabling problems which consists of assigning a set of independent exams to a certain number of classrooms. We can define the exam timetabling problem as the scheduling of exams to time slots in first stage and at a second stage, the assignment of a set of exams extracted from one time slot to some available classrooms.Even though the formulation of this problem looks simple as it contains only two sets of constraints including only binary variables, we show that it belongs to the class of NP hard problems by reduction from the Numerical Matching with Target Sum problems (NMTS).In order to reduce the size of this problem and make it efficiently solvable either by exact method or heuristic approaches, a theorem is rigorously demonstrated and a reduction procedure inspired from the dominance criterion is developed. The two methods contribute in the search for a feasible solution by reducing the size of the original problem without affecting the feasibility. Since the reduction procedures do not usually assign all exams to classrooms, we propose a Variable Neighbourhood Search (VNS) algorithm in order to obtain a good quality complete solution. The objective of VNS algorithm is to reduce the total classroom capacity assigned to exams. A numerical result concerning the exam of the main session of the first semester of the academic year 2009–2010 of the Faculty of Economics and Management Sciences of Sfax shows the good performance of our approach compared with lower bound defined as the sum of the total capacity of all assigned classrooms and the total size of the remaining exams after reduction.

@&#INTRODUCTION@&#
The exam timetabling problem is a part of the educational timetabling problem which includes also the course timetabling in universities or in high schools. This problem is encountered by any educational institution at least twice per academic year and needs efforts and times to be performed. This is the reason that researchers focus their effort in discovering new algorithms and methods to solve this difficult problem and automate its generation [7,8]. According to Qu et al. [36], “exam timetabling problems can be defined as assigning a set of exams into a limited number of time slots (time periods) and rooms (of certain capacity), subject to a set of constraints”. This problem is usually solved in two phases: exam-time slot assignment phase and exam-classroom assignment phase. Most researchers have investigated the first phase by several optimization techniques coming from artificial intelligence to operations research. The classroom assignment problem focuses on the assignment of classrooms to exams that have to be taken by independent students of the institution during any time slot. This problem has to be solved in order to find a final solution to the exam timetabling in any academic institution. There is no abundant literature on this part of the exam timetabling problem which makes it an object of research topic in operations research and artificial intelligence. By reviewing the literature, we encounter several techniques that attempt to find a better solution to exam timetabling or to automate its generation. The assignment of event to venues or classrooms concerns in most studies lectures or courses and not exams. Our main objective is to find a better solution for the real world problem of the Faculty of Economics and Management Sciences of Sfax (FEMSS) that could be evaluated by minimizing a well defined evaluation function. Furthermore, our approach could be applied to any other educational institution which has to encounter this type of problem.Among the papers that tackle this problem, we can cite: [1,3,9,10,12,17,18,20,38]. These papers solved the problem of assigning classes to classrooms for lectures or tutorials. The exam timetabling problem in its broader scope has attracted the attention of several researchers and a number of heuristic procedures and algorithms are constructed to solve it in a relatively best manner (see the International timetabling competition 2007 (ITC07) results at McCollum et al. [27]). From the different methods and techniques which are investigated in this field we cite: graph colouring [5,28,29], constraint based reasoning [1,4,14], genetic algorithms [34], tabu search [15,39,40], hyperheurisitcs [33] and multiobjective algorithms [31]. The reader is referred to Qu et al. [36] for an extensive recent literature review concerning examination timetabling.Qu et al. [35] developed an iterative approach that hybridizes graph heuristics adaptively. In fact, an automatic heuristic construction approach is formulated in which largest weighted degree is adaptively hybridized with saturation degree in every stage of the solution construction for the two problems exam timetabling and graph colouring.Al-Yakoob et al. [2] formulated the exam timetabling problem (ETP) related to a Kuwait university as a mathematical programming model. They distinguish two variants of the problem: first, the exam timetabling problem (ETP) which is specialized on assigning exams to specified time slots and classrooms; second, the proctor assignment problem (PAP) which performs the assignment of proctors’ to exams.Nashat et al. [32] solved the exam timetabling by a revolutionary metaheuristic consisting of scatter search. They combine the scheduling process of assignment of exams to time slots and to classrooms by introducing a compound in the objective function that considers the number of classrooms with violated capacity.Burke et al. [6] solved the exam timetabling problem by hybrid variable neighbourhood search with a genetic algorithm. Their idea is based on the use of GA to select a subset of neighbourhoods from a large pool for use within VNS framework.Kahar and Kendall [24] bring to light the importance of the classroom assignment as a second phase for the achievement of the capacitated examination timetabling schedule. They argue that both versions of the examination timetabling problem can be solved by using a two-phase approach.There are several works in the literature that provide a good solution to the first phase but, to the best of our knowledge, only one paper (Dammak et al. [13]) have been devoted to the second phase (see [24]). In this work, Dammak et al. [13] considered only the constraint satisfaction problem which ensures that all exams are covered with the available classroom capacity and respect the indivisibility of classroom capacity among several exams. The authors proposed a heuristic procedure known as max-size assignment which is based on two prepositions formulated to reduce the size of the problem. The reduction of the size of the problem is performed either in the right or in the left according to arranging the size of the exams and the capacity of the classrooms in non-increasing or in non-decreasing order.The construction of a feasible solution to the CAP cannot resume all the objectives that have to be achieved according to a managerial point of view. Indeed, there are several objectives to optimize such that: the total used capacity, classroom proximity, number of classrooms assigned, number of invigilators, energy consumed …We can obtain a compromise solution of the major part of these objectives by considering only the first objective. In fact, when we perform the assignment of exams to classrooms by considering the minimization of the total used capacity, this yields an economy in terms of energy, number of invigilators, and number of classroom. The aim of our present study in this paper is to use different techniques for the reduction of the size of the classroom assignment problem (CAP) in order to make it easy to solve. Section 2 gives a formulation of the problem in a form of a binary linear programme with a suitable objective function measuring the total number of seats assigned. Section 3 contains a proof that the CAP is an NP hard in the strong sense by reduction from the Numerical Matching with Target Sums which is known as NP hard problem [19]. Section 4 contains two size reduction procedures: the first one is based on the arrangement in non decreasing order of exams’ sizes and classrooms’ capacities while the second is based on the dominance criterion. Section 5 applies the VNS metaheuristic to efficiently solve the CAP by using two neighbourhood structures based on insertion and swap moves. Section 6 presents some numerical results based on the real data extracted from the main session of the first semester exam for the academic year 2009–2010 of the Faculty of Economics and Management Science of Sfax. We compare the performance of our procedures with the reference to a well defined lower bound expressing the optimal value that could be obtained when assigning classrooms to exams. Finally, Section 7 concludes the paper and provides new research directions in this field.In the variable over-sized bin packing problem, we consider m bins with different capacities to be filled with n items having different sizes. The problem is to assign the items to bins so that the content of each bin i exceeds a given size ai. The problem of bin packing has been extensively studied in the literature taking into account all its variants [11,23].Concerning our real case, the bins play the role of exams with different sizes ai, i=1,2, …, m. The items can be considered as the classrooms with capacities bj, j=1, 2, …, n. Our objective is to assign classrooms to exams in such away that the total capacity of classrooms assigned to an exam has to exceed its size. The formulation of the classroom assignment, as given in [13], can be presented as follows:(P)∑j=1nbjXij≥ai∀i∈1,…,m(1)∑i=1mXij≤1∀j∈1,…,n(2)The set of constraints (1) indicates for each exam ei, the total number of seats assigned to this exam has to exceed it size.The set of constraints (2) indicates that each classroom is assigned to at most one exam. If we need to schedule several exams into one room, we replace the right side of the constraint (2) by the desired number of exams.The binary variables are defined as follows:Xij=1ifclassroomsjisassignedtoexamei0otherwise∀i∈1,…,m,∀j∈1,…,nE, the set of exams; S, the set of classrooms; m, the number of exams (bins); n, the number of classrooms (items).This problem can be converted into a binary linear programme by inserting a suitable objective function. The linear programme is defined as follows:Programme 1: (P1) minimizing the total used capacity(P1)Minf(x)=∑i=1m∑j=1nbjXij∑j=1nbjXij≥ai∀i∈1,…,m∑i=1mXij≤1∀j∈1,…,nIn this programme, our main objective when we assign classrooms to exams is to minimize the number of idle seats.The following NP hard in the strong sense problem is used to show the complexity of the CAP.Numerical Matching with Target Sums (NMTS)Let X={x1, x2, …, xm}, Y={y1, y2, …, ym}, Z={z1, z2, …, zm} be sets of positives numbers. Can X∪Y be partitioned into m disjoint subsets Γ1, Γ2, …, Γmwith Γk={xi(k), yj(k)} such that zk=xi(k)+yj(k), k=1,2, …, m? Clearly the condition∑i=1m(xi+yi−zi)=0is necessary for a yes answer. Since it is readily checked, we may assume that it always holds [25].Consider the following instance of the problem (P) constructed from the Numerical Matching with Target Sums (NMTS) problem.There are two sets of classrooms with given capacity:Classroom type I with capacity L+Xi, 1≤i≤m for the first set (set I).Classroom type II with capacity 2L+Yi, 1≤i≤m for the second set (set II).There are m exams with size 3L+Zi, 1≤i≤m, whereL=∑i=1mZi.We will show that there exists a solution to this instance if and only if there is a solution to the Numerical Matching with Target Sums Problem.Claim 1In a feasible solution all classrooms are full, i.e. there are no empty seats.The total capacity of classrooms is equal to:mL+∑i=1mXi+2mL+∑i=1mYi=3mL+∑i=1mXi+∑i=1mYiThe total size of students taking all exams is equal to3mL+∑i=1mZi.Since∑i=1mXi+∑i=1mYi=∑i=1mZiis assumed as given in the NMTS problem, the result follows □Claim 2In a feasible solution, each exam is hold in one classroom of type I and in another classroom of type II.Scheduling an exam in two or more classrooms of type II incurs some empty seats of size greater or equal to 4L+Yi+Yj−3L−Zk>0 or equivalently L+Yi+Yj−Zk>0.Since the number of exams is equal to the number classrooms of type II, we cannot have an exam not assigned to a classroom of type II. Therefore each exam is to be scheduled in exactly one classroom of type II.The total size of all exams is equal to:3mL+∑i=1mZi=(3m+1)L.Since the total number of seats equals the total number of students, there should be no empty seats.The total capacity of classrooms is equal to:mL+∑i=1mXi+2mL+∑i=1mYi=3mL+∑i=1mXi+∑i=1mYi=3mL+∑i=1mZi=3mL+L=(3m+1)LEach exam is to be assigned to one classroom of type I and to another classroom of type II. □Claim 3The classroom assignment problem (P) is NP hard in the strong sense.According to Claim 2, any exam should be assigned to exactly two classrooms of different types one of type I and one of type II.Suppose that there exists a feasible solution to the prescribed instance of (P) in which an exam of size 3L+Ziis assigned to one classroom of capacity L+Xjand to another classroom of capacity 2L+Ykin such away 3L+Zi>3L+Xj+Yki.e. Zi>Xj+Yk.This is not feasible since the size of the exam exceeds the capacity of both classrooms.Also, suppose that an exam of size 3L+Ziis assigned to a classroom of capacity L+Xjand to another classroom of capacity 2L+Ykin such away 3L+Zi<L+Xj+2L+Yk, i.e. Zi<Xj+Yk.In this case, the solution is not feasible because there are some empty seats (Claim 1).Therefore, there exists a solution to the instance P if and only if there exists a solution to the NMTS problem.Since the CAP is shown to be NP hard in the strong sense, it is useful to try to reduce its size as much as possible without violating the feasibility of the remaining problem. In this context, we propose two size reduction schemes: the first one is based on the arrangement of exams and classrooms in non-decreasing order of their size and capacity respectively, the second approach is based on the composition of the dominant solution.In order to generalize the proposition 4 of Dammak et al. [13] and facilitate the construction of a feasible solution to the CAP, we have formulated a theorem that contributes to reduce as much as possible the size of the problem. We arrange exams and classrooms in non-decreasing order of their sizes and capacities respectively. We assign all pairs of exam-classroom when the size of the exam does not exceed the capacity of the classroom. We consider four possible cases that can be encountered in a feasible solution. We show in each case that there is a feasible solution to the problem (P) when it exists in such away that the exam having a size less than the capacity of the classroom is assigned to the corresponding ordered classroom.Theorem 1Arrange the exam in the set E in non-decreasing order of their corresponding size:Arrange the classrooms in the set S in non-decreasing order of their corresponding capacity:bj(1)≤bj(2)≤⋯≤bj(n)Suppose there exists at least one feasible solution to the problem (P). If ai(q)≤bj(q) then there exist at least one feasible solution in which Xi(q)j(q)=1 for q=1, 2, …, m.ProofConsider a feasible solution in which the classroom sj(q) is no assigned (empty) and the exam ei(q) is assigned either to a subset{sj(q−t1),…,sj(q−tℓ)}or to the classroom sj(q+w). In both cases, we can assign exam ei(q) to classroom sj(q) and obtain another feasible solution.Suppose now there is feasible solutions Fifor i=1, …, 4 in which exam ei(q) is not assigned to classroom sj(q) even though ai(q)≤bj(q) and sj(q) is not empty. There are four cases depending on the position of ai(q) and bj(q) relatively to an exam with size ai(k).Case 1Suppose there exists a feasible solution F1 (Fig. 1) in which exam ei(q) is assigned to a subsetSB={sj(q−t1),…,sj(q−tℓ)}, where the capacity of each of these classrooms is less or equal to the capacity of the classroom sj(q).Suppose also that exam ei(k) is assigned to the classroom sj(q) whose capacity is greater or equal to ai(k) since ai(k)≤ai(q)≤bj(q).Consider the following solution F’1 (Fig. 2) in which exam ei(q) is assigned to classroom sj(q) and exam ei(k) is assigned the subset SB (all other assignments remain the same as in F1).Sinceai(q)≤(bj(q−t1)+⋯+bj(q−tℓ))and ai(k)≤ai(q), thenai(k)≤bj(q−t1)+⋯+bj(q−tℓ); the subset SB can hold the exam ei(k), and since ai(q)≤bj(q), the solutionF′1is also feasible.Case 2Suppose there exists a feasible solution F2 (Fig. 3) in which exam ei(k) is assigned to classroom sj(q) and exam ei(q) is assigned to classroom sj(q+r).Consider another solutionF′2(Fig. 4) in which exam ei(k) is assigned to classroom sj(q+r) and exam ei(q) is assigned to classroom sj(q) (all other assignments remain the same as in F2).The solutionF′2is also feasible since ai(k)≤ai(q)≤bj(q)≤bj(q+r).Case 3Suppose there exists a feasible solution F3 (Fig. 5) in which ei(k) is assigned to a subset{sj(q−t1),…,sj(q−tℓ)}∪{sj(q),…,sj(q+r1),…,sj(q+rυ)}and exam ei(q) is assigned to a classroom sj(q+w).Consider a new solutionF′3(Fig. 6) in which exam ei(q) is assigned to classroom sj(q) and the exam ei(k) is assigned to a subset{bj(q−t1),…bj(q−tℓ)}∪{sj(q+r1),…,sj(q+rυ)}∪{sj(q+w)}This new solution is feasible since ai(q)≤bi(q) andai(k)≤bj(q−t1)+⋯+bj(q−tℓ)+bj(q+r1)+⋯+bj(q+rυ)+bj(q+w)which is true because bj(q)≤bj(q+w).Case 4Suppose there exists a feasible solution F4 (Fig. 7) in which ei(k) is assigned to a subset{sj(q−t′1),…,sj(q−t′s}∪{sj(q),…,sj(q+r1),…,sj(q+rυ)}and exam ei(q) is assigned to a subset{sj(q−t1),…,sj(q−tℓ)}.Consider a new solutionF′4(Fig. 8) in which exam ei(q) is assigned to classroom sj(q) and ei(k) is assigned to a subset{sj(q−t1),…,sj(q−tℓ}∪{bj(q−t′1),…bj(q−ts')}∪{sj(q+r1),…,sj(q+rυ)}There are two sub cases:Sub case 4.1:bj(q)≤(bj(q−t1)+⋯+bj(q−tℓ))Consider a solutionF′4.1in which ei(q) is assigned to sj(q) and ei(k) is assigned to the subset{sj(q−t′1),…,sj(q−t′s}∪{bj(q−t1),…bj(q−tℓ)}∪{sj(q+r1),…,sj(q+rυ)}.This solution is feasible sinceai(k)≤bj(q)+bj(q+r1)+⋯+bj(q+rυ)andbj(q)≤bj(q−t1)+⋯+b(q−tℓ)soai(k)≤bj(q−t1)+⋯+bj(q−tℓ)+bj(q+r1)+⋯+bj(q+rυ)+⋯+bj(q−t′1)+⋯+bj(q−t′s)Sub case 4.2:bj(q)>(bj(q−t1)+⋯+bj(q−tℓ))Since the exam ei(q) is assigned to a subset of classroomsSB={sj(q−t1),…,sj(q−tℓ)}, the number of exams before exam ei(q) is equal to the number of classrooms before sj(q) therefore there exists at least one exam ei(q−p) which is assigned in the feasible solution F4 (Fig. 9) to a classroom sj(q+z).Consider a new solutionF′4.2(Fig. 10) in which exam ei(q) is assigned to classroom sj(q), exam ei(q−p) is assigned to the subsetSB={sj(q−t1),…,sj(q−tℓ)}and the exam ei(k) is assigned to the subset{sj(q−t′1),…,sj(q−t′s)}∪{bj(q+z)}∪{sj(q+r1),…,sj(q+rυ)}.This solution is feasible sinceai(q)≤bj(q),ai(q−p)≤ai(q)≤bj(q−t1)+…+bj(q−tℓ)andai(k)≤bj(q−t′1)+⋯+bj(q−t′s)+bj(q+r1)+⋯+bj(q+rυ)+bj(q+z)which is true because bj(q)≤bj(q+z). □The size reduction obtained in Theorem 1 can be extended to programme (P1) containing the same constraints. We argue this result in the following corollary:Corollary 1Arrange the exam in the set E in non-decreasing order of their corresponding size:Arrange the classrooms in the set S in non-decreasing order of their corresponding capacity:bj(1)≤bj(2)≤⋯≤bj(n)Suppose there exists at least one optimal solution to the programme (P1), if ai(q)≤bj(q) then there exist at least one optimal solution in which Xi(q)j(q)=1 for q=1, 2, …, m.ProofConsider an optimal solution in which the classroom sj(q)is not assigned (empty) and the exam ei(q) is assigned either to the classroom sj(q+w)or to a subset⁡{sj(q−t1),…,sj(q⁡⁡−⁡⁡tℓ)}.Suppose ei(q) is assigned to the classroom sj(q+w). Since ai(q)≤bj(q)≤bj(q+w), we can preserve the feasibility and the optimality by constructing a new solution in which classroom sj(q)is assigned to exam ei(q) by interchanging sj(q+w)by sj(q).Suppose ei(q) is assigned to the subset{sj(q−t1),…,sj(q−tℓ)}.In this case, there exists at least one exam ei(q−r) which is hold by a classroom sj(q+w). Since ai(q−r)≤ai(q)≤bj(q)≤bj(q+w) and ai(q−r)≤ai(q)≤bj(q−t1)+⋯+bj(q−tl), we can preserve the feasibility and the optimality by constructing a new solution in which classroom sj(q)is assigned to exam ei(q) and the subset{sj(q−t1),…,sj(q−tℓ)}to the exam ei(q−r). Note that in the new solution, we interchanged sj(q+w)by sj(q).The remaining of the proof is a direct consequence of Theorem 1. We note that all the solutionsF′ifor i=1, …, 4 are obtained by swapping classrooms between exams in solutions Fi. Therefore, the assigned classrooms do not change and both feasibility and optimality are not affected. □The result obtained in Theorem 1 does not hold for the case where we arrange both exams and classrooms in non-increasing order of their sizes and capacities respectively. Even though the result is verified for three cases and one sub case, it fails in the last sub case. We provide a counter example belonging to this sub case and show that the result does not hold.Result 2Arrange the exams in the set E in non-increasing order of their corresponding size:Arrange the classrooms in the set S in non-increasing order of their corresponding capacity:bj(1)≤bj(2)≤⋯≤bj(n)Suppose there exists at least one feasible solution to the problem (P), if ai(q)≤bj(q) then there exist at least one feasible solution in which Xi(q)j(q)=1 for q=1, 2, …, m. This result is true for three cases and one sub case; however, it does not hold for the last sub case.IllustrationCase 1Suppose there exists a feasible solution F5 (Fig. 11) in which exam ei(q) is assigned to a classroom sj(q−w).Suppose also that exam ei(k) is assigned to the classroom sj(q) with a capacity greater or equal to ai(k) since ai(k)≤ai(q)≤bj(q).Consider the new solutionF′5in which exam ei(q) is assigned to classroom sj(q) and exam ei(k) is assigned to the classroom sj(q−w) (all other assignments remain the same as in F) (Fig. 12).This solution is also feasible since ai(k)≤ai(q)≤bj(q)≤bj(q−w).Suppose there is a feasible solution FS in which exam ei(q) is not assigned to classroom sj(q) even though ai(q)≤bj(q).Case 2Suppose there exists a feasible solution F6 in which exam ei(q) is assigned to a subsetB1={sj(q+r1),…,sj(q+rυ)}, where the capacity of each of these classrooms is less or equal to the capacity of the classroom sj(q) and the exam ei(k) is assigned to the classroom sj(q) (Fig. 13).Consider another solutionF′6in which exam ei(q) is assigned to classroom sj(q) and exam ei(k) to the subset B1 (all other assignments remain the same as in F6) (Fig. 14).This solution is also feasible sinceai(k)≤ai(q)≤bj(q⁡+r1)+⋯+bj(q+rυ)Case 3Suppose there exists a feasible solution F7 in which exam ei(q) is assigned to a classroomConsider the new solutionF′7in which exam ei(q) is assigned to classroom sj(q) and exam ei(k) to the subset{bj(q−t1),…bj(q−tℓ)}∪{sj(q⁡+r1),…,sj(q⁡⁡+⁡⁡rυ)}∪{sj(q−w)}(all other assignments remain the same as in F7) (Fig. 16).This solution remains feasible since bj(q−w)≥bj(q) andai(k)≤bj(q−v1)+⋯+bj(q−vs)⋯+bj(q)+⋯+bj(q+r1)+⋯+bj(q+rυ)soai(k)≤bj(q−v1)+⋯+bj(q⁡⁡−⁡⁡vs)⋯+bj(q-w)+⋯+bj(q+r1)+⋯+bj(q+rυ)Case 4Suppose there exists a feasible solution F8 in which exam ei(q) is assigned to asj(q+r′1),...,sj(q+r′υ)and the exam ei(k) is assigned to the subset (Fig. 17){sj(q−v1),…,sj(q−vs),…,bj(q)}∪{sj(q+r1),…,sj(q+rυ)}Consider the new solutionF′8in which exam ei(q) is assigned to classroom sj(q) and exam ei(k) to the subset{bj(q−v1),…bj(q−vs)}∪{sj(q⁡⁡⁡+⁡⁡⁡r1),…,sj(q+rυ)}∪{s,j(q+r′1)…,sj(q+r′v)}(all other assignments remain the same as in F) (Fig. 18).There are two sub cases:Subcase 4.1bj(q)≤(bj(q+r′1)+⋯+bj(q⁡⁡+⁡⁡⁡r′υ))This solution is feasible sincebj(q)≤(bj(q+r1)+⋯+bj(q+rυ))andai(k)≤bj(q−v1)+⋯+bj(q−vs)+⋯bj(q)+⋯+bj(q+r1)+⋯+bj(q+rυ)soai(k)≤bj(q−v1)+⋯+bj(q−vs)+⋯+bj(q+r1)+⋯+bj(q+rυ)+⋯+bj(q+r′1)+⋯+bj(q+r′υ)Subcase 4.2bj(q)>(bj(q+r′1)+⋯+bj(q+r′υ))In this sub case, we construct a counter example that illustrate that the claim does not hold.Let ai(k)=65, ai(q)=60 and we take the following instance ((Fig. 19)):In this example we have total size of exams=150+65+60+40=315 and total capacity of classrooms=80+70+65+40+30+30=315 which is equal to the total size of exams, therefore, it is forbidden to let seats empty and consequently we cannot assign exam with size ai(q)=60 to the classroom with capacity bj(q)=65 because it will generate a residual of 5 seats. Therefore there is no feasible solution in which the exam with size 60 is assigned to the classroom with capacity 65 even though 60≤65.In addition to the reduction obtained from Theorem 1, it also interesting to use the following reduction inspired from the dominance criterion developed by Martello and Toth [26] for the bin packing problem adapted here to the Classroom Assignment Problem.We define a feasible set associated to an exam e as a subset of classrooms FS⊂S such that∑j∈FSbj≥awhere a is the size of the exam e.Given two feasible sets FS1 and FS2; FS1 dominates FS2 if the value of the optimal solution which can be obtained by assigning classroom in FS1 to the exam e is not greater than the value that can be obtained by assigning classrooms in FS2 to e.Theorem 2Given two distinct feasible sets FS1and FS2, if an assignment of subsets of classrooms {CL1, CL2, …, CLℓ} to an exam e in FS2and an assignment of a subset {s1, s2, …, sℓ} to the same exam in FS1exist such thatbSh≤∑j∈CLhbj,h=1,2,…,ℓthen FS1dominates FS2.Completing the solution through assignment of the classrooms in S\FS1 is easier than through assignment of the classroom in S\FS2. Note that∑j∈S\FS1bj≥∑j∈S\FS2bjand for any assignment of a classroom sh∈{S1, S2, ..., Sℓ}⊆FS1 there exist a feasible assignment of the classroom in CLh⊆FS2 (the opposite is not true).□This procedure is based on the dominance criterion described in the previous section.We define: θithe maximum number of classrooms that could be used to cover the exam eiwhich is formalized as follows:θi=minq=1,…,nq;∑j=1qbj≥ai. Really this quantity represents the maximum number of classrooms that can cover the exam ei. For any combination of θiclassrooms, we are sure that their total capacity is greater or equal to the size of the exam ei.νiis the minimum number of classrooms that could be used to cover the exam eiand is formalized as follows:νi=minq=1,…,nq;∑j=n−q+1nbj≥ai. Really this quantity represents the minimum number of the classrooms that can cover exam ei. We are sure that there is no combination of νi−1 classrooms that can hold exam ei.In the cases where νi=θithe solution obtained from the assignment of the θismallest classrooms to exam eidominates any other assignment.In fact for any combination of classrooms with capacity{bj(1),bj(2),…,bj(θi)}wherebj(1)≤bj(2)≤⋯≤bj(θi), we haveb1≤bj(1),b2≤bj(2),…,bθi≤bj(θi). This is evident from the dominance criterion defined above.For all other values of νiand θiwe emphasize on the cases where 1≤νi<θi≤3.Let:bq∗=minq=1,2,…,n{bq/bq≥ai}.bj∗,⁡bk∗=minj,k=1,2,…,nbj,bkbj+bk≥aiandj≠kT={t1,t2, …, tk} the set of different capacities of classrooms arranged in non-decreasing order and ni(i=1, 2, …, k) are their associated frequencies.Case 1θi=2 and νi=1Ifbq*≤b1+b2thenbq*is a dominant solution, since it dominates any other solution with only one classroom and any combination constituted by two classrooms.Case 2θi=3There are two different subcases:Subcase 1: νi=1Ifbq*≤b1+b2+b3andbq*≤bj*+bk*thensq*is a dominant solution since its capacity is less or equal to that of any combination of classrooms.Subcase 2: νi=2We consider the following two cases where{sj*,sk*}dominates any other assignment that can cover the exam ei.The first one is given by the following condition:bj*+bk*=b1+b2+b3andbj*=t1andbk*=t2In this case,{sj*,sk*}dominates any other combination containing two or three classrooms. Since it contains one element of size t1(bj*)and one element of size t2(bk*), the only combination consisting of two elements that cannot be dominated by{bj*,bk*}is the one containing two classrooms with capacities (t1, t1). This last combination is not feasible because θi=3. Therefore, we can conclude that{bj*,bk*}dominates any other combination of two classrooms.Sincebj*+bk*≤b1+b2+b3andbj*=t1=b1thenbk*≤b2+b3and using the dominance criterion, we can deduce that{bj*,bk*}dominates any other combination of three classrooms.The second condition is stated as follows:bj*+bk*=b1+b2+b3andbj*=t1andbk*=t3and(n2=1or2t2<ai)In this case,{sj*,sk*}dominates any other combination containing two or three classrooms. Since it contains one element of sizet1(bj*)and one element of sizet3(bk*), the combinations consisting of two elements that cannot be dominated by{bj*,bk*}are the one containing two classrooms with capacities (t1, t1), (t1, t2) (t2, t2). The first two combinations are not feasible because{sj*,sk*}represents the smallest combination of two classrooms that cover the exam ei. The third combination (t2, t2) is excluded by one of these two conditions: n2=1or2 t2<ai. In this case, we can conclude that{sj*,sk*}dominates any other combination of two classrooms.The same argument holds when we consider a combination of three classrooms as stated in the first case.We define two lower bounds:LB1=∑ei∈EaiLB2=∑sj∈S\Srbj+∑ei∈EraiWhere Srand Erdenote respectively the subsets of the remaining classrooms and exams after performing the reduction procedures.LB1 represents the total size of exams that have to be assigned to available classrooms. LB2 is the sum of the total capacity of all assigned classroom and the total size of the remaining exams after reduction.This section presents a VNS algorithm to solve the CAP after performing the reduction procedures defined in the previous sections.Variable Neighbourhood Search (VNS) is a relatively recent metaheuristic, or framework for constructing heuristics proposed by Mladenović and Hansen [30] which is characterized by a systematic change of the neighbourhood structure combined with local search, in order to escape from valleys containing local minima. This metaheuristic has proved its effectiveness in solving many hard optimization problems [22,37].Our choice of a single-solution based metaheuristic is due to effectiveness of this type of procedure where there exist an incremental functions that can update the evaluation of a solution in O(1) when we apply a move. This give an advantage to the approaches based local search versus the evolutionary approaches that need O(n) to evaluate each newly generated solution.The steps of the basic VNS [21] are summarized as follows:Initialization: select the set of neighbourhood structures Nk, k=1, …, kmax, that will be used in the search, find an initial solution x, choose a stopping condition;Repeat the following until the stopping condition is met:(1)Set k←1,Until k=kmax, repeat the following steps:Shaking. Generate a point x′ at random from the kth neighbourhood of x (x′∈Nk(x));Local search. Apply some local search method with x′ as initial solution; denote with x″ the so obtained local optimum;Move or not move. If this local optimum is better than the incumbent, move there (x←x″), and continue the search with N1 (1←k); otherwise, set k←k+1;The stopping condition of a VNS is similar to the other well known metaheuristics like tabu search and simulated annealing. This stopping condition can be a maximum number of iterations, a maximum number of iterations between two improvements of the incumbent solution or a predefined upper bound of the CPU time.Let: Er={e1, e2, …, ek} be the subset of the remaining exams after reduction (unassigned exams by reduction procedure);Sr={s1,s2,…,sk′}be the subset of the remaining classrooms after reduction (unassigned classrooms by reduction procedure);S¯rbe the subset of classrooms assigned in the solution;S¯¯rbe the subset of unassigned classrooms in the solution;WhereSr=S¯r⁡∪S¯¯r⁡eδis a dummy exam;Er*=Er∪{eδ};The solution will be presented by (k+1) vectors; the first k vectors are associated to the subset of the remaining exams Erincluding the subset of classrooms belonging toS¯rassigned to these exams; and the last vector concerns the dummy exam which contains the subset of classroomsS¯¯rthat are not assigned.Each vector contains the subset of classrooms assigned to the corresponding exam.Since we are in front of a constrained problem, our evaluation function used in our VNS algorithm will be composed by two parts: the first part presents the objective to optimize and the second presents a function penalizing the solutions according to their distance to the feasible region.F(X)=f(X)+penalty(X)penalty(X)=∑ei∈Erαmax0,ai−∑sj∈XeibjWe define two neighbourhood structures N1 and N2.The first neighbourhood structure N1 is based on the insertion move which consists to select 2 exams,e1,e2∈Er*such that e1≠e2 and select a classroom assigned to e1 and assign it to e2.The second neighbourhood structure N2 is based on the swap move which consists to interchange the position of two classrooms assigned to 2 different exams,e1,e2∈Er*.In this section, we present the proposed local search procedure (LS).For the reason that the local optimum of one neighbouhood structure is not necessary the same than that of another, we define two local search algorithms LS_insert and LS_swap based on the two neighbouhood structures defined previously N1 and N2 respectively.Each local search consists of applying all possible moves until a local optimum is found.These two local search procedures are performed alternatively several times until there is no possibility to improve the incumbent solution.The main idea consists to define a set of neighbourhood structures that allow obtaining a distance equal to k between two solutions when we perform the kth neighbourhood structure. Therefore, we defineN1k, k=1,2, …, kmax, the set of neighbourhood structures used in the shaking phase when applying the insertion move N1 at random k times successfully.The whole procedure of VNS algorithm is presented in Figs. 20–23.In this section, we implement our theoretical results consisting on the reduction and the VNS algorithm to real instance issued from the Faculty of Economics and Management Sciences of Sfax. All real data concern the main session of the faculty of the first semester of the academic year 2009–2010 which has taken 11 days including 29 different time slots. In this faculty, there are three time slots per day: morning (8:30), evening (12:30) and afternoon (15:30) in each one a set of independent exams are assigned. Our main objective in this paper is to consider one time slot and bring the set of corresponding exams that have to be taken and try to assign them to available classrooms in such away that the evaluation function defined above is minimized. The number of exams varies from time slot to another and usually in a decreasing order according to the period but the number of classrooms is fixed and is equal to n=54. The list of all classrooms with corresponding capacities used in this session at the Faculty of Economics and Management Sciences at University of Sfax is detailed in Table 1.Total capacity=1716From the best obtained solution, we fix the parameters of VNS algorithm as follow: the maximal number of iterations equals to 100 and kmax=min{30,|Sr|}.The performance measure used to evaluate the VNS algorithm is the Relative percentage deviation from LB2 which is defined as follows:RPD=VNS−LB2LB2×100The results obtained, after introducing all the data of the main session of this academic year, are summarized in Table 2. Each row of the Table contains a timeslot, the number of exams scheduled, the lower bound LB2, the result generated by the VNS algorithm, the deviation according to the lower bound and finally the time of execution in seconds. The mean RPD is equal to 0.73% and the average computational time CPU is equal to 2.27s. According to these results, we can see the performance of the VNS algorithm both in terms of the low value of the mean of the deviation according to our lower bound defined as the best and in terms of the average mean of the running time which is about 2s. We note that VNS algorithm is able to find 5 optimal solutions from a total of 29 instances.

@&#CONCLUSIONS@&#
