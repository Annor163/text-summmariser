@&#MAIN-TITLE@&#
Optimization of mixed integer nonlinear economic lot scheduling problem with multiple setups and shelf life using metaheuristic algorithms

@&#HIGHLIGHTS@&#
Optimization of the economic lot scheduling problem (ELSP).The ELSP considers multiple setups, shelf life, and backordering for any product.Four metaheuristic methods GA, SA, PSO, and ABC were used to solve the problem.The metaheuristic methods outperformed other reported procedures in the literature.Allowing for the production of each item more than once yielded a lower total cost.

@&#KEYPHRASES@&#
Economic lot scheduling problem,Multiple setups,Genetic algorithm,Particle swarm optimization,Simulated annealing,Artificial bee colony,

@&#ABSTRACT@&#
This paper addresses the economic lot scheduling problem where multiple items produced on a single facility in a cyclical pattern have shelf life restrictions. A mixed integer non-linear programming model is developed which allows each product to be produced more than once per cycle and backordered. However, production of each item more than one time may result in an infeasible schedule due to the overlapping production times of various items. To eliminate the production time conflicts and to achieve a feasible schedule, the production start time of some or all the items must be adjusted by either advancing or delaying. The objective is to find the optimal production rate, production frequency, cycle time, as well as a feasible manufacturing schedule for the family of items, in addition to minimizing the long-run average cost. Metaheuristic methods such as the genetic algorithm (GA), simulated annealing (SA), particle swarm optimization (PSO), and artificial bee colony (ABC) algorithms are adopted for the optimization procedures. Each of such methods is applied to a set of problem instances taken from literature and the performances are compared against other existing models in the literature. The computational performance and statistical optimization results shows the superiority of the proposed metaheuristic methods with respect to lower total costs compared with other reported procedures in the literature.

@&#INTRODUCTION@&#
Economic lot scheduling problem (ELSP) is concerned with scheduling the production of multiple items in a single facility on a periodical basis with the restriction that one item is produced at a time. Narro Lopez and Kingsman [1] provided an excellent review of this problem and the solution approaches. Throughout the past half century, a considerable amount of research on this problem has been published with several directions of extensions. Subsequently, various heuristic approaches have been suggested using any of the basic period approach [2], common cycle approach [3], or time-varying lot size approach [4]. This study deals with common cycle approach, where the objective is to determine the optimal cycle time.In industry, products are stocked and used up during the production cycle. If they are stored more than a specified period of time, some products may get spoiled. This time restriction of life for a product is called shelf life. Shelf life constraints directly influence the wastage, out-of-stock rates, and inventory levels [5]. Generally, the inventory systems assume implicitly unlimited shelf lives for the stored items. However, storing products beyond a specific shelf life may bring about the deterioration or diminution of the products. It might also lead to loss of the profitable or fruitful life of a product in an emerging market of new competitive products [6]. Therefore, when the optimal cycle time goes beyond the time restriction of life for an item, the cycle time period must be decreased to less than or equal to the shelf life to ensure a feasible schedule. This storage time can be lowered by regular restocking of the items, and subsequently decreasing the inventory maintained in the stock [7].Silver [8] studied the ELSP with shelf life constraint while disallowing the production cost under the postulation that the production rate variation does not impose any further cost. Two options of decreasing the cycle time and the production rate were investigated, and it was concluded that it is more cost-efficient to reduce the production rate. Sarker and Babu [7] exploited the Silver’s models [8,9] by considering production time cost, and a limited shelf life for each item. They found that when the production cost is included into the model, it might be more efficient to reduce the cycle time rather than the manufacturing rate.Goyal [10] investigated the results obtained by Sarker and Babu [7], and suggested that their proposed model can be improved by allowing the production of items more than one time in a cycle. Viswanathan [11] implied that Sarker and Babu’s model [7] offers a feasible schedule only when all the items produced have the same frequency. Viswanathan [11] also stated that although Goyal’s suggestion [10] can incur a lower inventory cost, his method does not assure a feasible production schedule. Yan et al. [12] tackled the problem of schedule infeasibility, and made the production of each item more than once in every cycle permissible. Yan et al. [12] indicated that advancing or delaying the manufacturing start times of some items can lead to a feasible production plan. Accordingly, costs associated to the adjustment schedule must be taken into account.Since ELSP is categorized as NP-hard [13] which leads to difficulty of checking every possible schedule in a reasonable amount of computational time, recently, metaheuristic algorithms have been implemented effectively to solve the problem.Khouja et al. [14] proposed a genetic algorithm (GA) for solving the ELSP applying the basic period approach, and showed that the GA is appropriate for solving the problem. Moon et al. [15] addressed the ELSP based on the time-varying lot size method, and suggested a hybrid genetic algorithm (HGA) to solve the model. The obtained results by the HGA surpassed the best-known Dobson’s heuristic [16]. Chatfield [17] proposed a GA, namely, genetic lot scheduling procedure, to solve the ELSP using the extended basic period (EBP) approach. Their method was compared with the well-known benchmark problem presented by Bomberger [18]. The results outlined that the proposed approach offers better optimization reliability. Jenabi et al. [19] solved the ELSP in a flow shop setting utilizing the HGA and simulated annealing (SA) algorithm. Their computational results indicated the superiority of the proposed HGA compared to the SA with respect to the solution quality. However, the proposed SA outperformed the HGA in terms of the required computational time.Chandrasekaran et al. [20] investigated the ELSP with the time-varying lot size approach and sequence-independent/sequence-dependent setup times of parts, and applied the GA, the SA, and the ant colony optimization (ACO) algorithms. The computational performance analyses revealed the effectiveness of the proposed metaheuristic methods. Raza and Akgunduz [21] examined the ELSP with time-varying lot size approach using the SA, and conducted a comparative study of heuristic algorithms on the problem. They compared the results with Dobson’s heuristic [16] and Moon et al. [15], and concluded that the SA finds the best-known solution for the suggested problem. Bulut et al. [22] proposed a GA for the ELSP under the EBP approach and power-of-two (PoT) policy. The experimental results showed that the proposed GA is highly competitive to the best-performing algorithms from the existing literature under the EBP and PoT policy.To the best of the authors’ knowledge, there has been no research on the ELSP with multiple products having various production frequencies, and respecting the shelf life and backordering constraints using the metaheuristic methods. In this paper, the proposed ELSP model by Yan et al. [12] is modified. A computational study of the well-known metaheuristic algorithms, namely the GA, the SA, the particle swarm optimization (PSO), and the artificial bee colony (ABC) algorithms are presented to solve the proposed model. Accordingly, the performance of the best existing approach presented by Yan et al. [12] and the proposed metaheuristic algorithms are evaluated and compared.The rest of this paper is organized as follows: Section 2 presents the mathematical formulation. In Section 3, applied methods are explained. Section 4 demonstrates numerical examples and discusses the computational results. Finally, conclusions are given in Section 5.In this section, a mathematical model for the ELSP is presented based on the integration and modification of the models presented by Goyal [10] and Yan et al. [12]. Consider N types of items are produced on a single machine in the manufacturing cycle time of T, investigating the effect of constituent costs in an inventory system with shelf life constraint and production of items more than once in a cycle. The objective is to minimize the total cost, in addition to obtaining a feasible production schedule, the optimum production frequency, production rate, backorder level, batch size for each item, and optimal production cycle time for the family of items using optimization engines.The mathematical model studied throughout the paper is based on the following assumptions and notations:Assumptionsi.Each item has a deterministic and constant demand rateii.Each item has a deterministic and constant setup timeiii.Each item has a finite production rateiv.Each item is produced per cyclev.Each item has a specified shelf lifevi.Backordering is permissiblevii.The first in first out (FIFO) rule is considered for the inventory transactionsIndicesiProduct (i = 1, 2, …, N)NTotal number of productsb,wProduction batch(b,w=1,2,…,ω=∑i=1Nφi)jBatch number (j = 1, 2, …, φi)ParametersDiDemand rate for item i (units/year)PimaxMaximum possible production rate for item i (units/year)RiminRatio of demand to maximum production rateLiShelf life of item i (years)tiSetup time for item i (years)SiSetup cost for item i (dollars/year)HiInventory holding cost for item i (dollars/unit/year)BiBackordering cost for item i (dollars/unit/year)OMachine operating cost (dollars/year)VariablespiProduction rate for item iriRatio of demand to production rate for item iφiProduction frequency for item i per cycleτiCycle time for item iςiProduction start time for item iQiProduction batch size for item iMiMaximum backorder level for item iλiMachine time for item iXiProduction time for item iγib1,if item i is produced in thebthbatch0,otherwiseαijProduction start time advancement for item i in its jth production batchβijProduction start time delay for item i in its jth production batchTEntire production cycle timeC(T)Total cost over the entire production cycle time(1)C(T)=O∑i=1Nri+1T∑i=1N(Si+Otiφi)+T2∑i=1NHiDiBi(1-ri)φi(Hi+Bi)+1T∑i=1NHi+Bi2Di∑j=1φi(αij)2+∑j=1φi(βij)2(1-ri)The objective function aims at minimizing the total cost which comprises of machine operating, setup, inventory holding, and backordering costs, in addition to an adjustment cost in case of overlapping production times of different items which leads to an infeasible schedule. A detailed description for the adjustment cost can be found in Yan et al. [12].For a feasible solution, the total setup time and production time for N products cannot go beyond the cycle time T[8], that is:(2)∑i=1Ntiφi+TDipi⩽TEq. (2) can be rearranged as:(3)∑i=1Ntiφi1-∑i=1Nri⩽Twhereri=Dipi.1-∑i=1Nriis the long-run proportion of time available for setups. For infinite horizon problem1-∑i=1Nri>0is necessary for the existence of a feasible solution [15].Therefore, it is necessary that:(4)∑i=1Nri<1The adopted production rate for each item should not exceed the maximum possible production rate. Hence:(5)pi⩽Pimaxfori=1,2,…,Nor,(6)Rimin⩽rifori=1,2,…,NwhereRimin=DiPimax.It is assumed that:(7)∑i=1NRimin⩽1Otherwise, there would not be any feasible production schedule.It is supposed that each item i has a shelf life of Liyears, and the inventory is used on first-in-first-out basis. Accordingly, item i with the longest keeping period will be produced at the later section of the manufacturing cycle. Thus, the maximum time that product i is stored is T(1−Di/pi) [8]. However, the shelf life constraint amends in the model allowing the backorders [23]. Thus, the shelf life constraint in this condition is:(8)T(1-ri)BiHi+Bi⩽Lifori=1,2,…,NWhen the optimal cycle time goes beyond the time restriction of life for an item, spoilage of the product might occur that in turn leads to a loss to the manufacturer. The storage time for an item can be lowered by producing that item more frequently in a manufacturing cycle. If item i is produced more than once in a production cycle, the shelf life constraint considering the production start time advancement or delay for the jth batch of item i (in case of an infeasible schedule) will be changed to:(9)τi(1-ri)BiHi+Bi+αij-βij⩽Lifori=1,2,…,N,j=1,2,…,φiwhereτi=Tφi.The required machine time for production of item i in each cycle timeτi,λi, is the sum of setup time and production time of that item:(10)λi=ti+Xifori=1,2,…,NwhereXi=τiDipi.Since, item i is allowed to be produced more than once every τiyears, the machine time available for other items in every τicycle isτi-λi. If the required machine time for other products exceeds the available time, it causes production times conflicts between some or all the items. Therefore, the constraints given in Eqs. (11)–(18) based on Yan et al. [12] must be met to avoid the schedule infeasibility.The production of an item can be commenced only after the completion of production of its former batch. Hence:(11)ςI(b)+(J(b)-1)τI(b)-αI(b)J(b)+βI(b)J(b)+rI(b)τI(b)⩽ςI(b+1)+(J(b+1)-1)τI(b+1)-αI(b+1)J(b+1)+βI(b+1)J(b+1)forb=1,2,…,(ω-1)In Eq. (11), I(b) represents that bth production batch within a manufacturing cycle belongs to which item. Therefore:(12)I(b)=∑i=1Nγibiforb=1,2,…,ωwhere(13)γib=1if itemiis produced in thebthbatch0otherwiseIn Eq. (11), J(b) shows the item’s batch number. Hence:(14)J(b)=∑w=1bγI(b)wforb=1,2,…,ωEq. (15) shows the total number of batches or production frequency for each item in a cycle:(15)∑b=1ωγib=φifori=1,2,…,NTo prevent the production of different items from overlap in a cycle, Eq. (16) must be used:(16)∑i=1Nγib=1forb=1,2,…,ωEq. (17) restricts the completion time of the last batch so that it cannot go beyond the entire production cycle time:(17)SI(ω)+(J(ω)-1)τI(ω)-αI(ω)J(ω)+βI(ω)J(ω)+rI(ω)τI(ω)⩽TIt should be noted that for attaining production feasibility production start time for a batch can be either advanced or delayed, but both cannot occur. Therefore:(18)αij·βij=0fori=1,2,…,N,j=1,2,…,φiEq. (19) can be used to obtain the lot size for each item:(19)Qi=Diτifori=1,2,…,NThe optimum backorder level for each item can be expressed as Eq. (20):(20)Mi=τiDi(1-ri)HiHi+Bifori=1,2,…,NConstraints (21) are the non-negativity constraints:(21)T⩾0ri≥0fori=1,2,…,Nαij,βij≥0fori=1,2,…,N,j=1,2,…,φiφi>0integerfori=1,2,…,NThe formulation given in Section 2 is a nonlinear mixed integer programming problem. These characteristics justify the model to be adequately hard to be solved using exact methods. To deal with the complexity and find near-optimal results in a reasonable computational time, metaheuristic approaches are widely used for which the GA, the SA, the PSO and the ABC algorithms are explained in the following subsections.Genetic algorithm (GA) is a stochastic search technique based on the natural evolutionary processes. Fundamental of the GA was primarily instated by Holland [24]. Simplicity and capability of finding quick reasonable solutions for intricate searching and optimization problems have brought about a growing interest over the GA. GA contains a set of individuals that constitute the population. Every individual in the population is represented by a particular chromosome which indicates a plausible solution to the existing problem. Throughout consecutive repetitions, called generations, the chromosomes evolve. During each generation, the fitness of each chromosome in the population is evaluated. Upon the selection of some chromosomes from the existing generation as parents, offspring will be produced by either crossover or mutation operators. The algorithm stops when a termination condition is reached. The required steps to solve the proposed model by a GA are described in the following subsections.The primary data needed to start the GA method comprises two sections:1.Model data: includes quantities to compute the required variables.The GA data: involves the probability of operating crossover known as crossover rate represented by ‘Pc’, the probability of operating mutation called mutation rate represented by ‘Pm’, the number of chromosomes kept in each generation that is named population size, and indicated by ‘Npop’, and maximum number of generations denoted by ‘max gene’.In this paper, both the crossover and mutation rates alter in the range [0.1,1]. The computational results show that the effect of Pcon the total cost value is positive. Therefore, the smaller the crossover probability, the lesser the total cost will be. However, C(T) will decrease as Pmincrease. Additionally, several population sizes in the range [50,200] are examined in the experiments.The GA starts with encoding the variables of the problem as finite-length strings called chromosomes. Since the proposed model in this paper is a non-linear problem containing three different types of variables (discrete, continuous, and binary), a real number representation is applied to lessen this intricacy. Matrix A1 presents an example of a chromosome:(22)A1=τ1τ2⋯τNp1p2⋯pNφ1φ2⋯φNThis matrix contains three rows and N columns. The three elements of each column represent the cycle time τ (floating point), adopted production rate p (integer), and production frequency φ (integer) for every item. Furthermore, the first row of the matrix presents the cycle time, the second row indicates the adopted production rate, and the third one presents the production frequency for all items.An infeasible production plan may occur as products are allowed to have more than one setup per cycle. In order to attain feasibility, the production start time(s) of one or more of the items can be advanced (αij) or delayed (βij). However, an item’s production start time for a batch can be adjusted by either advancing or delaying, but not both. Matrix A2 represents the chromosome for the floating point variablesαijandβij:(23)A2=α11,β11α12,β12⋯α1φmax,β1φmaxα21,β21α22,β22⋯α2φmax,β2φmax⋯⋯⋯αN1,βN1αN2,βN2⋯αNφmax,βNφmaxThis matrix has N rows showing the number of products and φmax columns(φmax=max{φ1,φ2,…,φN}). It should be noticed that as φiis different for various items, the rest of non-existent elements in the row is considered to be zero.Matrix A3, with the order of N×ω shows the binary variableγib,where ω is the total number of production frequencies. To have a feasible schedule for each column only one non-zero value of 1 must be generated. The mechanism of generating 1 and 0 is random (1 and 0 indicate whether the item is produced or not during cycle time T). The summation of values in each row shows the production frequency for each item.(24)A3=γ11γ12⋯γ1ωγ21γ22⋯γ2ω⋯⋯⋯⋯γN1γN2⋯γNωWhen the GA generates a randomly initial population of variable γ, the matrix may have more than one value of 1 in each column. Therefore, the columns of matrix γ must be rechecked. If the number of value of 1 in per column is greater than one, the values of 1 must be changed to 0, and only one value of 1 is kept. In order to select which of those ones must convert to 0, a cost for each element is considered in the form of (O×Di/pi). Those 1s that have higher costs will be changed to 0.GA starts with a group of chromosome known as ‘population’. The initial population is generated randomly by keeping the value of each variable in the range specified by its lower and upper bounds.The crossover is the main operator of generating new chromosomes. It applies on two parent chromosomes with the predetermined crossover rate (Pc), and produces two offspring by combining the features of both parent chromosomes. In this research, the arithmetic crossover operator that linearly combines parent chromosome vector is used to produce offspring. The two offspring are obtained using Eqs. (25) and (26):(25)offspring(1)=r×parent(1)+(1-r)×parent(2)(26)offspring(2)=r×parent(2)+(1-r)×parent(1)where r is a random number in the range [0,1]. For the integer variables the amount of produced offspring is rounded. Fig. 1shows how the crossover operator for the continuous variablesτi,αij,andβijworks.Mutation exerts stochastic change in chromosome genes with probability Pm. It is considered as a background operator that maintains genetic diversity within the population.Suppose a particular gene such as gjis chosen for mutation; then the value of gjwill be changed to the new value g’jusing Eqs. (27) and (28):(27)gj′=gj-(gj-lbj)×r×1-zmax gene(28)gj′=gj+(ubj-gj)×r×1-zmax genewhere j is an integer random number in the range [1, N], lbjand ubjare the lower and upper bounds of the specific gene, r is a random variable within the range [0, 1], and z is an integer random number in the range [1, Npop]. A random number y will be generated. When random number y is less than 0.5, Eq. (27), and when it is greater than 0.5, Eq. (28) is used. For the integer variables the amounts produced by Eqs. (27) and (28) are rounded. For the binary variableγib, an integer number in the range [1, N×ω] is generated in order to select an element. Then, if the selected element is 1, it will be replaced with 0, and vice versa.

@&#CONCLUSIONS@&#
A mixed-integer non-linear model has been addressed in this paper which considers the practical characteristics, including backordering, shelf life, and multiple setups for each product in a manufacturing cycle. The paper investigated the problem of obtaining the optimum production rate and production frequency for each item, the optimal production cycle time for all the products, in addition to a feasible manufacturing schedule. However, the assumption of production of items more than once in a cycle might cause an infeasible schedule due to the overlapping production times of various items. To eliminate the production time conflicts and to achieve a feasible schedule, the production start time of some or all the items must be adjusted by either advancing or delaying.The solution of the large scale proposed ELSP model may be out of reach using the existing approaches based on the complexity and the required computational efforts associated with the model. Thus, efficient heuristic methods are required to solve the NP-hard model for large problems usually found in real-world situations. In this paper, effective solution approaches based on real-coded GA, SA, PSO, and ABC algorithms for integer, non-integer, and binary variables are presented for solving the proposed model. The results indicate the efficiency of the applied metaheuristic methods in solving the proposed model. Comparisons were based on the percentage improvement in the total cost. All the applied methods showed an impressive performance and excellent solution qualities. The metaheuristic algorithms can also efficiently handle large-sized instances in a moderate computational time. However, the ABC method produced the lowest cost, which may indicate its superiority in searching for solutions of similar problems. Therefore, the ABC-based approaches can be served as a useful decision-support tool for production managers.