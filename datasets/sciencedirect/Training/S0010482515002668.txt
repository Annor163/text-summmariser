@&#MAIN-TITLE@&#
Differential cryptanalysis of a medical image cryptosystem with multiple rounds

@&#HIGHLIGHTS@&#
Differential cryptanalysis proves that the security of Fu׳s cryptosystem only depends on permutation key.Propose double differential cryptanalysis comparison method to analyze multiple round Fu׳s cryptosystem.Simulation results demonstrate the effectiveness of our differential attacks.Point out the other defects of the cryptosystem.

@&#KEYPHRASES@&#
Chaos-based image encryption,Differential cryptanalysis,Permutation–substitution architecture,Discrete cat map,

@&#ABSTRACT@&#
Recently, Fu et al. proposed a chaos-based medical image encryption scheme that has permutation–substitution architecture. The authors believe that the scheme with bit-level cat map shuffling can be achieved at high level of security even if it is only applied with a few encryption rounds. However, we find that the scheme cannot resist differential cryptanalysis. The differential cryptanalysis shows that the security of the original scheme depends only on permutation key instead of on all of the keys. Moreover, 17 chosen plain-images can reveal equivalent permutation key for 1-round and 2-round encryption. We propose a novel analysis method called double differential cryptanalysis comparison (DDCC) that is valid to break multi-round encryption with16N2+1chosen plain-images, whereN2is the size of the image. We also point out several weaknesses of the cryptosystem. The theoretical analysis and simulation results indicate that the encryption scheme is insecure.

@&#INTRODUCTION@&#
With the rapid development of computer technology, a variety of medical images, such as Computed Tomography (CT), Magnetic Resonance Imaging (MRI) images, are processed, delivered and stored in digital format. Security of digital medical images becomes critical since these images contain patients׳ personal information which could be very sensitive. Any compromise of the security of this kind of data could result in leakage of patient׳s health information with serious privacy consequence. Thus, it is essential to investigate secure encryption algorithms for digital medical images.The conventional block ciphers, such as the Data Encryption Standard (DES), the Advanced Encryption Standard (AES) and the International Data Encryption Algorithm (IDEA), etc., are usually used to protect textual data. However, they are not suitable for encrypting medical images with large data capacity and high redundancy because they require a large computational time in practical applications. Thus, a number of image encryption schemes have been proposed, especially chaos-based algorithms. The characteristics of chaotic systems, such as sensitive to initial conditions and system parameters, ergodicity and randomness property, have similarities with essential design principles of a cryptosystem. So far, many scholars have designed image encryption schemes based on chaotic maps [1–11]. In 1998, Fridrich [1] suggested that a chaos-based image encryption algorithm should be composed of two processes: one phase is to permute image pixels and another phase to alter the pixel values. This architecture is called as permutation–diffusion, permutation–substitution or Fridrich׳s architecture. Subsequently, many chaos-based algorithms utilize this structure [2,4,5,7,8]. These algorithms use sorting of chaotic sequences [5] and chaotic maps as permutation methods, such as Arnold cat map [2,8], baker map and standard map [4]. Similarly, non-linear function [4], chaotic keystream [2,5,7,8], etc., can be applied to substitution process. In [2,5], both of them use the Chen׳s system to generate chaotic sequences in substitution process, this hyper-chaotic system can obtain large key space. In [7], logistic maps is applied in both permutation and substitution process, but the key will be changed in each round to achieve high security. Further, Pareek et al. [3] propose a scheme based on 16-pixel blocks. Each block contains eight types of encryption operations, one of which is determined by the outcome of the logistic map. In [6], Huang et al. introduce pixel-chaotic-shuffle (PCS) method combined with four differential chaotic systems, which can achieve a good confusion effect. Fu et al. [8] propose a medical image encryption scheme with bit-level permutation and further substitution for achieving high level of security. In this paper, we call this image cipher Fu׳s scheme. Recently, Wang et al. [9] present an image encryption based on dynamic S-boxes, which are constructed by the logistic map and the Kent map. The pixels of plain-image are substituted by S-boxes for encryption. In addition, Zhou et al. [10] and Som et al. [11] have proposed selective encryption schemes that only encrypt part of a plain image and improve encryption speed.However, some chaos-based image algorithms have been analyzed and found to be insecure from the viewpoint of modern cryptology [12–18]. Li et al. [12] point out that for a permutation-only image cipher, it is possible to reconstruct the permutation matrix by comparing a number of the known plain-images and the corresponding cipher-images. This is because the pixel values before and after the permutation are unchanged. They consider that the permutation-only image cipher is vulnerable against known/chosen-plaintext attacks in the sense that onlyO(logL(MN))known/chosen plain-images are enough to break the ciphers, whereMNis the size of the image andLis the number of different pixel values. Also, they find that the attack complexity isO(logL(MN)(MN)2). Li et al. [13] optimize the analysis above by a binary tree classification method and a multi-branch tree classification method, and the corresponding spatial complexity and computational complexity are onlyO(MN)andO(logL(MN)MN), respectively.Li et al and Li and Lo [12,13] have demonstrated that the permutation-only schemes are insecure, but their cryptanalysises cannot apply to the permutation–diffusion (permutation–substitution) encryption type [1]. Rhouma et al. [14] and Çokal et al. [15] analyze permutation–diffusion image encryption algorithms [5,2], respectively. But their cryptanalysises only focus on one-round encryption rather than multi-round cases. Solak et al. [16] propose a chosen-cipher text attack method and broke multi-round encryption of Fridrich׳s algorithm. However, the difficulty of their analysis method is increasing with higher encryption rounds. If the number of rounds is enough, the attack method proposed is infeasible. Recently, Zhang et al. [18] have analyzed the security of Fu׳s scheme with one-round encryption by using similar analysis method of Refs. [14] and [15], and proposed an improved version of Fu׳s scheme. They only change the structure from permutation–substitution to permutation–substitution–permutation. In other words, they simply add another permutation process. We find that their improved scheme is still insecure, it cannot resist differential attacks. In this paper, we also analyze Fu׳s scheme by using differential cryptanalysis with chosen-plaintexts. We propose a new analysis method called double differential cryptanalysis comparison (DDCC). This method is feasible for multi-round encryption.The rest of the paper is organized as follows. Section 2 introduces some preliminaries about cat map and the properties of modular arithmetic. Section 3 briefly describes the original medical image encryption scheme. In Section 4, we analyze the security of this scheme by differential cryptanalysis in detail, and simulation results are presented in Section 5. In Section 6, we point out the defects of the cryptosystem. Finally, we conclude this paper.The discrete cat map is usually used in permutation operation for image encryption and denoted by(1)[x′y′]=[1pqpq+1][xy]modN,wherep,q∈[1,N−1], and(x,y)and(x′,y′)are the pixel positions of an original image and its permutated image, respectively.To further shuffle pixel positions, Eq. (1) is iteratedmtimes and it yields(2)[x′y′]=[1pqpq+1]m[xy]modN=[abcd][xy]modN,wherea,b,c,d∈[1,N−1].Assume thatA,BandNare integers. The modular arithmetic between them has the following properties.Property 1(A×B)modN=[(AmodN)×(BmodN)]modN.(A−B)modN=[(AmodN)−(BmodN)]modN.For an equationAx=BmodN, if and only ifgcd(A,N)dividesB, the equation must have a solution or multiple solutions, and the number of solutions is equal togcd(A,N), wheregcd(A,N)is the greatest common divisor ofAandN. The unique solutionx≡Aϕ(N)−1BmodN, whereϕ(N)is Euler׳s totient function.Known two pairs of permutation relationship of Eq. (2),(x1,y1)mapping to(x1′,y1′)and(x2,y2)mapping to(x2′,y2′), a limited number of solutions,a,b,candd, can be determined.Proof. According to Eq. (2) we have the following formulas:(3a)x1′=ax1+by1modN,(3b)y1′=cx1+dy1modN,(4a)x2′=ax2+by2modN,(4b)y2′=cx2+dy2modN.We subtract Eq. (4a) multiplied byy1from Eq. (3a) multiplied byy2, according to Property 1 and Property 2 we have(5)x1′y2−x2′y1modN=a(x1y2−x2y1)modN.Due to Property 3, we can solve the parameteraof Eq. (5). The parameteramay have either one solution or a limited number of solutions. For the latter case, we utilize the other mapping relationship that satisfies Eq. (2) to further confirm the right parameter.Converting Eqs. (3) and (4) into different forms, we have(6)x1′x2−x2′x1modN=b(x2y1−x1y2)modN,y1′y2−y′2y1modN=c(x1y2−x2y1)modN,y1′x2−y′2x1modN=d(x2y1−x1y2)modN.Same as Eq. (5), we can solve the parametersb,candd.The original medical image cryptosystem is a permutation–substitution architecture [8], shown inFig. 1. In Fig. 1, the permutation process is based on bit-level permutations one of which uses different permutation keys, and then all bit-planes are combined again. Bit-level permutation uses discrete cat map withmround iterations, i.e., Eq. (2) withm≥1. The substitution process is a pixel-level substitution. The whole permutation and substitution process hasnrounds,n≥1. Both permutation key and substitution key are unchanged in each round. In Fig. 1,Mis a plain-image,C(n)its output encrypted image, andP(t)andC(t)are thet−thround permutation-image and substitution-image, respectively,t=1,2,…,n. Throughout the paper, we adopt uppercase symbols stand for images. For example, an imageP(t)of sizeN×N, its pixel values can be written as one-dimensional arrayp(t)(j),j=0,1,…,N2−1, or two-dimensional arrayp(t)(j1,j2),j1,j2=0,1,…,N−1.Assume that a plain-imageMis an eight-bit gray image of sizeN×N. The detailed permutation process is described in the following three steps.Step 1. The plain-imageMis separated into 8 independent bit-planes, one of which is a binary image, i.e., its pixel values are 0 or 1.Step 2. Each of eight bit-planes is shuffled by using Eq. (2) with different parameterspi,qi,i=0,1,…,7. These parameters are secret permutation key. According to Eq. (2) known the parameterspi,qi,mand the parametersai,bi,ci,diare equivalent for the permutation process, soai,bi,ci,diare called as the equivalent permutation key.Step 3. The permutation-imagePis obtained by combining all the eight shuffled bit-planes together.The pixel-level substitution process consists of the following three steps:Step 1. Iterate logistic map and generate chaotic sequence(7)z(j)=μz(j−1)(1−z(j−1)),z(j)∈[0,1],μ∈[3.57,4],where the initial valuez(0)and the parameterμare the substitution key.Step 2. The keystream sequencek(j)is generated by(8)k(j)=floor(z(j)×1014)mod256,j=0,1,2,…,N2−1,where the operation offloor(x)denotes the largest integer not larger thanx.Step 3. Encrypt the pixel values of the imagePfrom left to right, from top to bottom, and generate a cipher-imageC. The pixel valuesc(j)ofCandp(j)ofPsatisfy(9)c(j)=p(j)⊕k(j)⊕c(j−1),j=0,1,…,N2−1,where the symbol⊕denotes bitwise XOR andc(−1)is a constant.In this section, we first present the differential cryptanalysis of the whole cryptosystem. The analysis shows that any cipher-images can be successfully recovered by an equivalent permutation key, when a plain image and its cipher-image are known. Our goal of cryptanalysis is to get the equivalent permutation key. We will present how to obtain it by using differential cryptanalysis at three different encryption rounds:n=1,n=2andn≥3.In this subsection, we will analyze the whole cryptosystem by differential cryptanalysis. First, we consider a situation with one-round encryption, i.e.,n=1. Take two plain-imagesM1andM2, and obtain corresponding cipher-imagesC1(1)andC2(1). According to Eq. (9) we have the following pixel values(10)c1(1)(j)=p1(1)(j)⊕p1(1)(j−1)⊕…⊕p1(1)(0)⊕k(j)⊕k(j−1)⊕…⊕k(0)⊕c(−1),j=0,1,…,N2−1.We calculate the differential imageΔC(1)=C1(1)⊕C2(1)and its pixel valuesΔc(1)(j)=c1(1)(j)⊕c2(1)(j). Inserting Eq. (10) into the equality above yields(11)Δc(1)(j)=p1(1)(j)⊕p1(1)(j−1)⊕…⊕p1(1)(0)⊕p2(1)(j)⊕p2(1)(j−1)⊕…⊕p2(1)(0).We define the permutation operation as the following formP1(1)=Fp(M1)=Fp8(M1−8)‖Fp7(M1−7)‖…‖Fp1(M1−1), whereM1−iandFpi(M1−i)stand for theithbit plane of the imageM1and its permutation plane, the symbol‖a concatenation of different bit-planes. Define the differential of two permutation-imagesP1(1)andP2(1),ΔP(1)=P1(1)⊕P2(1), so(12)ΔP(1)=Fp8(ΔM−8)‖Fp7(ΔM−7)‖…‖Fp1(ΔM−1),whereΔM=M1⊕M2=ΔM−8‖ΔM−7‖…‖ΔM−1. The pixel values ofΔP(1)are written as(13)Δp(1)(j)=Δm−8(i8,j)‖Δm−7(i7,j)‖…‖Δm−1(i1,j),Δp(1)(j−1)=Δm−8(i8,j−1)‖Δm−7(i7,j−1)‖…‖Δm−1(i1,j−1),…,Δp(1)(0)=Δm−8(i8,0)‖Δm−7(i7,0)‖…‖Δm−1(i1,0).From Eq. (13) we can see that the different positions of eight bit-planes map to a same position after bit-plane permutations.Considered Eqs. (12) and (13), Eq. (11) is converted to the following form:(14)Δc(1)(j)=Δm−8(i8,j)⊕Δm−8(i8,j−1)⊕…⊕Δm−8(i8,0)‖Δm−7(i7,j)⊕Δm−7(i7,j−1)⊕…⊕Δm−7(i7,0)‖……‖Δm−1(i1,j)⊕Δm−1(i1,j−1)⊕…⊕Δm−1(i1,0)Reshaping Eq. (14), we have(15)ΔC(1)=ΔC−8(1)‖ΔC−7(1)‖……‖ΔC−1(1)=gp8(ΔM−8)‖gp7(ΔM−7)‖……‖gp1(ΔM−1)where the function definedgpi(⋅)is an operation related to the permutation of theithbit-plane. From Eqs. (14) and (15) we can see the differential cipher-imageΔC(1)is completely irrelevant to the keystream sequencek(j), and only determined by the differential plain-imageΔM.Second, we analyze two-round encryption, i.e.,n=2. We calculate the differential imageΔC(2)=C1(2)⊕C2(2)and its pixel valuesΔc(2)(j)by(16)Δc(2)(j)=p1(2)(j)⊕p1(2)(j−1)⊕…⊕p1(2)(0)⊕p2(2)(j)⊕p2(2)(j−1)⊕…⊕p2(2)(0).Defining the differentialΔP(2)=P1(2)⊕P2(2), from Eq. (12) we have(17)ΔP(2)=Fp8(ΔC−8(1))‖Fp7(ΔC−7(1))‖…‖Fp1(ΔC−1(1)).Considering Eqs. (16) and (17), we have the following equation similar to Eq. (14)(18)Δc(2)(j)=Δc−8(1)(i8,j)⊕Δc−8(1)(i8,j−1)⊕…⊕Δc−8(1)(i8,0)‖Δc−7(1)(i7,j)⊕Δc−7(1)(i7,j−1)⊕…⊕Δc−7(1)(i7,0)‖......‖Δc−1(1)(i1,j)⊕Δc−1(1)(i1,j−1)⊕…⊕Δc−1(1)(i1,0)Same as Eq. (15), we also have(19)ΔC(2)=ΔC−8(2)‖ΔC−7(2)‖……‖ΔC−1(2)=gp8(ΔC−8(1))‖gp7(ΔC−7(1))‖……‖gp1(ΔC−1(1))=gp8(gp8(ΔM−8))‖gp7(gp7(ΔM−7))‖……‖gp1(gp1(ΔM−1))=gp82(ΔM−8)‖gp72(ΔM−7)‖……‖gp12(ΔM−1)From Eq. (19) we can see the differential cipher-imageΔC(2)is a result of differential plain-imageΔM.Similarly forn=1andn=2, the differential cipher-imageΔC(n)for n-round encryption is denoted by(20)ΔC(n)=gp8n(ΔM−8)‖gp7n(ΔM−7)‖……‖gp1n(ΔM−1).From Eq. (20) we can draw the following three conclusions:(i)Operation on each bit-plane of a differential cipher-image is independent, thus can be analyzed independently even with eight bit-planes.The differential cipher-image is completely irrelevant to the keystream sequence, which means no correlation between the differential cipher-image and the substitution key. Thus we do not need to consider the substitution key, which make it possible to greatly reduce the key space of the cryptosystem. This is the key point we want to emphasize in our cryptanalysis.The differential cipher-image is a result of the differential plain-imageΔMand the operationgpi(⋅). IfM2is a blank image all pixel values of which are zero, the differential cipher-image is only dependent onM1and the permutation key. By choosing specialM1, we may find the permutation key.Through the conclusion (ii), we know that the differential cipher-image of the cryptosystem only depends on the permutation key instead of on the substitution key. Assuming an attacker knows the permutation key, a plain-imageM2and its cipher-imageC2(n), any cipher-imageC1(n)can be recovered as the following:Step 1. Calculate the differentialΔC(n)=C1(n)⊕C2(n).Step 2. ReconstructΔP(n)fromΔC(n). According to Eq. (9) we have(21)Δc(n)(j)=Δp(n)(j)⊕Δc(n)(j−1),j=0,1,…,N2−1and it leads to(22)Δp(n)(j)=Δc(n)(j)⊕Δc(n)(j−1),j=0,1,…,N2−1.Reshape the sequenceΔp(n)(j)and obtainΔP(n).Step 3. ComputeΔC(n−1)by the inverse permutation of Eq. (2) with the permutation key or its equivalent key.Step 4. Repeat the steps 2 and 3ntime and get the final differential imageΔM. Since the differentialΔM=M1⊕M2, the original plain-image can be recovered as the formM1=ΔM⊕M2.Throughout the analysis above, we can conclude that once the permutation key or its equivalent key is obtained, the cryptosystem is fully broken. In Section 5, we will give a simulation result. Our next focus is how to obtain the equivalent permutation key at different round encryption.First choose two plain-imagesM0andM1,ΔM=M0⊕M1, obtain the corresponding cipher-imagesC0(1)andC1(1), and their differential imageΔC(1)=C0(1)⊕C1(1). We restructure the differential permutation imageΔP(1)=P0(1)⊕P1(1)through Eq. (22). ComparingΔP(1)andΔM, we will find the possible permutation relationship of Eq. (2).Here, we give an example,M0andM1are two special images.M0is a blank image andM1a blank image with only one nonzero pixelm1(0,1)=1such that we only focus on the lowest bit-plane. Obviously, there is only a nonzero pixel inΔP(1), which can be computed throughΔC(1). Assuming that the nonzero pixelΔp(1)(l)=Δp(1)(x1′,y1′),l=x1′×N+y1′, we establish one mapping relationship of Eq. (2), i.e., from(0,1)to(x1′,y1′). We solve Eq. (2), and obtainb0=x1′andd0=y1′. If we take another blank plain-imageM2with one nonzero pixelm2(1,0)=1, we haveΔp(1)(x2′,y2′)=1, soa0=x2′,c0=y2′.To obtain the permutation parameters of all bit-planes, we may choose special nonzero pixel values,m1(0,1)=2i,m2(1,0)=2i,i=1,2,…,7. Using the differential analysis above, we further get the other bit-plane permutation parametersai,bi,ci,di. To extract all the permutation parameters, we need only 17 trials (17 chosen plain-images) and that will be less time consuming.In this case, we adopt two-way differential comparison, forward differential and backward differential analysis, to obtain the equivalent permutation key.We take two special plain-images, a blank imageM0and a blank imageM1with one nonzero pixelm1(0,1)=1, and obtain their cipher-imagesC0(2)andC1(2), respectively. Then we construct the backward differential imageΔP(2)from Eq. (22).From Eq. (9) we calculate the forward differentialsΔc(1)(j)=c0(1)(j)⊕c1(1)(j)by(23)Δc(1)(j)=p0(1)(0)⊕p1(1)(0)⊕p0(1)(1)⊕p1(1)(1)⊕…⊕p0(1)(j)⊕p1(1)(j).Due to chosenM0andM1, note that the permutation imagesP0(1)andP1(1)are a blank image and a blank image with one nonzero pixel, respectively. Assume that the nonzero pixel ofM1is mapped top1(1)(x1′,y1′),l=N×x1′+y1′, wherel=0,1,...,N2−1. From Eq. (23) we conclude that the differential sequence is(24){Δc(1)(j)=0,j=0,1,…,l−1,Δc(1)(j)=1,j=l,l+1,…,N2−1.Since the permutation operation of the cat map does not change the number of the pixel value differential “0” inΔP(2)andΔC(1), we obtain the numberlfromΔP(2), and further the position(x1′,y1′)by the equalityl=N×x1′+y1′. Finally we establish one mapping relationship from(1,0)to(x1′,y1′)in Eq. (2). By choosing another plain-imageM2with one nonzero pixelm2(1,0)=1and by obtaining the corresponding equalityl′=N×x2′+y2′, we have another mapping relationship from(1,0)to(x2′,y2′). According to the two mapping relationships above, we extract four parametersa0,b0,c0,d0. As the same in Section 4.2, we use 17 chosen plain-images to get all permutation parameters.If the encryption roundsn≥3, the differential cryptanalyses in Sections 4.2 and 4.3 are useless. Therefore, we propose an analysis method called double differential cryptanalysis comparison (DDCC). To facilitate the following analysis, we define two sets of special plain imagesMαandMβ, each of which hasN2images.Mα={Mα,0,Mα,1,…,Mα,N2−1},Mα,0=(1,0,0,…,0),Mα,1=(0,1,0,0,…,0),…,Mα,N2−1=(0,0,…,0,1).Mβ={Mβ,0,Mβ,1,…,Mβ,N2−1},Mβ,0=(1,1,…,1),Mβ,1=(0,1,1,…,1),Mβ,2=(0,0,1,1,…,1), …,Mβ,N2−1=(0,0,…0,1). Define a blank imageM0. After 1-round encryption, the corresponding cipher-images for the two plain-imagesM0andMα,iareC0(1)andCα,i(1),0≤i≤N2-1.Using the forward differential analysis of Eq. (23), we computeΔCα,i(1)=Cα,i(1)⊕C0(1)and it leads to(25)ΔCα,i(1)=Mβ,j=Mβ,j⊕M0=ΔMβ,j,0≤i,j≤N2−1.Note thatΔCα,i(1)must be equal to one ofΔMβ,j,j∈[0,N2−1], and this is a basis for the DDCC method to be used. If knowing the indexesiandjin Eq. (25), similar to the analysis of Section 4.3 we would establish one mapping relationship of Eq. (2). However, the problem is that the relationship betweenMα,iandMβ,jis uncertain. To find the relationships, the characteristics of corresponding available cipher-images differentials would be analyzed.Here, we use DDCC method to extract the fixed relationships ofMα,iandMβ,j. First we compute two cipher-image differential sets. TakingM0andMα,i, we calculaten-roundcipher-image differentialsΔCα,i(n)=C0(n)⊕Cα,i(n),i=0,1,...,N2−1. Similarly,ΔCβ,j(n)=C0(n)⊕Cβ,j(n)forM0andMβ,i,j=0,1,...,N2−1.Due to Eq. (25) and unchanged permutation and substitution keys, the differentialsΔCα,i(t)=ΔCα,i(t)⊕ΔC0(t)andΔCβ,j(t)=ΔCβ,j(t)⊕ΔC0(t)have the following relationships(26)ΔCα,i(2)≜ΔCβ,j(1),ΔCα,i(3)≜ΔCβ,j(2),...ΔCα,i(n)≜ΔCβ,j(n−1),where the symbol≜denotes completely equivalent relationship. We can obtain the differentialΔCβ,j(n-1)fromΔCα,i(n)through Eq. (26) and the differentialΔPβ,j(n)fromΔCβ,j(n)by Eq. (22). In addition, since the permutation process fromΔCβ,j(n-1)toΔPβ,j(n)does not change the numbers of differentials “0” and “1”, we may detect the permutation relationship of Eq. (2). Next we will give the detailed steps.First, construct the differentialsΔPβ,j(n)fromΔCβ,j(n)i=0,1.,…,N2−1. Second, compare the differentialsΔPβ,j(n)toΔCα,i(n), and then classifyMα,ifromΔCα,i(n)andMβ,jfromΔPβ,j(n). Letlα,iandlβ,jstand for the numbers of the pixel differentials “0” inΔCα,i(n)andΔPβ,j(n), respectively.Lα={lα,0,lα,1,lα,2,…},Lβ={lβ,0,lβ,1,lβ,2,…}, where0≤lα,i,lβ,j≤N2−1.Lα≡Lβ.Since the numbers of the pixel differential value “0” inΔCα,i(n)andΔPβ,j(n)remain unchanged, iflα,i=lβ,jand they are unique in the sets ofLαandLβ, a one-to-one relationship betweenMα,iandMβ,jis established. Third, based onMα,iandMβ,jabove and Eq. (24), one mapping relationship of Eq. (2) is found. Usually we can find several pairs oflα,iandlβ,jsuch thatlα,i=lβ,jare unique in the sets ofLαandLβ. After having enough one-to-one pairs oflα,iandlβ,j, we will extract all the parametersa0,b0,c0,d0. In Section 5, simulation examples will be given.In the sets ofMαandMβ, if we change the nonzero pixel values from 1 to2i,i=1,2,…,7, using DDCC we can extract the secret permutation parameters of the ith independent bit-plane, i.e.,ai,bi,ci,di. This double differential analysis need16N2+1image trials, usually smaller than that of brute force attackN16. IfN=512, the difficulty of DDCC is222+1, much less than that of brute force attack2144.In this section, first we will simulate how to find the equivalent permutation key of Eq. (2) by DDCC method. Second, we will present how a cipher-image can be recovered if we know the equivalent permutation key.The parameters of the original cryptosystem serve as(27)n=20,m=13,p0=11,q0=59,μ=3.97986509862838,x0=0.64246417998982.Choosing128×128images, we will test215+1images to extract the equivalent permutation key of the lowest bit-plane. Adopting the parameters of Eqs. (27) and (2) leads to(28)[11159650]13mod128=[1131234374]After215+1plain-mages, i.e.,214Mα,i,214Mβ,iandM0, utilizing DDCC method we can find 50 one-to-one relationships betweenMα,iandMβ,i, as shown inTable 1. We take two pairs of them and have the following mapping relationship, from(79,68)ofMα,10180to(11,109)ofMβ,1517, from(5,113)ofMα,753to(0,1)ofMβ,1. By Property 3 of Section 2, we know that the parametera0hasgcd((x1y2−x2y1),N)solutions. Asgcd((79×113−5×68),128)=1, only one unique solution exists and it is(29)a0≡(79×113−5×68)63×(11×113−5×68)mod128=113.Adopting the mapping relationship above, we recover four parameters of Eq. (2),a0=113,b0=123,c0=43andd0=74, which coincide with formula (28).To show the generality of the simulation above, we repeated the experiments for other different parameters.Table 2 lists the number of one-to-one mapping relationship betweenMα,iandMβ,jfor different parametersp0,q0,nandm. The simulation results show that our DDCC method is effective.Next, we will present how a cipher-image can be recovered if we know the equivalent permutation key, one plain-image and its cipher-image. Use the same parameters of Eq. (27) for all bit-planes for simplicity. Two plain-imagesM1andM2, and the corresponding cipher-imageC1(20)andC2(20)are shown inFig. 2 (a), (b), (c) and (d), respectively, whereM1is unknown andM2known. First, compute the cipher-image differentialΔC(20)=C1(20)⊕C2(20), as shown in Fig. 2 (e). RestructureΔP(20)fromΔC(20)by Eq. (22), and then determineΔC(19)by the inverse permutation of Eq. (2) with the recovered parameters Eq. (28). Similarly repeating the process above 20 times, we finally obtain the differential plain-imageΔM=M1⊕M2fromΔP(1)by the inverse permutation of Eq. (2), as shown in Fig. 2(f). KnownM2, the cipher-imageC1(20)is correctly recovered, as shown in Fig. 2(g).According to the design principle of confusion and diffusion for encryption algorithms, a bit-level cat map shuffling algorithm proposed by Fu et al. can achieve good confusion effect, compared to a pixel-level cat map shuffling algorithm. However, Fu׳s cryptosystem cannot resist against differential cryptanalysis, and the weaknesses of the scheme are as follows. (i) In the permutation process, the bit-level shuffling of 8-bit planes is independent, which does not achieve good confusion effect between bit-planes. (ii) The diffusion effect of the algorithm mainly depends on the substitution process, and previous cipher-pixel only affects subsequent cipher-pixels through Eq. (9). Utilizing Eq. (9), it is easy to get the differential permutation-image of the last encryption round through the differential cryptanalysis of Eqs. (10)–(12). (iii) The algorithm uses same secret key in each round, including the permutation and the substitution keys. Unchanged round-key leads to similar diffusion and confusion effect. (iv) The diffusion rule of Eq. (9) in substitution process is quite vulnerable to differential cryptanalysis, as differential cipher-images eliminate the keystream component. This problem makes the key space of the cryptosystem greatly reduced.In addition, the authors do not consider that the cat map of Eq. (2) has the following adverse features. The pixel point (0, 0) always maps to itself, which is bad for confusion effect. The iteration number of the cat map has periodicity, thus it is necessary to choose an appropriate iteration. The cycle length is related to the image size and the parameterspandq. InTable 3, we list some cycle lengths for different image sizes.

@&#CONCLUSIONS@&#
