@&#MAIN-TITLE@&#
Generation of representation models for complex systems using Lagrangian functions

@&#HIGHLIGHTS@&#
A methodology to obtain numerical model system by finite elements.Improvement of a previous numerical methodology developed by the authors.Rigidization method, via the definition of a potential energy on possible models.Use of Lagrangian formulation for the system’s evolution.

@&#KEYPHRASES@&#
Modelling,Finite elements,Complex systems,Lagrangian,Minimal action,Representation model,

@&#ABSTRACT@&#
In this article, a new methodology is presented to obtain representation models for a priori relation z=u(x1,x2,…,xn) (1), with a known an experimental datasetzi,xi1,xi2,xi3,…,xini=1,2,…,p.In this methodology, a potential energy is initially defined over each possible model for the relationship (1), what allows the application of the Lagrangian mechanics to the derived system. The solution of the Euler–Lagrange in this system allows obtaining the optimal solution according to the minimal action principle. The defined Lagrangian, corresponds to a continuous medium, where a n-dimensional finite elements model has been applied, so it is possible to get a solution for the problem solving a compatible and determined linear symmetric equation system.The computational implementation of the methodology has resulted in an improvement in the process of get representation models obtained and published previously by the authors.

@&#INTRODUCTION@&#
In the study and modelling of complex systems, as the natural ones, in which the number of relationships and variables can be great, it is important to get modelling methodologies that help to the knowledge of the system and allow the use in hybrid form. One of the biggest problems in this kind of problems is the a priori knowledge of the relationships between the components from which are possible to obtain experimental data. The methodology developed in this work is a revision of that presented in [8,9], resulting in a new theoretical basis and a substantial improvement in the applicability and the algorithmic efficiency.The available methodologies to study these problems is so enhanced and complemented by the previous studies, published in the scientific works [2–4,10,11].Lagrange’s formulation of classic mechanics [5], allows the study of physical systems in a formal mode, introducing an abstraction level on the considered problems. To this, the definition of a Lagrangian function over the space of states of a system is needed, where that state is defined by a set of variables, named generalized variables (q1,…,qN), and their temporal derivates, named generalized velocities(1)L(q1,…,qN,q̇1,…,q̇N,t).Temporal evolution of a system is determined by the minimal action principle, where the action between two states A and B is defined as the integration of this function over the possible trajectories defined on the space of states from A to B:(2)SAB=∫ABL(q1,…,qN,q̇1,…,q̇N,t)dtThe application of this minimal action principle gives the Euler–Lagrange equations:(3)δSAB=0→∂L∂q-ddt∂L∂q̇=0Equilibrium points for a system can be obtained from its Lagrangian, because in the equilibrium, the system does not depend of the generalized velocities nor time, so the equations to apply are:(4)∂L∂q=0,with:L(q1,…,qN)In conservative systems, in which existing forces derive from a potential, the Lagrangian function has the form:(5)L(q,q̇,t)=T(q̇)-V(q,q̇,t)where T and V are the kinetic and the potential energies.The Lagrangian function can be generalized to systems with infinite degrees of freedom, these are systems where the number of state variables is infinite. As an example, continuous systems, where the value of a functionϕ(x)in each point of a defined domain is used as the generalized coordinate:(6)L(ϕ(x,t),∂xϕ(x,t),∂tϕ(x,t),t)The corresponding Euler–Lagrange equations for these systems take the form:(7)∂L∂ϕ-∂x∂L∂(∂xϕ)-∂t∂L∂(∂tϕ)=0When consider the points of equilibrium, as in Eq. (4), the problem is equivalent to solve the equation:(8)∂L∂ϕ=0,whereL=L(ϕ(x))In the study of representation models for the relationship z=u(x1,x2,…,xn),one of this n-dimensional models will be generated for a functionφ:[0,1]d→R, which consists in an interpolation of a function defined on a finite element model [12], called geometric model,Ω⌢⊂Ω,Φ:Ω¯→R, with Φ(x)=ϕ(x) over a finite set of points ofΩ⌢, called nodes, whose coordinates are {ξi}, in the same way that was defined on the methodology [8,9].The interpolation is constructed with the union of local interpolations, having several possibilities to make this construction. The generation of a n-dimensional geometric model from the finite elements model is done from the definition of the type of the elements and the number of nodes defined on a generic element, as the different types of numbering and coordinates defined, and its relationships.The elements defined in dimension n are n-dimensional hypercubes. Each segment of the generic hypercube is locally transformed in the interval [−1,1], so it can be identified with the domain [−1,1]d. In each one of these elements are defined 2dnodes.Complexity of the geometric model is the number of intervals in which each segment [0,1] is divided. Therefore, the original domain [0,1]nis divided in a set of cnhypercubics subdomains.The elements have a global index between 0 and cn−1, and with a similar argument, a global index for the nodes between 0 and (c+1)n−1 is defined.In the hypercubic elements defined and selected, the form functions are:(9)N(in,in-1,…,i1)(n)s1,…,sn-1,sn=N(in)(1)(sn)·N(in-1,…,i1)(n-1)s1,…,sn-1The model function EF is defined from the interpolation using the values in the nodes {ui}.(10)EF(x)=∑mi∈MIDuM0e+mi·Nmi(xs)In this paper, the experimental dataset values are normalized to the domain D=[0,1]d. As the goal is to study the equilibrium points, the static form of the Lagrangian function will be used:(11)L(ϕ(x))Given a discretization of this domain, D, the function ϕ(x) in any point can be represented from the form functions of the element to which the point lies, as:(12)ϕ(x)=∑iNi(x)·ϕ(ζi)where ζiare the coordinates of the element’s nodes. Representing by uithe value of the function in each node, that is ui=ϕ(ζi),the last expression can be written as:(13)ϕ(x)=∑iNi(x)·uiSo, the Lagrangian of the continuous media changes to a Lagrangian that depends of a finite number of generalized coordinates:(14)L(ϕ(x))→L(ui)And the equations of Euler–Lagrange are converted in:(15)∂L∂ui=0In 2-dimensional models, the representation model can be visualized as an elastic surface that deforms to approach itself to the experimental data, as can be shown in Fig. 1.Using of finite elements method, suppose to have a deformable mesh, where the finite elements are squares with aristae of length h. The problem is defined in this way by the distance to the experimental data, depending of the set of values {ui}.The mesh vertex can be considered as an elastic material that allows defining potential energies associated to the deformation.DefinitionEnergy of flexionAn energy associated to the flexion in a node along the direction given by the vector ei=(0,…,1,…,0) is defined in the following equation, and you can see its explanation in Fig. 2.(16)VFi(k)=kflex·(m+-m-)2=kflex·ui+1-2·ui+ui-1h2=k’flex·(ui+1-2·ui+ui-1)2Total flexion energy for the kth node is defined as the sum of the flexion energy in all the directions:(17)Vflex(k)=∑iVFi(k)and the flexion energy on the mesh:(18)Vflex=∑kVflex(k)DefinitionEnlargement energyThe enlargement energy in the vertex that join nodesuianduj, is defined as:(19)Velong(i,j)=kelong·ui-ujh4=kelong′·(ui-uj)4Fig. 3shows the enlargement process.The total enlargement energy is defined as the sum of the enlargement energy of all vertex of the system:(20)Velong=12∑i≠jVelong(i,j)where the ½ factor takes account the double count that appears for each pair of nodes.DefinitionEnergy associated to the distribution of points.Given the geometric model presented in Section 1.2, in each point of the domain its value is obtained from the interpolation functions defined in (13). Particularly, in the experimental data the estimated values can be obtained:(21)ϕ(x[k])=∑iNi(x[k])·uiComparing the values from (21) and the experimental ones, an error function can be defined in the next form:(22)ε[k]=∑kϕ(x[k])-y[k]2In the methodology developed in the studies [8,9], the representation models were obtained from the minimization of (22). The quadratic expression seems the form of the elastic potential energy for a spring that would join the experimental values and the mesh.The potential of the point distribution is defined as:(23)V=∑k∑iNi(x[k])·ui-y[k]2The potentials defined in (18), (20), and (23) contributes to give a total potential energy:(24)U(u0,u1,…,uN)=V+c1·Welong+c2·WflexIn the most part of problems, where the rugosity is small enough, the not dominant terms inΔuhcan be neglected, giving:(25)U(u0,u1,…,uN)≈V+c·WflexExpression (24) can be used to define a Lagrangian, which gives the equilibrium equations:(26)∂L∂q=0→∂U∂ui=0Likewise, the derivate of each term of the potential has the form:(27)∂∂uiU=∂∂uiV+c·∂∂uiWflex=0and that is:(28)2·∑k∑jNj(x[k])·uj-y[k]·Ni(x[k])+c·2·(ui+1-2·ui+ui-1)·(-2)+c·2·(ui-2·ui+1+ui+2)·1++c·2·(ui-2-2·ui-1+ui)·1=0because the ith. Node appears in the flexion energy as a central node, a left node or a right node. Grouping the unknown terms into the left:(29)∑j∑kNi(x[k])·Nj(x[k])·uj+c·∑jΘij·uj=∑ky[k]·Ni(x[k])where Θijcorresponds to the jth node in the derivate∂∂uiWflex.In matrix form, the system can be written as:(30)N·U+c·Θ·U=Ythat is a symmetric and determined system (physical analogy assure us the existence of a solution).When c is equal to 0, the equations corresponding to the methodology presented in [8,9] are obtained.Although at the beginning the explications have been developed from the 2-dimensional case, none of the definitions or expressions depend of this bidimensional character, so the obtained equations, and particularly the form of the system, is valid for any dimension.

@&#CONCLUSIONS@&#
One of the previous method characteristics were that in most part of the cases the system was undetermined. By this reason two operations were used:Variable selection – In the set of equations, those with a better numerical behavior were selected using a RRQR algorithm [1,7]. This process increased the computational cost and converted the matrix in a quasi-dense matrix, what making more difficult the solving process.Rigidization – To complete the set of equations was necessary to create new relations between the variables. That was done by rigidization. This rigidization process was conceptually equivalent to give elastic properties to some nodes, adding the equations derived in this article to these nodes. The unreasoned assignation of these properties and the fact of the (in any way) arbitrary selection of some nodes and no selection of the rest made not entirely satisfactory the theoretical background of the methodology.Moreover, the new method results in a linear equation system where the matrix is symmetric, making easier the solving process, using master algorithms as the preconditioned conjugate gradient [6].In the most part of the cases, the system matrix is a sparse or quasi-sparse matrix, lowering the memory waste.Calculations have been made on a laptop with 2GHz processor and 3GB of RAM.As was commented in [8,9], the natural next step is to extend the methodology to environments of high performance computing (HPC), with software parallelization, enhancing the applicability of the methodology.On the other side, the huge size of the linear system and the characteristics of the problem, open the possibility of the study of alternative methods of resolution, as the heuristic ones.Another side to study is the influence of the value of the binding constant between the potentials energies, c, to search the existence of some optimal value for this parameter.