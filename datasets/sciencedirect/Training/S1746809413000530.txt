@&#MAIN-TITLE@&#
Application of neural networks for the prediction of cartilage stress in a musculoskeletal system

@&#HIGHLIGHTS@&#
The finite element method is computationally intensive, rigid body models cannot predict stress.Neural network models are created to predict stress from multibody reaction forces.Neural networks learn from finite element and multibody model solutions.End goal: musculoskeletal models that simultaneously predict muscle force and cartilage stress.

@&#KEYPHRASES@&#
Finite element analysis,Musculoskeletal simulation,Neural networks,Cartilage stress,

@&#ABSTRACT@&#
Traditional finite element (FE) analysis is computationally demanding. The computational time becomes prohibitively long when multiple loading and boundary conditions need to be considered such as in musculoskeletal movement simulations involving multiple joints and muscles. Presented in this study is an innovative approach that takes advantage of the computational efficiency of both the dynamic multibody (MB) method and neural network (NN) analysis. A NN model that captures the behavior of musculoskeletal tissue subjected to known loading situations is built, trained, and validated based on both MB and FE simulation data. It is found that nonlinear, dynamic NNs yield better predictions over their linear, static counterparts. The developed NN model is then capable of predicting stress values at regions of interest within the musculoskeletal system in only a fraction of the time required by FE simulation.

@&#INTRODUCTION@&#
Numerical simulations can enhance experimental results by predicting values that cannot be directly measured and by providing insight into the interaction of parts within a physical system such as the musculoskeletal system [1–4]. Computational simulations have become an important tool in improving our understanding of ligament injury, tissue damage, and prosthetic design, especially when in vivo measurement of internal forces is not available.Musculoskeletal modeling based on reasonable assumptions and simplifications, such as treating the knee as a hinge joint or representing the ligaments as one-dimensional elastic elements [5], is common as it provides good prediction of system kinematics and net joint loading at an acceptable computational cost. The multibody (MB) method has been successfully used to model joint behavior [6–12], especially as it pertains to joint kinematics and contact forces. Recently anatomically based MB joint models have been implemented in body level musculoskeletal simulations [1,7]. However, because each part in the model is treated as a rigid body, MB models do not have the ability to predict stress or strain distribution which can be the determinant factor in joint failure or cartilage degeneration [13,14].The finite element (FE) method has a major advantage over the MB approach in evaluating the musculoskeletal system as it can provide tissue level information such as contact pressures and tissue stress. However, this advantage comes at the price of prolonged initial stage of model building and meshing, increased demand on the computational resource, and inevitably extended overall simulation time. Although it is very difficult to conduct FE simulations of the whole musculoskeletal system [15], much work has been performed in FE simulations involving systems with limited number of bone/cartilage/ligaments [16,17] and results have been in good agreement with experimental data.Concurrent prediction of tissue level stress within body level musculoskeletal simulations would provide a valuable tool for understanding the relationships of muscle force and tissue level loading. Presented here is a method that utilizes data-driven neural network surrogate models to predict tissue level stress from MB system forces. These models are constructed and calibrated using contact forces from MB simulations and stress components from FE analyses.Artificial neural networks (NN) have been successfully used in various biomechanical modeling scenarios [18]. NNs are universal function approximators that use supervised learning to create the desired nonlinear input–output relationship (black-box modeling). Given that, NNs learn from provided examples (data driven modeling) [19], it is important to have adequate and representative data to describe all aspects of the intended function between input and output. This ensures proper convergence of the learning algorithm that is used to find NN model parameters. Though NN training, typically performed using a form of gradient descent algorithm, is time and compute-intensive, the trained NN model executes much more efficiently.In the presented work, inputs to the NN surrogate model are rigid body reaction forces resulting from cartilage–cartilage contact and outputs are the resulting von Mises tissue stress. The goal of this work is to generate initial datasets from both MB and FE simulations and identify data-driven surrogate models that are capable of describing the stress patterns within the system. Ultimately, the developed surrogate models will be embedded in MB musculoskeletal simulations for concurrent prediction of muscle force and cartilage tissue stress.To demonstrate the concept of creating a NN surrogate model that captures tissue level behavior, a simplified model of the tibio-femoral joint (Fig. 1) is built in both the FE and MB framework to emulate the typical contact interaction between the femur cartilage and tibia cartilage [1,6–8,18]. The model includes a tibia plateau with a contour derived from medical images of a human subject and a semispherical femoral condyle with a radius of 20mm. The femoral condyles can be closely approximated with ellipsoid shapes [20] and the radius of the condyle used in this study is consistent with previous studies that have measured the arc radius of the medial condyle to be in the 19–23mm range [21–23].Two independent models (MB and FE) were created for this study. Both models share the same loading, boundary, and geometries. The MB simulation yields contact forces between interfaces and reactions forces at the joints. The FE simulation can provide information on stresses and strains (not used in this study) in any region of interest.The geometry of the model is shown in Fig. 2. The simulated femoral condyle (henceforth referred to as simply “condyle”) was modeled as a semi sphere with a radius of 20mm. The tibia cartilage was modeled as a 40mm by 40mm square with a flat bottom surface. The contour of the top surface was mapped from the medial side of a human tibia cartilage geometry acquired from magnetic resonance imaging [6]. The material properties and contact modeling parameters used in this study are listed in Table 1.Given the importance of adequate and representative training and validation data for NN surrogate modeling, 25 simulations were conducted representing all the combinations from five loading levels (250–750N at a uniformly increasing step of 125N) and five motion paths (Fig. 3) applied to the center of the indenter. Each simulation ran for 2s with a time step of 0.04s. The condyle was first pressed down vertically until the load was ramped up to its maximum in 0.1s. The load was then maintained while the x and z displacement controlled motion was enforced at the center of the condyle through the rest of the simulation. The condyle was free to move in the vertical y-axis.The MB models (Fig. 4) were created in ADAMS (Santa Ana, California) which conducts nonlinear rigid body dynamic simulations in a fraction of the time compared to FE.In the MB models, a deformable contact was defined between the condyle and cartilage cells using the following equation:(1)Fc=kδexpc+B(δ)δ˙where Fcis the contact force, k represents the contact stiffness, δ is the contact penetration depth, expcrepresents the contact force exponent, B(δ) is a damping coefﬁcient andδ˙is the penetration rate. The values of the parameters for Eq. (1) (listed in Table 1) are the results of tuning to match the maximum vertical displacement of the condyle in ADAMS to its FE counterpart for the case with 500N load and motion path No. 1.In order to find the reaction forces on the bottom surface, the cartilage geometry is diced into 20 by 20 cells each with a 1mm×1mm cross-section using a custom ADAMS macro. Each of the 400 cells is a separate part connected to the “bone” via a fixed joint. Deformable contacts using (Eq. (1)) are then defined between each cell and the condyle. The time history of the reaction forces at each fixed joint in the x, y, and z directions are calculated and used as inputs to NN surrogate models.FE simulations (Fig. 5) were conducted in LS-DYNA_v971 (the mesh was generated using ABAQUS v10.2 (Simulia Inc., Providence, RI)). The model consisted of three parts – the tibia cartilage (blue), the condyle bone (red), and the condyle cartilage (green). The average thickness of the condyle cartilage which consisted of two layers of elements (Fig. 5) was 3.4mm. Both the cartilages and condyle bone were modeled as elastic solids and their material properties are listed in Table 1.Overall, the cartilage was meshed using 8326 hexahedral elements. Contact was defined between the two parts (condyle and cartilage). The second order element formulation was adopted to avoid spurious zero energy mode shape (hourglassing) during the explicit dynamic simulation and to ensure accuracy of the results. A mesh convergence study was conducted and it was determined that convergence was achieved using the mesh density in Fig. 5 in which the elements on the cartilage had an average length of about 1mm. The nodes on the bottom surface of the tibia cartilage were fixed in all three directions. The motion control in the x and z direction and the load in the y direction were applied at the center of the top surface of the condyle bone.After the simulation is complete, the time history data of the von Mises stress within each of the 1600 elements forming the top layer of the tibia cartilage were extracted. Then the 1600 elements were evenly divided into 400 square blocks each of which was made of 2×2 adjacent elements. This was done in order to match the total number (400) of cartilage cells in the ADAMS simulation. The output data of the FE simulations were the time history of the maximal von Mises stress within each of the 400 blocks.NNs have been used to create fast surrogate models [24,25] through nonlinear data-driven curve fitting (reaction force-tissue stress system identification). The correlation coefficient r was used to identify how well the desired (MB–FE generated ground truth) vs. the actual (NN-predicted) output correlate. An r value closer to 1 indicates a good correlation and thus modeling, whereas an r closer to 0 signifies poor correlation and modeling.Since the type and structure of surrogate models directly affect their learning and generalization capacity [19,26], several linear regression, static feed-forward networks, and (dynamic) focused time delay neural networks (fTDNN) with different number of neurons were examined. Each neural network surrogate model is composed of an input, a hidden, and an output layer. We mainly examined one hidden layer configurations given the forthcoming modeling accuracy figures, combined with our desire to minimize computational complexity, as well as the reported theoretical and practical adequacy of neural networks with a single hidden layer [19,26–28]. Input and output dimensionality (number of input and output nodes of the NN surrogate) were 1200 and 400, respectively, since there were 400 cartilage cells with three reaction forces as the input and one von Mises stress as the desired output at each cell. The number of nodes in the hidden layer was chosen using a semi-exhaustive approach to find the optimal hidden layer size according to the following principles: it is known that the curve fitting and modeling versatility of a NN is increased with its hidden layer size. On the other hand, while improving the accuracy on training datasets, such hidden layer enlargement reduces the generalization power of the NN model, i.e., it reduces its accuracy over previously unseen validation and test datasets [19,26–28]. Given that there are no rigorous theoretical methods for finding the optimal hidden layer size, we started from a smaller hidden layer size and incrementally added nodes to it until a higher r and lower MSE was achieved. More specifically, for static NNs, the number of hidden layer nodes was increased from 10 to 200 in increments of 10. For the fTDNNs, several models with 130–320 hidden layer nodes in increments of 10 and tap delay lengths from 1 to 10 were examined. Eventually, the networks with higher r and lower MSE were found.Given the nonlinear regression nature of the problem at hand, the NN nonlinearities (transfer functions) were set as sigmoidal for hidden layer and linear for output layer nodes [26]. Linear regression results were also calculated as a simple baseline for comparison purposes when evaluating various NN surrogate model outputs with those of the gold standard in this study, i.e., the FE reference dataset.In the end, we combined the results of the NNs with the best correlation coefficient values in the form of simple average (sum rule) committees [26,29] as well as stacked generalization fusion. Such combinations produce better results, especially for unseen data. In the sum rule, the idea is to average model outputs so that the uncorrelated portions of their errors cancel out. Stacked generalization is a more advanced combination method that uses supervised learning to train the combining function for merging the output of participating models into the desired output. It usually uses a training set different from those used to train individual models. A network is trained with all the targets obtained from a few selected networks with the best fits and provided to fusion function. The stacked generalization output usually has less error than the individual networks.

@&#CONCLUSIONS@&#
The study here demonstrates a methodology that fully utilizes the efficiency of the MB simulation and the versatility of the NN prediction. Only limited cases of FE simulation need to be run to generate stress/strain data along with the corresponding force data in MB simulations to train and build NN models. The constructed NN models use future force inputs from MB simulations under various different loading scenarios to predict the stress/strain distribution in those situations. The computation time and cost are drastically reduced through this process as compared to the traditional FE analysis.