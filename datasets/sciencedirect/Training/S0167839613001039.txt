@&#MAIN-TITLE@&#
Spline-based meshfree method with extended basis

@&#HIGHLIGHTS@&#
Extension is performed to stabilize the basis of spline-based meshfree method.Nitsche's method was employed to impose essential boundary conditions.The validity of the proposed method was proved by error analysis.

@&#KEYPHRASES@&#
Spline-based meshfree method,WEB-spline,Extended B-spline,Isogeometric analysis,NURBS,

@&#ABSTRACT@&#
In this work, an extension has been performed on the analysis basis of spline-based meshfree method (SBMFM) to stabilize its solution. The potential weakness of the SBMFM is its numerical instability from using regular grid background mesh. That is, if an extremely small trimmed element is produced by the trimming curves that represent boundaries of the analysis domain, it can induce an excessively large condition number in global system matrix. To resolve the instability problem, the extension technique of the weighted extended B-spline (WEB-spline) is implemented in the SBMFM. The basis functions with very small trimmed supports are extrapolated by neighboring basis functions with some special scheme so that those basis functions can be condensed in the solution process. In order to impose essential boundary conditions in the SBMFM with extended basis, Nitsche's method is implemented. Using numerical examples, the presented SBMFM with extended basis is shown to be valid and effective. Moreover, the condition number of the system is well-managed guaranteeing the stability of the numerical analysis.

@&#INTRODUCTION@&#
Many researchers have exercised a great deal of effort towards reducing the computational costs of creating analysis models from Computer Aided Design (CAD) models. Some researchers focused on achieving an efficient framework for computational simulation by unifying the basis functions involved through the simulation. Kagan et al. proposed an integrated mechanically-based CAE system (Kagan et al., 1998, 2003; Kagan and Fischer, 2000). Natekar et al. (2004) introduced constructive solid analysis based on the Constructive Solid Geometry (CSG) technique. They employed the partition of unity-based approximation to deal with the overlapping regions. Recently, Hughes et al. (2005), Cottrell et al. (2009) proposed an isogeometric analysis framework that integrates CAD and Finite Element (FE) analysis. So far, Non-Uniform Rational B-spline (NURBS) is mainly employed in isogeometric analysis since NURBS has been widely used as the basis function in CAD (Hughes et al., 2005; Cottrell et al., 2009). Using the same basis function of NURBS in FE analysis, the mesh generated in the CAD system can be used directly, and geometries are exactly preserved throughout the analysis. Moreover, the NURBS basis function has a controllable high continuity (higher thanC1) across element boundaries (Cottrell et al., 2007), and is more robust regarding mesh distortion (Lipton et al., 2010). Due to the various advantages that NURBS provides, isogeometric analysis is implemented in various fields of computational mechanics, including structural vibration (Cottrell et al., 2006), fluid–structure interaction (Bazilevs et al., 2008), shape and topology optimization (Seo et al., 2010a, 2010b; Ha et al., 2010; Wall et al., 2008), shell structure analysis (Uhm and Youn, 2009; Kiendl et al., 2009; Nguyen-Thanh et al., 2011; Benson et al., 2010), and contacts (Temizer et al., 2011, 2012; J.-Y. Kim and S.-K. Youn, 2012; Lu, 2011).For the seamless integration of CAD systems and NURBS-based isogeometric analysis, Kim et al. introduced trimmed surface analysis (Kim et al., 2009, 2010). The trimmed surface analysis in an isogeometric analysis framework, directly utilized trimming information imported from the CAD system, and has been successfully applied to problems involving complex topologies. Exploiting the concept of trimmed surface analysis, Kim and Youn introduced the spline-based meshfree method (SBMFM) (H.-J. Kim and S.-K. Youn, 2012). The point of this method was to build an analysis domain by trimming operations so that the boundaries are represented by trimming curves only in a single NURBS patch (in two-dimensional cases). By doing so, the NURBS patch is employed as a background mesh. Unlike conventional meshfree methods, the SBMFM has no ambiguity for constructing basis functions and for describing domain boundaries. The basis function for analysis is readily constructed using the NURBS background mesh. Above all, domain boundaries are easily constructed using the trimming operations. The SBMFM has been applied to geometrically nonlinear problems and demonstrated its effectiveness.There is a numerical method that similarly employs a spline background mesh: weighted extended B-splines (WEB-splines) proposed by Höllig et al. (2001, 2005), Höllig and Reif (2003), Höllig (2003). The good characteristic of the WEB-splines is its well-conditioned system matrix. In Fig. 1, the box indicates one of the elements with a very small area. This element can cause numerical instability due to the large condition number of the global system matrix. That is, a relatively small contribution to the global system matrix amplifies the condition number of the system. This is a chronic problem of methods with a structured background mesh, such as immersed (or embedded) boundary method (Peskin, 1972, 2002), fictitious domain method (Glowinski et al., 1994) and immersed B-spline techniques (Embar et al., 2010; Schillinger and Rank, 2011; Sanches et al., 2011; Rank et al., 2012; Rüberg and Cirak, 2012); that have becoming popular recently in conjunction with isogeometric analysis. Generally, a large condition number is to be avoided since this induces a highly sensitive numerical solution. Also, when iterative solvers are used, a numerical solution can be inaccurate showing a slow convergence. To resolve this problem, in the WEB-splines, the basis function whose contribution is relatively small is merged with neighboring basis functions, i.e., the neighboring basis functions are extended. As a consequence, a solution field is represented by extended basis functions whose contribution is not so small, and the condition number of the global system matrix is stabilized; preserving an optimal approximation order when smooth weight function is used (Höllig et al., 2001, 2005; Höllig and Reif, 2003; Höllig, 2003).In the SBMFM, it is highly probable that trimmed elements with very small areas can exist as WEB-splines. Thus, if we can extend the basis function in the SBMFM, the analysis will be more robust numerically. In this work, the extension of WEB-splines was adopted to stabilize the SBMFM. The proposed approach will be named ‘extended SBMFM’ which is SBMFM with extended analysis basis.The difference between the WEB-splines and extended SBMFM is that extended SBMFM does not employ weight functions to describe the analysis domain boundary; whereas the extended SBMFM employs trimming information imported from the CAD system to describe the analysis domain boundary. As a consequence, a different scheme for imposing essential boundary conditions should be considered for the extended SBMFM, where basis functions do not vanish outside the analysis domain due to a non-weighted spline space of the extended SBMFM. In this work, Nitsche's method is employed and it will be discussed in Section 3.2.The remainder of this paper is organized as follows. In Section 2, the basics of B-splines and NURBS will be briefly reviewed and trimmed surface analysis will be introduced. In Section 3, the extension process will be introduced and the essential boundary condition imposition scheme, which is appropriate for extended SBMFM, will be discussed. In Section 4, the validity of the extended SBMFM will be illustrated using verification examples. Finally, conclusions and future work will be discussed in Section 5.In this work, a recurrence formula will be employed to construct the B-spline basis functions (Piegl and Tiller, 1997). A non-decreasing sequence of real numbers U is the only information we need in order to construct B-spline basis functions.(1)U={u0⋯un+p}.In Eq. (1), U is the knot vector, and each component of U is called a knot. The number of control points is n; while p is the degree of B-spline basis functions. If the intervals between knots are equal, the knot vector is labeled uniform. If the intervals are not equal, it is a non-uniform knot vector. Moreover, the knot vector is said to be open if its first and last knots have multiplicities ofp+1; in all other cases, it is said to be closed.TheithB-spline basis function of thepth-degree, denoted asNi,p(u), is defined as(2)Ni,0(u)={1ifui⩽u<ui+10otherwise,(3)Ni,p(u)=u−uiui+p−uiNi,p−1(u)+ui+p+1−uui+p+1−ui+1Ni+1,p−1(u).The characteristics of the B-spline basis functions are:(1)Partition of unity:∑i=0nNi,p(u)=1.Non-negative basis functions:Ni,p(u)⩾0.Local support in the interval:Ni,p(u)=0, if u is not in the interval [ui,ui+p+1).Higher order continuity:Cp−kcontinuous, where k is the multiplicity of the knot.B-spline curves are defined as linear combinations of coordinates of control points and their basis functions,(4)C(u)=∑i=0nNi,p(u)Pi,wherePiis the coordinate of the control point andNi,p(u)the corresponding B-spline basis function.Similarly, B-spline surfaces are defined as follows,(5)S(s,t)=∑i=0n∑j=0mNi,p(s)Nj,q(t)Pi,j.NURBS is a generalized form of B-spline. Its knot vector is non-uniform, and the basis function is a rational form that can be controlled by the weight of each control point. Therefore, shape control can be done with both control point coordinates and weight values. NURBS basis function, denoted asRi,p(u), is defined as:(6)Ri,p(u)=Ni,p(u)wi∑j=0nNj,p(u)wj,wherewiis the weight of each control point. NURBS curves and surfaces are constructed in the same way; the only difference is that B-spline basis functions are replaced by rational B-spline basis functions.Due to the tensor product nature of NURBS, multiple patches are needed to model the body of arbitrary topologies and this is a very cumbersome task. In the CAD system, a simple and convenient modeling scheme, the trimming technique, has been widely used to model bodies with complex topologies. The trimming technique requires a minimum number of patches, and represents complex topologies by cutting-off unnecessary regions from existing patches. Since the conventional NURBS-based isogeometric analysis could not handle the trimming information created in the CAD system, the remodeling process should be accompanied going against to the spirit of isogeometric analysis. In Fig. 2, an example of the inefficient remodeling process for NURBS-based isogeometric analysis is shown. When we model the geometry in Fig. 2, it is more natural to perform the modeling by employing the trimming technique as in Fig. 2(a). However, in the conventional NURBS-based isogeometric analysis, the inefficient remodeling process (the conversion process into multiple patches) should be done to eliminate the trimming information as in Fig. 2(b).To remedy the inefficiency of the conventional NURBS-based isogeometric analysis, the trimmed surface analysis (Kim et al., 2009, 2010) is proposed. In this method, the trimmed surface information created in the CAD software is directly imported and utilized in a numerical analysis. A brief introduction to trimmed surface analysis is presented here with a simple example. More details are available in Kim et al. (2009, 2010).For the analysis domain shown in Fig. 3, the trimmed elements, marked with shading, are searched first. After that, the trimmed elements are classified into three groups by checking the number of their vertices included in the void region. Various trimmed elements can be decomposed into triangular cells and triangular cells with one NURBS curve, as shown in Fig. 4. For the integration of triangular cells with one NURBS curve, the numerical integration can be done exactly by employing a NURBS-enhanced integration scheme (Sevilla et al., 2008). For normal triangular cells, and non-trimmed elements, numerical integration can be done with the conventional NURBS-based isogeometric analysis scheme that employs general Gaussian quadrature rules. If the trimmed element does not belong to the types illustrated in Fig. 4, a quad-tree refinement is carried out until all the sub-cells belong to the types in Fig. 4. Consequently, the numerical integration of the whole analysis domain is possible.Based on the trimmed surface analysis, H.-J. Kim and S.-K.Youn (2012) introduced the spline-based meshfree method (SBMFM). In the SBMFM, the domain boundaries are represented by trimming curves only. The main concepts of SBMFM, as shown in Fig. 5, are that the NURBS surface is employed as a background mesh, and the trimming curves can move freely with complete independence from the background mesh (NURBS surface). If the described concept is implemented as a solution strategy for nonlinear problems which require iterative analysis with consecutive geometry update, mesh distortion problems can be effectively circumvented due to the independent behavior of the boundary trimming curves.The SBMFM inherits the advantages of isogeometric analysis and meshfree method. The aspects of SBMFM can be summarized as follows:•No ambiguity in representation of geometry: The geometry of the analysis domain is explicitly represented by the trimming curves while the conventional NURBS-based isogeometric analysis describes an analysis domain by the patch boundaries of NURBS surface. Moreover, in contrast to classical meshfree methods, smooth or sharp geometries can be exactly represented and DOFs are not to be aligned along the analysis domain boundaries.No ambiguity in basis function construction: The basis functions of SBMFM are readily constructed by spline basis functions. No additional stabilization parameters or schemes are required due to the properties of the spline basis functions.CAD friendly format: The analysis model in SBMFM is created in the CAD system by trimming operations and directly imported to SBMFM. Therefore, SBMFM is compatible with CAD systems.In this section, the formulation of SBMFM with extended basis will be described by employing the extension concept of non-uniform WEB-splines (Höllig and Reif, 2003). Throughout the formulation, the following Poisson problem will be considered.(7)−Δu=finΩu=udonΓd∇u⋅n=gnonΓn,where Ω is the analysis domain,Γdthe domain boundary with the Dirichlet boundary condition andΓnthe domain boundary with the Neumann boundary condition. The solution for the problem in Eq. (7) is approximated as Eq. (8).(8)u(x)≈uh(x)=∑k∈KRk(x)Pk.In Eq. (8),u(x)refers to the field that we want to approximate, whileuh(x)refers to the numerical solution field approximated with linear combination of basis functions and its coefficients. For example, a displacement field will be approximated with spline basis functions and displacements of control points. The subscript k means whole the basis functions used in the numerical solution. Next, for the basis extension process, the basis functions of k will be classified into inner basis functions (i∈I) and outer basis functions (j∈J). Therefore, the union of inner basis functions and outer basis functions is the whole basis function set.(9)K≡I∪J.The classification criterion is simple. If only trimmed elements are contained in local support of a basis function, it is an outer basis function; otherwise it is an inner basis function.In Fig. 6, the classification of inner and outer basis functions is illustrated. For the conceptual explanation, the lower left corners of the local support of basis functions are marked with dots and circles and they represent the basis functions. The local supports of some basis functions are illustrated as a shaded region (quadratic basis functions have 3-by-3 knot spans as local support). As shown in Fig. 6, all the basis functions are classified into inner and outer basis functions. As a consequence, Eq. (8) can be rewritten as:(10)u(x)≈uh(x)=∑k∈KRk(x)Pk=∑i∈IRi(x)Pi+∑j∈JRj(x)Pj.In Eq. (10), the numerical solution field is now separated by inner basis functions parts and outer basis function parts. The concept of the extension in WEB-spline is to merge the basis function of small support (outer basis functions) with neighboring basis functions (inner basis functions). Therefore, the extension process is to relate the outer basis functions parts to inner basis functions parts with some representation process of the outer basis function part. After the extension, the numerical solution field (Eq. (10)) can be expressed with the inner basis function parts only as Eq. (11).(11)u(x)≈uh(x)=∑k∈KRk(x)Pk=∑i∈I[Ri(x)+∑j∈Jei,jRj(x)]Pi,(12)Rie=Ri(x)+∑j∈Jei,jRj(x).The extended basis function (Rie) is now defined in Eq. (12). Therefore, if we can compute appropriate extension coefficients (ei,j), the numerical solution field can be expressed with extended inner basis function parts, so that we can acquire a stabilized, well-conditioned analysis basis.Höllig et al. (2001, 2003) introduced a method to compute the extension coefficient for uniform spline basis functions as well as non-uniform spline basis functions (Höllig and Reif, 2003). Since the CAD system exports the trimmed surface information in non-uniform spline basis functions, employing the extension process for non-uniform extension is a more appropriate approach. For the computation of the extension coefficient, we follow the procedures introduced in Höllig and Reif (2003).Let $ denote a spline space spanned by spline basis functions (span(R)). The dual functional for the spline basis function, known as de Boor–Fix functional (de Boor and Fix, 1973; de Boor, 2001), is defined as follows, for anyf∈$,(13)f=∑kλkfRk.Where,(14)λkf≡∑l=0p(−1)p−lψk(p−l)(αk)f(l)(αk),(15)ψk(αk)≡1p!∏l=1p(uk+l−αk)αk∈[uk,uk+p+1).In Eq. (14),αkis the arbitrary point in the local support of the k-th spline basis function as in Eq. (15),ukdenotes the k-th component of the knot vector and p is the order of the spline basis function (as in Section 2.1). The superscripts in parentheses denote the degree of differentiation (order of derivatives). Using the information in Eq. (15), we can explicitly compute the value of the functional in Eq. (13). The defined dual functional satisfies a bi-orthogonality property with spline basis functions (λiRi′=δi,i′) (de Boor and Fix, 1973; de Boor, 2001). Therefore, the meaning of Eq. (13) can be interpreted as a reproduction of f with a dual basis, and the bi-orthogonality property of the defined dual functional is still valid for extended basis functions (Rie) as in Eq. (16) sinceλiRj=0.(16)λiRie=λi(Ri+∑j∈Jei,jRj)=λiRi+∑j∈Jei,jλiRj=λiRi.The existence of the dual functional implies linear independence, i.e., extended basis functions form a basis for the spline space $.Consequently, we can rewrite Eq. (13) with extended basis functions as:(17)f=∑iλifRie=f.Substituting Eq. (11) and interchanging sums, we obtain the following:(18)uh(x)=∑i∈IλiuhRie=∑i∈Iλiuh[Ri+∑j∈Jei,jRj]=∑i∈I(λiuh)Ri+∑j∈J[∑i∈Iei,j(λiuh)]Rj.The outer basis function part of Eq. (18) is equal to∑j∈J(λjuh)Rj. Therefore,(19)∑i∈Iei,j(λiuh)=(λjuh).However, in the extension process, the function we want to represent is the outer spline basis function by using the combination of inner basis functions. So, we substituteuh⇒Ri,j, whereRi,jdenotes the inner spline basis function evaluated at the local support of the outer spline basis function. By the bi-orthogonality of the dual functional, the left hand side component of Eq. (19) becomesλiRi,j=λiRi=δi,i. Finally we can acquire the extension coefficient as follows,(20)ei,j≡λjRi,j.For multivariate cases, such as surfaces or volumes, extension coefficients can be conveniently computed as products of univariate ones. In Eq. (21), m is ‘2’ for surfaces and m is ‘3’ for volumes.(21)ei,j=∏ν=1mλjνRiν,jν.In the WEB-splines, essential boundary conditions are automatically satisfied due to weight functions. That is, all the basis functions vanish outside the analysis domain due to its weighted spline space. In the SBMFM; however, the NURBS curves imported from the CAD system describe the analysis domain. Generally, the basis function employed in the extended SBMFM is non-interpolating, i.e., the extended basis functions do not satisfy the Kronecker delta property. Therefore, imposing an essential boundary condition on a trimming curve is not a straightforward process as in conventional FEM. This kind of problem is commonly encountered in meshfree methods that employ non-interpolating basis functions. To impose essential boundary conditions in this situation, there exist two classes of approaches (Fernández-Méndez and Huerta, 2004).1.Modify the basis functions related to essential boundary conditions.Modify the weak form of the system to satisfy essential boundary conditions.The first approach modifies the basis functions, i.e., the basis functions related to essential boundary conditions are modified locally to satisfy the Kronecker delta property (Rüberg and Cirak, 2012; Kang and Youn, 2001); or the FEM meshes are coupled at the analysis boundary to impose essential boundary conditions (Krongauz and Belytschko, 1996). Using this approach, essential boundary conditions can be imposed successfully, but consistency of the analysis can be destroyed. Furthermore, this approach goes against the spirit of isogeometric analysis, which is the use of the same basis function in both modeling and analysis. Since the SBMFM inherits the concept of isogeometric analysis, the first approach is not an acceptable choice for a scheme to impose essential boundary conditions.The second approach modifies the weak form of system. Examples of the second approach are the Lagrange multiplier method, penalty method and Nitsche's method. The Lagrange multiplier method is the most widely used since its implementation is not so complicated and converges well with the optimal rates. In the previous version of SBMFM (H.-J. Kim and S.-K. Youn, 2012) and trimmed surface analysis (Kim et al., 2010), the Lagrange multiplier method was employed to impose essential boundary conditions. There, trimming curve basis functions (univariate NURBS basis functions) were used as the interpolation spaces for the Lagrange multipliers, and the Lagrange multipliers were defined at control points of the trimming curves. The discrete equations of the weak form with Lagrange multiplier can be written as:(22)(KATA0)(uλ)=(fb).Matrix K denotes the stiffness matrix, and matrix A denotes the relation between displacement field interpolation space and Lagrange multiplier interpolation space. In the present work, the basis functions are extended, which leads that the basis of the displacement field interpolation space and associated stiffness matrix (K) are extended. For the consistency of the system in Eq. (22), matrix A also shall be extended. Unfortunately, the Lagrange multiplier interpolation space is not extended. Thus, applying the Lagrange multiplier method in the present work is not possible due to the undesirable relation between matrices K and A.The other choices are the penalty method and Nitsche's method. Both methods are adequate to impose essential boundary conditions in the present method, since they do not introduce new variables to system. The well-known problem of the penalty method is that it uses a large penalization parameter to impose essential boundary conditions, and this magnifies the condition number of the stiffness matrix. That is exactly the opposite effect from the basis function extension process we perform here. Thus, the penalty method is excluded from the candidates for an essential boundary condition imposition method. In the present work, Nitsche's method is employed to impose the essential boundary condition. This method (Nitsche, 1970) is formulated as follows:(23)∫Ω∇v⋅∇udΩ−∫Γdv∇u⋅ndΓ=∫ΩvfdΩ+∫ΓnvgnndΓ.Eq. (23) is the weak form of the model problem Eq. (7), where v is a test function. Note that the second term in LHS is not ignored in Nitsche's method since the test function v does not vanish at the analysis domain boundary. To have a symmetric bi-linear form, we add the term−∫Γdu∇v⋅ndΓin the LHS of Eq. (23):(24)∫Ω∇v⋅∇udΩ−∫Γdv∇u⋅ndΓ−∫Γdu∇v⋅ndΓ=∫ΩvfdΩ+∫ΓnvgnndΓ−∫Γdud∇v⋅ndΓ.Now, the bilinear form Eq. (23) becomes symmetric as in Eq. (24). Note that the corresponding term is added to RHS for equilibrium. Next, to make Eq. (24) a symmetric positive-definite bilinear form, the stabilizing (penalizing) term is added to both sides,(25)∫Ω∇v⋅∇udΩ−∫Γdv∇u⋅ndΓ−∫Γdu∇v⋅ndΓ+β∫ΓdvudΓ=∫ΩvfdΩ+∫ΓnvgnndΓ−∫Γdud∇v⋅ndΓ+β∫ΓdvuddΓ,where the β in Eq. (25) is a positive scalar parameter. As in the case of penalty method, the condition number of the system increases with parameter β. However, it is known that not so large a parameter is needed to impose the essential boundary condition in practice (Fernández-Méndez and Huerta, 2004). For the estimation of the minimum value of parameter β, from the work of Gribel et al. (2002), the maximum eigenvalue of the following generalized eigenvalue problem is used.(26)Xv=λYv,where,(27)X=∫Γd(nTDB)T(nTDB)dΓY=∫ΩBTDBdΩ.The n denotes the normal vector at the analysis domain boundary, B the strain-displacement matrix and D the constitutive matrix. In this work, the generalized problem above is solved element-by-element during the assembly process of global stiffness matrix (Embar et al., 2010). This approach reduces the matrix size of the generalized eigenvalue problem (Eq. (26)) and the parameter can be estimated adaptively at an element level. Therefore, the computation time can be reduced and the condition number of the global stiffness matrix can be minimized. In this work, 3 times the maximum eigenvalue from the generalized eigenvalue problem is used as parameter β.For natural boundary conditions, they are automatically satisfied by weak solutions, i.e., the trial functions do not have to satisfy any constraints in (25). The imposition of the natural boundary condition only needs multiplication with a test function.

@&#CONCLUSIONS@&#
In this work, the extended SBMFM is presented. We focused on the potential instability of conventional SBMFM due to extremely small trimmed basis functions. To get rid of the instability, the extension of the basis function was performed. Through the extension process, the basis functions with small remaining support were merged with neighboring basis functions, so that the instability could be eliminated. In order to impose essential boundary conditions, Nitsche's method was employed. Nitsche's method imposes essential boundary conditions properly, and the condition number of the global system matrix is managed as well. From the verification examples, it is shown that the present method has the same approximation order as conventional SBMFM. The validity of the present method was proved by error analysis, and the comparison was made with solutions from commercial software. Also, the CAD friendly property of SBMFM was shown by importing a model in the CAD system directly using IGES files. In this paper, the extended SBMFM was applied to linear two-dimensional elastic problems. The application of the presented method in nonlinear analysis; with consecutive trimming curve evolution, will be essential to clearly demonstrate its usefulness. Therefore, one of our further research directions will be the implementation of a pure Eulerian formulation for the extended SBMFM. In the analysis with Eulerian formulation, some special and expensive schemes were employed to capture and track the free surface of the analysis domain such as pseudo-concentrations (Thompson, 1986), volume of fluid or volume of solid methods (Hirt and Nichols, 1981; Al-Athel and Gadala, 2011), and level set methods (Chang et al., 1996). Besides the methods, we believe that the trimming curves employed in this work, are candidates for capturing the free surface in the Eulerian formulation.