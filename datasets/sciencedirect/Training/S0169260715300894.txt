@&#MAIN-TITLE@&#
A new e-learning platform for radiology education (RadEd)

@&#HIGHLIGHTS@&#
Content creation is a very time demanding task.RadEd is a web-based framework with a smart editor to create image-based exercises.RadEd provides teachers functionalities to prepare more realistic cases.RadEd allows learners to make more specific diagnosis.

@&#KEYPHRASES@&#
E-learning,Content creation,Radiology education,

@&#ABSTRACT@&#
One of the key elements of e-learning platforms is the content provided to the students. Content creation is a time demanding task that requires teachers to prepare material taking into account that it will be accessed on-line. Moreover, the teacher is restricted by the functionalities provided by the e-learning platforms. In contexts such as radiology where images have a key role, the required functionalities are still more specific and difficult to be provided by these platforms. Our purpose is to create a framework to make teacher's tasks easier, specially when he has to deal with contents where images have a main role. In this paper, we present RadEd, a new web-based teaching framework that integrates a smart editor to create case-based exercises that support image interaction such as changing the window width and the grey scale used to render the image, taking measurements on the image, attaching labels to images and selecting parts of the images, amongst others. It also provides functionalities to prepare courses with different topics, exercises and theory material, and also functionalities to control students’ work. Different experts have used RadEd and all of them have considered it a very useful and valuable tool to prepare courses where radiological images are the main component. RadEd provides teachers functionalities to prepare more realistic cases and students the ability to make a more specific diagnosis.

@&#INTRODUCTION@&#
E-learning tools have become essential elements of teaching and learning methodologies. They provide functionalities that allow educators to improve communication and interaction between students, group development, personalised attention and access to material, amongst others. In addition, current technologies allow the creation of educational material that combines images, videos, text and sounds [1–4]. These materials can be interactively accessed by students providing feedback according to their actions. In this context, the student-centred methods where students have a more active role can benefit from e-learning tools and the large variety of activities that can be prepared. However, e-learning success depends not only on the functionalities provided by these new technologies but also on the provided contents. It is necessary that teachers prepare proper material for theory and practice to obtain the desired e-learning results. Content creation is a time demanding task that requires an extra effort by the teachers. We will focus our attention on content creation tools for topics that require a highly visual content such as radiology. Radiological images are essential not only for diagnosis but also for teaching and research. In radiology education, which occurs at the undergraduate, graduate, and postgraduate levels, students are exposed to a large number of radiological images to acquire and improve diagnosing skills [5,6]. In this context, the use of e-learning tools started twenty years ago [7–10] and it is an area of continuous development since it improves students’ problem-solving ability [11–14]. Currently, throughout the European medical institutions, e-learning is involved in 70% of the time in radiology teaching [15]. For a review of e-learning work in radiology education see [16–18].One of the key components of radiology education are the clinical cases used by teachers to introduce concepts and given to students to practice. Generally, these cases include radiological images, a description, and optionally questions for student assessment or self-study [19–27]. The case preparation requires collecting medical images from a PACS, extracting the informative tag attributes and denomination of the collected DICOM images, and presenting DICOM images in the proper format. The cases can be selected from personal collections or from common repositories. Focusing on the latter, there are websites created by official institutions such as the Radiological Society of North America (RSNA) or the European Society of Radiology (ESR) [28] which provide imaging databases and hypermedia documents with clinical cases. There are other websites such as AuntMinnie which provides radiologists and other professionals in the medical imaging industry a space to share and propose radiology cases, while offering some other functionalities such as a forum to communicate between the users related to the field of radiology [29]. Finally, there are more advanced websites that include functionalities for content creation. Some of them are presented in the following. MyPACS.net is a web-based authoring tool where radiologists can build on-line teaching file repositories to share and archive collections of images for using in slides or publications [24]. The E-Learning in Radiology project (ELERA) is a database of image-based teaching information with functionalities to create tests [30]. COMPARE Radiology is a web-based authoring software that provides anatomy cases with different levels of difficulty to students [25]. The Medical Imaging Resource Center (MIRC) project provides tools to share images and information for education, research, and clinical practice. It has an authoring tool to create radiology teaching files and other electronic documents in flexible formats with a common underlying structure [31]. Radiology ExamWeb is an application for teachers to create test exercises following a standardised format. Students can answer the tests obtaining feedback immediately [32]. The Key Image and Case Log Application (KICLA) is a software that works together with a PACS and allows users to store key images, image series and cine clips, in public or private folders that can be shared with other users [33]. RadStax, proposed by Colucci et al., is a web-based programme with an image viewer that allows the creation of labels on regions of interest of the images and also the introduction of information related to these labels. It also supports multiplanar visualisation and search functionalities [34]. In their work, they also defined the ideal resource for radiology teaching as the one that provides eight main features: (i) a fast and intuitive way to create labels for all anatomy of interest; (ii) the incorporation of basic information about each labelled region of interest; (iii) the ability to view all three planes of imaging simultaneously; (iv) a guide bar for localisation to facilitate three-dimensional understanding; (v) a search function; (vi) the ability to be easily incorporated into lectures; (vii) availability for independent study; and (viii) a means for self assessment. We agree with them that these are important features, but from our point of view, it is also important to make content creation as easy as possible.In this paper, we present a new web-based teaching framework for Radiology Education denoted RadEd. RadEd integrates a smart editor to create case-based exercises that support image interaction such as changing the window width and the grey scale used to render the image, taking measurements on the image, attaching labels to images, and selecting parts of the images, amongst others. The ability to perform these actions allows teachers to prepare more realistic cases and students to make a more specific diagnosis. The proposed framework also provides functionalities to prepare courses with different topics, exercises and theory material, and also functionalities to control students’ work. In Table 1, we compare our proposal with some of the previous described systems considering: content creation functionalities such as the focus of interest of the platform, the purpose for which has been created, the capability to search cases (categorisation), or the capability to support external resources and external links; learning functionalities such as the support to presentation-based cases, the types of exercises supported by the platform, the capability to support exercises with help messages for the students, the capability to modify exercises, or the support to assessment strategies; image interaction functionalities related to the operations that can be performed on an image such as 2D, 3D and multiplanar visualisations, the creation of labels and annotations, and basic operations; and general features such as the support to different browsers, or the dependency on a software, amongst others.To define the requirements of our application, we analysed how teachers prepare the lecture sessions and also the practical classes of the Medicine Faculty of our university. We interviewed different teachers and we observed that most of them use slide presentations to show the cases to the students. In all the cases, images take a main role. We also analysed the teacher's actions when preparing a case. We defined as our main objective the integration of all these actions in a single editor that is the key element of our framework. Below we describe the main considerations that were taken into account to design this editor.•First we considered that from each case we can create different exercises which always have an image. Then we considered the different actions that can be performed on these images. On the one hand, there are common actions provided by radiological viewers such as zooming and panning. On the other hand, there are actions that can be performed to add information to the image. For instance, the definition of labels to highlight some parts of the image, the definition of regions of interest, or the representation of lines and other marks on the image. Our editor integrates a viewer with functionalities to support all these actions.A case or topic should have the description including the history of the anonymous patient, and the case exercises should have the following parameters: the image modality (computed tomography, magnetic resonance…), its speciality (neuroradiology, traumatology…), and the target users (medical students, radiology residents, post-graduates…). Our editor includes options to enter all this information.To start we considered three types of exercises: (i) test questions and (ii) multiple-choice questions, which are common to the majority of e-learning environments, and (iii) questions that require some interaction with the image such as selecting a region, placing a label or placing an icon. Our editor supports these types of exercises and combinations of them. In addition, once an exercise is created, the teacher can assign it a level of difficulty.Our framework has to support the automatic correction of exercises. We have to design strategies to automatically correct exercises and give instant feedback to the students. Feedback is crucial in the process of problem solving since learning is promoted when students are guided in their problem solving by appropriate feedback [35–37]. The editor provides functionalities to enter the correct solution of the exercises and also the feedback that has to be returned, as well as some help messages to guide the student to the solution.To automatically assess students, the teacher has to define the assessment criteria. We have introduced parameters to automatically assign marks. For instance, whether or not errors have to discount on the final mark. In addition, we have created templates to reproduce the assessment criteria.Our framework has to support the definition of time restrictions. Teacher has the chance to add time restrictions to the exercises such as deadlines, number of attempts and expiration time once the exercise has been accessed.Note that no details about the image format have been given. For the sake of simplicity, in this first version of the platform we only support JPG/JPEG, PNG, GIF and BMP formats which are the most common. The support to DICOM files will be considered for the next version of the platform.Once the editor requirements were defined, we considered a second group of requirements related to the course organisation. In this case, we considered functionalities to make the organisation of a course easier. These functionalities are common to the majority of e-learning platforms.•Generally, exercises are related to different theory concepts. The teacher can consider exercises and then assign theory material to them, or can consider first theory and then assign exercises to it. We support both working modes. As theory material we consider the text introduced via menu or attached files.Focusing on the course management, we also provide functionalities to create groups of students, assign teachers to the groups, assign workbooks to the students and assign exercises to the workbooks. These actions are always performed by the responsible of the course.To follow up students’ work, we register all their actions in a database. In this way, the teacher can track their work and also obtain different types of statistics.In this section, we present the architecture of the platform with its main modules and its functionalities (described in Fig. 1). The platform supports three user types: students, teachers and administrator. To enter into the system a username and a password is required. Students can be enrolled in different courses and for each course the teacher can assign them a workbook with different exercises. For each course, there are one or more cases or topics, and each case or topic can contain theoretical content and different exercises can be associated to it. The platform has a database that registers all the exercises and the theory material entered into the platform. All exercises are assigned a set of labels that identify: exercise title, speciality, application area, difficulty level, description and creation date. The system database also registers information related to students such as assigned exercises or students’ solutions, and also information related to courses such as syllabus, material or exercises of each topic. Focusing on the platform modules, there is a course management module with the content and exercise management submodules used to enter theory content and exercises into the system, respectively, and register them into the database. There is also a workbook management module used to create the students’ workbooks. The exercises of the workbook are grouped by topics and can be added or removed at any moment. The course realisation module allows students the access to the workbook. For each exercise type, the platform provides a specific interface to enter a solution. This solution is registered into the system database and is sent to the correction module, which has a specific component for each exercise type. This module corrects on-line the proposed solution and provides immediate feedback about correction and, in case of errors, advises on how to correct them. Since all the information about exercises, solutions and corrections is stored in the system database, we designed a statistics module to query this database and extract information to follow students’ progress. This information can be used to carry out continuous assessment. In this case, we collect from the database quantitative data about students’ work such as number of errors, types of errors and time taken to complete the exercise. The teacher can use this information to control and monitor students’ progress through their workbook. Note that, in the current version of the platform, there is no connection between the statistics module and workbook management or course management modules, and all the creation responsibilities are left up to the teacher. However, for the next version of the platform, we plan to establish a connection between these modules to exploit all the information stored in the system database. Such a connection will allow us to automatically determine the required course level for the student based on a short evaluation of the student's pre-existing knowledge and proficiency before starting the course; or modify the system so that difficulties encountered by the students during the course would be detected by the system, and further exercises to improve on this particular difficulty could be prepared by the teacher for such an eventuality, and presented to the student only if she/he begins to struggle with a particular concept within the course.Our platform follows a client-server architecture. Fig. 2shows a general view of this architecture, with its main elements and its communication strategies. It has an Apache web server, and a MySQL database management system to store our data. To implement the interfaces and the logic of the application we used HTML5 and JavaScript, respectively.Finally, in Fig. 3, we present the schema of the database that has been designed to store all the required information. To describe it we are going to consider the main tables of this database. These are courses, users and exercises. Each course is assigned a type which is used to classify the course. For example, a thorax course belongs to the thorax type. Each course is assigned also a number of levels of difficulty, a set of categories, and a set of user types, features that are used to classify the exercises of the course. Courses are also assigned different topics, and these topics are assigned theory. Theory is represented as content pages or as links to external files stored in the topic and content page tables. Users are enrolled in the courses and they are assigned some exercises. These exercises are assigned a topic that is also a topic of the course. Exercises are assigned to students. They will propose solutions to the exercises that will be stored in the solution table. This table also stores the correct solution of the exercise entered by the user that has created the exercise. Since the system supports different types of exercises, we have specific modules to store them and their solutions. In Fig. 4, the structure designed to maintain the test and location exercises is shown.

@&#CONCLUSIONS@&#
In this article, we have presented RadEd, a web-based radiological education platform designed to complement teaching and learning of subjects that require the interaction with radiological images. Different to other e-learning platforms, RadEd has been designed to make content creation easier. With this purpose, it integrates a smart editor with advanced features to create customised exercises that support image interaction such as changing the window width and the grey scale used to render the image, taking measurements on the image, attaching labels to images, and selecting parts of the images, amongst others. The ability to perform these actions allows teachers to prepare more realistic cases and students to get a more interactive and efficient learning. The proposed framework also provides functionalities to prepare courses with different topics, exercises and theory material, and also functionalities to control students’ work. Different teachers have tested the tool and considered RadEd a very useful and valuable tool.Our future work will be centred on the creation of a new version of the platform that includes more advanced functionalities such as multiplanar reconstructions, 3D visualisations, support to DICOM files and new types of exercises. In addition, we plan to automate the course management and workbook generation processes by including information from the users stored in our database to provide intelligent tutoring systems functionalities. Finally, we want to extend our user study with a statistically significant sample of test users, both teachers and students.There are no conflicts of interests.