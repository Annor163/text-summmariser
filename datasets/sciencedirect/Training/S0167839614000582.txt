@&#MAIN-TITLE@&#
Local and global analysis of parametric solid sweeps

@&#HIGHLIGHTS@&#
A complete computational framework for solid sweep is proposed.A novel classification of sweeps into simple, decomposable & nondecomposable is given.A geometric invariant locates all the trim curves for nondecomposable sweeps.The funnel serves as the parametrization space for the envelope.

@&#KEYPHRASES@&#
Solid sweep,Boundary representation,Parametric curves and surfaces,Solid modelling,

@&#ABSTRACT@&#
In this work, we propose a structured computational framework for modelling the envelope of the swept volume, that is the boundary of the volume obtained by sweeping an input solid along a trajectory of rigid motions. Our framework is adapted to the well-established industry-standard brep format to enable its implementation in modern CAD systems. This is achieved via a “local analysis”, which covers parametrizations and singularities, as well as a “global theory” which tackles face-boundaries, self-intersections and trim curves. Central to the local analysis is the “funnel” which serves as a natural parameter space for the basic surfaces constituting the sweep. The trimming problem is reduced to the problem of surface–surface intersections of these basic surfaces. Based on the complexity of these intersections, we introduce a novel classification of sweeps as decomposable and non-decomposable. Further, we construct an invariant function θ on the funnel which efficiently separates decomposable and non-decomposable sweeps. Through a geometric theorem we also show intimate connections between θ, local curvatures and the inverse trajectory used in earlier works as an approach towards trimming. In contrast to the inverse trajectory approach of testing points, θ is a computationally robust global function. It is the key to a complete structural understanding, and an efficient computation of both, the singular locus and the trim curves, which are central to a stable implementation. Several illustrative outputs of a pilot implementation are included.

@&#INTRODUCTION@&#
This paper is motivated by the need for a robust implementation of solid sweeps in solid modelling kernels. The solid sweep is of course, the envelope surface of a solid which is swept in space by a family of rotations and translations. The uses of sweeps are many, e.g., in the design of scrolls,11Kinsley Inc., Timing screw for grouping and turning, https://www.youtube.com/watch?v=LooYoMM5DEo.in CNC machining verification (Seok and Nestler, 2011a, 2011b), to detect collisions, and so on. Constant radius blends can be considered as the partial envelope of a sphere moving along a specified path. As with blends (Heidi, 2012), it is expected that a deeper mathematical understanding of solid sweep will lead to its rapid deployment and use.A robust implementation of solid sweep poses the following requirements: (i) allow for input models specified in the industry-standard brep format, (ii) output the sweep envelope in the brep format, with effective evaluators, and finally, (iii) perform body-check, i.e., a check on the orientability, non-self-intersection, detection of singularities and so on. Thus there are some “local” parts and some “global” parts to a robust implementation of sweeps.It is generally recognized that the harder parts of the local theory is in the smooth case, i.e., when faces of the swept solid meet each other smoothly. For in the non-smooth case, the added complexity in the local geometry of the sweep is exactly that of a curve moving in 3-space. This is of course well understood, and offered by many kernels as a basic surface type. As far as we know, the global situation in the non-smooth case, i.e., the topological structure of edges and vertices (i.e., the 1-cage) of the sweep has not been elucidated, but is also generally assumed to be simpler than the smooth case. In fact, much of existing literature has focused on a smooth single-face solid, as the key problem (Abdel-Malek and Yeh, 1997; Blackmore et al., 1997, 1999).In this paper, we focus on the smooth multi-face solid. In Section 2, we start with the mathematical structure of the simple sweep (i.e., one without singularities and self-intersections). By the calculus of curves of contact, we set up a correspondence between the faces, edges and vertices of the envelope with those of the swept solid. This sets up the brep structure of the envelope. Next, we define the funnel as the parametrization space of a face of the envelope and construct a parametrization. We further elucidate the structure of the bounding edges/vertices of a face and provide several examples of simple sweeps from a pilot implementation.In Section 3, we examine the trim structures. The funnel of Section 2 will remain the ambient parametrization of the faces. The correspondence will help us define the trim areas and trim curves which must be excised to form the correct envelope. We then define the function ℓ and use it to define elementary and singular trim curves.In Section 4, we start with the decomposable sweep, i.e., one which may be partitioned into a suitable small collection of simple sweeps. In principle, the final envelope may be obtained by stable (transversal) boolean operations on this collection. We show that the trim curves so obtained are elementary. We next define a global invariant θ on the funnel, which is robustly and efficiently computable on the funnel and we show thatθ>0on (all) the funnels characterizes decomposability. This is an important step in the robust implementation of sweeps.In Section 5, we prove some of the geometric properties of θ such as its invariance and show that it is the determinant of the transformation connecting two 2-frames on the envelope, and is thus an easily computable function on the surface. We show that theθ=0curve on the funnel is also the singular locus for the envelope surface. We also show the relation of θ with the inverse trajectory (Blackmore et al., 1999).In Section 6, we analyse the singular trim curve, i.e., where ℓ may hit zero. We show that there is a correspondence between singular trim curves and the curves in the zero-locus of θ. We also show that (i) singular trim curves make contact with theθ=0curves, and (ii) excision at the singular trim curves excises all singularities of the envelope except at these points of contact. These points themselves are easily and robustly computed.In Section 7 we summarize what has been achieved, viz., that the decomposability and the zero-locus of θ complement to give a complete understanding of all trim curves. We illustrate this through some examples. Finally, we outline future work.Previous work. We now review existing related work. Perhaps the most elaborate proposal for the sweep surfaceEis the sweep envelope differential equations (Blackmore et al., 1997) approach, where the authors (i) assume that surface S being swept is implicitly given by a function f, and (ii) derive a differential equation whose solution is the envelope. For any point p on the initial curve of contact, a Runge–Kutta marching yields a trajectoryp(t)such that (i)p(0)=p, and (ii)p(t)∈C(t), the curve of contact at time t. These trajectories presumably serve as the iso-parametric linesp(t)=E(t,u(p)). Determining whetherp(t)is in the trimming set T is solved by using the inverse trajectory condition. This is implemented by using the second derivative of the functionϕ(x,t)=f(η(x,t)), where η is the inverse trajectory of point x.On the global front, the building of the envelopeEis done by selecting a collection of points on the initial curve of contact, developing trajectories, testing for membership in T and then using the points which pass to construct an approximation to the envelope. The drawbacks are clear. Typically, when S is presented as a brep, constructing an f which defines S is difficult. Furthermore, the choice of f seems to determine many computational and parametric issues, which is undesirable. The inverse-trajectory check remains poorly conditioned, especially when the second derivative of the functionϕ(x,t)w.r.t. t is zero, a situation which arises repeatedly. The structure of the envelope is unknown at a point where this derivative is zero. A global understanding of T and the nature of the trim curves is missing. A surface is fit through the points which pass the inverse trajectory test. Hence, an important feature, namely, G1-discontinuity along the trim curve on the envelope is missed out by this method. Further, since only sampled points are subjected to inverse trajectory test, some portion of the trimming set T may be left undetected.In Erdim and Ilies (2008), the authors give a membership test for a point in the object space to belong inside, outside or on the boundary of the swept volume. This is done by studying the interaction of inverse trajectory of the point in question with the solid at initial position. A curve-solid intersection is required to be computed for each point membership query which is computationally expensive, especially when the intersection is non-transversal, as noted by the authors. Further, this approach yields a procedural implicit representation of the envelope. In practice, a parametric representation is often desirable so that it is efficient to produce points on the envelope.In Erdim and Ilies (2007) the authors work with 2D shapes and 2D motions and quantify singularities using inverse trajectories. This work is based on the computational framework described in Erdim and Ilies (2008) and involves computing intersections between 2D curves and 2D shapes. The authors remark that this work can be extended to the 3-dimensional case involving intersections between 3D curves and 3D solids. This approach has the same drawback as Erdim and Ilies (2008), namely a high computational cost and the obvious limitation of dimensionality.In trimming self-intersections in swept volumes (Xu et al., 2008), the authors detect self-intersections by computing approximate curves of contact at a few discrete time instances which are then checked for intersections. Approximations are introduced at multiple levels, hence such an approach is not likely to meet the accuracy standards of most CAD kernels.In Rossignac et al. (2007), the authors approximate the given trajectory by a continuous, piecewise screw motion and generate candidate faces of the swept surface. In order to performing trimming, inverse trajectory is used. Limitation of this method is clear, namely, restricted class of motions along which the sweep occurs.In Zhang and Kim (2009), the authors present an error-bounded approximation of the envelope of the volume swept by a polyhedron along a parametric trajectory. Authors use volumetric approach using adaptive grid to provide guarantee about the correctness of the topology of the swept volume. This approach, however, cannot be readily extended to sweep smooth solids.In this section we formulate the boundary of the volume obtained by sweeping a solid M along a given trajectory h.We will use the boundary representation, also known as brep, which is a popular standard for representing a compact and oriented solid M by its boundary ∂M. The boundary ∂M separates the interior of M from the exterior of M and is represented using a set of faces, edges and vertices. See Fig. 1for the brep of a solid where different faces are coloured differently. Faces meet in edges and edges meet in vertices. The brep consists of two interconnected pieces of information, viz., the geometric and the topological. The geometric information consists of the parametric description of the faces and edges while the topological information consists of orientation of the geometric entities and adjacency relations between them.In this paper we consider solids whose boundary is formed by faces meeting smoothly. In the case when the faces do not meet smoothly, the added complexity in the local geometry of the sweep is exactly that of a curve moving in 3-space. This is of course well understood, and offered by many kernels as a basic surface type. The global geometry and topology for this case will be described in a later paper.Definition 1A trajectory inR3is specified by a maph:I→(SO(3),R3),h(t)=(A(t),b(t))where I is a closed interval ofR,A(t)∈SO(3),22SO(3)={Xis a3×3real matrix|Xt⋅X=I,det(X)=1}is the special orthogonal group, i.e. the group of rotational transforms.b(t)∈R3. The parameter t represents time.We assume that h is of classCkfor somek≥2, i.e., partial derivatives of order up to k exist and are continuous.We make the following key assumption about(M,h).Assumption 2The tuple(M,h)is in a general position.Definition 3The action of h (at time t in I) on M is given byM(t)={A(t)⋅x+b(t)|x∈M}. The swept volumeVis the union⋃t∈IM(t)and the envelopeEis defined as the boundary of the swept volumeV.Clearly, for each point y ofEthere must be anx∈Mand at∈Isuch thaty=A(t)⋅x+b(t). This sets up the following correspondence relation.Definition 4The correspondenceR is the set of tuplesR={(y,x,t)∈E×M×I|y=A(t)⋅x+b(t)}Fort0∈I, we setRt0:={(y,x,t)∈R|t=t0}. Similarly, fory0∈E, we defineRy0:={(y,x,t)∈R|y=y0}.We will denote the interior of a set W byWo. It is clear thatVo=⋃t∈IM(t)o. Therefore, we haveLemma 5Ifx∈Mo, then for allt∈I,A(t)⋅x+b(t)∉E.Thus, the points in the interior of M do not contribute toEat all andR⊂E×∂M×I.Lemma 6Assuming general position of(M,h), for anyy∈E, there are at most three distinct tuples(y,xi,ti)fori=1,2,3which belong toRy.ProofFor distinct tuples(y,x1,t1),(y,x2,t2)∈Ry, it is clear thatt1≠t2, for otherwisex1=x2. Therefore∂M(t1)and∂M(t2)intersect at point y. By Assumption 2 this intersection is transversal. Further, by the same assumption, at most 3 surfaces may intersect in a point.  □It will be shown in the coming sections that for almost all pointsy∈Ethere is exactly one tuple(y,x,t)inRy. This sets up the brep structure forE. In the sweep example shown in Fig. 1, the correspondence R is illustrated via colour coding, i.e., for(y,x,t)∈R, the points y and x are shown in the same colour. The general position assumption on(M,h)can be formulated as the condition that the induced brep topology ofEremains invariant under a small perturbation of(M,h).Definition 7For a pointx∈M, define the trajectory ofxas the mapγx:I→R3given byγx(t)=A(t)⋅x+b(t)and the velocityvx(t)asvx(t)=γx′(t)=A′(t)⋅x+b′(t).For a pointx∈∂M, letN(x)be the unit outward normal to M at x. Define the functiong:∂M×I→Ras(1)g(x,t)=〈A(t)⋅N(x),vx(t)〉Thus,g(x,t)is the dot product of the velocity vector with the unit normal at the pointγx(t)∈∂M(t).Proposition 8 gives a necessary condition for a pointx∈∂Mto contribute a point onEat time t, namely,γx(t), and is a rewording in our notation of the statement in Blackmore et al. (1997) that the candidate set is the union of the ingress, the egress and the grazing set of points.Proposition 8For(y,x,t)∈RandI=[t0,t1], either (i)g(x,t)=0or (ii)t=t0andg(x,t)≤0, or (iii)t=t1andg(x,t)≥0.For the proof, refer Appendix A.Definition 9For a fixed time instantt0∈I, the set{γx(t0)|x∈∂M,g(x,t0)=0}is referred to as the curve of contact att0and denoted byCI(t0). Observe thatCI(t0)⊂∂M(t0). The union of the curves of contact is referred to as the contact set and denoted byCI, i.e.,CI=⋃t∈ICI(t).In the sweep example in Fig. 4, the curve of contact att=0is shown imprinted on the solid in red. The curves of contact are referred to as the characteristic curves in Peternell et al. (2005).Definition 10Define projectionsτ:R→IandY:R→Eas:τ(y,x,t)=tandY(y,x,t)=y.Definition 11A sweep(M,h,I)is said to be simple if for allt∈Io,CI(t)=Y(Rt).Note that, by Proposition 8, for any sweep, we haveY(Rt)⊆CI(t)for allt∈Io. In a simple sweep, we require thatCI(t)=Y(Rt). In other words, every point on the contact-set appears on the envelope, and thus, no trimming of the contact-set is needed in order to obtain the envelope.Lemma 12For a simple sweep, for ally∈E,Ryis a singleton set.ProofWe first show that for a simple sweep, fort≠t′,CI(t)∩CI(t′)=∅. Suppose thaty∈CI(t)∩CI(t′). Clearly,CI(t)⊂∂M(t)andCI(t′)⊂∂M(t′). Hencey∈∂M(t)∩∂M(t′). By Assumption 2 about the general position of(M,h),∂M(t)and∂M(t′)intersect transversally. HenceCI(t)∩Mo(t′)≠∅andCI(t′)∩Mo(t)≠∅. It follows by Lemma 5 thatCI(t)⊄Y(Rt)andCI(t′)⊄Y(Rt′)which contradicts the fact that(M,h,I)is simple.Now suppose that there are 2 tuples(y,xi,ti)∈Ryfori=1,2. Since ∂M is free from self-intersections it follows thatt1≠t2andy∈CI(t1)∩CI(t2)which is a contradiction to the fact that(M,h,I)is simple.  □Now we describe parametrizations of the various entities of the induced brep structure ofE. Here we restrict to the case of the simple sweep. The more general case is derived from this.Let F be a face of ∂M. In general, F gives rise to a set of faces ofE. Below we describe a natural parametrization of these faces using the parametrization of the surface underlying the face F.Definition 13A smooth/regular parametric surface inR3is a smooth mapS:R2→R3such that at all(u0,v0)∈R2∂S∂u|(u0,v0)∈R3and∂S∂v|(u0,v0)∈R3are linearly independent. Here u and v are called the parameters of the surface.Let S be the regular surface underlying the face F of ∂M.Definition 14Define the functionf:R2×I→Rasf(u,v,t)=g(S(u,v),t).The domain of function f will be referred to as the parameter space. Note that f is easily and robustly computed.Definition 15For an intervalI=[t0,t1], we define the following subsets of the parameter spaceL={(u,v,t)∈R2×{t0}such thatf(u,v,t)≤0}F={(u,v,t)∈R2×Isuch thatf(u,v,t)=0}R={(u,v,t)∈R2×{t1}such thatf(u,v,t)≥0}The setFwill be referred to as the funnel.By Assumption 2 about the general position of(M,h)it follows that for allp∈F, the gradient∇f(p)=[fu(p),fv(p),ft(p)]T≠0¯. As a consequence,Fis a smooth, orientable surface in the parameter space.Definition 16The set{(u,v,t)∈F|t=t0}will be referred to as the p-curve of contact att0and denoted byF(t0).We now define the sweep map from the parameter space to the object space.Definition 17The sweep map is defined as follows.σ:R2×I→R3,σ(u,v,t)=A(t)⋅S(u,v)+b(t)Note that, σ is a smooth map,CI=σ(F)andCI(t)=σ(F(t)). Here and later, by a slight abuse of notation,E,CIandCI(t)denote the appropriate parts of completeE,CIandCI(t)respectively resulting from the faceF⊂∂Mwhose underlying surface is S. The surface patchesσ(L)andσ(R)will be referred to as the left and right end-caps respectively.The funnel, the contact-set,F(t0)andCI(t0)are shown schematically in Fig. 2.The conditionf=0can also be looked upon as the rank deficiency condition (Abdel-Malek and Yeh, 1997) of the JacobianJσof the sweep map σ. To make this precise, let(2)Jσ=[σuσvσt]3×3whereσu=A(t)⋅∂S∂u(u,v),σv=A(t)⋅∂S∂v(u,v)andσt=A′(t)⋅S(u,v)+b′(t). Note that ifS(u,v)=xthenσt=γx′(t)is the velocity, also denoted byV(u,v,t). Observe that regularity of S ensures thatJσhas rank at least 2. Further, it is easy to show thatf(u,v,t)is a non-zero scalar multiple of the determinant ofJσ. Therefore, the conditionf=0is precisely the rank deficiency condition ofJσ.For a simple sweep, by Proposition 8, Definition 11 and Definition 15 it follows thatE=σ(L∪F∪R). The surface patchesσ(L)andσ(R)can be obtained from ∂M using Proposition 8 and Definition 15. The trim curve in parameter space forσ(L)is given byf(u,v,t0)=0and that forσ(R)is given byf(u,v,t1)=0.We now come to the parametrization ofσ(F)=CI. The non-singularity of f makesFan effective parametrization space forCI. Since time t is a central parameter of the sweep problem and is important in numerous applications, it is useful to have t as one of the parameters ofCI. Since in a simple sweep,σ|F:F→CIis a diffeomorphism onto its image, we may address the problem of parameterizingCIby parameterizing the funnelF. For most non-trivial sweeps there is no closed form solution for the parametrization of the envelope and we address this problem using the procedural paradigm which is now standard in many kernels and is described in Appendix C. In this approach, a set of evaluators are constructed for the curve/surface via numerical procedures which converge to the solution up to the required tolerance. This has the advantage of being computationally efficient as well as accurate.We now look at the bounding edges of the faces resulting from the face F of ∂M, which are generated by the bounding edges of F.We now briefly describe the computation of edges ofEvia the correspondence R. If ∂M is composed of faces meeting smoothly, an edge e of ∂M will, in general, give rise to a set of edges inE. We define the restriction of R to the edge e as follows.Definition 18For an edgee∈∂M, defineR(e)={(y,x,t)∈R|x∈e}.Let e be the intersection of facesF1andF2in ∂M and let s denote the parameter of e. SinceF1andF2meet smoothly at e, at every pointe(s)of e there is a well-defined normal. Hence we may define the following function on the parameter spaceR×I.Definition 19Define the functionfe:R×I→Rasfe(s,t)=g(e(s),t).Note that the functionfeis the restriction of the function f defined in Definition 14 to the parameter space curve(u(s),v(s))corresponding to the edge e so thate(s)=S(u(s),v(s))where S is the surface underlying faceF1. The following lemma gives a necessary condition for a pointe(s)to be onEat time t.Lemma 20For(y,e(s),t)∈R(e)andI=[t0,t1], either (i)t=t0andfe(s,t)≤0, or (ii)t=t1andfe(s,t)≥0or (iii)fe(s,t)=0.ProofThis follows from Proposition 8 and Definition 19.  □Fig. 3shows the edges of the envelope for the sweep example shown in Fig. 1. The correspondence for one of the edges of the envelope is also marked.LetF1denote the funnel corresponding to the contact set generated by faceF1. The edge in parameter space which boundsF1is given by{(u(s),v(s),t)∈R2×I|fe(s,t)=0}which we will denote byFe. Note thatFeis smooth if(fse,fte)=(fu⋅us+fv⋅vs,ft)≠(0,0)at all points inFe.A vertex z on ∂M will, in general, give rise to a set of vertices onE. We further restrict the correspondence R to z asR(z)={(y,x,t)∈R|x=z}. As ∂M is smooth, there is a well-defined normal at z. Hence we may define the functionfz:I→Rasfz(t)=g(z,t). If z is on the boundary of a faceF1, z will have a set of coordinates in the parameter space of the surface S underlying the faceF1, say(u0,v0), so thatz=S(u0,v0). It is easy to see that if(y,z,t)∈R(z)andI=[t0,t1]then either (i)t=t0andfz(t)≤0, or (ii)t=t1andfz(t)≥0or (iii)fz(t)=0.Three examples of simple sweeps are shown in Figs. 4, 5 and 6which were generated using a pilot implementation of our algorithm in the ACIS 3D Modeler.33ACIS 3D Modeler, SPATIAL, www.spatial.com/products/3d-acis-modeling.A curve of contact at the initial time is shown imprinted on the solid in Fig. 4.Unlike in a simple sweep, all points ofCImay not belong to the envelope. Fig. 7shows an example of such a sweep. In Fig. 7(b) the contact set restricted to the later half of the sweep interval is shown after removing the set of points which does not belong to the envelope. We now define the subset ofCIwhich needs to be excised in order to obtainE.Definition 21The trim set is defined asTI:={x∈CI|∃t∈I,x∈Mo(t)}By Lemma 5 it is clear thatTI∩E=∅. The correspondence in Definition 4 does not capture the points ofCIwhich do not belong to the envelope. In order to identify such points, we extend the correspondence of Definition 4 toCI×M×Ias below.Definition 22LetR˜:={(y,x,t)∈CI×M×I|y=A(t)⋅x+b(t)}. As expected, we defineτ:R˜→IandY:R˜→CIas:τ(y,x,t)=tandY(y,x,t)=y. Further, as before,R˜t0:={(y,x,t)∈R˜|t=t0},R˜y0:={(y,x,t)∈R˜|y=y0}.A crucial observation is that, unlike the earlier correspondence,R˜⊄CI×∂M×Isimply becauseR˜may contain a tuple(y,x,t)wherex∈Mo. In other words, forx′∈∂Mandy=γx′(t′)∈CI, it may happen thatγx′(t′)=γx(t)for somet≠t′and somex∈Mo. In this case,R˜ywill not be a singleton set.Lemma 23The setTIis open inCI.ProofConsider a pointy0∈TI. Theny0∈Mo(t0)for somet0∈I. Hence, there exists an open ball of non-zero radius r centred aty0, denote it byB(y0,r), which is itself contained inMo(t0). LetN0:=B(y0,r)∩CI. Then,N0⊂TIandN0is open inTI. HenceTIis open inCI.  □In general, the trim set will span several parts ofCIcorresponding to different faces of ∂M. For the ease of notation and presentation, in the rest of this paper, we will analyse the corresponding trim structures on the funnel of a fixed face F of ∂M. Thanks to the natural parametrizations (cf. Subsection 2.2), the migration of these trim structures across different funnels is an easy implementation detail. In view of this, we carry forward the notation developed in Subsection 2.2.1 through the rest of this paper.Definition 24The pre-image ofTIon the funnel under the map σ will be referred to as the p-trim set, denoted bypTI, i.e.,pTI=σ−1(TI)∩F.An immediate corollary of Lemma 23 is:pTIis open inF.One can also define similar parametric trim areas on the left and right caps (cf.LandRfrom Definition 15) and their counterparts in the object space. However, in this paper, we assume here that these trim structures are empty. Our analysis can be extended to also cover the non-empty case.Definition 25The boundary ofTI¯will be referred to as the trim curves and denoted by∂TI. HereTI¯denotes the closure ofTIinCI. Similarly, the boundary of the closurepTI¯ofpTIinFwill be referred to as the p-trim curves and denoted by∂pTI.Note thatE∩TI=∅,E∩TI¯=∂TIandσ(F∖pTI)=E. Since∂TIforms the boundary of the trim set, the problem of excising the trim set is reduced to the problem of computing the trim curves. Further, this computation is eventually reduced to guided parametric surface–surface intersections via the parametrization ofσ(F)described in Section 2.2. In order to characterize the points of∂pTIwe define the following function.Definition 26Forp=(u,v,t)∈F, letσ(p)=y. DefineL:F→2RasL(p):=τ(R˜y), where2Rdenotes the set of all subsets ofR. In other words,L(p)is the set of all time instancest′(except t) such that some point ofM(t′)coincides withσ(p).Lemma 27Letp0∈pTI¯. Thenp0∈pTIiffL(p0)contains an interval, andp0∈∂pTIiffL(p0)is a discrete set of cardinality either two or three.ProofSuppose first thatp0∈pTI. Lety0:=σ(p0). Theny0∈TIandy0∈Mo(t0)for somet0∈I. LetB(y0,r)be an open ball of radiusr>0centred aty0contained inMo(t0). Assume without loss of generality thatA(t0)=Iandb(t0)=0. By continuity of the trajectory h it follows that givenr>0there existsδt>0such that for allt∈[t0,t0+δt],‖y0−A(t)⋅y0−b(t)‖<r. Thus for eacht∈[t0,t0+δt], there exists a pointx=A−1(t)⋅(y0−b(t))∈B(y0,r)satisfyingy0=A(t)⋅x+b(t), i.e.,y0∈Mo(t). In other words,[t0,t0+δt]∈L(p0).Conversely, suppose thatL(p0)contains an interval[t1,t2], i.e.,y0∈M(t)for allt∈[t1,t2]. By Assumption 2 about the general position of(M,h)it follows thaty0∈Mo(t)for somet∈[t1,t2], i.e.,y0∈TIandp0∈pTI. We have shown that forp0∈pTI¯,p0∈pTIiffL(p0)contains an interval. Hence,L(p0)is discrete iffp0∈∂pTI.As∂TI⊂E, by Lemma 6, it follows that at all but finitely many pointsp∈∂pTI,L(p)is of cardinality 2 and at remaining points it is of cardinality 3.  □From Lemma 27 it follows that for almost all pointsy∈∂TIthere are two pointsp1,p1′∈∂pTIsuch thatσ(p1)=σ(p1′)=y. Fig. 8schematically illustrates p-trim curves onF. For every pointp1in the red portion of∂pTI, there is a pointp1′in the green portion of∂pTIsuch thatσ(p1)=σ(p1′).Definition 28Define the functionℓ:F→R∪∞as follows. Forp=(u,v,t)∈F,ℓ(p)=inft′∈L(p),t′≠t‖t−t′‖ifL(p)is not a singleton set,ℓ(p)=∞ifL(p)is a singleton set(i.e.,L(p)={t}).Further, we definet-sep=infp∈Fℓ(p).Forp∈F, the function ℓ gives the ‘smallest’ time δt such that some point ofM(t±δt)coincides withσ(p).We classify trim curves as follows.Definition 29A curve C of∂pTIis said to be elementary if there existsδ>0such that for allp∈C,ℓ(p)>δ. It is said to be singular ifinfp∈Cℓ(p)=0.Figs. 8(a) and 8(b) schematically illustrate elementary and singular p-trim curves onFrespectively. Further observe that,t-sep>0in case (a) and 0 in case (b). The trim curve in the example shown in Fig. 7 is elementary. The trim curves in examples shown in Figs. 12–15 are singular.Before proceeding further, we introduce the following notation: forJ⊂I,F(J)={(u,v,t)∈F|t∈J}.Lemma 30All but finitely many points of elementary trim curves lie on the transversal intersections of two surface patchesσ(F(Ii))and the remaining points lie on the transversal intersection of three surface patchesσ(F(Ii))where, fori=1,2,3,Ii⊂Iare subintervals.ProofWithout loss of generality, assume that all curves of∂pTIare elementary, i.e.,∃δ>0such that for allp∈∂pTI,ℓ(p)>δ. By Lemma 27, all but finitely many pointsy∈∂TIhave two pointsp1=(u1,v1,t1)andp2=(u2,v2,t2)in∂pTIsuch thatσ(p1)=σ(p2)=y. LetF1:=F([t1−δ,t1+δ])andF2:=F([t2−δ,t2+δ]). Theny∈σ(F1)∩σ(F2). It will be shown later (cf. Section 5.2) that∂M(t1)and∂M(t2)are tangential toσ(F1)andσ(F2)respectively at y. By Assumption 2 about general position of(M,h),∂M(t1)and∂M(t2)intersect transversally at y. Hence,σ(F1)andσ(F2)intersect transversally at y.At most finitely many pointsy∈∂TIhave three pointsp1,p2andp3in∂pTIsuch thatσ(pi)=y. By an argument similar to above, it can be shown that y lies on the transversal intersection of three surface patchesσ(Fi)forFicorresponding to appropriate subintervalsIi⊂I. □Fig. 7 shows an example in which a capsule is swept along a helical path while rotating about y-axis. The trim curves are elementary.We now consider sweeps, which though not simple, can be divided into simple sweeps by partitioning the sweep interval. We show that in such sweeps, the trim curves can be obtained by transversal intersection of the contact set with itself, a task which the existing kernels can handle easily. Given an interval I, we call a partitionPof I into consecutive intervalsI1,I2,…,IkPto be of width δ ifmax{length(I1),length(I2),…,length(IkP)}=δ.Definition 31We say that the sweep(M,h,I)is decomposable if there existsδ>0such that for all partitionsPof I of width δ, each sweep(M,h,Ii)is simple fori=1,⋯,kP. A sweep which is not decomposable is called non-decomposable.Fig. 9schematically illustrates the difference between decomposable and non-decomposable sweeps. The example shown in Fig. 7 is of a decomposable sweep in which partitioning the sweep interval I into 2 equal halves will result in 2 simple sweeps.Proposition 32The sweep(M,h,I)is decomposable ifft-sep>0. Further, ift-sep>0then all the p-trim curves are elementary.ProofSuppose first thatt-sep>0. LetPbe a partition of I of width t-sep. We show that(M,h,Ii)is simple fori=1,2,…,kP. LetEiandCIibe the envelope and the contact set for(M,h,Ii)respectively. By Proposition 8 (modulo end-caps),Ei⊂CIi. It needs to be shown thatCIi⊂Ei. Suppose not. Lety∈CIi(t)be such thaty∉Eifor somet∈Ii. Then,y∈TIi, i.e.,y∈Mo(t′)for somet′∈Ii. By an argument similar to that given in Lemma 27 it can be shown that there existsδt>0such that for allt″∈[t′−δt,t′+δt],y∈Mo(t″). Lety=σ(p)forp=(u,v,t). It follows thatℓ(p)<‖t−t′‖≤length(Ii)≤t-sep, leading to a contradiction. Hence,(M,h,I)is decomposable.Suppose now that(M,h,I)is decomposable with width-parameter δ (cf. Definition 31). Consider a pointp0=(u0,v0,t0)∈Fand letσ(p0)=y0. LetI1=[t0−δ,t0]andI2=[t0,t0+δ]. Further, letEiandCIibe the envelope and contact-set for the sweeps(M,h,Ii)respectively. Observe thaty0∈CIifori=1,2. LetR˜iy0={(y,x,t)∈CIi×M×Ii|y=y0}. As(M,h,I)is decomposable with width-parameter δ, both(M,h,I1)and(M,h,I2)are simple, and hence,CIi⊂Eifori=1,2. Therefore,y0belongs toE1andE2. By Lemma 12,R˜1y0andR˜2y0are both singleton sets. Further,R˜1y0=R˜2y0={(y0,x,t0)}forx=S(u0,v0)∈∂M. Hence,ℓ(p0)>δ. Since for allp∈F,ℓ(p)>δ, we conclude thatt-sep≥δ>0.Suppose thatt-sep>0. Sinceℓ(p)≥t-sepfor allp∈∂pTIit follows that all the p-trim curves are elementary. □The above proposition provides a natural test for decomposability. Further, coupled with Lemma 30, for a decomposable sweep, the problem of excising the trim set can be reduced to transversal intersections. However, note that, the very definition of t-sep is post-facto as it relies on the trim structures. Besides, it is the infimum value of the not necessarily continuous function ℓ and is difficult to compute. Thus, the above test of decomposability is not effective.One of the key contributions of this paper is a novel geometric ‘invariant’ function on the funnel which is computed in closed form and serves the following objectives.(1)Quick/efficient and simple detection of decomposability of sweeps, which occur most often in practice.Generation of trim curves for non-decomposable sweeps.Quantification and detection of singularities on the envelope.For a pointp=(u,v,t)∈F, letq=σ(p). Recall from Section 2.2 that,Jσ(p)=[σuσvσt]is of rank 2. Asdet(Jσ(p))=0,{σu(p),σv(p),σt(p)}are linearly dependent. Recall thatσt(p)=V(p)is the velocity of the pointS(u,v)at time t (cf. Section 2.2). As S is regular, the set{σu(p),σv(p)}forms a basis for the tangent space to∂M(t). Therefore, we must haveσt(p)=n(p).σu(p)+m(p).σv(p)where n and m are well-defined (unique) on the funnel and are themselves continuous functions on the funnel.Definition 33The functionθ:F→Ris defined as follows.(3)θ(p)=n(p)⋅fu(p)+m(p)⋅fv(p)−ft(p)wherefu,fvandftdenote partial derivatives of the function f w.r.t. u, v and t respectively at p, and n and m are as defined above.Note that, unlike ℓ, θ is easily and robustly computable continuous function on the funnel. Now we are ready to state one of the main theorems of this paper.Theorem 34If for allp∈F,θ(p)>0, then the sweep is decomposable. Further, if there existsp∈Fsuch thatθ(p)<0, then the sweep is non-decomposable.The proof is given in Section 5.6 which highlights many other surprisingly strong properties of the function θ.Definition 35The function θ partitions the funnelFinto three sets, viz. (i)F+:={p∈F|θ(p)>0}, (ii)F−:={p∈F|θ(p)<0}and (iii)F0:={p∈F|θ(p)=0}. Further, we defineCI+:=σ(F+),CI−:=σ(F−)andCI0:=σ(F0).Fig. 10schematically illustrates the setsF+,F−andF0on the funnel and setsCI−,CI+andCI0on the contact set.Note that, for(M,h,I)in general position, eitherF−is a non-empty open set orF=F+. Whence, the above theorem provides an efficient ‘open’ test for decomposability, namely, a sweep(M,h,I)is decomposable iff the open setF−is empty. By continuity of the function θ, the setF−is empty iff the setF0is empty. SinceFis a smooth manifold, every point ofFis accessible via the procedural parametrization discussed in Appendix C. Most kernels will have an effective procedure for computing the setF0provided ∇θ is non-zero on the curveF0. This is demonstrated in Section 5.3. Thus, all components ofF0will be discovered for the same reason that most kernels discover all the intersections of two given solids.In this section we prove some key properties of θ, namely, its invariance under the re-parametrization of the surface being swept and its relation with the notion of inverse trajectory used in earlier works. Finally, we use these properties along with Proposition 32, to prove Theorem 34.We show that the function θ is invariant of the parametrization of ∂M and hence, intrinsic to the sweep.Theorem 36IfS¯is a re-parametrization of the surface S so thatq:=S¯(u¯,v¯)=S(u,v), and ifg(q,t)=0, thenθ(u,v,t)=θ¯(u¯,v¯,t).ProofSuppose as before that the boundary ∂M is specified by the parametrized surface S. Letϕ:R2→R2be a re-parametrization map of S andS¯:=S∘ϕ. Since ϕ is a diffeomorphism, dϕ is an isomorphism at every point in the entire domain of ϕ. Letϕ(u¯,v¯)=(u(u¯,v¯),v(u¯,v¯)). For convenience of expression, we extend ϕ to define it on the parameter space of the sweep map σ so thatϕ(u¯,v¯,t)=(u,v,t). Hence the re-parametrized sweep map (forS¯) is simplyσ¯=σ∘ϕ. Recall thatf(u,v,t)=〈Nˆ(u,v,t),V(u,v,t)〉, whereNˆ(u,v,t)is the unit outward normal to∂M(t)at the pointA(t)⋅S(u,v)+b(t). It is easy to check thatNˆ(u,v,t)can also be expressed asA(t)⋅(G∘S)(u,v), whereG:∂M→S2is the intrinsic Gauss map,S2being the unit sphere and ∘ stands for the usual composition of functions. Thus,f(u,v,t)=〈Nˆ(u,v,t),V(u,v,t)〉=〈A(t)⋅(G∘S)(u,v),V(u,v,t)〉Similarly, computing with the re-parametrizationS¯, and using the fact thatS¯=S∘ϕ, we havef¯=f∘ϕ. Differentiating w.r.t.u¯,v¯and t we get∇f¯=dϕT⋅∇fwhere dϕ is the Jacobian of the map ϕ.Observe that, from Eq. (3), forp¯=(u¯,v¯,t)andp=ϕ(p¯)=(u,v,t),θ(p)=〈∇f(p),z〉wherez=(n,m,−1)spans the null-space ofJσ|pforp∈F. In order to computez¯for the re-parametrized sweep we see thatJσ¯=Jσ∘dϕandz¯=dϕ−1z. Now using∇f¯=dϕT⋅∇f, we get thatθ¯(p¯)=〈∇f¯(p¯),z¯〉=〈dϕT⋅∇f(p),dϕ−1⋅z〉=〈∇f(p),z〉=θ(p)This proves the theorem. □For a smooth point w of W, letTW(w)denote the tangent space to W at w.We show that the function θ arises out of the relation between two 2-frames onTCI. Letp=(u,v,t)∈Fbe such thatσ(p)is a smooth point ofCI. We first compute a natural 2-frameX(p)inTF(p). Note that,Fbeing the zero level-set of the function f,∇f|p⊥TF(p). We setβ:=(−fv,fu,0)and note thatβ⊥∇f. It is easy to see that β is tangent to the p-curve-of-contactF(t). Letα:=∇f×β=(−fuft,−fvft,fu2+fv2). Here × is the cross-product inR3. Clearly, the set{α,β}forms a basis ofTF(p)if(fu,fv)≠(0,0). Since∇f≠0, if(fu,fv)=(0,0)thenft≠0and{α′,β′}:={(1,0,0),(0,ft,0)}serves as a basis forTF(p). Fig. 2 illustrates the basis{α,β}schematically.The set{Jσ⋅α,Jσ⋅β}⊆TCI(σ(p))and can be expressed in terms of{σu,σv}as follows[Jσ⋅αJσ⋅β]=[σuσv][−ft⋅fu+n⋅(fu2+fv2)−fv−ft⋅fv+m⋅(fu2+fv2)fu]︸D(p)Note that,(4)det(D(p))=(fu2+fv2)(n⋅fu+m⋅fv−ft)(5)det(D(p))=(fu2+fv2)θ(p)Clearly, if(fu,fv)≠(0,0)thendet(D(p))is a positive scalar multiple ofθ(p). Again, if(fu,fv)=(0,0), expressing{Jσ⋅α′,Jσ⋅β′}in terms of{σu,σv}we see thatdet(D(p))=θ(p)=−ft.The above relation between{σu,σv}and{Jσ⋅α,Jσ⋅β}shows that ifθ(p)≠0,TCI(y)andT∂M(t)(y)are identical (as subspaces ofR3) fory=σ(p), i.e.,∂M(t)makes tangential contact withCIat y.We give a sweep example which will demonstrate the non-singularity of the function θ. We show that on the setF0,∇θ≠0¯. Consider a sphere parametrized asS(u,v)=(cosvcosu,cosvsinu,sinv),v∈[−π2,π2],u∈[−π,π]swept along a curvilinear trajectory given byh(t)=(A(t),b(t)),A(t)=I,b(t)=(12cos2t,12sin2t,0),t∈[0,1]. The unit outward normal atS(u,v)at time t is given byNˆ(u,v,t)=(cosvcosu,cosvsinu,sinv)and velocity is given byV(u,v,t)=(−sin2t,cos2t,0). The envelope function isf(u,v,t)=〈Nˆ(u,v,t),V(u,v,t)〉=cosvsin(u−2t). The funnelFis given by (i)u=2t−π,v∈[−π2,π2]and (ii)u=2t,v∈[−π2,π2]. Hence, u and v can serve as local parameters ofF. In component (ii) of the funnel, we see thatθ>0, hence we will only consider component (i). OnF,σt=n⋅σu+m⋅σvwheren=−1cosvandm=0, whence,θ(u,v,t)=n⋅fu+m⋅fv−ft=2cosv−1. The setF0is given byv=±π3,u=2t−π. OnF0,∂θ∂u=0and∂θ∂v=2sinv≠0.An important consequence of non-singularity of θ is that its zero set, i.e.,F0can be computed robustly and easily.Now we characterize the cusp-singular points ofCI. Geometrically, these are precisely the points whereCIintersects itself non-transversally. At such points, the dimension ofTCIdrops below 2. Identification of such points is important because any parametrization ofCIwill be degenerate in the neighbourhood of such points. Toward this, consider the following restriction of σ to the funnel:σ|F:F→R3. Note thatσ|F(F)=CI.Definition 37The setCIis said to have a cusp-singularity at a pointσ(p)=x∈CIifσ|Ffails to be an immersion at p.A basic result about immersion (see Guillemin and Pollack, 1974) implies that ifσ|Fis an immersion at a point p, then there is a neighbourhoodNof p such thatσ|Fis a local diffeomorphism fromNonto its image.Lemma 38Letp0∈Fandσ(p0)=x0. The pointx0is a cusp-singularity iffθ(p0)=0.ProofFrom Subsection 5.2,θ(p0)is a positive multiple of the determinant relating frames{σu,σv}and{Jσ⋅α,Jσ⋅β}atx0. Since the set{σu,σv}is always linearly independent, it follows that{Jσ⋅α,Jσ⋅β}is linearly dependent iffσ|Ffails to be an immersion atp0iffθ(p0)=0. □In other words, the setCI0is the set of cusp-singular points inCI.We now show the relation of the function θ with inverse trajectory (Blackmore et al., 1999; Erdim and Ilies, 2008) used by previous authors. Given a trajectory h and a fixed point x in object-space, the inverse trajectory of x is the set of points in the object-space which get mapped to x at some time instant by h, i.e.{z∈R3|∃t∈[0,1],A(t)⋅z+b(t)=x}.Definition 39Given a trajectory h, the inverse trajectoryh¯is defined as the maph¯:I→(SO(3),R3)given byh¯(t)=(At(t),−At(t)⋅b(t)). Thus, for a fixed pointx∈R3, the inverse trajectory of x is the mapy¯:I→R3given byy¯(t)=At(t)⋅(x−b(t)).The range ofy¯is{At(t)⋅x−At(t)⋅b(t)|t∈I}. We list some facts abouty¯in Appendix B which will be used in proving Theorem 40.For the inverse trajectoryy¯of a pointx∈∂M(t0), let π be the projection ofy¯on∂M(t0). Letλ(t)be the signed distance ofy¯(t)from∂M(t0). If the pointy¯(t)is inMo(t0),Ext(M(t0))(the exterior of M) or on the surface∂M(t0), thenλ(t)is negative, positive or zero respectively. Then we havey¯(t)−π(t)=λ(t)N(t), whereπ(t)is the projection ofy¯(t)on∂M(t0)along the unit outward pointing normalN(t)to∂M(t0)atπ(t). This is illustrated in Fig. 11. So, the following relation holds for λ.(6)λ(t)=〈y¯(t)−π(t),N(t)〉Theorem 40Forp=(u0,v0,t0)∈F,θ(p)=λ¨(t0)=〈−σ¨+2A˙⋅V,N〉+κv2where¨denotes the second derivative of λ, κ is the normal curvature of S at(u0,v0)along velocityV(p), N is the unit outward normal to S at(u0,v0)andv2=〈V(p),V(p)〉.ProofDifferentiating Eq. (6) with respect to time and denoting derivative w.r.t. t by˙, we get(7)λ˙(t)=〈y¯˙(t)−π˙(t),N(t)〉+〈y¯(t)−π(t),N˙(t)〉(8)λ¨(t)=〈y¯¨(t)−π¨(t),N(t)〉+2〈y¯˙(t)−π˙(t),N˙(t)〉+〈y¯(t)−π(t),N¨(t)〉Att=t0,y¯(t0)=π(t0). Sincey˙(t0)=V(p)⊥N(p), it follows from Eq. (18) thaty¯˙(t0)⊥N(p). It is easy to verify thatπ˙(t0)=y¯˙(t0). Hence,(9)λ(t0)=λ˙(t0)=0From Eq. (8) and Eq. (20) it follows that(10)λ¨(t0)=〈y¯¨(t0)−π¨(t0),N(t0)〉=〈−y¨(t0)+2A˙(t0)⋅y˙(t0)−π¨(t0),N(t0)〉Sinceπ(t)∈S(t0)for all t in some neighbourhood U oft0, we have that〈π˙(t),N(t)〉=0,∀t∈U. Hence〈π¨(t),N(t)〉+〈π˙(t),N˙(t)〉=0,∀t∈U. Hence−〈π¨(t0),N(t0)〉=〈π˙(t0),N˙(t0)〉=〈π˙(t0),G⁎(π˙(t0))〉=〈y˙(t0),G⁎(y˙(t0))〉=〈V(p),G⁎(V(p))〉=κv2. HereG⁎is the differential of the Gauss map, i.e. the curvature tensor ofS(t0)at point x. Using this in Eq. (10) and the fact thaty˙(t0)=σ˙(p),y¨(t0)=σ¨(p)we get(11)λ¨(t0)=〈−σ¨(p)+2A˙(t0)⋅V(p),N(t0)〉+κv2Recalling definition ofθ(p)from Eq. (3)lfu+mfv−ft=〈lNˆu+mNˆv,V〉+〈Nˆ,lVu+mVv〉−〈Nˆt,V〉−〈Nˆ,Vt〉HereNˆu=G⁎(σu)andNˆv=G⁎(σv)whereG⁎is the shape operator (differential of the Gauss map) ofS(t0)at(u0,v0). Also,Vu=At⋅SuandVv=At⋅Sv. Assume without loss of generality thatA(t0)=Iandb(t0)=0, henceNˆ=A(t0)⋅N=N,σu=Suandσv=Sv. Using Eq. (16) and the fact thatV=σt=lσu+mσvwe get(12)lfu+mfv−ft=〈G⁎⋅V,V〉+2〈At⋅V,N〉−〈Vt,N〉=κv2+〈2At⋅V−Vt,N〉From Eqs. (11) and (12) and the fact that∂σ∂t2=Vtwe getθ(p)=lfu+mfv−ft=λ¨(t0). □From Theorem 40 it is clear that the function θ is intimately connected with the curvature of the solid and that of the trajectory. Further, unlike in the approaches in Blackmore et al. (1999) and Erdim and Ilies (2008) in which every sampled point ofCImust be subjected to the inverse trajectory test in order to perform trimming, we show in the following section that ultimately only a few points ofF0are used for computing the trim curves. Hence, the trim setTI, including the regionF−, need not be explored at all.We now give the proof of Theorem 34 which gives an efficient test for decomposability using the function θ.Theorem 34If for allp∈F,θ(p)>0, then the sweep is decomposable. Further, if there existsp∈Fsuch thatθ(p)<0, then the sweep is non-decomposable.ProofSuppose that for allp∈F,θ(p)>0. Forp∈F, lett(p)denote the t-coordinate of p. Consider the set of pointsP={p∈F|∃p′∈F,p′≠p,σ(p)=σ(p′)andσ−1(σ(p))={p,p′}}. Note that, by the general position assumption, there are only finitely many pointsp∈Fsuch thatσ−1(σ(p))is of cardinality greater than two. Hence such points may be ignored in the following discussion. By the general position assumption, P is a collection of smooth curves inF. Forp∈P, letp′denote the unique point in P such thatp≠p′andσ(p)=σ(p′). Further, we defineδ(p)=‖t(p)−t(p′)‖. Letδ:=infp∈Pδ(p). Consider two cases as follows:Case (i):δ=0, i.e., there exists a sequence(pn)in a curve C of P such thatlimn→∞δ(pn)=0. Hence there existsp0∈C¯(closure of C) which is a limit point of(pn). Sincelimn→∞δ(pn)=limn→∞‖t(pn)−t(pn′)‖=0and ∂M is free from self-intersections, we have thatlimn→∞‖pn−pn′‖=0. Hence, for a small neighbourhoodNofp0inF, we may parametrize the smooth curveC¯∩Nby a map γ so thatγ(0)=p0and, fors≠0,γ(s),γ(−s)∈C∩Nandσ(γ(s))=σ(γ(−s)). LetΓ(s):=σ(γ(s)). Note thatΓ(s)=Γ(−s). Now,dΓds|0=limΔs→0Γ(Δs)−Γ(0)Δs=limΔs→0Γ(0)−Γ(−Δs)Δs=limΔs→0Γ(0)−Γ(Δs)Δs=−limΔs→0Γ(Δs)−Γ(0)ΔsHence,dΓds|0=Jσ|γ(0).dγds|0=0Sincedγds|0∈TF(p0), the mapσ|F:F→CIfails to be an immersion atp0and by Lemma 38 we get thatθ(p0)=0, which is a contradiction to the hypothesis.Case (ii):δ>0. Let{I1,I2,…,Ik}be a partition of I of widthδ2. LetFiandCIidenote the funnel and the contact set corresponding to subintervalIi. Then it is clear that for each i,σ:Fi→CIiis a diffeomorphism, i.e., for each i,CIi(t)∩CIi(t′)=∅for allt,t′∈Ii,t≠t′. We show that the subproblems(M,h,Ii)are simple for all i. Suppose not, i.e., for some i, there existst∈Iisuch thatCIi(t)∩Mo(t′)≠∅for somet′∈Ii. Hence the trim setTIiis not empty. By Lemma 30, for all but finitely many points in∂TIithere are two pointsp1,p2∈∂pTIisuch thatσ(p1)=σ(p2)=y. Ifp1∈Fi(t1)andp2∈Fi(t2)then it follows thatCIi(t1)∩CIi(t2)=yleading to contradiction. Hence, the subproblems(M,h,Ii)are simple for all i. It follows that(M,h,I)is decomposable with width-parameterδ2.Hence we have proved that if for allp∈F,θ(p)>0then the sweep is decomposable.Suppose now that there existsp=(u,v,t)∈Fsuch thatθ(p)<0. Lety=σ(p). Recall the definition of the function λ from Eq. (6) and relationθ(p)=λ¨(t)from Theorem 40. Clearly, ifλ¨(t)<0, then t is a local maxima of the function λ and the inverse trajectory of y intersectsMo(t). So, there existsϵ>0such that for allδ∈(0,ϵ), there existswδ∈Mo(t)such thatA(t+δ)⋅wδ+b(t+δ)=y. Hence, the interval[t,t+δ]⊂L(p). Thusℓ(p)=0and hencet-sep=0. By Proposition 32, the sweep is non-decomposable. □In this section we look at singular p-trim curves, i.e., a curve C of∂pTIwhereinfp∈Cℓ(p)=0. We show thatCI−⊂TIand thatCI0makes contact with∂TI, thereby providing a seed for tracing∂TI. Fig. 18(b) schematically illustrates singular p-trim curves. Figs. 12–17show six examples of non-decomposable sweeps and the associated singular trim curves. In Figs. 12–15 the 1-cage of the envelope, i.e., the swept edges are shown with the portion whereθ>0shown in black and the portion whereθ<0shown in green. The curveCI0is shown in red and the trim curve∂TIis shown in blue.In Figs. 16(a) and 17(a), curves of contact at a few time instances are shown. The portions ofCI(t)whereθ>0andθ<0onF(t)are shown in black and green respectively. In Figs. 16(b) and 17(b) the portion where θ is negative is excised, the curveCI0is shown in red and the trim curve∂TIis shown in blue. Note thatCI0and∂TImake contact, as we explain in this section. Fig. 19 schematically illustrates the interaction between curves of contact in non-decomposable sweeps.Proposition 41If C is a singular p-trim curve andp0∈Cis a limit-point of(pn)⊂Csuch thatlimn→∞ℓ(pn)=0, thenθ(p0)=0.ProofForp∈F, lett(p)denote the t-coordinate of p. By Lemma 27 it follows that for eachpn∈(pn)there existspn′∈Csuch thatσ(pn)=σ(pn′). Sincelimn→∞‖t(pn)−t(pn′)‖=0and ∂M is free from self-intersections, we have thatlimn→∞‖pn−pn′‖=0. Hence, for a small neighbourhoodNofp0inF, we may parametrizeC∩Nby a map γ so thatγ(0)=p0and, fors≠0,γ(s),γ(−s)∈N∩Candσ(γ(−s))=σ(γ(s)). LetΓ(s):=σ(γ(s)). Then,dΓds|0=limΔs→0Γ(Δs)−Γ(0)Δs=limΔs→0Γ(0)−Γ(−Δs)Δs=limΔs→0Γ(0)−Γ(Δs)Δs=−limΔs→0Γ(Δs)−Γ(0)ΔsHence,dΓds|0=Jσ|γ(0).dγds|0=0Sincedγds|0∈TF(p0), the mapσ|F:F→CIfails to be an immersion atp0and by Lemma 38 we conclude thatθ(p0)=0. □Definition 42A limit point p of a singular p-trim curve C such thatθ(p)=0will be called a singular trim point.In Fig. 18(b) a singular trim pointp0is shown on∂pTI.Proposition 43Ifp0∈Fsuch thatθ(p0)<0thenp0∈pTI.ProofLetp0=(u0,v0,t0)∈F. Recall the definition of the function λ from Eq. (6) and relationθ(p0)=λ¨(t0)from Theorem 40. Clearly, ifλ¨(t0)<0, thent0is a local maxima of the function λ and the inverse trajectory ofσ(p0)intersectsMo(t0)andσ(p0)∈TI. Hence, ifθ(p0)<0thenp0∈pTI. □Propositions 41 and 43 link the curves ofF0to the curves of∂pTI. We see that every curve ofF0lies inside a curve of∂pTIand every curve C of∂pTIhas a curveFC0ofF0which makes contact with it. We have already seen thatF0is a collection of curves on which ∇θ is non-zero. Thus, the computation ofF0in modern kernels is straightforward. The task before us is now to locate the points ofF0∩∂pTIwhich is enabled by the following function.Definition 44Let Ω be a parametrization of a curveFi0ofF0. LetΩ(s0)=p0∈Fi0andz¯:=(n,m,−1)∈null(Jσ)atp0, i.e.,nσu+mσv=σt. Define the functionϱ:F0→Ras follows.(13)ϱ(s0)=〈z¯×dΩds|s0,∇f|p0〉where × is the cross-product inR3.Here, ϱ is a measure of the oriented angle between the tangent atp0toFi0and the kernel (line) of the JacobianJσrestricted to the tangent spaceTF(p0).Proposition 45Every singular p-trim curve C makes contact with a curveFi0ofF0so that ifp0is a singular trim point of C thenϱ(p0)=0. Furthermore, at such points,ϱ′(p0)≠0whereϱ′refers to the derivative of ϱ along the curveFi0.ProofWe know from Proposition 43 thatF−⊂pTI. SinceF0and∂pTIform the boundaries ofF−andpTIrespectively,F0and a singular p-trim curve C of∂pTImeet tangentially at the singular trim point. Further, it was shown in the proof of Proposition 41 that at a singular trim pointp0,TC(p0)is the null-space of the JacobianJσ|p0. SinceTC(p0)=TF0(p0),Jσ|p0(TF0(p0))=0. Since the function ϱ measures the oriented angle betweennull(Jσ)andTF0, it follows thatϱ(p0)=0.The derivativeϱ′≠0at singular trim points for non-decomposable sweeps shown in Fig. 16 and Fig. 17. □The curves ofF0can be parametrized via the procedural approach. Further, Proposition 45 confirms that for every singular p-trim curve, we may use the function ϱ to locate a singular trim point p inF0in a computationally robust manner. Thus, via θ and ϱ we may access every component of∂pTI.Proposition 46In the generic situation, (i) the singular p-trim curve C has a finite set of singular trim points. Each of these points lie on a curve ofF0. (ii) For all but finitely many non-singular pointsp∈C, the imageσ(p)lies on the transversal intersection of two surface patchesσ(Fi)and the remaining non-singular points lie on intersection of three surface patchesσ(Fi)whereFi⊂Fcorresponds to the subintervalIi⊂I.ProofIt follows from Proposition 41 that the singular trim points lie onF0. Since at a non-singular trim pointp∈C,ℓ(p)>0, the proof for (ii) is identical to the proof for Lemma 30 about elementary trim curves. □We now describe the tracing of a singular p-trim curve C once a pointp0inF0has been located where ϱ is zero. SinceF0and C meet tangentially atp0, starting atp0we take small steps in directiondΩds|p0and−dΩds|p0to obtain pointsp˜1andp˜1′respectively which are fed to a Newton–Raphson solver which returns pointsp1andp1′such thatp1,p1′∈F,σ(p1)=σ(p1′)andt(p1)−t(p1′)=t(p˜1)−t(p˜1′). Letq1:=σ(p1)=σ(p1′). Here,t(p)denotes the t-coordinate of p. The pointq1is on the trim curve and the pointsp1andp1′are on the p-trim curve C. Since pointsp1andp1′are non-singular, these can be fed as starting points to any of the known surface–surface intersection algorithms to compute the trim curve.Note that, for trimming, unlike in the inverse trajectory approach (Blackmore et al., 1997, 1999), our method does not rely on identifying all the points where θ is negative. Further, the funnel being a smooth surface, every point ofFis accessible via the procedural parametrization (discussed in Appendix C). On this surface, the curveF0is computed. This guarantees that no portion ofF−will be left out.Fig. 20schematically illustrates a scenario in which a singular p-trim curve is nested inside an elementary p-trim curve. Note that the sweep is non-decomposable and this will be detected by the presence of points onFwhereθ≤0. Further, the region bounded by the singular p-trim curve needs to be excised before a surface–surface intersection algorithm can trace the elementary trim curves since no neighbourhood ofCI0(where θ is zero) can be parametrized. Our analysis will first successfully identify and excise the region bound by the singular p-trim curves. After parameterizing the remaining part, the task of excising the regions bound by elementary p-trim curves can be handled by existing kernels.

@&#CONCLUSIONS@&#
