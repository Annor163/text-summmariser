@&#MAIN-TITLE@&#
Continuous penetration depth

@&#HIGHLIGHTS@&#
The resulting configuration causes the two objects to just touch.The penetration depth magnitude and direction continuously change for a continuous relative motion in configuration space.The derivatives of the continuous penetration depth are well defined if the contact space is smooth and the motion is continuous.Applicability to convex and non-convex contact spaces that are homeomorphic to a sphere.

@&#KEYPHRASES@&#
Penetration depth,Discontinuity,Spherical parameterization,

@&#ABSTRACT@&#
We present a new measure for computing the continuous penetration depth between two intersecting rigid objects. We generate a set of samples in the configuration space, precompute an approximation of the contact space for two intersecting objects using binary classification techniques, and construct a bijective mapping between the spherical space and the precomputed contact space. For a given in-collision configuration, we search the spherical space for the nearest neighbor, and find the corresponding image in the contact space based on the predefined spherical parameterization. The resulting image is a witness equivalent to the nearest configuration, and it is used to formulate the penetration depth direction based on our measure. Unlike prior algorithms, our algorithm guarantees that both the penetration depth magnitude and direction are continuous with respect to the motion parameters. Our algorithm is approximate in the sense that we approximate the exact contact space. We have applied our algorithm to complex rigid models composed of tens or hundreds of thousands of triangles, and the runtime query takes only around 0.01 ms.

@&#INTRODUCTION@&#
Measuring the extent of interpenetration between two intersecting objects is an important problem in physically based simulation, haptic rendering, geometric computing, and robotics. Among these applications, a key computation is find a measure to separate two overlapping objects. It is necessary to change the configuration variables which describe the translational or even rotational motion of the objects to eliminate their intersections. The problem has been well studied in computer-aided design and robotics for more than three decades  [1]. Perhaps the most natural measure for interpenetration is the penetration depth (PD), which is defined as the minimum rigid transformation required to separate two intersecting objects. This definition is widely used for contact resolution in dynamic simulation  [2], tolerance verification for virtual prototyping  [3], force computation in haptic rendering [4,5], motion planning in robotics  [6], etc.In many applications, the penetration depth query is often performed repeatedly as the objects move continuously along a path. The query result includes the magnitude and direction separating the intersecting objects  [7]. However, the penetration depth computation can result in large discontinuities in terms of direction or even magnitude. These discontinuities, for instance, can significantly degrade the stability of the penalty response/force, which is computed as a function of the penetration depth. The unstable effects include noticeable jittering and sudden jumps in the computed force  [8]. Fig. 1shows an example and illustrates this problem. For the optimization-based approaches  [9,10,5], the penetration depth computation relies upon initial guesses and a series of projections on the local contact space. A discontinuity can occur in terms of both the magnitude and direction of the penetration depth results. During the optimization, the local minimum can discontinuously vary with respect to the change of initial guesses. The discontinuity can become more severe when a contact space has many small surface features or local minima.Main results: In this paper, we present a new measure of interpenetration which allows one to efficiently compute the continuous penetration depth between two intersecting rigid objects. Our new formulation of the continuous penetration depth can guarantee that both the penetration depth magnitude and direction are continuous with respect to the motion parameters. This formulation relies on an implicit distance metric defined using a space transformation and a bijective mapping between the spherical space and the contact space of two intersecting objects. Given the high complexity of an exact contact space, we approximate the contact space using support vector machines, and precompute the space transformation between the spherical space and the contact space using spherical parameterization, which can be precomputed. Our runtime algorithm uses a nearest-neighbor query in the spherical space and the space transformation to approximate the continuous penetration depth. Our approach has been tested using complex models with tens or hundreds of thousands of triangles. The computational overhead for the performance of the runtime query is almost constant, and it takes about 0.01 ms to compute the continuous penetration depth for these complex models.Compared to prior approaches, our new measure of interpenetration and the derived approximation algorithm have the following advantages.(i)Continuity with respect to object motion: the penetration depth magnitude and direction continuously change for a continuous relative motion in configuration space.Differentiability with respect to the motion parameters. The derivatives of continuous penetration depth are well defined if the contact space is smooth and the motion is continuous.Applicability to convex and non-convex contact spaces that are homeomorphic to a sphere.Organization: The rest of the paper is organized in the following manner. We survey related work on penetration depth formulations and techniques in Section  2. We introduce our terminology and derive the formulation of our continuous penetration depth in Section  3. Our methods for approximating a contact space using binary classification and for precomputing the spherical parameterization are given in Section  4. Our runtime penetration depth query is given in Section  5. Some experimental results and comparisons are given in Section  6. We conclude this paper and propose possible future work in Section  7.

@&#CONCLUSIONS@&#
