@&#MAIN-TITLE@&#
A bi-objective column generation algorithm for the multi-commodity minimum cost flow problem

@&#HIGHLIGHTS@&#
We present a new algorithm for bi-objective multi-commodity min cost flow problems.This is the first application of Dantzig–Wolfe decomposition to biobjective problems.Numerical results demonstrate the effectiveness of the algorithm.

@&#KEYPHRASES@&#
Network flows,Bi-objective multi-commodity minimum cost flow problem,Dantzig–Wolfe decomposition,Column generation,Bi-objective simplex method,

@&#ABSTRACT@&#
We present a column generation algorithm for solving the bi-objective multi-commodity minimum cost flow problem. This method is based on the bi-objective simplex method and Dantzig–Wolfe decomposition. The method is initialised by optimising the problem with respect to the first objective, a single objective multi-commodity flow problem, which is solved using Dantzig–Wolfe decomposition. Then, similar to the bi-objective simplex method, our algorithm iteratively moves from one non-dominated extreme point to the next one by finding entering variables with the maximum ratio of improvement of the second objective over deterioration of the first objective. Our method reformulates the problem into a bi-objective master problem over a set of capacity constraints and several single objective linear fractional sub-problems each over a set of network flow conservation constraints. The master problem iteratively updates cost coefficients for the fractional sub-problems. Based on these cost coefficients an optimal solution of each sub-problem is obtained. The solution with the best ratio objective value out of all sub-problems represents the entering variable for the master basis. The algorithm terminates when there is no entering variable which can improve the second objective by deteriorating the first objective. This implies that all non-dominated extreme points of the original problem are obtained. We report on the performance of the algorithm on several directed bi-objective network instances with different characteristics and different numbers of commodities.

@&#INTRODUCTION@&#
The multi-commodity minimum cost flow problem (MCMCF) is a network optimisation problem where several commodities need to be sent from their source nodes to their sink nodes. Individual commodities share arcs and compete for the capacity of the arcs. The MCMCF problem can be modelled as a linear optimisation problem with two sets of constraints: The flow conservation constraints and the capacity constraints which tie the commodities together. These constraints have a special block diagonal shape. Taking advantage of this special structure, several decomposition approaches for solving the problem have been developed (see Assad, 1978 and references therein). In many application contexts of network models such as transportation, assignment, transshipment and location problems, there is more than one objective that has to be taken into account. These objectives include time, cost, risk, environmental concerns etc. Thus, multi-objective flow models are more appropriate for modelling real-world decision making situations than single objective models (Aneja and Nair, 1979; Current and Marsh, 1993; Current and Min, 1986; Lee, Green, and Kim, 1981; Lee and Schniederjans, 1983; Moore, Taylor, and Lee, 1978; Ulungu and Teghem, 1994). In this paper we consider the bi-objective multi-commodity minimum cost flow problem (BMCMCF). We propose a decomposition algorithm that is based on the bi-objective simplex algorithm and employs a new generalisation of Dantzig–Wolfe decomposition to bi-objective linear programmes.LetG:=(V,A)be a directed network with a set of nodes or verticesV:={1,2,…,n}and a set of arcsA⊆V×Vwith|A|=m. Furthermore, let(ca1,k,ca2,k)be the pair of unit flow costs on arca∈Afor commodity k andxakrepresent the amount of flow of commodity k going through arca∈A. Let E be the node arc incidence matrix of the network and letxk:=(xakfora∈A)be the flow vector for commodity k. Let bkbe the demand vector for each commodity k and u be the vector of arc capacities. By defining cost vectorsc1,k:=(ca1,kfora∈A) andc2,k:=(ca2,kfora∈A) the BMCMCF problem can be written as the following bi-objective linear programme(1)minz(x):=(z1(x):=∑k:=1q(c1,k)Txkz2(x):=∑k:=1q(c2,k)Txk)s.t.Ex1=b1Ex2=b2⋯Exq=bqIx1+Ix2+⋯+Ixq+IAPTARABOLDAPTARABOLDs=uxk,s≧0,forallk:=1,2,⋯,q,where I is an m × m identity matrix and s is a vector of slack variables. We assume that∑i:=1nbik=0,k:=1,2,…,q,otherwise the problem is infeasible. The first q sets of constraints represent flow conservation at the n nodes for all q commodities. A valuebik>0,bik<0,orbik=0,respectively, indicates that node i is a supply node, a demand node, or a transshipment node for commodity k. The next set of m constraints ensures that the overall flow of commodities along each arc amounts to at most the arc capacities.The BMCMCF problem (1) is a bi-objective linear optimisation problem which can be solved by existing bi-objective linear programming algorithms (Moradi, Ehrgott, and Raith, 2012), such as the bi-objective simplex method, see e.g. Ehrgott (2005) and Section 3.1. The specially structured block diagonal constraint matrix of problem (1) permits the application of the Dantzig–Wolfe decomposition method. This has been done in the single objective case, see Section 3.2, In this paper, we generalise this approach to the bi-objective case. We demonstrate how Dantzig–Wolfe decomposition can be used to generate columns of the BMCMCF problem in the context of the bi-objective simplex method, thereby extending our preliminary results in Moradi, Raith, and Ehrgott (2013).By integrating the bi-objective simplex method with the Dantzig–Wolfe decomposition method we present a new method for solving the BMCMCF problem which we shall refer to as the bi-objective simplex decomposition (BOSD) method.This paper is organised as follows: Recent literature is briefly discussed in Section 2. Necessary mathematical background as well as the bi-objective simplex method and standard Dantzig–Wolfe decomposition method are explained in Section 3. In Section 4, we introduce our proposed BOSD method. Finally numerical results are illustrated in Section 5.There does not exist a lot of research on multi-objective MCMCF problems, so we also review research conducted on multi-objective minimum cost flow problems with only a single commodity. The most recent survey on multi-objective minimum cost flow problems is by Hamacher, Pedersen, and Ruzika (2007). We will therefore briefly mention only newer published work on multi-objective network flow problems, one of which considers multiple commodities.Sedeño-Noda, González-Martín, and Alonso-Rodríguez (2005) present a change of variables method to solve the bi-objective undirected two-commodity minimum cost flow problem. They formulate the problem as follows:(2)minz(x):=(z1(x):=∑k:=1,2∑(i,j)∈Acijkxijkz2(x):=∑k:=1,2∑(i,j)∈Adijkxijk)s.t.∑{j:(i,j)∈A}xijk−∑{j:(j,i)∈A}xjik={bkifi=sk0ifi∈V−{sk,tk},−bkifi=tkk:=1,2|xij1|+|xij2|≦uij,forall(i,j)∈A.By using absolute values for the amount of flow in the last set of constraints of (2), the values of the flow can be negative for each edge. The method by Sedeño-Noda et al. splits the problem into two bi-objective minimum cost flow problems with a single commodity and uses the parametric network simplex method to solve these problems. This method cannot be extended to more than two commodities and also works only for undirected two-commodity problems.Eusébio, Figueira, and Ehrgott (2008) develop a primal–dual bi-objective simplex algorithm for the bi-objective single commodity network flow problem that is based on the bi-objective primal–dual simplex algorithm of Ehrgott, Puerto, and Rodríguez-Chía (2007) but uses reduced cost information to avoid redundancy. They report that their method does not perform efficiently on large scale instances.Raith and Ehrgott (2009) present an algorithm to compute a complete set of efficient solutions for the bi-objective (single commodity) integer minimum cost flow (BIMCF) problem based on the two-phase method, see Przybylski, Gandibleux, and Ehrgott (2011) for a recent survey on the two-phase method. In Phase 1 they use a parametric network simplex algorithm (Sedeño-Noda and González-Martín, 2000) to compute all integer solutions the images of which are extreme points of the boundary ofconv(Z),whereconv(·)is the convex hull of its argument andZis the image in objective space of the feasible set. Since they solve an integer bi-objective optimisation problem, the images of some of the efficient solutions lie in the interior ofconv(Z). In Phase 2, these remaining efficient solutions are computed using a k best flow algorithm Hamacher (1995) on single objective weighted sum problem. Since multi-objective integer problems are harder than continuous ones, BIMCF instances solved in literature all have small size and all algorithms mentioned here perform well only for small and medium sized instances.Eusébio and Figueira (2009b) present and implement an algorithm for finding all supported efficient solutions to the BIMCF. Their method is based on a negative-cycle algorithm used in single objective minimum cost flow problems (Ahuja, Magnanti, and Orlin, 1993) applied to a sequence of parametric problems. They prove that all supported efficient solutions are connected via a chain of zero-cost cycles in the incremental graph constructed from basic feasible solutions corresponding to extreme efficient solutions.Eusébio and Figueira (2009a) solve a sequence of ɛ-constraint problems (Chankong and Haimes, 1983) in the context of finding all the non-dominated solutions of the BIMCF problem. The integer optimal solutions to the ε-constraint problems are obtained by a branch-and-bound method. Similar to Eusébio et al. (2008), this method performs well only on small or medium size instances.With the exception of work on undirected bi-objective two-commodity MCMCF problem (Sedeño-Noda et al., 2005) there does not exist any research on the multi-objective MCMCF problems, in particular there is no published research on Dantzig–Wolfe decomposition for multi-objective network flow problems.

@&#CONCLUSIONS@&#
