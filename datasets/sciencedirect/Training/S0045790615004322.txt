@&#MAIN-TITLE@&#
A steganographic method using Bernoulli’s chaotic maps

@&#HIGHLIGHTS@&#
A steganographic method for hiding information is proposed using four Bernoulli’s chaotic maps.It is applied a two-step scheme: Pixel selection and masking of sensitive information.A module function is applied to the chaotic maps considering an iterated process.There is no evidence of periodicity in the sequences produced by the modified Bernoulli’s maps.It is assumed that each map uses two 64-bits variables, and the key space has been estimated in 2508.

@&#KEYPHRASES@&#
Steganographic method,Bernoulli map,Pixel substitution,Statistical analysis,

@&#ABSTRACT@&#
This paper proposes an alternative for building a data hiding algorithm into digital images. The method is based on chaos theory and the least significant bit technique for embedding a secret message in a image. Specifically the Bernoulli’s chaotic maps are used, to perform the following processes: (i) encrypt the bits of the message before embedding them into the cover image, (ii) a random selection of the image’s compositions (R,G or B) must be performed and the insertion of the secret message in a random way to (iii) rows and (iv) columns of the image. Several experimental results are shown under different evaluation criteria, such as entropy, autocorrelation, homogeneity, contrast, energy, peak signal-to-noise ratio, mean squared error and maximum absolute squared deviation. Experimental results show a good improvement in the peak-signal-to-noise-ratio and Image Fidelity value of the proposed algorithm in comparison to the results obtained from similar algorithms.

@&#INTRODUCTION@&#
The internet has caused a substantial increment in data transmission; such data can be important information for social security or bank account numbers, as well as other sensitive information that can be used by swindlers. Many cryptographic [1] and steganographic techniques [2] have been developed to reduce the data vulnerability, these techniques may add the following attributes to the information.•Confidentiality, which refers to the addition of a restriction attribute in the sensitive information that is used to limit the information access only to authorized users.Integrity, which is the added attribute that allows identifying when sensitive information has been modified.Non-repudiation is the attribute in the sensitive information that allows verifying when an information sender or receiver denies the information that is communicated.Authentication allows confirming the identities of the information sender and receiver in the communication proces s.The modern steganographic techniques are used to provide secrecy in communication by building subliminal channels to hide information into a cover digital media. These techniques are used to satisfy the insecure scenarios defined by the prisoners’ dilemma established by Simmons in 1983 [3]. On other hand, the cryptographic communication arouses suspicion that there is something important in the communications channel, meanwhile the steganographic communication goes unnoticed. The most important feature that a steganographic scheme should possess is statistical undetectability. In other words, the observer of the communication process should not be able to distinguish between a cover and its respective steganogram. The formal description of this requirement in information-theoretic terms was developed by Cachin in 1998 [4]. The use of steganographic techniques was reconsidered in protection systems in 1996, when the low bit coding, phase coding and spread spectrum techniques were studied by Bender [5] to hide data into digital media with minimal degradation. There is a large variety of techniques to hide secret information in images; some of them are more complex than the others, and all of them have strong and weak aspects. There are several approaches to classify the steganographic techniques [6]. For example, the type of cover used for a subliminal communication can be used, but the cover modifications applied in the embedding process are another possibility. In this work, the last criterion has been used, and then the classification of steganography techniques based on the cover modifications applied by some embedding process can be as follows:(a)Least significant bit method (LSB). This approach is simple because the least significant bits of some bytes inside an image are replaced with bits of the message to be hidden. In some cases LSB of pixels visited in random areas of image. Some examples of this approach can be reviewed in [7,8]. These techniques are realized in the image spatial domain.Transform domain techniques. This approach embeds secret information in a transformed space of the signal (e. g. in the frequency domain). The significant areas of the cover image are used to hide messages. These techniques are more robust to attacks such as compression, cropping and some image processing compared to LSB techniques. A novel technique named DeRand (Data embedding in Random domain) has been used to embed information increment or decrement the value of the pixels randomly selected; DeRand techniques define redundancy in any digital signal by applying the universal parser such that the high entropy random signal can be used for data embedding [9,10].Spread spectrum techniques. This approach adopts ideas and concepts from spread spectrum communication systems [11,12].Statistical methods. This approach embeds information by changing several statistical properties of a cover and use hypothesis testing in the extraction process [13].Distortion techniques. This approach embeds information by distorting a signal and measuring the deviation from the original cover in the extraction step [14,15].Cover generation methods. This approach embeds information in the way a cover for secret communication is created. Some examples of this approach can be reviewed in [16].The implementation of steganography techniques can include different mathematic concepts and tools. In particular, steganography techniques that use Chaos Theory are emerging [17,18]. Chaotic systems are attractive in security information because they are nonlinear systems characterized by high sensitivity to initial conditions and control, unpredictability, ergodicity and mixing properties, and then they can produce deterministic signals with random appearance suitable in the design of steganographic algorithms. Specifically, this work is focused on the techniques that use one-dimensional chaotic maps [19,20]. In this work, the steganographic method proposed is based on Bernoulli chaotic maps. This chaotic map is simpler than the TD-ERCS, and NCA chaotic maps used by Anees et al. [20] and the obtained results are similar to the results produced by Anees’s algorithm. Additionally, Bernoulli’s chaotic map is a piece-wise-linear (PWL) chaotic map that has no stability islands inside its chaotic region as it occurs with the logistic map; therefore, its control parameter can be modified into a specific interval in (0,1) of the real numbers. This map can generate pseudorandom sequences with statistical distributions very close to uniform distribution. The proposed algorithm uses the LSB technique for data hiding, which is a simple and straightforward technique that also has the advantage of embedding more information than the transform techniques keeping the texture of digital image almost unaffected. The problem with spatial techniques is the low robustness against statistical analysis and differential attacks. In this paper, three Bernoulli chaotic maps are used to propose a chaotic steganography algorithm in the spatial domain that exhibits good statistical features, and it has security conditions against different attacks. Furthermore, the proposed algorithm has a previous stage of chaotic encryption to modify the statistical characteristics of the message that is intended to hide. Also, in this previous stage a Bernoulli’s chaotic map is used.This paper is organized as follow: The mathematical model Bernoulli’s chaotic map is given in Section 2, the structure of the proposed method is presented in Section 3, simulations results analysis are provided in Section 4, a comparison with similar algorithms are provided in Section 5 and finally in Section 6 the conclusions are presented.The Bernoulli map, also known as dyadic transformation, can be defined as an iterated map of the PWL function according to Eq. (1).(1)f(x)={2μx,0≤x<0.52μx−1,0.5≤x<1,where x ∈ (0, 1) and μ ∈ (0, 1).The definition domain of Bernoulli’s map is the interval (0, 1); and for calculations, a floating point number representation is used. But when the map is used to process binary files, the Bernoulli’s map defined by Eq. (1) should be modified to use a fixed-point representation for each number considering only natural numbers. In this way, the modified Bernoulli’s map has its definition domain in the interval (0, limit), considering that limit is an arbitrary but known value and it is in (1, MaxRep) with MaxRep is the largest number that can be represented in a computer.(2)g(x)={floor(2μx),0≤x<limit2floor(2μx−limit),limit2≤x<limit,now x ∈ (0, limit), μ ∈ (0, 1) and floor(x) is a function that truncates a number x to lower whole.Notice that Eq. (2) includes a scaling and discretization process over chaotic map defined in the real numbers. But it now represents a new chaotic map in the natural numbers, and then each natural number produced by this new map must be translated to a number in fixed-point representation. In this way, the universe of natural numbers has a cardinality of 2N, where N represents the number of bits in the binary representation of each natural number. Some authors have reported a degradation problem in the chaotic behavior of the map when a fixed-point representation [21,22] is used in the calculations for the iterated process; such degradation can be solved or at least minimized using a larger quantity of bits [10] in the number representation. Fig. 1shows various sequences to determine how the value of limit and a specific value of x0 affects the chaotic behavior of the map; the presented sequences were obtained iterating Eq. (2),xn+1=g(xn),and using small numbers for the variable limit and a specific value of x0. For the four sequences, μ is 0.9; moreover, the value of limit was 3, 5 and 10, respectively. The top sequence has only numbers ‘1’; for the middle sequence, the map has a brief transient behavior but after a few iterations, it produces a sequence of only numbers ‘0’. Finally, the bottom sequence shows an oscillating behavior; in consequence, to prevent disorder in the behavior of the iterated function is given by Eq. (2), high value for limit will be used.Besides of using high values of the variable limit, the degradation problem in the behavior of the iterated map remains, ergo a technique to overcome it is needed. Additionally, the module function is applied considering a iterated process defined byxn+1=mod(g(xn),k). This map is defined in the natural numbers. The consequence of this strategy could be the evidence of periodicity in the produced pseudorandom sequences. In Fig. 2, two bifurcation diagrams are presented; the left one is the bifurcation diagram for the original sequence produced by Eq. (2) using a limit = 1000. Notice that the mentioned periodicity evidence do not exists. That is, any value of control parameter, μ, at (0.5, 1.0) can be considered and no evidence of periodicity is produced. The right one is the bifurcation diagram using the module function, to determine it using limit = 1000.Another observation taken from Fig. 2 is that the bifurcation diagram for the original sequence produced by Eq. (2) is not completely dense. To reduce, even more, the degradation in the behavior of the map, other map is proposed, which includes an increasing factor named factor, see Eq. (3). Notice that its definition domain is the interval (0, limit*factor) and the mathematical description of the map as,(3)h(x)={floor(2μx),0≤x<limit2*factorfloor(2μx−limit2*factor≤x(limit*factor)),<limit*factor,where xn∈ (0, limit*factor) and μ ∈ (0, 1).According to Fig. 2 where limit remains steady at 1000 for both diagrams; if factor is increased from factor = 100 (right bifurcation diagram) to factor = 1000 (left bifurcation diagram), the bifurcation diagram in Fig. 3becomes denser than the Fig. 2 diagram. In similar way, the module function is applied considering a iterated process defined byxn+1=mod(h(xn),k).For a sequence produced by a pseudorandom number generator that will be used in cryptographic or steganographic applications, having satisfactory statistical properties is one of the necessary conditions in order to achieve the security of the system, while it is not sufficient by itself. In this sense, one major issue when chaotic maps are used in cryptographic or steganographic systems is the numerical implementation. Notice that the computers can represent real or natural numbers up to certain precision only. In this way, when the Bernoulli’s chaotic maps are used in a computer, there are problems related with the chaos annulling trap (CAT) that must be considered, because they produce periodicity evidence in the generated sequences [23]. That is, there is at least one initial condition for which chaos is not only sustained but also collapsed, and it can be noticed, that at the value of the parameter for which this occurs. This condition can be achieved as a result of the rounding off done by the computer. Then, the orbits computed can be different, in general, from the theoretical ones; due to it, it is recommended calculations in double precision. As it can be seen in the bifurcation diagram at Fig. 3, the mentioned problem can be overcome in the proposed algorithm if used limit = 1000 and k = 100; regardless of that the chaotic maps have been scaled and quantized. On the other hand, there are other values of initial condition, x0, that produce periodicity evidence, which is called chaos fixed trap (CFT). This condition can be defined calculating the stable fixed points produced by the chaotic maps. The fixed points for the Bernoulli’s chaotic map are xf1 = 0 and xf2 =1/(2μ−1)with μ ≠ 1/2. These points are attractor (stable) points iff′(x)=2μ<1/2.In the proposed algorithm is considered a secure structure of chaotic steganography applied to images that includes two steps: three one-dimensional chaotic maps employed to select the coordinates of pixels to insert sensitive information in the cover image, and another one-dimensional chaotic map is utilized to mask each word of sensitive information before be included in the cover image. In the proposed steganographic scheme, the LSB embedding process adopts a pseudorandom scan, which is preferred over another scan kind to increase the level of complexity faced by the intruders. This scheme employs a chaotic order for embedding the critical data. Thus, all the pixels of the cover image are not used to conceal the secret data, which in turn affects the payload and the good imperceptibility. The pseudorandom scan is based on three modified Bernoulli chaotic map are used with different definition domain and control parameter. These chaotic maps are used to select pseudorandomly the hiding pixels in the cover image considering that their definition domain corresponds to m, n and 3, respectively in a RGB m × n cover image. Additionally, a chaotic map is used to modify the statistical behavior of the message before hiding it. This last chaotic map provides a cryptic effect for the confidential message before embedding, which leads to the first layer of security. The pseudorandom scan approach increases the security of the critical data embedding in the cover image because only the authorized users have the key to the correct scanning technique employed to select the pixels to embed the critical data. The key is defined by the initial condition and the control parameter used in each chaotic map. When loaded with an initial condition x0 and a control parameter μ. Eq. (3) generates a sequence of words xnfor n = 0, 1,.... The 2-tuple (x0, μ) serves as the secret key, k. The key space of Eq. (3) is determined by the number of all possible values for (x0, μ) considering the value of μ for which Eq. (3) exhibits chaotic behavior. Thus, the size of the key space is large, and hence, any exhaustive search through all possible keys depends on the precision representation of the 2-tuple (x0, μ).The proposed steganographic scheme encrypts the critical data using a basic stream cipher using a chaotic map and pseudo-randomizes the pixel selection employing three chaotic maps for embedding the encrypted critical data.In this way, the proposed scheme is defined using the following steps:(i)Reception of digital objects: A message and a color image (cover image) are received. The message will be hidden in the color image.Message encryption: The message is encrypted using a sequence obtained from a modified Bernoulli map to diffuse its statistics and smooth its insertion inside the cover image. The encryption algorithm is very simple because it uses a simple XOR function to combine each 8-bits ASCII code message and each 8-bits word in a sequence noise generated from Eq. (3) using limit = 28 and factor = 1000. The encrypted message word has a length equal to 8 bits, and it is divided in two; forming two 4-bits words. The division smooths even more the insertion process because it reduces possible image statistical affectations. The flow chart in Fig. 4describes the modified Bernoulli’s map. The map requires to define the feedback factor μ, the initial value xn[0] for thenth sequence; in this application four sequences are generated, and each sequence requires its independent initial value. The parameter stop determines how long the sequence is; this parameter strongly depends on message or load length; finally, limit and factor were previously described.Embedding process: Each encrypted message word is embedded in the least four significant bits of the selected pixel in the cover image; the selection of a pixel considers that the cover image has three dimensions: length, width and depth (RGB). For example, in a 256 × 256 cover image, length = 256, width = 256 and depth = 3.Notice that Eq. (3) can be used to select the position of a pixel in a color plane, but not to select that plane, because there are only three color planes. 3 is a very small integer, and then Eq. (3) will produce undesirable sequences. To have a pseudo-random selection of the color plane in the cover image, the map considers that limit = 300 and factor = 1000. And the color plane is selected according to next conditions: if xn∈ [0, limit × factor/3) then the R plane is selected, if xn∈ [limit × factor/3, 2 × limit × factor/3) then the G plane is selected, and finally, if xn∈ [2 × limit × factor/3, limit × factor] is the B plane that is selected. The process is depicted in Fig. 5(b), the process requires the sequence generation process to obtain x3; after that, the process requires a parameter that delimits the loop (stop), and it depends on sequence length. The process also requires of limits and factor to generate each limit; after defining each parameter, the flow diagram uses decisions to elaborate a condition previously described, and to generate x3r, which is delimited (0,3) with only integers. The sequences used for length and width selection only require the module operation for their adaptation; therefore the corresponding flow chart is not described.Once the three dimensions of the cover image were pseudorandomly selected, the lower nibble on each selected pixel is interchanged with one 4-bits word obtained from the sequence derived from the encrypted message. The process is repeated while there are 4-bits words in the encrypted message. The process depicted in Fig 5(a) corresponds to the ciphering process; the process has embedded the sequence generation (x0). Afterward, the sequence is equally divided in two, generating x0h and x0l, the same division is made for the message (msg) generating msgh and msgl. Finally, msgh and x0h are bit-wisely XORed as well as msgl and x0l. With the ciphered message (codh codl) and the selecting sequences correctly adapted (x1r, x2r, x3r), the process catches the cover image (img). The process selects a pixel and deletes the four least significant bits using x1r, x2r and x3r. After the deletion and in a toggling form, the upper or the lower part of the ciphered message is added. The last step is repeated until the message is ciphered completely. The flow chart for the complete process is depicted in Fig. 6.

@&#CONCLUSIONS@&#
For increasing chaotic behavior, a strategy that uses the module function was implemented; the behavior of generated sequences was evaluated and ratified using bifurcation diagrams. The proposed steganographic method encrypts the sensitive data using a basic stream cipher using a chaotic map and pseudo-randomizes the pixel selection employing other two chaotic maps for embedding the encrypted sensitive data. The proposed method was used in ‘baboon.bmp’ image using two messages with different length; the three different images (original and two steganograms) were statistically evaluated. The evaluation methods can be separated in two; the first block of tests individually evaluates each image (original image and produced steganograms) and the second block of tests compares the original images with their respective steganograms. In the tests applied to images, the obtained results are similar for the original image and two steganograms although, steganogram using the message m2 shows results slightly different, regarding the original images. On the other hand, the results obtained from MSE, PNSR and MAXERR are significantly different. That is, the embedded message m2 affects the cover image more than the embedded message m1, and the affectation degree depends on the image dimensions. If the results for the proposed work are compared with other works’ results; the proposed stegano-method hiding m1 has PSNR values among the highest ones with respect to the cited work. Additionally, the PSNR values for the stegano-method hiding m2 they are maintained in acceptable levels. Additionally, the work presents how load length degrades statistically to the steganogram; no other reviewed works report such degradation. Unfortunately, not all works use the same test subject, consequently certain parameters were selected to made comparison. The statistical criteria were MSE and PSNR parameters; concluding that our work is statistically similar to reviewed ones but easier to generate.