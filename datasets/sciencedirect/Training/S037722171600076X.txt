@&#MAIN-TITLE@&#
Competitive difference analysis of the one-way trading problem with limited information

@&#HIGHLIGHTS@&#
We provide a competitive difference analysis of the online one-way trading problem with limited information on prices.We formulate the problem recursively and obtain closed-form solutions via backward induction.Our competitive difference analysis reveals for the first time all possible worst case scenarios.Simulations show that our method exhibits robustness against information inaccuracy.Our method can outperform trading policies by competitive ratio analysis in simulations.

@&#KEYPHRASES@&#
Robustness and sensitivity analysis,One-way trading,Competitive analysis,Online algorithms,

@&#ABSTRACT@&#
We consider robust one-way trading with limited information on price fluctuations. Our analysis finds the best guarantee of difference from the optimal offline performance. We provide closed-form solution, and reveal for the first time all possible worst-case scenarios. Numerical experiments show that our policy is more tolerant of information inaccuracy than Bayesian policies, and can earn higher average revenue than other robust policies while keeping a lower standard deviation.

@&#INTRODUCTION@&#
The one-way trading problem is well studied in the literature, where one-way trading simply means either selling or buying, but not both. A certain quantity of goods must be traded within a given time horizon during which the price fluctuates. The trader has to decide on the amount to trade at each time point as the current price becomes available, aiming to optimize the total trading value, that is, either to maximize the selling revenue or to minimize the buying cost. Typical applications of one-way trading include inventory procurement, merchandising, stock trading, currency exchange, online auctions, and so on. Such a trading process is an online decision-making process, in which irrevocable decisions must be made on the spot at each time point of action, in the face of future uncertainties. The precise rule on how to make the trading decisions during the process is referred to as a trading policy or algorithm. Clearly, how much is known about the future prices is crucial for the trader. When the exact path of future price fluctuation is known in advance, it is equivalent to the offline decision-making that happens in the end of the time horizon after all information is known. The optimal offline policy is simple: to sell all at the highest price or to buy all at the lowest price. The problem only becomes interesting when less is known about future prices, and different problem formulations are proposed in the literature with various degrees of information availability on future prices.Earlier studies assumed probabilistic distribution on price uncertainty, and formulated stochastic optimization problems to design trading policies based on Bayes' rule (Lippman & McCall, 1976, 1981). The distribution of future prices can be estimated from historical data. However, this approach has some limitations due to difficulties in estimating the distribution, besides its risk neutrality assumption. Firstly, there are ample cases where appropriate historical data is unavailable, such as with newly launched products. Secondly, even if there is historical data, it may not be used to predict the distribution of future prices, when the price fluctuation is following some non-stationary random processes or due to some emergency situation which impacts future prices structurally. Finally, there are different ways to estimate the distribution from data and the particular choice of estimation could mislead the trader. Thus when there are reasons to doubt the soundness of the estimated distribution, it is valuable for the trader to find a robust trading policy based on less but more reliable information about future prices, which gives occasion to the research on trading policies with only limited price information.A formulation based on much more limited information, knowing only the range of price fluctuation, is first proposed by El-Yaniv, Fiat, Karp, and Turpin (2001), as an optimal online trading algorithm is provided by competitive ratio (CR) analysis. They managed to transform the one-way trading problem into a zero-sum game between the trader and a hypothetical adversary, who always tries to inflict worst-case prices on the trader. The value function of the game is the ratio between the performance of the online and the offline trading algorithm, and the worst-case ratio for the trader is known as the CR. Because of the complexities evolved from the mathematical form of the value function, the game can hardly be solved directly via backward induction. Instead, El-Yaniv et al. (2001) resorted to an ad-hoc solution procedure based on intuition. After first assuming certain structural properties of the online algorithm, they found the CR and the corresponding online trading algorithm called the threat-based policy, which they proved to be optimal. The research of El-Yaniv et al. (2001) is not without limitations. First, it heavily depends on intuition on the structure of the online algorithm. For more complex problems, such intuition might not be available. More importantly, their intuitive approach has probably only found some very special worst-case scenarios, while missing many other interesting ones. Second, their original threat-based algorithm is unable to improve on the CR whenever the price deviates from the worst-case scenario. Even though they have designed an adaptive online algorithm to fix this issue to some extent, they still depend on the same intuition.We are the first to apply the mini–max regret criterion proposed by Savage (1951) to solve the one-way trading problem with limited information. The regret of a policy under a specific state refers to the loss due to choosing this policy instead of the optimal one under this particular state. The worst regret of a policy is the maximum regret of this policy under all possible states. The mini–max regret criterion aims at finding the policy with the minimum worst regret, which can be utilized for robust decision-making. This approach based on Savage's regret criterion to analyze online algorithms is called competitive difference (CD) analysis, for its similarity to the CR analysis. In fact, the CD analysis finds an online trading algorithm with the smallest worst-case performance gap from the optimal offline algorithm. In other words, the online trading algorithm found by CD analysis is the closest to the optimal offline algorithm if the distance is measured by the worst-case performance gap. As CD analysis has a simpler mathematical form in the value function than CR analysis, it can obtain closed-form solutions directly via backward induction, without having to guess about the structure of the optimal online policy first. The CD analysis of the one-way trading problem reveals for the first time all possible worst-case scenarios, while providing both the non-adaptive and the adaptive online trading policy at the same time. In addition, numerical experiments show that for revenue-maximization problems, the online trading policy obtained from CD analysis outperforms that from CR analysis, earning higher average revenue with lower standard deviation when the trading horizon is not too short.This paper is organized as follows. In Section 2, we provide a literature review on topics related to the one-way trading problem, including the time series search problem, the one-way trading problem, and some extended work from the research of El-Yaniv et al. (2001). In Section 3, we introduce the general approach of CD analysis. In Section 4, we find the optimal online trading algorithm for the general multi-period one-way trading problem via CD analysis, and study some nice properties of this online trading algorithm, including its robustness, optimality, and the worst-case scenarios. In Section 5, we conduct numerical performance comparison of our online trading algorithm based on CD analysis with that of El-Yaniv et al. (2001) based on CR analysis, as well as the optimal offline algorithm and the algorithm with distribution information. Finally, we summarize our results and point out some promising directions for future research.We review the literature on some problems closely related to the one-way trading problem – in fact, some papers even treat some of them together. On the other hand, we will focus on robust optimization with limited information, and leave out the vast amount of literature on Bayesian approaches, for which we refer the reader to Lippman and McCall (1981).The time series search problem is closely related to the one-way trading problem, as the only difference between them is that the former only allows for one transaction, while the latter allows for multiple transactions to complete the total trading quantity. Also, the randomized online search can be regarded as a deterministic one-way trading problem and vice versa (El-Yaniv et al., 2001). For the search problem with constant upper and lower price bounds, El-Yaniv et al. (2001) find both the optimal deterministic and randomized reservation price policy. For the search problem with time-varying price bounds, Damaschke, Ha, and Tsigas (2009) design an optimal deterministic algorithm and a nearly-optimal randomized algorithm for the continuous time model, as well as an optimal randomized algorithm for the discrete time model. Xu, Zhang, and Zheng (2011) extend the search problem by introducing a general profit function which increases in price but decreases in time, and they propose two optimal deterministic algorithms respectively for both cases when the search duration is either known or unknown beforehand.The next related problem is the k-search problem. In a k-search problem, the trader must trade k indivisible items one by one within a horizon, so he should try to find the k highest (or lowest) prices in a sequence. Lorenz, Panagiotou, and Steger (2009) first consider the k-search problem. They figure out the optimal deterministic and randomized algorithms for both the maximization and the minimization objectives. Zhang, Xu, Zheng, and Liu (2011) generalize this research by allowing to trade multiple items at each period and present an optimal deterministic algorithm for the case where the quantity of the item is smaller than the length of the trading horizon. Zhang, Xu, Zheng, and Dong (2012a) further consider the so-called multiple time series search problem in which one product arrives at each period and the storage capacity is limited, and they compare three types of online algorithms.The one-way trading problem with limited information is first considered by El-Yaniv et al. (2001), where only constant upper and lower price bounds are known. They design a threat-based online trading policy via CR analysis. Chen, Kao, Lyuu, and Wong (2001) as well as Zhang, Xu, Zheng, and Dong (2012b) examine the one-way trading problem with time-varying price bounds which depend on the price at the previous period, and present the optimal deterministic and randomized policy. Larsen and Wohlk (2010) apply the competitive analysis techniques to the online inventory control problem with inventory holding costs and possible order costs. Dai, Jiang, and Feng (2016) improve the upper bound of the CR given by Larsen and Wohlk (2010) in the case with order costs and bounded storage capacity.Although CR analysis is frequently applied to search and one-way trading problems in the literature, it is often criticized for being too conservative. Several researches try to amend it by adopting alternative performance measures of the online algorithms, which are summarized by Dorrigiv and Lopez-Ortiz (2005). Boyar, Larsen, and Maiti (2014),, compare multiple performance measures for the time series search problem. Fujiwara, Iwama, and Sekiguchi (2011) conduct average-case competitive analysis and derive optimal online algorithms for the one-way currency exchange problem in which the upper bound of prices follows a probability distribution. Mohr and Schmidt (2013) compare the performance of online algorithms based on competitive analyses with different types of information about future prices, and try to measure the value of information. They point out that more information does not necessarily lead to better performance of online algorithms.All those amendments mentioned above adhere to the CR analysis, and the inherent analytical difficulties prevent them from having such a thorough analysis as we have in this paper. Our research introduces the competitive difference as the performance measure of online algorithms which simplifies the analysis and enables us to use backward induction without resorting to intuitions as in El-Yaniv et al. (2001). Our approach also leads to less conservative online policies for the revenue-maximization problem.In the one-way trading problem knowing only the price range, it is not possible to construct stochastic optimization models, so we adopt the robust optimization approach and apply Savage's mini–max regret criterion to this online decision problem. In an online decision problem, although there is some partial knowledge G about the future in the beginning, what will really happen is revealed sequentially in time and the decision maker has to make irrevocable decisions immediately upon the disclosure to take timely actions. For discrete time periods, with an input sequence revealed up to period t,It=(i1,i2,…,it), the online decision maker must make the decision for period t, denoted ot, when he only knows G, Itand his historical decisions before period t,Ot−1=(o1,o2,…,ot−1). Thus an online algorithm, denoted ALG, calculates the decision otaccording to some function ftthat only depends on G, ItandOt−1, that is,(1)ALG={(o1,o2,…,on):ot=ft(It,Ot−1;G),t∈{1,2,…,n}}To find an optimal online algorithm, an appropriate performance measure or criterion must be chosen. Instead of measuring the performance in absolute terms, we evaluate the online algorithm in relation to an ideal algorithm, which is usually chosen to be the optimal offline algorithm. The choice of such an ideal algorithm enables us to employ the mini–max regret criterion proposed by Savage (1951). Given a specific realization of the input sequence, the regret of the online algorithm is the performance difference from the optimal offline algorithm. The regret varies for different realizations of the input sequence, and the worst regret is called the competitive difference (CD) to emphasize its similarity to the CR. Our objective is to find the online algorithm with the smallest CD, and this process is called the CD analysis.We precisely define our CD approach mathematically in comparison with the CR approach. Suppose the input sequence is I, and let ALG(I) denote the absolute performance (i.e., the total trading value) of the online algorithm, and that of the optimal offline algorithm is OPT(I). The CD and CR of the online algorithm ALG are defined respectively in Table 1, both for revenue-maximization and for cost-minimization problems. Both the CD and CR analysis can be regarded as a zero-sum game between the decision maker and an imaginary adversary who always chooses the worst input sequence I to make the online algorithm as far from the optimal offline algorithm as possible. The resulting maximum difference is called the CD of the online algorithm, denoted D(ALG), and the resulting ratio is called the CR, denoted R(ALG). The decision maker seeks for an online algorithm with minimum CD or CR.It is helpful to compare the CD analysis we employ to the CR analysis proposed by Sleator and Tarjan (1985). Although both approaches will end up choosing an online algorithm as close as possible to the optimal offline algorithm, they differ in how to measure the closeness. Our approach measures the closeness by the difference between the performances of these algorithms while Sleator and Tarjan use the ratio between their performances. Therefore, we call our approach the CD analysis, and call the approach of Sleator and Tarjan the CR analysis. The CD and CR analysis both consider worst-case scenarios, and thus are both risk-averse. However, they are different in the degree of risk-averseness. To see that, we consider the generalized competitive analysis that works on utility instead of monetary terms, so that one analysis converts into the other with a different utility function. In the CR analysis of the revenue-maximization problem, the objective function OPT(I)/ALG(I) can be replaced by ln [OPT(I)/ALG(I)], orlnOPT(I)−lnALG(I), thus the CR analysis becomes a CD analysis with a logarithm utility function. Now we may compare the CR analysis (viewed as CD analysis with a logarithm utility function) and the raw CD analysis (i.e., with a linear utility function), and we observe that they only differ in the utility function. As utility functions reflect risk attitudes, we may conclude that the revenue-maximizing decision maker is less risk-averse (or more risk-seeking) under the CD analysis than under the CR analysis. Since cost has a negative effect on utility, the cost-minimization decision maker is more risk-averse (or less risk-seeking) under the CD analysis than under the CR analysis. In the numerical experiments section, the policy from CD analysis is shown to be less conservative than the CR counterpart.We consider a one-way trading problem with a finite number of time periods to trade. Without loss of generality, the total trading quantity is normalized to one, as the goods to trade are assumed continuously divisible, such as gasoline, coal, steel and so on. In the case of discrete units of goods, when the total amount is sufficiently large, the problem can be approximated by its continuous counterpart with goods continuously divisible. Transactions can only be conducted in one direction throughout the trading horizon, that is, the trader can only sell or purchase, but not both. The trading horizon consists of T discrete time periods with T ≥ 2. There is a unique price for each period and ptdenotes the price at period t fort=1,…,T.Prices during the whole time horizon fluctuate within the range [m, M] that is known in advance. On the observation of the price unfolded at the beginning of each period t, the trader must immediately decide on the trading quantity ktfor this period without knowing the future prices. In the last period (period T), the trader must trade whatever is left regardless of the current price. We do not have price inquiring cost and transaction fees. It is desirable for the trader to obtain more sales revenue or to incur less procurement costs.In our analysis, we usep¯t=max(p1,p2,…,pt)andp̲t=min(p1,p2,…,pt)for the highest and the lowest price seen so far. Let Ktdenote the accumulated trading quantity through period t, i.e.,Kt=∑i=1tki, and let Ctdenote the accumulated revenue or costs until the end of the period t, i.e.,Ct=∑i=1tpiki. Finally, letx+=max(x,0)be the positive part of any real number x. If necessary to distinguish the notations, we use the superscript “S” for the selling problem (i.e., the revenue-maximization problem) and “B” for the buying problem (i.e., the cost-minimization problem). As both problems are similar in structure and there is little difference in their analysis, we will focus on the selling problem and leave the analysis of the buying problem in the appendices. From now on, the two words ``trade'' and ``sell'' are interchangeable.Similar to the CR analysis, the CD analysis is equivalent to a multi-period zero-sum game between the trader and an imaginary adversary. At each period, the adversary first reveals the price for the current period, then the trader must determine how much to trade at that price, which is good only for that period. This game can be solved via backward induction.In the final period (period T), the trader must finish whatever amount of goods is left, and the game ends. Then it is time to evaluate how relatively well the trader performs by finding out the regret. We don't need all the pricing and trading history records in details before the final period for us to calculate the regret. Instead, it is enough to pass to the last period from its previous period the following three pieces of data: the accumulated transaction quantityKT−1, the accumulated revenueCT−1, and the highest pricep¯T−1seen through the firstT−1periods. GivenKT−1,CT−1andp¯T−1, since the trader has to finish the remaining trading task in the last period, that is,kT=1−KT−1, the regret is simplymax(p¯T−1,pT)−(CT−1+pT(1−KT−1)), where the first part represents the total revenue of the optimal offline trading policy and the second part represents that of the online policy. This regret is what the adversary maximizes in period T by setting pT. Therefore, letDTS(KT−1,CT−1,p¯T−1)denote the CD (or worst regret) of the last period and we have(2)DTS(KT−1,CT−1,p¯T−1)=maxpT∈[m,M][max(p¯T−1,pT)−(CT−1+pT(1−KT−1))]Now we work our way backwards from the last period. For periodT−1to provide the necessary data for the last period, all it needs from its previous periodT−2are similar, which is also true recursively for all the other periods. The data passed on from period to period is called the state, and we have the following state transition equations:(3){Kt=Kt−1+ktCt=Ct−1+ptktp¯t=max(p¯t−1,pt)fort=1,…,Twithp¯0=m,K0=0,C0=0as the initial state. At the beginning of period t, things happened before are captured in the state passed on from the previous period, and the players work from that point on until the end of game, which can be considered as a sub-game. The value of the sub-game, which is the CD, totally depends on the state passed on from the previous period. So letDtS(Kt−1,Ct−1,p¯t−1)denote the CD of the sub-game from period t as a function of the state. Since the adversary maximizes the regret by revealing a price first and the trader then decides on the amount of trading to minimize the resulting CD, we have this recursion, using the state transition equations (3):(4)DtS(Kt−1,Ct−1,p¯t−1)=maxpt∈[m,M][minkt∈[0,1−Kt−1]Dt+1S(Kt−1+kt,Ct−1+ptkt,max(p¯t−1,pt))]This recursive formulation of the one-way trading problem by (2)–(4) is ready to solve via backward induction. The detailed solving process is given in the appendices. We can derive the trader's optimal response function at period t (1 ≤ t ≤ T) as follows:(5)ktS={(K¯tS−Kt−1)+ifpt>m[0,(K¯tS−Kt−1)+]ifpt=mwhereK¯tSis found to be(6)K¯tS=1−(T−t)(1−(p¯t−mM−m)1/(T−t))Eq. (5) corresponds to the function ftin (1). It provides the basis for an online algorithm denoted by CDA that responds with the optimal trading quantity to any price in each period. As can be seen from (5), if the current price is greater than the lower bound m, then the optimal transaction quantity is unique, and the accumulated trading quantity Kt will reachK¯tSifK¯tS≥Kt−1. In the special case when the current pricept=m, the optimal trading quantity can take any non-negative value no greater than(K¯tS−Kt−1)+. The control parameterK¯tSis called the target control for Kt, the accumulated transaction quantity, as the resulting Ktwill be as close to it as possible. We note thatK¯tS≤1and equality is obtained only whenp¯t=Mort=T, which gives the condition to sell out everything immediately. Also note thatK¯tSis positive if and only ifp¯t>m+(M−m)(T−t−1T−t)T−t. Finally,K¯tSstrictly increases with t before it reaches 1 and remains at 1 afterwards (see a proof in the appendix). ThusK¯tS>0impliesK¯t+1S>0,K¯t+2S>0,…,K¯TS>0.The online algorithm CDA does not depend on the current price ptif it is lower than the historical maximum pricep¯t−1. It is possible that even withpt=mthe trader may still trade a tiny quantity. This behavior is different from that of the threat-based algorithm in El-Yaniv et al. (2001), which for the sake of easier analysis rules out any trading whenever the current price is not the highest seen so far. It is a little surprising that the online trader may still sell even atpt=m, since he can always wait for a potentially better price in the future. However, it can be rationalized that selling cautiously within a certain amount atpt=mdoes not hurt the CD at all. As long as there is sufficient amount left to sell in the future, the online algorithm can take advantage of any high prices that may come, so as to keep itself competitive in relation to the optimal offline algorithm.Next we show by a numerical example in Table 2that our CDA and the CRA given in Section 4.2 of El-Yaniv et al. (2001) respond quite differently to the same price path. Here, we takem=1,M=2,T=7.The optimal response function for the adversary at period t (1 ≤ t ≤ T) obtained via backward induction is(7)ptS={m+(M−m)(T−t+Kt−1T−t+1)T−tifKt−1>K¯t−1Sm+(M−m)(T−t+Kt−1T−t+1)T−tormifKt−1=K¯t−1SmifKt−1<K¯t−1SEq. (7) shows that there are two possible price responses from the adversary, which to choose depends on the comparison of the accumulated trading quantity in the previous period with its target control level. If it is greater than the target level (the seller trades too much), the price response will be high, thus it is called the over-trading punishment price. In this case, the more goods already sold, the higher the price response. If it is lower than the target level, then the price response will be at the lower bound, thus it is called the under-trading punishment price. And finally if the target level is met exactly, the price response can be either of the two possibilities, which means the adversary is indifferent between them.The value of the sub-game from period t for 1 ≤ t ≤ T isDtS(Kt−1,Ct−1,p¯t−1), which has the following closed-form expression:(8)DtS={mKt−1−Ct−1+(M−m)(T−t+Kt−1T−t+1)T−t+1ifKt−1≥K¯t−1SmKt−1−Ct−1+p¯t−1−mifKt−1<K¯t−1SThe CD value in the first period isD1S=(M−m)(T−1T)T, which is the mini-max regret attainable by the trader for the whole trading horizon. We note that the actual CD value can be reduced if the adversary makes pricing mistakes during the trading horizon. CDA can take full advantage of the adversary's deviation from an equilibrium price path (a worst-case scenario) to narrow the realized CD. Now we highlight some important results.Theorem 1The mini-max regret of any online algorithm to sell one unit of continuously divisible goods with price range [m, M] in T periods is no less than that of the CDA, which isD*=(M−m)(T−1T)T.We point out two important properties of CDA, that is, robustness and optimality, by Theorem 1. The robustness of CDA guarantees that the revenue gap between the online algorithm and the optimal offline algorithm is at most D*, no matter how prices fluctuate, as long as they are within the range [m, M]. As soon as the realized price path deviates from the equilibrium price paths, the adversary leaves an opportunity for the trader to obtain a smaller regret, which leads to a smaller CD. CDA is also the best online algorithm, as no online algorithm can obtain a CD smaller than D*. Adopting any other online algorithm instead of the CDA provides an opportunity for the adversary to increase the regret, which results in a larger CD.Note that the mini–max regret of the CDA, D*, is proportional toM−m, and increases in T. In addition, D* is proportional to the total trading quantity. If we do not normalize the total trading quantity to one, the above analysis is still valid, where ktshould be regarded as the ratio between the quantity traded at period t and the total quantity. As the regret would then scale with the amount of goods, it becomes unbounded (that is, goes to infinity) only if the amount of goods goes to infinity. So we should look at the ratio between(M−m)(T−1T)Tand(M−m)to appreciate the effect of the optimal policy for any trading amount: the regret is(T−1T)T×100percentof the regret from a very bad policy. ForT=2, it is 1/4 or 25 percent, and when T increases, this percentage gradually increases, approaching 1/e or approximately 36.8 percent when T goes to infinity. Thus normalizing the total trading quantity to one does not really lose any insights into the problem, and this discussion reassures that the min–max regret criterion does properly measure the performance of the online policy for any finite trading amount.We identify in our analysis the sub-game perfect equilibrium, which describes the worst possible price paths and the best course of actions for the trader to take against them. In the first period, the worst-case price given in (7) must bep1S*=m+(M−m)(T−1T)T−1, as the target levelK¯0S=1−T<0. The unique equilibrium price in the first period is mandated by the initial condition, which the trader can do nothing about. Then according to (5), the seller must sell exactly 1/T in the first period. If the trader and the adversary both follow their optimal responses in (5) and (7), we obtain the equilibrium prices fort=2…Tas follows,(9)ptS*={m+(M−m)(p¯t−1−mM−m)T−tT−t+1ormifKt−1=K¯t−1SmifKt−1<K¯t−1SAfter the first period, when the target level is reached, the equilibrium price either takes the lower bound or becomes the new highest price, which leads to the discovery of all possible worst-case price paths.Theorem 2There are exactly2T−1sub-game perfect equilibrium price paths for the one-way trading game.To illustrate all the price paths of the CD analysis in Theorem 2, we draw a binary tree in the left side of Fig. 1for an example withT=4and another tree for the paths in the CR analysis of El-Yaniv et al. (2001) in the right side of Fig. 1 to make a comparison. Any path from the root node on the top to a leaf node at the bottom of the tree corresponds to a possible price path. The root node represents the unique equilibrium price in the first period. To proceed to the next period, the path moves down to the next level in the binary tree, either to the left or to the right child node. The left child node is always white, denoting the price at the lower bound (the under-trading punishment price). The right child node is always black, denoting the new highest price (the over-trading punishment price). The edge from a white node to a black node is always dashed, which is valid only when the accumulated trading quantity reaches the target level. So the seller also has some power in steering the equilibrium path by choosing not to reach the target level, in which case the price will have to remain at the lower bound until the target trading level is reached.The equilibrium price paths identified in Theorem 2 are much more numerous than what is found by El-Yaniv et al. (2001), who only consider the two types of special price paths through solid edges in Fig. 1. The first type of special price path monotonically increases in time, and the second type decreases to m at the beginning of a period (except for the first period) and then remains there until the end. All these monotonic paths are also found by El-Yaniv et al. (2001). However, Theorem 2 shows there are many other possible equilibrium price paths oscillating in between those monotonic ones. The reason for El-Yaniv et al. (2001) to miss these oscillating paths is that the trader in their analysis is restricted to trade only if a higher price is offered (according to their first trading rule in pp. 109), in order to simplify the analysis. This rule restricts the trader not to sell at price m (unless it is the last period), which causes the adversary to keep the price at m until the end, therefore rules out the possibility of oscillating paths.It seems from those oscillating paths that the trader can have some influence on the equilibrium price path, and thus the adversary seems weaker in the CD analysis than in the CR analysis. But a careful comparison reveals that the strategy spaces of the adversary in the CD analysis and CR analysis are identical, thus both adversaries are technically of the same strength in terms of what they can do. Consequently, it is by virtue of the relatively stronger trader in the CD analysis who is free from the restrictive trading rule that the adversary in CD analysis looks relatively weaker than in CR analysis.The equilibrium trading quantity helps us understand the optimal trading strategy, which is found by following the best response in (5) against the worst-case price paths.(10)ktS*={1−Kt−1T−t+1ifptS*=p¯t[0,(K¯tS−Kt−1)+]ifptS*=mOur discovery is again more general and complete than what El-Yaniv et al. (2001) has found.Theorem 3The trader trades at an even pace for the remaining quantity and periods, if current equilibrium price is the new highest price; otherwise the trader will slow down and trade at most(K¯tS−Kt−1)+out of the remaining quantity.Unlike in El-Yaniv et al. (2001), which forbid trading if the price is not rising to the new highest level, we find that the trader may still trade a small quantity even if the price is at m. The equilibrium trading behavior resembles the findings of El-Yaniv et al. (2001) once the equilibrium price soars to the new highest level. However, this new highest price in our CD analysis is quite different from that of El-Yaniv et al. (2001), as pointed out later in Theorem 4. This even paced trading strategy conforms to the traditional investment wisdom, namely the Dollar Cost Averaging strategy, also known as ``lazy banking operation'' or ``fixed investment law'', which refers to the practice of investing the same amount of asset every day.We have pointed out earlier that the difference between CD analysis and CR analysis lies in the degree of risk-averseness of their utility function. It is interesting to see how such difference affects the equilibrium price path. In particular, we compare one special price path in Theorem 4 below, and the proof is given in the appendix.Theorem 4The monotonically increasing equilibrium price path of CD analysis is consistently higher than that of the CR analysis, strictly higher except for the last period when they both reach M.The phenomenon described in Theorem 4 can be understood by the different degree of risk-averseness implied by the different utility function of the trader under different approaches. When deciding how much to trade in the current period, the trader has to balance the certainty offered right now against the uncertainty in the future. If only a higher price offer can induce the same amount of trading, then the future with uncertainty must mean more to the trader. Thus the higher the equilibrium price, the less risk-averse of the trader, which agrees with our earlier observation that the trader is less risk-averse under CD analysis than under CR analysis for revenue-maximization problems.In this section, we compare the performance of our adaptive online algorithm CDA to that of the following three algorithms through numerical experiments: (1) the adaptive online algorithm based on CR analysis presented in Section 4.2 of El-Yaniv et al. (2001), denoted by CRA; (2) the algorithm with a sequence of time-varying reservation prices proposed by Lippman and McCall (1976) when the distribution information of prices is available, denoted by STO; (3) the optimal offline algorithm, denoted by OPT. Note that both CDA and CRA are based on limited information, while STO has distributional information and OPT requires full price path information.The basic setup of our experiment is as follows. We focus on the revenue-maximization problem. The trading horizon T is an important parameter that has structural impact on the performance, so we let T vary from 2 to 20. Prices are independently drawn from a uniform distribution. We use the mean and standard deviation of the total sales revenue as the measure of performance. We simulate 10,000 independent price paths, and for each path we apply all the algorithms separately to find their revenues, upon which the mean and variance are calculated.We are interested in the value of information and the impacts of information inaccuracy on the performance of these algorithms. Therefore, we conduct experiments for both accurate and inaccurate information. In both cases, the assumed price model is the same: uniform on the range of [1, 2]. In the first experiment the information is accurate and the actual prices are generated accordingly. In the second experiment, however, the actual prices are generated according to a uniform distribution on the range of [1, 1.8] instead of [1,2].The result of the first experiment is shown in Fig. 2. OPT has the highest mean and the lowest variance, but it also requires the most amount of information. STO comes the second in mean revenue, but for most of the T values it has the highest variance. We see that when the information is accurate, more information results in more expected revenue. In terms of variance, however, the robust algorithms, CDA and CRA, can beat STO, showing off their robustness. They sacrifice mean revenue for robustness in the face of limited information. Also note that CDA seems to beat CRA in both mean revenue and variance, although only by a very small margin. We believe the primary reason for the difference in expected revenue is that the CDA trader has a less conservative utility function than the CRA trader, as discussed earlier. Another possible factor is that the trader adopting CDA is less restricted in strategy space than the one adopting CRA. Finally, we note that as T increases, both the mean revenue increases and the variance decreases, thus more trading chances is beneficial to the trader.The result of the second experiment is in Fig. 3. Note that the OPT still has accurate and full information, and serves as a benchmark. The adverse impact of inaccurate information is more accurately seen by looking at how further away the other algorithms fall behind OPT. We see that STO is the most severely affected algorithm, both in mean revenue and variance. It demonstrates that wrong estimation of price distribution can lead to much lower average revenue and much larger variance, when compared with CRA and CDA. That's why we suggest that the trader should resort to robust trading policies when the distribution estimation is not reliable enough.This paper approaches the one-way trading problem with limited information by CD analysis that applies Savage's mini–max regret criterion to online problems. The original one-person sequential decision-making problem with uncertainty is transformed into a two-person turn-based zero-sum game via CD analysis. We formulate the problem into a recursive form and obtain closed-form solution through backward induction. We obtain not only the optimal online algorithm, but also all the possible worst-case price paths in equilibrium. This systematic approach does not need any guess work about the structural properties of the optimal strategies, and thus all possible equilibrium price paths and trading quantities are discovered for the first time. Our numerical experiments show that the online algorithm based on CD analysis can achieve higher average revenue with lower variance than the online algorithm based on CR analysis when the trading horizon is relatively long for revenue-maximization problem. When the estimated price distribution is not sufficiently reliable, the experiments show that our robust trading policy becomes a very attractive alternative.This paper can be extended in several ways. It is worthwhile to solve the one-way trading problem with time-varying price bounds instead of fixed ones. We note that the existing papers working with this setting Chen et al., 2001; Zhang et al., 2012b only give some non-adaptive or static trading policies as their CR analysis depends heavily on intuition. It is a promising direction to figure out adaptive trading policies via CD analysis. Considering sampling costs and transaction fees points to another direct extension of this paper. Furthermore, the CD analysis can be applied to more complex problems, for example, the two-way trading problem where the trader can buy and sell freely within the trading horizon.

@&#CONCLUSIONS@&#
