@&#MAIN-TITLE@&#
Scheduling policies for multi-period services

@&#HIGHLIGHTS@&#
A new multi-period service problem is introduced and scheduling policies studied.Integer programming formulations are proposed and analyzed.A heuristic solution algorithm is presented.Numerical results from extensive computational tests are presented and analyzed.Computational experiments underline the quality and effectiveness of the heuristic.

@&#KEYPHRASES@&#
Combinatorial optimization,Multi-period problems,Service scheduling,Heuristics,

@&#ABSTRACT@&#
This paper discusses a multi-period service scheduling problem. In this problem, a set of customers is given who periodically require service over a finite time horizon. To satisfy the service demands, a set of operators is given, each with a fixed capacity in terms of the number of customers an operator can serve per period. The task is to determine for each customer the periods in which he will be visited by an operator such that the periodic service requests of the customers are adhered to and the total number of operators used over the time horizon is minimal. Two alternative policies for scheduling customer visits are considered. In the first one, a customer is visited just on time, i.e., in the period where he or she has a demand for service. The second policy allows service visits ahead of time. The rationale behind this policy is that allowing irregular visits may reduce the overall number of operators needed throughout the time horizon. To solve the problem, integer linear programming formulations are proposed for both policies and numerical experiments are presented that show the reduction in the number of operators used when visits ahead of time are allowed. As only small instances can be solved optimally, a heuristic algorithm is introduced in order to obtain good quality solutions and shorter computing times.

@&#INTRODUCTION@&#
In this paper we discuss a problem that is derived from an application arising in the context of collection and recycling of waste electrical and electronic equipment (WEEE). According to EU regulations, inhabitants can return their WEEE free of charge at collection stations which are run by the local municipalities. Once a storage container at a station is full, one of the companies selling electrical or electronic products is responsible for picking up the container and recycling its contents, see for example Fernández, Kalcsics, Nickel, and Ríos-Mercado (2010); Queiruga, Walther, González-Benito, and Spengler (2008). As most companies do not want or do not have the capabilities to do this themselves, they commission logistics providers to carry out these tasks. At the stations, different product categories are collected in different types of containers, e.g., household appliances are collected in iron-barred boxes. As 5–10 boxes fit on a truck, the logistics provider can schedule a truck to visit several collection stations on a day. As the filling rate of these boxes differs between stations, one should organize individual schedules that allow for irregular visits to stations and aim at maximizing vehicle utilizations. Thus, the task is to decide for each collection station in which periods a box should be picked such that no box overflows and as few trucks as possible have to be deployed. Focussing on the tactical modeling aspects of reducing the number of used vehicles and, hence, maximizing the utilization of vehicles coincides with the current trend in vehicle routing problems, not only for economic savings but also due the environmental benefits, see Sbihi and Eglese (2007).The rest of the paper is organized as follows. In the next section we formally describe our problem and its modeling assumptions. In Section 3, we review the relevant literature. In Section 4 we propose mathematical formulations for two different collection policies. The effect of each policy is analyzed in Section 5 where we derive some insights into the modeling aspects of the problem. As we can only solve small instances optimally within a reasonable amount of time, we introduce in Section 6 a heuristic for the problem. In Section 7 we present computational results to underline the efficiency of the heuristic. The paper ends with some conclusions.The collection problem described above falls within a more general class of multi-period service scheduling problems (MSSP). In the following, we briefly outline the main components of the latter to obtain a generic, application independent description of our problem. We are given a set of customers (e.g., collection stations) who have periodically recurring demand for some type of service (e.g., emptying boxes), a set of operators (e.g., trucks) who can deliver this service, and a planning horizon that is partitioned into a set of time periods of equal length (e.g., days). The index set of customers, operators, and time periods is denoted by I, K, and T, respectively. Each time a customer has demand for service, we call this a service request. Typically, no request spans more than one period and no customer has more than one request per period. The periods in which customers have service requests can either be given a priori or they can be generated dynamically based on satisfied requests, that is, each time a customer receives service in a period this triggers a new request. Such a dynamically generated request can either be open-ended or have a due date until which it has to be satisfied. In the latter case, the request can be satisfied exactly in the period where it is due, but may also be serviced in a period prior to the due date. The operators or servers can provide the service at the customer or the operator location, or remotely. If a customer is serviced by an operator in a given period, we call this a service period for the customer and we say that the operator carries out a service visit. Every operator has a fixed capacity per time period and each service visit consumes a certain amount of the capacity. Moreover, a fixed cost may be charged whenever an operator attends to one or more customers in a period. Additionally, the satisfaction of a request may incur a fixed and/or variable cost, for example depending on the time elapsed since the last service period. The task is then to decide for each customer in which periods to schedule a service visit such that all customers receive their desired service, possibly meeting the due dates , and the operator capacities are adhered to. Concerning the optimization goals, typically a schedule is sought that minimizes the overall costs or the maximal number of operators required in a period or maximizes the regularity of the service schedules.In our problem, service requests are generated dynamically with due dates. The due date for the next request is hereby derived from the current service period and the expected number of periodssi∈Nit takes for a box to be filled (which is known for each customer and independent from time). siis also called the service interval of i. For each customer, the first service request is generated immediately before the start of the planning horizon, i.e., in time period 0. A service cluster consists of a set of customers visited by the same operator in the same period. Because different customers may have different service intervals and we do not assume that regular schedules should apply, the number of operators to be used along the time horizon is established on a per period basis. Hence, a specific service cluster may be formed just once throughout the time horizon and service clusters may be different for each period of the time horizon.The maximal number of customers Q an operator can serve per period is fixed and identical for each operator, i.e., operators have capacity Q and each service visit consumes one unit of capacity. Each service request can be satisfied by any operator and a customer can be visited by a different operator each time. Whenever an operator is used in a period, a fixed cost is incurred which is identical for each operator and period. Moreover, no fixed or variable costs are charged for service visits.We consider two different scheduling policies. In the first one, we schedule the next service visit as late as possible, i.e., in the period where the current request is due. We call this an on time visit and the corresponding strategy a Periodic Service policy (PS). The rationale behind this policy is that it will result in regular visiting schedules for customers (provided that the maximum duration does not change over time). The goal is then to minimize the total number of operators used over all periods of the time horizon. We call this the Periodic Multi-period Service Scheduling Problem, for short Periodic MSSP or P-MSSP. An ordered set of service periodsCi={ti1,…,ti|Ci|}⊆Tis called a periodic calendar for customer i ifti1≤siand the number of periods between any two consecutive elements in Ciequals the service interval si. Even if the first service period of a customer uniquely determines all subsequent service periods, this policy still does not necessarily produce identical service clusters because customers may have differing service intervals. In the second policy, we assume that a customer may be visited ahead of time, i.e., before the due date of the service request. We call this an Aperiodic Service policy (AS). In this policy, the number of periods between consecutive service periodstikandtik+1for customer i may vary from time to time. Even if this might increase the total number of visits and result in irregular visiting schedules, it will often allow planners to determine more efficient and better utilized service schedules. An ordered set of service periodsCi={ti1,…,ti|Ci|}⊆Tis called an aperiodic calendar for customer i ifti1≤siand the number of periods between any two consecutive elements in Cidoes not exceed the service interval si. Iftik+1−tikis smaller than siwe callsi−(tik+1−tik)the earliness of the visit. The earliness of an aperiodic calendar Ciis the total earliness of all visits scheduled in the calendar, i.e.,∑k=1|Ci|−1(si−tik+1+tik)=(|Ci|−1)si−ti|Ci|+ti1,and the earliness of a customer is the earliness of his calendar. The goal is then to minimize a weighted sum of the total number of periods in which each operator is used and the total earliness of all customers. We call this the Aperiodic Multi-period Service Scheduling Problem, for short Aperiodic MSSP or A-MSSP. Note that the earliness of a service visit can be interpreted as a variable cost for satisfying the service request.In the remainder, we assume T to be finite. Moreover, we assume that all customers have been serviced just before the start of the planning horizon and that these service visits do not influence the periodic calendars. Next, we illustrate the differences between the policies and highlight the utility of the AS policy.Example 1Suppose there are four customersI={1,2,3,4}to be visited in a time horizon of|T|=12periods. The service intervals of the customers ares1=2,s2=3,s3=4ands4=3periods, respectively. An operator can serveQ=3customers per period. Fig. 1displays the schedule of an optimal solution if the PS policy is applied. For example, we haveC4={3,6,9,12}. We need one operator for each of the periods 2, 3, 4, 6, 8, 9, and 10, and two operators for period 12. Hence, we need in total nine operators over the twelve weeks.However, under the AS policy we just need eight operators instead of nine, see Fig. 2. We can save an entire operator by moving the service period of customer 1 from period 10 to period 9. Hence, we visit customer 1 one period before its next designated service period.A main aim of this paper is to compare the two different service policies. We are especially interested in the trade off between efficiency, measured as the total number of operators needed, and regularity, measured as a function of the total number of periods that visits are scheduled ahead of time. To that end we propose mathematical programming formulations to solve the problems optimally and we develop a heuristic solution approach.

@&#CONCLUSIONS@&#
We have presented a novel problem for multi-period service scheduling. The objective is to reduce the total number of operators while ensuring that two consecutive visits to a customer do not exceed its service interval. Two different service policies have been addressed. While the PS policy imposes a visiting activity with a fixed time interval, the AS policy allows visits before the end of the service interval. Two mathematical formulation have been presented, one for each service policy. The one for AS policy introduces a second term in the objective function to penalize ahead of time visits. This allows to model several scenarios, depending on the penalty weight. Computational results indicate that allowing for ahead of time visits reduces the number of operators for an appropriate trade-off of the objective function terms. Moreover, we have developed a heuristic algorithm that obtains good solutions within a noticeable short time.