@&#MAIN-TITLE@&#
Monotonic sequences for image enhancement and segmentation

@&#HIGHLIGHTS@&#
We introduce a monotonic sequence based thresholding in image decomposition.We propose of sequence or weighted thresholding based image enhancement.We propose the Fibonacci thresholding in image enhancement.The presented thresholding-based enhancement out-performs competing algorithms.

@&#KEYPHRASES@&#
Binary signals,Thresholding,Image enhancement,Fibonacci thresholding,Image segmentation,

@&#ABSTRACT@&#
Both image enhancement and image segmentation are important pre-processing steps for various image processing fields including autonomous navigation, remote sensing, computer vision, and biomedical image analysis. Both methods have their merits and their short comings. It then becomes obvious to ask the question: is it possible to develop a new better image enhancement method which has the key elements from both segmentation and image enhancement techniques? The choice of the threshold level is a key task in image segmentation. There are other challenges of image segmentation. For example, it is very difficult to perform the image segmentation in poor data such as shadows and noise. Recently, a homothetic curves Fibonacci-based cross sections thresholding has been developed for the de-noising purposes. Is it possible to develop a new image cross sections thresholding method, which can be used for both segmentation and image enhancement purposes? This paper a) describes a unified approach for signal thresholding, b) extends cross sections concept by generating and using a new class of monotonic, piecewise linear, sequences (slowly or faster growing than Fibonacci numbers) of numbers; c) uses the extended sections concept to the image enhancement and segmentation applications. Extensive experimental evaluation demonstrates that the newly proposed monotonic sequences have great potential in image processing applications, including image segmentation and image enhancement applications. Moreover, study has shown that the generalized cross techniques are invariant under morphological transformations such as erosion, dilation, and median, able to be described analytically, can be implemented by using the look up table methods.

@&#INTRODUCTION@&#
Image enhancement and image segmentation are two fundamental procedures in various image processing and computer vision applications, including autonomous navigation, remote sensing, multimedia analytics, biomedical image analysis, and astronomical images. There are extensive literature on both image enhancement and image segmentation procedures [2–9,11–17,22–41,48–70]. The key goal of image segmentation is to split an image into its constituent components and extract important information, for example statistical, edge, contour and texture information, from an input image [1,2]. Depending on the application, the goal of segmentation can be different. In general, the segmentation is not unique and it is an ill-defined problem which makes the segmentation evaluation of a candidate algorithm difficult. “There is no unique ground-truth segmentation of an image against which the output of an algorithm may be compared” [71]. The common segmentation approaches are based on thresholding techniques because of its simplicity, robustness, and accuracy. We can broadly categorize thresholding techniques as global thresholding, semi-thresholding, multilevel thresholding, variable thresholding, and(n,k,p)-Gray code thresholding, cross sections (threshold sets) thresholding, various histogram thresholding, supervised and unsupervised thresholding [2–9,11–17,59–70].The cross sections based thresholding are commonly used in many computer vision and imaging processing applications, including nonlinear filtering and mathematical morphology [8,10–20,61]. In addition, the cross sections thresholding allows for transferring the basic operations of set algebra, such as Minkowski's addition and subtraction of sets, and the dilation and erosion of sets, on the function algebra. The cross-sections are typically horizontal lines. Recently, a more general concept of homothetic curvesga-based cross sections has been developed to generalize the traditional horizontal cross sections and define different set representations of signals and images [21] and [72]. Both these works use so called Fibonacci thresholding (based on Fibonacci numbers) levels for the denoising (median type and morphological filters) proposes. Unfortunately, many thresholding algorithms, in spite of their fame, are not able to automatically determine the required minimum number of thresholds, for a given application. Moreover, it is natural to ask: how to use the cross sections thresholding concept in the two-dimensional case; can we generate a new class of cross sections which are based is new class (slowly or faster growing than Fibonacci numbers) sequence of number; can we tailor them to the segmentation problem, or to the image enhancement application.Image enhancement techniques focus on improvement of the characteristic or quality of an image, and make the resulting image look “better” than the original, when compared against specific criteria [26]. Many algorithms have been proposed for image enhancement [30–50], and a comprehensive review of image enhancement techniques is presented in [29,40,41]. The following two major classifications of image enhancement techniques can be defined: the spatial domain enhancement and transform domain enhancement [25–45]. Both methods have their merits and short comings given differing interpretations of image data [42]. In addition, the analysis of the transform-based techniques shows that there exist common problems. Selecting parameters for the enhancement techniques is difficult, resulting in the inability of the methods to simultaneously enhance all parts of a proceeded image; introducing artifacts called blocking effects [48–50]. The enhancement task, however, is complicated by the lack of any general unifying theory of image enhancement, and the lack of an effective quantitative standard of image quality to act as a design criterion for an image enhancement system [26,39–42,48–52]. Furthermore, many enhancement algorithms have external parameters which are sometimes difficult to fine-tune [22,42–52]. Most of these techniques are globally dependent on the type of the input images, and treat images instead of adapting to local features within different regions [23,41].It then becomes obvious to ask the question: Is it possible to develop a new image enhancement method, which has the key elements from both segmentation and image enhancement techniques which produce better image enhancement algorithms? This paper investigates a new general concept of weighted thresholding/representation based image enhancement. The rest of this paper is organized as follows. Section 2 introduces the concept of the monotonic sequence-based thresholding, or weighted thresholding, in signal decomposition and describes properties and different examples of the thresholding on signals and images. Section 3 describes the application of the weighted thresholding in image enhancement, which includes the histogram equalization and enhancement by the powers of the distribution function. The quantitative measure of image enhancement is calculated for the processed images. Section 4 is devoted to the weighted thresholding by piecewise linear sequences including a slowly growing stepped sequence of numbers. The thresholding by the sequence of Fibonacci numbers is also considered. Section 5 describes composition and vector median filtration of signals by Fibonacci-values signals. In Section 6, the segmentation by the morphological operations with weighted thresholding is presented. A comparison and analysis are also provided to show the new algorithm's performance. Section 7 draws a conclusion.In this section, we present the concept of the weighted thresholding which generalizes the traditional signal decomposition by threshold sets. In such a thresholding, the binary signals of different levels are weighted by a given sequence of numbers. Properties of the weighted thresholding are described, and examples with different sequences and the corresponding signal decompositions are given.Letf(x)be a multi-level non-negative function in the real spaceRn,n≥1, with integer values in the interval[0,L],L>1. We consider a sequence of numbers as a functionk(α)which is monotonically non-decreasing (or, non-increasing) in the set of integersα=1,2,3,….Definition 1Thresholdk(α)-valued signals of the functionf(x)at amplitude levelsα∈[0,L]are calculated by(1)f¯α(x)={k(α),iff(x)≥α,0,otherwise.The representationf(x)→(f¯1(x),f¯2(x),…,f¯L(x))is called the sequence based weighted thresholding off(x), or, simply the sequence thresholding.1. If the sequencek(α)is monotonically decreasing, then(2)f¯α(x)≥f¯β(x),whenα<β.2. The functionf(x)can be reconstructed by its family of thresholdedk(α)-valued signals as(3)f(x)=sup⁡{α;f¯α(x)≠0}=∑α=1Lf¯α(x)k(α),x∈Rn.3. The following function can uniquely be assigned to the functionf(x):(4)Kf(x)=∑α=1mf¯α(x),x∈Rn,wherem=f(x)≤L. We call this transformation the distribution operator.The distribution operatorK:f(x)→Kf(x), keeps all straight (smooth) parts in the graph of f, increasing its peaks.Kf(x)≥f(x)(ifk(α)≥1), and the equality holds in the case when all values ofk(α)equal 1.4. Whenk(α)≡1, the 1-valued signalf¯α(x)equals the binary signalfα(x)at level α, which is defined asfα(x)=1iff(x)≥α, andfα(x)=0otherwise. It is well known [17] that every u.s.c. functionf(x)can be reconstructed uniquely by its horizontal cross sections, or the family of the binary signals{fα(x);α∈(−∞,+∞)}, due to the following threshold decomposition:(5)f(x)=sup⁡{α;fα(x)=1}=∑αfα(x).5.  The mappingf(x)→Kf(x)is invertible and the inversion has a simple form, even in the case when the mapping is complex. It means, that in many cases, one can replace complicated nonlinear operations by means of the simple summing (in Boolean logic) of the binary signals. This property follows directly from Eqs. (3) and (4).6. If the signalf(x)has the equal binary signals, it can be reduced to the k-weighted thresholding. Such thresholding is called the base or canonical representation[43].Example 1Letf(x)be the signal{0,1,5,3,3,8,0}with the maximal level 8. This functionf(x)can be described by two forms, the direct representation and base representation, as follows:f(x)=∑α=18fα(x)f′(x)=∑α=14fα′(x)α=1,f1(x)={0,1,1,1,1,1,0}f1′(x)={0,1,1,1,1,1,0}α=2,f2(x)={0,0,1,1,1,1,0}f2′(x)={0,0,1,1,1,1,0}α=3,f3(x)={0,0,1,1,1,1,0}f3′(x)={0,0,1,0,0,1,0}α=4,f4(x)={0,0,1,0,0,1,0}f4′(x)={0,0,0,0,0,1,0}α=5,f5(x)={0,0,1,0,0,1,0}α=6,f6(x)={0,0,0,0,0,1,0}α=7,f7(x)={0,0,0,0,0,1,0}α=8,f8(x)={0,0,0,0,0,1,0}The representationf(x)→f′(x)={0,1,3,2,2,4,0}is the base representation off(x). The signalf(x)is referred to as the four-level signalf′(x). Fig. 1shows the signalf(x)in part a and the base signalf′(x)in part b.The signalf(x)can be reconstructed from its base form byf(x)=Kf′(x)=f1′(x)+2f2′(x)+2f3′(x)+3f4′(x).In this caseL=4, andf(x)equals the weighted thresholding off′(x)when the sequence{k(α);α=1,2,3,4}is{1,2,2,3}. In the general case, we can define the base representation in the following way.Definition 2If a such sequence of numbersk(α),a=1,2,…,m, exists thatf(x)=Kf¯(x)andf¯≠f, then the functionf′(x)=∑α=1mf¯α(x)is called the base representation off(x).7.  There is a relationship between signals, polynomials, and thresholding. In other words, the weighted thresholding allows for calculating different polynomials of the signals,Pm(f(x))=∑i=0mλifi(x),x∈Rn,whereλiare constants, andm≥0is the order of the polynomial. The calculation is accomplished byPm(f(x))=Kf(x). Below are examples of such polynomialsP1(f(x))=f(x),P2(f(x))=f2(x),P3(f(x))=12f2(x)+j−12f(x),j=1,2,…,P4(f(x))=f2m(x),m=1,2,3,…,P5(f(x))=C11−q(1−qf(x)),0<q<1,C>1.8. Iff(x)is a random signal with the density functionp(α)and distributionF(α), thenF(α)can be calculated as the weighted thresholding by the sequencek(α)=p(a). Here α denotes values of the signalf(x)which is considered non-negative.The general method of application of the weighted thresholding for processing the signal (or image)f(x)through the functionKf(x)can be described by the following algorithm.Algorithm 1Generation of distributionK(x).Different monotonic sequencesk(α)can be considered for the weighted thresholding and representation of signals. As examples, we mention the sequencek(α)being the series of Fibonacci numbers{1,1,2,3,5,8,13,21,…}[58], the arithmetic series of numbers{1,2,3,4,5,…}or{…,5,4,3,2,1,}, the geometric series of numbers{1,2,4,8, …}. We now describe examples of weighted thresholding with these and other sequences.Example 2Consider the 5-level functionf(x)={0,1,1,2,3,5,2,4,1,2,0}. Letk(α)be the arithmetic series of integers,k(α)=1,2,3,4,5. The following calculations hold:f¯1(x)=f1(x)×1={0,1,1,1,1,1,1,1,1,1,0}f¯2(x)=f2(x)×2={0,0,0,2,2,2,2,2,0,2,0}f¯3(x)=f3(x)×3={0,0,0,0,3,3,0,3,0,0,0}f¯4(x)=f4(x)×4={0,0,0,0,0,4,0,4,0,0,0}f¯5(x)=f5(x)×5={0,0,0,0,0,5,0,0,0,0,0}Kf(x)=f¯1+…+f¯5={0,2,1,3,6,15,3,10,1,3,0}.Fig. 2shows the signalf(x)in part a and the signal thresholdingKf(x)in part b.One can see, that the functionKf(x)is the sum of the arithmetical series,Kf(x)=f(x)(f(x)+1)/2. The functionf(x)can be defined fromKf(x)by the nonlinear (quadratic) transformf(x)=(−1+1+8Kf(x))/2. The value off(x)is determined byKf(x)as one that satisfies the conditionKf(x)=1+2+…+f(x). The square of the function can be calculated byf2(x)=2Kf(x)−f(x). It also can be calculating using other thresholding. To show this, we consider the following arithmetic series of integers,k(α)=1,3,5,7,9,…, i.e., whenk(α)=2a−1,a=1,…,L. We obtain thatKf(x)=f2(x), as shown in the following decomposition:f¯1(x)=f1(x)×1={0,1,1,1,1,1,1,1,1,1,0}f¯2(x)=f2(x)×3={0,0,0,3,3,3,3,3,0,3,0}f¯3(x)=f3(x)×5={0,0,0,0,5,5,0,5,0,0,0}f¯4(x)=f4(x)×7={0,0,0,0,0,7,0,7,0,0,0}f¯5(x)=f5(x)×9={0,0,0,0,0,9,0,0,0,0,0}Kf(x)=f¯1+…+f¯5={0,1,1,4,9,25,4,16,1,4,0}.Fig. 3shows the 101-level signalf(x)of length 256 in part a and the weighted thresholdingKf(x)fork(a)=awhena=0:101, in part b. Transform of the same signal by another arithmetical thresholding with the functionk(α)=m+1−ais shown in part c. Fig. 4shows the first gray scale transformation (GST)f(x)→Kf(x), which is marked as GST-I. Another transformation marked as GST-II which is defined by the arithmetical thresholding with the functionk(α)=m+1−ais also shown. For the GST-II, the following nonlinear transform of the signal holds:(6)f(x)→Kf(x)=f(x)(m−f(x)−12).The inverse operation is calculated asf(x)=m+1±(m+1)2−16Kf(x)2.The complex quadratic expression off(x)also can be inverted by the weighted thresholding as(7)f(x)=l,whenKf(x)=m+(m−1)+…+(m−l),without any complex operations.The difference of these two methods of arithmetical thresholding can be noticed visually when applying to images, as shown in Fig. 5with “cameraman” image in a, and two thresholding in b and c. The gray-scale transformations of these two arithmetical series based weighted thresholding are similar to transformations given in Fig. 4, but in the range of 253 gray-levels of the image. Another example is shown in Fig. 6. The original image of size1024×1024is in part a and the arithmetical thresholding of the image whenk(α)=αin c andk(α)=m+1−αin d. The gray-scale transformations of these two arithmetical series based weighted thresholding are shown in b. For both images, in the weighted thresholdingk(α)=αthe high values of intensities of the images are compressed and the weighted thresholdingk(α)=m+1−αexpands dark pixel values, as in the log and power gray-scale transformations [23].In this section we consider applications of the concept of the weighted thresholding in the two-dimensional case and describe different examples of the thresholding in image processing.To measure the quality of images, we consider the described in [39–42] quantitative measure of image enhancement that relates to Weber's law of human visual system. This measure is effectively used for the well-known α-rooting method of image enhancement by the Fourier transform, as well as other unitary transforms [39–60]. A discrete image{fn,m}of sizeN1×N2is divided byk1k2blocks of sizeL1×L2each, whereki=⌊Ni/Li⌋,i=1,2, and⌊.⌋denotes the floor function. The quantitative measure of enhancement of the processed image{fn,m}→{fˆn,m}is defined by(8)EME(fˆ)=1k1k2∑k=1k1∑l=1k220log⁡[maxk,l⁡(fˆ)mink,l⁡(fˆ)]wheremaxk,l⁡(fˆ)andmink,l⁡(fˆ)respectively are the maximum and minimum of the imagefˆn,minside the(k,l)th block. To avoid zeros ofmink,l⁡(fˆ)in the denominator, one can considerfˆasfˆ+1. For images with the most pixels of high intensities, it is reasonable to calculateEME(fˆ−min⁡(fˆ))instead ofEME(fˆ). In calculation of this function, the blocks with zeromink,l⁡(fˆ)can be skipped or 1 can be added to the image, to avoid zero values offˆforlog10⁡(fˆ)function. In the(k,l)th block, the ratio in the logarithmRk,l=log10⁡[maxk,l⁡(fˆ)mink,l⁡(fˆ)]=log10⁡[maxk,l⁡(fˆ)]−log10⁡[mink,l⁡(fˆ)]shows the range of intensities of the imagefˆin the logarithmic scale. Therefore,EMEa(fˆ)determines the average-block scale of intensities in the image after processing.Our experimental results show that the better quality of the imagefˆ, the higher value ofEME(fˆ)>EME(f). In the example with the pentagon image in Fig. 6, the enhancement measureEME(f)=6.27, and for the imagefˆin c this measure isEME(fˆ)=12.50, and for the image in d the enhancement measure isEME(fˆ)=6.94.Fig. 7(a) shows the image of Einstein. This image is of low contrast and its enhancement measureEME(f)=2.30. The imagefˆafter processing by the arithmetical weighted thresholding with increasing linear functionk(α)is shown in b. The enhancement measure of this image isEME(fˆ)=4.51. The arithmetical thresholding results in the image of higher quality and many details in the image can be seen better in comparison with the original image.Fig. 8shows the results of the arithmetical thresholding with the functionk(α)=αin part b. The original image f of size256×512in a is composed by two images, tree and Lena images of size256×256each. The image composition f has the enhancement measureEME(f)=13.28, and for the enhanced imagefˆin b,EME(fˆ)=26.35.We now describe the case, when the sum of all elements in the thresholding sequencek(α)equals 1. As an example, we assume that the m-valued functionf(x)describes a random discrete signal and the functionk(α), whereα=1,…,m, is referred to as the density function of the signal. Letpabe nonnegative numbers such thatp1+p2+…+pm=1. We define the coefficientsk(α)=pα,α=1,…,m, and the “distribution” functionF(α)calculated asF(1)=p1andF(α)=F(α−1)+pα, whenα>1. The weighted thresholding is the “distribution” function, i.e.,(9)Kf(x)=∑α=1f(x)k(α)=∑α=1f(x)pα=F(f(x)).Example 3Probability-type coefficientsk(α)We consider the functionf(x)={2,1,2,1,3,5,4,3,4,2,1}. This function has five different non-zero values. We assume for example that, probabilities of these values arep1=0.4,p2=0.2,p3=0.2,p4=0.1, andp5=0.1. For simplicity of calculations, we multiply these values by 10 and considerk(1)=4,k(2)=2,k(3)=2,k(4)=1,k(5)=1. The functionKf(x)is calculated as follows:f¯1(x)=f1(x)×4={4,4,4,4,4,4,4,4,4,4,4}f¯2(x)=f2(x)×2={2,0,2,0,2,2,2,2,2,2,0}f¯3(x)=f3(x)×2={0,0,0,0,2,2,2,2,2,0,0}f¯4(x)=f4(x)×1={0,0,0,0,0,1,1,0,1,0,0}f¯5(x)=f5(x)×1={0,0,0,0,0,1,0,0,0,0,0}Kf(x)=f¯1+…+f¯5={6,4,6,4,6,10,9,8,9,6,4}.Thus,Kf(x)/10=F(f(x))andF={0.4,0.6,0.8,0.9,1}.In general, to preserve the range of the transform, we can consider the coefficientsk(α)=mpα, and thereforeKf(x)=mF(f(x)). The ordering of all values ofpαin descending order is not necessary. In the case whenpais the probability of the event{f(x)=a}, the weighted thresholding represents the well-known operation of histogram equalization (HE) of the random signalf(x)[23]. As an example, Fig. 9shows the tree-and-Lena image in part a, along with the histogrampαand scaled distribution functionF(α)/100in part b. The weighted thresholdingKf(x)of the image is shown in c. To improve the visibility of the scene behind the tree, the high powers of the distribution functionF(α)can be used. As example, the tree image after the weighted thresholding corresponding to the scaled to level 256 functionF3(α)is shown in part d. Many details of trees on the slope of the mountain, as well as the homes can be seen better when comparing with the three images in parts a and c. Fig. 10shows the results of the image processing by the 2nd and 4th powers of the distribution function in parts a and b, respectively. For the imagesfˆin a and b,EME(fˆ)=26.71and 26.86, respectively.Fig. 11shows the image of size512×512in part a, and its histogram, the distribution function with its 2nd power in parts b (which are scaled with the factor of 50). The results of the image processing by the weighed thresholding when using the distribution function and its square are given in parts c and d, respectively. One can note, that the weighed thresholding in d is an enhanced image. The enhancement measure of the original image is 16.85 and the measure for the enhanced image in d is 21.86.The considered measure of image enhancement, EME, can be parameterized by the power parameter ofFk(α). The EME operation is nonlinear and a such functionEME(k)in general is not monotonic, neither linear or sectionally linear, however this function can be used in many applications to select the “best” parameter for image processing [39–45]. For the considered enhancement by the weighed thresholding with the powers of the distribution functionFk(α), Fig. 12shows the graph of the functionEME(k)when the parameter k run the interval[0.5,2]. In the interval[0.5,1.73], the function is approximately linear, and at pointk=1.73there is a jump of the function; the function is back to one of its state (k=1.29) and starts to grow in the same way. This is a special point in the considered interval of k, and after this point the image will be darker and darker, as can be seen from the graphs ofF(α)andF2(α)in Fig. 11(b). The results of the image processing by theF1.73(α)with enhancementEME(1.73)=25.27is shown in part b.The processing of the imagef(x)through the functionKf(x)calculated by the probability-type sequence (PTS)pkis described by Algorithm 2.The weighted thresholding can be applied block-wise as well. However, in this case, the subsequent removal of the block-effect may be needed. Such processing allows to see many details of the image in different parts. As an example, Fig. 13shows the image in part a, along with the images processed by the distribution functions calculated in blocks of size64×128each in b. The similar result when processing the image by blocks of size8×256each is given in c.In another example, Fig. 14shows the image f in part a, along with the images processed by the distribution functions which are calculated in blocks of size256×8each in b, and by blocks of size8×256each in c. The enhancement measureEME(f)=18.64, and after processing the enhancementEME(fˆ)=33.51in b andEME(fˆ)=35.88in c. For comparison, the histogram equalization (withEME(fˆ)=30.54) of the image is given in d.In this section, the weighted thresholding with a piecewise linear function is described and a few examples of such functions are given. We consider a function which preserves much details in the image with low intensities, and decreases the intensities of pixels with high values of intensities. For example, in the foreground of the tree image all details can clearly be seen, and in the back many details and objects are almost invisible. To improve the visibility of these details in the image, we define the exponential functionk(α)scattered over the interval[0,255],k(α)=α0⋅2n,α=0:255.Hereα0=1andn=0, ifα∈[1,128],n=1, ifα∈[129,128+64],n=2, ifα∈[193,192+32], and so on. Fig. 15shows this stepped function.Fig. 16shows the tree image in part a and the result of the thresholding in b, when the above functionk(α)is used. When comparing this result with the images of Fig. 8, one can see that the foreground of the tree image becomes darker, when the powers of the distribution function are used.The result of the thresholding by the functionk(α)for the man image is shown in Fig. 17. The enhancement measure of the image in b isEME=18.70and it is higher thanEME=16.85for the original image in a.In the above functionk(α), the step exponentially changes from one interval to the next one. This example shows that to enhance some parts and important details of the image and preserve the high quality of other parts of the image, extremely sensitive gray scale transformations should be used. Therefore, we consider the case when the weighted function goes up very slow.The piecewise integer stepped sequence of numbersGkis defined as the function with steps which satisfy the following condition: in any four consecutiveGknumbers only two numbers are repeated. For example, such four numbers are{G10,G11,G12,G13}={7,7̲,8,9}. We call such a stepped sequence to be the stairs with 2-in-4 steps. It is assumed that the stepped function is monotonic and without high steps. Therefore, we consider the condition that|Gk+1−Gk|=0, or 1, for allk>1.Table 1shows a few values of such an integer stepped function. This sequence of numbers is written into rows from left to right and top to bottom. The sequence begins withG1=1, ends with numberG512=355and runs integers from 1 to 355.This 2-in-4 sequence can be calculated in the following way. Let Φ be the golden ratio, i.e.,Φ=(1+5)/2=1.618033988749894⋯.The sequence of numbersGkwhich begins with integer number m is defined asGk=[klog2⁡(Φ)−1.1610]+m,k=1,2,3,…,where the number 1.1610 stands for5/2. The square brackets[⋅]denote the operation of rounding towards nearest integer. We consider the case when the sequence of numbers begins with 1. The 2-in-4 sequence in the table corresponds to this case, i.e., whenm=1.It should be noted that the sequence of integer numbersAk=[klog2⁡(Φ)]+m,k=1,2,3,…, is not 2-in-4 sequence. To be convinced of this fact, it is enough to consider the first 22 numbers for this sequence form=1, which are1,1,2,3,3,4,5,6̲,6,7,8,8,9,10,10,11,12,12,13,14,15̲,15.Each of underlined fours contains different four numbers.The 2-in-4 sequence, as well as, the powers of this function can be used in image enhancement as the weighted functions. As example, Fig. 18shows the tree image in part a, along with the graph of the 2-in-4 sequence in b, and image processed by the amplified sequence,λGkimage in c. The constantλ=k0/Gk0is selected to preserve the range of gray-level of the tree image, i.e.,k0=max⁡(fn,m). The scaled sequence is almost diagonal, and image in c does not differ much from the original tree image.The different powers of the 2-in-4 sequence ofGknumbers can be effectively used to rise the visibility of details of the image. The second and third powers,Gk2andGk3, of this sequence are given in d. The image processed byGk2is shown in e, and the image processed byGk3in f. Fig. 19shows the boat image in part a and the enhancement by the 2nd power of the 2-in-4 sequence in b. Fig. 20shows the “elaine” image in part a. The images enhanced by the 2nd and 3rd powers of the 2-in-4 sequence are shown in parts b and c, respectively. The tank image and its enhancement by the 2nd powerGk2of the 2-in-4 sequence are shown in parts a and b of Fig. 21, respectively.The proposed processing of the imagef(x)by the powers of the 2-in-4 sequence ofGknumbers can be described by the following algorithm.Algorithm 3Image enhancement by sequenceGn, v≥0.The Fibonacci numbers [58] are widely used in different applications of signal and image processing including the thresholding, signal representation, morphological filtration, and image encryption [11–14,59–63]. The above 2-in-4 sequence ofGknumbers can be calculated by the Fibonacci sequence. Consider the Fibonacci numbersFkthat begin withF1=1,1,1,2,3,5,8,13,21,34,55,89,144,233,….The Fibonacci numbers are calculated recurrently by the following formula:F1=1,F2=1,Fk=Fk−1+Fk−2,k=3,4,5,….The first 24 numbers from Fibonacci sequence are given in Table 2.The relation between theGkandFknumbers is described by the following formula:Gk=[log2⁡Fk]+1,k≥1.The Fibonacci series grows very fast and has large numbers whenk>16. The ratiosRk=Fk/Fk−1of the Fibonacci numbers, whenk=3:10, equal2,1.5,1.(6),1.60,1.6250,1.6153846154,1.6190476190, and 1.6176470588, respectively. The ratioRkapproaches to the golden number, i.e.,Rk→Φwhenk→∞. We now consider an example of processing the 1-D signal by the weighted Fibonacci sequence.Example 4Fibonacci numbersk(α)Let the functionk(α)be the first numbers of the Fibonacci seriesk(α)=1,1,2,3,5,8,13,…,(α=1,2,3,4,5,6,7,…). For the signalf(x)={0,3,1,2,3,5,2,4,1,2,0},Kf(x)={0,4,1,2,4,12,2,7,1,2,0}. Indeed, the following calculations hold:f¯1(x)=f1(x)×1={0,1,1,1,1,1,1,1,1,1,0}f¯2(x)=f2(x)×1={0,1,0,1,1,1,1,1,0,1,0}f¯3(x)=f3(x)×2={0,2,0,0,2,2,0,2,0,0,0}f¯4(x)=f4(x)×3={0,0,0,0,0,3,0,3,0,0,0}f¯5(x)=f5(x)×5={0,0,0,0,0,5,0,0,0,0,0}Kf(x)=(f¯1+…+f¯5((x)={0,4,1,2,4,12,2,7,1,2,0}Fig. 22shows the signalf(x)in part a and the signal thresholdingKf(x)in b. The weighted thresholding preserves the structure of the signal and increases the value of the pike.The functionKf(x)as a finite sum of the Fibonacci numbers can also be calculated by(10)Kf(x)=∑α=1f(x)k(α)=k(f(x)+2)−1.For each valueKf(x), we can calculate the number α such asKf(x)+1=k(α). Therefore, the valueα−2is the value of the initial function,f(x)=α−2. In other words, in the case of Fibonacci numbers, we have the following inversion of the weighted transform:(11)f(x)→Kf(x)→Kf(x)+1=k(α)→α−2=f(x).It is the simplest example among all examples considered above. The Fibonacci numbersk(α)grow very fast as α becomes large. We assume thus that Fibonacci thresholding can be used for L-values signals for not large values of L. In image processing, the Fibonacci sequence scattered over the interval[0,L]can be used similarly to the exponential sequencek(α)=α02n, whenn=n(α).In this section, we describe a representation of the integer-valued signal by the sum or union of Fibonacci-valued signals and the corresponding canonical representation of the signal by binary signals. The canonical representation reduces the number of binary signals and therefore can be useful for processing the signals through the binary signals and for constructing new filters. We can mention the efficient calculation of the median type filters which are increasingly popular in signal and image processing [18–21]. The basic reason for this is the good noise attenuation and edge preservation performance (sharp edges are very important factors in images and useful for the solution and recognition problems).Statement 1Fibonacci representationAny integer signal with non-negative values can be represented by the sum of signalsugi(x)which are composed only by Fibonacci numbers,(12)f(x)=∑i=1lugi(x).To illustrate this statement, we consider the following 16-valued non-negative signal of length 21:f(x)={0,1,4,4,5,8,11,11,11,10,6,5,4,2,8,13,16,11,7,0,0}.The maximum value of the signal is 16 and therefore we take the first six Fibonacci numbers from the second member{uk=Fk−1;k=1:6}={1,2,3,5,8,13}. These numbers <16 and will be referred to as Fibonacci levels, since they will be used for signal thresholding. The Fibonacci-valued signal which lies right beneathf(x)is11As if, the function f falls on the highest Fibonacci levelsukto composef1.f1(x)={0,1,3,3,5,8,8,8,8,8,5,5,3,2,8,13,13,8,5,0,0}.We now assign the set of six binary signals(13){fα(x);α=uk=1,2,3,5,8,13}and compose the functiong(x)which corresponds to these binary signals(14)gk′(x)={fuk(x);ifk=1,2,3,4,5,6;0;ifk>6.The following binary signals are calculated:g6′(x)={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},g5′(x)={0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0},g4′(x)={0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0},g3′(x)={0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0},g2′(x)={0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0},g1′(x)={0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0}.These binary signalsgk′form the following 6-level signalg1(x)=∑k=16gk′(x)={0,1,3,3,4,5,5,5,5,5,4,4,3,2,5,6,6,5,4,0,0}.This signal is the canonical representation of the signalf1(x)which can be calculated byf1(x)=ug1(x),x=0:20.The difference of these functions isΔ1f(x)=f(x)−f1(x)={0,0,1,1,0,0,3,3,3,2,1,0,1,0,0,0,3,3,2,0,0}.It is the 3-valued signal (see Fig. 23), each value of which is a Fibonacci member, i.e.,Δ1f(x)=uΔ1f(x),x=0:20.This signals equals its canonical representation, which we denote byg2(x), i.e.,g2(x)=Δ1f(x). Fig. 23 shows the original signalf(x)in part a, and the signalf1(x)in b with its canonical representationg1(x)in d, the difference signalΔ1f(x)in c, and the signalg1(x)in d.The signalf(x)is the sum of the two signals, one of which is described by means of the 6-level signalg1(x)and another is the 3-valued signal,(15)f(x)=f1(x)+Δ1f(x)=ug1(x)+uΔ1f(x),x=0:20.Thus, for the 16-valued signalf(x), it is enough to calculate its binary signals by the first six Fibonacci levels and three binary signals for the differenceΔ1f. It needs together 9 binary signals instead of 16 ones when you use the traditional representation off(x)by means of the binary signals{fα;a=1,2,…,16}.It is not difficult to show, that every finite-level signal is the sum of signals, each of which is described by the Fibonacci numbers. In the general case, we can prove the following statement. Any discrete finite integer signalf(x)can be represented as the sum of two signals(16)f(x)=n0+ug1(x)+Δ1f(x)wheren0=min⁡f(x)and the signalug1(x)is composed by the Fibonacci levelsFk≤rwhere the integer r is the minimal superior Fibonacci level of the signalf(x), for whichr≥f(x)−n0. When the signal is non-negative, we can considern0=0. The signalΔ1fis a signal with maximum of(ur−ur−1)=ur−2levels. Continue recursively this procedure, we obtain the expansion of the functionf(x)in the form of the sum of signals(17)f(x)=n0+ug1(x)+ug2(x)+…+ugn−1(x)+uΔnf(x),n≥1,each of which is a sequence of Fibonacci series.Since the signalΔ1fis(ur−2)-level, the signalg2(x)is the same level signal, and the second differenceΔ(Δ1f)=f−(n0+ug1(x)+ug2(x))is maximum(ur−4)-level, etc. Defining the numbern=n(r)asr=2(n+1)+l,l∈{0,1}, we can state that the signalf(x)can be represented as n signalsg1(x),g2(x),…,gn(x), whose levels compose together the following number:(18)L(ur)≤r+L(ur−2)≤r+(r−2)+(r−4)+…+(r−2(n−1))+2=nr−n(n−1)+2.These values, for 12 Fibonacci levels r, are given in Table 3, which could be used when considering signals with up to 1597 levels. We can see that the efficiency of the proposed signal representation by means of the corresponding Fibonacci signalsg1,g2,…,gngrows as the number m of levels becomes large. For instance, for the m-level signals whenm=377, the efficiency is greater thanu13/L13=377/47≈8times. For integer signals with the range that does not exceed the Fibonacci level number 16, no more than 72 binary signals are required to represent the signals. In image processing with the standard scale of 255 gray levels, 12 Fibonacci levels can be used for image decomposition with less than 47 binary images.In this section, we describe the concept of the median filter which can be calculated through the decomposition of the signal by the Fibonacci levels. In other words, the median filtration can be calculated by medians of the binary signals in canonical representation of the signal by the Fibonacci levels.Let W be a finite set (window) withcardW=2m+1points, and letWx={w+x;w∈W}be the translation of the window W at the point x.Definition 3An operator M which maps the functionf(x)into such whose value at x is the median among the valuesf(y),y∈Wx, i.e.,M:{f(x)}→{Median{f(y);y∈Wx}}, is called a median filter by W.In binary setting, when the signalf(x)is represented as the sum of binary signals, the additive property of the median filter holds [3,20](19)f(x)=∑αfα(x)⟷M(f)(x)=∑αM(fα)(x).Thus, the median filtration of a finite-level signal can be accomplished through the decomposition of the signal by binary signals with following filtration of them. The similar property holds for many other nonlinear filters and stack filters [53]. More general property of decomposition takes place for the mixed median filters which include the traditional median and order statistics [54].Now, we consider the calculation of the median by using only a few number of Fibonacci-valued signals (images). By means of the binary signals which are calculating on the Fibonacci levels, the m-valued signalf(x)can be described as the following n-dimensional vector, which we call the canonical vector representation off(x):(20)Φ:f→g̲=(g1,g2,…,gn−1,gn)′.This representation defines the vector signal composed by Fibonacci level signals,(21)g̲→f̲=(f1,f2,…,fn−1,fn)′,fk=ugk,k=1:(n−1),for whichf1+f2+…+fn−1+fn=f.We can introduce two different methods for the Fibonacci level-based vector median filtering off̲by processing the binary signals in canonical representation,g̲.1st method(Vector median (VM) filtering):(22)Φ:g̲→VMg̲=(Mg1Mg2…Mgn−1Mgn)→VMf̲=(Mf1Mf2…Mfn−1Mfn).In this case,Mfk=uMgk,k=1:m.As an example, we consider the signalf(x)={0,1,4,4,5,8,11,11,11,10,6̲,5,4,2,8,13,16,11,7,0,0}considered above. For this signal, the following vector representation holds:g̲(x)=(00),(10),(31),(31),(40),(50),(53),(53),(53),(52),(41)̲,(40),(31),(20),(50),(60),(63),(53),(42),(00),(00),f̲(x)=(00),(10),(31),(31),(50),(80),(83),(83),(83),(82),(51)̲,(50),(31),(20),(80),(130),(133),(83),(52),(00),(00).For instance, in the pointx=11, for the vector median filtering with window of size 3, we obtain the following:(23)(VMg̲)(11)=(41)→(VMf̲)(11)=(51)=(u4u1).2nd method(Vector-to-1D median filtering):(24)Φ:g̲→Mg̲=(Mg1Mg2…Mgn−1Mgn)→Mˆf=uMg1+uMg2+⋯+uMgn−1+uMgn.It is not difficult to see, that such a median filtration by a few the Fibonacci levels may differ from the traditional median filteringf→Mfwhich is calculated by all binary signals. This difference is not significant and, in general, the results of both filtration are very similar. As an example, we consider the same signalf(x)considered above. We can see that at the pointx=11,Mg(x)=4, andMf(x)=5, for the median filtering with window of size 3. Using the vector median filter, VM, with this window, we obtain in (23)(VMg̲)(11)=(41),(VMf̲)(11)=(51)=(u4u1),andu4+u1=6≠5. The output data for the vector-to-1D median and median filters are given below together with the signalf(x)f(x)={0,1,4,4,5,8,1,11,11,10,6,5,4,2,8,13,16,11,7,0,0},Mˆf(x)={0,1,4,4,5,8,11,11,11,10,6,6̲,4,2,8,13,16̲,11,7,0,0},Mf(x)={0,1,4,4,5,8,11,11,11,10,6,5̲,4,2,8,13,13̲,11,7,0,0}.It should be noted, that the concept of the vector median, not in the above given form but in the 2-D case, was first introduced and used successfully for processing color images in [64] and in mixed median filtration [54].The traditional median-type filters can also be calculated through a finite union of Fibonacci-level signals. Indeed, every m-valued signalf(x)can be represented as a finite union (maximum) of signalsf(x)=⋁i=1kfi(x)=⋁i=1k(ni+ugi(x)),such that the following decomposition for the median is fulfilled:Mf(x)=⋁i=1kMfi(x)=⋁i=1k(ni+Mugi(x)).Here,ni,i=1,…,k, are Fibonacci integers andk≤r(m).The example of this composition is shown in Table 4for the 16-level signalf(x)with the five signalsfkwhich can be used in the signal representation,(25)f(x)=f1(x)∨f2(x)∨f3(x)∨f4(x)∨f5(x).In this case, the Fibonacci numbersn1=1,n2=2,n3=5,n4=8, andn5=13. The corresponding signalsfk(x)are considered at points x wheref(x)≥nk,k=1:5. It is not difficult to verify, that the following expression holds of the median filter:(26)Mf(x)=Mf1(x)∨Mf2(x)∨Mf3(x)∨Mf4(x)∨Mf5(x),x=0:19.The weighted thresholding can be used for designing new morphological filters in image enhancement, segmentation, and edge detection, together with the traditional thresholding [7–15,19,20,62–69]. For example, the processing of edges of the image, when using the difference between the image, f, and its erosion,(f⊖B), by a set B, can also be performed by using the similar difference between the weighted thresholding,Kf, and its erosion(Kf⊖B). The general method of using the weighted thresholding for processing the signal or imagef(x)can be described by the following algorithm.Algorithm 4Sequence-based morphological image processing.This is the classical morphological approach for segmentation, which is based on gradients. It may require the fulfillment of some conditions for existence and uniqueness of such a functiong(x). Different expressions for gradients are used in image processing such as morphological gradients, half gradients, directional gradients, mosaic gradients, regularized gradients, internal and external gradients and others. These kinds of gradients are potentially useful and are based on operations of dilation and erosion [19,20]. We consider the function-set operations.Definition 4Given an n-dimensional functionf(x)with domainX∈Rn, its dilation,f⊕B, and erosion,f⊖B, by a set B are the following functions:(f⊕B)(x)=maxx∈B⁡{f(x−b);b∈B},(f⊖B)(x)=minx∈B⁡{f(x−b);b∈B}.These operations are dual to each other, i.e.,(f⊖B)(x)=−(−f⊕B)(x). The set B is called the structuring element.In many practical applications, B is considered to be a small window set or disk, respectively in 1-D and 2-D cases. Therefore, the erosion (dilation) of a sampled m-valued signal by a finite window B is equal to the moving local minimum (maximum) of the given signal inside B. The secondary operations of opening,f∘B, and closing,f•B, off(x)by B are defined by(f⊖B)⊕Band(f⊕B)⊖B, respectively. Consider the following three gradients:(27)f→G(f)={EG(f)=f−f⊖B,DG(f)=f⊕B−f,SG(f)=f⊕B−f⊖B.The weighted thresholding{(k(α),fα(x))}→Kf(x)is invariant relative to many morphological operations, M, which include the erosion and dilation, opening and closing. Therefore the following is valid:(28)Mf=∑α=1L1k(α)Mf¯α.In other words, when the input gray-level signal is represented as the sum of its m-valued images, the M-filtered signal is represented by a linear combination of M-filtered m-valued images. The casek(α)≡1has been described by Maragos [68,69]. In general, the mentioned invariance can be written as(29)Kf⊖B=Kf⊖B,Kf⊕B=Kf⊕B,Kf∘B=Kf∘B,Kf•B=Kf•B.Indeed, for the operations of the dilation and erosion of function by a set B, the following well-known equalities hold(f⊖B)α=fα⊖Band(f⊕B)α=fα⊕B, for all numbersα∈(−∞,+∞). Assume thatk(α)are monotonically non-decreasing sequence. Then, denoting by(30)bα=∑β≤αk(β),α≤L,and bygβthe binary functiongβ(x)=fα(x), ifbα<β≤bα+1, we can see that(31)∑α≤nk(α)fα=∑β≤bngβ,for alln≤L.We can note thatgβare the binary images of the functionKf, i.e.,(Kf)β=gβ. The following calculations are valid:Kf⊖B=(∑αk(α)fα)⊖B=(∑βgβ)⊖B=∑β(gβ⊖B)=∑α∑bα<β≤ba+1gβ⊖B=∑αk(α)(gba+1⊖B)=∑αk(α)(fα⊖B)=∑αk(α)(f⊖B)α=Kf⊖B.As example, let the set B be{−1,0,1}with the center at 0, and let the arithmetic series bek(α)=1,2,3,4,…. The following operations are valid over the given signal f:f={0,0,1,2,1,4,3,5,1,1,0,0},f⊖B={0,0,0,1,1,1,3,1,1,0,0,0},Kf⊖B={0,0,0,1,1,1,6,1,1,0,0,0},Kf={0,0,1,3,1,10,6,15,1,1,0,0},Kf⊖B={0,0,0,1,1,1,6,1,1,0,0,0}.Similar equalities of (29) can be proved for the dilation operation and opening and closing systems. For the median filter,M=Med, with a window B, we can also write thatMed[Kf]=KMed[f], due to the calculationsMed[Kf]=Med(∑αk(α)fα)=Med(∑βgβ)=∑βMed[gβ]=∑αk(α)Med[fα]=KMed[f].Our preliminary experimental results show that the sequences of numbersk(α), which includes the arithmetical, geometrical, 2-in-4, and Fibonacci series, are very effective when compared with other mentioned above cases. Together with the traditional erosion and dilation gradient operatorsEG(f)=f−f⊖BandDG(f)=f⊕B−f, the similar erosion and dilation operators over the weighted thresholding can be considered,EG(Kf)=Kf−Kf⊖BandDG(Kf)=Kf⊕B−Kf. The corresponding estimates of gradientsEΔ(f)andDΔ(f)of signal f are defined byKEΔ(f)(x)=EG(Kf)(x)andKDΔ(f)(x)=DG(Kf)(x).For the above example with the signal f and the setB={−1,0,1}, we obtain the following gradients:f={0,0,1,2,1,4,3,5,1,1,0,0},EG(f)={0,0,1,1,0,3,0,4,0,1,0,0},EG(Kf)={0,0,1,2,0,9,0,14,0,1,0,0}.Using the direct formula of calculation of multi-valued imagesf¯α(x), we obtain the estimate from the following table:EG(Kf)={0012090140100}f¯1(x)={001101010100}×1f¯2(x)={000.5̲01010000}×2f¯3(x)={000001010000}×3f¯4(x)={00000.75̲010000}×4f¯5(x)={0000000.8̲0000}×5ΔAf={0011.5̲03.75̲04.8̲0100}For the binary signals, the rounding of these data results inΔAfas follows:f1(x)={001101010100}f2(x)={0001̲01010000}f3(x)={000001010000}f4(x)={000001̲010000}f5(x)={00000001̲0000}ΔAf={001204050100}.One can see thatΔAf≥EG(f), andΔAf>EG(f)at the points with peaks over 1.When the weighted thresholding by the sequence of Fibonacci numbers, the following data are obtained:f={0,0,1,2,1,4,3,5,1,1,0,0}Kf={0,0,1,2,1,7,4,12,1,1,0,0}Kf⊖B={0,0,0,1,1,1,4,1,1,0,0,0}EG(Kf)={0,0,1,1,0,6,0,11,0,1,0,0}ΔFf={0,0,1,1,0,4,0,5,0,1,0,0}.The gradient is calculated by using the simple relationEG(Kf)(x)=k(ΔFf(x)+2)−1, which is similar to the well-known formulaKf(x)=k(f(x)+2)−1.The weighted thresholding by the sequences of arithmetic series and Fibonacci numbers give almost the same results. The calculation by means of the Fibonacci numbers is simple and does not require rounding operation. Comparing the obtained results for the erosion weighted thresholding gradients, one can see that both methods of enhancement of the signal f give the better results than the standard morphological gradients. As an example in the 2-D case, we consider application of the weighted thresholding in processing the gradients for the cell image shown in Fig. 24.Fig. 25shows the gradient of the imageSG(f)=(f⊕B)−(f⊖B)in part a, which is calculated with the structuring element B being the square3×3. The corresponding weighted thresholded gradientSG(Kf)calculated with the same set B is shown in b. The weighted sequencek(α)is arithmetical, i.e.,1,2,3,4,5,….The similar processing of the gradients for the cell image, when the structuring element B is disk of radius 1, which is also the cross window3×3, is demonstrated in Fig. 26. The gradient of the imageSG(f)is shown in part a, along with the weighted thresholded gradientSG(Kf)in b.One can see form both figures, that the images processed by the weighted thresholding show better results, when compared with the traditional gradient operationG2(f). The weighted thresholding allows to extract contours of the cells, and in addition this operation works as a filter cleaning the image outside the cells.The similar results are shown in the next figures after processing stacked images by fluorescence in situ hybridization (FISH) for detection of gene copy numbers in cancer and other diseases [73,74]. Fig. 27shows the maximum images of green and red channels of the stack87 FISH image in parts a and b, respectively. Both images are of size656×517. For the green channel of the FISH image, Fig. 28shows the gradient imageSG(f)in part a and the weighted thresholded gradientSG(Kf)in b. The results of processing the red channel of the FISH image by the gradient of the imageSG(f)and the weighted thresholded gradientSG(Kf)are shown in Fig. 29in parts a and b, respectively.Now, we consider natural images. Fig. 30shows the image f of size640×1024in part a, together with the gradients imagesSG(f)andSG(Kf)in b and c, respectively.The difference between the gradient operationsSG(f)andSG(Kf)also can be seen well in images shown in the next figures. Fig. 31shows two different images of size640×1024and521×800in parts a and b, respectively. The results of processing the first image with the gradient and weighed gradient imagesSG(f)andSG(Kf)are shown in Fig. 32in parts a and b, respectively. Fig. 33shows gradient imagesSG(f)andSG(Kf)of the second image of Fig. 31 in parts a and b, respectively. The disk of radius 1 was used for these images, as the structuring element B.

@&#CONCLUSIONS@&#
