@&#MAIN-TITLE@&#
Dual cone approach to convex-cone dominance in multiple criteria decision making

@&#HIGHLIGHTS@&#
We are revisiting the old idea of convex preference cones.Convex preference cones can be used to eliminate inferior solutions.The current paper is based on the idea of utilizing dual cones.With dual cones we avoid the solving of LPs resulting in computational savings.

@&#KEYPHRASES@&#
Multiple criteria analysis,Convex-cone dominance,Duality,Linear programming,Dual/Polar cone,

@&#ABSTRACT@&#
In a paper published in Management Science in 1984, Korhonen, Wallenius, and Zionts presented the idea and method based on convex-cone dominance in the discrete Multiple Criteria Decision Making framework. In our current paper, we revisit the old idea from a new standpoint and provide the mathematical theory leading to a dual-cone based approach to solving such problems. Our paper makes the old results computationally more tractable. The results provided in the present paper also help extend the theory.

@&#INTRODUCTION@&#
The purpose of Multiple Criteria Decision Making (MCDM) methods is to find the most preferred solution(s) or rank the alternatives based upon decision-maker’s preferences. We consider a finite number of given alternatives characterized by a small number of criteria. We assume that the decision-maker can compare two alternatives at a time. Without loss of generality, we assume that for all criteria, more is better. The problem has been studied by many scholars. We reference here the most important studies, which have addressed the problem in the same setting: finite number of alternatives. Keeney and Raiffa (1976) developed the theory and methods for eliciting multi-attribute value and utility functions. Roy (1973) and other representatives of the ``French school” pioneered the outranking methods. Saaty (1980) developed the Analytic Hierarchy Process. Greco, Matarazzo, and Slowiński (2001) pioneered the rough sets approach to solving MCDM problems. Korhonen, Köksalan, Wallenius and Zionts used the interactive optimization methods for solving discrete MCDM problems (Köksalan & Sagala, 1995; Korhonen, 1988; Korhonen, Wallenius, & Zionts, 1984; Zionts, 1981). For a good book discussing at length decision aids for such selection problems, see Olson (1996).Our approach to solving the discrete MCDM (selection) problem is based upon an implicit quasi-concave value function, corresponding to convex-to-the-origin indifference contours. This approach was first introduced by Korhonen et al. (1984). Quasi-concave value functions encompass a wide class of functions, including the concave functions, differentiable pseudoconcave functions (Bazaraa & Shetty, 1979), and locally Lipschitz nonsmooth pseudoconcave functions (Soleimani-damaneh, 2007). The main idea in the Korhonen et al. (1984) approach is to use decision-maker’s pairwise preference comparisons and the properties of quasi-concave functions to construct convex dominance cones, consisting of the inferior alternatives (to a known alternative). Linear programming is then used to check whether alternatives would lie in or under such dominance cones. See also, Prasad, Karwan, and Zionts (1997), Ramesh, Karwan, and Zionts (1988), Korhonen and Karaivanova (1999), and Karsu (2014).The current paper revisits the old idea underlying the convex dominance cones. More specifically, we develop the theory for such cones utilizing the dual cones. The dual cone approach leads to an algorithm for checking the dominance of given alternatives utilizing some simple inner products of vectors, resulting in considerable computational savings (with respect to the average running time) compared to the old approach11In 1984 paper, Korhonen, Wallenius, and Zionts were aware of the dual formulation. They also outlined the so called ``modified” efficiency program to detect dominated alternatives using the dual formulation. However, they did not further pursue the dual cone theory.. Illustrative examples are also provided. Section 2 contains required preliminaries. Sections 3 and 4 provide the main results. Section 5 concludes the paper.The ``convex-cone method” (Korhonen et al., 1984) is an interactive algorithm, where steps of computation alternate with steps of decision-making. During the decision-making steps, which guide the algorithm towards better alternatives, the DM will provide preference information in the form of pairwise comparisons. The computing steps take the DM’s preference information into account by generating convex cones, defining regions consisting of dominated alternatives. Alternatives which lie under such cones can be eliminated, since they do not contain the most preferred alternative. Then additional preference information is sought, and new cones are generated. Again, new dominated alternatives are eliminated. The process finally eliminates all but one alternative, namely the most preferred alternative.Assume that we have m decision alternatives defined by p criteria. We denote the alternatives byx1,x2,…,xm,which are real p-vectors in the criterion space22If one considers the problem in a multi-objective optimization framework, we study the discrete problem maxx ∈ Θh(x), with some pairwise comparisons, whereh:Rp⟶Rpis the objective function withh(x)=xandΘ={x1,x2,…,xm}⊆Rpis the feasible set. It is clear thath(Θ)=Θ. In the MCDM context, each objective function is called a criterion and each feasible point is called an alternative.. It is assumed that there are no duplicate alternatives. The main idea of the ``convex-cone method” (Korhonen et al., 1984) is to construct polyhedral convex cones utilizing the pairwise judgements made by the DM. The constructed cones are used as reference cones to recognize and eliminate dominated alternatives. The alternatives which are determined dominated by the constructed convex cones can be eliminated, since the most preferred alternative is not among them.A functionf:Rp⟶Ris quasi-concave iff(λx+(1−λ)y)≥min{f(x),f(y)}for each x, y ∈ Rpand each λ ∈ [0, 1]. The function f is increasing if x ≤ y implies f(x) ≤ f(y), and if furthermore x ≠ y, then f(x) < f(y). In our paper, the ≥ and > orders are defined componentwise, i.e., x1 ≥ (>)x2 stands for xi1 ≥ ( > )xi2 for eachi=1,2,…,p.Letf:Rp⟶Rbe a real-valued value function. Using this value function, we define some relations on Rpas follows: We say(i)x is preferred to y if f(x) > f(y). It is denoted by x ≻ y.x is at least as good as y if f(x) ≥ f(y). It is denoted by x ≽ y.Hereafter, we denote the set of alternatives by Θ, i.e.,Θ={x1,x2,…,xm}.Alternative x* ∈ Θ is called the most preferred alternative, if there does not exist another x ∈ Θ such that x ≻ x*.Suppose that C ⊆ Rpis a convex cone and x0 ∈ Rpis a given point. Thenx0+C={x0+c:c∈C}is called a transformed cone. For simplicity, we also call this transformed cone a ``cone”, and we denote it byCx0. The vector x* ∈ Rpis called dominated by the coneCx0,if there existsy∈Cx0such that y ≻ x*.Now suppose that we have the following pairwise judgements on Θ:(1)xj⪰xkforeachj=1,2,…,t,where t ≪ m andk∉{1,2,…,t}. A strict version of (1) is:(2)xj≻xkforeachj=1,2,…,t.In these preference relations, xkis a given alternative and the above-mentioned relations provide preference information for comparing some alternatives with xk. Such relations are provided as value judgments by the DM. Usually t is a very small number in comparison to m.Korhonen et al. (1984) provided parts (i) and (ii) of the following basic result. Part (iii) is a slight improvement of part (i).Lemma 1Let f be a quasi-concave real-valued value function. Define(3)X={z∈Rp:z=∑j=1tμjxj,∑j=1tμj=1,μj≥0;j=1,2,…,t},(4)Cxk={z∈Rp:z=xk+∑j=1tλj(xk−xj),λj≥0;j=1,2,…,t}.(i)If relations(1)hold, then z ≽ xk for each z ∈ X.If strict relations(2)hold, then xk≽ z for eachz∈Cxk.If strict relations(2)hold, then z≻xk for eachz∈X∖{xj}j=1t.For a simple illustration about part (ii) of the above lemma, letx1=(−2,2)andxk=(−1,1). If x1 ≻ xkand f is a quasi-concave real-valued value function, then by part (ii) of the above lemma, xk≽ z for each z belonging to the halfline which starts from(−1,1)and goes in direction(1,−1).We call the vectorsxk−x1,xk−x2,…,xk−xtgenerators of the coneCxkused in Lemma 1, becauseCxkis an affine transformation of the polyhedral cone generated byxk−x1,xk−x2,…,xk−xt.Let C ⊆ Rpbe a cone. The polar of this cone, denoted byC+,is defined by(5)C+={d∈Rp:dv≥0foreachv∈C}.In the above set, we considered d vectors as row vectors. Geometrically,d∈C+if and only if the angle between d and all of the members of C belong to[0,π2].For example, considering C as depicted in Fig. 1(a), the coneC+is as illustrated in Fig. 1(b).Suppose that x* is a given alternative, and we want to check whether this alternative is dominated by the coneCxkor not. Also, we want to find out whether x* is preferred to xkor not. To this end, Korhonen et al. (1984) defined the following Linear Programming (LP) problem:(6)ϵ*=maxϵs.t.∑j=1tλj(xk−xj)−ϵe≥x*−xk,λj≥0;j=1,2,…,t,in which e is a vector with all components equal to one. The variables of this model areϵ,λ1,λ2,…,λt. In fact, LP (6) checks whetherx*∈Cxk−R+p={y−z:y∈Cxk,z∈R+p}or not. It can be seen thatx*∈Cxk−R+pif and only if ϵ* ≥ 0 (superscript ``*'' stands for optimality). LP (6) and Lemma 1 help us in checking whether x* is preferred to xkor not.The following result explains how the optimal value of LP (6) can be used for checking the cone-dominance of x*. Part (iv) of Theorem 1 shows that if ϵ* < 0, then there does not existy∈Cxksatisfying y ≥ x* and y ≠ x*. Parts (iii) and (iv) will remain valid if one replaces ``increasing” with ``nondecreasing”. The proof of Theorems 1–3 are left to Section 4.Theorem 1(i)If ϵ* > 0 in LP(6), then x*is dominated by the coneCxkwith respect to any increasing value function;If ϵ* > 0 in LP(6), then xk is preferred to x*with respect to any increasing quasi-concave value function satisfying(2);If ϵ* ≥ 0 in LP(6), then x*is not preferred to xk with respect to any increasing quasi-concave value function satisfying(2);If f is increasing and(x*+R++p)∩Cxk≠∅,then x*is dominated byCxk,and ϵ* ≥ 0 in LP(6). Furthermore, if f is an increasing quasi-concave value function and relations(2)hold, then x*is less preferred than xk.Based on the above discussions and the results given by Korhonen et al. (1984), one way for checking the dominance of some given alternatives is solving LP (6) once for each alternative. Since the number of alternatives (|Θ| which is denoted by m) is usually large, the number of LPs which have to be solved can be very large, and hence utilizing this traditional approach might be computationally expensive. In the following, we provide a dual-based technique which is able to check the dominance of the alternatives without solving LP problems. In fact, it is done by checking some simple inner products. In the following theorem, the v vectors are row-vectors.Theorem 2Assume that f is increasing quasi-concave and relations(2)hold. Consider the polyhedral coneV={v∈Rp:vxj−vxk≥0;j=1,2,…,t&v≥0}.Assume thatv1,v2,…,vqare the extreme generators of V. Then:(i)ϵ* ≥ 0 in LP(6)if and only if the angle between each extreme generator of V andxk−x*belongs to[0,π2],that isvi(xk−x*)≥0for eachi∈{1,2,…,q}.ϵ* > 0 in LP(6)if and only if the angle between each extreme generator of V andxk−x*belongs to[0,π2),that isvi(xk−x*)>0for eachi∈{1,2,…,q}.In the above theorem V is the intersection of the first orthant with the polar cone corresponding to−(Cxk−xk). Hereafter, we call V as ``dual cone”. In the following, we illustrate V and the above result geometrically.Example 1Letxk=(−1,1)T∈R2andx1=(−2,2)T∈R2. Assume that x1 ≻ xkand we want to check the dominance situation of two alternativesx*=(−2,0.5)Tandx*=(−2,1.5)T. Fig. 2illustrates the cone V and its extreme generators. In this figure, we can see that the angle betweenxk−x*and both v1, v2 belongs to(0,π2),and hence ϵ* > 0 and xkis preferred to x* with respect to any increasing quasi-concave value function satisfying x1≻xk. For x** this is not true, because the angle betweenxk−x**and v2 belongs to(π2,π)and hence ϵ* < 0 in this case.By Lemma 1, Theorems 1 and 2, we have the following corollary.Corollary 1Let f be an increasing real-valued value function and assume that relations(2)hold.(i)Ifvi(xk−x*)>0for eachi∈{1,2,…,q},then x*is dominated by the coneCxk.Ifvi(xk−x*)≥0for eachi∈{1,2,…,q},then f(xk) ≥ f(x*), that is, x*is at most as good as xk. Hence x*is not preferred to xk.We continue this section by presenting an algorithm for checking the cone dominance of the given alternatives utilizing only some simple inner products. Assume that Θ is the set of given alternatives and relations (2) hold. We want to check the dominance of alternatives belonging toΘ¯=Θ∖{x1,…,xt,xk}. Without loss of generality, assume thatΘ¯={x1,x2,…,xm−t−1}. Here, Bjstands for the jth column of a matrix B.Notice that the results provided by the above algorithm are robustness-type results, because ifϵj*>0,then xjis dominated byCxk,with respect to a class of value functions.In this sub-section we provide a concise computational complexity analysis and a brief computational study comparing the dual-cone approach to our original LP-based method for different sized problems. Notice that t (the number of constraints in V) is usually an extremely small number compared to|Θ¯|(the number of LPs which must be solved). Also notice that, due to the special structure of V, finding its extreme generators can be done by some simple calculations, see e.g. Yan and Wei (2000) for an efficient algorithm.Consider m decision alternatives, characterized by p criteria, and assume that the decision-maker has provided us with t pairwise comparisons. For using the LP-based method, one has to solvem−(t+1)LP problems with p constraints andp+t+2variables (in standard form). The number of operations required for each iteration of the simplex method to solve these LP problems equals (see p. 193 in Bazaraa, Jarvis, and Sherali, 1990):(m−t−1)(2p(t+2)+3p+2t+3).Note that this number indicates the number of operations (additions, multiplications and comparisons) required for solving LP problems in the most optimistic case, in which the problems can be solved using only one iteration. In practice, we may have to do several iterations.Since the number of constraints and variables in V is usually a very small number, obtaining the extreme generators of V is not difficult from a computational standpoint. Thus, the main part of Algorithm 1, computationally, is due to Steps 2–8. The following theorem concerns the computational complexity of these steps.Theorem 3The computational complexity of Steps 2–8 inAlgorithm 1isO(pm(p+t)).The proof of Theorem 3 is in Section 4. Due to Theorem 3Eq. (7) and Theorem 3, the number of operations required for using the LP-based method in the most optimistic case almost equals to that of using Steps 2–8 of Algorithm 1 in the most pessimistic case. We compared the two methods by applying them to some sample problems with randomly-generated data. The speed of Algorithm 1 in comparison to the LP-based approach for the studied problems has been reported in Table 1. For each sample, both methods have been run ten times and the average running time for both methods has been documented. The running time of Algorithm 1 has been calculated for Steps 1–8. The relative speed (RS) (speed-up) for each sample problem has been calculated asRS=averagerunningtimeofLP-basedmethodaveragerunningtimeofAlgorithm1.For the studied problems, Algorithm 1 works considerably (much in some cases) better than the traditional LP-based method. As mentioned before, the number of criteria, p, is usually small, and in our case in all samples it was equal to 5. The number of alternatives included in the pairwise comparisons, t, is usually greater than p, though it is very small compared to the number of alternatives, m. In samples#1,2,3,which are small/medium-sized problems, we have consideredt=10for all of them andm=500,1000,and 5000, respectively. Since p and t are small, obtaining extreme generators of V is computationally easy. From Table 1, in samples#1–6 by increasing m while p, t are fixed the RS increases. It is due to the fact that increasing m leads to an increasing number of LPs which must be solved in the LP-based approach, while in our approach it only increases the number of columns in the matrix multiplication. Holding p, m fixed and doubling t in samples#1,2,3,samples#4,5,6are obtained. It is seen that Algorithm 1 is still much faster than the LP-based method, although the relative speed decreases compared to samples#1,2,3. This is due to Step 1. Increasing t increases the size of V, and accordingly increases the computations required in obtaining the extreme generators of V. Samples#7,8consider two large-scale problems. These large-scale problems also verify the computational power of the dual cone method compared to the traditional one.As a final remark, although in real-world problems p, t are very small compared to m, consider p, t big numbers. Then the number of alternatives with known dominance situation increases, the number of points which should be evaluated decreases, and thus in such a situation the running time of Algorithm 1 might be close to that of the LP-based method (also due to Step 1). Although such a situation is rare in practice, trying to decrease the computational burden in the presence of large p, t values may be a worthwhile problem for future research. Decomposition approaches and column generation methods (Bazaraa et al., 1990) might be usful in this direction.This section contains the proofs of the basic results given in Section 3.Proof of Theorem 1(i,ii)If ϵ* > 0 in LP (6), then there exists(λ1*,λ2*,…,λt*)≥0such thatxk+∑j=1tλj*(xk−xj)≥x*+ϵ*e>x*.Settingy=xk+∑j=1tλj*(xk−xj),we gety∈Cxkand y > x*. Hence for increasing f, we have f(y) > f(x*), which means x* is dominated by the coneCxk. Furthermore, by Lemma 1, xkis preferred to x* with respect to any increasing quasi-concave value function satisfying (2).If ϵ* ≥ 0 in LP (6), then there existsy∈Cxkwith y ≥ x*. Hence, f(y) ≥ f(x*) because f is increasing. Thus, by Lemma 1, f(xk) ≥ f(y) ≥ f(x*) for increasing quasi-concave value function f satisfying (2). Hence, x* is not preferred to xkwith respect to any increasing quasi-concave value function satisfying (2).If(x*+R++p)∩Cxk≠∅,then x* is dominated by the coneCxkdue to the dominance definition. Also, this implies the existence ofyo∈Cxksuch that yo≥ x* and yo≠ x*. Therefore, there exists(λ1o,λ2o,…,λto)≥0such thatyo=xk+∑j=1tλjo(xk−xj)≥x*and yo≠ x*. Thus∑j=1tλjo(xk−xj)≥x*−xk.Therefore(λ1o,λ2o,…,λto,ϵo=0)is a feasible solution to LP (6). Hence ϵ* ≥ 0. Furthermore, by Lemma 1, x* is less preferred than xk.□Considering v as the vector of dual variables corresponding to the constraints of LP (6), the dual of this LP can be written as follows:(7)ϵ*=minv(xk−x*)s.t.v(xj−xk)≥0;j=1,2,…,t,ve=1,v≥0.It can be shown that, if v is an extreme generator of V, thenvveis an extreme feasible solution to LP (7). Conversely, ifv¯is an extreme feasible solution of LP (7), then it is an extreme generator of V. On the other hand, if an LP, in which all variables are nonnegative, has an optimal solution, then it has an extreme optimal solution (Bazaraa et al., 1990). Therefore, we getϵ*=min1≤j≤qvj(xk−x*)vje.This implies that, ϵ* ≥ 0 (resp. > 0) if and only ifvi(xk−x*)≥0(resp. > 0) for eachi∈{1,2,…,q}.□Consider the following auxiliary setsΩ1={v:v(xj−xk)≥0;j=1,2,…,t,∑i=1pvi=1,v≥0},Ω2={v:v(xj−xk)≥0;j=1,2,…,t,∑i=1pvi≤1,v≥0}.A vector v is an extreme point of Ω1 if and only if v is an extreme generator of V with∑i=1pvi=1; see Bazaraa et al. (1990). Furthermore, v is an extreme point of Ω1 if and only if v is an extreme point of Ω2 with∑i=1pvi=1. On the other hand,v=0is an extreme point of Ω2. Also, each vector v ∈ Ω2\{0} with∑i=1pvi<1is not an extreme point of Ω2. Hence, the number of extreme generators of V is equal to the number of nonzero extreme points of Ω2. Now, we show that all nonzero extreme points of Ω2 are adjacent to the origin. Let v0 be a nonzero extreme point of Ω2. Thus there exist p hyperplanes defining V whose gradient vectors are linearly independent and these are active at v0. At leastp−1of these hyperplanes are in the formv(xj−xk)=0. Clearly thesep−1hyperplanes are active at the origin as well. Therefore, v0 is adjacent to the origin. On the other hand, in each polyhedral with standard form, an extreme point and its adjacent extreme points are affinly independent. Thus the extreme points of Ω2 and the origin are affinly independent. The standard form of Ω2 is a subset ofRp+t,and hence the number of affinly independent vectors in this set is at most equal top+t+1. This implies that the number of nonzero extreme points of Ω2, and hence the number of extreme generators of V, is less than or equal top+t. Thus, in Algorithm 1,q≤p+t. Hence, performing Steps 2–8 in this algorithm, in the worst case, is done by multiplying a(p+t)×pmatrix by ap×(m−t−1)matrix, and then performing the minimizing operator amongp+tdigits,m−t−1times. The complexity of the multiplication of two matrices isO(p(p+t)(m−t−1))which, due to the assumptions of our problem, in the worst case will beO(pm(p+t)).The complexity of the minimizing operations isO((p+t)m). Thus the computational complexity of Steps 2–8 in Algorithm 1 isO(pm(p+t))and the proof is complete.□

@&#CONCLUSIONS@&#
In this paper we have presented a dual-cone approach for convex cone dominance. The presented mathematical results led to an algorithm for checking the dominance of the given alternatives utilizing some simple inner products. The results established in the present paper make the convex cone dominance idea more understandable and operational. Also these results can be helpful in extending the theory and connecting MCDM with recent developments in mathematical programming. Additional efforts for reducing the computational complexity of the problem and extending the results to a wider class of value functions can be worth further study; see e.g. Soleimani-damaneh, Korhonen, and Wallenius (2014) for a recent study about nonsmooth value functions.