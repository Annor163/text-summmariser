@&#MAIN-TITLE@&#
Refinability of splines derived from regular tessellations

@&#HIGHLIGHTS@&#
Multivariate splines can be derived by convolving indicator functions.Refinability (nestedness) is an important property of spline spaces.Refinable convolution-derived splines on shift-invariant tessellations are rare.Hex-splines and their generalizations are not refinable.This is proven via simple, geometric criteria for refinability.

@&#KEYPHRASES@&#
Spline,Refinability,Nested space,Regular lattices,Shift-invariant tessellation,Voronoi,Convolution,

@&#ABSTRACT@&#
Splines can be constructed by convolving the indicator function of a cell whose shifts tessellateRn. This paper presents simple, geometric criteria that imply that, for regular shift-invariant tessellations, only a small subset of such spline families yield nested spaces: primarily the well-known tensor-product and box splines. Among the many non-refinable constructions are hex-splines and their generalization to the Voronoi cells of non-Cartesian root lattices.

@&#INTRODUCTION@&#
Univariate uniform B-splines can be defined by repeated convolution, starting with the indicator functions11An indicator function takes on the value one on the interval but is zero otherwise.of the intervals or cells delineated by knots. This construction implies local support and delivers a number of desirable properties (see de Boor, 1978, 1987) that have made B-splines the representation of choice in modeling and analysis. In particular, B-splines are refinable. That is, they can be exactly represented as linear combinations of B-splines with a refined knot sequence. Refinability is a key ingredient of multi-resolution and adaptive and sparse representation of data. Refinability also guarantees monotone decay of error when shrinking the intervals.By tensoring univariate B-splines, we can obtain splines on Cartesian grids in any dimension. Box-splines de Boor et al. (1993) generalize tensoring by allowing convolution in directions other than orthogonal ones. As a prominent example in two variables, the linear 3-direction box-spline consists of linear pieces over each of six equilateral triangles surrounding one vertex (Frederickson, 1971). Shifts of this ‘hat function’ on an equilateral triangulation sum to one. Convolution of the hat function with itself results in a twice continuously differentiable function of degree 4; and m-fold convolution yields a function of degree3m−2with smoothnessC2m. Since this progression skips odd orders of smoothness, van de Ville et al. (2004) proposed to directly convolve the indicator function of the hexagon and build splines customized to the hexagonal tessellation of the plane (cf. Fig. 1a). They went on to show that the resulting hex-splines share a number of desirable properties familiar from box-splines. But the authors did not settle whether the splines were refinable (van de Ville and Unser, 2010), i.e. whether hex-splines of the given hexagonal tessellation T can be represented as linear combinations of hex-splines based on a scaled-down hexagonal tessellation, say12T, for some choice of origin. Generalizing the analysis of hex-splines,•this paper presents simple geometric criteria necessary for regular shift-invariant tessellations to admit refinable indicator functions.In contrast to tensor-product and box splines, we show that hex-splines and similar multi-variate lattice-based constructions can only be scaled, but not refined since scaled spaces are not nested.Example 1LetHibe the space of indicator functions over a regular tessellation by hexagons of diameter2−iand such that, at each level of scaling, the origin is the center of one hexagon. Denote by H the indicator function inH0whose support hexagon is centered at the origin.H1does not contain a linear combination of functions that can replicate H since the supports of the six relevant scaled indicator functions are bisected by the boundary of the support of H (see Fig. 1b). Correspondingly, theL2approximation error to H fromH1is62A1>0whereA1is the area of the hexagon with diameter12. Since the error fromH0is by construction zero, the scaling by 1/2 has increased the error. □By carefully adding to H an increasing number of scaled-down copies, increases in theL2error can be distributed over multiple scaling steps.

@&#CONCLUSIONS@&#
