@&#MAIN-TITLE@&#
Arc–surface intersection method to calculate cutter–workpiece engagements for generic cutter in five-axis milling

@&#HIGHLIGHTS@&#
Arc–surface intersection method to obtain cutter–workpiece engagements is proposed.Feasible contact arc is extracted to calculate the engagement boundaries.Analytical solution can be obtained for flat workpiece by using this method.This method is compatible well with the force model without loss of precision.

@&#KEYPHRASES@&#
Cutter–workpiece engagements,Grazing points,Feasible contact arc,Swept volume,Generic cutter,Five-axis machining,

@&#ABSTRACT@&#
Calculating cutter–workpiece engagements (CWEs) is essential to the physical simulation of milling process that starts with the prediction of cutting forces. As for five-axis milling of free form surfaces, the calculation of CWEs remains a challenge due to the complicated and varying engagement geometries that occur between the cutter and the in-process workpiece. In this paper, a new arc–surface intersection method (ASIM) is proposed to obtain CWEs for generic cutter in five-axis milling. The cutter rotary surface is first represented by the family of section circles which are generated by slicing the cutter with planes perpendicular to the tool axis. Based on the envelope condition, two grazing points on each section circle are analytically derived, which divide the circle into two arcs. The feasible contact arc (FCA) is then extracted to intersect with workpiece surfaces. Using arc/surface intersection and distance fields based approach, the boundary of the closed CWEs is accurately and efficiently calculated. Compared with the solid modeler based method and the discrete method, the ASIM has higher computational efficiency and accuracy. Moreover, an analytical solution for calculating CWEs can be obtained with this method in five-axis milling of the workpiece merely comprising of flat and quadric surfaces. Finally, two case tests are implemented to confirm the validity of the ASIM and comparisons have been made with a Vericut based system which utilizes the Z-buffer method. The results indicate that the ASIM is computationally efficient, accurate and robust.

@&#INTRODUCTION@&#
Five-axis milling has been widely used in the production of complex parts found in aerospace, automotive, die-mold and biomedical industries  [1–5]. The machining process is usually costly and time-consuming especially for high accuracy required parts. Hence, the main focus of five-axis machining is to reduce cycle times while ensuring manufacturing precision. Generally, optimal cutting parameters are selected by the industry through simulating the physics of the cutting process, i.e. cutting force and chatter stability. As for the machining process simulation and optimization, one of the most important steps is to extract the cutter–workpiece engagements (CWEs) which are the portions of the cutter participating in machining at a given instant of time.Due to the complex geometry of the workpiece and the varying tool motions, the accurate and efficient way to calculate CWEs of five-axis milling has been very limited. Some researchers tried to extract the CWEs in analytical ways. Gupta et al.  [6] presented an analytical method to determine the CWE functions with the half-spaces in the following cases: circular cut and linear half-space. Budak et al.  [7] proposed the bounding point coordinate method to calculate the depth of cut, lead, and tilt angles, which determine the CWE boundaries in five-axis milling. Kiswanto et al.  [8] calculated the CWEs during the semi-finish milling process by finding the lower engagement point and the upper engagement point. However, these methods are only applicable for milling of flat workpiece surfaces. Since the workpiece in five-axis milling usually consists of complex shapes, the usage of the analytical approaches is limited.For the calculation of CWEs in five-axis milling, the most common approaches can be classified into two major categories: discrete modeling methods and solid modeling methods. Discrete modeling approaches can further be categorized into two groups: vector based methods and polygon based methods. Vector modeling divides the workpiece into finite units with regular interval methods well known as Z-map  [9], Z-buffer  [10,11], Dexel  [12] and Octree  [13]. The commonly used Z-map method represents the workpiece as a series of evenly distributed parallel vectors. The length of these vectors is reduced while the cutter moves through the workpiece which is similar to cutting blades of grass  [14]. Based on this method, several studies have been conducted to verify the correctness of tool paths and support the physical simulation for both three-axis and five-axis milling. Baek et al.  [15,16] used the Z-map method to perform tool path verification through calculating the intersection points between vectors and the tool swept surface in three-axis milling. Zhu et al.  [17], Fussell et al.  [10] and Zhang  [18] model the CWE geometry to predict cutting force for five-axis sculptured surface milling using vector based method. Polygon based methods have also received some attention  [19,20]. Aras et al.  [19] presented a methodology that maps a polyhedral representation of the removal volume from a Euclidean space into a parametric space to find CWEs for three-axis milling. Yao et al.  [20] developed a hybrid approach that utilizes an exact model of a cutter to intersect with a tessellated model of a workpiece. Though computationally efficient and mathematically tractable, these techniques suffer from the contradiction between the dispersed precision of workpiece decomposition and the computational efficiency. In other words, the high accuracy computation of CWEs requires the high discrete resolution of the workpiece which comes with the expense of large store memory and computational requirements.Solid modeling offers a high level of accuracy for NC simulation. It is now widely used in CAD and CAM areas with the developing computer technology. The commonly used solid modeling representation schemes are constructive solid geometry (CSG) and boundary representation (B-Rep). Spence et al.  [21,22] identified CWEs using a CSG based process simulation system to predict cutting force. Recently, Lazoglu et al.  [23,24] proposed a novel B-Rep based method to determine the complex CWEs in supporting five-axis milling of free-form surfaces. Aras et al.  [25] obtained the closed boundaries of the CWEs by performing surface/surface intersections between in-process workpiece and feasible contact surfaces (FCS). Although solid modeling methods have been recognized as the most accurate approach to extract CWE geometry, it is far from being widely used in practical application due to its low computational efficiency and poor robustness. For instance, the computational complexity of the CSG approach isO(N4), whereNdenotes the number of tool movements  [26]. What is worse, as the data structure size grows quickly during simulation, topological errors due to numerical inaccuracy will be stacked  [27]. To overcome such problems, Ferry et al.  [28] proposed a semi-discrete solid modeling technique called parallel slicing method (PSM) for five-axis flank milling where the removal volume is sliced into a number of parallel planes along a common axis. Yang et al.  [27] developed a solid trimming method which reduces the abundant surface/surface intersection operations compared with the traditional Boolean operations. However, the improvements of these approaches in computational efficiency and robustness are limited.In this paper, we present a new arc–surface intersection method (ASIM) to extract CWEs in five-axis milling process. First, the cutter rotary surface is sliced into a family of section circles by a set of planes perpendicular to the tool axis. Then, based on the envelope condition, the grazing points of the family of section circles are analytically computed. By connecting the two grazing points on each circle, a feasible contact arc (FCA) which locates at the front along the feed direction is obtained. Engagement arcs are extracted accurately and efficiently by intersecting the FCA with workpiece surfaces and determining whether the endpoint of the FCA is inside the workpiece volume based on distance fields. Finally, entry/exit angles of CWEs at each axis height are obtained to plot the CWE map which can be directly used for cutting force prediction. As the boundary of CWEs at each axis height is accurately determined by the arc/surface intersection rather than the abundant Boolean operation, this method well solves the problems of poor computational efficiency and robustness in solid modeling methods and low computational accuracy in discrete methods. Comparisons between our methodology and those commonly used in the literature are presented in Table 1.The remainder of this paper is organized as follows: Generation of the feasible contact arcs is described in Section  2, followed by the five-axis CWE extraction methodology in Section  3. Implementations are given in Section  4, and conclusion is summarized in Section  5.For the convenience of study, the commonly used cutting force model in five-axis milling always divides the cutter into a set of axial cutting elements  [17,21,29], as illustrated in Fig. 1. To judge whether or not the cutting element is in cut at any angular position, CWE regions should be first extracted and then mapped onto a parametric space defined by the entry/exit angles versus the depth of cut. To avoid the time consuming surface/surface intersection operation in the solid modeling method, in this paper, the cutter rotary surface is discretized into a family of section circles which are generated by slicing the cutter with planes perpendicular to the tool axis, as shown in Fig. 2. Then, the section circle is further used as the primitive to extract the CWEs.In five-axis milling, the grazing curve is the set of points on the cutter surface that remain on the envelope surface. As shown in Fig. 3, it divides the cutter’s surface into two parts. The one in orange facing the cutting direction is defined as the front-facing part, which can be actually involved in machining. The other one in light gray is defined as the back-facing part, which is impossible to engage with the in-process workpiece.For the section circle on the cutter surface, it is splitted into two partial arcs by the grazing points. The solid one shown in Fig. 3 is named as the feasible contact arc (FCA) since it locates at the tool front-facing part. Given that the CWEs are the subsets of the tool front-facing part rather than the back-facing part, determination of the FCA helps us to obtain CWEs in a more efficient way.As illustrated in Fig. 4, the tool motion is usually represented by two guiding curvesP(t)andQ(t)[30]. To describe the instantaneous cutter position and orientation during NC machining, the moving tool coordinate frameot−xtytztis set up atP(t). Its axes are determined as follows(1)xt=yt×A(t)‖yt×A(t)‖yt=A(t)×P′(t)‖A(t)×P′(t)‖zt=A(t),whereA(t)represents the tool axis orientation at timetwithA(t)=Q(t)−P(t)‖Q(t)−P(t)‖.When the cutter moves with respect to timet, the point on the cutter surface can be expressed as(2)p(θ,z,t)=o(z,t)+r(z)ω(θ),(θ,z)∈[0,2π)×[0,H],witho(z,t)=P(t)+zA(t),ω(θ)=sinθxt+cosθyt.According to Ref.  [31], we have the expression of the intersection point between the normal vector of pointpand tool axis(3)q(z,t)=P(t)+l(z)A(t),withl(z)=r(z)r′(z)+z.Then, the unit normal vector at the pointpis(4)np(θ,z,t)=q(z,t)−p(θ,z,t)‖q(z,t)−p(θ,z,t)‖.The moving speed of the pointqon the tool axis is determined by the equation(5)vq(z,t)=P′(t)+l(z)A′(t).According to the envelope condition for the surface of revolution proposed by Gong et al.  [31], the grazing point should meet the following equation(6)vq(z,t)⋅np(θ,z,t)=0.By substituting Eqs. (4) and (5) into Eq. (6), we have(7)Asinθ+Bcosθ=C,A=−r(z)((P′(t)+l(z)A′(t))⋅xt)withB=−r(z)((P′(t)+l(z)A′(t))⋅yt)C=−r(z)r′(z)P′(t)⋅A(t).Eq. (7) can be written in the following form(8)A2+B2sin(θ+β)=C,withβ=atan2(B,A).If|C/A2+B2|≤1,θcan be resolved from Eq. (8) as follows:(9){θ1=sin−1(CA2+B2)−βθ2=π−sin−1(CA2+B2)−β.Substitutingθ1,θ2and a given heightzback into Eq. (2), we can get closed-form solutions of two grazing points on the corresponding section circle.Based on the fact that the FCA locates at the front along the moving direction, each pointpon the FCA should satisfy the following condition:(10)vq(z,t)⋅np(θ,z,t)≤0.Substituting Eqs. (4) and (5) into Eq. (10) yields(11)Asinθ+Bcosθ≤C.IfC≥A2+B2,θalways satisfies Eq. (10), i.e. FCA is the whole section circle. IfC<−A2+B2, Eq. (10) has no feasible solution, i.e. the corresponding section circle is impossible to engage with the in-process workpiece. If|C/A2+B2|≤1, according to Eqs. (2) and (9), the FCA of the cutter at any given axis heightz0and timet0, shown in Fig. 5, can be expressed as(12)F(θ,z0,t0)=o(z0,t0)+r(z0)ω(θ),θ1≤θ≤θ2,whereθ1andθ2are determined by Eq. (9).As shown in Fig. 6, the arcs in red denote the engagement arcs, whose end points can be obtained by intersecting the FCA with workpiece surfaces and determining the inclusion relation between the grazing points and the workpiece volume. To draw the CWE map, the entry/exit angles with respect to each engagement arc should be extracted. Note that there may be more than one engagement arc on each FCA, i.e. there may exist more than one pair of entry/exit angles at each axis height. For the convenience of study, a vectorVanglesis built to store the entry/exit angles of engagement arcs, which is then used to create the CWE map. Usually, the conventional methods  [10,23,24] to extract CWEs in five-axis milling need to update the workpiece at every CL, which costs quite high memory and computational time. In this paper, as the FCA is used as the primitive to extract engagement arcs, there is no need to update workpiece during the material removal process unless the cutter moves to the next tool path, which saves a lot of computational memory and time. Detailed descriptions of the key steps are as follows.To extract CWEs, we first intersect the FCA with workpiece surfaces to obtain the part of boundary points of engagement arcs. As the workpiece is usually comprised of polygons, quadric surfaces and freeform surfaces, this section focuses on the intersection problem of arcs with these three types of surface. It is worth noting that the intersection of the arc with polygon or quadric surface can be analytically computed.In geometry, a polygon is a plane bounded by a finite sequence of line segments. The plane can be defined as:(13)(X−P0)⋅n=0,whereP0is an arbitrary point on the plane,nis a normal vector of the plane.Substituting Eq. (12) into Eq. (13) yields(14)(F(θ)−P0)⋅n=0,θ1≤θ≤θ2.Similar to the solving method of Eq. (6), we can analytically obtain at most two intersection points. An even–odd rule algorithm is adopted to determine whether the intersection point is within the boundaries of the polygon  [32]. If any intersection point lies inside the polygon, add the corresponding circumferential angleθintoVangles.The general implicit form for a quadric surface can be compactly represented as(15)XTAX+BTX+c=0,whereAis a 3×3 nonzero symmetric matrix,Bis a 3×1 vector, andcis a scalar.Substituting Eq. (12) into Eq. (15) yields(16)F(θ)TAF(θ)+BTF(θ)+c=0,θ1≤θ≤θ2.Sett=cosθ∈[−1,1], Eq. (16) can be transformed to a quartic equation with respect tot, which can be analytically solved  [33]. There are at most four solutions ofθ, which are then added intoVangles.Freeform surface is widely used in CAD and other computer graphics software to describe the skin of a 3D geometric element. It is commonly described by the non-uniform rational B-spline (NURBS) mathematics which offers great flexibility and precision for handling both analytic and modeled shapes. A NURBS surface is formulated as a bivariate vector-valued piecewise rational function of the form(17)S(u,v)=∑i=0n∑j=0mBi,pn(u)Bj,qm(v)ωijPij∑i=0n∑j=0mBi,pn(u)Bj,qm(v)ωij0≤u,v≤1,where{Pij}denote a bidirectional control set,{ωij}are the weights,{Bi,pn(u)}and{Bj,qm(u)}are the non-rational B-spline basis functions.Then, the intersection of the arc with a NURBS surface can be computed by simultaneously solving Eqs. (12) and (17) using Newton iteration  [32]. To improve the computational efficiency, a hierarchy of axis-aligned bounding boxes (AABB) is used which allows for quick rejection and thus can help avoid many expensive intersection computations  [34]. If any intersection point is obtained, add the corresponding circumferential angleθintoVangles.Though the intersection points between the FCA and the workpiece surfaces separate the FCA into multiple parts, it is still difficult to determine which part of the FCA engages with the workpiece. As illustrated in Fig. 7, cases (a) and (b) have the identical intersection points but different engagement arcs. The only difference between the FCAs in cases (a) and (b) is the position relation of their endpoints relative to the workpiece volume. The endpointsg1andg2locate outside the workpiece in case (a) while inside in case (b). Hence, to extract the engagement arcs, it is necessary to determine the inclusion relation between the endpoints of the FCA and the workpiece volume.For an arbitrary endpointg, a signed Euclidean distance field  [35]dWk(g), which defines the minimum distance fromgto the boundary of workpieceWk, is calculated to determine whetherglies insideWk. It can be represented as follows(18)dWk(g)={inf∀q∈∂Wk‖g−q‖2,g∈Wk−inf∀q∈∂Wk‖g−q‖2,g∉Wk,where‖⋯‖2is the Euclidean norm,∂Wkdenotes the boundary ofWk. To improve the computational efficiency, an octree bounding volume hierarchy is used to obtain spatial localization of geometric operations  [36]. If the endpointglies inside the workpieceWk, add the corresponding circumferential angleθintoVangles.The CWE map gives the entry and exit immersion angle pairs of the cutting edges with the workpiece as a function of distance from the tool tip. As all the position angles of endpoints of the engagement arcs at each axis height have been obtained, the next step is to extract all the pairs of the entry/exit angles. From Fig. 6, it is noted that the entry/exit angles occur in pairs in ascending order. Since the vectorVanglesobtained above is not in order, firstly, we sort it from small to large. Then the entry/exit angles can be obtained by taking elements out ofVanglessequentially in pairs. Plotting these angles corresponding to each axis height in the two-dimensional space and connecting these angles using linear interpolation, the CWE map is generated as shown in Fig. 8.Although the CWE map is obtained discretely along the tool axis, the boundary of CWEs at each discrete location can be accurately determined using the ASIM method. Hence, when the user-specified resolution of axial dispersion is set as the same with that of the cutting force model, the entry/exit angles used to judge whether the cutting edge is engaged with the workpiece can be calculated without loss of precision.In order to extract the CWEs at every CL, the conventional methods need to successively subtract the cutter swept volume (SV) from the in-process workpiece geometry, which is another heavy computational burden. Fortunately, the proposed method can directly obtain the CWEs without the subtraction operation in one tool path because of the use of the FCA. While for the next tool path, in order to let the FCA intersect with the actual workpiece surface rather than the one has already been removed, the workpiece needs to be updated at the ending of the current tool path.The SV is defined as the totality of all points that belong to the trace of a cutter entity moving along an arbitrary path. It can be modeled as the volume generated by an envelope surface, an initial cutter portion and a final cutter portion along the cutter configurations  [37]. It should be pointed out that the tool path has been properly pre-segmented by using the methods in Refs.  [38,39] for checking and avoiding the self-intersection of each resulting SV.According to Eq. (9), note thatθis a function of the parameterszandt. Then, by substituting Eq. (9) into Eq. (2), the parametric expression of the envelope surface is obtained as follows:(19)X(z,t)=p(θ(z,t),z,t)=o(z,t)+r(z)ω(θ(z,t)).By stitching the envelope surface with the ingress surface at starting CL and the egress surface at ending CL, the SV is formed as follows:(20)ESV=E−(z,t)∪E0(z,t)∪E+(z,t),whereE−(z,t)denotes the ingress surface withvq⋅np<0;E0(z,t)denotes the envelope surface withvq⋅np=0;E+(z,t)denotes the egress surface withvq⋅np>0.After the current tool path ends, the workpiece needs to be updated for the CWE calculation of the next tool path. The updated workpiece,Wk+1, is obtained through performing Boolean subtraction of the SV from the workpieceWk, as shown in Fig. 9.The whole algorithm of extracting CWE maps in five-axis milling is summarized as follows.

@&#CONCLUSIONS@&#
