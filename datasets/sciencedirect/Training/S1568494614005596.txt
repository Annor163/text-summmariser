@&#MAIN-TITLE@&#
Optimal fuzzy controller parameters using PSO for speed control of Quasi-Z Source DC/DC converter fed drive

@&#HIGHLIGHTS@&#
The use of FPSO can reduce the overshoot and improves the performance of the drive.qZSC yield reduced transient response, reduced switching stresses and switching losses.FPSO leads to faster response with reduced overshoot, a short settling time.It includes reduced steady state error and reduced Total Harmonic Distortion.

@&#KEYPHRASES@&#
Fuzzy logic controller (FLC),Z-Source converter (ZSC),Quasi-Z Source converter (qZSC),Particle Swarm Optimization (PSO),Integral time absolute error (ITAE),Direct current (DC),

@&#ABSTRACT@&#
The conventional controller suffers from uncertain parameters and non-linear qualities of Quasi-Z Source converter. However they are computationally inefficient extending to optimize the fuzzy controller parameters, since they exhaustively search the optimal values to optimize the objective functions. To overcome this drawback, a PSO based fuzzy controller parameter optimization is presented in this paper. The PSO algorithm is used to find the optimal fuzzy parameters for minimizing the objective functions. The feasibility of the proposed PSO technique has been simulated and tested. The results are bench marked with conventional fuzzy controller and genetic algorithm for two types of DC/DC converters namely double input Z-Source converter and Quasi-Z Source converter. The results of both the DC/DC converters for several existing methods illustrate the effectiveness and robustness of the proposed algorithm.

@&#INTRODUCTION@&#
In general the DC motor drives are good choice for high performance motion control systems requiring four-quadrant operation that includes field weakening, minimum torque ripple, rapid speed recovery under impact load torque and in addition to fast dynamic torque and speed responses. So far PI controller is most widely used controller for DC drives [1]. Over these years, many controlling techniques such as P, PI and PID controllers have been developed. One of the most popular controllers used in industrial processes is the PID controller [2]. The advantage of this controller is its simplicity to understand and to implement [3]. The main drawback of using PID controller is the effect acquired as a result of disturbances and environmental conditions on the structure of the system [4] that adds complexity to the controller design. Mainly adaptive PI controllers avoid time consuming manual tuning by providing optimal PI controller settings automatically as the system dynamics or the operating points change [5]. There are various methods for tuning of PI controllers namely Trial and error, Continuous cycling method (Ziegler Nichols method), Process Reaction Curve methods (Ziegler–Nichols and Cohen–Coon methods), Ziegler–Nichols method (both types of responses) and Cohen–Coon method (self-regulating response only). The above stated methods lead to time consumption if a large number of trials are required or if the process dynamics are slow. Again unstable operation or hazardous situation may result if any external disturbances or a change in the process occurs during tuning of the controller.Fuzzy logic, the logic of approximate reasoning, continues to grow in importance, as it provides an inexpensive solution for controlling ill-known complex systems. Fuzzy controllers have received adequate attention in motion control systems as they possess non-linear characteristics and a precise model is most often unknown. Fuzzy controller is already applied to phased controlled converter fed DC drive, resonant converter fed DC drive and linear servo drive [6] and induction motor drive [7,8]. Generally the fuzzy logic employed in control system design where human expert knowledge rather than precise mathematical modeling of a process or plant is used to model or implements the required controller. Uncertainty and ambiguity are evident in many engineering problems. Fuzzy logic controller therefore provides a formal method of translating imprecise human knowledge into control strategies. Optimal design of FLC knowledge base is central to performance of FLC. In absence of such knowledge, a common approach is to optimize these FLC parameters through a process of trial and error with respect to performance of the system [9–11].On the other hand the tuning of fuzzy controller is a heuristic work. To eliminate such problems, the evolutionary techniques have been applied in tuning of FLC parameters. Emerging Computational intelligence based techniques such as, genetic algorithm (GA) and Particle Swarm Optimization (PSO) can be the solutions to above stated problems. GA [35] is search technique used in computer science and engineering to find the approximate solutions to optimization problems [12–14]. GA incorporates a particular class of evolutionary algorithms that uses techniques inspired by evolutionary biology such as inheritance, mutation, natural selection and recombination (crossover) [15,16].The performance of GF algorithm based controller for Quasi-resonant converter for drive applications presented by Ranjani and Murugesan reduces the transient response of speed, switching stresses and losses but whereas the converter performs efficiently for narrow bandwidth ranges [62]. Even it can rapidly locate good solutions for difficult search spaces, it has some drawbacks associated with it: unless the fitness function is defined properly, GA has a tendency to converge toward local optima rather than global optimum of the problem. In addition operating on dynamic data sets is difficult for specific optimization problems. In this paper, Z-Source and Quasi-Z-Source converters are considered for wide range of operating frequencies also the PSO outperforms the GAs performance by finding better solutions for same amount of computation time. The Takagi–Sugeno type fuzzy-genetic controller for boost PFC converter described by Dogan et al. regulates output DC voltage and a hysteresis current controller that force the input current to track a sinusoidal reference. The steady state and transient performance are presented in simulation results [63]. In this paper the performance of the DC drive for various ranges of load torque values fed by GA and PSO optimized fuzzy controller are analyzed by considering the simulation and experimental results.PSO is another evolutionary computation technique developed by Eberhart and Kennedy [23,26] in 1995, which was inspired by the social behavior of bird flocking and fish schooling. PSO has its roots in artificial life and social psychology, as well as in engineering and computer science. It utilizes a “population” of particles that fly through the problem hyperspace with the given velocities. At each iteration, the velocities of the individual particles are stochastically adjusted according to the historical best position for the particle itself and the neighborhood best position. Both the particle best and the neighborhood best are derived according to a user defined fitness function [54–56]. The movement of each particle naturally evolves to an optimal or near-optimal solution. Clerk and Kennedy presented the particle swarm explosion, stability and convergence in a multidimensional complex space [24]. Here the word “Swarm” comes from the irregular movements of the particles in the problem space, now more similar to a swarm of mosquitoes rather than a flock of birds or a school of fish.Extensively the Particle Swarm Optimization (PSO) has been applied to optimization of FLC [19–23]. The Particle Swarm Optimization for fuzzy membership functions was applied by Esmin et al. [21]. Also Ghoshal [18] presented the optimization of PID gains by Particle Swarm Optimizations in fuzzy-based automatic generation control. A particle swarm-optimized fuzzy-neural network for voice-controlled robot systems was discussed by Chatterjee et al. [19]. The comparison between PSO and GA for parameter optimization of PID controller by Ou and Lin [17] infers that PSO outperforms GA by providing global optimal solution. Del Valle et al. [65] applied the Particle Swarm Optimization with its basic concepts, variants in power systems. It provides the technical details such as its type, practical formulation and efficient fitness function required for application of PSO in power system to effectively solve large scale nonlinear optimization problems [65]. This paper invokes the basic concepts and technical details for application of PSO for Fuzzy PI tuning of DC–DC converter fed DC drive speed control. Also it is evident that heuristics based swarm intelligence serves as an efficient alternative for analytical methods which suffer from slow convergence and the curse of dimensionality.A PSO-Lyapunov hybrid stable adaptive fuzzy tracking control approach for vision-based robot navigation was developed by Das Sharma (2012). He also discussed about a random spatial Ibest PSO-based hybrid strategy for designing adaptive fuzzy controllers for a class of nonlinear systems.In recent years PSO has gained much popularity in different kinds of applications because of its simplicity, easy implementation and reliable convergence [17,18]. A robust control method for solving continuous non-linear optimization problems linear for uncertain chaotic systems via an optimal type-2 fuzzy proportional integral derivative controller was found by Khooban (2013). Parallel Particle Swarm Optimization with parameters adaptation using fuzzy logic explained by Fevrier Vaaldez (2013) is a computational intelligence-based technique that is not largely affected by the size and nonlinearity of the problem and can converge to the optimal solution in many problems where most analytical methods fail to converge. Hence it can be effectively applied to different optimization problems in power electronics. An optimal fuzzy logic guidance law using Particle Swarm Optimization presented by Labeed Hassan (2013) has some advantages over other similar optimization techniques such as GA. In PSO, every particle remembers its own previous best values as well as neighborhood best and therefore PSO has more effective memory capability than that of GA. In addition PSO is more efficient in maintaining the diversity of the swarm [57–61], since all the particles use the information related to the most successful particle in order to improve them, whereas in GA, the worse solutions are discarded and only the good ones are saved.Sedaghati and Babei [64] presented the different states of operation of double input Z-Source DC–DC converters, the input DC voltage can be boosted and deliver the power to load individually or the input DC sources may be combination of new energy sources. Only the steady state operations of converter are analyzed through simulation results [64]. This paper focuses on the closed loop performance of the double input Z-Source DC–DC converters in drive application with the various combinations of intelligent controllers and the performance are evaluated through practical and simulation results.The above literatures do not explain the simulink and practical models of optimal fuzzy controller for Z-Source DC/DC converter (ZSC) fed DC drive and Quasi Z-Source DC/DC converter (QZSC) fed DC drive. Hence in this present work a new simulink model of Particle Swarm Optimization based fuzzy controller (FPSO) incorporated in performance evaluation of DC drive for various loaded conditions is developed. In addition new simulink models and practical models are developed for conventional fuzzy controller (FLC) and genetic algorithm based fuzzy controller (GA-FLC) for the Z-Source DC/DC converter fed DC drive and Quasi Z-Source DC/DC converter fed DC drive. The results are to be compared with that of the proposed FPSO controller fed drive.This paper provides a review of the PSO technique, as well as its applications to converter fed drives with controller optimization problems. A brief introduction has been provided in this section on the existing optimization techniques that have been applied to tune the controller problems. The rest of this paper is arranged as follows. In Section 2, the basic problem formulations are explained along with the original formulation of the algorithm in the real number space. The details regarding modeling of converter are described in Section 3. The most common variants of the PSO algorithm with fuzzy PSO (FPSO) are described in Section 4. Section 5 provides an extensive survey on the implementation of FPSO in converter fed drives both in simulation type and experimental type. Finally, the concluding remarks appear in Section 6.The present paper involves tuning the parameters of the speed controllers of DC drive in order to obtain reduced steady state error and minimal overshoot which is seriously desired in high performance applications. Since, the plant transfer function varies with operating conditions, the controller parameters should change accordingly in order to maintain certain desired performance. The system employs two controllers: one in inner loop current control and other in the outer speed control. The outer speed control employs a Fuzzy PI type and the parameters of which are expected to vary with the change in operating conditions, particularly while loading.The objective is to find the parameters of the Fuzzy PI controller in order to minimize the performance criteria. Thus the key performance indexes of transient response are utilized to characterize the performance of the Fuzzy PI control system and the objective function is stated as(1)Minimize=F=∫0∞t|e(t)|dt+OS+ts+trIn the above equation, the first term is the integral of time multiplied by ITAE, second term is overshoot, third term is settling time and last term is rise time.Fitness function is the reciprocal of performance indices. In this paper we have taken the discrete form of ITAE. ITAE is treated as performance indices and fitness function denoted by J and can be described as:(2)J=1(100+∑K=1N|ωref−ωm|)The optimal fuzzy controller can be obtained by considering genetic algorithm and Particle Swarm Optimization. In both the cases the populations are initialized with its limits. The parameters such as speed error, change in speed error and control outputs required for optimization of input scaling factors of fuzzy PI controller are initialized. Calculate the fitness function (reciprocal of objective function). In case of GA the process of selection, crossover and mutation of individual are considered for production of new individual. In case of PSO the position and velocity of each particle are updated continuously and the selected best fittest individual will be considered. In both GA and PSO the newly generated parameters are used to determine the performance and fitness value assigned. Also a negative value is assigned to the fitness function if any problem persists. The process continues till the maximum iteration meets. Finally the optimal solution is obtained with the maximum fitness.The methodologies followed in executing the work are based on the theoretical calculations using the analytical equations, for a particular switching frequency, value of capacitance and inductances are calculated. These theoretical values are used in simulation tool for validating the design parameters. Assumptions and constraints are defined and followed. Once the applied values give result matching the theoretical ones, design verification is done using simulation tool. Design validation is done using MATLAB Simulink software, after which experimental design is executed. A prototype of the proposed optimal fuzzy controller for Quasi Z-Source converter fed drive was built and tested to confirm the feasibility of the hardware implementation, based on the simulation results. The experimental setup is composed of PC, digital controller (PIC16F877), IGBT driver circuit, full bridge inverter circuit, and DC power supply, MOSFET with heat sink, inductor and capacitors that forms the ZSC and QZSC fed DC drive with 1.1kW, 220V, and 3000rpm. The experimental results are compared with the simulation results.The DC motor powered from DC-to-DC converter has been modeled [45–47] with the following equations.Mode 1 is when the MOSFET switch is ON andMode 2 is when the MOSFET switch is OFF.Mode 1(3)Vdc=RaIa+LadIadt+Kω(4)KIa=Jdωdt+Bω+TLMode 2(5)0=RaIa+LadIadt+Kω(6)KIa=Jdωdt+Bω+TLwhere Vdc is converter output voltage, V, Ra is armature resistance, Ω, La is armature inductance, H, Ia is armature current, A, Eb=Kω=back emf, V, J is moment of inertia, kg/m, B is damping co-efficient, Nm/rad/s, and TL is load torque, Nm.Z-Source converters are modern group of power electronic converters which can overcome problems with traditional converters [36–41]. The Z-Source inverter is a novel topology [42] that overcomes the conceptual and theoretical barriers and limitations of the traditional voltage-source converter and current-source converter. The concept of Z-Source was used in direct AC–AC power conversion [43]. Similarly, the concept of Z-Source also was extended to DC–DC power conversion [44].The schematic circuit diagram of the proposed DC drive fed with double-input Z-Source DC–DC converter with two different voltage sources is shown in Fig. 1. It consists of two different input sources, Vdc1 and Vdc2, and four diodes, D1–D4, applied to provide current path in different states. In this paper, permanent connection of input DC sources is considered, so D1 and D2 can be replaced with active switches if it is required to connect and disconnect each of sources to input side of converter frequently. Energy receiver, converter and transmitter sections are situated in the middle side of the converter. This section is a two-port network that consists of a split-inductor L1 and L2 and capacitors C1 and C2 connected in x-shape which is named “Z-network”. An active switch, S, is situated in output port of Z-network to control input and output power of converter. The final section of converter is a LC filter beside the load in order to reject output signal ripple.Compared to the conventional DC–DC converters, Quasi Z-Source DC–DC converters have the following advantages to offer:•Lower inrush current,Lower harmonic injection,Larger range of output DC voltageImproved reliabilityThe Z-network gives this topology as its unique features•Capable of operating in either voltage- or current-fed modeCapable of buck or boost operation depending on whether it is voltage- or current-fed.PWM duty ratio control can be employed just like in conventional DC–DC converters to control a Quasi-Z-Source DC–DC converter.The Z-network is symmetrical, i.e. the two inductors are identical and the same is true for the two capacitors.Fig. 2shows a voltage fed DC–DC converter [48–53]. In a voltage-fed mode of operation requiring unidirectional power flow capability, a diode is connected in series with the voltage source while a controlled switch is connected in parallel with the Z-network output terminals. Fig. 3shows an alternative equivalent circuit of a voltage-fed Quasi Z-Source DC–DC converter.Converter operation can be divided into two distinct intervals. During the first interval, the diode conducts whereas the controlled switch is turned off. Let the duty ratio of the controlled switch be δ. Fig. 4presents the equivalent circuit of a voltage-fed Quasi Z-Source DC–DC converter during the interval when the diode conducts, i.e. 0<t<(1−δ)TSW. Fig. 5presents the equivalent circuit of a voltage-fed Quasi Z-Source DC–DC converter during the interval when the switch conducts, i.e. (1−δ)TSW<t<TSW. Similarly, Figs. 6 and 7show the inductors and capacitor steady state and dynamic waveforms, respectively.During this interval i.e. 0<t<(1−δ)TSW the DC source charges the Z-network capacitors. At the same time, the inductors transfer their stored energy to the load. The relevant voltage and current equations are obtained as:VCz0=Vin−VLz1That yieldsLz1diLz1dt=Vin−VCz0VCz1=−VLz2That yieldsLz2−diLz2dt=−VCz1iin=iLz1isw1=iLz1+iCz1iLz2=iCz1That yields(7)isw1=iLz1+iLz2Cz1dVCz2dt=iLz2isw1=iLz2+i0+iCz0iLz1+iLz2=iLz2+i0+iCz0iCz0=iLz1−i0Cz0dVCz0dt=iLz1−VCz0RSimilarly, during the interval (1−δ)TSW<t<TSWVin=VLz1−VCz1VLz1=Vin+VCz1That yieldsLz1diLz1dt=Vin+VCz1VLz2=V0=VCz0That yieldsLz2diLz2dt=V0=VCz0iCz1=−iLz1isw2=iLz1+iLz2That yields(8)isw2=iLz1−iCz0−i0iCz0=−iLz2−i0isw1=0Averaging Eqs. (7) and (8)(9)Lz1diLz1dt=Vin(1−δ)−VCz0(1−δ)+Vinδ+VCz1δLz1diLz1dt=Vin−VCz0(1−δ)+VCz1δLz2diLz2dt=VCz0δ+VCz1(1−δ)(10)Cz1dVCz1dt=iLz2(1−δ)−iLz1δCz0dVCz0dt=iLz2(1−δ)−iLz1δ−VCz0R(11)iin=iLz1i0i=iLf(1−δ)+(iLz1+iLz2)δisw1=(iLz1+iLz2)(1−δ)isw2=(iLz1+iLz2)δOn perturbing and obtain the DC terms(12)VCz0=Vin1−D1−2DAn expression for duty ratio is obtained as follows(13)D=VCz0−Vin2VCz0−Vin(14)P0=VCz0I0(15)Pin=VinIin=VinILz1With reference to Eq. (1), Z-network components are sized as follows:(16)Lz1=(1−δ)Tsw(VCz1−Vin)ΔiLz1,pk-pkLz2=(1−δ)Tsw(VCz1)ΔiLz2,pk-pkCz1=(1−δ)Tsw(ILz2)ΔVCz1,pk-pkCz0=(1−δ)Tsw(ILz1−I0)ΔVCz0,pk-pkAlternatively with reference to Eq. (2), Z-network components are sized as follows:(17)Lz1=δTsw(VCz1+Vin)ΔiLz1,pk-pkLz2=δTswVCz0ΔiLz2,pk-pkCz1=δTswILz1ΔVCz2,pk-pkCz0=δTsw(ILz2+I0)ΔVCz0,pk-pkSeveral optimization techniques using swarming principle have been adopted to solve a variety of engineering problems in past decade. Particle Swarm Optimization (PSO) is such swarming techniques which can be used for PI tuning. Swarming strategies in bird flocking and fish schooling are used in PSO introduced by Eberhart and Kennedy. PSO is applied in PID tuning and its results are compared to the results of some classical tuning methods to find out which is better [19–22]. Robustness analysis is tabulated for our DC motor model controlled with optimal value of PI controller obtained using PSO algorithm.PSO optimizes an objective function by undertaking a population-based search. The population consists of potential solutions, named particles, which are a metaphor of birds in flocks. These particles are randomly initialized and freely fly across the multi-dimensional search space. During flight, each particle updates its own velocity and position based on its own experience and that of the entire population. The updating policy drives the particle swarm to move toward the region with higher objective function value and eventually all particles will gather around the point that possess highest objective value.•PSO is easy to implement and only few parameters have to be adjusted.Unlike the GA, PSO has no evolution operators such as crossover and mutation.In GAs, chromosomes share information so that the whole population moves like one group, but in PSO, only global best particle (gbest) gives out information to the others. It is more robust than GAs.PSO can be more efficient than GAs, that is, PSO often finds the solution with fewer objective function evaluations than that required by GAs.Unlike GAs and other heuristic algorithms, PSO has the flexibility to control the balance between global and local exploration of the search space.Fuzzy logic control [31–34] uses human like linguistic terms for input and output variables and associates them by rules that are in the form of IF-THEN. Thus, only heuristic knowledge of system behavior is needed instead of exact mathematical model that contains complex computations. Since these knowledge depends on human expertise, in case if there is lack of expert or expert with insufficient experience, determining controller parameters becomes a difficult task and generally it takes a long time to reach an optimal solution [23–26].Particle Swarm Optimization (PSO) is a search technique used in finding exact or best possible solutions to optimization and search problems. As in many different applications, PSO is a powerful tool to determine the parameters of fuzzy logic control systems [27–30].In this paper, parameters of fuzzy logic controller used for drive speed regulation, are determined by PSO. These parameters are input and output scaling factors, input membership function parameters and coefficients of linear output functions. PSO iterations are performed by the MATLAB commands in an M-File. The MATLAB commands in M-File are as shown in Fig. 8.This paper presents a quick solution to the problems using the PSO algorithm. For example, if there are ‘m’ levels, the ith particle is represented as follows:Xi=(Xi1,Xi2,Xi3,…,Xim)The process flow is shown in Fig. 9as the flowchart for FPSO. The implementation consists of the following steps:Step 1: Initialization of the swarm: For a population size p, the particles are randomly generated between the minimum and the maximum limits of the values.Step 2: Evaluation of the objective function: The objective values of the particles are evaluated using the objective functions.Step 3: Initialization of pbest and gbest: The objective values obtained above for the initial particles of the swarm are set as the initial pbest values of the particles. The best value among all the pbest values is identified as gbest.Step 4: Evaluation of velocity: The new velocity V for each particle i is computed as(18)Vi,nk+1=WVi,nk+C1rand1(pbesti,n−Xi,nk)+C2rand2(gbestn−Xi,nk)where i=1, 2, …, m; n=1, 2, …., N.Step 5: Update the swarm: The particle position is up-dated using Eq. (19). The values of the objective function are calculated for the updated positions of the particles. If the new value is better than the previous pbest, the new value is set to pbest. Similarly, gbest value is also updated as the best gbest.(19)Xi,nk+1=Xi,nk+Vi,nk+1;ifXmin,i,n≤Xik+1,Xmax,i,nXi,nk+1=Xmin,i,n;ifXi,nk+1<Xmin,i,nXi,nk+1=Xmax,i,n;ifXi,nk+1<Xmax,i,nStep 6: Stopping criteria: If the stopping criteria are met, the positions of particles represented by gbest are the optimal threshold values. Otherwise, the procedure is repeated from step 4.FPSO is a fuzzy system augmented by a learning process based on a PSO. In FPSO, PSO is operated in order to search an appropriate knowledge base (KB) of a fuzzy system for a particular problem and to make sure those parameter values that are optimal with respect to the design criteria. The KB parameters constitute the optimization space, which is transformed into suitable position on which the search process operates. The KB is composed by membership functions and fuzzy rule base. For tuning of membership function the following equations are:(20)Cx=Cx+ki;Wx=Wx+jiwhere kiand jiare adjustment coefficient, Cx, and Wx are set of center and width of each fuzzy membership function. It means kimakes each center of membership function move to the right or left and jimakes them wider or sharper. After that, the adjustment coefficients are encoded to form a complete particle.The constants represent the weights of the stochastic acceleration terms that pull each particle toward the pbest and gbest positions. Here, the acceleration constants C1 and C2 were often set to be 2.0 according to experiences. As originally developed, w often decreases linearly from about 0.9 to 0.4 during a run. In general, the inertia weight is set according to the following equation:(21)w=wmax−(wmax−wmin)itermaxiterwhere itermax is the maximum number of iterations and iter is the current number of iterations.

@&#CONCLUSIONS@&#
