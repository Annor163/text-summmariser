@&#MAIN-TITLE@&#
Total completion time minimization on multiple machines subject to machine availability and makespan constraints

@&#HIGHLIGHTS@&#
We study bi-criteria scheduling with limited machine availability.Our goal is to minimize ∑Cjsubject to the condition that Cmax  ≤ T.We show the problem, Pm(t)|m(t + Δ) ≥ m(t) − 1, r − a, prmt|∑Cj/Cmax  ≤ T, 0 ≤ Δ < ce: paraid = "para0005" > is in P.

@&#KEYPHRASES@&#
Scheduling,Parallel machine,Bi-criteria,Limited machine availability,Polynomial time algorithm,

@&#ABSTRACT@&#
This paper studies preemptive bi-criteria scheduling on m parallel machines with machine unavailable intervals. The goal is to minimize the total completion time subject to the constraint that the makespan is at most a constant T. We study the unavailability model such that the number of available machines cannot go down by 2 within any period of pmax  where pmax  is the maximum processing time among all jobs. We show that there is an optimal polynomial time algorithm.

@&#INTRODUCTION@&#
Multi-criteria scheduling and scheduling subject to machine availability constraints have been two very active areas in manufacturing and operations management research over the last couple of decades. A lot of applications for multi-criteria scheduling have been addressed in the books (Steuer, 1986; T’kindt and Billaut, 2002), surveys (Chen and Bulfin, 1993; Dileepan and Sen, 1988; Hoogeveen, 2005) and the references therein. On the other hand, applications for scheduling subject to machine availability have been addressed in many surveys (Diedrich, Jansen, Schwarz, and Trystram, 2009; Lee, Lei, and Pinedo, 1997; Ma, Chu, and Zuo, 2010; Saidy and Taghvi-Fard, 2008; Schmidt, 2000) and the references therein. In the real life, both models may co-exist in some scenarios. While manufacturers aim at optimizing multi-criteria simultaneously, resources may not be always available due to breakdown, preventive maintenance or processing unfinished jobs from a previous planning horizon. However, most research in these two areas has been conducted independently from one another. The only work that concerns both bi-criteria scheduling and scheduling with limited machine availability simultaneously is done by the authors in paper (Huo and Zhao, 2011). The paper (Huo and Zhao, 2011) considers preemptively scheduling the jobs on two machines to minimize the total completion time and makespan at the same time with one as primary criterion and the other as secondary criterion.In this paper, we continue our research on this complicated model trying to solve more tractable problems. We consider m, m ≥ 2, parallel machines with unavailability constraint. We study the unavailability model such that the number of available machines cannot go down by 2 within any period of pmax  where pmax  is the maximum processing time among all jobs. So, in this model, the number of available machines can decrease or increase at any time t; but there is a restriction on how the number of available machines decreases, i.e. the number of available machines can only go down by at most one machine unit, provided that it has not gone down by one machine unit during the interval [t − pmax , t]. This machine unavailabililty model is so far the maximally solvable model for total completion time minimization problem. It includes two special models that have been studied in literature: (1) The number of available machines can only increase. In this case, each machine has at most one unavailable period and this period starts at time zero. We say in this case that each machine has a release time; (2) Each machine may have multiple unavailable periods, but there is at most one machine unavailable at any time. In reality, the first machine unavailability model may occur due to the unfinished jobs in the previous scheduling horizon and the second machine model exists in many scenarios since the preventive maintenance or periodical repair is usually done on a rotation basis instead of maintaining or repairing several machines simultaneously.We focus on preemptive schedules. A job can be preempted by another job or interrupted by machine unavailable intervals and resumed later on any available machine. Our goal is to minimize the total completion time subject to the condition that the makespan is at most a constant T. The makespan and total completion time are two objectives of considerable interest. Minimizing makespan can ensure a good balance of the load among the machines and minimizing the total completion time can reduce the inventory holding costs. It is quite common that the manufacturers wish to minimize both objectives. The motivations for bi-criteria scheduling concerned with makespan and total completion have been addressed by Gupta, Ho, and Webster (2000), Leung and Young (1989), and survey papers about multi-criteria scheduling mentioned above.Formally speaking, there is a set J = {J1, J2, …, Jn} of n jobs that need to be scheduled on m machines. Each job Jjhas a processing time pj. Let pmax  = max (p1, p2, …, pn). Without loss of generality, the processing times of jobs are assumed to be integer. There are m machines in total and each may have unavailable intervals. Thus the number of available machines changes over time and we use m(t) to represent the number of available machines at time t. We assume that for all time t ≥ 0 and all Δ < ce: paraid = "para0010" > we have m(t + Δ) ≥ m(t) − 1. Let S be a feasible schedule of these n jobs on the m machines, the completion time of job Jjin schedule S is denoted by Cj(S). If S is clear from the context, we will use Cjfor short. The makespan of S is Cmax (S) = max {Cj(S)}, and the total completion time of S is ∑Cj(S). We will useCmax*to denote the minimum makespan among all feasible schedules. The goal is to schedule the set of jobs on m parallel machines so as to minimize ∑Cisubject to the machine unavailability constraint and the condition that Cmax  ≤ T, whereT≥Cmax*. To denote our problem, we can extend the 3-field notation introduced by Graham, Lawler, Lenstra, and Rinnooy Kan (1979): Pm(t)∣m(t + Δ) ≥ m(t) − 1, r − a, prmt∣∑Cj/Cmax  ≤ T, where 0 ≤ Δ < pmax .

@&#CONCLUSIONS@&#
In this paper, we study the bi-criteria scheduling problem subject to the machine unavailability constraint: Pm(t)∣m(t + Δ) ≥ m(t) − 1, r − a, prmt∣∑Cj/Cmax  ≤ T for Δ < pmax . The number of machines can increase or decrease with the constraint that it cannot decrease by 2 within any period of pmax . This general unavailability model includes the special case that each machine has a release time after which the machine is always available; it also includes the special case where at any time there is at most one machine unavailable. We show that the problem is solvable in polynomial time by developing an optimal algorithm. Both the algorithm and the proofs are quite involved and subtle.