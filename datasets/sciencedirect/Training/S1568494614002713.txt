@&#MAIN-TITLE@&#
Intelligent complementary sliding-mode control with dead-zone parameter modification

@&#HIGHLIGHTS@&#
A recurrent neural fuzzy inference network can approximate an unknown system term.A dead-zone parameter modification can resolve the poblem of over-trained neural network.The proposed control schem can achieve high-precision tracking performance.

@&#KEYPHRASES@&#
Neural control,Sliding-mode control,Neural fuzzy inference network,Recurrent neural network,

@&#ABSTRACT@&#
This paper proposes an intelligent complementary sliding-mode control (ICSMC) system which is composed of a computed controller and a robust controller. The computed controller includes a neural dynamics estimator and the robust compensator is designed to prove a finite L2-gain property. The neural dynamics estimator uses a recurrent neural fuzzy inference network (RNFIN) to approximate the unknown system term in the sense of the Lyapunov function. In traditional neural network learning process, an over-trained neural network would force the parameters to drift and the system may become unstable eventually. To resolve this problem, a dead-zone parameter modification is proposed for the parameter tuning process to stop when tracking performance index is smaller than performance threshold. To investigate the capabilities of the proposed ICSMC approach, the ICSMC system is applied to a one-link robotic manipulator and a DC motor driver. The simulation and experimental results show that favorable control performance can be achieved in the sense of the L2-gain robust control approach by the proposed ICSMC scheme.

@&#INTRODUCTION@&#
Modeling inaccuracies can have strong adverse effects on control system. One of the most important approaches to dealing with model uncertainty is robust control. If all system uncertainties are bounded, a sliding-mode control (SMC) can be applied. This control method has been studied extensively for over 50 years due to its invariance property to system uncertainties on the sliding surface [1]. Meanwhile, many applications of the SMC system have been presented [2–6]. Since the system uncertainties unavoidably exist in the practical systems, a switching control term that consists of a sign function is required to maintain the sliding variable on the sliding surface. The gain of the switching control term is chosen based on the system uncertainty bound; however, a high gain will result the undesirable chattering phenomenon. A tradeoff between the chattering phenomenon and the control accuracy arises. The chattering problem is one of the most critical handicaps for applying the SMC system to real applications.To overcome the chattering phenomenon, a boundary layer technique is adopted by replacing the sign function with a saturation function in the switching control term. However, an indefinite steady state error would cause depending on the width of the boundary layer [7]. To deal with this problem, an adaptive sliding-mode control with uncertainty bound estimator is proposed to online estimate the bound of system uncertainties [8,9]. But, the uncertainty bound estimator cannot avoid growing unboundedly. On the other hand, some researchers proposed a dynamic sliding-mode control (DSMC) system [10,11]. Due to the integration method for obtaining the practical control input, the chattering phenomenon can be improved effectively. Recently, some researchers proposed a complementary sliding-mode control (CSMC) system [12,13] which not only alleviates the chattering phenomena but also possesses favorable control accuracy. The nominal dynamics of control plants is required in the DSMC and CSMC schemes. Since the nominal dynamics may be unknown or perturbed in real applications, the DSMC and CSMC systems cannot be obtained.To overcome this problem, many studies on neural fuzzy networks for controller development and for describing the system dynamics of unknown nonlinear systems have been published [14–17]. A main property of the neural networks regarding feedback control purpose is a universal function approximation property. It is known that the neural networks with a finite number of neurons can only estimate a function with a limited accuracy. Because of the existence of approximation errors, the learning laws could make the adjustable parameters of neural fuzzy networks drift and the closed-loop system might become unstable eventually. A common approach to solve this problem is to employ the projection modification [18,19]. However, the projection modification is only able to limit the drift of adjustable parameters in a given region. It implies that the goal of parameters learning cannot be achieved when the adjustable parameters are fixed after a period of learning [20]. Meanwhile, in the derivation of the adaptive law, the derivatives of the optimal adjustable parameters are assumed to be zeros. However, when the adjustable parameters are not fixed in a finite time, it is difficult to say that the derivatives of the optimal adjustable parameters are zero.Since the output of a dynamic nonlinear plant is a function of past output, past input or both, identification and control of this dynamic nonlinear plant is not a static control problem. Though the favorable control performance can be achieved using feedforward neural networks in [14–17], the usage of the long tapped delay input will result in a large network size. To deal with this problem, interest in using recurrent neural networks for processing dynamic nonlinear plants has been steadily growing [21–24]. Due to the recurrent neural networks have an internal feedback loop, they can capture the dynamic response and information storing ability. As a result, this paper proposes a recurrent neural fuzzy inference network (RNFIN) which is inherently a recurrent multilayered connectionist neural network for realizing the basic elements and functions of a dynamic fuzzy inference system.The dead-zone nonlinearity is common in mechanical connections, hydraulic servovalves, piezoelectric translators, and electric servomotors. The effects of the dead-zone nonlinearities cannot be neglected in controller design [25,26]. In this paper, an intelligent complementary sliding-mode control (ICSMC) system which is composed of a computed controller and a robust controller is proposed. A RNFIN is utilized to online approximate the unknown nonlinear term in the system dynamics. To avoid the parameters-drift problem, a dead-zone parameter modification is considered in which the parameter tuning process will be stop when tracking performance index is smaller than performance threshold. Thus, the parameter-drift problem in the traditional parameter learning algorithm can be reduced. Meanwhile, to show the effectiveness of the ICSMC system, a one-link robotic manipulator and a DC motor driver are given as the example studies. The simulation and experimental results verify that the proposed ICSMC system can achieve favorable control performance in the sense of the L2-gain robust control approach.For the applicability of the proposed controller design, a second-order nonlinear plant is expressed in the following form as(1)x¨=f(x,t)+g(x,t)u+d(t)wherex=[x,x˙]Tis the state vector, f(x, t) and g(x, t) are the system dynamics, d(t) is the external disturbance, and u is the control input. Without losing generality, it is assume g(x, t)≠0 for all x. The control objective is to find a control law so that the state trajectory x can track a state command xc closely. To achieve this control objective, a tracking error is defined as(2)e=x−xc.Rewriting (1), thee¨can be given as(3)e¨=z(x,t)+uwhere the nonlinear system termz(x,t)=−x¨c+(1−(1/g(x,t)))x¨+((f(x,t)+d(t))/g(x,t)). To design a CSMC system, a sliding surface is designed as [12,13](4)s=e˙+2λe+λ2∫0te(τ)dτwhere λ is a positive constant. We can obtain that(5)s˙=e¨+2λe˙+λ2e=z(x,t)+u+2λe˙+λ2eNext, a complementary sliding surface is designed as(6)sc=e˙−λ2∫0te(τ)dτA significant result concerning the relationship between s and sccan be obtained as [12,13](7)s˙c=s˙−λ(s+sc)In (7), it shows that the two sliding surfaces s and scsatisfied the reaching condition simultaneously. Thus, the control variablese˙, e and∫0te(τ)dτwill move toward the neighborhood of the intersection of the two sliding surfaces (s=sc=0) and will slide along it toward the origine˙=e=∫0te(τ)dτ=0in finite time. To guarantee the stability of the CSMC system, consider the candidate Lyapunov function in the following form as(8)V1(t)=12s2+12sc2.Differentiating (8) with respect to time and using (5) and (7) yields(9)V˙1(t)=ss˙+scs˙c=(s+sc)(s˙−λsc)=(s+sc)[z(x,t)+u+2λe˙+λ2e−λsc]Assuming that all the parameters in z(x, t) are known, an ideal CSMC system is given as(10)u*=−z(x,t)−λ(2e˙+λe+s)Imposing the control law u=u* into (9) yields(11)V˙1(t)=(s+sc)(−λs−λsc)=−λ(s+sc)2≤0.It implies that s→0 and sc→0 as t→∞ [27]. Then, the stability of the ideal CSMC system can be guaranteed. Since the nonlinear system term z(x, t) may be unknown or perturbed in practical applications, the ideal CSMC system cannot be precisely obtained.The proposed ICSMC system is shown in Fig. 1, where the controller output is defined as(12)uics=ucc+urc.The neural dynamic estimatorzˆnnis designed to approximate the nonlinear system term z(x, t). The computed controller uccis designed as−zˆnn−k(2e˙+ke+s)and the robust compensator urcis designed to eliminate the effect of the approximation error introduced by the neural dynamic estimator.Consider a RNFIN with two external inputs and a single output as shown in Fig. 2[28,29]. The jth fuzzy rule can be described as(13)Rulej:IFsisA1jandscisA2jandhjpreisG,THENznnisαjandh1isrjiand…andhnisrjnwherehjpreis the jth internal variable in the previous time, n is the total number of fuzzy rules, A and G are the fuzzy sets, α and r are the consequent parameters for inference output znnand h, respectively. The external inputs of the RNFIN are x1=s and x2=scin this study. In the RNFIN, two types of membership functions are used. For external input, the following Gaussian membership function is used as(14)ϕij=exp−(xi−cij)2(σij)2j=1,2,…,nwhere cijand σijare the center and the width of the Gaussian membership function of the jth term of the ith input variable, respectively. For internal variable, the following sigmoid membership function is used as(15)ςk=11+exp(−hkpre)k=1,2,...,nwhere hkdenotes the output signal of the kth recurrent neuron. The network output is obtained as(16)znn=∑j=1nαjΘjwhere αjis the consequent parameter for the inference output znnandΘj=ςj∏i=12ϕijis the firing weight of the jth fuzzy rule. The recurrent output is obtained as(17)hk=∑j=1nrjkΘj,k=1,2,…,nwhere rjkis the consequent parameter for inference output hk. Then, the output of the RNFIN can be represented in a vector form as(18)znn=αTΘ(c,σ,r)where α=[α1, ⋯, αn]T, Θ=[Θ1, ..., Θn]T, c=[c11, c21, ⋯, c1n, c2n]T, σ=[σ11, σ21, ..., σ1n, σ2n]T and r=[r11, r21, ⋯, rn1, ⋯, r1n, r2n, ⋯, rnn]T. By the universal function approximation property, an ideal RNFINznn*can be obtained as [28,29](19)z(x,t)=znn*+Δ=α*TΘ(c*,σ*,r*)+Δ=α*TΘ*+Δwhere Δ denotes the approximation error, α* and Θ* are the optimal parameter vectors of α and Θ, respectively, and c*, σ* and r* are the optimal parameter vectors of c, σ and r, respectively. In fact, the optimal parameter vectors that are needed for the best approximation cannot be determined. An estimated RNFINzˆnnis defined as(20)zˆnn=αˆTΘ(cˆ,σˆ,rˆ)=αˆTΘˆwhereαˆandΘˆare the estimated parameter vectors of α and Θ, respectively, andcˆ,σˆandrˆare the estimated parameter vectors of c, σ and r, respectively. Then, the estimation error is obtained as(21)z˜=z(x,t)−zˆnn=α˜TΘˆ+αˆTΘ˜+α˜TΘ˜+Δwhereα˜=α*−αˆandΘ˜=Θ*−Θˆ. Take the expansion ofΘ˜in a Taylor series to obtain [30](22)Θ˜=ATc˜+BTσ˜+CTr˜+hwherec˜=c*−cˆ,σ˜=σ*−σˆ,r˜=r*−rˆ, h is a vector of high order terms,A=∂Θ1∂c⋯∂Θn∂c|c=cˆ,B=∂Θ1∂σ⋯∂Θn∂σ|σ=σˆandC=∂Θ1∂r⋯∂Θn∂r|r=rˆ. Substituting (22) into (21) yields(23)z˜nn=α˜TΘˆ+αˆT(ATc˜+BTσ˜+CTr˜+h)+α˜T[AT(c*−cˆ)+BT(σ*−σˆ)+CT(r*−rˆ)+h]+Δ=α˜T(Θˆ−ATcˆ−BTσˆ−CTrˆ)+c˜TAαˆ+σ˜TBαˆ+r˜TCαˆ+εwhere the uncertain termε=α*Th+α˜T(ATc*+BTσ*+CTr*)+ΔandαˆTATc˜=c˜TAαˆ,αˆTBTσ˜=σ˜TBαˆandαˆTCTr˜=r˜TCαˆare used since they are scalars.Imposing the control law u=uicsinto (5), it is obtained that(24)s˙=z(x,t)−zˆnn−λ(2e˙+ke+s)+urc+2λe˙+λ2e=z˜−λs+urcwhere the estimation errorz˜isz(x,t)−zˆnn. Imposing (23) into (24) yields(25)s˙=α˜T(Θˆ−ATcˆ−BTσˆ−CTrˆ)+c˜TAαˆ+σ˜TBαˆ+r˜TCαˆ+ε−λs+urc.To guarantee the stability of the ICSMC system, consider a Lyapunov function candidate in the following form,(26)V2(t)=12s2+12sc2+α˜Tα˜2ηα+c˜Tc˜2ηc+σ˜Tσ˜2ησ+r˜Tr˜2ηrwhere ηα, ηc, ησand ηrare positive constants. Differentiating (26) with respect to time and using (25), it is obtained that(27)V˙2(t)=ss˙+scs˙c+α˜Tα˜˙ηα+c˜Tc˜˙ηc+σ˜Tσ˜˙ησ+r˜Tr˜˙ηr=(s+sc)α˜T(Θˆ−ATcˆ−BTσˆ−CTrˆ)+c˜TAαˆ+σ˜TBαˆ+r˜TCαˆ+ε−λ(s+sc)+urc+α˜Tα˜˙ηα+c˜Tc˜˙ηc+σ˜Tσ˜˙ησ+r˜Tr˜˙ηr=α˜T(s+sc)(Θˆ−ATcˆ−BTσˆ−CTrˆ)+α˜˙ηα+c˜T(s+sc)Aαˆ+c˜˙ηc+σ˜T(s+sc)Bαˆ+σ˜˙ησ+r˜T(s+sc)Cαˆ+r˜˙ηr+(s+sc)(ε+urc)−λ(s+sc)2Choose the parameter adaptive laws as(28)αˆ˙=−α˜˙=ηα(s+sc)(Θˆ−ATcˆ−BTσˆ−CTrˆ)(29)cˆ˙=−c˜˙=ηc(s+sc)Aαˆ(30)σˆ˙=−σ˜˙=ησ(s+sc)Bαˆ(31)rˆ˙=−r˜˙=ηr(s+sc)Cαˆand the robust compensator is chosen as(32)urc=−δ2+12δ2(s+sc)where δ is a small positive constant, then (27) can be obtained(33)V˙2(t)≤(s+sc)ε−δ2+12δ2(s+sc)2=−12(s+sc)2−12s+scδ−δε2+12δ2ε2≤−12(s+sc)2+12δ2ε2.Integrating the inequality (33) in [0, tf], it is obtained that(34)V2(tf)−V2(0)≤−12∫0tf(s+sc)2dt+12δ2∫0tfε2dt.If the system starts with initial condition V2(0)=0 and V2(tf)≥0, the L2-gain inequality can be written as(35)||s+sc||L22||ε||L22≤δ2V2(0)=0where||s+sc||L22=∫0tf(s+sc)2dtand||ε||L22=∫0tfε2dt. The attenuation constant δ can be specified by the designer to achieve the desired attenuation ratio between ||s+sc|| and ||ɛ|| [31–33]. If V2(0)≠0, the L2-gain inequality (34) can be given as(36)||(s+sc)||L2≤δ||ε||L2+rbiaswhererbias=2V2(0). It can be found thatδ||ε||L2provides an attraction region around the origin of the state space and its area is controlled by δ. It is implied that the proposed ICSMC system is finite L2-gain stable [31–33].In the parameter adaptive laws (28)–(31),α˙*=c˙*=σ˙*=r˙*=0is necessary. Since the existence of approximation errors, the learning laws could make the parameters drift constantly and the system might become unstable eventually. To avoid the parameters-drift problem, a dead-zone parameter modification is proposed in which the parameter tuning process will stop when tracking performance index is smaller than performance threshold. Assume that the trajectory is cyclic and the cycle time is given by tΔ, thus the tracking performance index Iindexduring the last cycle time is defined as(37)Iindex=∫tf−tΔtf|e|2dtIn this paper, the parameter adaptive laws in (28)–(31) can be modified as following(38)αˆ˙=ηα(s+sc)(Θˆ−ATcˆ−BTσˆ−CTrˆ),0,ifIindex≥IthifIindex<Ith(39)cˆ˙=ηc(s+sc)Aαˆ,0,ifIindex≥IthifIindex<Ith(40)σˆ˙=ησ(s+sc)Bαˆ,0,ifIindex≥IthifIindex<Ith(41)rˆ˙=ησ(s+sc)Cαˆ,0,ifIindex≥IthifIindex<Ithwhere Ithis a performance threshold. The performance threshold Ithcan be selected according to the desired control performance. The modification parameter adaptive laws (38)–(41) mean that if the performance threshold Ithis properly selected as Iindex<Ithwhere the learning is sufficient during the last cycle time, then the parameter learning will be stopped. By choosing Ith=0 means that the parameter adaptation is without dead-zone parameter modification which can be found in many published papers. If Ithis chosen smaller, the better learning performance of the RNFIN can be achieved, but this may lead to an overtraining problem. To attack this problem, a first-order transfer function of the following form is designed for the performance threshold as(42)I˙th=τ(Ifinal−Ith)where τ is a designed time constant. Eq. (42) shows that the performance threshold starts Ith=0 and rises to Ifinal. Thus, the time-varying performance threshold not only can achieve better learning performance but also can avoid an overtraining problem. When the learning stopped, it can be assumed that the learning performance is reached. In this case, we can obtain thatαˆ=α*,cˆ=c*,σˆ=σ*andrˆ=r*(orα˜=0,c˜=0,σ˜=0andr˜=0) andα˙*=c˙*=σ˙*=r˙*=0. To guarantee the stability of the ICSMC system with dead-zone parameter modification, the Lyapunov function candidate is defined as (26). Differentiating (26) with respect to time and using (38)–(41), we can obtain as(43)V˙2(t)=(s+sc)(ε+urc).The robust compensator is designed as (32), thus (43) is exactly the same as (33). Therefore, the proposed ICSMC system without parameter adaptations still has the finite L2-gain property when tracking performance index is smaller than performance threshold.The one-link robotic manipulator is studied in this work. The system dynamics of the one-link robotic manipulator is referred as follows [34](44)q¨=−bq˙−mlgVcos(q)ml2+1ml2uwhere l is the link length, m is the mass, and q is the angular position with initial conditionq(0)=q˙(0)=0. It is assumed that the parameters are given by m=l=b=gV=1. To illustrate the effectiveness of the ICSMC system, an external disturbance d(t)=5sin(2t)cos(8t) is generated starting from t=20s. To show the effectiveness of the ICSMC system, a comparison between the robust sliding-mode control (RSMC) system [35] and the proposed ICSMC system is made.First, the RSMC system [35] is applied to the one-link robotic manipulator. A bound estimation law is utilized to estimate the bound of the model uncertainties and external disturbances in real time. The simulation results of the RSMC system for small learning rates are shown in Fig. 3. The tracking response of the state q is shown in Fig. 3(a) and the control input u is shown in Fig. 3(b). The simulation results show that the favorable control performance can be achieved after the learning process for the controller parameters. However, this results in slow learning speed. On the contrary, the simulation results of the RSMC system for large learning rates are shown in Fig. 4. The tracking response of the state q is shown in Fig. 4(a) and the control input u is shown in Fig. 4(b). The simulation results show that the chattering control input are resulted due to the bound of the system uncertainties overtraining problem occurring.Then, the proposed ICSMC system is applied to the one-link robotic manipulator again. The parameters of the ICSMC system are selected as λ=0.2, ηα=ηr=20, ηc=ησ=1, and δ=0.5. These parameters are chosen to achieve a desired system response. By choosing the value of λ properly, the desired system specifications can be easily ensured in (4). Next, the parameters ηα, ηr, ηcand ησare the leaning rates of the tuning parameters in the RNFIN. Generally speaking, if the leaning rates are chosen to be small, parameter convergence can be easily achieved; however, this will result in slow learning speed. On the contrary, if the leaning rates are too large, the learning speed can be increased; yet, the system may become unstable. Moreover, the prescribed attenuation constant δ will influence the convergent speed of the tracking error. A better tracking performance of the ICSMC system can be achieved if δ is chosen smaller, but this will lead to large control signal. A better learning performance of RNFIN can be achieved, if Ithis chosen smaller, but this may lead to an overtraining problem.The simulation results of the ICSMC system without dead-zone parameter modification for small learning rates are shown in Fig. 5. The tracking response of the state q is shown in Fig. 5(a), the control input u is shown in Fig. 5(b), and the learning histories of the network parameter is shown in Fig. 5(c). The simulation results show that the favorable control performance can be achieved after the learning process for the controller parameters. It can be seen that the constant optimal controller parameters cannot be achieved. But, the derivatives of the optimal parameters are assumed to be zeros in the derivation of the parameter learning process.On the contrary, the ICSMC system without the dead-zone parameter modification for large learning rates is applied to the one-link robotic manipulator. The parameters of the ICSMC system are selected as λ=0.2, ηα=ηr=1000, ηc=ησ=10, and δ=0.5. The simulation results of the ICSMC system without dead-zone parameter modification for large learning rates are shown in Fig. 6. The tracking response of the state q is shown in Fig. 6(a), the control input u is shown in Fig. 6(b), and the learning histories of the network parameter is shown in Fig. 6(c). The simulation results show that the better control performance can be achieved but the constant optimal controller parameters cannot be achieved. When these adjustable controller parameters are not fixed in a finite time, it is difficult to say that the derivatives of the optimal parameter vectors are zero.Next, the proposed ICSMC system with dead-zone parameter modification for small learning rates is applied. The parameters of the ICSMC system are selected as τ=1, Ifinal=20, λ=0.2, ηα=ηr=20, ηc=ησ=1, and δ=0.5. These parameters are chosen to achieve a desired system response. The simulation results of the ICSMC system with dead-zone parameter modification for small learning rates are shown in Fig. 7. The tracking response of state q is shown in Fig. 7(a), the control input u is shown in Fig. 7(b), and the learning histories of the network parameter is shown in Fig. 7(c). Fig. 7(c) shows that the parameter adaptation is stopped(α˙*=c˙*=σ˙*=r˙*=0)in a finite time. The simulation results verify that not only robust tracking performance can be achieved, but also the parameter overtraining problem can be avoided by the proposed dead-zone parameter modification.Finally, the proposed ICSMC system with dead-zone parameter modification for large learning rates is applied, and the parameters of the ICSMC system are selected as τ=1, Ifinal=20, λ=0.2, ηα=ηr=1000, ηc=ησ=10, and δ=0.5. The simulation results of the ICSMC system with dead-zone parameter modification for large learning rates are shown in Fig. 8. The tracking response of state q is shown in Fig. 8(a), the control input u is shown in Fig. 8(b), and the learning histories of the network parameter is shown in Fig. 8(c). Figure 8(c) shows that the parameter adaptation is stopped(α˙*=c˙*=σ˙*=r˙*=0)in a finite time. The simulation results show that the proposed dead-zone parameter modification indeed not only can achieve favorable tracking performances via the finite L2-gain property but also can reduce the parameter overtraining problem.Because a microcontroller would be more suitable for the real-time control applications than a PC and a DSP, this paper proposed a microcontroller-based experimental setup for a DC motor driver as shown in Fig. 9for possible low-cost and high-performance industrial applications. In this paper, the control board is 32-bit Arduino DUE [36]. Using an Arduino DUE simplifies the amount of hardware and software development which we need to do in order to get a system running. On the hardware side, the microcontroller (Atmel® SAM3X8E) runs at 84MHz and features 512KB of Flash and 100KB of SRAM based on the ARM® Cortex™-M3 processor. The Arduino DUE board already has the power and reset circuitry setup as well as circuitry to program and communicate with the microcontroller over USB. In addition, the I/O pins of the microcontroller are typically already fed out to sockets/headers for easy access. On the software side, the open-source Arduino Software Development Environment makes it easy to write code and upload it to the Arduino DUE board. It runs on Windows, Mac OS X, and Linux. Arduino also provides a number of libraries to make programming the microcontroller easier.L298 motor driver is a high voltage, high current dual full-bridge driver designed to accept standard TTL logic levels and drive inductive loads. HCTL-2032 decoder performs the quadrature decoder, 32-bit counter and bus interface function. In this paper, L298 motor driver and HCTL-2032 decoder are used to improve system performance in digital closed loop motion control. Meanwhile, the DC motor driver can be represented in the following form [37,38](45)θ¨=−BJ+KtKbJRaθ˙−TlJ+KtJRauwhere θ is the rotor position, J is the moment of inertia, B is the damping coefficient, Tldenotes the external disturbance torque, Rais the motor resistance, Ktis the torque constant, Kbis the back electromotive force coefficient, and u is a control input. To investigate the effectiveness of the proposed ICSMC system, two conditions are tested. One is the nominal condition and the other one is the payload condition that has one disk as the payload.First, the proposed ICSMC system without dead-zone parameter modification for small learning rates is applied to the DC motor driver. The parameters are selected as λ=1, ηα=ηr=8, ηc=ησ=1, and δ=0.8. These parameters are selected through some trials. The experimental results of the ICSMC system without dead-zone parameter modification for small learning rates are shown in Fig. 10. The tracking responses of the rotor position θ are shown in Fig. 10(a) and (d), the control inputs u are shown in Fig. 10(b) and (e), and the learning histories of the network parameter are shown in Fig. 10(c) and (f) for nominal condition and payload condition, respectively. The experimental results show that favorable control performance can be achieved with a payload variation after the controller learning process. However, it can be seen that the constant optimal controller parameters (limt→tfα˜=0,limt→tfc˜=0,limt→tfσ˜=0, andlimt→tfr˜=0) are not reachable.To achieve a better control performance, the proposed ICSMC system without dead-zone parameter modification for large learning rates is applied. The parameters are selected as λ=1, ηα=ηr=200, ηc=ησ=10, and δ=0.8. The experimental results of the ICSMC system without dead-zone parameter modification for large learning rates are shown in Fig. 11. The tracking responses of the rotor position θ are shown in Fig. 11(a) and (d), the control inputs u are shown in Fig. 11(b) and (e), and the learning histories of the network parameter are shown in Fig. 11(c) and (f) for nominal condition and payload condition, respectively. The experimental results show that favorable control performance can be achieved after the controller learning process. However, the chattering control input are resulted due to the controller parameters overtraining problem occurring.Next, the proposed ICSMC system with dead-zone parameter modification for small learning rates is applied again. The parameters are selected as τ=1, Ifinal=10, λ=1, ηα=ηr=8, ηc=ησ=1, and δ=0.8. The experimental results of the ICSMC system with dead-zone parameter modification for small learning rates are shown in Fig. 12. The tracking responses of the rotor position θ are shown in Fig. 12(a) and (d), the control inputs u are shown in Fig. 12(b) and (e), and the learning histories of the network parameter are shown in Fig. 12(c) and (f) for nominal condition and payload condition, respectively. Fig. 12(c) and (f) show that parameter learning is stopped after 8.24s and 3.18s for the nominal condition and the payload condition, respectively. The experimental results can be seen that not only robust tracking performance can be achieved but also the parameter adaptation is stopped.Finally, the proposed ICSMC system with dead-zone parameter modification for large learning rates is applied to the DC motor driver. The parameters are selected as τ=1, Ifinal=10, λ=1, ηα=ηr=200, ηc=ησ=10, and δ=0.8. The experimental results of the ICSMC system with dead-zone parameter modification for large learning rates are shown in Fig. 13. The tracking responses of the rotor position θ are shown in Fig. 13(a) and (d), the control inputs u are shown in Fig. 13(b) and (e), and the learning histories of the network parameter are shown in Fig. 13(c) and (f) for nominal condition and payload condition, respectively. Fig. 13(c) and (f) show that parameter learning is stopped after 5.28s and 1.58s for the nominal condition and the payload condition, respectively. It demonstrated that the proposed ICSMC approach with dead-zone parameter indeed not only can have favorable tracking performances via the finite L2-gain property and stable learning results but also can reduce the parameter overtraining problem.

@&#CONCLUSIONS@&#
This paper proposes an ICSMC system which is composed of a computed controller and a robust compensator. The computed controller uses a RNFIN to online approximate the unknown system term and the robust compensator is designed to eliminate the effect of the approximation error. By employing the L2 control theory, it is possible to attenuate the effects of the approximation errors between the RNFIN and the system dynamic to a prescribed level. To avoid the drift, parameters are limited in a given region, and a dead-zone parameter modification in which the parameter tuning process will stop when a learning performance index is smaller than a pre-specified threshold. Finally, some simulation and experimental results demonstrate that the proposed ICSMC approach indeed can have satisfactory tracking performances via the finite L2-gain property and stable learning results. The proposed ICSMC system is only applicable to a second-order nonlinear system. The proposed ICSMC system can be easily extended to other nonlinear control problem liking as robotic manipulators and linear ultrasonic motors.