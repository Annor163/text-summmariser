@&#MAIN-TITLE@&#
A highly solid model boundary preserving method for large-scale parallel 3D Delaunay meshing on parallel computers

@&#HIGHLIGHTS@&#
We propose a novel parallel 3D Delaunay meshing algorithm for large-scale simulations.The model information is kept during parallel triangulation process.A 3D local non-Delaunay mesh repair algorithm is proposed.The meshing results can be very approaching to the model boundary.The method can achieve high parallel performance and perfect scalability.

@&#KEYPHRASES@&#
3D Delaunay meshing,Parallel mesh generation,Mesh partition,CAD model boundary preserved meshing,

@&#ABSTRACT@&#
In this paper, we propose a novel parallel 3D Delaunay triangulation algorithm for large-scale simulations on parallel computers. Our method keeps the 3D boundary representation model information during the whole parallel 3D Delaunay triangulation process running on parallel computers so that the solid model information can be accessed dynamically and the meshing results can be very approaching to the model boundary with the increase of meshing scale. The model is coarsely meshed at first and distributed on CPUs with consistent partitioned shared interfaces and partitioned model boundary meshes across processors. The domain partition aims at minimizing the edge-cuts across different processors for minimum communication cost and distributing roughly equal number of mesh vertices for load balance. Then a parallel multi-scale surface mesh refinement phase is iteratively performed to meet the mesh density criteria followed by a parallel surface mesh optimization phase moving vertices to the model boundary so as to fit model geometry feature dynamically. A dynamic load balancing algorithm is performed to change the partition interfaces if necessary. A 3D local non-Delaunay mesh repair algorithm is finally done on the shared interfaces across processors and model boundaries. The experimental results demonstrate our method can achieve high parallel performance and perfect scalability, at the same time preserve model boundary feature and generate high quality 3D Delaunay mesh as well.

@&#INTRODUCTION@&#
Mesh generation is the pre-process of Finite Element Analysis (FEA), whose result affects FEA solutions critically. Delaunay triangulation is the most widely used method for mesh generation. Many strategies for its construction have been proposed. In the paper by Su  [1], numerical tests on several Delaunay triangulation algorithms, namely, divide and conquer algorithms  [2], sweep line algorithms  [3], incremental algorithms  [4], and gift wrapping algorithms  [5], were conducted and their performances were compared.With the rapid increase in problem size from thousands to millions of vertices to achieve higher-precision numerical simulations, devising efficient schemes to construct Delaunay triangulation is necessary. Due to the limitations of memory and speed on single computer, parallel Delaunay triangulation plays an increasingly important role. It is a relatively new research area that combines both computational geometry and parallel computing. For computational geometry, it is important to ensure that the parallel algorithm can preserve model boundary feature and generate high-quality 3D Delaunay mesh. For parallel computing, it is critical to ensure that the parallel algorithm can handle extremely large-scale data sets as well as achieve high parallel performance and perfect scalability. To meet both requirements, this paper proposes a highly solid model boundary preserving method for large-scale parallel 3D Delaunay meshing.For computational geometry, the input of current parallel 3D Delaunay triangulation algorithms is the sampling vertices or the coarse surface triangle mesh of the model boundary. The input sampling vertices or coarse surface triangle mesh cannot express the model boundary precisely. Thus, the final generated tetrahedral mesh is restricted by the input. Moreover, the boundary feature of the 3D model cannot be well preserved. In addition, during parallel 3D Delaunay triangulation process, current algorithms do not optimize mesh to match model boundary. As a result, mesh precision cannot be improved even with the increase of the mesh scale. Thus, preserving model boundary feature and generating high-quality 3D Delaunay mesh is difficult.For parallel computing strategies, current parallel 3D Delaunay triangulation algorithms are classified into domain decomposition and node-based modes according to their parallel schemas. The algorithms of the domain decomposition mode are further distinguished as coupled and decoupled according to the complexity of communications.In 2003, Chrisochoides et al.  [6] present a parallel B–W insertion for mesh generation. It is reported that code complexity might cause stability issues near the domain boundary. Parallel optimistic Delaunay meshing (PODM)  [7] is the first proven parallel 3D Delaunay meshing algorithm that can guarantee quality for restricted domains. Input to the algorithm is a partitioned and conforming Delaunay mesh of a restricted polyhedral domain. The sub-meshes of the distributed domains are then independently refined by inserting new vertices. The algorithm enables a new vertex to affect both the sub-mesh and the shared interfaces induced by the partitioning. This flexibility is crucial to ensure mesh quality but introduces unpredictable latencies attributed to delays in gathering remote data to update the local mesh. In the experiments, more than 80% of this latency is attributed to fine-grained concurrency.Okusanya et al.  [8] present a parallel 3D Delaunay triangulation algorithm based on subdivision. Vertices are inserted concurrently within each sub-domain. Dynamic load-balancing is incorporated to ensure even work distribution during the parallel process. The inter-processor boundaries are enabled to move to accommodate element migration between sub-domains. Scalability can be maintained for a large number of processors provided that granularity is sufficiently high.The DeWall algorithm presented by Cignoni et al.  [9] is a typical decoupled parallel Delaunay triangulation method. The DeWall algorithm includes two main phases. In the partition phase, partition walls are generated to divide the input vertices into some groups. In the merging phase, the generated sub-meshes are merged. However, this algorithm has low efficiency because achieving load balancing and high quality partition walls are difficult.Glut et al.  [10] propose two domain decomposition schemas in order to improve the mesh quality near the decomposition interface. The difference between the two schemas lies in the step in which the actual partitioning occurs. In the decomposition surface mesh (DSM) schema, the partitioning is achieved by using solely the surface mesh. In the decomposition coarse volume mesh (DCVM) schema, a coarse tetrahedral mesh is used. After the decomposition and creation of an interface mesh, final volume meshes are generated independently for each sub-domain. However, the parallel efficiency is not ideal for sophisticated models because it is sensitive to the quality of the partition interface.Lo et al.  [11] put forward a generic parallel Delaunay triangulation scheme using the zonal partition of vertices. Vertices are initially sorted into cells, and the cells are naturally grouped into zones, in which Delaunay triangulation is constructed cell by cell within each zone. Tetrahedral between zones are created by adding layers of cells at the shared interfaces of each zone. However, parallel efficiency is low for sophisticated models because it is hard to achieve load balancing with the distribution schema of vertices.Node-based parallel Delaunay triangulation algorithms focus on every vertex, not on every sub-domain. Yagawa et al.  [12] propose a free mesh method, the input of which is a set of vertices and the vertices are distributed to processors. The task of each processor is to construct neighboring vertices set of each vertex. The global mesh is generated by merging all local neighboring vertices. The task of each processor is relatively independent. Thus, this algorithm is suitable for parallel computing. However, the local mesh around nearby vertices may be in conflict and considerable communication is needed to guarantee consistency.To maintain the Delaunay property during the parallel process, Kohout et al.  [13] propose parallel Delaunay triangulation with edge and face swaps in 3D space. Beyer et al.  [14] present a procedure for parallel dynamic and kinetic regular triangulation in 3D based on incremental construction with parallel flipping of tetrahedral.From the related work on parallel 3D Delaunay triangulation algorithms, we can see current algorithms only take sampling vertices or coarse surface triangle mesh as input. Thus, the model boundary feature cannot be well preserved and high-quality 3D Delaunay mesh cannot be generated. The initial input vertices or surface mesh are only approximations of 3D models. Mesh refinement on parallel computers cannot improve mesh precision, even with the increase in mesh scale. Moreover, current parallel algorithms only focus on distributing the initial input to processors. Dynamic load balancing is neglected during parallel process. Thus, high parallel efficiency cannot be achieved. Furthermore, the partitioned interfaces generated by most current algorithms are inconsistent on each sub-domain, leading to considerable communication to ensure synchronization. Finally, the tetrahedral mesh around the shared partitioned interfaces among processors may be non-Delaunay elements when merging sub-meshes. Current algorithms either neglect non-Delaunay elements, or remove them by face flipping. However face flipping in 3D space may cause the expansion of non-Delaunay regions.To overcome the main defects of current parallel algorithms, we propose a highly solid model boundary preserving method for large-scale parallel 3D Delaunay meshing.First, the 3D boundary representation model information is kept during the whole parallel 3D Delaunay triangulation process. The solid model information (including surface, curve, point and corresponding parameters) is used to move vertices to the model boundaries during the surface mesh optimization phase. Thus, the generated mesh can highly approximate the model boundary as mesh scale increases. Experiment results show that the proposed algorithm can preserve model boundary features and generate high-quality 3D Delaunay mesh.Second, we propose an efficient parallel 3D local mesh reconstruction algorithm with minimum reconstruction region to repair the non-Delaunay mesh, which guarantees the Delaunay property for the global mesh.Third, we present a parallel framework for large-scale 3D Delaunay triangulation with high parallel performance and perfect scalability. After very coarse tetrahedral meshing and domain partition, arbitrary large mesh can be generated on distributed computers with parallel refinement and optimization to preserve the model boundaries. Dynamic load balancing is performed to achieve efficient parallel performance. The quality of generated mesh can satisfy the requirements of large simulation well.

@&#CONCLUSIONS@&#
We propose a solid model boundary preserving method for large-scale parallel 3D Delaunay meshing. The most significant advantage is that the 3D boundary representation model information is kept during the entire parallel 3D Delaunay triangulation process. Based on this information, a parallel multi-scale surface mesh refinement is iteratively performed to meet the mesh density and quality criteria followed by a parallel surface mesh optimization to fit model geometry feature dynamically. Another advantage is that we propose a parallel 3D local mesh reconstruction algorithm to repair the non-Delaunay mesh. The algorithm is highly parallelized. Experimental results demonstrate high performance and perfect scalability. We plan to extend the algorithm to GPU clusters parallel environments to further improve the performance of Delaunay triangulation. We also know it is meaningful to extend the usability of our algorithm on general models such as 3D point cloud data generated by 3D laser. So our future research topics include CAD model boundary representation reconstruction based on surface triangle mesh from 3D scanner or 3D model boundary recovery only based on surface triangle mesh during parallel meshing. At that time, a more elegant partitioning scheme may be preferred such as semantic based partitioning scheme.