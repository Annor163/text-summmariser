@&#MAIN-TITLE@&#
Customer satisfaction in dynamic vehicle routing problem with time windows

@&#HIGHLIGHTS@&#
A dynamic vehicle routing problem focusing on customer satisfaction is solved.An evolutionary approach coupled to a customer satisfaction strategy is proposed.The strategy inserts future anticipated visits favoring customer satisfaction.Results show the value of advance planning and strategy on customer satisfaction.

@&#KEYPHRASES@&#
Genetic algorithms,Customer satisfaction,Dynamic vehicle routing,

@&#ABSTRACT@&#
The dynamic vehicle routing and scheduling problem is a well-known complex combinatorial optimization problem that drew significant attention over the past few years. This paper presents a novel algorithm introducing a new strategy to integrate anticipated future visit requests during plan generation, aimed at explicitly improving customer satisfaction. An evaluation of the proposed strategy is performed using a hybrid genetic algorithm previously designed for the dynamic vehicle problem with time windows that we modified to capture customer satisfaction over multiple visits. Simulations compare the value of the revisited algorithm exploiting the new strategy, clearly demonstrating its impact on customer satisfaction level.

@&#INTRODUCTION@&#
The vehicle routing problem with time windows (VRPTW) belongs to the class of the NP-hard combinatorial optimization problems [1]. Since heuristic methods often produce near-optimal solutions in a reasonable amount of computational time, most research so far focused on the design of heuristics and metaheuristics [2–6]. The dynamic (real-time) vehicle routing problem with time windows (DVRPTW) in particular is still even harder to solve than the static problem since customer requests are generated or do occur dynamically, mainly during the execution of the problem-solving procedure. Work and surveys on DVRPTW may be found in [7–19]. From the various heuristic methods reported for the DVRPTW, tabu search and genetic algorithms techniques have demonstrated the best performance [11,13,19]. Although ant colony systems have been successfully applied to the dynamic vehicle routing problem (with no time window constraints) [10], comparisons for similar problems remain difficult. For a recent review on the conducted works, the reader can refer to [20,21].Transportation service providers performing pick up/delivery increasingly strive to improve customer satisfaction. In the basic DVRPTW, servicing all customers in specified time windows is simply and naturally reinforced. This refers to the so-called VRPTW problem with hard time windows. Hard time windows refer to a strict time interval that a servicing vehicle can’t violate when visiting a customer/site. In contrast, despite rigid structures governing transportation practices, there are a lot of cases where violated time windows may still lead to acceptable satisfaction service levels or problem-solving conditions. A solution with temporal service constraint violations characterizes DVRPTW with soft time windows, in which a penalty is incurred to reflect a measure of customer dissatisfaction. Soft time windows may by definition accommodate some constraint violations but subject to some additional cost. Accordingly, each customer has a desirable time window under which a service occurring over that interval would generate a high satisfaction level (customer satisfaction is maximum) as opposed to a degraded (penalized) customer satisfaction level if service takes place earlier or later than expected [22,23]. This problem is pervasive through many application domains and situations involving worldwide distributors such as newspaper delivery, postal delivery, and school bus routing. In other respect, there is widespread belief that transportation firms and businesses should focus on and improve quality of service to successfully meet customer satisfaction [24]. As world markets gradually become more competitive and service demand is steadily growing, the importance and relative weight of customer satisfaction is gaining momentum. Therefore, driven by changing market demands, logistic providers adapt new strategies to reduce costs and improve customer service in response to individual demands.Dynamic changes in travel times due to traffic congestion and other nuisances typical of urban transportation, force customer satisfaction consideration to qualify multiple plans in the decision making model. To the best of our knowledge, the spectrum of customer satisfaction situations covered remains very limited. Current models barely reflect and unsatisfactorily capture uncertainty linked to customer satisfaction in cases where multiple service deliveries might be required. In this work, a new customer satisfaction model is introduced to achieve real-time planning and execution, extending single visit binary customer satisfaction to a satisfaction continuum building up over multiple rounds while accounting for possible uncertainty.Customer satisfaction level closely relates to quality of service. As a result, customer satisfaction level may no longer simply stands as “good” or “bad” but may rather ranges over a whole continuum of contentment. In this work, we present a new approach to solve a DVRPTW focusing on customer satisfaction. The targeted problem being addressed is different from the split-delivery version of VRPTW (SDVRPTW) where known customer demand may be ultimately satisfied through multiple vehicle visits. A customer visit corresponds to a customer being serviced by a vehicle. Neither should the problem be confused with the vehicle routing problem with time windows and stochastic demands (VRPTWSD), in which customer demands characterized by probability distributions and total demand at customer location are known in advance. In this paper, an evolutionary approach is proposed to solve the dynamic or real-time version of VRPTW with multiple customer visits where the number of customer visits depends on previous visit outcomes (customer satisfaction). This situation occurs when partial customer satisfaction matters and full satisfaction cannot be guaranteed, as uncertainty on customer satisfaction level still persists naturally after service delivery. Cases where partial customer satisfaction deserves some attention include application domains such as large scale disaster management, differential diagnosis resulting from medical conditions, health care, forest fire handling and effect mitigation, service vehicle repair, real-time tactical reconnaissance military missions, or fluctuating customer demand intrinsically hard to accurately estimate by a bounded resource service provider. Based upon an original strategy to integrate anticipated future visit requests during plan generation to improve customer satisfaction level, the proposed approach uses a hybrid genetic algorithm to maximize the number of satisfied customers, while minimizing temporal constraint violation and total traveled distance. From a computational experiment, the value of the approach is assessed through a comparative performance analysis.The paper is outlined as follows. In Section 2, the dynamic vehicle routing problem is first described. The customer satisfaction function is then introduced. Section 3 presents the proposed problem-solving approach whereas Section 4 conveys the main concepts of the revisited hybrid genetic algorithm reported in [25], capturing customer satisfaction possibly resulting from multiple visits. The basic principles and features of the problem-solving process and the underlying algorithm are described in details. Section 5 reports on the results of a computational experiment and discusses comparative performance with alternate methods. Finally a summary of the findings and future research directions are given in Section 6.The classical VRPTW involves customers with known demands to be serviced by a homogeneous fleet of vehicles with limited capacity. Each customer provides a time interval during which a particular task must be completed such as loading/unloading the vehicle. Routes are assumed to start and end at a central depot. The objective is to minimize the number of tours or routes, and then for the same number of tours, to minimize total traveled distance, such that each customer is serviced within its time window and the total vehicle load associated with a given route does not exceed vehicle capacity. In this paper, a new DVRPTW is being introduced. It is a variant of the static problem in which customer requests are generated dynamically during the construction of the solution.In the targeted DVRPTW [11] under consideration, the temporal distribution of service requests is assumed to be unknown. Even if some requests are known in advance, most customer requests occur at run-time, making partial route construction an evolutionary process, interleaving plan construction and plan execution. Temporal problem attributes such as travel time, service time and time windows for servicing customers are assumed deterministic, making service request distribution the sole source of uncertainty. Time window constraints at each customer location can be violated. If a vehicle arrives at a destination too early it must wait before carrying out its service. Conversely, if it shows up too late, a penalty cost is imposed for lateness. The objectives consist in maximizing number of satisfied customers while minimizing temporal constraint violation and total traveled distance, subject to the following constraints:-A hard time window (time window of depot) to initiate and complete (deadline) all solution tours,A maximum or fixed number of vehicles from the depot (fleet size),Limited vehicle capacity constraint,A hard route-time constraint, andSoft time window constraints on delivering customer service.Vehicles have identical maximum weight capacities and maximum route-time (vehicle travel time) constraints. Maximum route time-length constraint is an additional feature to the standard DVRPTW. The duration of the trip for any vehicle should be shorter than the maximum allowed routing time (maximum route length). In the current dynamic problem setting, we assume the next vehicle destination (intended) to be communicated to the crew by the dispatching system at each service location, on or after customer service completion. The next destination is determined according to the best computed solution available. The dispatching system may advise of any new destinations during the problem-solving process as necessary. It is also assumed that for any planned visit that involves waiting time, crews stay at their current service location expecting a decision from the dispatching system. It should be emphasized that a vehicle traveling to its next destination is fully committed to visit its target. Consequently, aspects such as route diversions for a moving vehicle have not been considered.Customer may require several visits to reach a satisfaction level threshold (e.g. detection or diagnosis problems). Each customer visit request is characterized by a service time and a service time window. Each customer shows an initial satisfaction level to be further updated on a visit basis. A visit outcome can be a success or a failure, defining s success and l–s failures over a given number of visits l, respectively. Based on probabilistic cumulative evidence emerging from multiple visits, the proposed customer satisfaction function/model is inspired from Bayesian probability update resulting from repeated visits, in which belief is replaced by user satisfaction level. The larger the number of successful visits (cumulative evidence) the larger the satisfaction level. As customer satisfaction depends on local visits being conducted, the satisfaction of customer c after l visits, Sc,l(s), is defined as follows:(1)Sc,ls=11+μcsδcl−s1/sc,o−1where Sc,0∈[0,1] refers to the initial satisfaction level of customer c. A customer satisfaction of 1 (0) means absolute satisfaction (total dissatisfaction). User-defined parameters μcand δcare related to the quality of service provider at customer c for successful and unsuccessful visits, respectively; μc∈ [0,1] andδc∈1,+∞∀c. Eq. (1) is inspired from a target detection problem [26] in which a searching agent sensor progressively gain further confidence in having successfully/satisfactorily found a target when performing multiple visits to the same likely location. It explicitly translates the implicit form of belief update given s positive observation events out of l visits. The probability of success to reach a goal (a sensor service provider detecting a target with a given certainty level) analogously reflects the propensity for a service provider to suitably achieve customer satisfaction after multiple customer visits. As for the target detection setting, the proposed satisfaction function/model measures possible intangible customer satisfaction and realistically avoids guaranteeing in advance full customer satisfaction in the first place, by virtue of many uncertainty sources.A threshold of satisfaction S*is used to set the number of customer visits. When customer satisfaction is larger than S*, we assume a customer to be satisfied or having been serviced fairly. Otherwise, a new visit is performed. The process goes on until a maximum number of visits is reached. Resorting to a maximum number of visits helps preventing excessive customer revisit requests. Visit ordering on a given customer has no impact on customer satisfaction even if the customer is serviced by different vehicles. However, total lateness and travel distance may be affected.Since the first objective is to maximize the number of satisfied customers, it seems intuitively appealing to include anticipatory information in the heuristic decision procedure about customers that may likely require new visits in the near future. The strategy is to continuously generate plans consistent with past decisions while anticipating future requests considering both existing and potential future visit requests during plan generation, in order to better manage the fleet of vehicles. Consequently, the new strategy introduces dummy revisits (representing forecasted revisit requests) in vehicle routes. The expected number of visits n for a given customer c (which may require service in the near future) is the minimum value that satisfies the following inequality:(2)11+μcn1/Sc,o−1≥S*n represents the minimum number of visits to satisfy the customer c when all visits are successful.We use a hybrid genetic algorithm to construct a set of potential routes containing existing customer visits as well as possible future revisits. Details on the algorithm used are given in the next sections. Using these projected plans to route the existing set of customers better accommodates future revisit requests. This ability to anticipate the future and therefore premature route construction without further violating temporal constraints is the main feature of our approach. A larger number of customer visits can then be contemplated in building a solution, leading possibly to some quality improvement. The strategy is based on the premise that better solutions may emerge when taking advantage of a possibly larger number of customer visits due to additional requests that may occur in the near future. It is therefore assumed that the gain or better service opportunities generated by anticipating possible future requests will compensate the cost of myopic routing opportunities, ultimately resulting in solution improvement.If multiple visits are candidates for insertion in planned routes, the first visit to insert will be the one with the minimum deviation of the customer average satisfaction from the satisfaction threshold. Customer average satisfactionS¯c,lis computed by averaging projected satisfaction values simulating plan execution over all possible histories (sequence of events) for a given plan solution. As visit ordering on a given customer has no impact on overall customer average satisfaction, symmetry on visit outcome streams may be exploited. Accordingly, scenarios (sequence of visits) are divided in equivalence classes based upon the number of success (s anticipated success) and failure (l-s anticipated failure outcomes) events, defining for a given number of visits l, a binomial probability distribution over possible visit outcomes. Average satisfaction of customer c for a plan solution involving l (l≥1) visits to c is defined as follows:(3)S¯c,l=∑s=0llSpscs1−psc1−sSc,lswhere pscrefers to the probability of successful visit at customer c. It is worth noticing that vehicle homogeneity and similar probability contributions for all sequence of success/failure events sharing the same number of success lead to a linear rather than an exponential number of scenarios that would normally be considered should customer visit order matter for a given customer c, therefore reducing the number of contributing terms from 2lto l.Probability of a successful visit represents an average value over a sufficiently long service period and ultimately depends on the nature of the service to be delivered. In the current setting, we assume that services are similar in nature, and task execution remains homogeneous. A more specialized satisfaction function/model would generalize the approach exploiting particular domain knowledge to propose a finer-grained successful visit model capturing shorter timescale and more specific domain-dependent features but would not fundamentally change the basic ideas initially conveyed.A new visit request occurs when a recently serviced customer remains dissatisfied, whereas an anticipated visit is a potential visit that may be required in the near future. The insertion strategy related to zone visit requests is given as follows:-All visit requests and possible future revisits related to known customers are first inserted (using Eq. (2)).Upon the arrival of a new customer visit request (dynamic request), the latter is examined for insertion in the current plan solution as well as its potential future revisit requests (using Eq. (2)).New revisit request at a given customer replaces one of his anticipated revisits, if any; otherwise it will be inserted in one of the planned routes, assuming an admissible insertion position in at least one planned route of the current solution. If no admissible insertion position exists, an exploration is made to find a beneficial exchange with planned revisits. Otherwise the customer revisit request is simply rejected.Once inserted into the planned route, the first customer visit will not be removed. This policy allows each accepted customer to have at least one visit.A customer revisit can be removed (for exchange) from planned route to insert another visit (visit with the minimum deviation of the customer average satisfaction from S*) which could increase the number of satisfied customers. Removed visits can be subsequently reinserted in the planned routes.Anticipated customer revisits that do not occur are simply removed from planned routes.Fig. 1illustrates this insertion strategy in a schematic way. Whenever a new request occurs, this request and the current routes are provided as input to some insertion and exchange procedures. The latters then produce a new set of routes with the new request and its potential future revisit requests. Insertion and exchange procedures are presented in Sections 4.2.3 and 4.2.4, respectively. In the following section, we briefly describe the hybrid genetic algorithm (HGA) previously intended for the DVRPTW, capturing customer satisfaction and multiple possible visits.The hybrid genetic algorithm first consists of two concurrently evolving populations of solutions to maximize number of satisfied customers and, minimize temporal constraint violation and total traveled distance. It introduces new hybrid genetic operators combining variations of key concepts inspired from known routing techniques and search strategies. Individuals represent expandable solutions describing currently planned visits, as well as previously serviced customers, while dynamically accommodating incoming customer requests. Customers may require several visits before being satisfied and customer satisfaction is updated after each visit using the satisfaction function described at Section 2.1. When a customer is serviced, outdated planned visits from all solutions are then delayed accordingly and updated using larger penalty cost for lateness. Feasible solutions for initial populations are first generated using a sequential insertion heuristic in which customer visits are inserted in arbitrary order at randomly chosen insertion positions within routes. This strategy is fast and simple while ensuring unbiased solution generation.The process can be outlined as follows:Initialize populations with currently known customersRepeatIf (no external event occurs) ThenContinue search to dynamically optimize routesSchedule (visit commitment) next visit(s) if required (based on routing policy/strategy)Update best computed solutionElse -- event occurrenceStop genetic algorithmIf (end of service at customer location) ThenCalculate customer satisfaction using Eq. (1)If (customer satisfaction<S*) ThenGenerate new customer visit requestElse–customer is satisfiedRemove anticipated visits of the customer, if any, from planned routesDetermine driver's next planned visit from best computed solution. Drivers must wait at their current location until advised (scheduled) to move to their next planned destinationIf (planned next visit involves a waiting time) ThenDelay driver's departure for that periodUpdate population solutions incorporating the next planned driver's visit (next planned destination)Else -- new customer visit requestIf (it is an anticipated visit) ThenReplace the anticipated visit by the new visitElse–not an expected visitExplore admissible customer insertion (Section 4.2.3) in population solutions–using the insertion procedure at first, then the exchange procedure (Section 4.2.4)If (at least one admissible insertion position or one beneficial visit exchange exists) ThenUpdate population members and best computed solution accordinglyElse -- no admissible solutionRequest is rejected (service denial)Reactivate genetic algorithmUntil (end of the horizon period)The customer satisfaction maximization objective is first addressed between two consecutive events or cycles of the approach, focusing on best customer satisfaction level by means of insertions and swaps for which the alternate two remaining objectives will be optimized through the next genetic process cycle.HGA relies upon concurrent population evolution and partial temporal constraint (time windows) relaxation. It mainly involves non-feasible solutions, in which some routes may violate customer visit temporal constraints. Two populations Pop1 and Pop2, primarily formed of non-feasible solution individuals, are evolving concurrently, each with their own objective functions. Pop1 contains at least one feasible solution and is used to minimize total traveled distance, while Pop2 focuses on minimizing constraint violations. It should be emphasized that satisfaction is not explicitly considered in the objective and fitness functions as all solution individuals share the same set of customer visits, and that visit ordering on a given customer has no impact on its satisfaction. Best population members periodically migrate to the alternate population to emphasize diversity and cross-fertilization, replacing worst individuals. For a matter of convenience, two populations are chosen to emphasize solution diversification.The algorithm mainly relies on the basic principles of genetic algorithms, disregarding explicit solution encoding issues for problem representation. In the beginning there is a pre-optimization phase in which solutions are generated as a set of routes visiting known customers. These solutions are expanded to handle incoming requests while properly accounting for previously serviced customers (history) or committed visits. Customer cardinality is identical across both populations and the number of tours is bounded by the size of the vehicle fleet. Key events dynamically changing solution individuals include visit commitment and the occurrence of a new service request. Visit commitment modifies the active root (latest scheduled customer) of the developing route while maintaining state consistency across solution individuals. The occurrence of a new service request expands the length of the solution individual incorporating an additional customer visit. Upon the arrival of a new request, feasible customer insertions are first explored using a procedure based on an extended regret cost function described at Section 4.2.3. If no feasible insertion emerges, an additional route is formed assuming the maximum number of tours is not exceeded. Otherwise, non-feasible insertions are explored. If all possible insertions across populations ultimately violate the deadline associated with the problem time horizon or the route time constraint, the customer is rejected. When a new customer visit is successfully inserted in at least one solution, it is also included in alternate population members, even at the cost of reconstructing some solution individuals. This requirement ensures solution homogeneity (same set of visits) and a maximum number of serviced customers. Since visit ordering on a given customer has no impact on its satisfaction, traveled distance and lateness exclusively define the fitness and objective functions to evaluate solution individuals. In counterpart, satisfaction is considered in an exchange procedure (see Section 4.2.4) to select a subset of pending visit requests that maximize the number of satisfied customers for insertion purposes in planned routes. A post-processing procedure aimed at reordering customer visits is applied to further improve the new best solution. The evolutionary process is repeated until a predefined stopping condition is met.HGA uses a steady-state genetic algorithm that involves overlapping populations. Individual evaluation is the same for both populations, but fitness criteria are different. Fitness criteria are used only in selection process to emphasize solution diversification. At first, new individuals are generated and added to the current population Popp. The process continues until the overlapping population outnumbers the initial population by np. Then, the npworst individuals are eliminated to maintain population size using the individual evaluation.The proposed genetic operators mostly rely on two basic principles. First, for a given number of tours, an attempt is made to construct feasible solutions with as many customer visits as possible. Second, remaining customers are inserted within existing routes, violating temporal constraints to keep the total number of routes allowed to a fixed value. The proposed genetic operators incorporate some key features of the best heuristic routing techniques such as Solomon's insertion heuristic I1 [27], large neighborhood search [28] and the route neighborhood-based two-stage metaheuristic (Liu and Shen, [4]). Two crossover operators are developed, namely IB_X and LNSB_X, and a suite of five mutation operators is proposed, namely EE_M, RS_M, IEE_M, RSR_M and RC_M. Each operator is briefly described next. The parameter values and more details on the genetic operators for the proposed genetic operators are presented in [25].The insertion-based IB_X(k) crossover operator creates an offspring by combining, one at a time, k routes (R1) of parent solution P1 with a subset of customers, formed by nearest-neighbor routes (R2) in parent solution P2. The neighborhood R2 includes the routes of P2 whose centroid is located within a certain range of r1∈R1 (centroid). This range corresponds to the average distance separating r1 from the routes defining P2. The routes of R1 are selected either randomly, with a probability proportional to the number of customers characterizing a tour or based on average distance separating consecutive customers over a route. A stochastic removal procedure is first carried out to remove from r1, customers subject to be migrated to alternate routes. Targeted customers are either selected according to waiting times, distance separating them from their immediate neighbors, or randomly. Then, using a modified insertion heuristic inspired from Solomon [27], a feasible child tour is constructed, expanding the altered route r1 by inserting customer visit candidates derived from the nearest-neighbor routes R2 defined earlier. The proposed insertion technique consists in adding a stochastic feature to the standard customer insertion heuristic I1 [27], by selecting randomly the next customer visit over the three best candidates with a bias toward the best. Once the construction of the child route is completed, and reinsertion is no longer possible, a new route construction cycle is initiated. The overall process is repeated for the k routes of R1. Finally, the child inherits the remaining “diminished” routes (if any) of P1. If unrouted customers still remain, additional routes are built using a nearest-neighbor procedure. The whole process is then iterated once more to generate a second child by interchanging the roles of P1 and P2.The LNSB_X (large neighborhood search-based) crossover operator relies on the concept of the Large Neighborhood Search (LNS) method proposed by Shaw [28] to create an offspring. LNS consists in exploring the search space by repeatedly removing a subset of customers (R) from parent solution P1 and reinserting them using constraint-based tree search (constraint programming). The subset R includes related customers in parent solution P2 and customers violating temporal constraints. Customer relatedness defines a relationship linking two customers based upon specific properties (e.g., proximity and/or identical route membership), such that when both customers are considered simultaneously for a visit, they can compete with each other for reinsertion creating new opportunities for solution improvement. Therefore, customers close to one another naturally offer interchange opportunities to improve solution quality. Similarly, the number of tours in a solution is more likely to decrease when customers sharing route membership are removed all together.The EE_M (edge exchange) and RS_M (repair solution) mutators focus on inter-route improvement. EE_M attempts to shift customers to alternate routes as well as to exchange sets of customers between two routes. It is inspired from the λ-interchange mechanism in [29], performing reinsertions of customer sets over two neighboring routes. In the proposed mutation procedure, each customer is explored for reinsertion in its surrounding route neighborhood made up of two tours. Tours are being selected such that the distance separating their centroid from customer location is minimal. Customer exchanges occur as soon as the solution improves, i.e., we use a “first admissible” improving solution strategy. As for the RS_M mutation operator, it focuses on exchanges involving one illegal customer visit. In that scheme, each illegal visit in a route is exchanged with an alternate legal one or two-customer visit sequence in order to generate a new set of customers with either violated or non-violated temporal constraints. The IEE_M (intra-route edge exchange) mutation operator is similar to EE_M except that customer migration is restricted to the same route.The RSR_M (reinsert shortest route) mutation operator eliminates the shortest route of the solution, reducing by one the total number of routes. Customers from the shortest route are first removed. Then, following an iterative process, various solutions are explored, in which unvisited customers are reinserted within existing routes using the insertion heuristic. The RC_M (reorder customers) mutation operator is an intensification procedure intended to reduce total traveled distance of feasible solutions by reordering customers within a route. The procedure consists in repeatedly reconstructing a new tour using the sequential insertion heuristic I1.A cycle of the hybrid genetic algorithm is specified as follows:p=1Repeat{evolve population Popp—new generation}Forj=1.npdoSelect two parents from PoppGenerate a new solution Sjusing crossover and mutation operators associated with PoppAdd Sjto Poppend forRemove from Poppthe npworst individuals using the evaluation function (Eq. (6))p=p+1Until(all populations Popphave been visited)Apply the post-processing procedure on the best solution {customer reordering}Population migration {local best solutions exchange across populations}Individual fitness is computed as follows:Population Pop1:(4)fitnessi=di+∑c=0nαcmax{0,bci−lc}+βVioliPopulation Pop2:(5)fitnessi=∑c=0nαcmax{0,bci−lc}+βVioliwhere diis the total traveled distance related to individual i, n is the number of customers (c=0 refers to the depot), αcis the penalty associated with time window constraint violation c,bciis the scheduled time to visit customer c in individual i, lcis the latest time (upper bounds of time window) to visit customer c, β is the penalty associated with the number of violated time window constraints, and Violiis the number of time window constraints violated in individual i.Better individuals generally (but not necessarily) tend to include short total traveled distance in Pop1 and satisfy as many temporal constraints as possible in Pop2.

@&#CONCLUSIONS@&#
