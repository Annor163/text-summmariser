@&#MAIN-TITLE@&#
Security constrained multi-period optimal power flow by a new enhanced artificial bee colony

@&#HIGHLIGHTS@&#
Presenting a new operation function for power systems, i.e. DSCOPF.Proposing a new stochastic search method named EABC.Adapting the proposed EABC as the solution approach of DSCOPF.Extensive testing of the presented model and solution approach.

@&#KEYPHRASES@&#
DSCOPF,EABC,Inter-temporal constraints,Multi-period framework,

@&#ABSTRACT@&#
Security constrained optimal power flow (SCOPF) is an important operation function for dispatching centers of current power systems. It optimizes operating conditions of the system, while saves its security. However, SCOPF in its present form focuses on a single time interval, which is known as static SCOPF. A multi-period SCOPF model, referred to as dynamic SCOPF (DSCOPF) in this paper, is presented. It extends static SCOPF to multi-period frameworks considering the inter-temporal constraints. The proposed DSCOPF is a more practical operation function and can optimize operating conditions of the system more realistically compared to traditional SCOPF. Moreover, to solve this DSCOPF model, considering its nonlinear and non-convex behavior, a new stochastic search method is presented, which is an enhanced version of artificial bee colony (ABC) algorithm. The proposed enhanced ABC (EABC) has high exploration capability and can discover different areas of the solution space. Also, it is a robust algorithm and has low sensitivity with respect to the initial population. Effectiveness of the proposed EABC is extensively illustrated on various test cases.generation cost coefficients of ith unit with valve loading effectsdown ramp rate limit of ith unitgeneration cost function of ith unitconductance and susceptance of the branch connected between ith and jth buses, respectivelynumber of branchesnumber of buses, number of buses excluding the slack buses and number of PQ buses, respectivelynumber of shunt compensatorsnumber of fuel options of ith unitnumber of units of the power systemnumber of POZs for ith unitnumber of phase shiftersnumber of prohibited operating zones of ith unitnumber of tap-changing transformerslower and upper bound for kth prohibited operating zone (POZ) of ith unitminimum and maximum active power generation limits for ith unitactive power generation and demand of ith bus in hour t, respectivelya vector including all PG,i,tvariablesphase shifter setting for ith phase shifter in hour tminimum and maximum limits for ith phase shifter settingreactive power injection of ith shunt compensator in hour tminimum and maximum limits for reactive power injection of ith shunt compensatorminimum and maximum reactive power generation limits for ith unitreactive power generation and demand of ith bus in hour t, respectivelynumber of hours of the operation horizontap-changer setting for ith transformer in hour tminimum and maximum limits for ith tap-changer settingup ramp rate limit of ith unitvoltage magnitude of ith bus in hour tminimum and maximum limits for voltage magnitude of ith busapparent power flow of kth branch in hour tapparent power flow limit for kth branchsystem reserve required in time interval tphase angle difference between buses i and j in hour t

@&#INTRODUCTION@&#
Economic dispatch (ED) is one of the most important nonlinear optimization problems in the operation of power systems. In this problem, to meet the system load with the lowest possible cost, the optimal output of electricity generation facilities is determined. For this purpose, the operational constraints of the system and available resources should be considered. Optimal power flow (OPF) is an extension of the conventional ED problem. OPF determines the optimum operating state of power system considering the other control variables, such as voltage set-point of generators and settings of tap-changing transformers, phase shifters and shunt compensators in addition to active power output of generators. OPF includes nodal balance constraints in addition to ED limits. A review of different ED and OPF models and their solution methods can be found in [1,2].Taking into account the importance of security for power system operation, security constraints, such as branch flow and voltage magnitude limits, are incorporated into ED and OPF operation functions leading to security constrained ED (SCED) [3] and security constrained OPF (SCOPF) [4,5], respectively. SCED is usually considered as a sub-problem of security constrained unit commitment (SCUC) [6,7] and SCOPF is extensively used in today power system dispatching centers. Different SCOPF formulations, including the objective functions and constraints, as well as their solution methods have been reviewed in [8,9].ED and OPF models usually focus on a single time period also called static ED [10,11] and static OPF [12,13]. In another extension for ED and OPF, recently introduced in the literature, these operation functions have been extended to multi-period frameworks known as dynamic ED (DED) [10,11] and dynamic OPF (DOPF) [12,13]. Combination of the both enhancements, i.e. considering security constraints and multi-period operation framework, for ED is suggested in [14] leading to DSCED model. In this paper, the more complete operation function of DSCOPF is proposed. Compared to DSCED only including the control variables of generator outputs, the proposed DSCOPF can optimize operating state of the power system taking into account all control variables of OPF. Moreover, by including security constraints, not considered in ED, OPF, DED and DOPF, the proposed DSCOPF can provide both secure and economic operating conditions for the system. Finally, by modeling multi-period operation and inter-temporal ramping limits, DSCOPF can provide a more realistic power system operation model compared to ED, OPF, SCED and SCOPF. Thus, DSCOPF can more accurately and comprehensively model the operating state of power system in comparison with the previous operation functions, presented in the industrial software packages or academic literatures, including ED, OPF, SCED, SCOPF, DED, DOPF and DSCED. To the best of the authors’ knowledge, DSCOPF has not been presented in the previous research works in the area and is specific to this paper.Another main contribution of the paper is presenting a new solution approach for solving DSCOPF. In the following, the recent solution methods presented for SCOPF and DOPF, which are more relevant problems to DSCOPF, are briefly reviewed. Then, the outline of the proposed solution approach is introduced.An improved version of bacterial foraging algorithm including a differential evolution-based mutation operation, aiming to enhance the exploration capability of the algorithm, is presented for solving SCOPF problem in [9]. Multi-constraint optimal power flow problem including valve point effect and security constraints is solved by biogeography based optimization (BBO) in [15]. A hybrid algorithm composed of sequential quadratic programming and differential evolution is presented for solving SCOPF problem including two objective functions of fuel cost with valve point effects and transmission line losses [16]. A robust differential evolution algorithm is proposed for solving SCOPF considering valve point effects, multi-fuel option and prohibited operating zone constraints of units in [4]. Two objective functions of generation cost and voltage stability margin are taken into account in [4]. Multi-agent differential evolution is proposed for solving SCOPF including unit generations (except slack bus), unit voltages and transformer tap settings as the control variables in [17]. In [18], a bi-level optimization approach is presented in which ED is first solved in the lower level and using its results as the initial solution, SCOPF is solved in the upper level. Both the levels of the bi-level approach use an enhanced version of gravitational search algorithm as the optimization method.In [12], an algorithm based on nonlinear primal dual interior point method (PDIPM) is presented for solving DOPF problem. Also, a three-stage solution procedure to implement the PDIPM algorithm is proposed in [12]. Another solution approach, based on decomposed predictor-corrector interior point method (DPCIPM), to solve DOPF problem is presented in [13]. As DOPF is a large-scale and nonlinear optimization problem, the Karush–Kuhn–Tucker (KKT) system in DPCIPM is decomposed into subsystems, such that the size of each subsystem only depends on the size of the network.DSCOPF is a more complex optimization problem than SCOPF and DOPF as it includes more nonlinear, mixed-integer and inter-temporal constraints and variables. In this paper, a new stochastic search method, i.e. EABC, is presented to solve DSCOPF. EABC is composed of ABC, harmony search (HS), improved particle swarm optimization and chaotic search techniques. Search abilities of these methods are combined in the proposed EABC to enhance its exploration capability, which is the key issue for solving DSCOPF problem considering its complex high-dimensional solution space. Also, a new hybrid constraint handling method is suggested to process the large number of DSCOPF constraints and generate feasible solutions for it.The new contributions of this paper can be summarized as follows:1.A new operation function for power systems, i.e. DSCOPF, is presented. Compared to the previous operation functions of ED, OPF, SCED, SCOPF, DED, DOP and DSCED, the proposed DSCOPF can more comprehensively model the operating conditions of a power system as described previously.A new stochastic search method, named EABC, is proposed. Although ABC is a simple basic evolutionary algorithm, it presents a flexible framework for hybridizing with other evolutionary operators and algorithms. This is due to different bees (i.e. individuals) with different characteristics used in the structure of ABC. Using the flexible structure of ABC, EABC incorporates the positive features of harmony search (HS) and particle swarm optimization (PSO), chaotic tent map, Deb's rule based on tournament selection, new probability assignment, and opposition-based learning into ABC. These features give high search ability to EABC, which makes it an effective solution approach for solving the complex optimization problem of DSCOPF.The remaining parts of the paper are organized as follows. In Section 2, the formulation of the proposed DSCOPF model is introduced. The suggested solution approach, including EABC and hybrid constraint handling method, is presented in Section 3. Solving DSCOPF problem by the proposed solution approach is detailed in Section 4. The results obtained from extensive testing of the proposed approach are presented in Section 5 and compared with the results of several other optimization methods. Section 6 concludes the paper.As an optimization problem, objective function, constraints and decision variables should be introduced for the proposed DSCOPF model. The objective function of DSCOPF, denoted by OF(.), is as follows (the variables of this section are defined in the Nomenclature):(1)MinOF(PG)=Min∑t=1T∑i=1NGFi(PG,i,t)Fi(PG,i,t) is conventionally considered to be a quadratic function [5,9]:(2)Fi(PG,i,t)=ai+biPG,i,t+ci(PG,i,t)2,1≤i≤NGHowever, by considering the valve-loading effects of units in practice, a recurring rectifying sinusoidal term is added to the quadratic fuel cost function of (2) as follows [4]:(3)Fi(PG,i,t)=ai+biPG,i,t+ci(PG,i,t)2+disineiPG,imin−PG,i,t,1≤i≤NGIn (3), diand eiare part of coefficients pertaining to generation cost function with valve loading effect. These coefficients depend on the unit characteristics and should be provided by the manufacturer. Moreover, there are many generating units supplied with multiple fuel options. As an example, most of thermal units in Iran's power system at least have two fuel options of natural gas and diesel oil. In the case of these units, unlike the conventional generation cost function, the cost function becomes a piecewise nonlinear function, reflecting the effects of fuel type changes, in which each segment gives information about the type of fuel being burned and operational characteristics of the unit. So, the generation cost function for ith unit considering multi-fuel option becomes as follows [7]:(4)Fi(PG,i,t)=ai1+bi1PG,i,t+ci1(PG,i,t)2fuel 1,Pi1min≤Pi,t≤Pi1maxai2+bi2PG,i,t+ci2(PG,i,t)2fuel 2,Pi2min≤Pi,t≤Pi2max⋮⋮aij+bijPG,i,t+cij(PG,i,t)2fuelj,Pijmin≤Pi,t≤PijmaxNote thatPG,ij−1max=PG,ijmin. Although there are thermal units that can change their fuel type without needing restarting, (4) does not mean that a multi-fuel generator should change its fuel type suddenly. This equation presents a well-known model for units with multi-fuel option, which is adopted in several other ED and OPF research works, such as [4,26–28]. The model of (4) only specifies that which fuel should be used in which range. However, change of fuel type should be performed according to the unit characteristics. By integrating valve loading effects and multi-fuel option, the generation cost function becomes as follows:(5)Fi(PG,i,t)=aij+bijPG,i,t+cij(PG,i,t)2+dijsineijPG,ijmin−PG,i,tif fuelj:PG,ijmin≤PG,i,t≤PG,ijmax,j=1,…,NFii=1,…,NGt=1,2,…,TThe practical objective function OF(.), used in the proposed DSCOPF model, is constructed by substituting the integrated generation cost function of (5), i.e. Fi(PGi,t), in (1). The constructed OF(.) is nonlinear, non-smooth and non-convex.The constraints of the proposed DSCOPF model are as below:Static constraints are the operational constraints separately considered for each time interval as follows:1)AC Power flow constraints:(6)PG,i,t−PD,i,t=Vi,t∑j=1BNVj,t(Gijcosθij,t+Bijsinθij,t)i∈NB−s,t∈T(7)QG,i,t−QD,i,t=Vi,t∑j=1BNVj,t(Gijsinθij,t−Bijcosθij,t),i∈NPQ,t∈TOperating range limits of units:(8)PG,imin≤PG,i,t≤PG,imaxi∈NG,t∈T(9)QG,imin≤QG,i,t≤QG,imaxi∈NG,t∈TProhibited operating zone (POZ) constraints of units:(10)PG,imin≤PG,i,t≤PG,i,1LBPG,i,k−1UB≤PG,i,t≤PG,i,kLBk=2,3,...,NPZiPG,i,kUB≤PG,i,t≤PG,imaxk=NPZii∈NG,t∈TMinimum and maximum Bus voltage magnitude and maximum branch flow limits (security constraints):(11)Vimin≤Vi,t≤Vimax,i∈NB,t∈T(12)Sk,t≤Skmax,k∈L,t∈TThe security constraints (11) and (12) can also be considered in the post-contingent state of credible contingencies, in addition to normal state, to take into account the impact of contingencies in the DSCOPF model [4].Minimum and maximum limits for discrete transformer tap settings, phase shifter settings, and shunt compensators’ reactive power injections representing their allowable operating ranges:(13)TPimin≤TPi,t≤TPimax,i∈NT,t∈T(14)PSimin≤PSi,t≤PSimax,i∈NPS,t∈T(15)Qc,imin≤Qc,i,t≤Qc,imax,i∈NC,t∈TSystem spinning reserve requirements(16)∑i=1NGmin(PG,imax−PG,i,t,URi)≥SRRt,t∈T1) Generator's ramp rate limits:(17)PG,i,t−PG,i,t−1≤URi,PG,i,t−1−PG,i,t≤DRi,i∈NG,t∈TAs DSCOPF problem is solved after determining unit commitment, the commitment variables and their associated constraints, such as minimum up/down time limits of units, are not considered within the DSCOPF model.In the following sections, the stochastic search method of artificial bee colony (ABC) is briefly reviewed and then the proposed enhanced ABC (EABC) approach is presented.The Artificial Bee Colony (ABC) algorithm is an evolutionary technique, first developed by Karaboga in 2005 [19], and later advocated by Basturk [20]. ABC simulates the intelligent foraging behavior of honey bee swarms. It is a simple, efficient and population based stochastic optimization method. In the ABC algorithm, the colony of artificial bees contains three groups of bees: employed bees, onlookers and scouts. A bee going to the food source, visited previously by itself, is named an employed bee and the bee expecting on the dance area for making decision to choose a food source is known as onlooker. Scouts are bees that randomly search for new food sources. The employed bee whose food source is exhausted by the employed and onlooker bees becomes a scout.In the ABC algorithm, each iteration of the search consists of three steps: sending the employed bees toward the food sources and then measuring their nectar amounts; selecting the food sources by the onlookers after sharing the information of employed bees and determining the nectar amount of the foods; determining the scout bees and then sending them for finding new food sources.In ABC algorithm, the position of a food source represents a possible solution for the optimization problem and the nectar amount of a food source indicates the quality (fitness) of the associated solution. The performance of ABC algorithm can be summarized as the following step-by-step procedure:Step (1) Initialization: ABC algorithm randomly generates a number of food source positions, called initial population, including NP solutions (NP denotes the size of population). Each food source for ABC algorithm, i.e. each candidate solution for the optimization problem, is a D-dimensional vector denoted by Xias follows:(18)Xi=[xi1,xi2,…,xiD],i=1,2,…,NPwhere D indicates number of decision variables of the optimization problem and xijrepresents value of the jth decision variable in ith candidate solution. The initial population is divided into two groups of employed bees and onlookers, each one including NP/2 individuals. Iteration number of ABC, denoted by c, is set to 1.Step (2) Employed bees’ phase: The position of each employed bee is changed as follows:(19)x′ij=xij+j(xij−xkj),i=1,2,…,NP/2,j=1,…,Dwhere x’ijindicates the changed value of xij; k in xkjis a random number in the range 1≤k≤NP/2 such that k≠i; φ is a setting of ABC in the range of (−1,1) that controls the search radius for the neighboring food sources around xijusing the difference vector. Higher absolute values of φ result in larger search steps and faster convergence, but with the cost of lower resolution and higher possibility of missing good solutions in the search area.Step (3) Greedy selection process: Nectar amount of the new food source is compared with the previous one. For this purpose, the fitness value of the new candidate solution X’i=[x’i1,x’i2,…,x’iD] for the optimization problem, denoted by fit(X’i), is compared with the fitness of its previous position Xi, i.e. fit(Xi). If fit(X’i)>fit(Xi), Xiis replaced by X’i; otherwise, Xiis retained and X’iis ignored.Step (4) Probability calculation for onlookers: An onlooker bee evaluates the nectar information taken from the employed bees and selects a food source with a probability obtained from its nectar amount as follows:(20)ρi=fit(Xi)∑n=1NP/2fit(Xn)where ρirepresents the probability of selecting ith employed bee.Step (5) Onlooker bees’ phase: Since∑i=1NP/2ρi=1, the interval [0,1] is divided into the ρiprobabilities as shown in Fig. 1. Then, a random number with uniform distribution is generated within [0,1] to select an employed bee. Thus, a fitter employed bee, owning higher value of fit(Xi) and so higher ρiprobability, has more chance to be selected by the onlookers. After selecting employed bee by an onlooker, it updates its position using (19) with xkjindicating the selected employed bee and xijand x’ijrepresenting the previous and updated position of the onlooker. The new position of the onlooker is selected between its previous and updated positions based on the greedy selection process similar to step 3.Step (6) Scout bees’ phase: If a solution (employed bee or onlooker bee) has not been improved in a predetermined number of iterations, denoted by “lim”, it becomes a scout bee that randomly searches for new food sources. To implement this within the ABC algorithm, the non-improved solution is replaced by a new position randomly generated within the feasible search space. It is assumed that only one solution can be replaced in each iteration.Step (7) Stopping condition: If c<cmax (maximum number of iterations), increment c and go back to step 2; otherwise return the best solution with the highest fit(.) value in the last iteration as the final solution of the optimization problem.EABC includes major modifications applied to steps (2,5), 3, 4 and 6 of ABC. These modifications are introduced in the following:Modification of steps 2 and 5. In this modification, (19) is first replaced by the following Eq. (21):(21)x′ij=xij+φij(xij−xkj)ifRij1≤MR1xij+ψij(xijpbest−xij)ifRij1>MR1&Rij2<MR2&Rij3<γxij+ψij(xjgbest−xij)ifRij1>MR1&Rij2<MR2&Rij3≥γxijifRij1>MR1&Rij2≥MR2i=1,2,…,NP/2,j=1,…,DwhereRij1,Rij2andRij3are uniformly distributed random real numbers in the range of [0,1], separately generated for jth decision variable of ith employed bee; MR1 and MR2 are two thresholds randomly chosen within the range [0,1] in each iteration of EABC. Based on the values ofRij1,Rij2andRij3compared to the settings MR1 and MR2, one of the four relations of (21) is selected for generatingx′ijfrom xij. This part of (21) has been inspired from harmony search (HS) algorithm. The first relation of (21) is similar to (19) except that a separate value of φ, i.e. φij, is used for each decision variable of each employed bee to enhance the search diversity of the proposed EABC algorithm. In the second and third relations of (21), jth decision variable of the best position of ith employed bee found so far, denoted byxijpbest, and jth decision variable of the best position of all bees found so far, denoted byxjgbest, are used instead of xij. In other words, the cognitive and social behaviors of the individuals are used for updating their positions in (21) similar to particle swarm optimization (PSO) algorithm. Thus, the positive features of HS and PSO algorithms are combined within the proposed EABC to enhance its exploration capability and search efficiency. The coefficients ψijin the second and third relations of (21) control the search radius like φijcoefficients in the first relation, except that φijcoefficients are in the range of (−1,1), while ψijvalues are in the range of (0,1) similar to the acceleration constants of PSO [21]. To further enhance the search diversity of EABC, φijand ψijcoefficients are generated based on chaotic tent map as follows [11]:(22)ψi,j+1=2ψijif0≤ψij≤0.52(1−ψij)if0.5≤ψij≤1(23)φij=2ψij−1In the chaotic tent map of (22) and (23), the first ψijcoefficient, i.e. ψi1, is randomly selected in the interval (0,1) such that ψi1∉{0, 0.25, 0.5, 0.75, 1}. Then, using ψi1 value, the next ψijcoefficients as well as φijcoefficients are generated successively based on (22) and (23). Finally, the limit of γ in (21) is set as follows:(24)γ=1−ccmaxIn other words, as the EABC algorithm proceeds, the contribution of the social behavior increases such that in the last iterations, when the algorithm converges, mostlyxjgbestis selected and EABC implements a local search around the best solution of the population obtained so far to find more optimum solutions as much as possible. Consequently, the proposed EABC adaptively improves exploration and exploitation capabilities of its search process. In the initial iterations, when the algorithm needs to searching and covering different areas of the solution space, EABC enhances the exploration capability of the search process. On the other hand, in the last iterations, when the algorithm needs to high-resolution search in the promising areas found so far, EABC improves the local search ability or exploitation capability.Modification of step 3. Satisfying the constraints and generating feasible solutions is a major concern for solving DSCOPF by a stochastic search method like ABC, as DSCOPF includes a large number of complex constraints. To remedy the problem, in this modification, the greedy selection process of step 3 is replaced by Deb's rule, which is based on tournament selection for driving the solutions from infeasible region of the search space to feasible region [22]. Using Deb's rule, step 3 of EABC is changed as follows:-When comparing new candidate solution X’iwith the previous position Xi, feasible solution (without violation from the constraints) is always preferred to infeasible solution (with violation from the constraints). Thus, if X’iis feasible and Xiis infeasible, X’iis selected and vice versa.If both Xiand X’iare feasible, the solution having better objective function value (i.e., higher fitness value) is selected.If both Xiand X’iare infeasible, the solution having lower violation from the constraints is selected.In the above selection process, proposed for EABC, both feasibility and fitness of solutions (with higher priority for feasibility) are considered for choosing the solution between Xiand X’i, while in the selection process of ABC only fitness of the solution is taken into account. Also, the proposed selection process has another important advantage. For solving complex constrained optimization problems, such as SCOPF and its variants, stochastic search methods usually use penalty terms, penalizing violations from the constraints, to conduct the search process to the feasible regions of the solution space [15–18]. However, selecting appropriate penalty factors for solving SCOPF, owning a lot of various constraints, is not an easy task. Excessive values of penalty terms may lead to trapping the algorithm in local minima, while underestimate of penalty terms may result in final infeasible solutions. Based on the proposed search process, EABC can avoid from penalty terms for satisfying constraints, since this process automatically conducts EABC toward the feasible region of the solution space.Modification of step 4. In this modification, (20) for probability calculation is changed as follows:(25)ρi=0.5+0.5RFiifith solution is feasible0.51−Violation(Xi)∑n=1NP/2Violation(Xn)ifith solution is infeasiblewhere RFi(relative fitness of ith employed bee) is calculated as below:(26)RFi=fit(Xi)−Minn∈{feasible employed bess}(fit(Xn))Maxn∈{feasible employed bess}(fit(Xn))−Minn∈{feasible employed bess}(fit(Xn))Also, Violation(Xi) in (25) indicates violation of ith solution from the constraints. If Xiis a feasible solution, Violation(Xi)=0. According to (25) and (26), probability values of infeasible solutions are in the range of [0,0.5) such that lower violations lead to higher probabilities. Also, probability values of feasible solutions are in the range of [0.5,1] such that higher fitness values, i.e. higher fit(Xi) values, result in higher RFiand so higher ρi. Thus, consistent with the modification of step 3, this modification assigns higher probabilities to the feasible solutions (employed bees), which further conducts the search process of EABC toward the feasible region.Modification of step 6. The non-improved solution is replaced by a new solution based on opposition-based learning (OBL) as follows [23]:(27)xjOB=xjc+r(xjc−xjNI)ifLBj≤xjNI≤xjcxjc−r(xjNI−xjc)ifxjc<xjNI≤UBj1≤j≤D(28)xjc=UBj+LBj2wherexjOBis jth decision variable of the generated solution based on OBL, i.e. scout bee;xjNIis jth decision variable of the non-improved solution; LBjand UBjare the lower and upper bounds of jth decision variable; r is a uniformly distributed random real number in the range of [0,1]. While step 6 of ABC replaces the non-improved solutions in a completely random way, step 6 of EABC replaces these solutions by their opposite ones with respect to the center of the allowable region, denoted byxjc. The proposed OBL-based scout bee generation method aims to generate the substitutes, which are dissimilar to the non-improved solutions as much as possible. The non-improved solutions represent non-promising areas of the solution space and by the aid of (27) and (28) EABC can quickly escape from these areas.Application of the proposed EABC approach for solving the DSCOPF problem with the model given in Section 2 can be summarized as the following step-by-step algorithm (steps of this algorithm are shown by 1A-6A to discriminate them from the steps of the step-by-step procedure of Section 3.1):Step (1A): The values of EABC settings including NP and cmax are selected based on the engineering judgment. Selecting appropriate values for settings is a problem with most of stochastic search methods as it depends on the experience of the user. However, the proposed EABC as a population-based stochastic search method has the minimum number of settings only including population size and number of iterations.Step (2A): For solving DSCOPF problem, decision variables of every individual of the EABC population are as follows:(29)Xi=[Hi1,Hi2,…,HiT],i=1,2,…,NP(30)Hit=[PG,2,t,…,PG,NG,t,V1,t,…,VNG,t,TP1,t,…,TPNT,t,PS1,t,…,PSNPS,t,Qc,1,t,…,Qc,NC,t],t=1,…,Ti=1,2,…,NPAs indicated in (29), each sub-vectorHitof the vector of decision variables Xi(i.e., solution Xi) includes decision variables of the DSCOPF problem for hour t. These decision variables consist of generation of units (except the generation of slack bus PG,1,t, which is determined by AC power flow), voltage set-points of generators, transformer tap settings, phase shifter settings, and shunt compensator settings as shown in (30). Thus, the number of decision variables D, indicated in (18), for DSCOPF problem is as follows:(31)D=[(NG−1)+NG+NT+NPS+NC]×TDecision variables of every individual of EABC population, with the structure shown in (29) and (30), are randomly initialized within the allowable ranges. Then, the generated initial population is randomly divided into two equal subsets as employed bees and onlookers.Step (3A): For each individual of EABC population, AC power flow is solved. From the AC power flow results, possible violations of slack generation, i.e. PG,1,t, from its limits (8), (10) and (17), violations of PQ bus voltages from their limits (11), violations of branch flows from their limits (12), and violations from system spinning reserve requirements (16) for each individual are calculated. As the decision variables of each initial individual are generated within the allowable ranges, violation of generator outputs, other than the slack generator, from (8), (10) and (17) does not occur. Since, the DSCOPF computations are performed in per unit system, the calculated violations can be added to each other to obtain total violation of the individual, denoted by Violation(Xi) in (25). Additionally, for each individual of EABC population, the objective function OF(.), given in (1), is computed. As OF(Xi) should be minimized, while the fitness function fit(Xi) in EABC algorithm is maximized, the fitness is set as fit(Xi)=−OF(Xi).Step (4A): After calculating Violation(Xi) and fit(Xi) for all individuals, the EABC population is evolved (i.e., the new positions of the employed bees, onlookers and scout bees are determined). The evolution process is performed according to the steps 2–6 of the step by step procedure given in Section 3.1 comprising the modifications described for the steps 2, 3, 4, 5 and 6 of EABC in Section 3.2. In step 6 of EABC, lim is set to 0.1cmax.Step (5A): For the employed bees and onlookers that their positions have been changed (i.e. new values for their decision variables are obtained), their decision variables should be in the allowable ranges. These allowable ranges are indicated by (8), (10) and (17) for active power generations (i.e., PG,2,t, …, PG,NG,t), (11) for generator voltages (i.e., V1,t, …, VNG,t), (13) for transformer tap settings (i.e., TP1,t, …, TPNT,t), (14) for phase shifter settings (i.e., PS1,t, …, PSNPS,t) and (15) for shunt compensator settings (i.e., QC,1,t, …, QC,NC,t). The violations of voltage set-points of generators, transformer tap settings, phase shifter settings, and shunt compensator settings from their allowable ranges are alleviated by ‘random reflection method’ as follows:(32)xijRef=xijmin+Rand×(xijmin−xij)ifxij<xijminxijifxijmin≤xij≤xijmaxxijmax−Rand×(xij−xijmax)ifxij>xijmax,1≤i≤NP,1≤j≤Dwhere[xijmin,xijmax]represents the allowable range for the decision variable xij(e.g.[TPimin,TPimax]for TPi);xijRefis the reflected value of xij, which has no violation from the allowable range[xijmin,xijmax]. As the active power generations PG,2,t, …, PG,NG,thave POZ limits (10) and ramp rate constraints (17) in addition to operating range limits (8), for alleviating the violations of active power generations from their allowable ranges, the ‘random reflection method’ of (32) is first run with the range[PG,imin,r,PG,imax,r]for PG,i,t(i=2, …, NG) specified below:(33)PG,imin,r=Max{PG,imin,PG,i,t−1−DRi}(34)PG,imax,r=Min{PG,imax,PG,i,t−1+URi}In other words, the range[PG,imin,r,PG,imax,r]is ramp rate constrained operating range of PG,i,t. Thus, after this random reflection, the violation from the constraints (8) and (17) is alleviated. However, after the random reflection, the reflected value of PG,i,t, denoted byPG,i,tRef, may fall in a POZ leading to violation from the constraints (10). For instance, suppose thatPG,i,tReffalls in the kth POZ of ith unit, i.e.[PG,i,kLB,PG,i,kUB]. The following modification, known as the cut to the closest boundary, is performed onPG,i,tRefto release it from the POZ:(35)PG,i,tm,Ref=PG,i,kLBifPG,i,kLB≤PG,i,tRef≤PG,i,kLB+PG,i,kUB2PG,i,kUBifPG,i,kLB+PG,i,kUB2≤PG,i,tRef≤PG,i,kUBwherePG,i,tm,Refis the modified reflected value of PG,i,t, which has been released from the POZ. Otherwise, ifPG,i,tRefdoes not fall in any POZ,PG,i,tm,Ref=PG,i,tRef. Consequently, using (32)–(35), violations of all decision variables of each EABC individual (if existent) are alleviated.Step (6A): The stopping condition of EABC, i.e. step 7 of the step-by-step procedure of the Section 3.1, is run, except that if c<cmax, the step-by-step algorithm here returns to its own step 3A.Tap setting is a discrete control variable. These integer control variables are first converted to real variables in the same range, e.g. the range of[TPimin,TPimax]for ith tap setting. In this way, we can avoid the integer variables and DSCOPF becomes a nonlinear programming (NLP) problem instead of mixed-integer nonlinear programming (MINLP) problem. After solving the NLP form of DSCOPF by the proposed solution approach, the result obtained for each tap setting is rounded up/down to the closest integer value to be applicable in the real system. This is a common practice in the literature to cope with integer control variables in SCOPF problems, adopted, for instance, in [4,5,9,11,15,16,18,24–28,33].The proposed solution approach based on EABC, described in Section 4, is tested on IEEE 9-bus, 30-bus, 118-bus and 300-bus test systems. However, as described in Section 1, DSCOPF is a new operation function presented in this paper. Thus, we could not find any other research work solving DSCOPF so that we can compare our results with its results. Consequently, to compare the results of the proposed solution approach with the published literature figures, we first solve simpler versions of DSCOPF, i.e. SCOPF and DSCED that have been solved in the previous research works. In this way, we can compare our results with the published literature figures for better illustrating the effectiveness of the proposed solution approach. Afterward, DSCOPF problem is solved by the proposed approach and its results are compared with the results of some other alternative methods developed in this research. Number of units and branches of the test systems employed in this section are shown in the second and third columns of Table 1to give an insight about the size of the test systems. Based on the available data, each of these test systems is used in SCOPF, DSCED or DSCOPF problems as indicated in the last column of Table 1. The scheduling horizon for SCOPF is one hour and for DSCED and DSCOPF is 24h in the numerical experiments of this paper.The values of EABC settings, including NP and cmax, as well as the run time of EABC for each test case are shown in Table 2. The values of EABC settings for each case study are selected based on a few trial runs. In other words, EABC is run a few times using different values for the settings. The parameter values that lead to the best results among the runs are selected. This is a common practice in the literature to adjust the parameters of stochastic search methods used, for instance, in [11,25,33,38–40]. All run times reported in this table are measured on the simple hardware set of 64-bit computer with 8 GB of RAM and Intel Core i7-4500U CPU@ 2.4GHz by means of the computer timer. Also, the proposed solution approach is implemented within the MATLAB software package version 2013 using MEX function programming to decrease the computation time. The computation times of EABC are not compared with the computation times of the other solution approaches reported in this section, since the computation times of the other methods are not reported in their corresponding references or measured on different hardware sets (and so are not comparable with our computation times). It is seen that the maximum computation time of the EABC for the SCOPF is about one minute, which is related to IEEE 300-bus test system, and for DSCOPF is around 18min, which is related to IEEE 118-bus test case. The 1-min and 18-min maximum computation times are completely acceptable within 1-h and 24-h decision-making frameworks of SCOPF and DSCOPF, respectively.Test Case 1: SCOPF on IEEE 9-bus test system (reference of data: [24]). For all SCOPF test cases of this paper, the objective function is as described in Section 2 considered for one hour (i.e. T=1) and the constraints consist of (6)–(15). This SCOPF test case includes nine decision variables, which consist of two active power generations, three generator voltage set-points, two tap settings and two shunt capacitor settings (this test case does not include phase shifter). The results obtained from the proposed EABC for this test case are shown in Table 3and compared with the results of five other methods. The results of the other methods are directly quoted from their corresponding references indicated in Table 3. For each method of this table, the best, average and worst results among 20 trial runs are reported. The average and worst results of BBO are not reported in its corresponding reference [15]. Table 3 shows that the best, average and worst results of the proposed EABC are better than the best, average and worst results of the five other methods. The values of the decision variables and PG1 for this test case in the best solution of EABC are reported in Table 4.Test Case 2: SCOPF on IEEE 30-bus test system (reference of data: [25]). This test case includes 15 decision variables, which consist of 5 active power generations, 6 generator voltage set-points, and 4 tap settings. The numerical results obtained from the proposed solution approach for this test case are shown in Table 5and compared with the results obtained from 10 other methods directly quoted from their corresponding references. The average and worst results of some other methods are not reported in their corresponding references and so cannot be presented in Table 5. Table 5 shows that the best result of the proposed solution approach is better than the best result of the 10 other methods. Detailed results of the best solution of EABC for this test case are shown in Table 6. Additionally, Table 5 illustrates that the average and worst results of the proposed EABC are better than the available average and worst results of the other methods.Test Case 3: SCOPF on IEEE 118-bus test system (reference of data: [30] and [32]). This test case includes 130 decision variables, which consist of 53 active power generations, 54 generator voltage set-points, 8 tap settings, 1 phase shifter setting and 14 shunt capacitor settings. The results of the proposed solution approach for this test case are compared with the results of eight other methods in Table 7. This table shows that the best, average and worst results of the proposed EABC are better than the best, average and worst results of all eight other methods. Despite the previous test cases, detailed results of EABC for this large test case with 130 decision variables cannot be presented due to space limitation. Instead, the EABC results for IEEE 118-bus test system are evaluated from another view point. In Fig. 2, the objective function value for the best solution of EABC along the iterations is shown. The dashed vertical line illustrates the iteration from which the EABC solution becomes feasible (iteration 98 in Fig. 2). Before this iteration, the EABC evolution graph has some oscillations. Its reason can be described as follows. In the infeasible area, the EABC solutions have non-zero violations. It is possible that between two infeasible solutions, one solution has lower objective function value, but with higher violation from the constraints, than the other. Along the evolution in the infeasible area, the solution with lower violation is selected, while it has higher objective function value. This leads to some oscillatory behaviors (selection of a solution with higher objective function value in the next iteration) of EABC algorithm in the infeasible area. However, after entering the feasible area, the oscillatory behavior of EABC is disappeared as the best individual is selected among the feasible solutions based on the objective function value. The monotonically decreasing behavior of EABC in the feasible area can be seen from Fig. 2. Although the evolution graph of EABC in Fig. 2 may seem to be a straight line from about iteration 600, indeed the objective function value decreases with a slight slope from iteration 600 to 1000.Test Case 4: SCOPF on IEEE 300-bus test system (reference of data: [18]). This test case includes 258 decision variables, which consist of 68 active power generations, 69 generator voltage set-points, 107 tap settings and 14 shunt capacitor settings. The results obtained from the proposed solution approach for this test case are compared with the results of six other methods in Table 8. The average and worst results of the other methods are not reported in their corresponding references and so cannot be given in Table 8. On this test case, which is more complex with larger solution space than the previous test cases, effectiveness of the proposed EABC can be better illustrated. Table 8 shows that not only the best result of EABC, but also its average and worst results are better than the best result of all other methods. The EABC evolution graph for IEEE 300-bus test system is shown in Fig. 3, which is similar to Fig. 2 for IEEE 118-bus test system. Again, it is seen that the graph has some oscillatory behaviors in the infeasible area, while monotonically decreases in the feasible region.Test Case 5: DSCED on IEEE 26-bus test system (reference of data: [14]). This test case includes(5 active power generations+6 generator voltage set-points)×24h=264 decision variables.Although decision variables of DSCED problem usually include active power output of units, generator voltage set-points are also considered as decision variables here to better obtain feasible solutions in terms of voltage constraints. The DSCED model has the same objective function of the DSCOPF model described in Section 2. Also, the DSCED constraints include (6)–(12), and (16) and (17). The results obtained from EABC for this test case are shown in Table 9and compared with the results obtained from three other methods. The average and worst results of the other methods are not reported in their corresponding references. Table 9 shows that not only the best result, but also the average and worst results of the proposed EABC are better than the best result of the other methods for this test case with a large solution space. The evolution graph of EABC for this test case is shown in Fig. 4. The objective function of the best solution, illustrated in Fig. 4, includes generation cost of all 24h, while the objective functions monitored in Figs. 2 and 3 only include the generation cost of the single hour of SCOPF. Good convergence behavior of EABC for the DCED problem can be seen from Fig. 4.Test Case 6: DSCOPF on IEEE 26-bus test system (reference of data: [14] and [24]). This test case includes(5 active power generations+6 generator voltage set-points+9 tap settings+7 shunt capacitor settings)×24h=648 decision variables.The objective function of DSCOPF is as described in Section 2. Also, its constraints include all constraints (6)–(17). We could not find any DSCOPF research work so that we can compare our results with its results. Thus, for this test case and the next one, we have implemented seven recently introduced stochastic search techniques and compared the EABC results with the results of these methods. These seven methods include artificial immune system (AIS) [36], chaotic differential evolution (CDE) [11], RDEA [4], hybrid harmony search algorithm with swarm intelligence (HHS) [37], improved chaotic particle swarm optimization (ICPSO) [38], chaotic self-adaptive particle swarm optimization (CSAPSO) [39] and time varying acceleration coefficients iteration particle swarm optimization (TVAC-IPSO) [40]. These methods are implemented according to the procedures given in their corresponding references. Among these seven methods, RDEA is proposed for solving SCOPF and the other ones are presented to solve DED. The results obtained from EABC and the seven benchmark methods for solving DSCOPF problem on IEEE 26-bus test system are shown in Table 10. This table shows that the best, average and worst results of the proposed EABC are better than the best, average and worst results of all seven other methods. Even the worst result of EABC is better than the best result of all other methods. These comparisons illustrate effectiveness of the proposed EABC for solving DSCOPF problem. The evolution graph of EABC for this test case is shown in Fig. 5. In Fig. 5, the objective function of the best solution includes generation cost of all 24h similar to Fig. 4. Again, it is seen that the graph has some oscillatory behaviors in the infeasible area, while monotonically decreases in the feasible region.Test Case 7: DSCOPF on 118-bus IEEE test system (reference of data: [41]). This test case, which its data is different from test case 3, includes(53 active power generations+54 generator voltage set-points+9 tap settings+1 phase shifter settings+14 shunt capacitor settings)×24h=3144 decision variables.The results obtained from EABC for this test case are shown in Table 11and compared with the results obtained from the seven benchmark methods introduced in the previous test case. Not only the proposed EABC obtains the lowest values of the best, average and worst results among all methods of Table 11, but also the worst result of EABC is better than the best result of the other methods for this test case with a large solution space. Evolution of EABC for solving DSCOPF problem on the IEEE 118-bus test system is shown in Fig. 6, which illustrates good convergence behavior of the proposed method as well.The evolution graphs of original ABC [20] and proposed EABC for the test cases 1–7 are compared in Figs. 7–13, respectively. In Fig. 7, ABC and EABC converge to the same solution as test case 1 is a simple test case and finding its optimal solution is an easy task. At the same time, Fig. 7 shows that EABC more quickly converges to the optimal solution. However, ABC cannot find feasible solution for the other test cases as test cases 2–7 are more complex with much more constraints than test case 1. Figs. 8–13 show that there are great differences between the evolution graphs of ABC and EABC for test cases 2–7. This difference also increases for more complex test cases, such as Fig. 10 related to test case 4. Its reason is infeasibility of the ABC solution. As ABC cannot find feasible solution for these test cases, its objective function values are much higher than the objective function values obtained by EABC due to the penalty terms, penalizing the deviations from the constraints, added to the objective function of ABC.As the stochastic search techniques begin from random initial points (i.e., randomly initialized populations), different results are obtained from their different runs for the same problem. Thus, the sensitivity of these methods with respect to the initial points is an important consideration for them. The results obtained from the proposed EABC for the seven test cases illustrate its high robustness such that its best, average and worst results for different test cases are very close to each other. For instance, for test case 7, which has the largest solution space among the test cases of the paper, deviation of the best solution from the average result is: (|Best–Average|/Average)×100=(|1888336–1889147|/1889147)×100=0.04% and deviation of the worst solution from the average is: (|Worst–Average|/Average)×100=(|1894827–1889147|/1889147)×100=0.30%. These very low deviations illustrate low sensitivity of the proposed EABC with respect to initial conditions. Additionally, it should be noted that these values are the largest deviations observed in 20 runs of EABC, while lower differences may be expected between two runs of the algorithm.

@&#CONCLUSIONS@&#
