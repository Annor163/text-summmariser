@&#MAIN-TITLE@&#
Generative methods and the design process: A design tool for conceptual settlement planning

@&#HIGHLIGHTS@&#
This design tool uses a generative evolutionary design technique, which is based on multidisciplinary methods.Incorporates the complexity of organic fishing settlements as simple rules in the process of design.Allots an element's space and geometry, defines rules and relationships of the elements.Undertakes search for better solutions, evaluates the solution based on spatial, comfort and complexity criteria.Geometric optimisation, shape grammars and genetic algorithms are combined for achieving the above purposes.

@&#KEYPHRASES@&#
Design process,Modelling,Generative models,Settlement Planning,

@&#ABSTRACT@&#
This paper implores the possible intervention of computers in the generative (concept) stage of settlement planning. The objective was to capture the complexity and character of naturally grown fishing settlements through simple rules and incorporate them in the process of design. A design tool was developed for this purpose. This design tool used a generative evolutionary design technique, which is based on multidisciplinary methods. Facets of designing addressed in this research are:•allocation of each design element's space and geometry,•defining the rules, constraints and relationships governing the elements of design,•the purposeful search for better alternative solutions,•quantitative evaluation of the solution based on spatial, comfort, complexity criterions to ensure the needed complexity, usability in the solutions.Generative design methods such as geometric optimization, shape grammars and genetic algorithms have been combined for achieving the above purposes.The allocation of space has been achieved by geometric optimization techniques, which allocate spaces by proliferation of a simple shape unit. This research conducts an analysis of various naturally grown fishing settlements and identifies the features that would be essential to recreate such an environment. Features such as the essential elements, their relationships, hierarchy, and order in the settlement pattern, which resulted due to the occupational and cultural demands of the fisher folk, are analysed. The random but ordered growth of the settlement is captured as rules and relations. These rules propel and guide the whole process of design generation.These rules and certain constraints, restrictions control the random arrangement of the shape units. This research limits itself to conducting exhaustive search in the prescribed solution search space defined a priori by the rules and relationships. This search within a bounded space can be compared to the purposeful, constrained decision making process involved in designing.The generated solutions use the evolutionary concept of genetic algorithms to deduce solutions within the predefined design solution search space. Simple evolutionary concepts such as reproduction, crossover and mutation aid this search process. These concepts transform by swapping/interchanging the genetic properties (the constituent data/material making up the solution) of two generated solutions to produce alternate solutions. Thus the genetic algorithm finds a series of new solutions. With such a tool in hand various possibilities of design solutions could be analysed and compared. A thorough search of possible solutions ensures a deeper probe essential for a good design.The spatial quality, comfort quality of the solutions are compared and graded (fitness value) against the standard stipulations. These parameters look at the solution in the context of the whole and not as parts and most of these parameters could be improved only at the expense of another. The tool is able to produce multiple equally good solutions to the same problem, possibly with one candidate solution optimizing one parameter and another candidate optimizing a different one. The final choice of the suitable solution is made based on the user's preferences and objectives.The tool is tested for an existing fishing settlement. This was done to check for its credibility and to see if better alternatives evolved. The existing settlement is analysed based on the evaluation parameters used in the tool and compared with the generated solutions. The results of the tool has proved that simple rules when applied recursively within constraints would provide solutions that are unpredictable and also would resonate the qualities of the knowledge from which the rules were distilled from. The complex whole generated has often exhibited emergent properties and thus opens up new avenues of thinking.

@&#INTRODUCTION@&#
Design can be conceived of as a purposeful, constrained, decision making process, where decision-making implies a set of variables whose values have to be decided after a search process [1]. During this design process classified as routine design by Sargent [2], the designer operates within a defined schema and explores various possible solutions, which are predefined by the schema. Emergence being a property of creativity is an essential feature of the process of design. ‘Emergence introduces ambiguity and history-dependence from successive transformations by creating new shapes (or old shapes in unexpected places) which are then available to be selected for further transformation [2].’ But the emergence of new features is alone not enough – the emergent feature should evoke some new, useful meaning. Computation could enhance this multidimensional process and computational medium has the potential to address many such dimensions with greater accessibility. More than representing existing processes, computational medium could be used to rigorously explore the design solution space.A settlement design involves multiple viewpoints, alternative solutions and complex associations within larger knowledge bases, which makes the problem of generating a design solution complex. Modelling complexity is a multidimensional problem and computational medium offers wide scope in handling such issues.Real world problems are often multidimensional and complex. Researchers have been working for centuries to understand the complexity involved and to achieve a model representing the complex real. Some of the prime issues that any model has to address in order to be valid are the usefulness of the model, its comprehensiveness, its reusability and its simplicity. Initial attempts by the researchers deliberated complex systems by using a reductionist approach and more recently the synthetic or generative approach has been used. A reductionist approach is a kind of ‘kit-of-parts’ approach, which splits the complex whole into simpler parts and is undertaken mainly to develop the object manifestation or the end product [3]. On the other hand the generative does not pre-conceive the end product and could end up in different solutions for the same problem. It focuses on the relationships between elements and the dynamics involved.Reductionist models reduce complex situations to simple ones, analyse the components and synthesize the original situation. In a reductionist view each element is individually designed to enhance its property and the aggregation of individual elements as a totality were supposed to be better solutions. Reductionist models uses parameters that could reproduce the present or past correctly and is expected to predict the future by fine tuning the relevant parameters.The generative approach on the other hand can be used to model the complex changing world and its conflicting requirements by establishing relations between patterns, structures, processes, forms. It involves assumptions about the actions, behaviour and interaction of the individual agents which interact, dynamically, until macro-scale phenomena emerge – a piecing together rather than a dissection.The explicitness of the assumptions is what that differentiates the traditional models from the generative models. All assumptions in the traditional models are testable and can be fine tuned by parameters but generative models have chains of relations that may be explicit and parameterized but some of them might not be parameterized and cannot be tested or validated in principle because data and observations are not available [4]. In the context of a post modern change in the focus of design perception to processuality (evolutionary change based on some value geared directive force) [5], generative models are still justified on the premise that the processes that underpin the model are too important to refrain from though it cannot be validated against data. For example a swarming behaviour of cells could never be tested with observable data.A complex system generative model can never predict the present definitively and thus the focus changes on exploring a variety of presents – where the actual present and its variants are just different versions of some unknown future. The different outcomes of the model actually define a space of different model outcomes rather that depict different futures. This allows the model to be open and evolvable [6].However, generative models are constructed in the full knowledge of these shortcomings. It is difficult to justify this view and its rationale usually depends on intuition and the intended use of the model [4]. Also, as of now most generative models are very context specific, and it is very unlikely for a tool developed for one context to be applied in another without modifications.The process of design involves multiple viewpoints, alternative solutions and complex associations within larger knowledge bases, which makes the problem of generating a design solution more composite. A generative evolutionary methodology provides an answer to this problem [7]. It addresses the multi faceted design problem with tools that could specifically solve a particular facet of the problem such as handling data, analysing alternate solutions, involving multiple viewpoints, etc. By integrating multidisciplinary types of expertise (tools and theories) in an unconventional way, generative evolutionary methodology solves problems such as the process of design, which involves the complex interaction of multiple parameters simultaneously. It differs from other approaches in that the designer does not work directly with the materials and products but he/she works using a generative system. It uses few parameters to describe and represent the object and allows the computer to generate the object for the designer. The kind of processes that are achieved by the generative evolutionary methodology includes•The process of producing output that hitherto was implicitly hidden in the input i.e., the user gets unanticipated results for the simple input that he/she had supplied.The process of using compact and small descriptions and rules to represent very complex structures.The process of generating complex forms by the recursive use of simple theories such as self-similarity, simple algorithms.The process of selecting the best of a list of produced solutions and reproducing a variant of the solution to better suit the need.These processes have been used across various fields such as mathematics, social studies, music, urban studies, design, etc., to generate and model complex form and structure.A fishing settlement layout is a complex system. It is a complex system because there exists a structure with variations amidst all organic fishing settlements and the settlement structure is often a product of the interaction between the settlement and the environment. Most of the fishermen's settlements have organically developed and embody the complex relation between functional activities and social aspirations, which is primordial to the well being of a settlement dweller.Further the fishing occupation demands an intense interaction between the system and the environment. The structure itself is decided based on this interaction and there is a definite hierarchy of the network systems. Like all human settlements, a fishing settlement also undergoes change, growth and death due to its responsiveness to the environment. Combining time and the environment, these settlements have the property to change, grow or perish and thus adapt, which is a feature of a complex system. These fishing settlements exhibit emergence, which is an essential quality of complex systems. A small number of rules or laws, applied at a local level and among many objects or agents, are capable of generating surprising complexity in aggregate form and this is emergence. These settlements often exhibit self-organization. All of the above characteristics establish a fishing settlement as a complex system [8].The research was initiated with the following questions in mind: can the process of design of a complex system such as a human settlement layout be quantified and computed so that it could use the computer as a tool in the process of designing? How can the subjective issue of designing be logically and quantitatively represented and converted as digital data to be accommodated by the computer? Can the geometrical rigidities and prototypical approach to design be overcome? Can the self-organisational and nonlinear character of an organic settlement be represented and can it be incorporated in the process of design as a prime criterion?These questions led to the formulation of the research objectives which aimed not only at creating a model of a settlement but a tool that captures the complexity of an organic fishing settlement and that would use the computer to generate conceptual fishing settlement layouts. Generative evolutionary models whose strategies for generating possible model structures and showing their consequences rather than techniques for developing fully-fledged definitive models with strong predictive capabilities is a relevant computational tool for this process.The process of generating solutions for the design of a fishermen's settlement would consist of four layers of processing.The first layer would deal with the abstraction of the contextual design knowledge and the knowledge adapted from practice. The knowledge is abstracted to a generic template which would function as regulating factors, throughout the generation process to ensure that the generated solutions exhibit the characteristics of the desired design knowledge.The next process would involve the actual generation of the layout i.e., the conceptual plan in accordance with the abstracted knowledge. This process would derive values to the variables that define the generic template of knowledge and make it specific to the context to which the tool is applied. Then this process would represent the knowledge in visual form by proliferating space within the laid down restrictions and rules to define the shape of the different spaces like the pathways, open spaces in the layout solution. Such a procedure of space demarcation would have to be undertaken for all the functional spaces involved in the layout and at different scales. After the generation of all such spaces in the layout, the generated solution is complete.The third process involves evaluation and grading of the solution for its efficiency on some practical preferences such as optimal size and shape of spaces, internal thermal comfort, etc., without any validation that the solution is practical and of an acceptable standard, the solution remains just as a generated pattern.The final process involves the search of the design solution search space for the best solution with the most optimal efficiency as desired by the user.The initial process of abstraction of knowledge could be done using shape grammars. Shape grammar's visual-spatial learning [9] is used to abstract the complex phenomena existing in the dynamics of the settlement into simple rules and relations. Shape grammar comprehends the rules in a purely visual manner and not as atomic entities. This allows for unanticipated and accidental outcomes which is also part of the actual design process [9,10]. The grammar defines the rule lattice or the sequence of rules that should be applied while generating the layout. The applied rules specify the spaces and elements that have to be delineated and these rules would function throughout the generation of the solutions and ensure that the character of the studied settlements is reflected in the generated solutions.The second process of generating the solution as a visual representation (conceptual plan) is achieved by geometric optimization [11]. Geometric optimization performs the process of delineating and allocation of spaces. It optimizes the shape, size and the location of the elements. The process is limited to orthogonal grids and the proliferation of the space is controlled by the rules learnt and by certain governing variables controlled by the user. This process ensures that the design requirements are met while improving on the design quality.The final process involves the selection of the optimal solution after a broad search of the design solution space. The ideal generative method for this purpose is the genetic algorithm, which is the best-known search mechanism for such complex multidimensional problems [12]. Genetic algorithm or GA, which uses the concept of biological evolution as a problem-solving strategy, enables a complete search of the different possible solutions to the problem. It also evaluates each solution for its goodness or fitness.This tool uses a generative method combining shape grammar, geometric optimization and genetic algorithm and integrates it with human decision-making to make possible the generation of a conceptual design process. The designer is given an open-ended result and the designer could pick a design based on his/her choice and convictions. Such a system is free to evolve any form capable of being represented by the tool, and the evolution of such forms may well result in the emergence of implicit design concepts [7].Shape grammars treat shapes as non-atomic entities at the discretion of the designer [13], i.e., a shape is comprehended in a purely visual manner. This allows the designer to approach a problem holistically rather than in a reductionist view and allows for emergence. Emergence supports creativity because emergent features can be considered unanticipated or accidental, which is a feature of creativity.Shape grammar owes its beginning to Stiny and Gips [9,10]. In 1976, the paper ‘two exercises in formal composition’ [14] marked the beginning for many applications of shape grammars. Though the paper dealt with the application of shape grammar in art and paintings, it triggered a wide range of forthcoming applications, from mechanical engineering to architectural design. Initially, there have been a lot of shape grammatical studies to analyse a corpus of characteristic design processes for producing similar types of solutions (e.g., Ice Ray – Chinese lattice design, Architecture of Giuseppe Terragni, Frank Lloyd Wright, Glenn Murcutt, Christopher Wren, and Irving Gill, for the vernacular styles of Japanese tearooms, bungalows of Buffalo, Queen Anne houses, and Taiwanese traditional houses, and for the landscape architecture of Mughul gardens, etc.). Each shape grammar defines a language of design [15]. Design in this language is constructed by elements of the grammar. The elements of a shape grammar are: a vocabulary, spatial relations, shape rules and its initial shape. The process involves the selection of a set of spatial relations from a predefined set of spatial relations that are of interest to the designer. Shape rules are defined based on these relations, an initial shape is selected and shape rules are applied successively to an evolving shape, starting with the initial shape. Some or all the final designs are given in advance. They can reconstruct well-known designs along with a potentially infinite number of other designs that share a few of the spatial or functional characteristics observed in the original set of designs. These could serve well on a design context that involves heavily established norms of prediction of final outcome. For example, urban typologies, brand products where final outcome is important [16].The process of generation of housing layouts for fishermen's settlements involves the use of rules and relations, which are derived from the case studies and from practical knowledge. The structure on which most of the fishing settlements were ordered were analysed and were then converted as rules. The general structure of a fishing settlement consists of an open space in the beach area and the community space (which could be a religious building/institutions/commercial spaces) serves as the prime nodes of activity. The connections between the nodes are not necessarily the shortest; meandering connections add to the character. Almost all the connecting pathways lead to the beach area. Interconnecting pathways running in between pathways connecting a pathway and another or a pathway and a node, is common. The pathways form the edge or lead to the nodes, but never do they cut across the nodes. The width of the interconnecting pathways is definitely smaller than the major pathways. The interconnecting pathways are at least 2 house units apart. The periphery of the pathways and the nodes are lined with housing units. The size of the housing units did not follow any positioning rules, i.e., they were not grouped together depending on sizes or typologies. Wall to wall constructions is most common, this has happened over time due to partitioning of property within family. Most houses have a front entry and a back entry.The data collected as rules and relations from various settlements formed the base knowledge, which was then synthesized using the functional, topological and dimensional analysis.In order to obtain the formal compositions of the building elements and the knowledge pertaining to the fishermen's settlements, the typologies were analysed based on function, dimension and topology. The functional characteristics determine the activity in each zone, dimensional characteristics determine the dimensional limits and the area involved, and topological properties determine the adjacency relations between spaces [17].The community open space occurs in front of the community centre and its width and depth is variable and it is often determined by the importance of the community centre in the settlement. In settlements were the community centre is on the seashore, the beach open space and the community open space mingle with each other. The beach open space is the open space in and around the vicinity of the beach, which accommodates the fishing activities. The size and shape of it are determined by the existing physical conditions (as diagrammatically represented in Fig. 1).Pathways serve the purpose of connecting various elements. They could be categorized as two, based on their width and the elements that get connected by them, interconnecting pathways and main pathways. Interconnecting pathways are generally smaller in width when compared with the main pathways and they run in between pathways. If the settlement consists of a ‘growth prohibited zone’, that is zones where growth is restricted like dense vegetation, steep slope, etc., then there is at least one interconnecting pathway (more often more than one) leading to it. The main pathways mainly connect the beach open space and the community open space. Their width is more than the interconnecting pathways. Both the main pathways and the interconnecting pathways are set at least two dwelling units apart. They do not cut across any open space but they either lead to it or run around it. The secondary pathways have varied width ranging from 2m to 4.5m. Its length varies and it generally connects 4–10 dwelling units. The width and length of the main pathways range from 5m to 10m and 6–12 dwelling units respectively.The plot units are of varied sizes and there is no grouping of similar house types. The activity of the household is primarily done in the outdoors with the house as such used only for private activities. The house units are of varied size and shape, the average area being 40m2 for the smaller plots and 120m2 for the bigger ones. Each house is associated with an open space. The front open space in some cases is just a ‘thinnai’.11A thinnai is a pillared open verandah in front of the house meant to entertain guests and for sleeping during warm nights.There is invariably a back open space, which involves activities such as drying of fish, net mending, bathing and even cooking in some cases. The size of the back open space ranges from 10m2 in smaller units to even 50m2 in the bigger ones. The basic house comprises of a multipurpose room, a kitchen and a bathroom. In economically low households, cooking and bathroom facilities are taken to the yard. The number and size of the multipurpose rooms increases as the economy of the dweller increases.Other factors like social sustainability, economics had to be considered for the research to be actually applicable in practice. Selection of appropriate house form (individual stand-alone units to multi-storied flats), considering the social characters, livelihood characters, capacity/affordability for operation and maintenance, adjustability to change according to the family needs, and the other factors like environmental considerations and technical feasibility, has to be made for planning a sustainable human settlement. Keeping these factors in mind, a research decision of using a cluster settlement containing units of town houses has been consciously made [18]. Town houses stand on an individual land plot, offering garden space, and space for individual on-plot sewage/waste disposal (Cesspit/septic tank, compost bin, etc.). Periodical emptying of septic tanks too will be within the self-capacity of the dweller. Individual water and electricity connections to the unit offer simpler self-maintenance possibilities. Therefore town houses are less costly and affordable to poor. Moreover fishermen should be settled close to the sea. Availability of land is a prime concern and therefore, high-density units such as offered by town houses are more viable.The analysis of the data thus done, the assimilated knowledge has to be represented so that it could be communicated to the computer. This requires the diagrammatic abstraction of the knowledge and the formulation of rules using shape grammar. A shape grammar captures the spatial relations between different types of spaces (such as the beach, the community space, the pathways, dwelling units) and defines the boundaries and conditions within which the design generation could take place. This shape grammar acts as a basis for the derivation of designs, controls and guides the design process and allows the designer and computer to evaluate the results of designing. The shape grammars extracted from the case studies are shown in Fig. 2. Rules in the figure though repetitive are vital for the working of the programme which relies on directions and orientations of the site.These shape grammar rules and relations function continuously throughout the process of generation and covers a range of possible solutions that could be generated. These generic templates are coded as functions which contain variables called as the context variables. The context variables are the values that define the design brief and furnish the spatial and the functional requirements of the particular problem. They take values from the user or determine values from the user input. The site data and the user data essential to develop the design brief are classified as the context variables. Context variables may be classified as the site environment variables and morphological variables. While the site environment variables give the data which define and portray the site context, the morphological variables gathers data which reveal the user's choice and design decisions.The rules specifying the positioning of the beach and the associated beach open spaces (Rule 1–14), the community open space associated with the community centre (Rule 15–18), the positioning of pathways and their directions (Rule 19–46), the positioning of primary units (Rule 47–50) and the arrangement of the plot interior (Rule 51–66).The grid size is the variable that determines the size of the orthogonal grids on which the design generation is to take place. It is the length of one side of the orthogonal grid. After a careful analysis of the design objectives and areas such as plot units, width of pathways, etc., the grid size is determined by the user. The grid size determines the size of the shape units, which is the basic shape that gets proliferated along restricted points to define the shape boundary of each space. The shape unit is of two size ranges – one is the layout shape unit that is equivalent to a grid unit and describes the spaces in the layout (such as beach open space, community open space plot units, etc.) The other is the dwelling space unit, which is much lesser in size and describes the generation of spaces inside the plot unit (such as the front yard, back yard and the dwelling unit). The user handles the value of the shape units and it may range from a minimum of 2m (a pedestrian pathway) to 10m at the layout level and is a minimum of 1–2.5m for the dwelling space unit.The width and depth of the community open space is determined by the width and height of the community centre itself, the higher the height/width ratio the deeper the space penetrates into the site. The depth of the beach open space is again controlled by the user in terms of the number of grids deep that the space can proliferate.The user specifies the number of main pathways and the secondary pathways needed. Interconnecting secondary pathways are half the width of the main pathways and they run in between pathways. The width of the pathways are based on the grid sizes and invariably the main pathways have a minimum width of one grid length and the interconnecting pathways have a minimum width of half a grid length. The boundaries of the growth prohibited zone such as vegetation, steep slopes, etc., are obtained as input on screen and the area is demarcated.The size of the grid determines the proportion of the plot units. A plot unit is categorized by its size into three namely ‘small’, ‘medium’ and ‘big’. The designer chooses the area for these three plot units and depending upon the grid area, the plot areas are divided into grids. For example, if the small plot units area is 500sqft, the medium plot units area is 750sqft, the big plot units area is 1000sqft, and the grid area is 250sqft, then the small, medium and big plot units are composed of two, three and four grid units of 15.8′×15.8′, respectively. The plot units are of the town house type and are divided into the front open space, the back open space and the dwelling unit. Very small plot units have only the back open space and the front of the dwelling house directly opens to the pathways. Inside a plot unit the front and open spaces are guided by the norm that the plot coverage should be a maximum of 50% of the plot size. The exact percentage of built area is left to the discretion of the designer and he is also given the flexibility to determine the percentage distribution of the front and the back open space. Variables such as the building height, size of openings, thickness of the slabs and walls, thermal properties of the building materials, wind velocity are useful in determining the efficiency of the generated system.User's preference variables usually have a ‘Yes’ or ‘No’ as their value. They help in making the programme user-friendlier. These variables are called upon after the generation of every space (like the community open space, pathways, plot units, etc.) and the user if satisfied with the results gives the value ‘Yes’ to it, if not the value ‘No’ is given. If the value is ‘No’, the process gets repeated until the user is satisfied with the results. Some of these variables, like the variable that gets the user's acceptance of the plot units’ generation, are not constant during successive iterations. These iterations posses individual set of user preference variables also.The variables thus defined the process of determining the morphology or the geometry of spaces have to be discussed. In this research, this is achieved by the process of geometric optimization.Geometric optimization is a process that finds the best location and size of a group of interrelated square units [19]. For simplicity, this process assumes that all spaces can be represented as squares (shape unit) or combinations of orthogonal squares. The four adjoining centre points are also associated with the shape unit and form the potential points where proliferation might occur (Fig. 3). The complex layout pattern geometry is achieved by the random array arrangement of shape units, which are governed by the addition rule as well as other constraints based on the shape grammar. The result varies on different runs, because the addition rules are randomized. The randomization is restricted by rules, so that the solution lies within the expected space of solutions.The random choices of the centre points are bound by certain restrictions, which control the proliferation process. The user can modify some of the restrictions while others cannot be altered. The restrictions that are used include:•Prohibit overlap – It prohibits two units to occupy the same centre point.Boundary – It allows proliferation only within the specified boundary. A boundary could be specified based on the physical requirements.Connections – Connections if needed are established on the periphery of spaces (Fig. 4).Magnets – Certain spaces act as magnets and attract the proliferating spaces towards them. For example, when a pathway is getting generated from the community space, the beach acts as a magnet and exerts a pull on the pathway (Fig. 4).Size – The size of the space generated is restricted by the user input. The site characteristics, extent, activity and population are criteria, which define the size of the open spaces.These restrictions along with the rules function continuously and generate the complex layout pattern. The coding is done with Visual LISP (VLISP) in the AutoCAD environment which is an environment popularly used by designers. Auto LISP enables us to express relationships among the objects that we create. LISP being an acronym for LISt Processing has great potential in building relationship among items in lists of data. For example, distinct objects of data such as all space units of the dwellings, could be grouped together so that we can perform tasks, such as evaluating the western wall area, etc., on the entire group.The coordinates of the site boundary are directly specified on screen using the cursor. The context variables including the site environment variables such as plots size, site orientation, orientation of the beach and the community centre, wind direction, solar data, etc., and the morphological variables such as the user defined grid size, area of the various zones, number of pathways, growth prohibited areas, the number of different plot unit sizes, area and distribution of yard and dwelling space, building height, thermal properties of building, size of openings, etc., are queried and the specifications noted. The user then specifies onscreen the boundaries of the ‘growth prohibited zones’ such as vegetation, etc. The centre points of these zones are named as integers and are stored as a list and proliferation of shape units are not allowed in this zone. The peripheral centre points of these zones are stored in a separate list, so that growth could occur around these zones. Now along the edges of the site where the beach is situated, a random point is chosen and the public space is generated by the random proliferation of shape units. The shape and position of the beach public space thus generated is queried for acceptance by the user. If the user is satisfied with it then the shape units are connected into the beach public space. Then the model stores the integer representation of the centre points of the beach public space shape as a list. Then it queries the width and height of the community centre and also its orientation with respect to the site. The process of proliferation of shape units is similar to the beach open space, but the community open space spreads itself depending on the height/width ratio of the community centre; the higher the ratio, the deeper the space penetrates into the site (Fig. 5).After the user approves the generation of the open spaces, the number of pathways needed in the layout is sought from the user. The pathway essentially runs in between the two open spaces generated and without crossing the ‘growth prohibited zones’. The proliferation of shape units starts from a random point in the periphery of the community open space. The proliferation process occurs till the path touches the beach space. Such a process takes place 5 times (default value, could be altered if needed) for each pathway and the length calculated for each trial. The pathways are weighted based on their length and the shortest is given more importance. Then the system randomly chooses one pathway out of the five. This process is essential so that the shortest is given a better consideration, but the random selection ensures that the shortest is not the only way in which spaces are connected. After the user accepts the generated pathways, the shape units making up the pathway are connected with one another and the integer representations of the centre points are stored as a list. Similarly, the interconnecting pathways are also generated. The base grid of the interconnecting pathways is taken as half the specified grid. It is ensured that at least one interconnecting pathway leads to the ‘growth prohibited zones’ for providing access (Fig. 6).After the open spaces and the pathway shapes are fixed, the site is divided into sub-zones. The sub-zones are boundary conditions that are delimited by the pathways and open spaces. In each of these sub-zones the pathways and open spaces are flanged by the random arrangement of the plot units, whose area is fixed but the shape varies randomly. After the sub-zones are demarcated, several iterations could be run to generate the plot units and the dwelling units in these sub-zones. The plot units could be of three different areas and the user specifies the areas. The peripheral centre points of all the pathways and the open spaces are considered one by one and a small/medium/big plot unit is chosen randomly and is laid.After exhausting the list of all the peripheral centre points once, the centre points which have not been filled up with the plot units are rerun and the process of laying the plot units done again. This process goes on and on and as the number of reruns increases, the possibility of the choice of smaller plot units increases. Once the list is exhausted, the user specifies the percentage of built up area and the percentage of front/back yard spaces.Inside the plot unit, the model works with another grid unit, which is again specified by the user. The edge of the plot unit, which faces the pathway or the open space, is considered as the front side of the plot unit and the front yard space is delineated starting from the front side. Then, the back yard space and the dwelling unit are delineated within the plot unit (Fig. 7). The dwelling unit shape units are then connected and the peripheral wall areas are calculated. After every one of the plot units have been segregated into the dwelling units and the yard spaces, the model calculates the wall areas that gets shared, the wall areas that are exposed and their orientations. This process is repeated within all the sub-zones and the random process of plot unit lying and dwelling units demarcating ensures a varied output in each iteration, thus developing a population of probable solutions.The fitness of each solution is evaluated by the estimation of various parametric, comfort criterions. The list of integer representations of centre points of various spaces and the fitness of the solution are stored as a database list for each solution. This database list also includes the drawing file of the generated solution. This kind of generation results in a vast space of probable solutions and genetic algorithms is used as a search mechanism to identify the optimal solution.The whole process is repeated many times for the same problem to generate a set of individual layout solutions. Each solution is then evaluated based on some evaluation criteria to assess its fitness. These solutions are fed to the genetic algorithm to explore and identify the best fit solution. The evaluation criterions considered in this tool is explained first and then the process of genetic algorithm will be discussed.The fitness of each solution generated is quantitatively evaluated by a variable quantity, which simultaneously functions during the generation of the solutions. A fitness function is a measure of efficiency, utility or goodness that we want to maximize in our solutions. The variables considered for the evaluation of each solution is categorized as follows. The first set of variables is spatial criteria, which calculate the built up area, open space area, area of ambiguous space, density, etc. The second group of variables is for analysing the quality/comfort of the dwelling unit based on criteria such as ventilation, lighting, etc. The third type of variable analyses the whole settlement pattern for liveability amidst complexity. The quantification and calculations involved are dealt in detail in the Appendix.A design solution space is ‘an ontologically consistent representation of factual and procedural design knowledge onto which goals and functional requirements can be applied and from which artefact structures, behaviours, performances and ideas for potential revised goals can be retrieved [2].’ It is the space of possible solutions for the given problem. In this vast design solution space a search mechanism searches for the ‘best’ solution in an effective manner. Genetic algorithm or GA uses the concept of biological evolution as a design solution space searching/problem-solving strategy. It selects fit parents based on their fitness value, makes them undergo crossover, mutation and creates a new generation of individuals (Solution 1, 2, 3 and 4 in Fig. 10). This process is repeated till the ‘best’ solution specified by the user is found or for certain number of generations as specified by the user [28].Crossover proceeds in two steps. First, two members from the new generation of individuals are selected at random for mating. Second, each pair of strings undergoes crossing by swapping all positions at a randomly chosen point between the two members chosen for mating (Fig. 8). A function that generates a random positional number aids in crossover. Thus, crossover effectively search and recombines extant notions [29].Mutation is carried on by a function which randomly picks up the highest fitness value and a lower fitness value solution and also randomly picks up a sub-zone. The data of this sub-zone is interchanged between these two solutions (Fig. 9).After the first generation population list has been selected, a function makes a choice whether crossover should be done based on the rate of crossover factor that the user has specified (Fig. 10). A high value of rate of crossover is often considered appropriate for efficiency. To avoid the loss of some potentially useful genetic material, mutation is necessary [30]. Mutation occurs depending on the rate of mutation factor specified by the user (Fig. 10).GA selects the fittest solutions and allows them to reproduce. A randomized proportionate selection scheme is used. The solutions are weighted based on their fitness and the ones with higher fitness are chosen with higher probability and they contribute with one or more offspring to the next generation. This kind of selection is called the roulette wheel selection. Roulette wheel selection typically provides the highest selection pressure in the initial generations, especially when a few individuals have significantly higher fitness values than other individuals [31].The fitness values have to be scaled before they are used in the selection process. This is because if the individual solutions have fitness values which vary widely, then the solutions with the ‘best’ fitness value will be copied several times and the ones with low fitness values will not be chosen at all. This will tend to fill the entire population with similar chromosomes and will limit the ability of the GA to explore large amounts of the search space. Similarly, if the individual fitness values of the solutions vary only a little, then the GA will provide equal chances to all individuals and this will slow the process of finding the ‘best’ solution in the design solution search space. Therefore, fitness scaling is used to ensure a reasonable amount of selection pressure or discriminating power of the GA [32].The programme is coded with two alternate fitness scaling; one is the rank scaling and the other the sigma scaling. The user could choose what kind of scaling he/she prefers to use. Rank scaling takes the fitness values of the solutions and ranks them. For example, the best solution gets the rank 1 and the worst gets the last rank. If two individuals have the same fitness value, then they have the same rank. The rank scaling function assigns scaled values so that the scaled value of an individual with rank n is proportional to 1/√n. The sum of the scaled values over the entire population equals the number of parents needed to create the next generation. Rank fitness scaling removes the effect of the spread of the raw scores [33,34]. Sigma scaling uses mean and standard deviation of the fitness values in the current population (Fig. 11). It uses the following formula to find out the scaled values(1)f′i=n−(μ−mσ)where n is the raw fitness of the ith value,f′iis the ith individuals scaled fitness, μ is the mean and σ is the standard deviation and m is a multiplier whose value ranges from 1 to 5. This scaling ensures that all solutions with a score less than mσ are not considered. This keeps the selection pressure independent of the variance [31]. The tool picks the database list of the chosen solution and copies it to the first generation population list.The various solutions generated by the recursive implementation of the code are subjected to the scaling selection process and an initial generation of population of individual solutions enters into the mating pool. There might be only one or a few “best” solutions among the population but the other members are sample points in other regions of the search space, which might yield better solutions later. The use of a population of solutions helps the evolutionary algorithm avoid becoming trapped at a local optimum, when an even better optimum may be found outside the vicinity of the current solution. To this population list, crossover and mutation are applied in an interval specified by the user.The tool was run for an existing context to check for its credibility and to see if better alternatives evolved. The context chosen was a coastal fishermen's settlement in India. This settlement, which is spread in an area of about 2 acres, has the beach on the southern side and the community centre on its north (Fig. 12). There is a main pathway connecting the church and the beach open space and four intermediate pathways interweaving all the house units. There is a graveyard and some thick vegetation on the eastern side of the plot. The context variables were supplied to the tool based on the above said context. The grid size was fixed as 5m. The growth prohibited zones including the graveyard and the vegetation were input to the tool as boundary points picked on the site by the user on screen. The area of the spaces such as the beach open space, community open space, and the number of main pathways and intermediate pathways were specified and the tool was allowed to generate their form. The generation of each space was repeated until the user was satisfied of the form and shape. The sub-zones between the pathways and the site boundary are chosen by clicking inside each of the sub-zones on screen. Now within each of these sub-zones three different sized plot units whose area is given by the user are laid along the pathways. After the plot units are laid, the yard spaces and the dwelling units inside each plot unit get generated. After the completion of the process, the generated solutions were evaluated for their fitness and the genetic algorithm was engaged to search within the solution space. The results are tabulated in Table 1below and some of the generated solutions are shown in Figs. 13–19.The generated solutions showed a definite increase in performance in terms of space handling when compared with the existing. The spatial fitness evaluating the building coverage percentage increased quickly during the iterations and then reached an optimal value constantly. The useful open space percentage, the dead space percentage and the thermal fitness of all the five generations did not vary much when compared with the generated solutions. This implies the optimal is reached quite easily for these criterions. It is noted from the results that most of the generated solutions have a low fitness value for the depth of plot criterion. This is because the generation rules do not strictly avoid very deep plots. This observation should be noted and handled in the future.When compared with the existing settlement, the fitness values of most solutions have shown a marked improvement. Especially the building coverage and dead space percentage fitness have been effectively optimized by the tool. There is great improvement in the comfort criterions, especially the lighting fitness.It is vital to validate the complexity of the generated solutions with the existing solution. To develop a quantitative understanding of complexity, the amount of information required to describe the solution is necessary. This information is considered equivalent to the different types of plot units and their number. This measure calculates the homogeneity vs. the heterogeneity of the solutions. From the table, it is obvious that this tool manages to keep the complexity criterion equivalent to the existing layout. This proves that the complexity of the naturally grown settlements is reflected in the solutions developed by this tool.The objective in this problem is not only to attain high fitness value but also to allow the designer to make the choice between alternatives. The fitness of each solution is the sum of individual fitness values that are obtained by the different evaluation criterions. One solution might excel in spatial fitness with trades off in the comfort criterions, while the other may excel in comfort criterions but fair badly in spatial criterions. The final choice of the suitable solution is made based on the designer's preferences and objectives.The code was run for a number of iterations in a site area of about 2 acres with different initial population. It was noted that the larger the population size, the faster the process of finding good results.The performance of the code was also examined with various mutation values for a crossover possibility of 1.0. It was noted in the performance that a higher mutation value gave results with higher fitness than a lower mutation value (Fig. 20). Observation shows that mutation should not be very high or very low to get quicker optimal results. The performance of the tool with regard to rank scaling and sigma scaling was tested. This was done by using both the scaling methods alternately for the same problem (Fig. 21). It was noted that a diverse population occurs due to sigma scaling when compared to rank scaling, because the selection pressure is kept independent of the variance in sigma scaling. This ensures a deeper probe into the design search space that is essential for a good design.

@&#CONCLUSIONS@&#
