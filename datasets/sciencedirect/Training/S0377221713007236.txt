@&#MAIN-TITLE@&#
Applying simulated annealing using different methods for the neighborhood search in forest planning problems

@&#HIGHLIGHTS@&#
We solve forest planning problems with adjacency and sequential flow harvest constraints.We develop three methods for introducing bias in the neighborhood search.Three hundred forests defined by three different initial age classes were tested.Comparisons based on objective function value and time consumption.Better results can be achieved by using the new methods compared to the conventional.

@&#KEYPHRASES@&#
OR in natural resources,Metaheuristics,Adjacency unit restriction model,Sequential flow,Biased probabilities,

@&#ABSTRACT@&#
Adjacency constraints along with even flow harvest constraints are important in long term forest planning. Simulated annealing (SA) is previously successfully applied when addressing such constraints. The objective of this paper was to assess the performance of SA under three new methods of introducing biased probabilities in the management unit (MU) selection and compare them to the conventional method that assumes uniform probabilities. The new methods were implemented as a search vector approach based on the number of treatment schedules describing sequences of silvicultural treatments over time and standard deviation of net present value within MUs (Methods 2 and 3, respectively), and by combining the two approaches (Method 4). We constructed three hundred hypothetical forests (datasets) for three different landscapes characterized by different initial age class distributions (young, normal and old). Each dataset encompassed 1600 management units. The evaluation of the methods was done by means of objective function values, first feasible iteration and time consumption. Introducing a bias in the MU selection improves solutions compared to the conventional method (Method 1). However, an increase of computational time is in general needed for the new methods. Method 4 is the best alternative because, for large parts of the datasets, produced the best average and maximum objective function values and had lower time consumption than Methods 2 and 3. Although Method 4 performed very well, Methods 2 and 3 should not be neglected because for a considerable number of datasets the maximum objective function values were obtained by these methods.

@&#INTRODUCTION@&#
Long term forest management planning and optimization of forest management are complex tasks, and are highly dependent on mathematical programming and information technology. A typical example is optimization of economic income under temporal restrictions on roundwood harvest, e.g. non-decreasing harvest over time. This problem may be solved using different techniques, ranging from linear programming to other options like meta-heuristics depending on the complexity of the problem at hand. An important aspect of long term forest planning is spatial considerations and constraints on management in adjacent management units (MUs, i.e. forest stands), which are often imposed in order to preserve wildlife habitats or enhance scenic beauty. Such adjacency constraints typically restrict harvesting (clear cut) of neighboring MUs within or between time periods and have become an important part of forestry practices worldwide. For example in Norway, adjacency constraints as part of forest planning have recently been accentuated in a new act relating to nature areas in Oslo and nearby municipalities (Norwegian Act No. 35 of 5. June 2009) that imposes detailed spatial and temporal regulations on harvesting practices.Norway has a long tradition in developing and applying decision support systems for long term forest planning (e.g. Bergseng, Eid, & Gobakken, in press). Gaya-SGIS, for example, is a system with a forest simulator (Hoen & Eid, 1990) and a linear programming (LP) module (Lappi, 2005) integrated in a GIS environment. In addition to timber production and corresponding cash flow, the forest simulator has been developed for studying carbon flows (e.g. Raymer, Gobakken, & Solberg, 2011) and utilization of biomass for bioenergy (e.g. Bergseng, Eid, Løken, & Astrup, 2013; Rørstad, Trømborg, Bergseng, & Solberg, 2010). The GIS linking of Gaya-SGIS allows for spatial considerations where GIS is used to modify the dataset for the simulator or to set restrictions for the input/output matrix that transfers data from the forest simulator to the LP solver (Lappi, 2005). No presently working decision support system developed in Norway, however, has incorporated any functionality dealing with adjacency constraints.Internationally a lot of work has been done related to adjacency constraints in forestry (e.g. Baskent & Keles, 2005; Shan, Bettinger, Cieszewski, & Li, 2009). Adjacency constraints in long term forest planning as defined by Murray (1999) are divided into the unit restriction model (URM), where neighboring MUs are not allowed to be finally harvested in the same time period, and the area restriction model (ARM), where the total area of neighboring MUs with final harvest in the same time period should not exceed a defined maximum. Also, the concept of “green-up constraints” has been introduced in order to guarantee a time buffer between two consecutive final harvests in neighboring units, which can be used along with the URM and ARM approaches (e.g. Boston & Bettinger, 1999; Boston & Bettinger, 2006; Brumelle, Granot, Halme, & Vertinsky, 1998; Strimbu, Innes, & Strimbu, 2010).In applications dealing with adjacency constraints two broad categories of optimization methods may be applied: exact techniques and heuristic methods. The exact techniques essentially make use of Integer Programming (IP) or Mixed Integer Programming (MIP). However, for some problems the use of such techniques may become impractical and time consuming, mainly due to the high combinatorial nature. In long term forest planning for example, the number of variables and constraints involved in the mathematical formulations grow exponentially with the number of MUs, the number of treatment schedules within MUs (a treatment schedule is a sequence of silvicultural treatments over time) and the number of time periods involved in the problem.Heuristic methods aim for providing acceptable solutions within a given amount of time, rather than the optimal solution. Such methods are often used when the search space is discrete, which is the case in forest planning problems with adjacency constraints. Heuristic methods are often based on a neighborhood solution search approach. A broad definition of a neighborhood of a solution is “the set of solutions which differs slightly from the original one”. A search procedure usually iteratively move from one potential solution S, to an improved solution S′, in the neighborhood of S, until a stopping criterion has been satisfied. The size of a solution neighborhood can be extremely large depending on the size of the problem and how the neighborhood is defined, and may therefore be almost impossible to explore within reasonable time. Tabu Search (Glover, 1989; Glover, 1990) for example, analyzes the entire neighborhood before making a decision to move from one solution to another. Thus, techniques to reduce the neighborhood size are often applied in Tabu Search applications. These techniques are memory structures known as Tabu lists (e.g. Caro, Constantino, Martins, & Weintraub, 2003; Legües, Ferland, Ribeiro, Vera, & Weintraub, 2007).Other heuristics such as Monte Carlo integer programming (MCIP) (e.g. Boston & Bettinger, 1999), threshold accepting (Dueck & Scheuer, 1990), great deluge algorithm (Dueck, 1993) and simulated annealing (SA) (Kirkpatrick, Gelatt, & Vecchi, 1983) are more suitable for working in large neighborhoods, since the criteria for moving from one solution to another depend on a stochastic process, i.e. a neighborhood solution is randomly chosen and then evaluated as acceptable or not. Most of these heuristics essentially differ based on the parameters used and mechanisms applied to prevent solutions from being stuck in local optima. MCIP, however, does not have this mechanism, so usually several initial starting points are needed to get a range of solution values.SA has been successfully applied in forestry problems addressing adjacency constraints (e.g. Bettinger, Graetz, Boston, Sessions, & Chung, 2002; Boston & Bettinger, 1999; Liu et al., 2006; Lockwood & Moore, 1993; Öhman & Eriksson, 2002; Öhman & Lämås, 2005). The main reason for selecting SA is that this method is suitable for problems with a large solution space (neighborhood), which is particularly important in spatial adjacency forestry problem. SA is also simple to implement and fast in evaluating solutions.A vital part of any SA application is how the solution neighborhood is constructed. The conventional approach in SA forestry applications is to generate a neighborhood solution by assuming a uniform probability distribution to select an MU, and then within the MU, another uniform probability distribution is applied to select either the period where the final harvest should occur or which treatment schedule to apply (e.g. Pukkala & Heinonen, 2006). Some studies have implemented approaches deviating from the conventional. Baskent and Jordan (2002) selected MUs assuming a uniform probability distribution, but final harvest was assigned to the period which returns the lowest harvested volume. Boston and Bettinger (1999) also assumed a uniform probability distribution when selecting MUs and planning periods in applications of MCIP and SA. For the MCIP application, however, they suggested a biased selection criterion for MUs to improve the solution quality as well as to extend the method to be applicable for more than three planning periods. A biased selection criterion in this context means that selection of MUs is not based on a uniform probability distribution. O’Hara, Faaland, and Bare (1989) used a heuristic that moved only through the feasible space and here three approaches with biased MU selection were compared with the unbiased approach. The biased approaches were based on improvements in the objective function value and on the fewest effective adjacent units, i.e. MUs producing fewer adjacency violations are prioritized. Barrett and Gilless (2000) compared several different heuristics, and implemented a bias in the MU selection by sorting MUs in descending order according to the total net present value (NPV) and NPV per ha of the MU.Obviously, other methods for introducing biased distributions in the MU selection are possible, for example according to some properties related to the MUs such as mean NPV, number of constraints involving the MU or the number of treatment schedules for the MU. We are not aware of any previous work in the literature that has introduced bias in MU selection when using SA. The objective of this paper is therefore to assess the performance of SA under three different methods of introducing bias in the MU selection and compare them to the conventional method that assumes a uniform probability. We applied a case study with a large number of randomly generated forest landscapes to compare the four methods.The remaining of this paper is organized as follows: Section 2 describes the general planning model, the case study based on a forestry problem, the simulated annealing approach including the four methods to explore the neighborhood of a solution and finally the measures for how the four methods are compared. Section 3 describe the results, Section 4 contains a discussion on how the methods perform, whereas Section 5 presents the conclusions.

@&#CONCLUSIONS@&#
Introducing a bias in the neighborhood search for selecting MUs in SA is in general improving solutions compared to the conventional method when forestry planning problems with adjacency and sequential flow constraints are addressed. However, a small increase of the time consumption is needed for the new methods. In general, Method 4 (using both the number of treatment schedules and the standard deviation of NPV in the neighborhood search) is the best alternative to Method 1 (conventional method). This method for large parts of the datasets produced the best average objective value (lower GAPs) for young and normal forest landscapes, it produced the highest objective function values (best ranks) and it had lower time consumption than Method 2 (using the number of treatment schedules) and Method 3 (using the standard deviation of NPV). Although Method 4 performed very well, Methods 2 and 3 should not be neglected since for a considerable number of datasets the maximum objective function values were obtained by these methods.