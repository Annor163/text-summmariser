@&#MAIN-TITLE@&#
A questioning based method to automatically acquire expert assembly diagnostic knowledge

@&#HIGHLIGHTS@&#
Method for automatic acquisition of assembly diagnostic knowledge by asking simple questions to experts.Knowledge needs and types identified for diagnosis and resolution of assembly issues.Construction of knowledge based system to provide expert advice to assembly planners.

@&#KEYPHRASES@&#
Knowledge based systems,Knowledge acquisition,Mechanical assembly,

@&#ABSTRACT@&#
In the domain of manual mechanical assembly, expert knowledge is an important means of supporting assembly planning that leads to fewer issues during actual assembly. Knowledge based systems can be used to provide assembly planners with expert knowledge as advice. However, acquisition of knowledge remains a difficult task to automate, while manual acquisition is tedious, time-consuming, and requires engagement of knowledge engineers with specialist knowledge to understand and translate expert knowledge. This paper describes the development, implementation and preliminary evaluation of a method that asks a series of questions to an expert, so as to automatically acquire necessary diagnostic and remedial knowledge as rules for use in a knowledge based system for advising assembly planners diagnose and resolve issues. The method, called a questioning procedure, organizes its questions around an assembly situation which it presents to the expert as the context, and adapts its questions based on the answers it receives from the expert.

@&#INTRODUCTION@&#
Mechanical assembly is an important step towards realizing a product, since most products around us are not single-piece, independent entities but are meaningful arrangements of parts that work together to achieve the product’s function. Assembly planning is a structured process similar to the process of the product’s design. The process of assembly integrates not only the parts  [1], but also a number of people, companies, and related processes from the various stages of a product’s lifecycle. Knowledge from these different sections of the lifecycle is part of the knowledge involved in planning the assembly.Knowledge based systems are programs with a wide base of knowledge in a restricted domain that use complex inferential reasoning to perform tasks which are typically carried out by a human expert  [2]. Section  2.1 describes such systems in greater detail.This paper describes the development, implementation and preliminary evaluation of a method for automatic acquisition of knowledge from experts for computer aided assembly planning. The method uses interactive questioning to elicit this knowledge, which is structured and stored automatically as rules into a knowledge-based assembly advisor system. Knowledge can thus be re-used to predict the occurrence of potential issues and possible resolutions to the issues, for an assembly that is in the stage of being planned. Valuable expert advice is thus made available in a virtual manner. Section  2 introduces knowledge-based systems and knowledge acquisition, followed by Section  3 that provides an explanation of the need for automated knowledge acquisition. An attempt to identify and categorize necessary knowledge, and the subsequent development of a questioning procedure are explained in Section  4. The implementation and preliminary evaluation of the resulting knowledge acquisition approach are detailed in Section  5, followed by conclusions and future directions of research discussed in Sections  6 and 7 respectively.Despite available support for information exchange, current product information systems are found wanting when it comes to managing product knowledge  [3]. In the domain of assembly planning, assembly planners can benefit from prior knowledge of issues that may occur during assembly. However, the expert sources for such knowledge are experienced assembly personnel, who may not normally be involved in the planning process. This gap in availability can be filled by the use of knowledge-based systems.Knowledge based systems, also referred to as expert systems, have been used in five major application modes: knowledge based information systems, decision support systems, consultation systems, problem solving systems, and coaching systems; In fact they are most useful in two complementary ways—analysis of systems, e.g. error analysis or fault diagnosis, and synthesis of systems, e.g. configuration of computer systems  [4,5]. Typical application areas range from diagnosis of meningitis, to identifying possible sites for mineral deposits, to interpreting tax laws  [6]. As with other domains, in design too the need (and hence, efforts) for emulating an expert’s knowledge and the ability to use the knowledge is reflected  [7,8].Knowledge engineering involves acquiring knowledge from experts or other knowledge sources such as encyclopedia and knowledge bases, and representing this knowledge in a knowledge-based system (KBS) that can use this knowledge to carry out appropriate reasoning.KBSs have two essential components—a knowledge base consisting of structured expert knowledge, and an inference engine to process and apply this knowledge to carry out intended reasoning. The knowledge base is a result of an array of processes involving interaction with experts, compilation of expert knowledge, and its verification. This array of processes is called knowledge acquisition. The importance of this step is emphasized in the fact that underdeveloped knowledge acquisition facilities are seen as a major bottleneck in the wider application of expert systems technology, e.g. Rank Xerox’s LOOP, Nixdorf’s TWAICE, and Teknowledge’s S.1  [9].An expert’s specialist knowledge consists of a number of categories such as definitions, references, facts, procedures, algorithms, strategies, and heuristics or “rules of thumb”. The knowledge engineer’s responsibility is to create a smooth transition of this knowledge from the expert to the expert system by means of a two way dialog  [4]. The knowledge then has to be formalized in terms of the representation available and entered into the expert system. The quality and scope of knowledge with which it is populated is crucial to the eventual usability of the system. The difficulty of this process lies in the difficulty faced by the knowledge engineer in attempting to think along the lines of the expert, coercing the expert to identify the domain knowledge and application knowledge, and structuring, formalizing, representing and chunking the knowledge. Being a two way learning process, it can be intellectually demanding for both the knowledge engineer and the experts  [4]. The gap between such knowledge in practice and the extent to which a theory is present, is also a factor  [10].Once the knowledge is acquired and represented, it needs to be applied to serve the purpose of the knowledge based system, such as performing a diagnosis, or, given a diagnosis, suggesting a suitable course of action. This is done by means of a procedure named inference, or knowledge reasoning. Depending on the application, there are different strategies for inference, such as forward-chaining or backward-chaining  [11]. For the current work, forward chaining is the inference procedure used, mainly due to its availability with the expert system development platform used in the implementation.The current commercial computer aided design tools primarily support modeling and analysis of 3-dimensional geometries of products and their components against various performance criteria in the usage phase. Recently there has also been some interest in capturing and reusing knowledge of designers in the form of knowledge based tools integrated into CAD  [12,13]. Such integration has also taken place on a commercial scale, and KBSs are a standard part of the design environment in organizations today  [14,15]. Knowledge based systems have also been developed in the area of assembly oriented design  [16,17]. A strong need to integrate assembly knowledge into CAD systems is also identified in  [18].Knowledge acquisition has its own share of practical difficulties, and is far from a straightforward process. One of the difficulties is about encoding into knowledge based systems the same level of intelligence and ‘common sense’ inherent in humans  [6]. For early knowledge based systems, knowledge acquisition had been a manual process. The knowledge engineers were supposedly well versed in programming expert systems, and were also expected to be adequately acquainted with the domain of the expert, so that they would be able to appropriately correspond and comprehend the expert’s utterances during the course of the knowledge elicitation process.Due to issues such as long-term maintenance of the knowledge base, and taking into account knowledge from experts spread over multiple domains in an organization, there is a strong need to automate this process as much as possible. Gruber  [19] argues that better productivity, development of better methodologies, and the individual sense of motivation and ownership for the expert are some of the reasons why automation of knowledge acquisition is necessary. Since knowledge systems are unlike computer programs in that they are not subject to intermittent changes, but rather grow continuously, a closer interaction between the expert and the expert system may be achieved by eliminating intermediation by a knowledge engineer. It is also useful in sustaining the interest of the experts, as they would be able to quickly see their knowledge being prototyped  [19]. Automation also requires structuring the knowledge in advance, leading to knowledge that is more structured than from protocols or interviews  [20]. The difficulty and cost involved in eliciting knowledge is another strong motivator for automating knowledge acquisition  [6]. Automation of knowledge acquisition systems has already been attempted before, to a fair degree of success in domains such as medicine  [19].One of the current knowledge acquisition systems in the area of assembly is the knowledge acquisition module of a knowledge based system developed for assembly oriented design  [16,17]. However, it is not clear as to what extent acquisition of knowledge is automated in this system i.e. whether the rules for the system are directly input to the system or constructed through other means such as conducting a dialog with the expert. The knowledge for this system is acquired primarily from designers  [16]. Handbooks and books on design for assembly, as well as consultation with production experts are also quoted as sources of knowledge for this system  [16].Kitto and Boose  [5] classify knowledge acquisition tools in terms of the tasks that they support, such as those required for analysis versus those for synthesis. It is necessary that they elicit information to meet the unique problem-solving requirements of the application task category, and the strategies are suited for the specific applications. One type of meta-knowledge needed for this is the knowledge required for deciding on the type of knowledge to be acquired and the type of knowledge acquisition tool specifically suited for this purpose  [5].The ASK system  [19] is an effort towards automating acquisition of strategic knowledge. In ASK, knowledge is divided into two groups: substantive knowledge is used to describe the domain, and draw conclusions from the evidence it has about the world; strategic knowledge is used to suggest the course of action that matches the current situation. Strategic knowledge relies on conclusions drawn with substantive knowledge. However, ASK system still assumes that substantive knowledge has been already acquired and is readily available for use. In the context of our research problem, as in the case of automated knowledge acquisition in general where the computer is not already an expert in the domain, substantive knowledge must still be acquired. Besides, there are application areas in which, for modeling the knowledge, precise concept definitions or algorithms are often unknown or difficult to construct even in an abstract, non-operational form  [20]. The area of analysis and evaluation of assembly plans, we argue, is one amongst these.Another example of automation of knowledge acquisition is the Ripple down Rules (RDR) approach  [21], which treats knowledge acquisition as knowledge maintenance, by utilizing a tree structure to continuously add and correct knowledge. RDR helps capture the context of usage by helping the expert to monitor the correctness of the rules and to take appropriate action where necessary. However, a major issue with the RDR approach is that in order to use RDR, a well-defined set of concepts and related parameters that can be used for diagnostic purposes must already be available. This, however, is rarely available a priori in acquiring expert knowledge in the domain of assembly planning and evaluation. The model of the assembly environment around which knowledge is acquired is not always available a priori, and must be constructed as one proceeds with the knowledge acquisition process. Hence, as newer chunks of knowledge become available, new concepts need to be defined to make sense of these. The MORE system  [22] organizes expert knowledge into different levels like hypotheses and symptoms, and uses strategies to continuously refine it. However, it does not have example-based elicitation, and the expert has to provide the instances of problems to be diagnosed, which means that it may not be possible to elicit as to which situations the knowledge is applicable, and to which situations it is not. Similarly, the KBDT system  [23] takes in an initial set of vocabulary terms, acronyms and euphemisms, and works with examples to elicit design rationale. An early system ACQUINAS  [24] also looks at knowledge for configuring systems using rating grids, and again uses examples—but this is applicable for domains with a prior, clear, domain model.Another research effort that targets similar objectives uses Fuzzy Cognitive Models  [25] as the framework for modeling diagnostic knowledge. Similar to our work, this research also focuses on acquiring diagnostic knowledge using a causal network, and makes use of questions around examples to achieve this. However, the above work differs from that of ours in several crucial aspects. In our work, examples used are those of specific assembly situations, unlike in the above work where they specify the broad domain only; our questions are open-ended and attuned to each expert based on his/her answers, and our knowledge elicitation happens in a reverse order of acquisition to that in the above work. While in our work answers to the ‘why’ part of knowledge are also included, as represented by the constraints, this is absent in the above work. The target audience and the placement in the product life-cycle are also different: their focus is on design-domain experts, while ours is on assembly-experts. The most important distinction is the following. In their work, the knowledge elicited is abstracted right from the beginning, which we argue is not possible without the risk of losing the context. This is because all knowledge is context-specific, and therefore must be acquired along with the context in which it applies. This is particularly true in the case of tribal knowledge which grew out of specific sets of experiences of each expert, and is our primary target. A summary of comparisons of the above pieces of work with our work is presented in Table 1.Since the work reported uses a questioning process, a survey of the interviewing techniques used in knowledge acquisition has been carried out. The survey reveals that Interviews are used largely in the context of manual knowledge acquisition  [26,27] and in some automated systems  [19,28,29]. The major insights obtained from the review of the interview techniques are the following:1.The interviews use a broad, pre-defined set of questions (as in the case of focused and structured interviews shown in  [29]).The specific question asked, and the order in which it is asked, are varied according to the answers received  [19,30].In order to overcome the various difficulties listed above, a new strategy for automating the knowledge acquisition process in the assembly domain is necessary.Context denotes the applicability of knowledge  [31], i.e. for deciding as to which pieces of knowledge are valid under a given set of circumstances. Context and knowledge carry a very close relationship with each other. Context, as well as knowledge, may be either explicit or implicit. However, neither implicit knowledge nor implicit context can be made fully explicit. Also, while knowledge remains relatively unchanged between knowledge acquisition and knowledge usage phases, the context triggered by a given event, referred to as proceduralised context, changes during action  [32]. Context may be seen as a way to “cluster knowledge for efficient search, for representing counter-factual or hypothetical situations, for circumscribing the effects of particular actions to particular situations, and for directing an agent’s focus of attention to salient features of a situation”  [33]. The two major previous efforts to realize the context of acquiring and using knowledge are the RDR systems and developing context definition languages  [31]. RDR has the potential to incrementally clarify the context, by saying that it is determined by the case which prompted the last change to the knowledge base  [31].For the purposes of our research, context is taken as the set of circumstances of an assembly under which a given piece of knowledge is applicable. For example, when an expert provides his knowledge about a set of rules for determining the strength for an isotropic material, the context of the knowledge is isotropic materials. Such a circumstance is represented by what we call a situation. A situation represents the context within which the knowledge acquired from an expert is valid. A single situation is a representative example of many similar situations, for which the same piece of knowledge would be applicable. By ‘similar situations’, we mean those situations for which the same pieces of knowledge apply, by virtue of sharing the same parameters and relations among the parameters. For similar situations, the parameters that affect an issue remain the same, but their values may vary from one such situation to another. The combination of these values decides whether the issue is likely to occur or not. This means that when a new situation is presented, if it shares the same parameters with any original situations, the acquired knowledge from the original situation is also applicable to the new situation. Hence our work uses examples of situations that could be encountered while performing assembly, which are used as the context around which to acquire knowledge.This section discusses the automation of knowledge processes (as discussed in Section  2.1.1) handled within CAD systems. The first aspect is the acquisition of knowledge. The second aspect to be automated is the reasoning and the representation of knowledge. The work presented here focuses on the acquisition aspect. Some non-CAD systems have now begun to support the updating of knowledge in a semi-automated manner—and are being extended to semi-automated knowledge acquisition  [21]. With CAD systems, the original objective has been to focus on automating the broad decision making and repetitive design tasks  [34]. Currently designers’ knowledge is manually input into CAD systems  [35]; the knowledge comes primarily from designers who are the main users of computer aided design tools  [36], sometimes from assembly planning  [37], but rarely from experienced operators, who perform the operations that lead to the manufacturing and assembly of products and therefore understand the ground-level assembly difficulties faced. There is a need for the ability to absorb, represent, communicate and utilize the knowledge, within the same computational environment, from not only designers, but also experts from all parts of the product lifecycle.We are yet to come across attempts to develop a system capable of acquiring such expert knowledge for CAD systems, where the expert may be someone other than an engineer who uses CAD  [38]. Knowledge acquisition for CAD systems, remains a manual, specialized, labor-intensive task; large scale automation of knowledge acquisition, we argue, is an important direction for future CAD systems—a direction in which our work is focused [13,38,15].For the work presented in this paper, the application domain chosen is that of assembly of aircraft components and sub-systems, which includes assembly of rigid (such as beams and spars) as well as flexible (such as electrical cables and hydraulics) structures. This paper considers as an assembly expert one with experience in the assembly domain so that he/she is able to identify potential issues that may arise in a given assembly situation, and can suggest possible remedies for preventing these issues from occurring. The hypothesis is that, given a systematic way of questioning and a suitable knowledge acquisition and representation approach, diagnostic expert knowledge could be acquired, structured and used in the right context.The overall objective of the research presented here is to develop a knowledge based CAD system for1.automated (computer driven, interactive) acquisition of expert knowledge with which to identify potential issues that might arise during assembly of mechanical components and sub-systems in a given assembly and their possible remedies, andautomated representation of, and reasoning using this knowledge to identify potential issues and proposals for their resolution, as advice for assembly planners early in the planning stage so as to help prevent such issues from occurring during actual assembly.The following research questions are asked:•In the context of an assembly situation, can a method of questioning experts enable knowledge acquisition from assembly experts about potential issues and solutions without the need for an intermediate knowledge engineer?Is it possible to structure assembly knowledge as it gets acquired, and does this structuring make it easier to build and use the knowledge base?Can the knowledge acquired using the questioning procedure be used in the context of an assembly situation to identify potential assembly issues and suggest solutions, so that an assembly planner could use this advice?

@&#CONCLUSIONS@&#
