@&#MAIN-TITLE@&#
Solving the initial value problem of discrete geodesics

@&#HIGHLIGHTS@&#
Shortest geodesic is not able to solve the initial value problem of discrete geodesic.Geodesic equation are second-order ODEs.We solve the initial value problem on triangle meshes by solving a first-order ODEThe computed discrete geodesic path converges to the one on the smooth surface.

@&#KEYPHRASES@&#
Discrete geodesics,Initial value problem,Geodesic polar coordinates,

@&#ABSTRACT@&#
Computing geodesic paths and distances is a common operation in computer graphics and computer-aided geometric design. The existing discrete geodesic algorithms are mainly designed to solve the boundary value problem, i.e., to find the shortest path between two given points. In this paper, we focus on the initial value problem, i.e., finding a uniquely determined geodesic path from a given point in any direction. Since the shortest paths do not provide the unique solution on triangle meshes, we solve the initial value problem in an indirect manner: given a fixed point and an initial tangent direction on a triangle meshM, we first compute a geodesic curveγ̂on a piecewise smooth surfaceM̂, which well approximates the input meshMand can be constructed at little cost. Then, we solve a first-order ODE of the tangent vector using the fourth-order Runge–Kutta method, and parallel transport it alongγ̂. When the geodesic curve reaches the boundary of the current patch, its tangent can be directly transported to the neighboring patch, thanks to theG1-continuity along the common boundary of two adjacent patches. Finally, once the geodesic curveγ̂is available, we project it onto the underlying meshM, producing the discrete geodesic pathγ, which is guaranteed to be unique onM. It is worth noting that our method is different from the conventional methods of directly solving the geodesic equation (i.e., a second-order ODE of the position) on piecewise smooth surfaces, which are difficult to implement due to the complicated representation of the geodesic equation involving Christoffel symbols. The proposed method, based on the first-order ODE of the tangent vector, is intuitive and easy for implementation. Our method is particularly useful for computing geodesic paths on low-resolution meshes which may have large and/or skinny triangles, since the conventional straightest geodesic paths are usually far from the ground truth.

@&#INTRODUCTION@&#
Computing geodesic distances and geodesic paths plays an important role in many fields, such as CAD/CAM  [1], path planning  [2], shape analysis  [3], parameterization  [4,5], segmentation  [6], and medial axis  [7]. Geodesics on smooth surfaces are well understood in classic differential geometry. However, the discrete geodesic problem, i.e., computing geodesic distances and paths on discrete domains such as polygonal meshes, is fundamentally different from its smooth counterpart, due to the difference between smooth and discrete domains. For example, geodesics is both straightest and locally shortest on smooth surfaces, but such a nice property does not hold on polygonal meshes. The discrete shortest geodesic is not equivalent to the discrete straightest geodesic, which bisects the vertex angles, since the former is a metric but the latter is not.As a fundamental problem in computational geometry and geometric modeling, the discrete geodesic problem has been studied extensively in the past three decades. To date, many elegant algorithms have been proposed. Representative works include the exact11If the numerical computation is exact, the computed geodesic distance is also exact.algorithms (e.g., the Mitchell–Mount–Papadimitriou (MMP) algorithm  [8] and the Chen–Han (CH) algorithm  [9]), the PDE methods (e.g., the fast marching method  [10] and the heat method [11,12]), and the graph-theoretic methods (e.g., the saddle vertex graph method  [13]). These algorithms, however, are mainly designed to solve the boundary value problem, that is, to find the shortest path between two fixed endpoints.Mitchell et al.  [8] proved that the general form of a shortest geodesic pathγwas an alternating sequence of vertices and (possibly empty) edges. The unfolded image of the path along any edge sequence is a straight line segment, and the curve angle of any vertex whichγpasses through is greater than or equal toπ. As Fig. 1shows, when a shortest geodesic pathγpasses through a saddle vertex (whose curve angle is more than2π),γsplits into multiple outgoing geodesic paths. Therefore, the shortest geodesic paths, although well defined, are not able to solve the initial value problem of discrete geodesics, which aims at finding the unique geodesic path from a fixed point and in a given tangent direction.In this paper, we present a method for solving the initial value problem on triangle meshes. To ensure a unique solution, we adopt an indirect strategy. Given a fixed point and an initial tangent direction on a triangle meshM, we first compute a geodesic curveγ̂on a piecewise smooth surfaceM̂, which well approximates the input meshMand can be constructed at little cost. Then, we solve a first-order ODE of the tangent vector by the fourth-order Runge–Kutta method, and parallel transport it alongγ̂. When the geodesic curve reaches the boundary of the current patch, its tangent vector can be directly transported to the neighboring patch, thanks to theG1-continuity along the common boundary of two adjacent patches. Finally, once the geodesic curveγ̂is available, we project it onto the underlying meshM, producing the discrete geodesic pathγ, which is guaranteed to be unique on the triangle meshM. See Fig. 2.It is worth noting that our method is different from the conventional methods of directly solving the geodesic equation (i.e., a second-order ODE of the position) on the piecewise smooth surface, which are tedious and difficult to implement, due to the complicated representation of the geodesic equation involving Christoffel symbols. Based on the first-order ODE of the tangent vector, the proposed method is intuitive and easy to implement. We observe that our method is particularly useful for computing geodesic paths on low-resolution meshes with large and/or skinny triangles, where the conventional straightest geodesic paths are usually far from the ground truth. In addition, our method can be easily adapted to work on non-orientable surfaces.

@&#CONCLUSIONS@&#
