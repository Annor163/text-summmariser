@&#MAIN-TITLE@&#
A new algorithm for generating all nondominated solutions of multiobjective discrete optimization problems

@&#HIGHLIGHTS@&#
We present an algorithm based on ε-constraint method for multiobjective programming.It proposes a novel way of partitioning the search space in terms of rectangles.Two stage epsilon-constraint formulation is used to generate nondominated points.Theoretical results establish the validity of the algorithm.Computational results indicate superior performance compared to existing methods.

@&#KEYPHRASES@&#
Multiple objective programming,Integer programming,Efficient set,ε-Constraint method,

@&#ABSTRACT@&#
Most real-life decision-making activities require more than one objective to be considered. Therefore, several studies have been presented in the literature that use multiple objectives in decision models. In a mathematical programming context, the majority of these studies deal with two objective functions known as bicriteria optimization, while few of them consider more than two objective functions. In this study, a new algorithm is proposed to generate all nondominated solutions for multiobjective discrete optimization problems with any number of objective functions. In this algorithm, the search is managed over (p−1)-dimensional rectangles where p represents the number of objectives in the problem and for each rectangle two-stage optimization problems are solved. The algorithm is motivated by the well-known ε-constraint scalarization and its contribution lies in the way rectangles are defined and tracked. The algorithm is compared with former studies on multiobjective knapsack and multiobjective assignment problem instances. The method is highly competitive in terms of solution time and the number of optimization models solved.

@&#INTRODUCTION@&#
Optimization algorithms are typically developed with the purpose of optimizing a single objective. However, in many real-world applications two or more criteria are relevant. Any discrete optimization problem in which two or more objectives are considered is called multiobjective discrete optimization problem (MODO). In MODO, the main issue is to develop effective procedures to generate efficient solutions that have the property that no improvement in any objective is possible without sacrificing in at least one other objective. Many studies have been presented for MODO, including several specialized algorithms targeting specific problems. However, the majority of them solve bicriteria discrete problems, while only a few of them deal with more than two objective functions, see for instance, Ulungu and Teghem (1994), Ehrgott and Gandibleux (2000), Ehrgott (2006).As most discrete optimization problems are computationally difficult to solve with a single objective function, solving MODO problems is also difficult (Ehrgott & Gandibleux, 2000). One straightforward way of solving a MODO problem is by reducing it to a single objective discrete optimization problem using a weighted sum formulation that combines multiple objectives (Zadeh, 1963). The resulting solution will be an efficient one if positive weights are used. However, it is also known that some efficient solutions cannot be obtained by using weighted sum scalarization (Ehrgott, 2005). The efficient solutions that are not reachable as optimal solutions to the weighted sum formulation are called unsupported efficient solutions, whereas the ones that can be found as optimal solutions to such problems are called supported efficient solutions.Several general methods were proposed to deal with unsupported efficient solutions. One of the most well-known techniques is based on Tchebycheff scalarization that was introduced by Bowman (1976). Bowman demonstrated that the entire set of efficient solutions can be obtained by parameterizing the objective functions using the Tchebycheff norm. Eswaran, Ravindran, and Moskowitz (1989) proposed an algorithm based on these findings for bicriteria problems. Their algorithm finds the entire efficient set under a slightly restrictive assumption referred to as uniform dominance. A variant of this method is referred to as the augmented weighted Tchebycheff method which finds efficient solutions without uniform dominance assumption (Steuer & Choo, 1983). Similar to the Tchebycheff approach, Sayin and Kouvelis propose min–max type subproblems (Sayın & Kouvelis, 2005). Their algorithm utilizes two-stage optimization problems and generates the entire efficient set for any bicriteria discrete problem via a weight space search.Another well-known technique to obtain efficient solutions for MODO problems is the ε-constraint method, introduced by Haimes, Lasdon, and Wismer (1971). In this method, one of the objectives is chosen as the objective function and the others are transformed into constraints. The right-hand sides of these constraints are quantities in the objective space. In theory, all efficient solutions of a problem can be found by using the ε-constraint method and convexity is not required (Chankong & Haimes, 1982). In practice, the ε-constraint method requires a parametric search on the right-hand-side values. As the parametric search is easy to perform for bicriteria problems, most of the bicriteria discrete optimization problems are solved by using this method, for instance as in Bérubé, Gendreau, and Potvin (2009).The earliest study that reports computational arguments on solving MODO with more than two objectives is presented by Sylva and Crema (2004). The main idea of this method is to obtain a new efficient solution by removing the dominated space by the previously obtained efficient solutions. However, removing some portion of the feasible set requires inclusion of additional constraints and binary variables. Therefore, the size of the single-objective model increases with respect to the increasing number of efficient solutions. Laumanns, Thiele, and Zitzler (2006) proposed a method in which an adaptive scheme for the ε-constraint method is utilized to obtain the entire efficient set. They search for efficient solutions inside the (p−1)-dimensional grid which partitions a (p−1)-dimensional projection of the objective space. For each grid an ε-constraint subproblem is solved. Unlike the original ε-constraint scalarization, the formulation for the minimization problem incorporates not only upper bounds but also lower bounds for the p−1 objective functions converted into constraints, and solves lexicographic optimization problems to deal with weak efficiency. In addition to the challenges introduced by the two-sided bounding of objective functions, another drawback of this method is the number of subproblems solved. The number of grid points may become unmanageable, especially in large-size problems. A recursive algorithm that precedes both studies is presented by Tenfelde-Podehl (2003). This method deals with MODO with p-objectives by converting it into several (p−1)-objective problems. Tenfelde-Podehl (2003) manages the search in p-dimensional space by using boxes (Tenfelde-Podehl, 2003). Dhaenens, Lemesre, and Talbi (2010) use a similar idea in a three-phase solution method with box splitting improvements and parallelization. The first phase consists of determining the ideal and nadir points. The second phase generates well dispersed nondominated solutions, and the third phase explores the whole search space to enumerate all nondominated solutions. Another recursive algorithm is given by Özlen and Azizoğlu (2009). The authors use the augmented form for the ε-constraint formulation. In this method, ranges for the nondominated set in the objective space are obtained by minimizing and maximizing each objective function over the feasible set. Then, by applying the range information in the constrained problems the authors generate all nondominated solutions.In this study, a new method is proposed to solve MODO problems. The method is designed to work for any number of objective functions. The algorithm relies on the ε-constraint method and introduces a simple second stage model to deal with weakly efficient solutions. The method conducts a search over all relevant right-hand-side values by defining (p−1)-dimensional rectangles similar to the grid definition of Laumanns et al. (2006). In the following section, we present the background. In Section 3, the algorithm and associated theoretical results are given. In Section 4, computational results and comparison with previous algorithms are presented on multiobjective knapsack and multiobjective assignment problem instances. Finally, conclusions are presented in Section 5.

@&#CONCLUSIONS@&#
