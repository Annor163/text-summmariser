@&#MAIN-TITLE@&#
Compliance monitoring in business processes: Functionalities, application, and tool-support

@&#HIGHLIGHTS@&#
Framework of ten compliance monitoring functionalities (CMF) in business processes is defined.Related techniques and enabling technologies are discussed.Systematic literature review and presentation of real-world business constraints for compliance are extracted from five case studies.Systematic comparison with compliance patterns and classification of existing approaches using the framework is presented.CMF framework based on two realistic data sets using three different compliance monitoring tools is applied.

@&#KEYPHRASES@&#
Business process compliance,Compliance monitoring,Operational support,

@&#ABSTRACT@&#
In recent years, monitoring the compliance of business processes with relevant regulations, constraints, and rules during runtime has evolved as major concern in literature and practice. Monitoring not only refers to continuously observing possible compliance violations, but also includes the ability to provide fine-grained feedback and to predict possible compliance violations in the future. The body of literature on business process compliance is large and approaches specifically addressing process monitoring are hard to identify. Moreover, proper means for the systematic comparison of these approaches are missing. Hence, it is unclear which approaches are suitable for particular scenarios. The goal of this paper is to define a framework for Compliance Monitoring Functionalities (CMF) that enables the systematic comparison of existing and new approaches for monitoring compliance rules over business processes during runtime. To define the scope of the framework, at first, related areas are identified and discussed. The CMFs are harvested based on a systematic literature review and five selected case studies. The appropriateness of the selection of CMFs is demonstrated in two ways: (a) a systematic comparison with pattern-based compliance approaches and (b) a classification of existing compliance monitoring approaches using the CMFs. Moreover, the application of the CMFs is showcased using three existing tools that are applied to two realistic data sets. Overall, the CMF framework provides powerful means to position existing and future compliance monitoring approaches.

@&#INTRODUCTION@&#
Business process compliance emerged as hot topic in research during the last few years. In essence, several approaches have been developed to formally and (semi-) automatically prove that business processes comply with relevant constraints such as regulations, laws, or guidelines. An example constraint from the medical domain would be “The patient has to be informed about the risks of a surgery before the surgery takes place”. In practice, compliance checks are often conducted manually and hence perceived as a burden [1], although their importance is undoubted.The need to check for compliance of business processes based on a set of constraints may emerge in different phases of the process life cycle [2,3]. During design time, the compliance of a process model with a set of constraints is checked. At runtime, the progress of a potentially large number of process instances is monitored to detect or even predict compliance violations. For this, typically, terms such as compliance monitoring or online auditing are used. Finally, processes can be diagnosed for compliance violations in a post mortem or offline manner, i.e., after process instance execution has been finished.This paper is dedicated to compliance monitoring as this is crucial for the timely detection and prediction of compliance violations as well as for the provision of reactive and pro-active countermeasures on compliance violations [4–6]. Further, in realistic settings, the existence of a complete process model for compliance checks cannot always be assumed. In fact, business processes are often implemented in a rather implicit manner and executed over different information systems (e.g., Enterprise Resource Planning (ERP) or Customer Relationship Management (CRM) tools) as depicted in Fig. 1. Although there are similarities between design time/post mortem analysis and compliance monitoring (see also Section 3.1.5), this paper will focus on the latter in order to provide a clear scope.Typically, compliance requirements on business processes stem from different sources such as laws, regulations, or guidelines that are often available as textual descriptions. An important task towards compliance monitoring is the interpretation of these requirements as compliance objectives and the subsequent specification as compliance rules or constraints (note that, in this paper, we will use both terms interchangeably). As shown in Fig. 1, the specified compliance rules will be verified over the process execution events. The results of compliance monitoring can be visualized and reported back to users in different ways, ranging from notifications on violations to fine-grained feedback on reasons for violations, or even the prediction of possible and unavoidable future violations.In general, compliance monitoring approaches are driven by two factors: (1) the compliance rule language that is used to specify the compliance requirements and (2) the event format the compliance checks are based on. Due to the possible heterogeneity of the data sources employed, an integrated target event format is desirable.There is a overwhelming body of literature on business process compliance. The approaches address different phases of the process life cycle and often propose different languages. These are used to formally represent the constraints to be checked on the business processes. Overall, it is hard to oversee and compare the already existing approaches and hence, the decision of which approach could be utilized for which kind of problem is hampered.Hence, the main challenge tackled in this paper is to provide proper means for comparing approaches for compliance monitoring in business processes in a systematic way. This challenge will be addressed by the following four research questions. The first one refers to the challenge of identifying approaches for compliance monitoring and to distinguish them from approaches that provide design time compliance checks, post mortem conformance checking, compliance checking architectures, or mention compliance monitoring as an important building block(↦Research Question 1 (RQ1): How to identify compliance monitoring approaches?).This is important to provide the study with a clear focus.The second research question fosters the derivation of a set of typical functionalities required in compliance monitoring approaches and practice(↦Research Question 2 (RQ2): What are functionalities that are essential for compliance monitoring approaches in business processes?).RQ2 meets the challenge of granularity and coverage.The challenge of how to demonstrate the appropriateness of the identified functionalities is picked up by the third research question(↦Research Question 3 (RQ3): How can we demonstrate the appropriateness of the identified compliance monitoring functionalities?).The fourth research question asks for the applicability of the functionalities(↦Research Question 4 (RQ4): How can the compliance monitoring functionalities be applied in existing tools?).Section 1.2 discusses the applied methodology and gives an overview on how RQ1 to RQ4 will be tackled in this paper.The goal of this paper is to define a framework for Compliance Monitoring Functionalities (CMF) that enables the systematic comparison of existing and new approaches for monitoring compliance rules over business processes during runtime. Specific challenges for eliciting the CMFs are the multitude of existing approaches in the area of business process compliance and the decision of which functionalities are required in real-world scenarios. In order to address these challenges, we apply the methodology depicted in Fig. 2.The methodology consists of three phases, i.e., elicitation, design, and realization of the CMF framework.Phase 1—Elicitation: The elicitation phase follows the research methodology described in the context of elicitation of process change and time patterns [13,14]. First of all, selection criteria are defined that scope the research done in this paper (↦RQ1 and RQ2). As overarching selection criteria, we focus on:1.functionalities that are relevant for process compliance monitoring, i.e., the observation and enforcement of compliance constraints that are imposed over business processes during runtime andconstraints that are imposed at the process level, i.e., we exclude, for example, integrity constraints [15].The elicitation phase includes a systematic literature review described in Section 3.1 and an analysis of five case studies from different domains introduced in Section 3.2. The CMF identification is based on the results of the systematic literature review and the case study analysis (↦RQ2) and possibly illustrated by additional examples.Phase 2—Design: The CMF design itself is presented in Section 4. Each CMF is described using a CMF template and illustrated by examples taken from literature or case studies (↦RQ2).Phase 3—Realization: In order to demonstrate the appropriateness of the CMF design, existing approaches are classified along their support for the CMFs (cf. Section 4). Moreover, constraint patterns as suggested by the literature are compared to the CMFs proposed in this paper (↦RQ3). Finally, to illustrate the application of the CMF framework, compliance rules are extracted from two realistic and publicly available data sets. Based on the extracted rules and the data sets we showcase the application of compliance monitoring for business processes in existing tools (cf. Section 5.3) (↦RQ4). Note that the data sets for CMF application are different from the case studies utilized for CMF elicitation.In this paper, we address research questions RQ1 to RQ4 as stated Section 1.1. The core of the approach is a framework of functionalities that are relevant in the context of compliance monitoring. These Compliance Monitoring Functionalities are denoted as CMFs for short. The CMF Framework (CMFF for short) shall enable a systematic comparison of existing as well as new approaches on compliance monitoring in business processes. In summary, the main contributions of this paper are•A systematic literature review on compliance monitoring approaches in business processes and analysis of selected projects from different domains (↦RQ1 and RQ2).⁎⁎A framework (CMFF) based on 10 compliance monitoring functionalities described in a systematic way (↦RQ2).⁎A comparative survey of typical compliance rule patterns found in the literature highlighting the importance of the selected CMFs (↦RQ3).A detailed analysis and discussion of compliance monitoring approaches based on the CMFF (↦RQ3).⁎⁎The application of the CMFF using existing tools and two realistic data sets (↦RQ4).The ⁎ and ⁎⁎ annotations of selected contributions highlight the extensions made on the previous EDOC 2013 conference paper [10]. Here, ⁎ means that the contribution is based on [10] and ⁎⁎ means an extension of the particular contribution when compared to [10]. Contributions without annotations are entirely new.The remainder of the paper is structured as follows. In Section 2, a short introduction to compliance monitoring in the context of process mining is provided. Section 3 describes the research methodology followed and discusses approaches that are closely related to compliance monitoring. Section 4 describes our CMFF composed of ten CMFs. In Section 5, we focus approaches to concretely support CMFs. First of all, a comparison of the CMFF with pattern-based approaches is presented. Furthermore, existing compliance monitoring approaches are classified using the CMFs. Finally, the application of the CMFF based on two realistic data sets within three selected tools is showcased. Section 6 concludes the paper.The basic idea behind process mining is to discover, monitor and improve processes by extracting knowledge from data that is available in today׳s systems [99]. The starting point for process mining is an event log. XES (eXtensible Event Stream) [7,8] has been developed as the standard for storing, exchanging and analyzing event logs. Each event in a log refers to an activity (i.e., a well-defined step in some process) and is related to a particular case (i.e., a process instance). The events belonging to a case are ordered. Hence, a case can be viewed as a sequence of events (i.e., a trace). Event logs may store additional information about events such as the resource (i.e., person or device) executing or initiating the activity, the timestamp of the event, or data elements recorded with the event.The reference framework presented in [99] gives an overview of the process mining spectrum. The event logs are partitioned into two kinds: pre mortem and post mortem. Pre mortem logs refer to current process instances that are ongoing; post mortem logs refer to historical process instances that have completed. The framework also distinguishes two types of models: de jure and de facto. A de jure model is normative, i.e., it specifies how things should be done or handled. A de facto model is descriptive and its goal is not to steer or control reality; instead, de facto models aim at capturing reality.Moreover, ten process mining related activities are identified in [99], which can be grouped into three categories: cartography including discover, enhance, and diagnose; auditing including detect, check, compare, and promote; navigation including explore, predict, and recommend.Compliance monitoring corresponds to the detect activity as defined in [99]: the de jure models would serve as representations of the compliance constraints and are hence used to analyze the pre mortem logs. Diagnostics are provided to the user if the behavior in the logs is in some way different from the one specified in the models, i.e., detects deviations at runtime (auditing) [99]. An enabling technology for the detect activity is conformance checking. Conformance checking and related techniques are introduced in Section 3.1.5 together with a discussion on their differences to compliance monitoring approaches.The elicitation of the CMFs corresponds to Phase 1 depicted in Fig. 2. To this end, we systematically reviewed literature (Section 3.1) and analyzed five case studies (Section 3.2).

@&#CONCLUSIONS@&#
