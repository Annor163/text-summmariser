@&#MAIN-TITLE@&#
Construction of several second- and fourth-order geometric partial differential equations for space curves

@&#HIGHLIGHTS@&#
Several second- and fourth-order geometric partial differential equations for space curves are constructed.Changing rates of the arc-length of the evolved curves and areas swept by the curves are discussed.Short-term and long-term behaviors of the evolved curves are illustrated.

@&#KEYPHRASES@&#
Geometric partial differential equations,Geometric flows,Space curves,

@&#ABSTRACT@&#
Geometric partial differential equations for curves and surfaces are used in many fields, such as computational geometry, image processing and computer graphics. In this paper, a few differential operators defined on space curves are introduced. Based on these operators, several second-order and fourth-order geometric flows for evolving space curves are constructed. Some properties of the changing rates of the arc-length of the evolved curves and areas swept by the curves are discussed. Short-term and long-term behaviors of the evolved curves are illustrated.

@&#INTRODUCTION@&#
In many design and construction problems, such as reverse engineering, multi-component mesh optimization and industrial geometric design from a wireframe, smooth space curves need to be generated from noisy input data. This goal can be efficiently achieved by utilizing geometric flows to smooth the input data with shape preserved. The aim of this paper is to construct such geometric flows for space curves embedded inR3.For surfaces embedded inR3, many geometric flows have been constructed (see Xu, 2008 for references). These include second-order geometric flows (mean-curvature flow, averaged mean-curvature flow, weighted mean-curvature flow, Gaussian curvature flow, etc.), fourth-order flows (surface diffusion flow, quasi-surface flow, Willmore flow, etc.) and sixth-order flows (minimal variation of mean-curvature flow, quasi-minimal variation of mean-curvature flow, etc.). These flows are frequently used in surface modeling, surface denoising, image processing and computer graphics.As one can imagine, all the plane curves in the xy-plane can be extended to the xyz-space by setting the z-direction as constants, obtaining three-dimensional (3D) cylindrical-type surfaces. Then, the mean curvature H of this surface is half of the signed curvature of the plane curve, and the Gaussian curvature K is zero. Then, all the geometric flows for surfaces have their counterparts for plane curves. For this reason, one may think that there is no need to study the construction of geometric flows for curves. However, for space curves inR3, reducing the surface flows to curves is not always valid, as explained below.Since most of the curvature flows for surfaces embedded inR3describe the surface motion in the normal direction, we take the normal as an example to explain the difference. For a single-sided surface, the surface normal can be orientated, but the normal of the space curve cannot be orientated. For instance, a straight line in 3D, as a counterpart of the plane, cannot be orientated. Furthermore, the motion of the surface in the normal direction (the tangential motion does not change the surface shape) has one degree of freedom. However, for a space curve, the motion has two degrees of freedom. Hence, the situation for the space curve is rather different from that for the plane curve. In this paper, we consider the construction of geometric flows for space curves.There has been much work on plane curve evolution (see Gage, 1983, 1984; Gage and Hamilton, 1986; Ma and Chen, 2007; Sapiro, 2001 for references). We only review a few of them. Most of the curve evolutions focus on the following curve-shortening flow (CSF)∂x∂t=κsNand its various generalizations. Here,κsis the signed curvature and N is the unit inward normal of a close plane curve x. CSF is also known as curvature flow or geometric heat flow, which is the counterpart of the mean-curvature flow for surfaces. In Chou (2001), some results on CSF are presented, including the properties of CSF, the anisotropic generalized CSF and the CSF in Klein geometry. In Andrews (1998), the behavior of convex curves driven by the curvature flow is considered. The long-term behavior of solutions and properties of limiting shapes are described. As shown in Gage and Hamilton (1986) and Grayson (1987), the curvature flow will shrink an embedding planar curve to a point, becoming round in the limit without developing singularities.In Dziuk (1999), an anisotropic CSF is studied, and a numerical scheme for this flow is developed. Optimal error estimates for a semi-discrete scheme are provided. A weighted curvature flow for planar curves, a generalization of the curvature flow, is discussed in Chen et al. (2007). The convexity of the curve driven by the weighted curvature flow is studied.The geometric curve evolution equations in a plane have been extended to surfaces and manifolds in Grayson (1989), Gage (1990), Spira and Kimmel (2007). Efficient numerical schemes for the implementation of the classical geodesic curve evolution equations on parametric manifolds are presented in Spira and Kimmel (2007). These flows are used on the scale space of images painted on manifolds and segmentation by an active contour model. Grayson (1989) and Gage (1990) generalized the study of curvature flow of closed curves in a plane to that in surfaces, and analyzed the long-term behavior of smooth curves immersed in a surface.It is well known that geometric heat flow is the fastest way to shrink the length of a curve (Gage, 1986). A planar embedded curve that evolves according to this flow becomes more and more circular as t increases, and eventually shrinks to a point in finite time (Gage and Hamilton, 1986; Grayson, 1989). Such a shrinking effect is an undesirable feature in many applications, such as curve denoising, since the evolving curve will drift rapidly from the desired shape. In order to avoid the shrinking effect, Gage (1986) proposed two variations of the geometric heat flow. The first one is defined by(1.1)∂x∂t=(κs−2πL)N,where L is the arc-length of the curve. The second one is defined by∂x∂t=(κs+π〈x,N〉A)N+αT,where A is the area enclosed by the curve andαTis a tangential component that does not change the shape. The resulting flows are curve-shortening motions that preserve the area of the region enclosed by the curve. In Sapiro and Tannenbaum (1995), area-preserving multi-scale representations of planar curves are described. The representations are obtained by deforming the curve via geometric heat flows while simultaneously magnifying the plane for keeping the enclosed area constant. In Dolcetta et al. (2002), several models in phase separation theory are used to generate planar curve evolution without shrinkage. The theoretical validation of a level-set method to these models is discussed. In Ma and Zhu (2012), a length preserving curve flow(1.2)∂x∂t=(κs−α(t))Nwithα(t)=12π∫κs2dsfor convex curves in the plane is considered. It was shown that the area of the region bounded by the evolving curve increases, and the evolving curve converges to a circle. Pan and Yang (2008) proposed another length-preserving curve flow for convex curves in the plane of the form∂x∂t=(L2π−κs−1)N.They proved that the convex plane curve will become more and more circular and converges to a circle.Space curve smoothing or denoising is often required in reverse engineering, CAD modeling, animation, computer vision, image registration and mesh optimization (Leng et al., 2011). To smooth a discrete space curve (a sequence of points) with noise, B-splines were used in Guziec and Ayache (1994) to approximate the discrete data. In Dierckx (1995), noisy scattered data were smoothed by minimizing a functional that combines a term that measures the deviation of the data points from the fit with another term that measures the non-smoothness of the fit.An efficient fairing technique for a wireframe defined by two sets of space curves was presented in Liu et al. (2008). In the fairing process, the parameters are fixed and then released by an iterative gradient descent optimization method. In Cohen and Tekumalla (2005), a 3D curve-smoothing algorithm using the moving least squares (MLS) projection is proposed with the primary focus on smoothing boundaries of point clouds obtained during reverse engineering of laser scanned models. An algorithm for fairing of space curves with respect to spatial constraints based on a vector-valued curvature function is presented in Hildebrandt et al. (2005). It describes a curve-smoothing flow that satisfies strict spatial constraints and allows simultaneous control of both curvature functions. In Altschuler and Grayson (1992), the authors show how to use the curvature flow on space to define a natural continuation of the planar solution for the whole of the time.Our attention is focused on constructing geometric flows for space curves. First, gradient, divergence and Laplace operators on space curves are introduced. Then several second-order geometric flows and fourth-order geometric flows for space curves are constructed. We consider second- and fourth-order flows for the following reasons. First, second-order flows are easier to solve and can be used to denoise efficiently. However, the second-order flows can only achieveG0continuity for joining space curves. To achieveG1continuity, fourth-order flows are required. Second, for smoothing space curves with shape preservation, fourth-order flows are more desirable since the solution curves of the higher order flows are “softer” than those of the lower order flows. Some properties of the changing rates of the arc-length and areas are discussed. To describe the area changing rate for an evolving space curve, a notion of the area swept surface of the evolving curve is introduced.The remainder of this paper is organized as follows. In Section 2, we introduce some of the notation used and several differential operators on space curves, including the definitions of curvature, normal, gradient, divergence and Laplace operators. Some basic results for these operators are also presented. In Sections 3 and 4, we derive several geometric flows, including second-order and fourth-order flows. Some properties of these flows are discussed. Finally, we conclude the paper with a summary in Section 5.In this section, we introduce some of the notation used and several differential operators on space curves, including the definitions of curvature, normal, gradient, divergence and Laplace operators. Some basic results for these operators are also presented.For a given smooth space curve C defined byC={x(u)=[x(u),y(u),z(u)]T:u∈Ω=[a,b]},let κ be the curvature, which is given as (see Do Carmo, 1976, p. 25)(2.1)κ(u)=‖x′(u)×x″(u)‖‖x′(u)‖3=‖x′(u)‖2‖x″(u)‖2−(x′(u)Tx″(u))2‖x′(u)‖3,wherex′(u)andx″(u)denote the first- and second-order derivatives ofx(u)with respect to u. Note thatκ⩾0. This is different from the mean curvature of a surface, which can be either positive or negative. The principal normal is given as(2.2)n(u)=(x′(u)×x″(u))×x′(u)‖(x′(u)×x″(u))×x′(u)‖=x″(u)‖x′(u)‖2−x′(u)x′(u)Tx″(u)‖x′(u)‖‖x′(u)‖2‖x″(u)‖2−(x′(u)Tx″(u))2.It should be noted thatn(u)is well defined for all u such thatx′(u)andx″(u)are linearly independent. Ifx′(u)andx″(u)are linearly dependent,n(u)is arbitrarily defined. We artificially define it as a zero vector. The curvatureκ=0is well defined. From (2.2), we can derive thatn(u)does not depend on the re-parameterization of the curve. Hence,n(u)is uniquely defined. In addition to the curvature and normal, we define the curvature vector as(2.3)κ(u)=x″(u)‖x′(u)‖2−x′(u)x′(u)Tx″(u)‖x′(u)‖4.It is easy to see that‖κ(u)‖=κ(u),n(u)=κ(u)κ(u)if‖κ(u)‖>0.Hence,n(u)is not continuous at the pointκ(u)=0. To obtain a continuous normal function, we definenϵ(u)=κ(u)κ(u)+ϵ,where ϵ is a small positive number. In the following, all the ϵ stand for the same number.Suppose f is aC2smooth function defined on the curvex(u), then we define Laplace operatorΔc(here the subscript c stands for that the operator is defined on curve) applying to f as(2.4)Δcf=divc(∇cf),where the gradient and divergence operators on a space curve are defined as∇cf=x′f′‖x′‖2=x′(x′)T∇f‖x′‖2,divcv=1‖x′‖ddu(vTx′‖x′‖)=[(v′)Tx′+vTx″]‖x′‖2−(x′)Tx″vTx′‖x′‖4.It is easy to see that∇cfis the projection vector of ∇f on the tangent space of the curve. If u is arc-length and v is a tangent vector field, then∇cf=x′(x′)T∇f,divcv=(v′)Tx′.If we take f as the vector value function x, we have∇cx=x′(x′)T‖x′‖2. It is easy to see that for any tangent vector v, we have(∇cx)v=v.Hence,∇cxacts as an identity operator on the tangent space of the curve.From (2.4) we can derive that(2.5)Δcf(x)=f″(x)‖x′‖2−f′(x)(x′)Tx″‖x′‖4(2.6)Δcf(x)=(x′)T∇2f(x)x′‖x′‖2+∇f(x)Tx″‖x′‖2−∇f(x)Tx′(x′)Tx″‖x′‖4,wheref′andf″denote the derivatives off(x(u))with respect to u, the partial derivatives in ∇f and∇2fare taken with respect to the variables x, y, z. If we take f as the vector-valued function x, then we have∇f=I,∇2f=0. Therefore, from (2.3) and (2.6), we have(2.7)Δcx=κ.It is easy to prove that the differential operators introduced above are geometric. That is, we have the following results.Theorem 2.1Gradient operator, divergence operator and Laplace operator are independent of the specific parametric representation of the curve.For the gradient and Laplace operators, we have the following results.Theorem 2.2Given a curveCdefined on the interval[a,b]. Letf:C→R∈C2(C),h:C→R∈C1(C), with at least one of them compactly supported. Then(2.8)∫C[hΔcf+〈∇ch,∇sf〉]ds=0.If both f and h areC2, then(2.9)∫C[hΔcf−fΔch]ds=0.ProofFrom the definition of the gradient operator, we have(2.10)∫C〈∇ch,∇sf〉ds=∫C(∇h)Tx′(∇f)Tx′‖x′‖2ds=∫abh′(∇f)Tx′‖x′‖du=−∫abh[(∇f)Tx′‖x′‖]′du=∫abh[(x′)T∇2fx′+(∇f)Tx″]‖x′‖2−(∇f)Tx′(x′)Tx″‖x′‖3du=∫ChΔcfds.Hence (2.8) is proved. The proof of (2.9) is similar. We omit the details. □Theorem 2.3Given a space curveCdefined on the interval[a,b]and givenf∈C2(C),h∈C1(C), we have(2.11)∫C[hΔcf+〈∇cf,∇ch〉]ds=∑i=12h(xi)〈t(xi),∇cf(xi)〉.If both f and h areC2, then we have(2.12)∫C[hΔcf−fΔch]ds=∑i=12[h(xi)〈t(xi),∇cf(xi)〉−f(xi)〈t(xi),∇ch(xi)〉],wheret(xi)are outward unit tangent vectors ofCat the end pointsxiwithx1=x(a)andx2=x(b).The proof of (2.11) is similar to the proof of (2.8), but boundary conditions need to be taken into account. In (2.10), the termh(x(b))(∇f(x(b)))Tx′(b)‖x′(b)‖−h(x(a))(∇f(x(a)))Tx′(a)‖x′(a)‖is added. It is easy to derive that−h(x(a))(∇f(x(a)))Tx′(a)‖x′(a)‖=h(x(a))〈t(x(a)),∇cf(x(a))〉,h(x(b))(∇f(x(b)))Tx′(b)‖x′(b)‖=h(x(b))〈t(x(b)),∇cf(x(b))〉.Hence (2.11) is proved. Exchanging h and f in (2.11), we obtain(2.13)∫C[fΔch+〈∇cf,∇ch〉]ds=∑i=12f(xi)〈t(xi),∇ch(xi)〉.Subtracting (2.13) from (2.11), we obtain (2.12). □Theorem 2.4LetCbe a closed smooth space curve and L be its arc-length. Then we have(2.14)L=−∫CxTκds.Furthermore, ifCis a closed smooth plane curve, we have(2.15)A=12∫CxTNds,where A stands for the area of the region enclosed by the curve,N(x)is the outward normal of the curve atx.From (2.7) and the Green's formula, we have−∫CxTκds=∫CxTΔc[x(u),y(u),z(u)]Tds=∫C[〈∇cx,∇cx〉+〈∇cy,∇cy〉+〈∇cz,∇cz〉]Tds+∑i=12[x(xi)〈t(xi),∇cx(xi)〉+y(xi)〈t(xi),∇cy(xi)〉+z(xi)〈t(xi),∇cz(xi)〉]T=∫C(∇x)Tx′(x′)T∇x+(∇y)Tx′(x′)T∇y+(∇z)Tx′(x′)T∇z‖x′‖2ds+x(b)Tx′(b)‖x′(b)‖−x(a)Tx′(a)‖x′(a)‖=∫Cds.Hence (2.14) is derived. The following facts are used in the derivation above:x(a)=x(b),x′(a)=x′(b),t(x(a))=−t(x(b)).Note that if the space curve is not closed, the boundary term does not vanish. Hence (2.14) is not true. Equality (2.15) is a well known fact (see Dierckx, 1995, p. 38), we ignore its proof. □Remark 2.1The arc-length formula (2.14) depends onκ, but is independent of the torsion of the curve.Corollary 2.1LetCbe a closed smooth space curve. Then for any vectora∈R3, we have(2.16)∫CaTκds=0.Furthermore, ifCis a closed smooth plane curve, then for any vectora∈R2, we have(2.17)∫CaTNds=0.In (2.14), taking x asx+a, and noticing the fact that the translation does not change the arc-length of the curve, we obtain (2.16). (2.17) can be similarly derived from (2.15). □Corollary 2.2LetCbe a closed smooth space curve. We have(2.18)∫Cκds=0.Furthermore, ifCis a closed smooth plane curve, we have(2.19)∫CNds=0.In (2.16), takinga=[1,0,0]T,[0,1,0]T,[0,0,1]T, respectively, we obtain (2.18). (2.19) is similarly proved. □Theorem 2.5Given a smooth curve motion flow∂x∂t=V(x),then for a closed space curve, we have(2.20)dL(t)dt=−∫C(t)V(x)Tκ(x)ds,and for a closed plane curve, we have(2.21)dA(t)dt=12∫C(t)V(x)TN(x)ds,whereN(x)is the outward normal of the curve atx.For plane curves, the theorem is well known (see Gage, 1986, and Dierckx, 1995, p. 41). Now we prove (2.20) for space curves. FromL(t)=∫C(t)ds=∫ab‖x′‖du,and Green's formula, we have(2.22)dL(t)dt=∫ab∂‖x′‖∂tdu=∫ab(x′‖x′‖)T∂x′∂tdu=(x′(b)‖x′(b)‖)T∂x(b)∂t−(x′(a)‖x′(a)‖)T∂x(a)∂t−∫ab[(x′‖x′‖)′]T∂x∂tdu=(x′(b)‖x′(b)‖)TV(x(b))−(x′(a)‖x′(a)‖)TV(x(a))−∫ab[(x′‖x′‖)′]TV(x)du.If the curve considered is smooth and close, then we have(2.23)(x′(b)‖x′(b)‖)TV(x(b))=(x′(a)‖x′(a)‖)TV(x(a)).From (2.3), we have(x′‖x′‖)′=x″‖x′‖2−x′x′Tx″‖x′‖3=κ(x)‖x′‖.Then from (2.22), we obtain (2.20). The theorem is proved. □If the curve considered is not closed, the equality (2.23) is not valid in general. Hence, (2.20) may not be true. However, ifV(x(a))andV(x(b))are in the normal direction of the curve, then the terms related to the boundary vanish. Then, we obtain the following corollary.Corollary 2.3Given a space curve normal-motion flow∂x∂t=v(x)nϵ(x),we have(2.24)dL(t)dt=−∫C(t)v(x)κ2(x)κ(x)+ϵds.Note thatN(x)andn(x)are different.N(x)is the outward normal of the plane curve,n(x)point to the center of the osculating circle of the curve at x. If the curve is convex, thenN(x)=−n(x).The concept of area enclosed by a close curve is valid only for a close plane curve. For a space curve, the concept of area is not well defined. In the following, we replace the concept of the enclosed area by the concept of the area of the swept surface of the geometric flow.Given a sufficiently smooth space curveC={x(u)∈R3:u∈[a,b]}. Without loss of generality, we assume that the curve does not contain straight line segment. If the curve contains straight line segments, we divide the curve into several pieces at the end points of the straight line segments, such that each piece is either a straight line or contains no straight line. If a piece of the curve is a straight line, then we say this curve piece is trivial. Otherwise, we say the curve piece is non-trivial. We consider only the non-trivial curves in the following.Letu1<u2<⋯<unbe all the zero points ofκ(u)of the curve C. Then aroundul, there exists a vectornl∈R3, such thatκ(u)andκ(u)are in the following forms(2.25)κ(u)=(u−ul)αlnl+O((u−ul)αl+1),(2.26)κ(u)=|u−ul|αl‖nl‖+O(|u−ul|αl+1),whereαl⩾1is an integer. Then aroundul,n(x(u))=κ(u)κ(u)=[sign(u−ul)]αlnl‖nl‖+O(|u−ul|).We define a sign forn(x)in the interval(ul,ul+1)as followssl={sl−1,ifαlan even number,−sl−1,ifαlan odd number,wheres0is defined as 1.Definition 2.1If C is an open curve or a close curve (x(a)=x(b)) withsn=1, then we say the curve is orientable. Otherwise, the curve is not orientable.If curve C is orientable, then a sign function as follows is well defined:sign(x(u))=sl,ifu∈(ul,ul+1),andsign(x(ul))=0forl=1,…,n. Having a sign functionsign(x(u)), we define an oriented normal function asN(x(u))={sign(x(u))n(x(u)),κ(u)≠0,sl−1nl‖nl‖,u=ul,l=1,…,n.ThenN(x)is a smooth vector-valued function andκ(x)=sign(x)κ(x)N(x)=κsN(x),whereκs=sign(x)κ(x)is signed curvature. It is a smooth function if the curvex(u)is sufficiently smooth.Given a curve normal-motion flow for a non-trivial curve∂x∂t=V(x).The area of the surface swept by the curve motion isA(t)=∫0t∫C(τ)V(x)TN(x)dsdτ.Then the changing rate ofA(t)is(2.27)dA(t)dt=∫C(t)V(x)TN(x)ds.In this section, we propose several second-order geometric flows. Some properties of these flows are discussed. These properties are illustrated by some graphical examples. For ease of illustration, all curves used, except for Fig. 3.1, are planar. The figures presented are not schematic. They have been produced by real computation using the numerical method presented in Xu (2013).Letx(u)be a given space curve withu∈[a,b]. Now we define a second order flow. As for the mean-curvature flow for surface, the curvature flow for curve is defined as(3.1)∂x∂t=κn.Remark 3.1The counterpart in the following of the mean-curvature flow∂x∂t=HN∂x∂t=κNis not correct, since the right-hand side depends on the orientation of N.Flow (3.1) can be derived as the gradient flow for minimizing the arc-length functional. For a space curve, from (2.20), we havedL(t)dt=−∫C(t)κ(x)Tκ(x)ds=−∫C(t)‖κ(x)‖2ds⩽0.Hence, curvature flow is arc-length shortened. For the rate of change of area enclosed by a plane curve with rotation index 1, we have(3.2)dA(t)dt=12∫C(t)κ(x)n(x)TN(x)ds=−12∫C(t)sign(x)κ(x)ds=−12∫C(t)κs(x)ds=−π,wheresign(x)=−n(x)TN(x)={1,Cis convex atx,−1,Cis concave atx.Here, the convex and concave curves are distinguished when the observer is located in the interior of the closed curve. From (3.2), we know that the curvature flow is shrinking in area.Fig. 3.1 shows an example of the curvature flow, where the left column shows the initial space curve to be evolved. The middle column shows the evolved space curve family at the early stage. The right column shows the evolved space curve family at the later stage, where the curves become circular and shrink. The figures in the first row are the space curves observed in the z-direction[0,0,1]T. The figures in the second row are the space curves observed in the direction[0.1,0.9,0.1]T. Note that we do not choose[0,1,0]Tas the view direction, since the curves are almost in the xy-plane at the later stage.Let(3.3)κ0=∫Cκ2κ+ϵds/∫Cκκ+ϵds,whereC={x(u)∈R3:u∈[a,b]}. Then the counterpart of the averaged mean curvature flow is defined as(3.4)∂x∂t=(κ−κ0)nϵ.Since∫C(t)κ(κ02−κ0κ)κ+ϵds=κ02∫C(t)κκ+ϵds−κ0∫C(t)κ2κ+ϵds=0,we havedL(t)dt=−∫C(t)κ(κ2−κκ0)κ+ϵds=−∫C(t)[κ(κ2−κκ0)κ+ϵ+κ(κ02−κ0κ)κ+ϵ]ds=−∫C(t)κ(κ−κ0)2κ+ϵds⩽0.Therefore, the averaged curvature flow is arc-length shortened for a space curve. For plane curves, from (2.21), we havedA(t)dt=12∫C(t)κ(x)(κ(x)−κ0(t))n(x)TN(x)κ+ϵds=−12∫C(t)sign(x)κ2(x)−κ(x)κ0κ+ϵds=0ifsign(x)=1.If the curve is convex, the flow is area preserving. For a space curve, ifκ>0everywhere, then from (2.27), we know the flow is area preserving.Fig. 3.2shows an example of the averaged curvature flow, where an initial non-convex curve is evolved. Different from the curvature flow, the evolved curves are not shrinking. It is natural to believe that the steady solution of the flow is a circle with radius1/κ0. However, this is not true: the last figure shows that the steady solution of the flow is a curve consisting of piecewise circular arcs with radius1/κ0. The computational result shows that the total squared error∫C(t)(κ−κ0)2dsapproaches to zero. Hence, flow (3.4) is different from flow (1.1), even for the case of a plane curve. However, ifϵ=0and the curve considered is a close and convex plane curve with winding number 1, then from (3.3), we haveκ0=∫Cκds/∫Cds=1L∫Cκsds=2πL,and therefore, flow (3.4) is same as the flow (1.1).Flow (3.4) is area-preserved for the curve withκ>0. If the curvature has zero points, the area preserving property is not valid. Now we define an area-preserved averaged curvature flow. Letκ0=1L∫Cκsds.Then the flow(3.5)∂x∂t=(κs−κ0)Nis arc-length shortening and area preserving. In fact, from∫C(t)κ02ds−∫C(t)κ0κsds=0,and (2.20), we havedL(t)dt=−∫C(t)(κs2−κsκ0)ds=−∫C(t)[(κs2−κsκ0)+(κ02−κ0κs)]ds=−∫C(t)(κs−κ0)2ds⩽0.Therefore, the averaged curvature flow is arc-length shortening for a space curve. Furthermore, from (2.27), we havedA(t)dt=12∫C(t)(κs(x)−κ0(t))N(x)TN(x)ds=0.Hence, the flow is area preserving.Fig. 3.3shows an example of the area-preserved averaged curvature flow, where the left figure shows an initial non-convex curve to be evolved. The middle figure shows the evolved curve family at the early stage. The right figure shows the evolved curve family at the later stage. The curve approaches a circle with radius1/κ0.Letκ1=∫Cκ3κ+ϵds/∫Cκ2κ+ϵds.Then we introduce another averaged curvature flow as follows(3.6)∂x∂t=(κ−κ1)nϵ.SincedL(t)dt=−∫C(t)κ3−κ2κ1κ+ϵds=0.Therefore, this averaged curvature flow is arc-length preserved for evolving space curves. IfC(t)is a convex plane curve, flow (3.6) is similar to (1.2) proposed by Ma and Zhu (2012). IfC(t)is not convex, then (3.6) is not similar to (1.2).Fig. 3.4shows an example of this averaged curvature flow, where an initial non-convex curve is evolved. Different from the curvature flow, the evolved curves are not shrinking. Again, the steady solution of the flow is a curve consisting of piecewise circular arcs with radius1/κ1. The computational result shows that the total squared error∫C(t)(κ−κ1)2dsapproaches to zero.In this section, several fourth-order flows, including curve diffusion flow, quasi-curve diffusion flow, projective quasi-curve diffusion flow, minimal curvature flow and minimal squared-curvature flow, are presented. Weak forms of some these flows are also given. The illustrations provided are generated using the numerical method presented in Xu (2013).To define a curve diffusion flow which is similar to surface diffusion flow, let us recall the surface diffusion flow (see Mullins, 1957):(4.1)∂x∂t=−2ΔsHn,whereΔs, H and n denote the Laplace–Beltrami operator, mean curvature and surface normal, respectively. Note that mean curvature H depends on the orientation of the surface normal. Namely, if we take the opposite sign of the normal, then the mean curvature will change sign. Hence, the right-hand side of (4.1) is independent of the orientation of the surface normal. If we take directly the form of the surface diffusion flows as the curve diffusion flow, we obtain the following form for curve diffusion flow:(4.2)∂x∂t=−Δcκn,whereΔcand n are the Laplace operator and principal normal of the curve. However, no matter how smooth the curvex(u)is,κ(u)can beC0smooth (see (2.26)) around zero points of κ, andΔcκis not well defined. Therefore, curve diffusion flow (4.2) is not well defined at the points whereκ=0. However, the flow(4.3)∂x∂t=−ΔcκsNis well defined. From (2.20), (2.27) and Green's formulas, we havedL(t)dt=∫C(t)ΔcκsNTκds=∫C(t)Δcκsκsds=−∫C(t)〈∇cκ,∇cκ〉ds⩽0,anddA(t)dt=−∫C(t)ΔcκNTNds=−∫C(t)Δcκds=∫C(t)〈∇cκ,∇c1〉ds=0.Hence, the flow is arc-length shortening and area-preserving.Fig. 4.1shows an example of the curve diffusion flow, where an initial un-convex curve is evolved. The middle figure shows the evolved curve family at the early stage using the curve diffusion flow (4.3). The right figure shows the evolved curve family at the later stage.For surface, we had introduced the following quasi-surface flow (see Xu, 2008)∂x∂t=−Δs2x.The flow has area shrinking property. Similar to this, we introduce the following quasi-curve diffusion flow(4.4)∂x∂t=−Δcκ.From (2.3), we can see that, for a sufficiently smooth curve,Δcκis well defined thoughΔcκmay not be well defined. From (2.20) and Green's formula, we havedL(t)dt=∫C(t)Δcκκds=−∫C(t)∇cκ:∇cκds⩽0.Hence, flow (4.4) is arc-length shortening for a close space curve. From Frenet–Serret formulas, we can derive that, ifκ>0,Δcκ=(κ″−τ2−κ2)n−3κκ′t+κτ′b=(Δcκ−τ2−κ2)n−3κ∇cκ+κτ′b.Hence, the quasi-curve diffusion flow contains the motions in the tangent and binormal directions. Note that torsion is involved in this equation.Using Green's formula (2.12), the weak form of the quasi-curve diffusion flow is written as(4.5)∫C(t)∂x∂tϕds=−∫C(t)ΔcxΔcϕds,∀ϕ∈C02(Ω),whereC02(Ω)consists ofC2smooth functions over Ω with support in the interior of Ω.Fig. 4.2shows an example of the quasi-curve diffusion flow, where an initial non-convex curve is evolved. The middle figure shows the evolved curve family at the early stage using the quasi-curve diffusion flow. The right-hand figure shows the evolved curve family at the later stage. The curve will shrink with further evolution.As we have mentioned before, the quasi-curve diffusion flow contains the motions in the tangent and binormal directions. To disable the tangential motion, we construct the following form flow:(4.6)∂x∂t=−(I−ttT)Δcκ,where t is the unit tangent vector of the curve. Sinceκdoes not depend on the orientation of the normal, the right-hand side of (4.6) is independent of the orientation of the normal. The right-hand side of (4.6) is the projection ofΔc2xin the normal plane, we therefore name it as projective quasi-diffusion flow. From (2.20) and Green's formula, we havedL(t)dt=∫C(t)(Δcκ)T(I−ttT)κds=∫C(t)(Δcκ)Tκds=−∫C(t)∇cκ:∇cκds⩽0,whereA:Bdenotes trace ofABT. Hence, flow (4.6) is arc-length shortening for evolving close space curves.Lety=κ. Then, using the Green's formula, we can write the weak-form of (4.6) as: Find(x,y)such that(4.7){∫C(t)∂x∂tϕds=−∫C(t)(I−ttT)Δcyϕds,ϕ∈C02(Ω),∫C(t)yψds=−∫C(t)∇cx∇cψds,ψ∈C02(Ω).Fig. 4.3shows an example of the projective curve diffusion flow (4.6), where an initial non-convex curve is evolved. The middle figure of Fig. 4.3 shows a curve family at the early stage obtained by this flow. The right-hand figure shows a curve family at the later stage. The curve will shrink continuously for further evolution.For surfaces, Willmore flow (see Willmore, 1993) is derived from minimizing the total squared mean-curvature. For curves inR3, we minimize the following energyE(C)=∫Cκ2ds.To compute its first order variation, we representEas(4.8)E(C)=∫C‖κ‖2ds=∫C‖Δcx‖2ds=∫ab‖Δcx‖2‖x′‖du.Assume C is an extreme point of the energy functional (4.8). LetC̲(Φ,ε)={x̲(u,ε)=x(u)+εΦ(u):u∈Ω},|ε|≪1,be a perturbation of the curve C, where Φ is smooth vector-valued function with compact support. Then(4.9)δ(E(C),Φ)=ddεE(C̲(Φ,ε))|ε=0=0,where(4.10)δ(E(S),Φ)=∫abδ(‖Δcx‖2‖x′‖)du=∫ab[2〈Δcx,δ(Δcx)〉‖x′‖+κ2δ(‖x′‖)]du.It is not difficult to derive thatδ(‖x′‖)=(x′)TΦ′‖x′‖,δ(Δcx)=Φ″‖x′‖2−2x″(x′)TΦ′‖x′‖4−Φ′(x′)Tx″+x′(Φ′)Tx″+x′(x′)TΦ″‖x′‖4+2x′(x′)Tx″(x′)TΦ′‖x′‖6=ΔcΦ−2x″(x′)TΦ′‖x′‖4−x′(Φ′)Tx″+x′(x′)TΦ″‖x′‖4+2x′(x′)Tx″(x′)TΦ′‖x′‖6.Notice that〈Δcx,x′〉=0. From (4.10) we have(4.11)δ(E(S),Φ)=∫C〈2Δcx,ΔcΦ−2x″(x′)TΦ′‖x′‖4〉ds+∫abκ2(x′)TΦ′‖x′‖du=∫C2〈Δcx,ΔcΦ〉ds+∫ab〈−4x′(x″)TΔcx‖x′‖3+κ2x′‖x′‖,Φ′〉du=∫C2〈Δcx,ΔcΦ〉ds+∫ab〈−3κ2x′‖x′‖,Φ′〉du.Using Green's formulas, we haveδ(E(S),Φ)=2∫C〈Δc2x,Φ〉ds+∫C〈1‖x′‖[3κ2x′‖x′‖]′,Φ〉ds.Since Φ is an arbitrary vector-valued function, we obtain, from (4.9), the following Euler Lagrange equation2Δc2x+1‖x′‖[3κ2x′‖x′‖]′=0.To simplify the derivation, but without loss of generality, we assume the parameter of the curve is the arc-length. Then, we have1‖x′‖[3κ2x′‖x′‖]′=3[κ2x′]′=3κ2κ+3(κ2)′x′.Since term3(κ2)′x′is in the tangential direction, we then construct the following geometric flow by ignoring the tangential term:(4.12)∂x∂t=−2Δcκ−3κ2κ.We name this geometric flow as minimal squared-curvature flow. From (2.20) and Green's formula, we havedL(t)dt=∫C(t)(2Δcκκ+3κ4)ds=∫C(t)(3κ4−2∇cκ:∇cκ)ds=3∫C(t)κ4ds−2∫C(t)‖x‴‖2ds,where the third-order derivativex‴is taken with respect to the arc-length parameter. If a space curve is bumpy, then the term2∫C(t)‖x‴‖2dsis dominant. The flow is arc-length shortening. If a space curve is not bumpy, the term3∫C(t)κ4may be dominant. The flow is arc-length lengthening. For instance, if the curve C is a circle, then we can derive that∫C(t)(3κ4−2∇cκ:∇cκ)ds=∫C(t)κ4ds>0.Hence, for a circle, flow (4.12) is arc-length lengthening.Using (4.11) and noting that∇cϕ=∇cx∇cϕ, we obtain the weak-form of the minimal squared-curvature flow as(4.13)∫C(t)∂x∂tϕds=−∫C(t)[2ΔcxΔcϕ−3κ2∇cx∇cϕ]ds,∀ϕ∈C02(Ω).Fig. 4.4shows an example of the minimal squared-curvature flow, where an initial non-convex curve, as shown in Fig. 4.2, is evolved. The left-hand figure shows an evolved curve family at the early stage of the evolution. It is easy to see that the curve is shortening. The middle figure shows a stage where the curve becomes a circle. The right-hand figure shows an evolved curve family at the later stage. The curve becomes a circle, and further evolution makes the circle larger and larger.As we have seen, the minimal squared-curvature flow is arc-length lengthening for a circle. To obtain a flow that is not arc-length lengthening for a circle, we minimize the following energy:(4.14)E(C)=∫Cκds.Assume C is an extreme point of the energy functional (4.8). LetC̲(Φ,ε)={x̲(u,ε)=x(u)+εΦ(u):u∈Ω},|ε|≪1,be a perturbation of the curve C, where Φ is smooth vector-valued function with compact support. Then(4.15)δ(E(C),Φ)=ddεE(C̲(Φ,ε))|ε=0=0,where(4.16)δ(E(S),Φ)=∫abδ(κ‖x′‖)du.Without loss of generality, we may assume u is arc-length. Then it is not difficult to derive that(4.17)δ(κ‖x′‖)=δ(‖x′‖2‖x″‖2−(x′Tx″)2‖x′‖2)=〈n,Φ″〉−〈x′‖x″‖,Φ′〉.Assumen≠0. Then using Green's formulas, we haveδ(E(S),Φ)=∫C〈Δcn+κκ+x′κ′,Φ〉ds.Since Φ is an arbitrary vector-valued function, then from (4.15) we obtain the following Euler Lagrange equationΔcn+κκ+x′κ′=0.Since termx′κ′is in the tangential direction, we then construct the following geometric flow by ignoring the tangential term(4.18)∂x∂t=−[Δcn+κκ].We name this flow as minimal curvature flow. From (2.21) and Green's formula, we havedA(t)dt=12∫C(t)(κ2−∇cn:∇cn)ds.Suppose the curve C is a plane convex curve, then from the Frenet–Serret formula we can derive that∫C(t)(κ2−∇cn:∇cn)ds=0.Hence, for a plane convex curve, flow (4.18) is area preserving. In fact, ifC(t)is convex plane curve, then∫C(t)κds=2πis a constant. This means thatC(t)is a minimizer of the energy functional (4.14). From the Frenet–Serret formula we can derive that, ifκ>0, (4.18) becomes∂x∂t=−τ′b+tκ′+τ2n,where the derivative is taken with respect to the arc-length s.From (4.17), the weak-form of the flow (4.18) can be written as(4.19)∫C(t)∂x∂tϕds=−∫C(t)[ΔcxΔcϕκ−κ∇cx∇cϕ]ds,∀ϕ∈C02(Ω).The right-hand side of (4.19) has a singularity whenκ=0, which reflects the fact that the normal n is not continuous. To overcome this difficulty, we replace the term1κwith1κ+ϵ, whereϵ>0is a small number.Fig. 4.5shows an example of the minimal curvature flow, where an initial non-convex curve is evolved. Note that the resulting curve has a sharp feature. This is understandable since the energy (4.14) is, in fact, theL1norm of the curvature.Remark 4.1Note that (4.18) is derived under the assumption thatn≠0. If the curve C has points wheren=0(x′andx″are not linearly independent), this equation cannot be used. However, the weak form (4.19) is valid.Several second-order and fourth-order geometric flows have been constructed for space curves. Some properties of the changing rates of the arc-length and areas have been discussed. These properties show that the geometric flows constructed for space curves are different in nature from their counterparts of the plane curve case and surface case. Short-term and long-term behaviors of the evolved curves using the constructed flows have been illustrated by graphical examples. These behaviors show that each of the flows has its own distinct features.As part of future work, we plan to study the applications of the geometric flows constructed. A direct application may be space curve denoising. All the flows with arc-length shortening property can be used for space curve denoising. However, if a flow is both arc-length shortening and area-preserving, then it would be more desirable, since it will better preserve the shape of the curve. Another application can be image restoration and image denoising. For instance, the 2D version of flow (4.5) can be used to accomplish the task with sharp feature of the objects in the image to be preserved. A third application area of the geometric flows can be geometric design. In many shape design problems, shapes are designed from a wireframe consisting of space curves. Each of the smooth space curves, say B-spline curves, is constructed from interpolating a few fixed control points. The remaining degrees of freedom (DOF) of the curve need to be determined. These DOF can be determined by the geometric flows constructed.The space curves considered in this paper are expressed in parametric forms. If the curves are in the level-set form (intersections of two implicit form surfaces), how to reformulate these flows is an interesting problem that is worth further study.

@&#CONCLUSIONS@&#
