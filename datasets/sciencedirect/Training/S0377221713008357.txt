@&#MAIN-TITLE@&#
An experimental investigation of metaheuristics for the multi-mode resource-constrained project scheduling problem on new dataset instances

@&#HIGHLIGHTS@&#
This paper evaluates meta-heuristic procedures for the multi-mode RCPSP.New benchmark instances for the multi-mode RCPSP have been proposed.A fair comparison between the procedures has been described.

@&#KEYPHRASES@&#
Project scheduling,Multi-mode,Metaheuristics,

@&#ABSTRACT@&#
In this paper, an overview is presented of the existing metaheuristic solution procedures to solve the multi-mode resource-constrained-project scheduling problem, in which multiple execution modes are available for each of the activities of the project. A fair comparison is made between the different metaheuristic algorithms on the existing benchmark datasets and on a newly generated dataset. Computational results are provided and recommendations for future research are formulated.

@&#INTRODUCTION@&#
Resource-constrained project scheduling has been a well-known and extensively studied research topic for the past decades. The optimization problem minimizes the makespan of the project, subject to precedence relations between the activities and resource constraints. When introducing different modes to each activity, with for every mode a different duration and different resource requirements, the problem is generalized to the Multi-Mode Resource-Constrained Project Scheduling Problem (MRCPSP).In the MRCPSP, three different categories of resources can be distinguished (Slowinski, 1981): renewable resources, which are limited per time-unit (e.g. manpower, machines), nonrenewable resources, which are limited for the entire project (e.g. budget) and doubly constrained resources, which are limited both per time-unit and for the total project duration (e.g. cash-flow per time-unit). Since doubly constrained resources can be considered as a combination of renewable and nonrenewable resources, we do not consider them explicitly and do not take them into account in this study. In the remainder of this paper, we will refer to the MRCPSP/R if only renewable resources are considered while the general term MRCPSP is used for the multi-mode scheduling problem with both renewable and nonrenewable resources. Moreover, in this paper only discrete resources are considered. These resources can be allocated in discrete amounts to activities from a given finite set of possible allocations (Weglarz, Jozefowska, Mika, & Waligora, 2011).As the MRCPSP is a generalization of the RCPSP, the MRCPSP is known to be NP-hard (Blazewicz, Lenstra, & Rinnooy Kan, 1983). Moreover, if there is more than one nonrenewable resource, the problem of finding a feasible solution for the MRCPSP is NP-complete (Kolisch, 1995). The problem is denoted as m, 1T∣cpm,disk,mu∣Cmaxusing the classification scheme of Demeulemeester and Herroelen (2002) and is denoted as MPS∣prec∣Cmaxby Brucker, Drexl, Möhring, Neumann, and Pesch (1999).In the MRCPSP, a set A of pairs of activities between which a precedence relationship exists, and a set N of n activities, where each activity i∈N={1,…,n}, can be performed in different execution modes, is given. The set Mi={1,…,∣Mi∣} determines the possible execution modes for activity i, while miindicates the chosen mode for activity i. The duration of activity i, when executed in mode mi, isdimi. Each mode mialso requiresrimikρunits for each resource in the set Rρof renewable resource types. For each renewable resource k∈Rρ={1,…,∣Rρ∣}, the availability akis constant throughout the project horizon. Activity i, executed in mode mi, will also userimiνlnonrenewable resource units of the total available nonrenewable resourcealν, with l∈Rνand Rνthe set of nonrenewable resources. The aim of the MRCPSP is to select exactly one mode for each activity in order to schedule the project with a minimal makespan, subject to the resource and precedence constraints.Talbot (1982) presented the mathematical programming formulation of this problem, while the MRCPSP can be formulated conceptually as follows:(1)minimizefn(2)subjecttofi+djmj⩽fj∀(i,j)∈A(3)∑i∈S(t)rimikρ⩽akρ∀k∈Rρ,∀t(4)∑i=1nrimilν⩽alν∀l∈Rν,(5)mi∈Mi∀i∈N(6)f0=0(7)fi∈int+∀i∈Nwhere S(t) denotes the set of activities in progress in period ]t−1,t] and fithe finish time of the ith activity. The objective of the MRCPSP is to find a mode and a start time for each activity such that the makespan is minimized and the schedule is feasible with respect to the precedence constraints and the renewable and nonrenewable resource constraints. If the schedule is not feasible with respect to one of the precedence or resource constraints, the solution is called infeasible.Several exact, heuristic and metaheuristic solution methods for the MRCPSP have been proposed in the literature in recent years. Exact solution procedures have been proposed by Slowinski (1980), Talbot (1982), Patterson, Slowinski, Talbot, and Weglarz (1989), Speranza and Vercellis (1993), Sprecher (1994), Sprecher, Hartmann, and Drexl (1997), Sprecher and Drexl (1998), Hartmann and Drexl (1998) and Zhu, Bard, and Tu (2006). Except from the last, all procedures are applications of branch-and-bound algorithms, for which an overview is made by Hartmann and Drexl (1998). However, none of these exact procedures can be used for solving large-sized realistic projects, since they are unable to find an optimal solution in a reasonable computation time. Therefore, different single-pass heuristic and metaheuristic procedures were presented.For the MRCPSP/R (with renewable resource only), heuristic procedures were proposed by Elmaghraby (1977); Boctor (1993, 1996a); Knotts, Dror, and Hartman (2000); Artigues and Roubellat (2000) and Lova, Tormos, and Barber (2006). Heuristic solution procedures for the general MRCPSP (with renewable and nonrenewable resources) were presented by Talbot (1982); Drexl and Grünewald (1993); Özdamar and Ulusoy (1994) and Kolisch and Drexl (1997).The increasing interest in operations research for metaheuristics during the recent years has also resulted in the development of several metaheuristic solution procedures for the MRCPSP. A wide variety of metaheuristic strategies, solution representations and schedule generation schemes were used to develop the most efficient algorithms. Since the methods are tested on different benchmark datasets using different stop criteria, a fair comparison between each of these procedures is difficult. Moreover, the current benchmark datasets show several shortcomings, which could lead to biased results. For an extensive overview of the available exact, heuristic and metaheuristic approaches to the MRCPSP, the reader is referred to the overview paper of Weglarz et al. (2011).The objective of this paper is threefold: first, an overview of the available metaheuristics is given and a classification is made based on the characteristics of each method. Second, a new dataset will be proposed in order to deal with the shortcomings of the current benchmark datasets. Finally, an extended computational comparison is performed to compare the metaheuristics and to evaluate the impact of the network and resource parameters of the project on the efficiency of the procedures.The remainder of this paper is organized as follows: in Section 2, an overview is given of all the metaheuristics solution procedures for the MRCPSP. In Section 3, the shortcomings of the current benchmark datasets are mentioned and a new benchmark dataset is proposed. In Section 4, the computational experiments are reported as well as the results of the different metaheuristics on the current and new benchmark datasets. In the last section, overall conclusions and suggestions for future research are presented.This section gives an overview of the current available metaheuristics from literature. In Section 2.1, we briefly explain the preprocessing process as proposed by Sprecher et al. (1997). In Section 2.2, an overview of the different classification criteria, as mentioned in Kolisch and Hartmann (1999), is given and the available algorithms are classified according to these criteria. Finally, in Section 2.3, an overview is given of the methodology used to code each of the metaheuristics in order to make a fair comparison for these procedures.Sprecher et al. (1997) developed a preprocessing procedure, which can be applied before the solution procedure is started, to reduce the search space in which the solution procedure will operate. This reduction procedure excludes those modes which are inefficient or non-executable and those resources which are redundant. As defined by Sprecher et al. (1997), a mode is called inefficient if there is another mode of the same activity with the same or smaller duration and no more requirements for all resources. A mode is called non-executable if its execution would violate the renewable or nonrenewable resource constraints in any schedule. A nonrenewable resource is called redundant if the sum of the maximal requests for that nonrenewable resource does not exceed its availability. Excluding these modes or nonrenewable resources does not affect the set of feasible or optimal schedules and reduces the search space of the problem.In order to make a classification of the available metaheuristics, the procedures are categorized based on four classification criteria: the metaheuristic strategy, the schedule representation, the mode representation and the schedule generation scheme. In what follows, each of these criteria is briefly discussed.Metaheuristic strategy. Several metaheuristic strategies to solve a scheduling problem are available. For an overview of these metaheuristic strategies we refer to Glover and Kochenberger (2003) and Talbi (2009). For the MRCPSP the following eight strategies were used in literature: genetic algorithm (GA), scatter search (SS), simulated annealing (SA), particle swarm optimization (PSO), ant colony optimization (ACO), differential evolution algorithm (DEA), the multi-agent learning algorithm (MAL) and the estimation of distribution algorithm (EOD).Schedule representation. Kolisch and Hartmann (1999) distinguished five different schedule representations in the RCPSP literature, from which the activity-list (AL) representation and the random key (RK) representation are the most widespread. In both representations, a priority structure between the activities is embedded. In the AL representation, the position of an activity in the AL determines the relative priority of that activity versus the other activities, while in the RK representation the sequence in which the activities are scheduled is based on the priority value attributed to each activity.Mode representation. Two mode representations can be distinguished in the literature: the mode list (ML) representation and the mode vector (MV) representation. In the mode list representation, the list represents the execution modes of the activities in ascending order, i.e. the first number in the list indicates the mode in which the first activity will be executed, the second number the execution mode of the second activity, etc. In the mode vector representation, the mode indicated in the ith position of the mode vector represents the execution mode of the activity placed in the ith position of the activity list. A mode vector is therefore always represented in combination with an activity list.Schedule generation scheme. A schedule generation scheme (SGS) translates the schedule representation into a schedule. Two commonly used types of SGSs are the serial SGS (Kelley, 1963) and the parallel SGS (Bedworth & Bailey, 1982). Kolisch and Sprecher (1996) have shown that it is sometimes impossible to reach an optimal solution with the parallel SGS. Nevertheless, both schemes are used in the solution procedures currently available in the literature.Local search procedures. Several local search (LS) procedures have been proposed in literature and used in the different algorithms. These procedures can be classified into several categories:1.Improving quality of initial population: These procedures are focussing on the feasibility and quality of the initial population elements and try to improve the overall quality of the initial population elements. Therefore, simple (as the procedure of Hartmann (2001)) or more advanced (as the Minimum Normalized Resources procedure of Lova, Tormos, Cervantes, & Barber (2009)) procedures are developed.Improving feasibility: These procedures are focussing on the improvement of the feasibility of a population element. Examples are the massive mutation procedure of Lova et al. (2009) and the mode shift procedure of Józefowska, Mika, Rózycki, Waligóra, and Weglarz (2001).Improving makespan: These procedures are focussing on the improvement of the makespan of a population element. Examples are the single-pass improvement of Hartmann (2001) or the critical path improvement method of Van Peteghem and Vanhoucke (2011).Forward–backward: Some algorithms are also using the forward–backward improvement method (Tormos & Lova, 2001) or an extended or modified version. This specific local search tries to improve the makespan by transforming left-justified schedules (where all activities are scheduled as soon as possible) into right-justified schedules (where all activities are scheduled as late as possible) and vice versa until no further improvements can be found.In Table 1, an overview of the different metaheuristic algorithms is given in chronological order. This overview paper contains all metaheuristic solution procedures published in international peer reviewed journals before January 1, 2013. For each solution procedure, the name of the author(s) and the abbreviation which will be used in the remainder of the paper to refer to the procedure is given. The indication R or RNR in the third column indicates if the procedure is applicable on datasets with only renewable resources (R) or with both renewable and nonrenewable (RNR) resources. The information in the fourth, fifth, sixth and seventh column indicates the metaheuristic strategy (MS), the schedule representation (SR), the mode representation (MR), the schedule generation scheme (SGS) and the type of local search (LS) used to solve the problem instances, respectively. The algorithmic details of each of the procedures can be found in the respective papers. However, on the website http://www.projectmanagement.UGent.be an extensive summary of the details of each of these algorithms can be found.

@&#CONCLUSIONS@&#
This research has given an overview of the metaheuristic solution procedures available in the literature to solve the multi-mode resource-constrained project scheduling problem and has made a fair comparison between these procedures. Moreover, a new benchmark dataset is proposed. Researchers are encouraged to use this dataset to compare the results of their solution procedures with other procedures.Based on the results, the following three conclusions can be made. First, the MRCPSP can be divided into two subproblems: the mode assignment problem, whose aim is to generate a feasible mode assignment list, and a scheduling problem, whose aim is to minimize the makespan of the problem. Some procedures mainly focused on the scheduling problem, by which these procedures were not able to generate feasible solutions for all project instances. Moreover, procedures using a thought-out mode assignment procedure to generate the initial population, such as the minimum normalized resources procedure of Lova et al. (2009) or the controlled mode assignment procedure of Van Peteghem and Vanhoucke (2011), have an advantage compared to other methods. Future research will have to focus on this mode assignment problem, since for an increasing number of activities and an increasing number of modes the complexity of this problem also increases.Second, the good performance of some procedures is mainly due to the applied MRCPSP-specific local search procedures rather than to the followed metaheuristic search strategy. This conclusion is supported by computational tests executed by several authors comparing the effectiveness of both their algorithm and a similar solution procedure without the proposed local search method. Lova et al. (2009) proved that their hybrid genetic algorithm with an efficient improvement method clearly outperforms a simple genetic algorithm. Similar results are found by Hartmann (2001), who showed that the use of the single-pass improvement method clearly improves the performance of the proposed genetic algorithm. Moreover, the use of problem specific information in the local search process increases the efficiency of the procedure significantly.A final contribution is made by making a fair comparison between the different available metaheuristic solution procedures. We believe that the introduction of the new MMLIB dataset opens the possibility to compare new solution procedures with the currently available methods. We hope that the introduction of this new dataset will also stimulate the development of new ideas and techniques to solve the MRCPSP.