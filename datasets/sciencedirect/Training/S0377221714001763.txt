@&#MAIN-TITLE@&#
Modeling sequence scrambling and related phenomena in mixed-model production lines

@&#HIGHLIGHTS@&#
Studied impact of workstations with parallel processors on mixed-model production lines.Developed Markov chain model to calculate throughput and other performance indicators.Used Markov model to quantify impact of system parameters on line performance.Quantified effects of stochastic processing times on extent of sequence scrambling.Investigated impact of sequence scrambling in presence of combinatorial modularity.

@&#KEYPHRASES@&#
Applied probability,Markov processes,Mixed-model production lines,Sequence scrambling,Stochastic processing times,

@&#ABSTRACT@&#
In this paper we examine the various effects that workstations and rework loops with identical parallel processors and stochastic processing times have on the performance of a mixed-model production line. Of particular interest are issues related to sequence scrambling. In many production systems (especially those operating on just-in-time or in-line vehicle sequencing principles), the sequence of orders is selected carefully to optimize line efficiency while taking into account various line balancing and product spacing constraints. However, this sequence is often altered due to stochastic factors during production. This leads to significant economic consequences, due to either the degraded performance of the production line, or the added cost of restoring the sequence (via the use of systems such as mix banks or automated storage and retrieval systems). We develop analytical formulas to quantify both the extent of sequence scrambling caused by a station of the production line, and the effects of this scrambling on downstream performance. We also develop a detailed Markov chain model to analyze related issues regarding line stoppages and throughput. We demonstrate the usefulness of our methods on a range of illustrative numerical examples, and discuss the implications from a managerial point of view.

@&#INTRODUCTION@&#
There has been significant recent interest in issues related to product sequencing in mixed-product production lines. This interest is in a large part due to the rising prevalence of JIS (Just-In-Sequence) and ILVS (In Line Vehicle Sequencing) systems in the automotive industry, which aim to introduce products to a section of the production line in a specific sequence. In a mass customization environment (Alford, Sackett, & Nelder, 2000) both operators and suppliers can benefit from knowing the sequence in advance, in particular because they can have parts delivered to the line only when needed, which leads to a decrease in inventory and buffering costs. Selecting a suitable product sequence, which takes into account line balancing and product spacing concerns (sometimes in conjunction with other objectives, such as minimizing start-up costs, see, e.g., Giard & Jeunet (2010)), is a well-studied problem; see Boysen, Fliedner, and Scholl (2009) for a general overview. However, factors such as parallel stations, in-line quality control, rework loops, and lot sizing constraints often significantly alter the initial sequence of the products during the manufacturing process, leading to a phenomenon called sequence scrambling (also known as decycling). This effect can be quantified by taking the difference between the position of a product in the sequence before entering and after exiting a particular section of the production line; the difference is known as the rank change or sequence displacement of the product. Much of the existing literature on the subject focuses on methods to (partially or completely) restore the altered sequence (Ding & Sun, 2004; Gusikhin, Caprihan, & Stecke, 2008). In particular, problems related to the sizing and usage of automated storage and retrieval systems (ASRS) have been extensively explored; Roodbergen and Vis (2009) provide a thorough survey, while Inman (2003) directly links ASRS sizing to sequence displacement. Another direction of research involves analysis of the effects of sequence scrambling on the downstream performance of the production line, such as the need for safety stocks of alternative components (Camisullis & Giard, 2008).A common feature of existing studies on decycling is that they take the extent of sequence scrambling as a given, either relying on empirical data or assuming a particular random distribution. In contrast, we aim to directly model the causes of sequence scrambling. In order to do so, we consider a production line section featuring a quality control inspection station, where products which fail inspection are withdrawn to an off-line rework shop to make the necessary rework operations (see Fig. 1). We chose to present our models in this context since, due to modern quality standards and requirements, such stations are widely used in the automotive industry as well as in several other fields (see the survey by Raz (1986), or the more recent overview by Mandroli, Shrivastava, & Ding (2006)). However, our results remain applicable for any workstation with identical parallel processors, and the methodology can be naturally adapted to other types of line segments. In addition, while in the literature it is common to assume that stochastic processing times follow a specific type of distribution (usually exponential), such assumptions are not necessary for our approach.We develop a detailed Markov chain model of the operation of the production line segment, which allows us to quantify its effects on the overall performance of the line. Markov chains provide a versatile tool for modeling various aspects of production lines (Manitz, 2008; van Bracht, 1995; Xiaobo, Xu, Zhang, & He, 2007). While the focus in this type of analysis is often on the long term characteristics of the system, in many cases it can also be necessary to carefully study the transient behavior (as Narahari & Viswanadham (1994) point out). For instance, automotive production lines are typically re-initialized every day, and the time required to reach steady state can be significant compared to the length of the production day. Accordingly, we first provide a description of the recurrent states of our Markov chain, then proceed to examine its overall structure using decomposition techniques. The model yields analytic expressions of various performance indicators, including the expected line throughput and the probability of operation without a line stoppage.In addition to our Markov analysis we also improve on and extend some of the developments in Danjou, Giard, and Boctor (2001) to provide computationally tractable formulas describing the probability distribution of the rank change of a product; this is the first time that results of this type appear in the peer-reviewed English literature. The formulas are based on elementary symmetrical polynomials which can be evaluated recursively; we also apply similar techniques to model the effects of sequence scrambling in a mixed-model production line. Specifically, we consider a workstation that installs alternative or optional components that are periodically supplied to the line according to projected demand, and derive tractable recursive formulas for the probability of stockout, as well as for the distribution of the shortage amount, of these components.The main novel feature of our approach is that we establish a quantitative connection between parameters of a production line segment (such as the number of parallel processors, and the distribution of processing times), and the effects these parameters have on the performance of other segments of the line via sequence scrambling and line stoppages. This allows managers to evaluate various trade-offs which, to the best of our knowledge, until now have not been discussed in the literature. For instance, our formulas provide a way to quantify the effect that a reduction in the mean or in the variance of stochastic processing times has on sequence scrambling. We can then compare the costs of achieving such reductions to the savings that would result from the decrease in the required size of an ASRS (either to be installed or to be expanded) that restores the sequence.The rest of this paper is structured as follows: In Section 2 we describe the operation of a production line segment featuring an inspection station, a rework shop, and a buffer. In Section 3 we construct a Markov chain which models the production line segment, and derive structural results which are then applied to obtain formulas for various performance indicators. In Section 4 we derive the probability distribution of the rank change caused by the line segment with the inspection station, then use similar tools to examine the impact of sequence scrambling on a workstation that installs alternative or optional parts. Managerial insights and illustrative numerical results are presented in Section 5.In this section we consider a production line section that includes an inspection station, a rework shop, and a buffer (see Fig. 1). We note that such configurations are often encountered at body shops in automotive manufacturing. The inspection station can process a single product at a time. There are two possible outcomes of the inspection. If the inspected product passes the test, it is ready to be sent to the next workstation on the downstream line. If the product fails the test, it is withdrawn and sent to the rework shop. The rework shop can typically store and process multiple products at the same time. A product does not leave the rework shop until it is reinspected and passes the inspection. Reinspection is assumed to take place in the rework shop as part of the rework process, not at the inspection station.We divide the operation of the production line into time cycles, and assume that the same time cycle is shared by the entire line. Each cycle consists of two phases: in the first phase products are processed at the workstations, while in the second phase products are moved between workstations. Below is a detailed description of a single cycle during the operation of the production line section under investigation. The first phase consists of steps 1 and 2, while steps 3–6 constitute the second phase.1.The products in the rework shop which have not yet passed reinspection are worked on.If there is an uninspected product at the inspection station, it gets inspected.If the pool of products which already passed inspection (consisting of products in the buffer, successfully inspected products in the rework shop, and a product at the inspection station which has passed) is non-empty, a product from this pool is passed to the downstream line. We typically assume that products are passed to the downstream line according to a FIFO (first in, first out) protocol; we mention here that the FIFO assumption is not necessary for the analysis presented in Section 3. If no product has been passed downstream, the cycle is considered to have downstream stoppage (also known in the literature as starvation).Products which already passed inspection at the rework shop or the inspection station are moved to the buffer, to the extent buffer space is available. Any remaining such products are stored at the rework shop (effectively using empty rework shop space as an extension of the buffer).If there is a product at the inspection station which failed inspection, it is moved to the rework shop if there is space available there, otherwise it remains at the inspection station.If the inspection station is empty, a new product arrives to it from the upstream line. Otherwise the cycle is considered to have upstream stoppage (also known in the literature as blocking).Our focus in this paper is to study the line stoppages and sequence scrambling caused by a single line segment. Accordingly, we assume that there are no (upstream or downstream) line stoppages apart from those caused by this section of the line (this is often the case in automotive lines). We also note that, according to the protocol outlined above, even though the rework shop can act as an extension to the buffer, it is impossible for a product which passed inspection to block the rework space needed for another product which requires rework. This is due to the fact that if in a given cycle we have both a product which has failed inspection, and a product which passed and could potentially block rework space, then in step 3 a buffered product is sent downstream. Consequently, at least one rework shop space will be available following step 4.Observation 2.1Having upstream (but no downstream) line stoppage in a given cycle results in a decrease (by one) of the total number of products currently occupying the line section. Similarly, having downstream (but no upstream) line stoppage results in an increase, while in all other cases the number remains unchanged.We now introduce our notation for the various parameters of the production line segment. We view the rework shop as a set of H parallel identical processors, and denote the size of the buffer by B. The number of time cycles a product has to spend in the rework shop until it passes reinspection, including both the actual time in rework and reinspection time, is called rework time. We assume that the rework times of products are independent and identically distributed (i.i.d.). Let R be a random variable which follows this common distribution. Note that the rework time is defined as an integer value, and can be interpreted in terms of ‘clock time’ asR=actual time spent in rework and reinspectionlength of a single time cycle. Throughout this paper we assume that there exists a finite maximum rework timeρ=max{r:Pr(R=r)>0}. We also assume that the probability that a product passes the initial inspection, denoted byp0=Pr(R=0), is less than 1. The distribution of the rework time of products failing initial inspection is given by the conditional probabilitiesqi=Pr(R=i|R>0)fori=1,…,ρ.Since the maximal rework timeρ, as well as the probabilitiesp0andq=(q1,…,qρ), are assumed to be constant throughout this paper, for convenience we often omit dependence on these parameters in our notation. If the values of H and B are clear from the context, we sometimes also omit the dependence on these parameters.In this section we model the behavior of the production line segment depicted in Fig. 1 by a Markov chain. We define the state space in Section 3.1, and provide the transition probabilities in Section 3.2. In Section 3.3 we present structural results, including a description of recurrent states. We then utilize these results in Section 3.4 to derive formulas for various performance indicators.Let us begin by introducing some essential concepts and notation (for a general reference on Markov chains see for example Karlin & Taylor (1998) or Ross (1996)). A Markov chainM=(S,P)consists of a setScalled the state space, and a stochastic matrixP∈[0,1]S×Scalled the transition matrix. A sequence of statesY=(y1,…,yn)∈Snis called a sample path ofMconnecting statey1to stateyn. For1<i<nthe statesyiare called the internal states of Y. The probability of the sample path Y is denoted byPr(Y)=∏i=1n-1Pyi,yi+1. We say that statetis accessible from statesif there exists a sample path with a positive probability which connectsstot.Here we establish some necessary notation, then proceed to describe the state space of our Markov chain model. LetN={0,1,…,}denote the set of natural numbers. For a vectorv=v(1),…,v(n)∈Nnlet‖v‖1=∑i=1nv(i), and let(1)(v(1),v¯)=v,wherev¯=v(2),…,v(n).Furthermore, leteidenote the unit vector with a 1 in the ith position and 0 everywhere else. We assign a Markov chain state of the form(r,b,u,d)to each time cycle of the production line as follows:•The vectorr∈Nρencodes the status of products in rework. More precisely,r(i)is the number of products in the rework shop with a remaining rework time of i at the end of the cycle.The integer b is the number of products buffered (either in the buffer or the rework shop) at the end of the cycle.The indicator u takes value 1 if the cycle had upstream stoppage, and takes value 0 otherwise.The indicator d takes value 1 if the cycle had downstream stoppage, and takes value 0 otherwise.Note that the total number of products in rework at the end of the cycle is‖r‖1. The available buffering capacity, which includes the free spaces in the rework shop, is then given byH+B-‖r‖1. Not all of the elements(r,b,u,d)∈Nρ×N×{0,1}×{0,1}correspond to a possible cycle; we only need to consider those which satisfy all of the following requirements:1.Rework shop capacity:‖r‖1⩽H.Buffer capacity:b⩽H+B-‖r‖1.Upstream line stoppages can only occur when there is no free rework capacity:‖r‖1<H⇒u=0.Downstream line stoppages can only occur when no products are buffered:b>0⇒d=0.A product with current remaining rework time at least t must have entered the rework shop during the lastρ-t+1cycles:∑i=tρr(i)⩽ρ-t+1for all1⩽t⩽ρ.If a cycle has upstream stoppage, no new product enters the rework shop. Therefore, similarly to the previous condition:u=1⇒∑i=tρr(i)⩽ρ-tfor all1⩽t⩽ρ.Since a cycle which has upstream, but no downstream, stoppage decreases the total number of products occupying the line section, this situation cannot occur if both the rework shop and the buffer are full:‖r‖1+b=H+B⇒u=0ord=1.According to the above observations the state space is defined as follows:(2)S=S(H,B)=(r,b,u,d)∈Nρ×N×{0,1}×{0,1}:conditions1–7hold.Example 3.1The state spaceS(1,2)is described in Table 1for the case when the maximal rework timeρis equal to 2.We now examine how the assigned state changes from one time cycle to the next. Let cycle 0 and cycle 1 be two consecutive cycles, with states0=(r0,b0,u0,d0)assigned to cycle 0 and states1=(r1,b1,u1,d1)assigned to cycle 1. We will also user∗andb∗for intermediate calculations. According to the outline in Section 2, the following events take place during cycle 1:1.The products in rework are worked on, decreasing their remaining rework time by one:r∗=(r¯0,0). Ther0(1)products which pass reinspection are now ready to be sent downstream.If cycle 0 had no upstream stoppage (u0=0), a new product is inspected at the inspection station. With probabilityp0the product passes and is ready to be sent downstream; with probability1-p0it fails and will need rework.The pool of products which already passed inspection has sizeb∗=b0+r0(1)+1if a product passed at the inspection station in cycle1b0+r0(1)otherwise.•Ifb∗>0, a product is sent downstream:d1=0,b1=b∗-1.Ifb∗=0, cycle 1 has downstream stoppage:d1=1,b1=0.If cycle 0 had no upstream stoppage (u0=0), then with probabilityp0the inspection station is empty, and a new product can arrive to it from the upstream line (u1=0,r1=r∗). In all other cases a product which failed inspection occupies the station:•If there is space available (‖r∗‖1<H), the product is moved to the rework shop, freeing up the station (u1=0). The rework time is random:r1=r∗+ewwith probabilityqw(w∈[ρ]).If there is no free rework capacity (‖r∗‖1=H), the product remains at the station causing upstream stoppage:u1=1,r1=r∗.The resulting transition probabilities are summarized in Table 2below. To simplify our formulas we introduce some new notation: the set of the first n positive integers is denoted by[n]={1,…,n}, while the positive part of a numberx∈Ris denoted by[x]+=max(x,0). We also observe that after attempting to send a product downstream from a pool of b products,[b-1]+products will remain in the pool.Definition 3.1LetM(H,B)=(S,P)denote the Markov chain with state spaceSas defined in (2) and transition probabilities P as defined in Table 2. All transition probabilities not explicitly specified in Table 2 are zero.It can be verified directly from the above definition that downstream line stoppages, which can only be caused by an empty buffer, have no effect on the future behavior of our model:Observation 3.1Letz0=(r,b,u,0),z1=(r,b,u,1)be two states of the Markov chainM(H,B)=(S,P). ThenPz0,t=Pz1,tholds for allt∈S.Fig. 2shows the transition diagram of the Markov chainM(1,2), including the transition probabilities, forρ=2. Note that the diagram groups together the pairs of states (1,2), (3,4), (5,6), and (8,9) since, in accordance with Observation 3.1, their outgoing transition probabilities coincide. We will discuss the additional structural features indicated on the figure, such as the setSRof recurrent states (highlighted), in the next section.In order to analyze the structure of the Markov chainM(H,B)=(S,P)we first partition the state set according to the total number of products occupying the line segment:(3)S=⋃i=0H+BSi,whereSi(H,B)=(r,b,u,d)∈S:‖r‖1+b=ifori=0,…,H+B.It is also important to separate in notation the states with line stoppage from those without. LetSˆ=(r,b,u,d)∈S:u=d=0andSˇ=S⧹Sˆ. The setsSˆiandSˇiare defined analogously. Using our new notation the following restatement of Observation 2.1 can be verified directly from our definitions:Proposition 3.1One-step transitions ofM(H,B)always take place either within a single class of the partition(3), or between “neighboring” classes. More precisely:1.Fori<Hall one-step transitions fromSilead toSˆiorSˇi+1. If the transition is toSˇi+1, we encounter downstream (but no upstream) stoppage.Fori>Hall one-step transitions fromSilead toSˆiorSˇi-1. If the transition is toSˇi-1, we encounter upstream (but no downstream) stoppage.All transitions fromSHlead toSR=SR(H)=(r,b,u,d)∈S:‖r‖1+b=H,u=d⊂SH. Note that the setSRdepends only on H, not on the buffer size B.According to Part 3. transitions from any state inSRlead to other states inSR, therefore these states also form a Markov chain:Definition 3.2LetSR(H)=(r,b,u,d)∈S:‖r‖1+b=H,u=das in Proposition 3.1, and letPR=[Pij]i,j∈SRdenote the submatrix of P describing the transitions between states inSR. ThenMR(H)=(SR,PR)is a Markov chain; similarly to our previous notation, the sets of stoppage and non-stoppage states inSRare denoted bySˆRandSˇR, respectively.Before proceeding with our analysis we point out that the behavior of the system becomes uninteresting if the rework shop is sufficiently large.Observation 3.2IfH⩾ρholds, and at leastρproducts are occupying the line segment (i.e.,‖r‖1⩾ρ), no stoppage can take place.For the remainder of this section we assumeH<ρ. In this case Parts 1 and 2 of Proposition 3.1 can be further strengthened, which will prove useful in our analysis:Proposition 3.2Fori<Hand any states∈Sithere exists a state inSˇi+1which is accessible froms.Fori>Hand any states∈Sithere exists a state inSˇi-1which is accessible froms.Consider a states∈Si. With a positive probability, namely(1-p0)rρρ, the nextρproducts entering inspection all fail, with required rework times ofρ; none of these products can be sent downstream during the nextρcycles.Ifi<H, there are fewer than H (therefore also fewer thanρ) products occupying the line in states, therefore in at least one of the nextρcycles we encounter downstream stoppage. The first of these stoppages results in a transition intoSˇi+1.On the other hand ifi>H, at some point during the nextρcycles the rework shop will only contain products with a remaining rework time greater than 1, resulting in an upstream stoppage in the following cycle. The first of these stoppages results in a transition intoSˇi-1.□These results allow us to better understand the recurrent states of the Markov chainM(H,B).Corollary 3.1IfH<ρ, the set of the recurrent states of the Markov chainM(H,B)is contained inSR.According to Propositions 3.1 and 3.2 at least one state inSRis accessible from any state inS. On the other hand, by Part 3 of Proposition 3.1 no states inS⧹SRare accessible fromSR, which proves our claim. □Although in the present paper we do not make use of this fact, it is not difficult to verify that if the rework time R can take all values0,…,ρwith positive probability, thenSRis exactly the set of recurrent states. On the other hand, if R can only take either value 0 or valueρ, the set of recurrent states is(r,b,u,d)∈SR:r∈{0,1}ρ.As another simple consequence of Propositions 3.1 and 3.2 we can now describe how sample paths traverse the state sets of the partition (3):Observation 3.3Fori<Ha sample path ofM(H,B)starting at a state inSivisits exactlyH-istates with line stoppage until it first reachesSH; these are all downstream stoppages. The first transition after reachingSHleads toSR.Fori>Ha sample path ofM(H,B)starting at a state inSivisits exactlyi-Hstates with line stoppage until it first reachesSH; these are all upstream stoppages. The first transition after reachingSHleads toSR.For a sample path ofM(H,B)starting at a state inSHevery subsequent state is inSR.Fig. 2 depicts the partition (3) along with the setSRforM(1,2), and illustrates the majority of the structural observations of this section.In order to keep our presentation simple, throughout Section 3 we consider a single buffer at the end of the line segment. We now briefly discuss how our methodology can naturally be extended to the case when there is also a buffer immediately before the inspection station. Let us denote the free capacity of the pre-inspection buffer at the start of operation byB0. Note that, since under our assumptions a new product is available to enter the line segment from upstream in every cycle, the number of products stored in the pre-inspection buffer can never decrease. The differences from the single-buffer case can therefore be summarized as follows:•Each of the firstB0upstream line stoppages that would occur according to our single-buffer model will instead correspond to the addition of a product to the pre-inspection buffer.After the pre-inspection buffer has filled up, it no longer affects the operation of the line. Consequently, a system with a full pre-inspection buffer behaves identically to our single-buffer system.Recurrent states all feature a full pre-inspection buffer, and are otherwise identical to the recurrent states of the single-buffer model.In this section we provide a way to calculate some indicators related to the performance of the production line:•The average number of line stoppages over a time interval.The distribution and expectation of the number of cycles until the kth line stoppage (k=1,2,…).The probability that no line stoppages occur for a given number of cycles.The probability that no downstream line stoppages occur for a given number of cycles.The expected number of downstream line stoppages in a given number of cycles.The expected average inventory level over a given number of cycles.Knowledge of the number of downstream line stoppages is critical for the analysis of economic impact, as the throughput of the line section over a period of n cycles can be expressed as1n(n-number of states with downstream stoppage).The state spaceSRof the Markov chainMR(H)is typically significantly smaller thanS. Due to this fact in many practical applications it is possible to computationally analyze the behavior ofMR(H)even whenM(H,B)is not directly tractable. We begin by providing calculations for performance indicators of the Markov chainMR(H)containing the recurrent states ofM(H,B), then extend these results using a method which allows us to understand the behavior ofM(H,B)based on that ofMR(H).Assuming the Markov chainMR(H)contains only the recurrent states and is both irreducible and ergodic, the long-term average fraction of timeMR(H)spends in some statesisπs, where the stationary distributionπis the unique solution of the linear systemπT=πTPR. In this case the long-term average fraction of time spent in line stoppage states is given by(4)σ=∑s∈SˇRπs.However, during a shorter time period, such as a single production day, the expected performance of the production line can depend significantly on the initial state. The following proposition provides a self-explanatory way to calculate performance indicators for individual initial states.Proposition 3.3Consider a Markov chainMR(H)=(SR,PR)and two statess∈SR(H),t∈SˇR(H).I.LetΩs,tR(H)denote the probability that, after starting froms, the first state with line stoppage reached will bet. These probabilities are readily obtained by solving the following system of linear equalities:(5)Ωs,tR(H)=Ps,tR+∑z∈SˆRPs,zRΩz,tR(H)for alls∈SR,t∈SˇR.For positive integersk⩽nletQs,k,nR(H)denote the probability that, after starting froms, we encounter the kth line stoppage in exactly n cycles. Forn=k=1we trivially haveQs,1,1R(H)=∑t∈SˇRPs,tR.Whenk=1andn>1, the following recursion holds:Qs,1,nR(H)=∑t∈SˆRPs,tRQt,1,n-1R(H).Finally, whenk>1, we have:Qs,k,nR(H)=∑j=1n-k+1Qs,1,jR(H)∑t∈SˇRΩs,tR(H)Qt,k-1,n-jR(H).The probability that after starting from stateswe do not encounter line stoppage for at least T cycles isZs,TR(H)=1-∑j=1TQs,1,jR(H).LetEs,kR(H)denote the expected number of cycles until reaching the kth line stoppage after starting froms. Fork=1these values can be obtained by solving the linear systemEs,1R(H)=1+∑t∈SˆRPs,tREt,1R(H)for alls∈SR.Whenk>1, the following recursion holds:Es,kR(H)=Es,1R(H)+∑t∈SˇRΩs,tR(H)Et,k-1R(H).LetGs,nR(H)denote the expected number of stoppages in n cycles after starting from states. Forn=1we haveGs,1R(H)=∑t∈SˇRPs,tR.Forn>1the following recursion holds:Gs,nR(H)=Gs,1R(H)+∑z∈SRPs,zRGz,n-1R(H).In practical applications a production line may be restarted periodically from a transient state. For example, one might start the line at the beginning of each production day with a full buffer, or with an empty rework shop. In such cases the time needed to reach the recurrent states can be significant compared to the length of the production day; according to Narahari and Viswanadham (1994) this is a common occurrence in the automotive industry. In this section we examine the performance of the production line segment during the initial transient period.We first examine the behavior of the sets of transient statesSiwherei<H. The next proposition is a counterpart of (5), and allows us to compute the distribution of the state of first stoppage based on the distribution inMR(i).Proposition 3.4Consider a Markov chainM(H,B)=(S,P), and assume0⩽i<H.I.Sˆi=SˆR(i). Furthermore, for any two statesz1,z2∈Sˆithe transition probabilityPz1,z2is the same in the Markov chainsM(H,B)andMR(i).Lett=(rt,bt,ut,dt)∈Sˇi+1,z=(rz,bz,0,0)∈Sˆi. IfPz,t>0, thenbz=bt=ut=0,dt=1,rz(1)=0, and there exists a unique valuew(z)∈[ρ]such thatrt=(r¯z,0)+ew(z). In this casePz,t=(1-p0)qw(z)holds. Furthermore, for the vectorz′=((r¯z,0),0,1,1)we havez′∈SˇR(i)andPz,z′R(i)=1-p0.For statess∈Siandt∈Sthe probability that, after starting froms, the first state with line stoppage reached will betisΩs,t(H)=∑z∈Sˆi:Pz,t>0Ωs,z′R(i)qw(z)ift∈Sˇi+10otherwisePart I. can be verified directly from Definitions 3.1 and 3.2.Part II. describes the structure of a statezdirectly preceding a stoppage statetin a sample path. Recalling part 1. of Proposition 3.1, we haveut=0,dt=1. Due to the downstream stoppage there can be no buffered products in either statezort, i.e.,bz=bt=0. As products with a remaining rework time of 1 are buffered in the following cycle,bt=0also impliesrz(1)=0. The stoppage occurs when, during the transition fromztota product fails inspection. Denoting byw(z)the rework time of this product,rt=(r¯z,0)+ew(z)andPz,t=(1-p0)qw(z)follow. According to part I. we havez∈SˆR(i). However, in the Markov chainMR(i)the arrival of a product failing inspection results in both upstream and downstream stoppage;z′∈SˆR(i)denotes the resulting stoppage state.To prove III. we first note that, again by part 1. of Proposition 3.1, fort∉Sˇi+1we haveΩs,t(H)=0. Since no upstream stoppage can occur inSi, according to Observation 3.1 we can assumes∈Sˆiwithout loss of generality. If we denote the aggregate probability of sample paths connecting two statesy-,y+of a Markov chainMvia internal states lying in some set Z byΘM(y-,y+,Z)=∑(y1,…,yn)∈{y-}×Z×…×Z×{y+}Pr(y1,…,yn),the claim fort∈Sˇi+1then follows from the chain of equalities below.(6)Ωs,t(H)=ΘM(H,B)(s,t,Sˆi)(7)=∑z∈Sˆi:Pz,t>0ΘM(H,B)(s,z,Sˆi)Pz,t(8)=∑z∈Sˆi:Pz,t>0ΘM(H,B)(s,z,Sˆi)(1-p0)qw(z)(9)=∑z∈Sˆi:Pz,t>0ΘMR(i)(s,z,Sˆ(i))Pz,z′Rqw(z)(10)=∑z∈Sˆi:Pz,t>0ΘMR(i)(s,z′,Sˆ(i))qw(z)(11)=∑z∈Sˆi:Pz,t>0Ωs,z′R(i)qw(z)Equality (6) expresses the probabilityΩs,t(H)as the sum of the probabilities of all sample paths connectingstotwith no internal stoppage states. In equality (7) we apply the law of total probability based on the last non-stoppage state of these sample paths. We arrive at equality (8) by substituting the formula forPz,tfrom II. Note that, sinces,z∈Sˆi, by I. the sample paths in question are also sample paths ofMR(i). RecallingPz,z′R=1-p0from II. we obtain equality (9). We append the transition fromztoz′to the end of the sample paths to get equality (10). Finally, expressingΩRvia the probabilities of sample paths yields equality (11).□We can now compute our performance indicators analogously to the case of the recurrent states examined in Section 3.4.1:Proposition 3.5Consider the Markov chainM(H,B)=(S,P)and a states=(rs,bs,us,ds)∈Si, where0⩽i<H. Lets′=(rs,bs,0,0)∈Sˆi; note that, by Part I. ofProposition 3.4, we also haves′∈SR(i).I.Ps,t=Ps′,tRift∈Sˆi(1-p0)qwifrs(1)=bs=0,t=(r¯s,0)+ew,0,0,10otherwise.For positive integersk⩽nthe probability that after starting fromswe encounter the kth line stoppage in exactly n cycles isQs,k,n(H)=Qs′,k,nR(i).The probability that after starting from stateswe do not encounter line stoppage for at least T cycles isZs,T(H)=Zs′,TR(i).The expected time until the first line stoppage after starting fromsisEs,1(H)=Es′,1R(i). Fork>1the following recursion holds for the expected time until the kth line stoppage:Es,k(H)=Es,1(H)+∑t∈SˇΩs,t(H)Et,k-1(H).LetGs,n(H)denote the expected number of stoppages in n cycles after starting from states. Forn=1we haveGs,1(H)=Gs,1R(i). For a statez=(r,b,0,1)∈SˇHwe havez′=(r,b,0,0)∈SˆR; formally, letGz,n(H)=Gz,nR(H). Then forn>1the following formula holds:Gs,n(H)=Gs,1R(i)+∑z∈SˆiPs,zGz,n-1R(i)+∑z∈Sˇi+1Ps,zGz,n-1R(i+1).Note that fori<Hthere are no upstream stoppage states inSi, thereforeus=0. According to by Observation 3.1 this impliesPs′,t=Ps,tfor allt∈S, therefore without loss of generality we can assumes=s′. The proof of part II of Proposition 3.4 now immediately implies part I of our claim.We have seen in part I of Proposition 3.4 that, starting from a state inSˆi=SˆR(i), the behavior of the Markov chainsM(H,B)andMR(i)is identical until the first stoppage is reached. The equalitiesQs,k(H)=Qs′,k(H)=Qs′,kR(i)Zs,T(H)=Zs′,T(H)=Zs′,TR(i)Es,1(H)=Es′,1(H)=Es′,1R(i)follow immediately. The recursion in part IV is analogous to that in part IV of Proposition 3.3. Finally, after recalling from part 1 of Proposition 3.1 that all one-step transitions fromSilead toSˆiorSˇi+1, part V becomes similar to part V of Proposition 3.3.□We now examine the behavior of the sets of transient statesSiwherei>H.Proposition 3.6Consider a Markov chainM(H,B)=(S,P), and assumeH<i⩽H+B.Let∗:S→SRbe the mapping defined by(r,b,u,d)∗=(r,H-‖r‖1,u,u). Also, lets∈Si,t∈S.I.Ps,t=Ps∗,t∗Rift∈Sˆiort∈Sˇi-10otherwise.For positive integersk⩽nthe probability that after starting from stateswe encounter the kth line stoppage in exactly n cycles isQs,k,n(H)=Qs∗,k,nR(H).The probability that after starting from stateswe do not encounter any line stoppage for at least T cycles isZs,T(H)=Zs∗,TR(H).The probability that after starting from states∈Siwe do not encounter downstream line stoppage for at least T cycles isDs,T(H)=1-∑j=1TQs∗,i+1,jR(H).Fork⩾1the expected time until the kth line stoppage after starting fromsisEs,k(H)=Es∗,kR(H). The expected time until the first downstream stoppage is given byEs,i+1(H).LetGs,n(H)denote the expected number of downstream stoppages in n cycles after starting from states. Forn=1we trivially haveGs,1(H)=0. For a statez=(r,b,1,0)∈SˇHwe havez′=(r,b,1,1)∈SˇR; formally, letGz,n(H)=Gz,nR(H). Then forn>1the following recursion holds:Gs,n(H)=∑z∈SPs,zGz,n-1(H).Part I can be verified directly from Definitions 3.1 and 3.2. An immediate consequence of Part I is that the operation∗maps every sample path ofM(H,B)which begins inSito a sample path of the same probability inMR(H). Parts II–IV follow immediately from combining this corollary with the trivial observation thatSˆj∗=SˆRandSˇj∗=SˇRfor allj⩾H. In particular, the formula for D in Part III. reflects the fact that, as we have seen in Observation 3.3, starting inSi, we encounteri-Hupstream line stoppages before the first downstream stoppage.The recursion in Part V is analogous to Part V, taking into account that the first cycle after starting from a state inSicannot have downstream stoppage, as seen in Part 2 of Observation 3.1.□To conclude this section, we examine the expected number of products that occupy the production line segment at a given time. For a states=(rs,bs,us,ds)∈Sof the Markov chainM(H,B)=(S,P)we define the inventory level as‖rs‖1+bs, i.e., the total number of products that are currently buffered or being reworked. For a positive integer n letIs,ndenote the expected average inventory level over the first n cycles after starting froms. If we formally defineIz,0=0for allz∈S, the following recursion holds forn⩾1:(12)Is,n=1n∑z∈SPs,z‖rz‖1+bz+(n-1)Iz,n-1.We now turn our attention to the sequence scrambling which results from the operation of the production line segment introduced in Section 2. Given the random nature of the rework process, the sequence in which products are sent downstream from the buffer at the end of the line segment can be different from the sequence in which they originally entered inspection. The signed difference between the positions of a particular product in these two sequences is called rank change. Products with positive rank change fall behind on the line, while products with negative rank change jump ahead. We remark that some authors use the term sequence displacement to refer to the negative of the rank change.Notice that rank changes depend on the buffering protocol, i.e., on the order in which available products are moved downstream (see Step 3 of the description in Section 2). In this section we assume that buffering works according to a FIFO protocol: we determine the final (downstream) sequence of products based on their arrival times to the buffer. In case of equal arrival times, FIFO is applied in accordance with the initial sequence. Table 3shows rank changes for a sequence of four products under this assumption. To simplify the analysis, in this section we assume that no stoppages occur on the production line. As we will see, this assumption makes it possible to determine the relative positions of any two products based solely on their rework times. The performance indicator Z introduced in the previous section provides a way to verify whether this simplifying assumption holds with a sufficiently high probability. Additionally, as long as the rate of line stoppages is low (which is typically the case for western automotive manufacturers), results obtained from our simplified model can be viewed as close conservative approximations.Rank changes often have an undesirable impact on the production process. A generic way to quantify this effect is to use a performance measure. Rank correlation coefficients, such as Spearman’s rho, provide a well-established way to compare the altered sequence with the original, and the performance of a system can be measured via the expected value of such a statistic. Giard and Danjou (1999) introduce another statistic specifically suited to measuring performance in a product sequencing context, based solely on the proportion of displaced products. Working with such performance measures requires knowledge of the distribution of the rank change; after providing some necessary mathematical background in Section 4.1, we derive analytic formulas describing this distribution in Section 4.2. As an alternative to relying on the proxy of performance measures, we can also attempt to directly examine the economic impact of rank changes; in Section 4.3 we illustrate this approach on a simple example which involves a workstation that installs optional parts.In this section we provide some mathematical tools which will prove useful in describing the distribution and impact of rank changes. We first recall an important algebraic concept: for an integerk⩾1the kth elementary symmetric polynomial of variablesx1,…,xnis defined as(13)sk(x1,…,xn)=∑1⩽i1<⋯<ik⩽nxi1⋯xik=∑S∈[nk]∏i∈Sxi,wherenkdenotes the family of k-element subsets of the set[n]={1,2,…,n}. Note that for allk>nwe havesk(x1,…,xn)=0; by convention we also sets0(x1,…,xn)=1. Changing the order of its arguments does not alter the polynomialsk. Therefore, by abuse of notation, for an index setJ={j1,…,jn}we can writesk(yj)j∈J=sk(yj1,…,yjn). Elementary symmetric polynomials allow us to express the probability that, out of a family of mutually independent events, a given number will take place.Proposition 4.1LetA1,…,Anbe mutually independent events such thatPr(Ai)<1holds for alli=1,…,n, and denote the sum of the indicator variables of these events byV=∑i=1nIAi. The distribution of V is given byPr(V=v)=∏i=1n1-Pr(Ai)svPr(A1)1-Pr(A1),…,Pr(An)1-Pr(An)for allv=0,…,n.We prove the claim by verifying the following chain of equalities.(14)Pr(V=v)=Pr∑i=1nIAi=v=Pr{i∈[n]:IAi=1}=v(15)=∑S∈[nv]Pr{i∈[n]:IAi=1}=S(16)=∑S∈[nv]Pr∀i∈S:IAi=1,∀i∈[n]⧹S:IAi=0(17)=∑S∈[nv]∏i∈SPr(Ai)∏i∈[n]⧹S1-Pr(Ai)(18)=∏i=1n1-Pr(Ai)∑S∈[nv]∏i∈SPr(Ai)1-Pr(Ai)(19)=∏i=1n1-Pr(Ai)svPr(A1)1-Pr(A1),…,Pr(An)1-Pr(An)The equalities in (14) are self-explanatory. We obtain (15) by summation over all possible values of the set{i∈[n]:IAi=1}. Equality (16) is trivial, and (17) follows from the mutual independence assumption. SincePr(Ai)<1for all i, we can multiply each term of the sum by∏i∈S1-Pr(Ai)1-Pr(Ai)to obtain (18). Finally, we observe thatnv={i1,…,iv}:1⩽i1<⋯<iv⩽n, which implies (19).□We can apply the above proposition to the complementary events ofA1,…,An, which also form a mutually independent family, to obtain the following formula.Corollary 4.1LetA1,…,Anbe mutually independent events and assume thatPr(Ai)>0holds for alli=1,…,n. The distribution ofV=∑i=1nIAiis given byPr(V=v)=∏i=1nPr(Ai)sn-v1-Pr(A1)Pr(A1),…,1-Pr(An)Pr(An)for allv=0,…,n.While elementary symmetric polynomials can be difficult to evaluate directly due to the exponential number of necessary operations, the following formulas (known as Newton’s identities or Newton-Girard formulas) provide a computationally tractable recursion; for a proof see for example Mead (1992).Proposition 4.2Denoting the ith power sum of variablesx1,…,xnbyπi(x1,…,xn)=x1i+⋯+xni, the following equality holds for allk∈[n]:ksk(x1,…,xn)=∑i=1k(-1)i-1πi(x1,…,xn)sk-i(x1,…,xn).We remark that Propositions 4.1 and 4.2 can be combined to yield a recursive formula for the distribution of the sum of indicator functions of mutually independent events. This formula appears in Cao and West (1997), with a proof which essentially replicates that of Newton’s identities.Consider a sequence of consecutive products arriving at the inspection station, indexed by integers in the intervalI⊂Zaccording to the time of their arrival, i.e., product i arrives at the station at time i. LetRidenote the rework time of product i, and note that according to our assumptions allRiare i.i.d. as R. LetTi=i+Ridenote the time product i becomes buffered and ready to be sent downstream. In accordance with the FIFO principle, if the timesTiandTjcoincide for two products, then the product which arrived at the inspection station first will get buffered first. Therefore we have the following rule:(20)Productigets buffered before productj⇔i<j,Ti⩽TjORi>j,Ti<Tj.Table 3 illustrates the operation of the above rule on a small example. In order to keep our formulas simple, for the remainder of this section we assumePr(R=0)>0.Remark 4.1The assumption that we havePr(R=0)>0is not restrictive. Suppose that we have a positive minimum rework timer0=min{r:Pr(R=r)>0}. Since rule (20) shows that the sequence of products which enter the buffer depends only on the ordering of the timesTi=i+Ri, we can replace each rework timeRibyRi-r0without affecting this sequence.We now use our new notation to provide a formula expressing rank changes.Proposition 4.3The rank change of product i isΔ(i)=j∈I:j>i,Tj<Ti-j∈I:j<i,Tj>Ti.LetI-={j∈I:j<i}andI+={j∈I:j>i}. We prove the claim by showing that the following chain of equalities holds.(21)Δ(i)=j∈I:jbuffered beforei-|I-|(22)=j∈I+:Tj<Ti+j∈I-:Tj⩽Ti-j∈I-:Tj⩽Ti+j∈I-:Tj>Ti(23)=j∈I+:Tj<Ti-j∈I-:Tj>TiBy definition,Δ(i)is the signed difference between the number of products buffered before product i and the number of those arriving to the inspection station before product i, implying equality (21). To obtain equality (22) we split the first term according to the partitionI⧹{i}=I-∪∗I+and apply rule (20); we then similarly split the second term according to theTjvalues. After rearranging the terms, equality (23) follows immediately.□Notice that if the maximum rework timeρis at most 1, then for each pair of indicesi<jwe haveTi=i+Ri⩽i+ρ⩽i+1⩽j⩽Tj, therefore all rank changes are zero. The following theorem describes the distribution of the rank change of a product in the non-trivial case, using the elementary symmetrical polynomials introduced in Section 4.1.Theorem 4.1Assume thatρ>1, and consider the sequence of products arriving at the inspection station at timesI={-ρ,…,ρ}. Let X denote the number of products which arrive after timeR0-ρbut before timeR0, and get buffered after product 0.I.The rank change of product 0 isΔ(0)=[R0-1]+-X.The distribution of the rank change of product 0 is given byPr(Δ(0)=d)=∑r=0ρPr(R=r)Pr(X=[r-1]+-d|R0=r).Let us introduce the index setsJr=[ρ]⧹{r,r+1}={1,…,r-1}∪{r+2,…,ρ}forr=0,…,ρ. The distribution of the conditional random variableX|(R0=)ris given by the formulaPr(X=x|R0=r)=∏j∈JrPr(R<j)sxPr(R⩾j)Pr(R<j)j∈Jrfor all non-negative integers x, whilePr(X=x|R0=r)=0holds for negative values of x.Noting that|J0|=|Jρ|=ρ-1while|Jr|=ρ-2holds for all0<r<ρ, we havePr(X=x|R0=r)=∏j∈JrPr(R⩾j)s|Jr|-xPr(R<j)Pr(R⩾j)j∈Jr.We show I by verifying the following chain of equalities.(24)Δ(0)=j∈I:j>0,Tj<T0-j∈I:j<0,Tj>T0(25)=j:0<j<R0,Tj<T0-j:R0-ρ<j<0,Tj>T0(26)=[R0-1]+-j:0<j<R0,Tj⩾T0-j:R0-ρ<j<0,Tj>T0(27)=[R0-1]+-j:0<j<R0,jbuffered after0+j:R0-ρ<j,jbuffered after0(28)=[R0-1]+-j:R0-ρ<j<R0,jbuffered after0Applying Proposition 4.3 withi=0we get (24). Observe thatj⩾R0impliesTj=j+Rj⩾R0+0=T0, whilej⩽R0-ρimpliesTj=j+Rj⩽R0-ρ+ρ=T0; equality (25) follows immediately. To see that (26) holds, consider the partition{j:0<j<R0}={j:0<j<R0,Tj<T0}∪∗{j:0<j<R0,Tj⩾T0}, and note that|{j:0<j<R0}|=[R0-1]+. Equalities (27) and (28) are self-explanatory.Claim II follows from I via the law of total probability. To prove III we first recall that, as seen in the proof of I, we haveX={j:0<j<R0,Tj⩾T0}∪{j:R0-ρ<j<0,Tj>T0}. SubstitutingTj=j+RjandR0=T0=ryields(29)X|(R0=r)={j:0<j<r,Rj⩾r-j}∪{j:r-ρ<j<0,Rj⩾r-j+1}(R0=r).SinceR0is independent from{Rj:j≠0}, we can remove the conditionR0=rfrom the right-hand side of (29) without changing the distribution. Therefore we have the following equality in distribution:X|(R0=r)=dj:0<j<r,Rj⩾r-j}∪{j:r-ρ<j<0,Rj⩾r-j+1=∑0<j<rIRj⩾r-j+∑r-ρ<j<0IRj⩾r-j+1.After a simple change of indexing (where we replace j byr-jandr-j+1in the first and second sums, respectively) this becomesX|(R0=r)=d∑j∈{1,…,r-1}IRr-j⩾j+∑j∈{r+2,…,ρ}IRr-j+1⩾j.According to our assumptions the random variablesR-ρ,…,Rρare i.i.d. as R. It follows that the family(30){Rr-j⩾j}j∈{1,…,r-1}∪{Rr-j+1⩾j}j∈{r+2,…,ρ}consists of mutually independent events, with probabilitiesPr(R⩾j)j∈Jr. Note that for anyj⩾1we havePr(R⩾j)⩽1-Pr(R=0)<1. Therefore we can apply Proposition 4.1 to the family in (30), which proves our claim.The proof of IV is analogous to that of III, using Corollary 4.1 in place of Proposition 4.1.□In this section we examine the impact of sequence scrambling on a station downstream from the rework shop, which installs certain components to products that require them. In mixed-model production lines there often exist a variety of alternative components with similar functions, and different products on the line can require different components. For example, in an automotive production line each car might require one of four engine variants. The presence of such alternative components, along with optional components (such as sliding roofs) leads to combinatorial modularity (Salvador, Forza, & Rungtusanatham, 2002). If there is a wide variety of bulky alternative components, keeping a suitable level of stock at the installation station becomes a non-trivial issue with significant economic impact.Remark 4.2In some manufacturing environments it is possible to decouple orders from partially assembled products. For instance, if two otherwise identical orders require different alternative components, it is possible to switch these orders without altering the physical sequence on the line. However, we do not permit such order decoupling in the following analysis.Let us now consider a component that is either optional, or one of several alternatives. The initial projected demand for the component in a time interval I equals the number of products which require the component, and are scheduled to arrive at the installation station during I according to the initial product sequence. Due to sequence scrambling, the initial projected demand might not coincide with the remaining projected demand at the start of the time interval I, defined as the number of products which require the component, and are scheduled to arrive before the end of I but have not yet arrived before the start of I. The number of products requiring the component which eventually arrive at the installation station during I constitutes the actual demand.Let us assume that components are supplied to the station in a periodic fashion, and denote the length of the restocking period (i.e., the length of the time interval between two periodic deliveries) byτ. We further assume that the level of stock for a component at the beginning of a restocking period equals the remaining projected demand, plus a safety stock level denoted by L. When the maximum rework time does not exceed the length of the restocking period (i.e., we haveτ⩾ρ), the latter assumption is satisfied by the following simple restocking policy: For each restocking period we set aside a supply of a component that equals the initial projected demand, with the intent of delivering this supply to the installation station at the beginning of the period. When a stockout occurs, that is, when a product which requires the component arrives at the installation station and there is no component available, the product moves downstream without having the component installed. In this case a component from the supply for the next restocking period is immediately sent downstream to the end of the production line, where it will later be installed to the product at an additional cost. We mention that this is often the case in automotive manufacturing for components (such as washer liquid tanks and seats) whose installation is not a prerequisite for the downstream operation of the line.The next observation shows that if the restocking period is sufficiently long, then the amount of the periodic supply is always sufficiently large to comply with the above policy.Observation 4.1Consider a product which, according to the initial sequence, would arrive at the installation station during the ith restocking period. If the maximum rework time does not exceed the length of the restocking period, this product will eventually arrive at the station during one of the(i-1)th, ith, and(i+1)th periods.In the general case (when the inequalityτ⩾ρis not guaranteed to be valid), the above observation does not necessarily hold. However, in this case we can employ the following policy:•For each restocking period we again set aside a supply of a component that equals the initial projected demand, with the intent of delivering this supply to the installation station at the beginning of the period.We initially define the debt of each restocking period as zero.If a product arrives at the station, but it was scheduled to arrive to the station during some later restocking period I, we increase the debt of period I by one.When a stockout occurs, we remove a component from the supply for the highest indexed (i.e., farthest in the future) restocking period I with positive debt. We then decrease the debt of period I by one. As before, the removed component is sent downstream to the end of the line, to be installed later.We note that under the assumptionτ⩾ρthe two restocking policies coincide.We now proceed to develop formulas that enable us to calculate stockout probabilities and the distribution of shortage amounts for components. To simplify our analysis, throughout this section we assume that the conditionτ⩾ρholds, and thus Observation 4.1 is applicable. In Section 4.3.2 we examine how our methods can be applied when this assumption does not hold.Consider two consecutive restocking periods, period 1 and period 2. LetΛ1andΛ2denote the set of products which are scheduled to arrive at the installation station according to the initial sequence during periods 1 and 2, respectively. The sets of products which eventually arrive at the installation station during these periods (after rank changes take place) are denoted byΓ1andΓ2. Since no line stoppages occur, we have|Λ1|=|Γ1|and|Λ2|=|Γ2|. According to Observation 4.1, the setsΓ1∩Λ2andΓ2∩Λ1are of the same size; we denote their common cardinality by W and refer to it as the number of products exchanged between period 1 and period 2.Suppose that each product requires a certain component with probabilitypC, and whether a particular product requires the component or not is independent from the requirements of other products. LetB1denote the number of products in the setΓ1∩Λ2which require the component; similarly, letB2denote the number of products in the setΓ2∩Λ1which require the component.Observation 4.2For any given integer w in the support of W the conditional random variablesB1|(W=w)andB2|(W=w)are independent and identically distributed asBinomial(w,pC).The difference between the actual demand in period 1 and the initial projected demand at the start of period 1 equalsB1-B2; we denote this difference byΔ. According to Observation 4.2, the distribution ofΔis given by(31)P(Δ⩾y)=∑w=yρ∑0⩽i1,i2⩽wi1-i2⩾yPr(W=w)Pr(B1=i1|W=w)Pr(B2=i2|W=w)=∑w=yρ∑0⩽i1,i2⩽wi1-i2⩾yPr(W=w)wi1wi2pCi1+i2(1-pC)2w-i1-i2.A stockout occurs whenΔexceeds the safety stock level L, in which case the shortage amount equalsΔ-L. Note that in the general case the shortage amount is[Δ-L]+. A stockout occurs in period 1 if and only if we haveΔ⩾L+1.Our next goal is to find the distribution of the number W of products exchanged between restocking periods 1 and 2. Assume that the products numbered1,…,ρwere the finalρproducts scheduled to reach the installation station in period 1; in this case those numberedρ+1,…,2ρare the firstρproducts scheduled to reach the installation station in period 2. LetU1⩽U2⩽⋯⩽Uρdenote the order statistics of the valuesT1,…,Tρ, and letV1⩽V2⩽⋯⩽Vρdenote the order statistics of the valuesTρ+1,…,T2ρ. The distributions of these order statistics are closely related:Proposition 4.4For allk=1,…,ρwe haveVk=dρ+Uk.SinceTρ+i=ρ+i+Rρ+i=dρ+i+Ri=ρ+Tiholds for alli=1,…,ρ, the kth order statisticVkof the random variablesTρ+1,…,T2ρcoincides with the kth order statistic of(ρ+T1),…,(ρ+Tρ). Since the latter order statistic trivially equalsρ+Uk, our claim follows. □For any given1⩽w⩽ρwe haveW⩾wif and only ifVw<Uρ-w+1holds.LetΛ^1denote the set of products numbered1,…,ρ, and letΛ^2denote the set of products numberedρ+1,…,2ρ. To prove the claim we show that the following statements are equivalent:1.W>w, i.e., at least w products are exchanged between period 1 and period 2.At least w elements ofΛ^2are among the firstρproducts buffered fromΛ^1∪Λ^2.At leastρproducts fromΛ^1∪Λ^2are buffered after the wth one fromΛ^2.At least w products fromΛ^1are buffered after the wth one fromΛ^2.The(ρ-w+1)th product fromΛ^1is buffered after the wth one fromΛ^2.Vw<Uρ-w+1.To prove1⇔2we note that (sinceρis the maximum possible rework time) products which precede product 1 in the initial sequence always arrive at the installation station before period 2; similarly, those which follow product2ρarrive after period 1. Consequently the firstρproducts to be buffered from the setΛ^1∪Λ^2belong toΓ1, while the remainingρproducts belong toΓ2.As|Λ^1∪Λ^2|=2ρ, we have2⇔3. Observe that exactly|Λ^2|-w=ρ-wproducts fromΛ^2are buffered after the wth one, which implies3⇔4. The fact|Λ^1|=ρthen immediately implies4⇔5. Finally, asVwandUρ-w+1denote the respective times the wth product fromΛ^2and the(ρ-w+1)th product fromΛ^1are buffered, we have5⇔6.□We next present some formulas which allow us to recursively calculate the cumulative distribution function of the order statisticsU1,…,Uρ. Similarly to Section 4.2, we again assumePr(R=0)>0; the argument in Remark 4.1 shows that this is without loss of generality.Theorem 4.2Let us formally defineU0=-∞andUρ+1=∞(implyingFU0≡1andFUρ+1≡0).I.Ifu⩽0thenFUk(u)=0holds for allk=1,…,ρ.Ifu⩾2ρthenFUk(u)=1holds for allk=1,…,ρ.If0<u<2ρ, let us setκ-=[u-ρ]++1andκ+=min(u,ρ). For0⩽k<κ-we haveFUk(u)=1, forκ+<k⩽ρ+1we haveFUk(u)=0, while forκ-⩽k⩽κ+the following formula holds:(32)FUk-1(u)-FUk(u)=∏i=κ-κ+Pr(R>u-i)sk-κ-Pr(R⩽u-i)Pr(R>u-i)i=κ-κ+(33)=∏i=κ-κ+Pr(R⩽u-i)sκ+-k+1Pr(R>u-i)Pr(R⩽u-i)i=κ-κ+Since the valuesT1,…,Tρall fall between 1 and2ρ, so do all their order statistics; it follows that parts I. and II. are trivially true.To prove III, let us assume0<u<2ρ. We begin by showing that the following chain of equalities holds:(34)FUk-1(u)-FUk(u)=Pr(Uk-1⩽u)-Pr(Uk⩽u)=Pr(Uk-1⩽u,Uk>u)(35)=Pr∑i=1ρITi⩽u=k-1(36)=Pr[u-ρ]++∑[u-ρ]+<i⩽min(u,ρ)ITi⩽u=k-1(37)=Pr∑i=κ-κ+ITi⩽u=k-κ-.As order statistics form a monotone sequence we haveUk-1⩽Uk, which implies (34). The conditionsUk-1⩽u,Uk>uhold if and only if exactlyk-1of the valuesT1,…,Tρare less than or equal to u; equality (35) follows immediately. To see (36) it is sufficient to note thati⩽u-ρimpliesTi=i+Ri⩽(u-ρ)+ρ=u(and thusITi⩽u=1), whilei>uimpliesTi=i+Ri>u(and thusITi⩽u=0). By rearranging the terms, and recalling the definitions ofκ-andκ+, we arrive at (37).The familyTi⩽ui=κ-κ+consists of independent events with probabilities strictly between 0 and 1. Therefore we can apply Proposition 4.1 to the sum of indicator variables in (37) to prove formula (32), and similarly apply Corollary 4.1 to prove (33).□We are now able to compute the distribution of the shortage amount of the component, as well as the probability of stockout, for any given restocking period.1:We use Theorem 4.2 to calculate the cumulative distribution functionsFU1,…,FUρ.Due to Proposition 4.4 the previous step also yieldsFV1,…,FVρ.Using Proposition 4.5 and the law of total probability we obtain the distribution of W:Pr(W⩾w)=Pr(Vw<Uρ-w+1)=∑x=ρ+12ρPr(Vw=x)Pr(x<Uρ-w+1)=∑x=ρ+12ρFVw(x)-FVw(x-1)1-FUρ-w+1(x).We use (31) to find the distribution of the differenceΔ=B1-B2between actual and projected demands.The probability that there is no stockout in period 1 (i.e., that the shortage amount is zero) isP(Δ⩽L). On the other hand, the probability that the shortage amount equals some positive integer s isP(Δ=L+s).The above steps provide the stockout probabilities and shortage distributions for individual components. If joint distributions for a set of alternative components need to be taken into account, we can use the following proposition in the place of Observation 4.2 and formula (31).Proposition 4.6Consider a set of k alternative components, where each product requires exactly one of components in the set. LetpCidenote the probability that a given product needs component i fori=1,…,k, and note that we havepC1+…+pCk=1. If the requirements of each product are independent, then the joint distribution of the demand for the k components during a time period of length w is multinomial, with parameters w andpC1,…,pCk. LetΔidenote the difference between the actual demand for component i in period 1, and the initial projected demand at the start of period 1. The conditional random vector(Δi,…,Δk)|(W=w)is then distributed as the difference of two i.i.d. multinomial random variables with parameters w andpC1,…,pCk, for any w in the support of W.We now briefly outline how our methods can be applied when the maximum rework time is allowed to exceed the length of the restocking period. The main difference from our previous analysis is that it is now possible for a product to “jump ahead” or “fall back” far enough in the sequence to skip an entire restocking period. Since in a practical context the impact that these rare events have on the probability and extent of stockouts is often negligible, we can directly employ the formulas developed in the previous section in order to obtain approximate results. In addition, it can be verified that these formulas always provide upper bounds on the actual expected shortage amounts and stockout probabilities (regardless of the accuracy of the approximation).It is also possible to derive exact formulas to describe the general case (i.e., the case when we can haveτ<ρ), but these formulas are more complex, and computationally significantly more demanding, than their previous counterparts. As before, the random variableΔ(which denotes the difference between the actual demand during a restocking period, and the remaining projected demand at the beginning of the same period) determines whether a stockout will occur, as well as the extent of a stockout. The proof of the following result is analogous to that of Proposition 4.5.Proposition 4.7Consider a sequence of consecutive products indexed by1,…,2ρ+τ, where productsρ+1,…,ρ+τare scheduled to arrive at a workstation during a given restocking period. LetU1,…,Uρ+τdenote the order statistics of the arrival timesT1,…,Tρ+τ, and letV1,…,Vρdenote the order statistics of the arrival timesTρ+τ+1,…,T2ρ+τ. As before, we formally defineU0=V0=-∞andUρ+τ+1=Vρ+1=∞. In addition, letW1andW2be the random variables defined by the following equivalence (for0⩽w1⩽τandw1⩽w2⩽ρ):(38)W1⩽w1,W2=w2⇕Vw2-w1<Uρ+w1-w2+1,Vw2<Uρ+τ-w2+1,Vw2+1⩾Uρ+τ-w2For any pair of integers(w1,w2)in the support of(W1,W2)the conditional random variableΔ|(W1=w1,W2=w2)is distributed as the difference between two independent binomial random variables:(39)Δ|(W1=w1,W2=w2)=dBinomial(w1,pC)-Binomial(w2,pC)Similarly to Proposition 4.6, if we jointly consider a set of alternative components, the difference of independent binomial variables in formula (39) can be replaced by the difference of independent multinomials.Remark 4.3Like W in the previous section, the random variablesW1andW2in Proposition 4.7 have a natural interpretation:W1is the number of products that are scheduled (according to the initial sequence) to arrive after a given restocking period, but actually arrive during the period. Similarly,W2represents the number of products that are scheduled to arrive before the end of the period, but arrive after its end.Keeping in mind that the order statisticsU1,…,Uρ+τare independent fromV1,…,Vρ, we can now find the distribution ofΔvia steps analogous to those described at the end of Section 4.3.1.1:SinceU1,…,Uρ+τare the order statistics of (non-identically distributed) independent random variables, their joint distribution can be calculated using the well-known Bapat–Beg theorem (Bapat & Beg, 1989).The joint distribution ofV1,…,Vρcan similarly be calculated using the Bapat–Beg theorem.Using the above joint distributions, formula (38) allows us to obtain the joint distribution of the random variablesW1andW2.We can use formula (39) and the law of total probability to find the distribution ofΔ.The distribution of the shortage amount can be calculated from the distribution ofΔas before.We note here that, since the Bapat–Beg theorem expresses the joint distribution of order statistics via matrix permanents, the first two steps of the above procedure become computationally challenging for high values ofρ.We now present an extensive numerical study to illustrate the applicability and usefulness of our modeling approaches, and to obtain managerial insights. We first employ our Markov chain model from Section 3 to describe both the transient and the long-term behavior of a production line section that features an inspection station along with a small rework shop and a small buffer. We then utilize the analytical tools developed in Section 4.2 to examine rank change distributions on a large-scale example. Finally, we use the results from Section 4.3 to evaluate the impact of sequence scrambling on a station that installs alternative or optional components.Calculations were carried out on an HP workstation with two Intel® Xeon® W5580 3.20gigahertz CPUs and 32gigabytes of memory, using MATLAB 7.12.0. We mention that all calculations featured in Section 5.1 were carried out in a few minutes. We discuss the computational performance of our other methods at the end of Section 5.2.In this section we consider a small-scale illustrative example which features a rework shop with a maximum rework time ofρ=8, and rework time distribution given by the parametersp0=0.8andq=(0.02,0.05,0.07,0.11,0.14,0.21,0.3,0.1). We first note that if the rework shop size H is high enough, then the probability of line stoppages becomes negligible. In our case, as Fig. 3shows, forH⩾5the long-term throughput is close to 1, therefore in our following analysis we only consider smaller values of H. We mention here that the state space of our Markov chain model grows quickly with H: forH=3we have|SR|=229, while forH=4we have|SR|=594.In addition to the long-term (recurrent) behavior, our models also allow us to examine the throughput during the transient phase of operation. The transient behavior of the system strongly depends on the initial state, i.e., on the number and (where applicable) the remaining rework time of products that initially occupy the inspection station, the rework shop, and the buffer. Accordingly, in Figs. 4–7each individual curve corresponds to a different initial state. In particular, the topmost curve always corresponds to an initial state where products in the rework shop all have zero remaining rework time, while the lowermost curve corresponds to the case with the maximum possible rework times (i.e.,‖r‖1products, with remaining rework times ofρ,ρ-1,…,ρ-‖r‖1+1). Similarly, among the intermediate curves, those with lower initial segments typically correspond to initial states with higher remaining rework times.The left panel of Fig. 4 shows the expected throughput of a production line that starts its operation with products already in the buffer. Notice that the expected throughput starts at 1 for all initial states, as no downstream stoppage can occur while the buffer is not empty. For initial states where the products in the rework shop require little or no rework, the expected throughput decreases slowly, while in the presence of products with large remaining rework times the decrease is more rapid. Similarly, the right panel of Fig. 4 depicts the expected throughput when operation starts with a single product in the rework shop, and no buffered products. In this case, the initial expected throughput equals eitherp0=0.8or 1, depending on whether the initial product in the rework shop requires rework. As the rework shop gradually fills up during the operation, the expected throughputs for all initial states converge to the long-term average.From a managerial point of view it is often important to ensure that a production line operates without stoppage for an extended length of time with a high probability. Fig. 5 shows how the probability of uninterrupted operation decreases in time, for initial states with free spaces in the rework shop. Fig. 6 illustrates how the probability of encountering downstream stoppages can be reduced by starting operation with products already in the buffer.We next turn our attention to the inventory level, defined as the total number of products in the rework shop and the buffer. According to Definition 3.2 and Corollary 3.1, the inventory level is equal to the rework shop size in any recurrent state; Fig. 7 shows the convergence to this long-term value. The left panel illustrates the decrease in the expected inventory level when we start with a single product in the buffer (corresponding to an inventory of 4). The right hand side similarly describes the situation when we start with an empty space in the rework shop, i.e., with an inventory of 2. In accordance with our theoretical results, the expected inventory level in both cases converges to 3 (the size of the rework shop), regardless of the initial state.We now examine the relationship between the rework time distribution and the rank change distribution. First, we consider three types of conditional rework time distributions, all with a maximum rework time ofρ=80: left-skewed, right-skewed and uniform. We remark that right-skewed distributions are common in the automotive industry. As Fig. 8shows, there are similar peaks on the negative side of the rank change distribution for all rework time distributions. These peaks correspond to events where a product requires little or no rework, and therefore “jumps ahead” on the line. On the other hand, the remaining parts of the rank change distributions (to the right of the aforementioned peaks) reflect the shapes of the corresponding rework time distributions.To study the effects of the mean and volatility of the rework time distribution, we consider the family of triangular distributions, originally introduced by Kokonendji, Kiesse, and Zocchi (2007). These symmetric discrete distributions are defined by three parameters: the center and the arm establish the support interval{center-arm,…,center+arm}, while the order is a shape parameter (see Fig. 9). We can change the center to vary the mean of the distribution without affecting the standard deviation. Similarly, we can change either the arm or the order to vary the standard deviation without affecting the mean. Whenever some of the parameters are not explicitly given in the following analysis, they are assumed to take the following baseline values:center=40,arm=40,order=1.5. We note here that while in practice the mean and variance of the rework time distribution are usually not adjustable in a direct fashion, there are typically multiple options available for rework-related resources (in terms of the type and number of equipment used, personnel, floor capacity, etc.). Assuming that the impact of these options on the rework time distribution (in particular, on its mean and variance) is known, our methodology allows us to evaluate the tradeoffs associated with these options.According to Inman (2003), the size of an ASRS that is always able to restore the original sequence equals the highest rank change. In our models the highest possible rank change isρ-1; however, this value is typically attained with a negligibly small probability. In order to provide an appropriate basis for managerial decisions, one can instead consider a high, say 95th, percentile of the rank changes. The left panel of Fig. 10shows that the dependence of this percentile on the mean conditional rework time is nearly linear, and the slope is determined byp0. The right panel shows that, when the standard deviation is changed via adjusting the arm of the conditional rework time distribution, the dependence of the percentile on the standard deviation is also nearly linear. However, when the shape of the distribution is altered (via the order parameter), we observe a deviation from this linear pattern. The reason for this difference is that, unlike altering the order, increasing the arm also increasesρ. The resulting longer tail of the rework time distribution has a more significant effect on the tail of the rank change distribution than a change in the shape parameter.To conclude this section, we examine the effect ofp0(the proportion of products that require no rework) on the rank change distribution. The left panel of Fig. 11shows rank change distributions for various values ofp0, while the right panel shows the 95th percentile of rank changes as a function ofp0. To explain the non-monotone nature of the latter plot, we note that in order for large rank changes to occur regularly, two factors are necessary:•A significant proportion of products has to have a large rework time. This is not the case for low values ofp0.A large proportion of the products that follow one that is in long rework need to overtake it. This is not the case for very high values ofp0.In this section we investigate the impact of sequence scrambling on the decisions and costs related to the installation of alternative or optional components. In particular, we consider a component that is required by each product with probabilitypC, and again assume that conditional rework times follow a triangular distribution. We first note that, due to the limited exchange of products between restocking periods, under the simplifying assumptionρ⩽τthe lengthτof a restocking period has no impact on the probability and extent of stockouts. On the other hand, as Fig. 12shows, these quantities can be controlled by keeping a suitable level L of safety stock. Since increasing the safety stock results in increased inventory levels at the installation station, decision makers have to consider the tradeoff between holding costs and stockout costs. Fig. 12 also indicates that stockouts are more frequent for values ofpCthat are close to0.5. The reason for this is that the demand for the component is determined by binomial distributions with success probabilitypC, and these distributions attain their highest variance when we havepC=0.5. Fig. 13explicitly shows the effects ofpCon stockouts.We now look at the effects of the rework time distribution under the “worst-case” assumptionpC=0.5. The right panel of Fig. 14shows that altering the mean conditional rework time has a nearly linear effect on the expected shortage. According to Fig. 15the impact of the standard deviation is relatively small, regardless of whether the standard deviation is altered via the changing arm or changing the order. This observation stands in contrast to what we have seen for rank change distributions. Finally, Fig. 16shows that the impact ofp0becomes pronounced in the range[0.6,1], although this effect is mitigated by higher safety stock levels.In conclusion, we mention that exact analytical approaches such as those proposed in this study require significant simplifying assumptions and often suffer from a curse of dimensionality. These factors necessarily limit the size and complexity of problems that can be studied using the Markov chain-based methods developed in Section 3. In our view the primary role of these methods is to provide insights via the detailed study of small-scale models. For the quantitative analysis of practical problems of larger size or higher complexity the use of established simulation methods (see, e.g., Altiok & Melamed, 2010, Chapter 11) might be more appropriate. On the other hand, the recursive formulas developed in Section 4 remain viable even for the larger rework times that can be encountered in practical instances. Table 4shows the CPU times needed to compute rank change distributions (RCD), as well as shortage probabilities and expected shortages (SH). For the purposes of evaluating computational performance, we use the baseline valuesp0=0.6andpC=0.5, and consider uniformly distributed rework times.

@&#CONCLUSIONS@&#
