@&#MAIN-TITLE@&#
A new proposal for fusing individual preference orderings by rank-ordered agents: A generalization of the Yager's algorithm

@&#HIGHLIGHTS@&#
The paper faces the problem of combining multi-agent preference orderings.The specific decision-making problem can be denominated as “ordinal semi-democratic”.A variant of the Yager's algorithm is proposed and discussed.The description of the new algorithm is supported by practical examples.

@&#KEYPHRASES@&#
Preference ordering,Decision making,Aggregation,Multi-agent,Ordinal semi-democratic,

@&#ABSTRACT@&#
The problem of the aggregation of multi-agents preference orderings has received considerable attention in the scientific literature, because of its importance for different fields of research. Yager (2001) proposed an algorithm for addressing this problem when the agents’ importance is expressed through a rank-ordering, instead of a set of weights. The algorithm by Yager is simple and automatable but is subject to some constraints, which may limit its range of application: (i) preference orderings should not include incomparable and/or omitted alternatives, and (ii) the fused ordering may sometimes not reflect the majority of the multi-agent preference orderings.The aim of this article is to present a generalized version of the algorithm by Yager, which overcomes the above limitations and, in general, is adaptable to less stringent input data. A detailed description of the new algorithm is supported by practical examples.

@&#INTRODUCTION@&#
A general problem, which may concern practical contexts of different nature, is to aggregate multi-agent orderings of different alternatives into a single fused ordering. Considering the example in Table 1, M decision-making agents11By a decision-making agent we will consider any of a wide variety of different types of entities. Examples could be human beings, individual criteria in a multi-criteria decision process, software based intelligent agents on the Internet, etc.(D1 to DM) formulate preference orderings among n alternatives of interest (a, b, c, d, etc.). Each ordering allows statements like a > b, a ∼ b, b > a, where symbols “>” and “∼” respectively mean “strictly preferred to” and “indifferent to”. The objective is to aggregate the M agents’ orderings into a single fused one, which should reflect them as much as possible, even in the presence of diverging preferences. For this reason, the fused ordering can also be defined as consensus or compromise ordering (Cook, 2006; Herrera-Viedma, Cabrerizo, Kacprzyk, & Pedrycz, 2014). Aggregation should also take into account the agents’ importance, which is not necessarily equal for all of them.This decision-making problem is very diffused in a variety of real-life contexts, ranging from multi-criteria decision aiding/making to social choice theory (Kelly, 1991); as an example, Table 2illustrates some practical applications. Two of the reasons for this diffusion are that (i) preference orderings are probably the most intuitive and effective way to represent preference judgments of alternatives, and (ii) they do not require a common reference scale – neither numeric, linguistic or ordinal – to be shared by the interacting agents (Chen, Liu, Wang, & Augusto, 2012; Yager, 2001).The literature embraces a variety of aggregation techniques, which are relatively interchangeable among the fields of application. Despite this variety, they can generally be divided in two categories (Arrow & Rayanaud, 1986):1.Methods in which all agents have the same importance (Zhu, 2003); e.g., let us consider the classical approaches in the voting theory field (Borda, 1781; Condorcet, 1785; Lepelley & Martin, 2001);Methods in which agents have recognized abilities and attributes and/or privileged positions of power, represented by weights (Dubois, Godo, & Prade, 2012; Xu, 2004); e.g., let us consider the ELECTRE or the PROMETHEE methods, in the multicriteria decision aiding/making field (Brans & Mareschal, 2005; Figueira, Greco, & Ehrgott, 2005).Considering the second category methods, the definition of the agents’ weights is a very delicate issue. In some settings, the weight of an agent may be well defined; for example, the Gross National Product (GNP) or population size of a country represented by the member on an International committee can immediately be used as weights. In many situations the definition of the weights is controversial, because there are no indisputable criteria or substitution rates that can be used for this operation. Weights are often imposed by decision-makers, according to political strategies (Wang, Liang, & Qian, 2014). For example, the scientific committee of a competitive examination for promotion of faculty members may decide that the scientific publications will account for 40 percent of the total performance, the International projects for 20 percent, the teaching activity for 35 percent, etc.The literature includes several techniques about the quantification of weights. For example, the AHP procedure uses the eigenvector method to derive a weight vector relating to agents (Saaty, 1980), or the method proposed by Martel and Ben Khelifa (2000) determines the so-called “relative importance coefficient” of each agent, based on the combination of subjective and objective components.In some settings, weights are not available or cannot be defined on cardinal scales. In these cases, the importance hierarchy of agents may be expressed by a rank-ordering, such as D1 > (D2 ∼ D3) > … > DM (Yager, 2001). When the agent importance prioritization is doubtful, the formulation of orderings is certainly simpler and more intuitive than that of weights (Chen et al., 2012).In the remainder of this paper we will focus on a specific aggregation problem in which the agents’ importance is expressed through a rank-ordering. This decision-making framework can be denominated as “ordinal semi-democratic”; the adjective “semi-democratic” indicates that agents do not necessarily have the same importance, while “ordinal” indicates that their rank is defined by a crude ordering. This makes the set of the possible solutions relatively wide, since they may range between the two extreme situations of (i) full dictatorship – in which the resulting fused ordering coincides with the preference ordering by the most important agent (dictator) – and (ii) full democracy – where the agents’ preference orderings are considered as equi-important.In spite of its practicality and adaptability to a large number of practical contexts, this specific decision-making problem is almost completely ignored in the literature. Over ten years ago, Yager (2001) proposed an algorithm (hereafter abbreviated as YA, which stands for Yager's Algorithm) to address this problem in a relatively simple, fast and automatable way. Unfortunately, this algorithm has two important limitations: (i) the resulting fused ordering may sometimes not reflect the preference ordering for the majority of agents (Jianqiang, 2007) and (ii) it is only applicable to linear orderings, without incomparabilities and omissions of the alternatives of interest (see the example in Fig. 1(a)). These two limitations will be clarified in the next section.The objective of this paper is to enhance the YA so as to overcome its limitations and adapt to less stringent preference orderings (e.g., like the partial ordering exemplified in Fig. 1(b)). The new algorithm can be interpreted as a generalization of the YA. For this reason, it will be denominated as “Generalized (Yager's) Algorithm”, hereafter abbreviated as GYA.The remainder of the paper is organized into three sections. Section 2 recalls the YA in detail, with special attention to its limitations. Section 3 illustrates the GYA, highlighting its advantages with respect to the YA. The description of both algorithms is supported by practical examples. For a structured comparison between the two algorithms, we will use a taxonomy based on four evaluation criteria (i.e., versatility, consistency, efficiency and computational complexity), defined and described in Table 3.The concluding section summarizes the original contributions of this paper and its practical implications, limitations and suggestions for future research.In Section 2.1 we take the liberty to illustrate the algorithm by Yager from a “pedagogical” point of view. For a more rigorous description, we refer the reader to the original contribution by Yager (2001). Section 2.2 discusses the (dis)advantages of this algorithm, from the perspective of the criteria in Table 3.The algorithm can be schematized in three basic phases (mentioned in Table 4) which are described individually in the next three sub-sections.The goal of this phase is building preference vectors based on the linear preference orderings by the agents. For each agent's vector, we place the alternatives as they appear in the ordering, with the most preferred one(s) in the top position. If at any point t > 1 alternatives are tied (i.e., indifferent), we place them in the same element and then place the null set (“Null”) in the next t – 1 lower positions. For example, when considering three alternatives (a, b and c) with the ordering (a ∼ b) > c, the resulting vector will conventionally be [{a ∼ b}, Null, {c}]T. By adopting this convention, the number (n) of elements of a vector will coincide with the number of alternatives of interest.Considering four fictitious agents (D1 to D4), with four relevant orderings of six alternatives (a, b, c, d, e and f), and assuming a certain hierarchical ordering between agents (i.e., D4 > (D2 ∼ D3) > D1), the resulting preference vectors can be constructed as shown in Table 5. For simplicity, vectors will be denominated as the relevant agents (i.e., Di, where subscript “i” denotes the order number of agents, thereforei∈{1,2,…,M}).Each vector element can be associated with an indicator (Fi,j), given by the ratio between the position/level (j) of the element (from the bottom) and the total number of elements (n = 6 in the case exemplified). Since Fi,jcorresponds to the cumulative relative frequency of the alternatives contained in a certain element of the preference vector, it can be interpreted as a relative-position indicator.Next, preference vectors are transformed into “reorganized” vectors, conventionally denominated asDi*, where subscript “i” denotes the order number of the reorganized vectors (i∈{1,2,…,m}, m being the total number). This transformation consists in (i) sorting the Divectors decreasingly with respect to the agents’ importance, (ii) aggregating those with indifferent importance (e.g., D2 and D3 in the example) into a single vector. This aggregation is performed through a level-by-level union of the vector elements, where alternatives in elements with the same (jth) position are considered as indifferent. The resultingDi*vectors will therefore have a strictly decreasing importance ordering.Going back to the example in Table 5, the four vectors (D1 and D4) are turned into three reorganized vectors (D1*toD3*, see Table 6). It can be noticed thatD2*– given by the aggregation of two vectors with equal importance (i.e., D2 and D3) – contains two occurrences for each alternative.Of course, m will be smaller than or equal to M (3 against 4 in the example presented).This phase defines a sequence for reading the elements of theDi*vectors; see the representation through the flowchart in Fig. 2(a). The sequence defines a bottom-up level-by-level reading of vector elements. The first elements read are those with lowest position (j = 1). When considering elements with the same (jth) position, priority is given to the vectors of greater importance. After having read all the elements with (jth) position, we move up to the (j+1)th position, repeating the reading sequence. Table 6 reports the sequence numbers (S) associated with each element of the reorganized vectors.This phase is aimed at determining a fused ordering through a gradual selection of the alternatives, in which the last elements of the ordering are those positioned in the lowest positions ofDi*vectors and vice versa.The flow-chart in Fig. 2(b) illustrates the algorithm for constructing the fused ordering. This algorithm can be classified as an AND-ing type as a generic alternative is excluded from a higher position of the fused ordering when it is in a lower position in (at least) one of the individual preference orderings. Reversing the perspective, for an alternative to be in a higher position of the fused ordering, it should be in a higher position for any of the individual orderings (i.e., AND relationship).Applying the algorithm to the vectors in Table 6, the resulting fused ordering is: a > b > d > e > c > f.Table 7shows the gradual construction of the fused ordering; the first two columns report the S value of the element of interest and the alternative(s) that it contains, while the last two report the alternatives not yet included in the gradual ordering and the gradual ordering itself.Yager (2001) points out that the construction of the fused ordering could also be based on a top-down reading sequence, instead of bottom-up (see Section 2.1.2) In this other case, the level-by-level reading of the vector elements would be analogous to that one illustrated in Fig. 2(a), except that it would begin from the elements with highest position (j = n), gradually moving down to the lower levels (i.e., j = n – 1, j = n – 2, and so on). Also, the gradual insertion of the alternatives into the fused ordering would be performed according to an increasing preference order (i.e., from the most preferred to the least preferred), instead of decreasing. For the purpose of example, the fused ordering resulting from this alternative approach would be: a > (b ∼ c) > (d ∼ e) > f. This alternative approach can be classified as OR-ing type, as for an alternative to be in a higher position of the fused ordering, it should be in a higher position for at least one of the preference orderings (i.e., OR relationship).Yager states that the implementation of an OR-ing would produce a fused ordering “that is compatible with at least one of the individual (preference) orderings”, while that of an AND-ing a fused ordering “that is compatible with all the individual orderings” (Yager, 2001, page 4), suggesting that the latter approach is better than the former.

@&#CONCLUSIONS@&#
The most important contribution of this paper is to propose the GYA, i.e., a generalized version of the YA, which has two main advantages: (i), it is more consistent, since it better reflects the multi-agent preference orderings, and (ii) it is more versatile than the original version, since it admits preference orderings with omitted or incomparable alternatives. Also, it is automatable and can be applied to a larger variety of practical contexts, providing more realistic results.Because of the greater complexity, the GYA is computationally slightly more burdensome than the YA. On the other hand, it is more efficient in terms of use of the information available.A limitation of the new algorithm is related to the mechanism for aggregating and/or comparing elements from different preference vectors. The underlying assumption is that the degree of preference of one alternative depends on the relative position of the corresponding element, depicted by Fi,jindicators.Future research go in several directions: (i) quantitative analysis of the robustness of the GYA with respect to small variations in the preference orderings or in the Tk,xthresholds, (ii) application of the GYA to various decision-making frameworks (Franceschini et al., 2015), and (iii) revision of the mechanism for comparing elements from different preference vectors, trying to overcome the use of the Fi,jindicators.This variant can be decomposed in the same three phases reported in Table 4. While the phase concerning the construction and reorganization of the preference vectors is unchanged with respect to what is described in Section 3.2 (bottom-up approach), the remaining two phases are slightly different.The flowchart in Fig. A.1(a) depicts the definition of the reading sequence. Comparing it with that one in Fig. 5(a), one can observe small variations in the instructions number 4 and 7 respectively. For the purpose of example, Table A.1reports the resulting top-town reading sequence relating to the four preference orderings in Fig. 3.As regards the construction of the fused ordering, the gradual selection of the alternatives is almost identical to that one described in Section 3.2.3, except that it follows an increasing preference order (i.e., the most preferred ones are inserted first) instead of decreasing. Comparing the flowchart in Fig. A.1(b) – which represents the procedure for constructing the fused ordering – with that in Fig. 5(b), we can notice just a minor variation in the instruction number 14. Applying the top-down approach to the vectors in Table A.1 and using the thresholds in Table 11, the fused preference ordering is a > (b ∼ c) > (d ∼ e) > f. Table A.2illustrates the step-by-step construction.The relatively significant discrepancy between this ordering and that obtained through the bottom-up approach (i.e., a > b > (d ∼ e ∼ f) > c, see Table 12) is attributable to the general nervousness of the alternatives in the source preference orderings (in Fig. 3). For example, it can be noticed that the alternative c is in the first position of the ordering by D1, in the last of that by D2 and D3, and in the middle of that by D4. Similar considerations can be applied to f. Not surprisingly, c and f have relatively different rank positions in the two resulting (top-down and bottom-up) fused orderings.In the case preference vectors have the same number of elements and Tk,x= 1, ∀k, this sequencing procedure degenerates into the OR-ing variant of the YA (recalled in Section 2.1.3). However, the OR-ing philosophy is mitigated significantly: a kth alternative is included in a higher position of the fused ordering when a portion of its occurrences larger than (1 − x) – not just a single one! – are in higher positions in the individual preference orderings.As stated by Yager (2001, page 4), the adoption of a top-down reading sequence in the YA would generate a not very reasonable fused ordering, since it would be “compatible with at least one of the individual orderings”, not necessarily all of them. The top-down variant of the GYA overcomes this problem, thanks to the more gradual mechanism for the selection of the alternatives.