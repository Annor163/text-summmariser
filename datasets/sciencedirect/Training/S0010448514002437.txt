@&#MAIN-TITLE@&#
An attribute-based and object-oriented approach with system implementation for change impact analysis in variant product design

@&#HIGHLIGHTS@&#
An integrated product model for identifying contextual impacts of design changes.An OO mechanism for handling dynamic and recursive change propagation processes.A tool to handle multiple change attempts and show the collective impact result.

@&#KEYPHRASES@&#
Variant product design,Multiple change attempts,Change impact analysis,Integrated product content,Object-oriented change propagation,

@&#ABSTRACT@&#
Variant product design is critical to the continued survival of a product in the demand-changing market. As variant product design involves numerous and concurrent attempts at requirement and product modification, a change impact analysis (CIA) becomes essential in order to capture both the potential and contextual impacts of a change proposal, and thereby ensure the consistency of the product’s integrated content throughout the process of carrying out any changes. In this regard, this paper presents an attribute-based, object-oriented approach for effectively and comprehensively performing the CIA tasks in variant product design. This approach models the integrated content of a product by characterizing its components and associated requirements with attributes and linkages. It then features an object-oriented change propagation design in order to handle the dynamic and recursive CIA loops. This approach is also able to show the collective impact when multiple changes are attempted. A computerized prototype, EPCII_EC, is implemented in order to realize the approach, and an illustrative product case with a comparative evaluation is provided in order to validate the work. Issues and limitations of this study are also discussed and suggestions are provided for future studies.

@&#INTRODUCTION@&#
In today’s highly competitive and fast-paced market, variant product design plays a key role in effectively and efficiently responding to customers’ changing needs. Variant product design is an important process that handles engineering changes (EC) and identifies the impacts of these changes on the rest of the product content  [1,2]. When ECs occur, items impacted as a result of ECs are identified and changed correspondingly. Any other inconsistencies, also referred to as side effects  [3] caused by the resultant changes also need to be identified in order to understand all potential reactions to the change. Such loop-like, dynamic and recursive change propagation processes continue until all of the inconsistencies are identified. Thus stakeholders need a technique to determine how a design change may affect the rest of the product, and to evaluate what needs to be modified accordingly. The task and technique for determining the potential effects of ECs is called change impact analysis (CIA).As product redesign often involves multiple and concurrent attempts at product modifications, CIA has become more challenging. For example, in developing a jet engine, as many as 3000 change attempts may occur between the first prototype and the launch  [4,5]. An analyst has to seek ways to ensure the consistency and integrity of the product’s contents throughout these changes  [6–9]. Many proposals of CIA in the literature aim to give a clear representation of product structures with which designers can oversee the interdependencies and consequences of an EC on product components  [10–12,6,7]. From the concurrent engineering aspect, however, existing CIA works deal mainly with information related to a product’s implemented content, without extending the analysis to the impact on other artifacts in various phases of product deployment. Since requirements are a critical source in defining the success of a product, it becomes useful if an EC is able to deal with questions like “What requirements will be affected when modifying the product?” and “What components will be affected if a customer updates certain requirements?” In other words, an initiated change may not only potentially cause direct and indirect influences on other product components, but could also contextually affect the requirements; these heterogeneous (functional requirements and components) impacts should be taken into account comprehensively, in order to ensure the consistency of a product’s integrated content and reduce the bullwhip effect in product redesign  [13].Hence, with the focus on CIA in variant product design, the motivation of this study is to develop a method for efficiently identifying the impact of ECs on product components and requirements, and to effectively maintain the consistency of product content through times of change. In this regard, the motivation of this paper is further specified as follows:(1)To efficiently perform the dynamic and recursive CIA loops, and to comprehensively identify the potential and contextual impacts of a change.To offer an automated system with flexibility in order to effectively handle multiple or concurrent changes during product redesign.In order to address these issues, this paper proposes an attribute-based, object-oriented CIA approach. This approach defines the integrated content of a product by characterizing and relating product components and functional requirements with attributes and attribute-based linkages. It then features an object-oriented change propagation mechanism for handling the dynamic and recursive CIA loops. A computerized prototype, EPCII_EC, is implemented in order to realize the approach and facilitate the CIA task. Significantly, its capacity to handle multiple changes provides a collective, comprehensive and contextual view of any impact in concurrent engineering when multiple changes are applied. To demonstrate this approach and tool, this paper presents a product case, and conducts comparative evaluations based on this case in order to assess the benefits of the proposed work. Issues and limitations of the study are also discussed, offering an outline for future research. The remainder of this paper is organized as follows: Section  2 surveys the literature on related work; Section  3 introduces the proposed approach; Section  4 demonstrates the system implementation with a technical walk-through; Section  5 presents the case and associated evaluations; Section  6 discusses the issues and limitations of the current development, and Section  7 concludes the paper.

@&#CONCLUSIONS@&#
