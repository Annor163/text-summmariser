@&#MAIN-TITLE@&#
Personalised assistance for fuel-efficient driving

@&#HIGHLIGHTS@&#
We propose a reference architecture for context-aware driving assistance systems.We implement a driving assistance system according to this architecture.System fuses real-world information from on-board sensors and external services.System adapts decision-making based on driver progress and feedback.System is implemented and operates with real data for real trips and real user.

@&#KEYPHRASES@&#
Green driving,Driving assistance,Ubiquitous computing,Context-awareness,Context reasoning,

@&#ABSTRACT@&#
Recent advances in technology are changing the way how everyday activities are performed. Technologies in the traffic domain provide diverse instruments of gathering and analysing data for more fuel-efficient, safe, and convenient travelling for both drivers and passengers. In this article, we propose a reference architecture for a context-aware driving assistant system. Moreover, we exemplify this architecture with a real prototype of a driving assistance system called Driving coach. This prototype collects, fuses and analyses diverse information, like digital map, weather, traffic situation, as well as vehicle information to provide drivers in-depth information regarding their previous trip along with personalised hints to improve their fuel-efficient driving in the future. The Driving coach system monitors its own performance, as well as driver feedback to correct itself to serve the driver more appropriately.

@&#INTRODUCTION@&#
The number of cars is increasing. Cars make our lives more convenient but have shortcomings as well. First, it is well known that car emissions have high effects on air pollution (European Environment Agency, 2011). Another worrying issue is that, among transport accidents, passenger car accidents have one of the leading positions (Eurostat, 2009). Different factors affect both of these characteristics, like driver experience, car model, traffic situation, and weather conditions. Often, a driver cannot understand or distinguish all these factors in order to optimise his driving. Our research aims to deliver to the driver information on his driving behaviour and instructions for safer and more environmentally-friendly driving.Many researchers have investigated what affects fuel usage and emissions of a car, can the driver affect these parameters and how. Sivak and Schoettle (2012) classify the driver decisions which affect fuel consumption into strategic (vehicle selection and maintenance), tactical (route selection and vehicle road), and operational (driver behaviour). The authors discovered that vehicle selection has a dominating effect on fuel economy, but the remaining factors can contribute, in total, to about 45% reduction in fuel consumption. Ericsson (2001) has investigated the factors of driving behaviour which affect fuel consumption. From her findings, the most influential factors include stops during run, extreme acceleration, and late change from 2nd to 3rd gear. In turn, driving behaviour depends on many factors, among others are street and traffic environment (Brundell-Freij and Ericsson, 2005). For instance, the density of junctions controlled by traffic lights seems to have a high effect on driving behaviour and hence on fuel consumption and car emissions. Thus, route selection is an important factor having influence on fuel efficiency (Sivak and Schoettle, 2012; Brundell-Freij and Ericsson, 2005). Route selection refers to planning a trip in such a way that the number of stops, high speeding, etc. are minimised. Ericsson et al. (2006) have calculated that a fuel-efficient route can save about 8% of fuel. Also, their study demonstrated that a fuel-efficient route is about the same as the shortest one. No significant fuel reduction effect was found for the fastest route option. Aggressive driving is another factor affecting fuel-consumption (Sivak and Schoettle, 2012; Brundell-Freij and Ericsson, 2005). Aggressive driving means certain actions increasing the risk of road accident, like excessive speeding and improper turning. In fact, aggressive driving is found to be one of the main causes of car accidents (The AAA Foundation for Traffic Safety, 2009). Based on the related work, we may conclude that it is possible to minimise fuel consumption by discovering the most relevant factors and informing drivers how to improve their driving behaviour with respect to these factors.On the other hand, drivers vary a lot. They have different driving experience, preferences, and habits. Hence they require tailored solutions to explain what can be improved in their driving style and how (Gonder et al., 2011). Moreover, different external factors, like traffic fluency situation, road quality, and weather may affect performance of drivers. Hence, the overall situation should be assessed to promote more fuel-efficient driving. This information is referred as context, and systems able to capture the context and react on its changes are called context-aware (Dey, 2001). In this article, we argue that context-aware driving assistant systems provide more adequate feedback to drivers regarding fuel-efficient driving.In this article, we propose a reference architecture for context-aware driving assistance systems. This architecture is aligned with a Meta-level control framework presented by Gilman and Riekki (2012). Their framework emphasises the necessity for self-introspective functionality for personalised and adaptive systems. This framework adds a controlling and monitoring layer to such systems. Moreover, it emphasises monitoring the overall interaction to gather feedback about how well the system supports its users in their tasks. For instance, with this kind of functionality, the system would notice that a driver constantly ignores certain advice and would perform actions to resolve such cases.The proposed architecture is exemplified with a driving support system called Driving coach. This system teaches a driver to drive better. Better driving in this context means: (1) avoiding aggressive driving, (2) trip planning, and (3) driving in a fuel-efficient manner. The system is based on real-time information, obtained from on-board sensors and external services. The driver gets feedback about his driving after each trip: comments and recommendations what to do differently in order to drive better. The key characteristics of our system are:1.Fusion of on-board information and real-time information from third party services.Identification of personal driving factors affecting the fuel use in certain situations.Adaptation of the system’s decision-making with respect to a driver’s progress and responses to recommendations.Although many applications have been developed for driver assistance, our application is unique in combining these three characteristics.The contribution of this article can be summarised as follows: First, we apply the Meta-level framework to create a reference architecture for context-aware driving assistance systems. Second, we propose Driving coach, which serves as the implementation use case for this reference architecture. Driving coach is a fully implemented and functional prototype which gathers diverse data from real trips (driving data, weather data, traffic situation data, and digital map data), analyses these data and presents feedback to the driver after the trip.The rest of the article is structured as follows: First, we present a review of related research in Section 2. Section 3 presents our vision to equip driving assistance systems with Meta-level control. Section 4 discusses the big picture of Driving coach. Then, we provide details on data used in Section 5. Section 6 describes Driving coach core. Web interface of the system is presented in Section 7. Finally, we conclude the paper with Section 8.

@&#CONCLUSIONS@&#
Development of driving assistant tools is an actively researched field in both industry and academia. We study this problem from the ubiquitous computing point of view, where the driving situation is considered as context and the driving assistant system uses this context to support the driver. Moreover, we emphasise the importance of self-introspection capabilities for driving assistant systems, as well as use of diverse information sources for more thorough analysis. We proposed a reference architecture for a context-aware driving assistant system, as well as prototyped it with a driving assistant system called Driving coach. Driving coach is a fully functional system, which collects diverse information, analyses collected data and provides a driver with personalised hints to improve the driving.Driving coach does not provide real-time support, as some related work like van der Voort et al. (2001) and Wu et al. (2011); from the time perspective, it is closer to Fiat solution4, where the trip can be observed afterwards. Such a solution gives rich capabilities for analyses as well as capabilities to integrate heterogeneous data sources. Driving coach uses diverse real context information to perform the analysis, namely weather, road geometry, driving behaviour, and traffic situation information. With such a rich set of context sources, it is unique, even though other work was reported on fusing different sources of information, e.g., by Mensing et al. (2013). Moreover, the system looks for personalisation and adapts itself to serve the user better. In this sense, it is somewhat close to, e.g., Syed et al. (2009).The current version of Driving coach partially implements the Meta-level control framework, suggested by Gilman and Riekki (2012). Implementation of this framework in the traffic related domain is challenging. First, the data retrieving procedure we used limited us for developing an offline support system. Even though an offline system provides advantages of thorough trip analyses, it makes it challenging to retrieve user feedback, and hence, to evaluate how well the decisions of the system support the user. Second, the domain itself limits the diversity of devices and user interaction modes.Despite the challenges, separation of the tasks of a ubiquitous driving assistant system to Object and Meta level seems to be feasible. First, it provides maintenance advantages for the system, as each layer encapsulates the tasks it is responsible for. Moreover, the system can be tailored to different environments and users without changes in the core Object-level tasks. This can be achieved by setting the rules the Meta level uses for controlling the Object level tasks. Also Meta-level layer can be shared between different systems in a ubiquitous environment, improving reusability.Presented solutions for both Object and Meta level functionality seem to be feasible; however, more thorough tests with different weather conditions are required to evaluate them. We find two weeks as a convenient window to obtain distributions for different driving factors. Such a time frame guarantees enough trips and demonstrates the most current driver’s skills. However, the time window could also be configured based on the amount of trips. Usage of distributions to perform the driving trip evaluation with respect to driving factors seems to be a feasible instrument, as it demonstrates which factor values should be improved for a certain driver. Moreover, we consider shifting the factor region borders to release or strength evaluation very useful, especially, for bad driving conditions. Fuel prediction models used in the first implementation of Driving coach are somewhat simplistic, but even as such they are able to produce acceptable results. The proposed method for monitoring performance of fuel prediction models and controlling the relearning process aims to support adequate system behaviour in changing situations, namely user progress and weather changes. Initial experiments demonstrated that proposed solution provides better performance in comparison to static models if some time is given to accumulate models for changing weather conditions.We see several directions for future work. First, to be able to sense a large amount of drivers, we need to think about more efficient solutions for data processing and analysis. Second, we will continue the work towards development of intelligent functionality of Driving coach. We will develop personalised cost function to evaluate the selected route and compare it with alternative routes to connect the origin and destination. With this approach, we will be able to evaluate whether the choice made by the driver is the best one. We will improve fuel consumption models (based on more detailed data) and generate a more flexible advice system. Also, as we already have many sources of information, we could use association rule mining techniques to discover driving related patterns, for example. Third, new functionality for client applications can be developed. For example, a driver could annotate a trip afterwards. This is useful for cases like, if a driver every morning gives a lift to the kids of a friend to the school, this causes stops which cannot be avoided. In order to help the system to understand such a situation correctly, the system could provide GUI tools for the driver to describe such cases. Hence, the learning algorithms would be aware of the situation. Fourth, a mobile client with a tailored user interface could be used for real-time interaction with the driver (when such facility will be available to Driving data supplier). However, this would set even more strict real-time requirements for the system. Finally, we would like to test our system with real drivers, to get their feedback about the system.