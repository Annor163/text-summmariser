@&#MAIN-TITLE@&#
Exploring DWT–SVD–DCT feature parameters for robust multiple watermarking against JPEG and JPEG2000 compression

@&#HIGHLIGHTS@&#
A blind image watermarking scheme exploiting the DWT–SVD–DCT features is presented.The proposed PQIM reaches a trade-off between robustness and imperceptibility.Multiple watermarks can be embedded into a host image.The watermarks exhibit exceptional robustness against JPEG and JPEG2000 compression.

@&#KEYPHRASES@&#
Blind image watermarking,Discrete wavelet transform,Singular value decomposition,Discrete cosine transform,

@&#ABSTRACT@&#
This paper presents a novel scheme to implement blind image watermarking based on the feature parameters extracted from a composite domain including the discrete wavelet transform (DWT), singular value decomposition (SVD), and discrete cosine transform (DCT). Multiple bits can be embedded into a single image block by adjusting designated parameters via a progressive quantization index modulation technique. The quantization with respect to the feature parameters obtained in the DWT–SVD–DCT domain leads to efficient watermark extraction without referring to the original image. Experimental results show that the embedded watermarks exhibit exceptional robustness against image compression using JPEG and JPEG2000 coding standards.

@&#INTRODUCTION@&#
In recent years, the rapid advance of network and computer technology has greatly facilitated the reproduction and editing of data in digital form. Unauthorized copying, distribution and modification of digitized works are considered infringements against intellectual property rights. The growing demand of copyright protection thus triggers the interest in digital watermarking, which is a technique that embeds information, such as ownership and authentication information, into digital data to prevent from illegal copying.In addition to the frequently encountered multimedia data such as images, audio and video, watermarking can be applied to other types of digital content. For example, reusing hardware IP cores has become a pervasive practice in the integrated circuit design industry. To avert from the unauthorized reuse of IP cores, a digital watermark can be created and embedded at different levels of circuit design to provide the required intellectual property protection [1–3]. In wireless communications, data are susceptible to attacks such as modification, insertion and deletion. Watermarking is regarded as an effective way to secure data transmission. Apart from the data validation, the watermarking technique can also be used to detect the errors and activate proper coping measures [4,5].This study is particularly focused on digital image watermarking, which can be performed either in spatial or transform domains. The spatial-domain watermarking methods are usually simple but less robustness. In contrast, methods based on transform domains such as the discrete wavelet transform (DWT) [6–10], discrete cosine transform (DCT) [11–13], discrete Fourier transform (DFT) [14–16], and singular value decomposition (SVD) [17–22] allow the exploitation of signal characteristics and human perception properties to attain better robustness and invisibility. In the past decade, many watermarking algorithms have been developed based on a mixed combination of the aforementioned transforms [23–27].The DWT is a well-known transform for image processing because of its multiresolution capability in time and frequency. The DCT holds excellent energy compaction for highly correlated image data. Watermarking using the DWT and DCT generally exhibited good performance in both invisibility and robustness. In addition to these two transforms, SVD is a powerful numeric tool useful for applications like image compression and data hiding. The SVD factorizes a matrix into three component matrices, which respectively contain left singular vectors, singular values in diagonal, and right singular vectors. A watermark bit can be embedded into an image block by either modifying the singular values [22,26] or the singular vectors associated with the largest singular value [18,19].In fact, several attempts [28–33] have been made on the development of robust watermarking algorithms in a hybrid domain involving the DWT, DCT and SVD. The developed algorithms differ not only in embedding targets but also in processing procedures. Among those starting from the use of DWT to decompose the host image into LL, LH, HL, and HH subbands, Wang et al. [28] and Santhi et al. [29] chose the LL subband for watermark embedding. Divecha and Jani [30] selected the HH subband, while Murty and Kumar [31] picked the HL subband. Navas et al. [32] showed no particular preference and simply took any of these four subbands. In contrast, Bedi et al. [33] performed the DCT first and then computed the DWT from the middle-band DCT coefficients. The watermarking was carried out later in the LL subband. Despite of the diversity of their procedural designs, one thing common to all the foregoing algorithms is that the SVD serves as a vehicle to insert information into intended matrices.In the paper presented by Wang et al. [28], a matrix D was first formed by gathering the DC values of the DCT-transformed blocks in the LL subband. The watermark embedding was a twofold process of SVD. After taking the SVD of D, i.e.D=U1S1V1T, the watermark W was mixed with S1 such thatS1+φW=U2S2V2Twhere φ denotes the embedding strength. The embedding operation was implemented by lettingD∗=U1S2V1Tand using the elements in D* to substitute the DC values of the DCT-transformed blocks afterwards. This kind of embedding framework could be traced back to Ref. [34], which has also been adopted in [21]. The original intention of the SVD-based schemes was designed to protect rightful ownership. However, Zhang and Li [35] have shown that the scheme in [34] is fundamentally flawed mainly because it relies on U2 and V2 to retrieve the watermark. One might simply use another pair of (U′2,V′2) to bias the detection, thus causing the ambiguity problem. Moreover, since the matrices U2, V2 and S1 are needed for watermark extraction, this kind of schemes is classified as non-blind watermarking.The employment of the twofold SVD strategy to embed the watermark seems very prevalent. In [29], Santhi et al. performed SVD on the watermark such that W=UwSwVwand then added Swto the singular value matrix S derived from to a block matrix in the DWT–DCT domain. The algorithms developed in [30–33] shared the basic similarity. In these algorithms, the watermark extraction requires the participation of Uwand Vwthat represent the detailed information of the watermark. Eventually, they all suffer the same ambiguity problem that has already been indicated by a few papers [35–37].Owing to the concern of the non-blind watermarking and ambiguous detection, we therefore try a distinct approach for performing watermarking in the DWT–SVD–DCT domain. In this sequel, a novel scheme is proposed to acquire the distinctive features in the composite domain for multiple blind image watermarking. A technique called progressive quantization index modulation (PQIM) is then introduced to embed binary bits into the acquired feature parameters. The rest of this paper is organized as follows. Section 2 describes the feature parameters for image watermarking. Section 3 presents the proposed watermarking scheme. Experimental results and analysis in comparison with other schemes are given in Section 4. The computational complexity and memory usage are discussed in Section 5. Finally, Section 6 sums up the conclusions.In this paper, we use one-level Haar wavelet transform [38] to decompose the host image into one approximation coefficient matrix LL, and three detail coefficient matrices LH, HL and HH respectively in the horizontal, vertical and diagonal directions. Because the embedding strength of the watermark is dependent on signal energy and most of the energy of a nature image is concentrated in the low-frequency region, we therefore embed the watermark into the LL subband to resist possible digital signal processing (DSP) attacks. However, human eyes are also sensitive to the changes in low frequencies. Embedding watermarks in the LL subband may degrade the host image considerably. A compromise can be settled by embedding the watermark in the middle frequency range of the LL subband.A scheme based on the combined use of SVD and DCT is proposed in the following to draw suitable feature parameters for watermarking. The LL matrix is first partitioned into non-overlapping blocks of size 4×4, termed A={aij}4×4, and each block is further decomposed using the SVD:(1)A=UDVT=u11u12u13u14u21u22u23u24u31u32u33u34u41u42u43u44λ10000λ20000λ30000λ4v11v12v13v14v21v22v23v24v31v32v33v34v41v42v43v44T=∑k=14λkukvkT,where U and VT(the transpose of V) denote the left and right unitary matrices. D is a diagonal matrix with nonnegative real singular valuesλk′sin decreasing order. ukand vkare the kth column singular vectors of U and V.λkukvkTcan be regarded as the kth layer of A.Because the image layer with the largest singular value, i.e.λ1u1v1T, is less susceptible to DSP attacks [18,19], it is thus chosen as the targeted object to embed binary information. In this particular layer, the vertical and horizontal geometrical characteristics are manifested by u1 and v1 respectively. Hence we apply one-dimensional (1-D) DCT, as given in Eqs. (2) and (3), to u1 and v1 individually to analyze the frequency content.(2)cu1(k)=12∑n=14un1,k=1;12∑n=14un1cosπ(2n-1)(k-1)8,k=2,3,4.(3)cν1(k)=12∑n=14νn1,k=1;12∑n=14νn1cosπ(2n-1)(k-1)8,k=2,3,4.Eventually,λ1cu1(k)is the kth frequency component along the vertical direction in the first layer, andλ1cv1(k)represents the kth frequency component in the horizontal direction.The watermark embedding can be accomplished by altering eitherλ1cu1(k)orλ1cv1(k)in the middle index range, e.g. k is either 2 or 3. Hereλ1cu1(2)andλ1cv1(2)are concurrently chosen to double the payload capacity. The pair of feature parameters(λ1cu1(2),λ1cv1(2))can be considered a coordinate in the Cartesian plane. This study resorts to the QIM technique [39] to carry out the watermarking. In principle, the QIM quantized the feature parameters into odd numbers if the watermark bits are “1’s” and even numbers if the watermark bits are “0’s”. In our experiments it has been found that the distortion due to the quantization on low-magnitude parameters appears more perceptible than that with large magnitudes. This is conceivably because the human visual system is rather sensitive to the alteration in smooth areas that usually correspond to small feature parameters. We therefore quantizeλ1cu1(2)andλ1cv1(2)in a progressive manner such that the step size expands more as the quantized index increases. More specifically, the nth quantization step Δnis of the form:(4)Δn=Δ+nδwhere Δ is a fixed value and δ is the increment between adjacent steps. According to Eq. (4), an arbitrary magnitude ρyis equal to Syquantization units by(5)ρy=|λ1cy(2)|=∫0Sy(Δ+xδ)dx=ΔSy+δSy22;y∈{′u1′,′v1′}To avoid the situation of dividing zero later in Eqs. (9) and (10), we have deliberately replacedλ1by a small nonzero number (which is 1 in this study) in Eq. (5) wheneverλ1is zero. Likewise, ifcu1(2)orcv1(2)is zero, it is replaced by 0.01ξ, where ξ is a normally distributed random value. Solving the quadratic Eq. (5) gives(6)Sy=-Δ+Δ2-2δρyδ.To embed a watermark bit wb∊{0,1}, we alter Syas(7)S^y=2Sy+12-wb,if2Sy+12⩾Sy;2Sy+12+wb,if2Sy+12<Sy,where⌊•⌋denotes the floor function.S^ystands for the quantized magnitude such that(8)ρˆy=ΔS^y+δS^y22.The alteredρˆysubsequently reflects on the two DCT coefficients, namelycuˆ1(2)andcvˆ1(2), by(9)cuˆ1(2)=cu1(2)ρˆu1ρu1;(10)cvˆ1(2)=cv1(2)ρˆv1ρv1.After modifying these two DCT coefficients, we take the inverse DCT to attain new singular vectorsuˆ1andvˆ1.It is particularly pointed out that all singular vectors shall remain orthonormal. Changing u1 touˆ1alters the orthonormal relationship in matrix U, thus preventing us from perfectly retrievinguˆ1during watermark extraction. To restore the orthonormality among all singular vectors, we apply the Gram-Schmidt algorithm touˆ1,u2,u3,u4as follows:(11)u⌣1=uˆ1(uˆ1Tuˆ1)1/2;(12)uˆi=ui-∑j=1i-1uiTu⌣ju⌣j;u⌣i=uˆi(uˆiTuˆi)1/2;i=2,3,4.Since the orthonormal property must be held for matrix V, Eqs. (11) and (12) are applied to{vˆ1,v2,v3,v4}as well.Following the modification ofu⌣i′sandv⌣i′s, the singular values also need minor adjustment. Let(13)λ⌣1=λ1(uˆ1Tuˆ1)1/2vˆ1Tvˆ11/2;(14)B=blm4×4=A-λ1uˆ1vˆ1T=A-λ⌣1u⌣1v⌣1T;(15)Z(i)={zlm(i)}4×4=u⌣iv⌣iT;i=2,3,4.B is regarded as the residual result after removing the first image layerλ⌣1u⌣1v⌣1Tfrom A. According to Eq. (13),λ⌣1u⌣1v⌣1Tis equivalent toλ1uˆ1vˆ1T. Z(i) is the ith unitary image layer. Henceλ⌣ican be obtained by minimizing the difference between the residual image B and Z(i).(16)λ⌣i=argminλi′(A-λ⌣1u⌣1v⌣1T)-∑i=24λi′u⌣iv⌣iTF2=argminλi′B-∑i=24λi′Z(i)F2,where ‖•‖Fdenotes the Frobenius-norm. A simple algebraic derivation will lead to(17)λ⌣i=∑l=14∑m=14blmzlm(i)∑l=14∑m=14(zlm(i))2=∑l=14∑m=14blmzlm(i);i=2,3,4.With the availability ofu⌣i′s,v⌣i′sandλ⌣i′s, the recovered image block becomes(18)A⌣=∑k=14λ⌣ku⌣kv⌣kT=λkuˆ1vˆ1T+∑k=24λ⌣ku⌣kv⌣kT.Fig. 1presents the procedural flow of the proposed watermarking scheme. Let the size of the host image be L×K and the size of the watermark be nL×nK, wherenL⩽⌊L/8⌋andnK⩽⌊K/8⌋. The procedures for watermark embedding are summarized as follows:0.(preprocessing) Employ the Arnold transform [40] to scramble the watermark and convert the result into a bit stream of length nL×nK. The purpose of this preprocessing step is to enhance the security of the watermark.Apply one-level two-dimensional (2-D) Haar DWT to get the LL, LH, HL and HH subbands of the host image.Partition the LL subband matrix into blocks of size 4×4.For each block:a.Use the SVD to get U, D, and V matrices.Take the 1-D DCT of u1 and v1 separately to obtain two DCT sequences, namedcu1(k)andcv1(k).Quantizeλ1cu1(2)andλ1cv1(2)based on the PQIM, as specified in Eqs. (5)–(7).Modifycu1(2)andcv1(2)using Eqs. (8)–(10).Obtainuˆ1andvˆ1by taking inverse DCT of modifiedcuˆ1(2)andcvˆ1(2)respectively, i.e.uˆ1=IDCT{cuˆ1(n)};vˆ1=IDCT{cvˆ1(n)}.Adjust the singular vectors, i.e.u⌣i′sandv⌣i′s, along with singular valuesλ⌣i′susing Eqs. (11)–(17).Replace each block in the LL subband using Eq. (18).Perform one-level inverse DWT with the modified LL matrix and three original detail matrices LH, HL and HH.As for the watermark detection, the watermarked image undergoes steps 1–2 and parts (i)–(iii) of step 3 given above to obtain the feature parameters. That is, we apply the DWT to the watermarked image to obtain the LL matrix, partition the LL matrix into blocks of size 4×4, and then acquireλ̃1c̃uˆ1(2)andλ̃1c̃vˆ1(2)from the block using the SVD followed by the DCT. The corresponding magnitudeρ̃y, wherey∈{′uˆ1′,′vˆ1′}, is converted to an indexS̃ybased on the PQIM, i.e.(19)S̃y=-Δ+Δ2-2δρ̃yδ.whereρ̃y=|λ̃1c̃y(2)|.The recovered watermark bit is classified as “1” ifS̃yis closer to an odd integer and classified as “0” otherwise:(20)w̃b=(⌊S̃y+0.5⌋)mod2,where“mod”denotes the modulus function. Once all the watermark bits are gained and arranged in a matrix of size nL×nK, an inverse Arnold transform is performed to restore the watermark.Five gray images, namely “Lena”, “Peppers”, “Baboon”, “Boat” and “Airplane”, with size 512×512 served as the host images. Two binary image logos with size 64×64 were used as the watermarks, of which the numbers of “1’s” and “0’s” were deliberately arranged to be equal. We note that the watermark can be any arbitrary binary sequence. The image logos merely serve the purpose of simple visual inspection when we assess the performance. In this study, we have tentatively set the controlling variables as Δ=18 and δ=3.6 to attain a trade-off between robustness and imperceptibility. Fig. 2shows the watermark logos and the resulting watermarked images processed through the proposed scheme.To evaluate the performance of the proposed scheme, we also examined three other SVD-based methods [17,22,26] implemented on the partitioned blocks in the LL subband. In [26], Bao and Ma defined a vector norm|(λ1,λ2,λ3,λ4)|subsuming all singular values deduced from the SVD, and then applied the QIM to quantize the vector norm. The quantization step was adapted to the mean and standard deviation obtained from each block. The maximum and minimum steps were 9 and 36 respectively. Chang et al. [22] manipulated the singular valuesλi′sfrom another aspect. The watermark bit was “1” if the inequalityλ2-λ3>η/2was satisfied and “0” otherwise. The value of η was set as 20.In [18], Chang et al. focused on the left singular vector associated with the largest singular value, namely u1. To embed a binary bit, the magnitudes of the second and third elements in u1, i.e. u21 and u31, were purposely adjusted to comply with a predefined relationship. This approach was modified later by Fan et al. [20] and Su et al. [17] such that the visible distortion caused by altering u1 can be compensated through the adjustment of v1. In this study, the optimized compensation proposed by Su et al. [17] was employed to perform the watermarking on the LL subband of the one-level 2D DWT. The minimum magnitude difference between u21 and u31 was chosen as 0.006 to maintain an adequate image quality. For the above three methods, only one watermark was embedded. To compare the efficiency of dual watermarking, our examination included another Chinese remainder theorem (CRT)-based image watermarking technique [13] implemented in the DCT domain. For this DCT-domain CRT-based approach, we have selected the DC and the second AC component to embed two image logos.The peak signal-to-noise ratio (PSNR), defined in Eq. (21), is employed to measure the difference between the original image I={Iij} and watermarked imageIˆ={Iˆij}.(21)PSNR(I,Iˆ)=10log1025521L×K∑i=1L∑j=1K(Iij-Iˆij)2.As revealed in Table 1, the PSNR achieved by the proposed one is generally the highest if one binary logo is embedded, whereas Patra et al’s CRT-based approach renders the poorest results when two logos are embedded concurrently. The PSNR’s generated by the proposed scheme are very close to 40dB even after embedding two image logos, implying that the quality of the watermarked images is quite acceptable.The robustness of the proposed watermarking scheme under various attacks is evaluated using the bit error rate (BER) between the original watermark W={Wij} and extracted watermarkWˆ={Wˆij}:(22)BER(W,Wˆ)=∑i=1nL∑j=1nKWij⊕WˆijnL×nK,where ⊕ denotes the exclusive-OR operation. The considered attack types include:1.JPEG compression: The JPEG standard with the quality factor (QF) chosen from {80,60,40,20} is applied to the test images.JPEG2000 compression: The JPEG2000 standard with the compression ratio (CR) chosen from {2,4,8} is applied to the test images.Gaussian noise (0.001): The test images are corrupted by Gaussian noise with the variance set as 0.001 of the full scale.Salt and pepper noise (1%): The test images are corrupted by the salt-and-pepper noises with 1% intensity.Median filter (3×3): A median filter with a 3×3 mask is applied to the test images.Gaussian filter (3×3): A Gaussian filter with a 3×3 mask is applied to the test images.Scaling correction (25%): The size of test images is first shrunk from 512×512 to 256×256pixels and subsequently enlarged from 256×256 to 512×512 pixels.Rotation correction: The test images are first rotated counterclockwise by45°and then-45°back to the original position.Cropping (25%): 25% of test images on the left upper corner are cropped.Brighten (+20): The operation adds 20 to each pixel value of the test images.Darken (−20): The operation subtracts 20 from each pixel value of the test images.At the present stage, we do not put geometrical attacks into test. Basically, the feature parameters acquired in the foregoing DWT–SVD–DCT domain are not rotation–scaling–translation (RST) invariant. To cope with the RST attacks, the proposed scheme needs to cooperate with other techniques, such as those discussed in [41].Table 2presents the average BER’s respectively obtained by the compared schemes. The proposed scheme exhibits exceptional robustness against JPEG and JPEG2000 compression over a wide range of compression ratios, but such an excellent performance does not guarantee the competence of withstanding other types of attacks. For example, the BER’s obtained by the proposed scheme will climb up over 15% for attacks like Gaussian noise, salt-and-pepper noise and rotation correction. Nonetheless, the other four schemes do not seem to perform well either. Bao and Ma’s scheme works fairly well in the cases like low-ratio image compression, Gaussian filtering and scaling correction. Nonetheless, this scheme completely fails in the brightening and darkening attacks. Chang et al’s scheme usually comes up with less satisfactory results except for few circumstances. Su et al’s scheme does show certain advantages in the case of salt-and-pepper noise, but its robustness against image compression is evidently incomparable with the proposed one. As for the Patra et al’s scheme, its composite performance is barely acceptable. No particular advantage is found during the comparison.JPEG and JPEG 2000 are the two widely used image compression standards. To grasp a clear view of the robustness of the selected feature parameters against these two standards, we depict in Fig. 3the average BER’s of the recovered watermarks after taking image compression at various levels. Because both Patra et al’s scheme and ours can contain more than one watermark, the examination thus comprises the circumstances where two watermarks are inserted either separately or jointly.As revealed by Fig. 3, the proposed scheme generally holds the best performance for comparison in image compression. Little discrepancy is observed for the watermark embedded in either u1 or v1. The resulting BER’s remains below 10−2 if the QF is beyond 30 in JPEG or if the CR is lower than 4 in JPEG 2000. The BER’s extracted from either single or dual watermark embedding normally show little difference for the proposed scheme. However, for the image “Peppers”, the BER’s associated with the dual watermark embedding attained by the proposed scheme do not descend to zero for high QF’s in JPEG and low CR’s in JPEG 2000. The rationale can be ascribable to the fact that the principal image layer, as manifested byλ1uˆ1vˆ1T, in few blocks of the image “Peppers” is rather vulnerable to compression attacks.Aside from the proposed scheme, Bao and Ma’s scheme is the other one demonstrating certain robustness against the JPEG and JPEG 2000 compression. The results in Fig. 3 indicate that Bao and Ma’s scheme is comparable to the proposed one for high CR’s in JPEG 2000. In contrast, the other three schemes exhibit unfavorable results.The efficiency of the proposed scheme can be better understood by inspecting the changes of the feature vectors, i.e.(λ1cu1(2),λ1cv1(2)). Fig. 4(a) depicts the movement of the feature vectors when the JPEG compression with QF=60 is applied. As revealed from the figure, the JPEG compression tends to draw the vector toward a nearby grid point. The shifting of each vector is delineated by a dash line with the blue point indicating the original position and the green square marker representing the changed location afterwards. Such a regular pattern allows us to devise an embedding scheme using the PQIM. Fig. 4(b) depicts the vector movement when the PQIM takes effect. The vectors are dragged to the grid centers according to the watermark bits. The quantization demarcation can be simply thought as a rectangular wall drawn in dashed cyan lines. Due to the PQIM, the areas of interior rectangles are expectedly smaller than that of exterior ones. An error occurs when the vector moves from one side of the wall to the other. As long as the perturbed distance of the feature vector is within a tolerable range (i.e., halfway between two grids), the recovered bit value remains intact.Also notice that Bao and Ma’s scheme requires preserving the quantization steps for all blocks. In their primal scheme, the steps were encoded using vector quantization and regarded as secrete keys. This kind of approach is not blind in a strict sense as it requires the preservation of additional information derived from the host image. The other SVD-based schemes determine the watermark bits merely by comparing the coefficients derived from the partitioned blocks in the LL subband. The blindness is confirmed since there is no need to access the original image or auxiliary information while retrieving the hidden information from the watermarked image. Likewise, Patra et al’s scheme obeys the basic requirement of blind watermarking. The watermark detection solely depends on the examination of quantized parameters obtained from the watermarked image.To analyze the computational complexity, we begin with listing the number of floating-point operations necessitated by each transformation and matrix/vector manipulation participating in the watermarking schemes. Many of the tabulated formulae can be referred to [42,43]. The computational load with respect to a single element is not particularly taken into account, because the relevant computation is generally negligible as compared to that of matrix operations. With the availability of the asymptotic estimates given in Table 3, we collect all the involved transforms and matrix operations for every scheme under comparison and reckon the total number after specifying the sizes of input data. As revealed from Table 4, the computational burden of the DCT-domain CRT-based scheme appears to be the heaviest due to the need of the DCT and inverse DCT applied to image blocks of size 8×8. Moreover, the watermark embedding of such a DCT–CRT approach requires conditional iterations to adjust the designated DCT coefficient based on the Chinese remainder theorem. The actual computation for this approach will exceed the tabulated value to some extent. Among those developed from the DWT–SVD framework, the proposed one demands a relatively large amount of computation as it requires the DWT, SVD, DCT and Gram-Schmidt process. Fortunately, most of the computations are confined in a matrix of size 4×4, thus alleviating the overall computational demanding.As for the memory requirement for the five schemes under study, we adopt the same strategy in complexity analysis. That is, we tabulate the variable arrays required for every involved transform and operation, and then sum up the total memory requirement for each scheme. The last column of Table 3 lists the extra memory space allocated for the corresponding variable array. Multiplying each quantity in that column by either 4 or 8 renders the number of bytes needed to store a single- or double-precision floating-point variable respectively. It is pointed out that all the DWT–SVD-based schemes can be carried out on a block-by-block basis with each block holding a size of 16×16 elements. Likewise, the DCT–CRT-based scheme needs a memory of size 8×8 for repeatable use. Here we count the memory consumption just once providing that the data must be conserved for further processing. No extra memory is needed if the data can be stored in previously allocated memory. Moreover, the memory necessitated by the intermediate process is ignored while gathering the sum of total memory not only because the amount of memory is relatively small but also because this kind of memory can be reused. Table 5presents the results of memory requirements for various algorithms. The DCT–CRT scheme requests the smallest amount of memory since the watermarking process is carried out on an 8×8 DCT block. Among those employing the DWT and SVD, Bao & Ma’s scheme requires a significant amount of additional memory to preserve the mean, and standard deviation for every block. The other schemes, namely Su et al’s, Chang et al’s and the proposed ones, do not exhibit undue demand in memory usage. The memory requirements of these three scheme are moderate.This paper jointly exploited the merits of DWT, SVD, and DCT to achieve efficient blind image watermarking. While the DWT offers multiresolution analysis in time and frequency, the SVD conserves the algebraic invariance of the image. Henceforth the proposed scheme applies the SVD to the matrix blocks in the LL subband of one-level 2-D DWT, and then applies the DCT to the left- and right-singular vectors associated with the largest singular value. Multiplying the designated DCT coefficients with the largest singular value forms the feature parameters for watermarking. The watermark embedding is performed by progressively modulating the selected feature parameters. The required computation mainly comprises a DWT of the cover image along with the SVD, DCT and Gram-Schmidt process executed on the subband blocks of size 4×4. The computational complexity and memory usage for the proposed scheme are moderate among those under study.We demonstrated the insertion of two image logos at a capacity as high as2×64×64/512×512. The two embedded logos are visually transparent, as the watermarked images attain an average PSNR level close to 40dB. Our experimental results show that the proposed watermarking scheme holds excellent robustness against image compression using JPEG and JPEG 2000, while its performance is comparable with, if not better than, the other three DWT–SVD-based schemes and another DCT-based approach for other types of attacks. Raising the payload capacity is theoretically feasible by accommodating more DWT–SVD–DCT coefficients in the watermarking process. Given that some extra bits are used as error-correcting codes, the robustness may also benefit from the multiple embedding capability.

@&#CONCLUSIONS@&#
