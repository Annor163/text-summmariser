@&#MAIN-TITLE@&#
Consignment contract for mobile apps between a single retailer and competitive developers with different risk attitudes

@&#HIGHLIGHTS@&#
A consignment contract with revenue sharing, vertical and horizontal competition.Demand is stochastic and affected by both price and quality investment.Equilibrium strategies are obtained under risk-aversion, -neutrality and -seeking.Due to stochastic dominance, price is independent of quality and revenue shares.Closed-form solutions are obtained under exponential utility function.

@&#KEYPHRASES@&#
Supply chain,Risk attitude,Consignment,Supplier competition,

@&#ABSTRACT@&#
Consider n mobile application (app) developers selling their software through a common platform provider (retailer), who offers a consignment contract with revenue sharing. Each app developer simultaneously determines the selling price of his app and the extent to which he invests in its quality. The demand for the app, which depends on both price and quality investment, is uncertain, so the risk attitudes of the supply chain members have to be considered. The members' equilibrium strategies are analyzed under different attitudes toward risk: risk-aversion, risk-neutrality and risk-seeking. We show that the retailer's utility function has no effect on the equilibrium strategies, and suggest schemes to identify these strategies for any utility function of the developers. Closed-form solutions are obtained under the exponential utility function.

@&#INTRODUCTION@&#
Mobile applications (apps) are software programs designed to run on smartphones and tablets. They are commonly downloaded through application distribution platforms, such as the Apple (iTunes) App Store, Google Play, the Windows Phone Store and BlackBerry App World. As suggested by Apple's central marketing message—“there's an app for that”—the market for apps is crowded and diverse (BBC Trust, 2010). At the same time, there is intense competition among companies marketing similar apps. For example, the iTunes App Store offers at least 12 device finder apps, similar to “Find My iPhone”; these apps compete with one another in terms of both price and quality (Myers, 2012). Clearly, the question of how to manage brand competition and channel competition is important both for app developers (the suppliers) and the platform distributor (i.e., the app retailer).This study considers a supply chain of a single platform distributor and n competitive app developers, where the vertical business relationships are delineated by a contract. Many platform distributers propose consignment contracts to app developers, based on a revenue sharing policy (Gans, 2012; Jiang, 2012; Wang, Jiang & Shen, 2004; Zhang, De Matta & Lowe, 2010). In this type of contract, the developer continues to own the app and typically bears sole responsibility for determining its selling price. For every sold app, the platform distributor charges the developer an agreed percentage of the selling price (Hsieh & Hsieh, 2013).Most research on consignment contracts has focused on a channel structure consisting of a single supplier and a single retailer (Jiang, 2012; Li, Zhu & Huang, 2009; Ru & Wang, 2010; Wang et al., 2004). Only a few papers have studied the effect of competition among suppliers (Adida & Ratisoontorn, 2011; Wang, 2006), as we do here. Furthermore, whereas most work thus far has assumed that supply chain members are risk-neutral, we study the influence of different risk attitudes on the supply chain performance. In addition, while the papers above study the competition effect only via prices, we extend it to consider investment in the quality of the app as well (El Ouardighi & Kim, 2010; Hasan, Zaidi, Haider, Hassa, & Amin, 2012; Spriestersbach & Springer, 2004; Xie, Yue, Wang & Lai, 2011).In what follows we formulate the objectives of the supply chain members and provide a procedure to obtain the equilibrium solution. We analyze the effects of vertical and horizontal competition in the supply chain, and show that, owing to the property of first order stochastic dominance, the retailer's utility function has no effect on the equilibrium solution. Moreover, we show that the equilibrium selling prices can be set in advance of the other decision variables regardless of the developers' utility functions. On the other hand, the quality investments of the developers and their revenue shares are affected by their risk attitudes. Notably, we find that, under the exponential utility function, the equilibrium revenue share of each developer is dependent on the developer's risk sensitivity level but is not affected by the horizontal competition. We provide closed-form solutions and sensitivity analysis regarding the risk aversion levels of the developers. We show that risk-seeking behavior of the developer can produce higher expected profit than risk-neutral behavior, and that the retailer benefits from developers who are risk-seeking.Consider a competition among n developers who sell their different apps via a single dominant retailer. As in the case of virtual products (Chernonog & Avinadav, 2014), distribution of mobile apps is characterized by a negligible unit distribution cost and ample capacity to fulfill demand. Therefore, our model does not include either holding or shortage costs, and the only relevant cost component is the investment in app quality, Ki, made by developer i (i = 1, …, n). Each developer determines his selling price per unit, pi, whereas the retailer demands a fraction ηiof the selling price from developer i for every sold unit (i.e., the revenue share). Since demand is affected by price and quality, and since our model assumes a stochastic demand for each developer, we deal with a decision dependent randomness case (Hrabec, Popela, Novotny, Haugen, & Olstad, 2012). LetK→=(K1,…,Kn),p→=(p1,…,pn)andη→=(η1,…,ηn). We adopt the multiplicative-separable form of introducing random demand:D˜i(p→,K→)=Di(p→,K→)ɛ, whereDi(p→,K→)is the expected demand for developer i, and ε is a non-negative random variable with cumulative distribution function (CDF) Fɛ( · ) and expectationE(ɛ)=1. This multiplicative form was originally suggested by Karlin and Carr (1962), and is common in the literature (see a review by Petruzzi & Dada, 1999). Clearly, the expected demand,Di(p→,K→), increases in Kiand pj, j ≠ i, and decreases in piand Kj, j ≠ i.Accordingly, the profit of the retailer isπ˜r(η→)=ɛ∑i=1nηipiDi(p→,K→), and the profit of developer i isπ˜i(pi,Ki)=(1−ηi)piDi(p→,K→)ɛ−Ki. Their expected profits are, respectively,(1)πr(η→)=∑i=1nηipiDi(p→,K→)(2)andπi(pi,Ki)=(1−ηi)piDi(p→,K→)−Ki.Since the unit distribution cost of a mobile app is negligibly small, the profit of the retailer is also his revenue, whereas the revenue of developer i is(1−ηi)piDi(p→,K→)ɛ. The property we use in the following theorem is (first order) stochastic dominance:X˜stochastically dominatesY˜(denoted byX˜≻Y˜) ifPr(X˜>x)≥Pr(Y˜>x)∀x.Theorem 1(i) The retailer's profit with the largest expectation stochastically dominates any other profit of the retailer. (ii) For a given Ki(i = 1, …, n), the profit of developer i with the largest expectation stochastically dominates any other profit of developer i.See Appendix A.□The stochastic order characterizing the retailer's potential profit distributions implies that maximizing the retailer's expected profit (Eq. (1)) actually maximizes the expected value of any non-decreasing function of his profit, and in particular of any utility function of his profit. Thus, the objective of the retailer, regardless of his risk attitude or the distribution of ε, is to maximize his expected profit. Similarly, for a given Ki, developer i should determine piexactly as in a deterministic demand model.Theorem 2There is no stochastic dominance of developer i's profit distributions with respect to the quality investment for a given selling price.See Appendix B.□Theorem 2 indicates that there is no value of Kithat optimizes all utility functions ofπ˜i, so that optimal Kidepends on the specific utility function of the developer and on the distribution of ε. Denoting the utility function of developer i by ui, the problem of developer i ismaxpi,KiE[ui(π˜i(pi,Ki))]. By Theorem 1(ii), this problem can be solved in two stages:(3)maxKiE[ui(π˜i(pi(Ki),Ki))],(4)wherepi(Ki)=argmaxpi{piDi(p→,K→)}.The relationship between the retailer and the developers is formulated as a sequential non-cooperative game in which the retailer is the leader of the supply chain and the developers are the followers. This type of game is known as a Stackelberg model (see, e.g., Osborne & Rubinstein, 1994), and it assumes perfect information, specifically in this model, knowledge of the developers’ risk attitudes and of the demand function. In practice, such an assumption holds, for example, when the supply chain parties have previously concluded contracts with one another, and when the parties are able to obtain information on demand from public media (see, for example, Gan, Sethi & Yan, 2004; Wang et al., 2004; Wei & Choi, 2010; Xie et al., 2011). In this game, the retailer first announces the revenue share to be charged each developer; the developers observe their revenue shares, and then each decides on his own retail price and quality investment. The competition among the developers is modeled as a non-cooperative simultaneous game in which the solution is Nash equilibrium. To solve and find the relevant equilibrium, the retailer, who starts by announcing the revenue sharesη→, first finds the Nash equilibrium with respect top→andK→for allη→. Then, following Theorem 1, he maximizesπr(η→)=∑i=1nηipiDi(p→,K→)to find the best value ofη→.To obtain analytical resuls, we assume that selling price and quality investment have separable, multiplicative effects on the demand function:(5)Di(p→,K→)=gi(p→)hi(K→),i=1,…,n,wheregi(p→)is strictly decreasing in piand strictly increasing in pj, j ≠ i, whereashi(K→)is strictly increasing and concave in Kiand strictly decreasing in Kj, j ≠ i (according to the law of diminishing marginal returns). The multiplicative form in (5) is common in the literature dealing with demand functions that are affected by selling price and by an additional factor (see, e.g., Aust & Buscher, 2012; Avinadav, Chernonog, & Perlman, 2014; Avinadav, Herbon & Spiegel, 2013; Avinadav, Herbon, & Spiegel, 2014; Maihami & Nakhai Kamalabadi 2012; Xie & Wei 2009).The following procedure summarizes the optimization steps taken by the retailer:Step 1.Findpi*, i = 1, …, n, by maximizingpigi(p→), i = 1, …, n.Find the best developers' responsesKi(η→), i = 1, …, n, by maximizing eachE[ui(pi*gi(p→*)(1−ηi)hi(K→)ɛ−Ki)], i = 1,…,n.Findη→*that maximizes∑i=1nηihi(K(η→)→)and obtainK→*=K(η→*)→.η→*,p→*andK→*are Nash equilibrium strategies.See Appendix C.□By Theorem 1,p→*is independent of the retailer's and the developers' risk attitudes, and is also independent of the demand distribution, so it can be obtained exactly as in a deterministic demand model. Moreover, due to the multiplicative separable demand structure, in Step 1 of the procedure,p→*can be determined regardless of the decisions on quality investments and revenue shares (which can be postponed). On the other hand,η→*andK→*do depend on the developers' risk attitudes and on the demand distribution. In what follows, we study the effect of risk sensitivity level on equilibrium revenue shares and quality investments.Numerous theoretical and applied works in the areas of decision theory and finance consider exponential utility function (Perlman, 2013; Walls, 2004; Xie et al. 2011). Therefore, similarly to Wang, Webster and Suresh (2009) and Choi and Ruszczyński (2011), we assume that each developer's risk attitude is expressed by an exponential utility function. Letu(y)≡sgn(λ)exp(λy),λ≠0, where λ < 0 denotes a risk-averse developer, and λ > 0 denotes a risk-seeking developer. When λ approaches zero, risk-neutral behavior is implied.We further assume that ɛ ∼ N(1, σ2), so that developer i's objective function is to maximize the mean-variance (MV) function (Raiffa, 1968).(6)MVi(pi,Ki)=E[π˜i(pi,Ki)]+0.5λiV[π˜i(pi,Ki)],whereE[π˜i(pi,Ki)]=πi(pi,Ki)andV[π˜i(pi,Ki)]=σ2(πi(pi,Ki)+Ki)2. Walls and Dyer (1996) further claim that even when the noise is not normally distributed, Eq. (6) provides a good approximation for small values of λ.In order to obtain analytical results, we letn=2. We assume that, for each developer, the effect of quality investment on demand is a square root effect (see, e.g., El Ouardighi & Kim, 2010; Xie et al., 2011). Specifically, we usehi(Ki,K3−i)=Ki+γ(Ki−K3−i), i=1,2, where γ∈(0,1) reflects the demand sensitivity to the quality investment gap between the two competitors. This domain of γ implies that the demand for a given app is more sensitive to the absolute quality investment associated with the app than to the quality investment gap. As discussed in Section 3, the equilibrium valuesηi*andKi*, i = 1,2, are the only ones affected by the risk sensitivity levels of the developers. We continue with properties of these decision variables under the following assumptions: exponential utility functions, normal demand distribution and two developers.Letωi≡1−0.5λiσ2(1+γ)(pi*gi(pi*,p3−i*))2, whereλiσ2(1+γ)(pi*gi(pi*,p3−i*))2≤2, and letAi≡((1+γ)pi*gi(pi*,p3−i*)4ωi)2. The following proposition presents the equilibrium solutions:Proposition 1At equilibrium:(i)ηi*=1−11+ωiandKi*=Ai(1+γ)+A3−iγ1+2γ;equilibrium revenue shares decrease in the risk sensitivity level (λi) and in the demand's coefficient of variation (σ);equilibrium quality investments increase in the risk sensitivity level (λi) and in the demand's coefficient of variation (σ);See Appendix D.□Notably, Proposition 1 implies that when the retailer sets the revenue share for one developer, he considers the risk sensitivity level of that developer but not that of the other developer. On the other hand, when one developer sets his quality investment, he considers both his own risk sensitivity level and that of the other developer.Proposition 2At equilibrium, the expected profit of the retailer isπr*=1+γ4∑i=12(pi*gi(pi*,p3−i*))21+ωi,and it increases in the risk sensitivity level of each developer (λi) and in the demand's coefficient of variation (σ).By substituting the expressions of Proposition 1 in Eq. (1) and by the definition of ωi.□A managerial implication of Proposition 2 is that the retailer is better off acting in a market with higher demand uncertainty and developers who are less risk-averse. Being less risk-averse, the developers use a strategy of increasing investment in quality that benefits the retailer.Proposition 3At equilibrium,(i)the expected profit of developer i (=1,2) is:πi*=(1+γ)(pi*gi(pi*,p3−i*))28×(2(1+ωi)ωi−(1+γ)2(1+2γ)(γω3−i2+1+γωi2));πi*decreases inλ3−i;πi*increases for λi< λ0and decreases for λi> λ0whereλ0=2(1−ω02)σ2(1+γ)(pi*gi(pi*,p3−i*))2>0andω0=γ2+(1+2γ)(3(1+2γ)+2γ2)3(1+2γ)−γ2See Appendix E.□Fig. 1illustrates the results of Proposition 3 for a given risk sensitivity level of developer 1 (i.e. λ1 is constant) and for different values of the risk sensitivity level of developer 2. By Proposition 3(ii), each developer wishes for the other developer to be more risk-averse (as depicted for developer 1, see the continuous line in Fig. 1). A non-intuitive result obtained from Proposition 3(iii) is that while risk-neutral behavior maximizes the expected profit of the decision maker, a risk-seeking developer (λi> 0) gains a higher expected profit than does a risk-neutral developer (λi=0) (as depicted for developer 2, see the dashed line in Fig. 1). The latter result can be explained as follows: a less risk-averse (more risk-seeking) developer invests more in quality (by Proposition 1(iii)). Since the selling price is independent of the risk sensitivity level, then demand increases. In addition, the developer's share (1−ηi) also increases in λi. Therefore, the developer's expected profit increases when λiincreases up to λ0. However, above this level of risk seeking, revenue is affected more strongly by the cost component of quality investment (a negative effect) than by the positive influence of quality investment on demand.ByProposition 1, the retailer charges each developer a different revenue share (which we term as “discriminating contract”) according to his risk sensitivity level. However, in practice, retailers typically use common-terms revenue share contracts, in which all developers are charged an identical revenue share (for example, the iTunes App Store and Google Play Store keep 30% of the revenues from sold apps, and the developers receive 70%; see Hillegas, 2012 and Google Play Developer Help Center, 2015).In order to evaluate the consequences of using the same revenue share for all developers, we letηi=η. In this case, the best developers' responses obtained in Step 2 of the procedure above are functions of a single parameter (η). In Step 3, only a single variable optimization is solved, but since the necessary condition has no closed-form solution (Appendix F), numerical methods are required to find η*. Nevertheless, we hypothesize that the main results, concerning the effect of risk, obtained analytically above, are not different. To verify it, we experimented with a small set of parameters values:pi*gi(pi*,p3−i*)=34, i = 1,2,γ=0.2andσ=0.1. We let developer 1 be risk-neutral (λ1=0), whereas developer 2 can be either risk-averse, -neutral or -seeking (λ2 ∈ R).As presented in Fig. 2(a), under a common-terms contract a less risk-averse developer is rewarded by a larger share of the revenue (1−η). This result is line with Proposition 1(ii), which refers to the discriminating contract. Moreover, the less risk-averse of the two developers benefits more from the common-terms revenue share contract than from the discriminating contract. This means that when λ2 > λ1 then η2 < η1, since the revenue share charged by the retailer under the common-terms contract takes into account both developers' risk sensitivity levels simultaneously.Fig. 2(b) demonstrates thatwhen developer 2 is less risk averse, he invests more in quality, and the investment gap in comparison to developer 1 increases. A common-terms revenue share reduces the gap between the two developers' quality investments while maintaining the order of investment levels and the trends.Clearly, when the retailer offers a common-terms revenue share contract for the two developers (losing a degree of freedom), his expected profit decreases. As illustrated in Fig. 2(c), the expected loss of the retailer in comparison to the case of discriminating revenue sharing contracts increases with the value of |λ2|. However, ultimately, the profit loss is relatively small, and may be outweighed by the benefit of having a simple contract with common terms (e.g., less bureaucracy), which might explain why this type of contract is common in reality. Another explanation could be that, in reality, the retailer cannot observe the developers' risk attitudes. As illustrated in Fig. 2(d), the gap between the expected profits of the two developers is lower in the common-terms contract than in the discriminating contract. The trends discussed above remain the same when the parameter values are changed (see sensitivity analysis in Appendix G). Similar trends are observed regardless of whether developer 1 is risk-averse or risk-seeking.

@&#CONCLUSIONS@&#
On the basis of stochastic dominance (first order), we show that the risk attitude of the retailer has no impact on the equilibrium strategies of the supply chain, and therefore does not affect the profits of the supply chain members. In contrast, the risk attitude of the developer has a substantial impact on the profits of the supply chain members and on the equilibrium solution. The analytical and numerical results suggest several managerial implications. Specifically, working with a risk-seeking developer increases the expected profit of the retailer. A non-intuitive result is that a risk-seeking developer gains a higher expected profit than does a risk-neutral developer. Another interesting result is that the selling price is independent of the developer's utility function, and is actually set regardless of the decisions on quality investments and revenue shares (which can be postponed).We showed that the equilibrium revenue share charged to each developer depends on his risk sensitivity level. However, in practice, the retailer usually opts for a simpler contract arrangement, that is, common-terms revenue share contracts, in which an identical revenue share is charged to all developers. We demonstrate that, compared with discriminating revenue share contracts, common-terms contracts lead to a relatively minor decrease in the retailer's profit, which might explain why this type of contract is common in reality.