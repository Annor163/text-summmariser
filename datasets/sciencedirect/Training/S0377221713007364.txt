@&#MAIN-TITLE@&#
New reformulations for probabilistically constrained quadratic programs

@&#HIGHLIGHTS@&#
Consider MIQP reformulations for probabilistically constrained quadratic programming (PCQP).Develop better MIQP reformulations for PCQP with size smaller than Zheng et al. (EJOR 2012).Our reformulations numerically outperform the state-of-the-art MIQP in Zheng et al. (2012).

@&#KEYPHRASES@&#
Quadratic programming,Probabilistic constraint,Semi-definite programming,Mixed-integer quadratic program,Value-at-risk/variance portfolio selection,

@&#ABSTRACT@&#
The mixed integer quadratic programming (MIQP) reformulation by Zheng, Sun, Li, and Cui (2012) for probabilistically constrained quadratic programs (PCQP) recently published in EJOR significantly dominates the standard MIQP formulation (Ruszczynski, 2002; Benati & Rizzi, 2007) which has been widely adopted in the literature. Stimulated by the dimensionality problem which Zheng et al. (2012) acknowledge themselves for their reformulations, we study further the characteristics of PCQP and develop new MIQP reformulations for PCQP with fewer variables and constraints. The results from numerical tests demonstrate that our reformulations clearly outperform the state-of-the-art MIQP in Zheng et al. (2012).We consider in this paper the following probabilistically constrained quadratic program (PCQP):(P)minxTQx+cTxs.t.P(ξTBx⩾R)⩾1-∊,x∈X={x∈Rn|Ex⩽f,0⩽x⩽u,xTAix+biTx+di⩽0,i=1,…,r},whereQ∈Rn×nis positive semi-definite,c∈Rn,Pdenotes the probability, ξ is an m-dimensional random vector that takes finitely many realizations (scenarios),ξ1,…,ξN∈Rm, with equal probability, B is an m×n matrix,R∈R, 1−∊∈(0,1) is the confidence level, E is a d×n matrix,f∈Rd,u∈Rn,Ai∈Rn×nis positive semi-definite,bi∈Rn, anddi∈R, i=1,…,r. When Q=0, Problem (P) is already NP-hard (Luedtke, Ahmed, & Nemhauser, 2010). For recent and computationally efficient solution methods for problem (P), please refer to Dentcheva and Martinez (2012), Kogan and Lejeune (2012), and Lejeune (2012). Problem formulation (P) arises naturally in many applications, including portfolio selection (Gaivoronski & Pflug, 2005), supply chain management (Lejeune & Ruszczynski, 2007) and production planning (Murr & Prekopa, 2000). One prominent special case of (P) is the Value-at-Risk (VaR)-variance portfolio selection problem (Bonami & Lejeune, 2009):(1)(VaR-V)pminxTΣx(2)s.t.P(ξTx⩾R)⩾1-∊,(3)eTx=1,0⩽x⩽u,where ξ is the random return vector of n risky assets, Σ denotes the covariance matrix of ξ, R is the target return, e is the n-dimensional vector of all ones and u is an upper bound on x.Define α=(α1,…,αN)Tand β=(β1,…,βN)Tas the vectors of the lower and upper bounds of ξTBx over X respectively:(4)αi=minx∈X(ξi)TBx,βi=maxx∈X(ξi)TBx,i=1,…,N.We can reasonably assume that αi⩽R, i=1,…,N. Let K=⌊N∊⌋, the floor of N∊. Benati and Rizzi (2007) and Ruszczynski (2002) show that the probabilistic constraintP(ξTBx⩾R)⩾1-∊can be represented by a set of linear constraints and a knapsack constraint after introducing N 0–1 variables for N scenarios of ξ, which leads to the following standard mixed-integer quadratic program of (P):(5)(MIQP0)minxTQx+cTx(6)s.t.(ξi)TBx⩾R+yi(αi-R),i=1,…,N,(7)eTy⩽K,y∈{0,1}N,x∈X.The standard mixed-integer quadratic program (MIQP0) is ready to be solved by existing mixed-integer program solvers, such as CPLEX, within a branch-and-bound framework using continuous relaxation.Very recently, based on a Lagrangian decomposition approach, Zheng et al. (2012) develop the following class of reformulations with a parameter θ,(8)(MIQPθ)minxTQ-∑i=1NθiBTξi(ξi)TBx+cTx+∑i=1Nθi(wi2+ϕi-R2yi)(9)s.t.(ξi)TBx=wi+zi-yiR,i=1,…,N,eTy⩽K,y∈{0,1}N,αiyi⩽zi⩽Ryi,ϕiyi⩾zi2,ϕi⩾0,i=1,…,N,x∈X,R⩽wi⩽βi,i=1,…,N.Let v(·) and vc(·) be the optimal values of problem (·) and its continuous relaxation, respectively. Define(10)Θ={θ∈RN|Q-∑i=1NθiBTξi(ξi)TB⪰0,θ⩾0},where the notation A⪰B implies that the matrix A−B is positive semi-definite. Zheng et al. (2012) show that, for any θ∈Θ, while v(MIQP0)=v(MIQPθ) (which is exactly what the reformulation implies), vc(MIQPθ)⩾vc(MIQP0), implying that reformulation ( MIQPθ) is more efficient than reformulation ( MIQP0) as the continuous relaxation of (MIQPθ) always generates a lower bound tighter than or at least as tight as that of (MIQP0). The choice of θ plays a significant role in solving (MIQPθ). Zheng et al. (2012) propose three approaches to find the “best” θ∈Θ. The first choice of θ is obtained by solving the following semi-definite program (SDP),(11)θ∗=argmaxθ∈Θ{SDP(θ)},where (SDP (θ)) is the conic dual of the continuous relaxation of (MIQPθ) (see Zheng et al., 2012). The other two heuristic choices of θ are proposed to reduce the computational complexity in finding the optimal θ∗. The second choice of θ in Zheng et al. (2012) is obtained by solving the following small-size SDP:(12)θs=argmaxθ∈ΘeTθ.When Q is positive definite, the third choice of θ, denoted by θe, is simply obtained by solving the above SDP (12) with an additional constraint θ=te, which can be expressed explicitly as(13)θe=1λmax(UTBTΓΓTBU)e,where U is the orthogonal matrix such that UTQU=I, λmax(C) denotes the maximum eigenvalue of C and Γ=(ξ1,…,ξN). Zheng et al. (2012) demonstrate in their numerical tests that all the three reformulations,(MIQPθ∗),(MIQPθs)and(MIQPθe), dominate (MIQP0) significantly in terms of the computational time in achieving the optimality or in attaining the minimum duality gap within a time limit. Among the three reformulations,(MIQPθ∗)is the most efficient.While making promising progress in their study, Zheng et al. (2012) acknowledge themselves that their reformulation suffers a dimensionality problem. By studying further the characteristics of PCQP, we strengthen the result in Zheng et al. (2012) by proposing new formulations with fewer variables and constraints. Our numerical results demonstrate that our reformulations clearly outperform the state-of-the-art MIQP reformulation proposed in Zheng et al. (2012).Let (x∗,y∗) be an optimal solution to ( MIQP0). Suppose eTy∗<K. Since K⩽N, there is an index i0 such thatyi0∗=0. It holds true that(ξi0)TBx∗⩾R⩾αi, which implies that(x∗,y∼∗)is also a feasible solution to (MIQP0), whereỹi∗=yi∗,ifi≠i0,1,ifi=i0.As the objective function (5) is independent of the choice of y,(x∗,ỹ∗)remains optimal. Notice thateTy∗+1=eTỹ∗. By mathematical induction, we can show that there must be an optimal solution(x∗,yˆ∗)such thateTyˆ∗=K. As a conclusion, we have the following result.Theorem 2.1(MIQP0) is equivalent to (MIQP1) which is obtained by replacing(7)in (MIQP0) by(14)eTy=K,y∈{0,1}N.For any fixed i, constraint (6) becomes redundant in (MIQP0) and (MIQP1) if and only if yi=1. Since ∊∈(0,1), we have K=⌊N∊⌋⩽N−1. It follows from (14) that there are exactly N−K indices j1,…,jN−K≠i such thatyj1=…=yjN-K=0. Therefore, we can strengthen αiasα̃i=minj1,…,jN-K≠iαij1,…,jN-K,whereαij1,…,jN-K=min{(ξi)TBx|(ξjm)TBx⩾R,form=1,…,N-K,x∈X}. Since the computation ofα̃irequires solving(N-1)!(N-K)!(K-1)!linear programs, we introduce the following relaxation for the case 3⩽K⩽N−2:(15)α̃i=minj≠iαij,whereαij≔min{(ξi)TBx|(ξj)TBx⩾R,x∈X}.Let(MIQPθ′)be the reformulation obtained from (MIQPθ) by replacing the constraint eTy⩽K with eTy=K. We demonstrate now that the reformulation(MIQPθ′)can be further simplified. Removing in(MIQPθ′)the constraintsϕiyi⩾zi2, wi⩽βi, and the variables ϕifor all i=1,…,N and replacing ϕiin the objective function byzi2for all i=1,…,N yields the following class of new MIQP reformulations:(16)(MIQPθnew)minxTQ-∑i=1NθiBTξi(ξi)TBx+cTx+∑i=1Nθi(wi2+zi2-R2yi)s.t.(ξi)TBx=wi+zi-yiR,i=1,…,N,(17)eTy=K,y∈{0,1}N,(18)αiyi⩽zi⩽Ryi,i=1,…,N,(19)x∈X,R⩽wi,i=1,…,N.Theorem 2.2For any θ∈Θ defined in(10),vMIQPθ′=vMIQPθnew.According to constraint (9), if yi=1, thenϕi⩾zi2. Otherwise yi=0, then zi=0 and ϕi⩾0. Combining these two cases gives rise toϕi⩾zi2. As the objective function (8) is an increasing linear function of ϕi, we must haveϕi=zi2for the optimal solution.Let (x∗,y∗,w∗,z∗) be an optimal solution toMIQPθnew. Notice thatyi∗=0implies thatzi∗=0andwi∗=(ξi)TBx∗. It then holds true thatwi∗⩽βi. Next we consider the case withyi∗=1. Fixing x=x∗, y=y∗,wj=wj∗andzj=zj∗for j=1,…,i−1, i+1,…,N and removing the constant terms,MIQPθnewis reduced tomin{θi(wi2+zi2)|wi+zi=(ξi)TBx∗+R,αi⩽zi⩽R⩽wi}.If θi=0, (wi,zi)=((ξi)TBx∗,R) is also optimal. It holds that wi⩽βi. Now, we assume θi>0. Suppose that the optimal solution(wi∗,zi∗)satisfieszi∗<R<wi∗. Then, for sufficiently small ∊>0,(wi∗-∊,zi∗+∊)remains feasible. But,θi((wi∗-∊)2+(zi∗+∊)2)=θi(wi∗2+zi∗2-2∊(wi∗-zi∗)+2∊2)<θi(wi∗2+zi∗2), if ∊ is small enough. This contradiction implies that eitherwi∗=Rorzi∗=R. In both cases we havewi∗⩽βi. The proof is complete.□We give now an easy-to-understand explanation of(MIQPθnew). Let (x,y) be any feasible solution of ( MIQP1). For i=1,2,…,n, we define the following additional variables, wi=max{(ξi)TBx,R} and zi=min{(ξi)TBx,R}−R+yiR. It is not difficult to verify that (x,y,w,z) satisfies (16), (19) and the right inequality of (18). Then the inequality (6) implies the left inequality of (18) and vice versa. Furthermore, it holds that(20)((ξi)TBx)2=wi2+zi2-R2yi,i=1,…,N.Then, introducing the multipliers θ1,…,θNfor the redundant constraints in (20) gives rise toMIQPθnew.Notice that the continuous relaxation of(MIQPθnew)is a quadratic program and the continuous relaxation of(MIQPθ′)is a quadratically constrained quadratic program with more constraints and variables. One can thus expect that the former is easier to solve. For the tightness comparison, it is trivial to verify thatvcMIQPθnew⩽vcMIQPθ′for any θ∈Θ. Now, we focus on a comparison betweenvcMIQPθnewand vc( MIQP1).Lemma 2.3Let θ=0 inMIQPθnew. We havevcMIQP0new=vc(MIQP1).Since (6) can be obtained by substituting (18) and (19) into (16), we havevc(MIQP0new)⩾vc(MIQP1). Let (x∗,y∗) be an optimal solution to vc(MIQP1). For i=1,2,…,n, define h(wi,zi)=wi+zi,Si=(wi,zi)|αiyi∗⩽zi⩽Ryi∗,wi∗⩾R. According to (6), it holds thathR,αiyi∗=R+αiyi∗⩽(ξi)TBx∗+yi∗R<h+∞,αiyi∗.Therefore, there exists (w∗,z∗)∈Sisuch thath(w∗,z∗)=(ξi)TBx∗+yi∗R. It follows that (x∗,y∗,w∗,z∗) satisfies (16), (18) and (19). We have thatvcMIQP0new⩽vc(MIQP1). The proof is complete.□More generally, though we are unable, at this stage, to provevc(MIQPθnew)⩾vc(MIQP1)for any θ∈Θ, we do establish the following lower bound of the gap.Theorem 2.4For any θ∈Θ,(21)vc(MIQPθnew)-vc(MIQP1)⩾-K(N-K)NR2(maxiθi).Let (w,x,y,z) be an optimal solution to the continuous relaxation ofMIQPθnew. It follows from (16)–(19) thatxTBTξi(ξi)TBx=(wi+zi-yiR)2=wi2+zi2-yi2R2+2(wi-Ryi)(zi-Ryi)⩽wi2+zi2-yi2R2.According to Cauchy–Schwarz inequality, the equality constraint in (17) implies that∑i=1Nyi2⩾1N∑i=1Nyi2=K2N.Now we have∑i=1NθixTBTξi(ξi)TBx-∑i=1Nθi(wi2+zi2-R2yi)⩽∑i=1NθiR2(yi-yi2)⩽R2maxiθi(K-∑i=1Nyi2)⩽R2maxiθiK(N-K)N. According to Lemma 2.3, we havevcMIQPθnew+R2(maxiθi)K(N-K)N⩾vcMIQP0new=vc(MIQP1).The proof is complete.□The conic dual of the continuous relaxationMIQPθnewis the following semi-definite program:(SDPnew(θ))maxτ-Ks-eTt+eTρ+eTν+ReTδs.t.-θiR2-λiR+s-γiR+μiαi+ti⩾0,i=1,…,N,Q¯c¯c¯T2(τ¯-τ)⪰0,2θiλi-δiλi-δi-2ρi⪰0,2θiλi+γi-μiλi+γi-μi-2νi⪰0,(t,μ,γ,δ,ζ,η,ρ,π)⩾0,whereQ¯=Q-∑i=1NθiBTξi(ξi)TB+∑i=1rπiAi,c¯=c-∑i=1NλiBTξi+ζ-η+ETρ+∑i=1rπibi, andτ¯=-ζTu-ρTf+∑i=1rπidi. For any θ∈Θ (see (10)), the Hessian matrix of the objective function ofMIQPθnewis positive semi-definite. It turns out that the continuous relaxation ofMIQPθnewis a bounded convex quadratic program. Therefore, we have(22)vcMIQPθnew=v(SDPnew(θ)).Now, the “best” choice of θ is the one that maximizesvcMIQPθnew,(23)θ∗=argmaxθ∈Θv(SDPnew(θ)).Note maxθ∈Θ{v(SDPnew(θ))} remains a semi-definite program. Although we use the same symbol θ∗ as in (11), they appear respectively inMIQPθ∗newand(MIQPθ∗), which should not cause confusion.In the following, we show that θ∗ in (23) corresponds to a tighter relaxation in general.Theorem 2.5vcMIQPθ∗new⩾vc(MIQP1).Since 0∈Θ, the definition of θ∗ in (23) implies thatv(SDPnew(θ∗))⩾v(SDPnew(0))=vcMIQP0new=vc(MIQP1),where the last two equalities follow from (22) and Lemma 2.3, respectively.□We can conclude from Theorem 2.5 that at least one relaxation within the class of our new reformulations improves the relaxation of the standard MIQP. The following small example illustrates that the strict inequality in Theorem 2.5 could hold.Example 2.6Consider a VaR-variance problem (1)–(3) with n= 3, u=0.5e, R=2, N=6,Σ=9514-591428-28-59-2855and the N scenarios areξ1=17-3,ξ2=04-6,ξ3=62-2,ξ4=676,ξ5=400andξ6=65-1. We can verify thatvcMIQPθ∗new=0.8587>vc(MIQPθenew)=0.7745>vc(MIQP1)=0.7609.We report our numerical results in this section to compare the performance of our MIQP reformulations for PCQP with the ones in Zheng et al. (2012). We first use the same test sets as in Zheng et al. (2012), which are the VaR-variance problems specified in (1)–(3) with u=0.5e. We refer to Zheng et al. (2012) for the detailed specification of the test sets. Our numerical tests were implemented in Matlab R2011a and IBM ILOG CPLEX 12.3 and run on a 64bit Linux (3gigahertz, 8gigabyte RAM). The semi-definite programs (11) and (23) are modeled by CVX 1.2 (see Grant & Boyd, 2010) and solved by SDPT3 within CVX whose default precision is 1.5×10−8. The MIQP formulations are run on default setting of IBM ILOG CPLEX 12.3 with the maximum CPU time limit set equal to 3600seconds. We further compare the computational results between the two using additional randomly-generated new test sets1The data files of the new instances and the Matlab codes in our numerical test are available from http://www1.se.cuhk.edu.hk/∼dli/Codes.html.1for the VaR-variance problems of dimensions 175 and 200, where the maximum CPU time limit is set at 7200seconds.More specifically, we compare the following six reformulations in our numerical tests: (i) (MIQP0): the standard mixed-integer quadratic program as stated in Section 1; (ii) (MIQP1): the MIQP reformulation resulted from (MIQP0) by changing the cardinality inequality to an equality; (iii)(MIQPθ∗): the MIQP reformulation in Zheng et al. (2012) with θ∗ given in (11); (iv)(MIQPθ∗′): the MIQP reformulation resulted fromMIQPθ∗by changing the cardinality inequality to an equality; (v)(MIQPθ∗new): our new MIQP reformulation with θ∗ obtained from solving (23); and (vi)MIQPθenew: our new MIQP reformulation with θebeing the heuristic choice of θ in (13).Figs. 1 and 2demonstrate the comparison of the average computing time and the average number of nodes explored by IBM ILOG CPLEX 12.3 for different MIQP reformulations of test instances with ε=0.05 and 0.1 which have been solved to global optimality by all formulations. In the figures, notation ε_n_Average denotes the average for problems of dimension n with given ε. We can see that our new reformulation(MIQPθ∗new)or(MIQPθenew)requires significantly less computation time on average. The difference of the average computation time between(MIQPθ∗new)and(MIQPθenew)is very small.In terms of the number of nodes explored by IBM ILOG CPLEX 12.3, our new reformulation has a much larger number than that of(MIQPθ∗). This is reasonable since, for(MIQPθ∗new)or(MIQPθenew), the continuous relaxation is a linearly constrained quadratic programming problem, which has a looser bound and can be solved in much less time than the continuous relaxation for(MIQPθ∗)or(MIQPθ∗′), which is a quadratically constrained quadratic programming problem.Tables 1–4summarize the numerical results for the test sets of larger dimensions, where “Time” is the computing time (in seconds) for solving the formulation in IBM ILOG CPLEX 12.3; “Rel. gap” is the relative gap of the incumbent solution when IBM ILOG CPLEX 12.3 is terminated (note that the default tolerance is 10−4); and “No. of nodes” is the number of nodes explored by IBM ILOG CPLEX 12.3.From the tables, we can see that for most instances, our new reformulations require much less computation time compared to the reformulations in Zheng et al. (2012). For those instances which the reformulations in Zheng et al. (2012) fail to solve in the sense of achieving optimality when reaching the time limit, our new reformulations solve almost all of them. For the comparison ofMIQPθ∗newandMIQPθenew, it seems that the former requires less nodes in the cases with ε=0.05 and more nodes in the cases with ε=0.1. We also observe in some cases that(MIQPθ∗new)visits more nodes in less time than (MIQP0). This makes sense since the relaxation of the former may become looser after fixing some variables even though it is tight at the root node as shown in Theorem 2.5. Finally, we observe that changing the cardinality inequality to an equality has limited improvements when compared to the reformulations in Zheng et al. (2012).

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
