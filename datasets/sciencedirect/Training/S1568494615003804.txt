@&#MAIN-TITLE@&#
Unmanned Aerial Vehicles parameter estimation using Artificial Neural Networks and Iterative Bi-Section Shooting method

@&#HIGHLIGHTS@&#
A discrete time model for the “OS4” Quadrotor is developed.Three parameter estimation methods namely, Iterative Bi-Section Shooting (IBSS), Artificial Neural Network (ANN), and the novel new Hybrid ANN–IBSS, were proposed.Performance of presented methods was evaluated under two scenarios; one using noise free trajectories and another with injected noise trajectories.Hybrid ANN_IBSS estimation results are the most accurate and fastest among all presented methods.

@&#KEYPHRASES@&#
UAV,Parameter Estimation,ANN,IBSS,

@&#ABSTRACT@&#
Quadrotor Unmanned Aerial Vehicles (UAVs) can perform numerous tasks fearless of unnecessary loss of human life. Lately, to enhance UAV control performance, system identification and states estimation has been an active field of research. This work presents a simulation study that investigates unknown dynamics model parameters estimation of a Quadrotor UAV under presence of noisy feedback signals. The latter constitute a challenge for UAV control performance especially with the presence of uncertainties. Therefore, estimation techniques are usually used to reduce the effect of such uncertainties. In this paper, three estimation methods are presented to estimate unknown parameters of the “OS4” Quadrotor. Those methods are Iterative Bi-Section Shooting method “IBSS”, Artificial Neural Network method “ANN”, and “Hybrid ANN_IBSS”, which is a novel method that integrates ANN with IBSS. The “Hybrid ANN_IBSS” is the main contribution of this work.Percentage error of the estimated parameters is used to evaluate accuracy of the aforementioned methods. Results show that IBSS and ANN are capable of estimating most of the parameters even with the presence of noisy feedback signals. However, their performance lacks accuracy when estimating small-value parameters. On the other hand, Hybrid ANN_IBSS achieved higher estimation accuracy compared to the other two methods. Accurate parameter estimation is expected to enhance reliability of the “OS4” dynamics model and hence improve control quality.roll angular rate in earth framepitch angular rate in earth frameyaw angular rate in earth frameroll angle in body framepitch angle in body frameyaw angle in body frameposition along x axisposition along y axisposition along z axissinϕcosϕsinθcosθsinψcosψsample timerotor speedinput torquethrust force input

@&#INTRODUCTION@&#
UAVs have garnered a great deal of interest from a number of scholars and organizations in the past few years. They have been broadly used in surveillance, tracking, navigation, communication, civilians and military applications. However, autonomous control of UAVs is a very challenging task. UAVs generally possess highly nonlinear dynamics models. In addition, they represent six DOF flying rigid bodies, which are influenced by wind gusts disturbances during flight or external thrust forces associated with complex rotor dynamics. Moreover, fuel consumption or unexpected loss of some parts cause modeling uncertainties.Quadrotor UAVs offer a great tool to verify several control techniques; which justifies the recent attention by research community. Raffo et al. [1] used predictive nonlinear control strategy to achieve robust Quadrotor trajectory tracking. Similar studies were investigated by Cabecinhas et al. [2] and Guadarrama-Olvera et al. [3]. Bou-Ammar presented a comparison study between two Quadrotor autopilots tasked to maintain a desired velocity vector. Results indicated that quality performance required detailed control engineering awareness [4]. Recently, Sanna et al. [5,6] used Kinect-based interface to control the Ar. Drone Quadrotor.Sliding mode control was investigated in Ref. [7–9] in order to overcome UAVs modeling uncertainties. Zeghlache et al. [10] proposed Fuzzy logic to eliminate the chattering effect associated with sliding mode control of a Quadrotor UAV. In addition, Zheng introduced a novel robust terminal sliding mode control (NRTSMC), and an under-actuated system sliding mode control (USSMC) to overcome the strong coupling and under-actuated problems of a small Quadrotor [11].Performance of UAVs control systems introduced above, depend on accuracy of feedback measurement and reliability of dynamics model. For instance, high noise-to-feedback ratios might cause UAVs actual path to deviate from the desired one. Reliable dynamics model requires accurate parameter estimation using high quality feedback signals.Therefore, there has been an increased interest in system identification and states estimation of UAVs. For example, many studies were conducted on Quadrotor state-estimation [12–16]. Nobahari used the Continuous Ant-Colony filter (CACF) in order to estimate the vertical velocity of Quadrotor UAV during landing procedure [17]. Nicol et al. applied Cerebellar Model Arithmetic Computer (CMAC) nonlinear approximator to update the changing parameters of a prototype helicopter. CMAC provided quick accurate yet computation-efficient approximations [18]. Stanculeanu used a black box system identification based Prediction Error Method (PEM) to estimate the parameters of Quadrotor dynamics model [19]. While, Falkenberg used a Gray-Box-based, iterative parameter identification approach, that offered good accuracy [20]. Al-Shabi et al. [21] introduced a comparison study between two parameter estimation methods; recursive least squares (RLS) and Smooth Variable Structure Filter (SVSF) applied over an “OS4” Quadrotor model. Results indicated that both RLS and SVSF have good performance, rapid convergence, and low percentage error with the absence of introduced state noise. However, SVSF showed superior performance with the presence of additive noise and uncertainties.This work aims to estimate the unknown parameters of the “OS4” Quadrotor [22] to attain a reliable dynamics model and enhance control quality. The following section presents the continuous dynamics model of the “OS4” Quadrotor. The section also presents the derivation of the discrete time model. The derived discrete time model is then used to simulate flight trajectories based on predefined input signal, assuming known model parameters. The subsequent sections estimate the unknown parameters of the considered Quadrotor using three estimation methods with noisy versions of the simulated trajectories. Section 3 presents “The Iterative Bi-Section Shooting (IBSS)”. Section 4 presents “The Artificial Neural Network (ANN)”. Section 5 presents the main contribution of this work “the Hybrid ANN and IBSS method”. Results and conclusions are discussed in Sections 6 and 7, respectively.Quadrotor UAVs consists of four rotors in a cross configuration. Each rotor produces an upward thrust against its own weight. Fig. 1shows the (x, y, z) frame attached to the bodyBof a Quadrotor. The frame defines the Euler angles pitch, roll, and yaw (φ, θ, ψ), respectively, of the UAV. The fixed (X, Y, Z) Earth frameEis used to define the global position and orientation of the flying vehicle.The general dynamics model of Quadrotor UAVs is discussed in Refs. [1,2,23]. State-of-the-art work is to find an efficient Quadrotor mathematical model. The dynamics model is then linearized to apply linear control theory. A general dynamics model for Quadrotor UAV is described by Eqs. ((1)–(13)) [24].This model is selected as a benchmark for this work.(1)p˙=qrα1−α2q+α3δroll(2)q˙=prα4+rα5+α6δpitch(3)r˙=pqα7+α8δyaw(4)ϕ˙=p+tanθ(qsϕ+rcϕ)(5)θ˙=qcϕ−rsϕ(6)ψ˙=(qsϕ+rcϕ)secθ(7)x¨=(sϕcψ−sψsθcϕ)ucm(8)y¨=(−sψsϕ−sθcϕcψ)ucm(9)z¨=−g+(cθcϕ)ucm(10)δroll=Lb(ω42−ω22)(11)δpitch=Lb(ω32−ω12)(12)δyaw=d(ω42+ω22−ω32−ω12)(13)uc=b(ω42+ω22+ω32+ω12)α1toα8are the Quadrotor model parameters, where,α1=Iy−IzIx,α2=JRdIx,α3=1Ix,α4=Iz−IxIy,α5=JRdIy,α6=1Iy,α7=Ix−IyIz,α8=1IzMoreover, (p, q and r) are pitch, role, and yaw angular velocities measured in the fixed frame, respectively. Eqs. ((10)–(12)) define the relation between rotor speedωiand torque needed to change Euler angles. The total thrust force uc is given by Eq. (13). Table 1defines the rest of parameters. Details of the previous model can be found in Ref. [24].In order to apply parameter estimation a discrete time model needs to be developed using the presented dynamics model. For that, the state variable vector X is defined as shown in Eq. (14), then its derivativeX˙can be obtained as shown in Eqs. ((15)–(17)).(14)X=x1x2x3x4x5x6x7x8x9x10x11x12TX=xx˙yy˙zz˙ϕpθqψrT(15)X˙=[x˙1x˙2x˙3x˙4x˙5x˙6x˙7x˙8x˙9x˙10x˙11x˙12]T(16)X˙=[x˙x¨y˙y¨z˙z¨ϕ˙p˙θ˙q˙ψ˙r˙]T(17)X˙=[x2x˙2x4x˙4x6x˙6x˙7x˙8x˙9x˙10x˙11x˙12]TFunctions f1 through f9 shown below were derived using Eqs. ((1)–(9))(18)f1k=(sϕkcψk−cϕksθksψk)ukm(19)f2k=−(sϕksψk+cϕksθkcψk)ukm(20)f3k=(cϕkcθk)ukm−g(21)f4k=pk+θk(qksϕk+rkcϕk)(22)f5k=qkrkα1−α2qk+α3δrollk(23)f6k=qkcϕk−rksϕk(24)f7k=pkrkα4+α5rk+α6δpitchk(25)f8k=(qksϕk+rkcϕk)cθk(26)f9k=pkqkα7+α8δyawkRealizing the relationship between Eqs. ((15)–(17)), along with Eqs. ((18)–(26)), the elements of Eq. (15) can be discretized using the discretization scheme of Eqs. ((27)–(28)). The resulting discrete time model is described by Eq. (29)(27)x˙1=x2x1k+1−x1kT=x2kx1k+1=x1k+Tx2kAlso,(28)x˙2=f1x2k+1−x2kTx2k+1=x2k+Tf1=f1(29)x1x2x3x4x5x6x7x8x9x10x11x12k+1=x1+Tx2x2+Tf1x3+Tx4x4+Tf2x5+Tx6x6+Tf3x7+Tf4x8+Tf5x9+Tf6x10+Tf7x11+Tf8x12+Tf9+Vk+vk+1where, vk+1 is the Gaussian white noise vector associated with measured states. Vkis a function of vk+1 and vkrepresented when the states are replaced with their measured values. The superscript k is a notation for the kth time step for the discretized model.The developed discrete time model is used to generate a series of simulated motion states and their derivatives for the “OS4” Quadrotor. The input signals used and sample of output trajectories are illustrated in Figs. 9–12. Table 1 illustrates values of the “OS4” Quadrotor parameters necessary for the dynamics simulation [22]. In order to mimic expected real state-measurement noise, usually associated with off-the-shelf sensors, the simulated trajectories were injected with artificial Gaussian white noise of zero mean, and a diagonal (12×12) noise covariance matrix (R). The obtained noisy trajectories will be used to perform parameter estimation in this study.The Iterative Bi-Section Shooting method (IBSS) is a search technique used to estimate model parameters for systems of known model structure [25]. IBSS consist of two main methods: the Bi-Section method and the shooting method. The first, also known as continuous Bi-Section or interval halving method is a mathematical or informatics method. Through this method a converging result of interval nesting is generated. This method starts by defining an interval that contains the solution, and then repeatedly divides this interval in half. Then, it selects the subinterval in which the solution exists using an indicator [26,27]. This method is simple, robust, straight-forward, stable with a controllable level of accuracy. However, it is sensitive to defined search interval size and has slow rate of convergence.The Bi-Section method assigns a new search interval in accordance to change of sign of a certain function. One root at least is guaranteed to exist within an interval of opposite signs at the boundaries. The mid-point of the selected interval is calculated and its sign is examined. By repeating this algorithm, the size of the subinterval is reduced iteratively until its width becomes significantly small, i.e. less than twice of tolerance error. The root location is assumed to be the middle of the final subinterval. Due to its stability and simplicity, this method has been used in many applications such theH∞norm calculation of transfer matrices [28], and in system identification [29].The shooting method is a numerical technique that solves boundary condition problems of usual differential equations [26]. The method reminds on shooting down the artillery, a method to meet a distant target with a missile. The missile is fired with a certain beginning gradient. One varies this beginning gradient until it meets the target. The basic idea of the method starts by guessing initial conditions for the system, and then it follows by finding the solutions of that equation for all parameters up to their boundary values. By comparing the resultant boundary values with their actual values, the initial guess is refined iteratively using one of the numerical methods, i.e. Bi-Section method or relaxation methods [27], in order to minimize error of boundary values. Once the error becomes smaller than a threshold value, the method stops and the initial conditions for that equation are the final refined guess. The IBSS extracts values of dynamics model parameters iteratively from measurements [25].Before using the IBSS for parameter estimation, it is required to rewrite the “OS4” Quadrotor dynamics model equations ((30)–(32)) as described by Eqs. ((34)–(36)).(30)p˙k=qkrkα1−α2qk+α3δrollk(31)q˙k=pkrkα4+α5rk+α6δpitchk(32)r˙k=pkqkα7+α8δyawk(33)αji=αjmin+i4(αjmax−αjmin),i=0,1,…,4j=1,2,…,7(34)α3i=(p˙k−qkrkα1i+α2iqk)δrollk(35)α6i=(q˙k−pkrkα4i−α5irk)δpitchk(36)α8i=(r˙k−qkrkα7i)δyawkIBSS could then be applied to estimate the parameters of Eq. (32), namely;α7andα8. The shooting method defines five equally distributed values forα7over the initial guess interval(α7max,α7min)using Eq. (33) provided that the expected parameter value lies within this interval. Then five more values forα8are extracted using eachα7ivalue along with the measurement as defined by Eq. (36). The latter states that variance ofα8iis a function of measurement noise andα7estimation error. Thus, five variance values are obtained for each parameter; i.e.σα8iwherei=0,1,…,4. The difference between each two successiveσα8ivalues is considered, and the minimumα8value is located where the sign change in the difference occurs.The sign function (difference) is examined and the search interval ofα7is modified using the Bi-Section method as illustrated by Fig. 2and Table 2. The resulting values are then used to define the new subinterval and the algorithm is repeated iteratively. The Bi-Section method provides stability for the IBSS method.The IBSS could be further applied to extract more parameters; i.e. Eqs. (30) and (31). However, the algorithm becomes complicated. In case of Eq. (30), an optimal solution requires running five inner parallel loops in a major outer loop. The outer loop starts with five values for parameterα1(i.e.α11,α12,α13,α14andα15), where each value has its own corresponding inner loop that consists of five more values forα2; i.e. the inner loop associated withα1idefinesα2i1,α2i2,α2i3,α2i4andα2i5. The third parameter(α3)is extracted using the values ofα1andα2along with the measurement as described by Eq. (34). Each of the inner loops reduces the second parameter interval iteratively until it reaches the lowest variance ofα3ijassociated with the first parameter valueα1iagain using the concept illustrated by Table 2.When all inner loops terminate, each element ofα1ihas a single value ofα2i. This generates five signals ofα3ifor each pair of (α1i,α2i). Then the outer loop reduces α1's interval according to the resulting varianceσα3iusing the Bi-Section method. The algorithm is repeated until some predefined convergence is achieved as shown in Fig. 3over next page. To obtain the parameters of Eq. (31), the same procedure is done. However,α1,α2andα3should be replaced byα4,α5andα6, respectively. In addition, Eq. (35) is used instead of Eq. (34).Due to the high accurate approximation associated with Artificial Neural Networks (ANNs), they have been deployed in several fields including engineering, medical, mathematics, control and robotics [30–34]. For instance, it has been used for UAV visual-servo control [35], UAV path planning [36,37], UAV system identification [38,39] and many other UAV related work [40–42].Matlab “nntool” toolbox is used in this work to estimate the parameters of the “OS4” Quadrotor dynamics model. Based on Eq. ((1)–(3)) three separate neural networks are built and illustrated in Figs. 4–6, respectively.The first neural network is a linear perceptron ANN, as shown by Fig. 4, and is built based on Eq. (30). It has the training input dataX1t=[p0k,(qr)1k,q2k,(δroll)3k]with linear activation function. The subscript associated with the elements (0, 1, 2 and 3) indicates the respective input number. The superscript k represents thekthsample used (k=1, 2…M), where M is the total number of training samples. The network outputp˙kconsists of a single-zero-hidden layer. The built network seeks the best vector of weightsW1=1,α1,α2,α3that linearly relates the network inputs to predict the output using Eq. (37a). The first weight value of the weights vectorW1is set to 1.(37a)p˙k=p0k+α1(qr)1k+α2q2k+α3δroll3kThe actual output values from dynamics simulation are compared to the predicted output values. The weights are then altered to acquire the minimal error using the gradient descent learning algorithm. The resulting weights of the first network represent the unknown dynamics model parameters of Eq. (30), namely α1, α2 and α3, respectively.The second and third networks are built based on Eqs. (31) and (32), respectively. Both are linear perceptron ANN with linear activation functions and gradient descent learning algorithm. The training input data for the second network isX2t=[q0k,(pr)1k,r2k,(δpitch)3k], while the training input data for the third network isX3t=[r0k,(pq)1k,(δyaw)2k]. The second and third networks seek the best vectors of weightsW2=1,α4,α5,α6andW3=1,α7,α8that linearly relate each network inputs to predict their respective output using Eqs. (37b) and (37c). Again, the first weight value of W2 and W2 are set to 1(37b)q˙k=q0k+α4(pr)1k+α5r2k+α6(δpitch)3k(37c)r˙k=r0k+α7(pq)1k+α8(δyaw)2kObtained weight values from second and third networks, namely α4, α5, α6, α7 and α8 represent the unknown dynamics model parameters of Eqs. (31) and (32).Estimation accuracy of the methods described in the previous sections was low for the small value parameter(JRd). The presence of measurement noise reduced the estimation accuracy of this parameter furthermore. In this section, a new novel method, which merges IBSS with ANN, is proposed. The method begins by using the third ANN, introduced in Section 4 and shown by Fig. 6, to estimate accurate values ofα7andα8. Then it becomes easy to get an estimated value for the moment of inertia around z-axis usingI˜z=1/α8. Dividingα7byα8, the following equation is obtained:(38)Ix−Iy=α7α8Rewriting Eqs. (2) and (3) using the newly estimated value ofI˜zyields Eqs. (39) and (40).(39)Ix=qrIy−I˜zp˙−JRp˙qd+δrollp˙(40)Iy=prI˜z−Ixq˙+JRq˙rd+δpitchq˙Multiplying Eq. (40) by(qr/p˙)and adding the resulting term to Eq. (39) gives Eq. (41).(41)Ix=(qpr2−qrq˙)I˜z+(qr2−qq˙)JRd+qrδpitch+q˙δroll(q˙p˙+qpr2)Definingα10=(qpr2−qrq˙)I˜z+qrδpitch+q˙δroll(q˙p˙+qpr2)α11=qr2−qq˙(q˙p˙+qpr2)Eq. (41) can be rewritten as(42)Ix=α10+α11JRdMultiplying Eq. (39) by(−pr/q˙)and adding the resulting term to Eq. (40) gives Eq. (43).(43)Iy=α12+α13JRdwhere,α12=[(qpr2−prp˙)I˜z+p˙δpitch−prδroll](q˙p˙+qpr2)α13=pqr+p˙r(q˙p˙+qpr2)Subtracting Eq. (43) from Eq. (42) results in(44)Ix−Iy=(α10−α12)+(α11−α13)JRdSubstituting Eq. (38) in Eq. (44) and moving all the terms to the right side yields to Eq. (45)(45)Fcost=(α10−α12)+(α11−α13)JRd−α7α8Then it becomes possible to find the value ofJRdby applying IBSS method using the cost function Fcost=0 and following the algorithm shown in Fig. 7. The final value ofβ=JRdobtained from Fig. 7 is then used to calculate approximate values of Ixand Iyusing Eqs. (42) and (43), respectively.

@&#CONCLUSIONS@&#
A discrete time model for the “OS4” Quadrotor was developed using a previously presented continuous dynamics model. Developed model was then used to generate flying trajectories of the “OS4” Quadrotor by means of dynamics simulation. Three parameter estimation methods namely, Iterative Bi-Section Shooting (IBSS), Artificial Neural Network (ANN), and Hybrid ANN–IBSS, were proposed and applied using the simulated trajectories. Performance of presented methods was evaluated under two scenarios; one using noise free trajectories and another with injected noise trajectories.IBSS and ANN were able to estimate the unknown values of the “OS4” Quadrotor parameters. ANN had a slight advantage over IBSS in terms of accuracy and time especially with the presence of noise. However, IBSS and ANN were not able to deliver accurate estimates of the “OS4” Quadrotor small value parameters.A new novel estimation method “Hybrid ANN_IBSS” that integrates IBSS and ANN was developed and applied. The method delivers higher estimation accuracy than IBSS and ANN. In addition, it needs less time than that required by other two methods. The Hybrid ANN_ IBSS achieves accuracy using Neural Networks, and guarantees accuracy using IBSS. In addition, Hybrid ANN_IBSS represents a new online parameter estimation method, which enhances the accuracy of the “OS4” dynamics model, and consequently the performance of feedback control during flight. Current work is devoted for an experimental verification of the developed method through the use of a specific Quadrotor and a test room that is equipped with the Vicon motion-capture system under installation.