@&#MAIN-TITLE@&#
Intrinsic computation of centroidal Voronoi tessellation (CVT) on meshes

@&#HIGHLIGHTS@&#
We propose two intrinsic methods for computing centroidal Voronoi tessellation (CVT) on triangle meshes.Thanks to their intrinsic nature, our methods compute CVT using metric only.Our results are independent of the embedding space.

@&#KEYPHRASES@&#
Voronoi diagram,Centroidal Voronoi tessellation (CVT),Discrete geodesics,Exponential map,Riemannian center,The L-BFGS method,

@&#ABSTRACT@&#
Centroidal Voronoi tessellation (CVT) is a special type of Voronoi diagram such that the generating point of each Voronoi cell is also its center of mass. The CVT has broad applications in computer graphics, such as meshing, stippling, sampling, etc. The existing methods for computing CVTs on meshes either require a global parameterization or compute it in the restricted sense (that is, intersecting a 3D CVT with the surface). Therefore, these approaches often fail on models with complicated geometry and/or topology. This paper presents two intrinsic algorithms for computing CVT on triangle meshes. The first algorithm adopts the Lloyd framework, which iteratively moves the generator of each geodesic Voronoi diagram to its mass center. Based on the discrete exponential map, our method can efficiently compute the Riemannian center and the center of mass for any geodesic Voronoi diagram. The second algorithm uses the L-BFGS method to accelerate the intrinsic CVT computation. Thanks to the intrinsic feature, our methods are independent of the embedding space, and work well for models with arbitrary topology and complicated geometry, where the existing extrinsic approaches often fail. The promising experimental results show the advantages of our method.

@&#INTRODUCTION@&#
Centroidal Voronoi tessellation (CVT) is a special type of Voronoi diagram (VD) such that the generating point of each Voronoi cell is also its center of mass  [1]. The CVT has broad applications in computer graphics, such as meshing, stippling, sampling, etc. Although the CVT in Euclidean space has been extensively studied, relatively little progress has been reported towards computing the CVT on curved surfaces. A key step in computing the CVT is to construct the Voronoi diagrams in each iteration. It is fairly simple to construct the Voronoi diagrams in Euclidean space (e.g.R2andR3), since many efficient algorithms and software tools are readily available. However, it is technically challenging to compute VD on curved surfaces. Some researchers tackle this challenge by computing the restricted Voronoi diagrams  [2], which is the intersection between the input mesh and the Voronoi diagram inR3. These approaches are embedding space dependent and may fail on models with complicated geometry and/or topology. Others adopt the global parameterization to map the surface to the parametric domain, such as Euclidean planeE2, the sphereS2, or hyperbolic diskH2, in which the 2-dimensional CVT is computed  [3]. It is known that parameterizing models with complicated geometry and/or topology is computationally expensive and often suffers serious numerical issues. To our knowledge, there is no method for computing the CVT on arbitrary surfaces.To tackle the above-mentioned challenge, this paper presents two intrinsic algorithms for computing the centroidal Voronoi tessellation on arbitrary triangle meshes. Our first algorithm adopts the Lloyd framework, which iteratively moves the generator of each geodesic Voronoi diagram to its mass center. Based on the discrete exponential map, our method can efficiently compute the Riemannian center and the center of mass for any geodesic VD. Our second algorithm uses the L-BFGS method (limited-memory BFGS), which uses the CVT energy function and its gradients to approximate the Hessian matrix. The L-BFGS method has better performance due to its super-linear convergence rate. Thanks to the intrinsic feature, our methods are independent of the embedding space, and work well for models with arbitrary topology and complicated geometry, where the existing extrinsic approaches often fail. Fig. 1shows our result on the genus-5 Pegaso model. Moreover, our methods are insensitive to the mesh resolution and tessellation, and can be applied to surfaces embedded in arbitrary dimensional space. The promising experimental results demonstrate the efficacy of our methods.The rest of the paper is organized as follows. Section  2 briefly reviews the existing work on CVT and the related topics. Then Sections  3 and 4 presents our intrinsic Lloyd and L-BFGS CVT algorithms in detail. Section  5 shows the experimental results, compares our method to the existing techniques and discusses its advantages and limitations. Finally, Section  6 concludes the paper.LetS=(si)i=1mbe a set of distinct sites in a connected compact regionΩ⊂R2. The Voronoi regionΩiofsiis defined as:Ωi={x∈Ω∣‖x−si‖≤‖x−sj‖,∀i≠j},where‖⋅‖denotes the Euclidean norm. The Voronoi regions,Ωi, of all the sites form the Voronoi diagram ofS. The VD is a fundamental geometric tool that has a wide range of applications in science, engineering and even arts. The classic algorithms for constructing Voronoi diagram inR2are the sweep line algorithm  [4] and the divide-and-conquer algorithm  [5], which have optimal time complexityO(mlogm).Let the domainΩbe endowed with a density functionρ(x)>0, which is assumed to beC2. A typical energy function onΩwith regard to the Voronoi tessellation is defined as follows  [1]:F(S)=∑i=1m∫Ωiρ(x)‖x−si‖2dσ≜∑i=1mFi,where the termFiexpresses the compactness (or inertia momentum) of the Voronoi cellΩiassociated with the sitesi. The Voronoi tessellation{Ωi}is said to be a centroidal Voronoi tessellation if each sitesicoincides with the centroidciof its Voronoi cell, that is:si=ci(=∫Ωiρ(x)xdσ∫Ωiρ(x)dσ).The Lloyd algorithm  [6] iteratively moves the generator of Voronoi cell to its mass center. Although it is conceptually simple and easy to implement, the Lloyd algorithm has only linear convergence rate. Liu et al.  [7] proved that the CVT energy function isC2continuous. As a result, one can minimize the CVT energy by the Newton or quasi-Newton method, which converges much faster than the Lloyd algorithm.Both the Lloyd algorithm and the Newton algorithm require computing the Voronoi diagrams in each iteration. Although it is fairly simple to construct the VD in Euclidean space (e.g.R2andR3), computing VD on curved surfaces is technically challenging. Alliez et al.  [8,9] conformally parameterized genus-0 open surface to a disk and evaluated the centroids over the density function expressed in parameter space rather than on the surface. Thanks to the angle-preserving and local isotropic properties of conformal parameterization, a well-shaped triangle in parameter space will not be deformed too much once lifted back intoR3, except for its size, which can be easily compensated by the weighted density function inR2. Rong et al.  [10] generalized the CVT energy function fromR2to spherical spaceS2and hyperbolic spaceH2and then combined all of them into a unified framework—the CVT in universal covering space (UCS). They adapted Lloyd’s iteration to compute the CVT in the embedded fundamental domain of the UCS. If a centroid is outside of the fundamental domain by one side, they performed a rigid motion to move it to the opposite side of the fundamental domain. The adjusted centroids are all inside the fundamental domain and are used as the new sites in the next iteration. Rong et al.  [11] proposed a GPU-based method for computing the CVT on the plane and observed significant speedup of these GPU-based methods over their CPU counterparts. Their method also works for some 3D models that can be represented as a geometry image. However, as mentioned above, global parameterization is computationally expensive and may suffer from serious numerical issues if the surface has complicated geometry and non-trivial topology. For example, the Bunny’s ears are shrunk to very tiny regions under spherical conformal parameterization  [12], which poses a great numerical challenge to compute the CVT onS2.Yan et al.  [2] proposed a different approach. Rather than constructing the CVT on the mesh directly, they repeatedly computed restricted Voronoi diagrams (RVD), defined as the intersection between the input mesh and a Voronoi diagram inR3. Their method uses a kd-tree to quickly identify and compute the intersection of each triangle face with its incident Voronoi cells. The time complexity for computing RVD isO(mlogn), wherenis the number of seed points andmis the number of triangles of the input mesh. Their method also adopted the quasi-Newton method for fast convergence. They demonstrated that the restricted RVD-based method is flexible for computing the CVT with a non-constant density function. However, their method is embedding space dependent and may fail on models with complicated geometry/topology. Recently, Lévy and Bonneel  [13] proposed an elegant method for constructing curvature-adaptive anisotropic meshes. Their idea is to transform the 3D anisotropic space into a higher dimensional isotropic space, in which the mesh is optimized by computing a CVT. Lévy and Bonneel’s method overcomes thed-factorial cost of computing a Voronoi diagram of dimensiondby directly computing the restricted Voronoi cells with an algorithm called Voronoi Parallel Linear Enumeration, which can be easily parallelized. Their method is extrinsic due to the computation of intersection between the (higher dimensional) Voronoi cells and the surface.For any two pointspandqon a 2-manifold surface, the geodesic path betweenpandqis a local shortest path connectingpandqon the surface  [14]. If the surface is smooth, the geodesic is a curve on the surface whose geodesic curvature is always zero. Since geodesic curvature is only dependent on the first fundamental form, the geodesic is intrinsic to the surface. To compute the discrete geodesic on a triangle mesh of arbitrary topological type, two broad classes of methods exist. The first class treats the mesh as the first-order approximation of a smooth surface and uses numerical methods to solve a characterizing partial differential equation on the mesh; as a typical example, the Eikonal equation is solved on a mesh in  [15]. The second class treats the mesh as a polygonal domain and uses computational geometry methods to build the shortest paths. The second class can compute the discrete geodesic exactly, and is typified by the Mitchell–Mount–Papadimitriou (MMP) algorithm  [16], the Chen–Han (CH) algorithm  [17] and their many variants  [18–22]. The time complexities of the MMP and CH algorithms areO(n2logn)andO(n2), respectively, wherenis the number of mesh vertices. Recently, Ying et al.  [23] proposed the saddle vertex graph (SVG), which is a pre-computation technique for efficiently computing various types of discrete geodesics.With the above-mentioned discrete geodesic algorithms, one can compute the exponential map, which defines a geodesic polar coordinate system on meshes (see Fig. 2). Letp∈Mbe an arbitrary point on a smooth surfaceM. The exponential mapexpp:TpM→Matpis a map from the tangent plane atptop’s local neighborhood. Given a radial line on the tangent plane which originates atpand has directionv∈TpM, the exponential map sendsp+tvto a unique geodesic curveγoriginating atpsuch thatγ′(0)=vand‖γ(t)‖=1. Conversely, given an arc-length parameterized geodesicγoriginating atp,γ(0)=p, there is a unique tangent directionγ′(0)on the tangent planeexpp−1(γ)=γ′(0). The exponential map has been used in various graphics applications, such as decal compositing  [24], texture mapping  [25], Poisson disk sampling  [26], etc.To compute the geodesic Voronoi diagram on a 2-manifold meshM, the Euclidean norm is replaced by the geodesic metric. Such a metric change results in fundamental change in the bisector and Voronoi regions between the Euclidean plane and a curved 2-manifold. For example, a bisector inR2is a line segment, while a bisector on a triangle mesh may contain both line segments and hyperbola segments. Given a genus-gmeshM, it was shown in  [27] that the bisector of two distinct points onMcan have at mostg+1separated components and a Voronoi region of a point inScan be bounded by one or more closed bisectors (see Fig. 3). Liu  [28] proved that the combinatorial complexity of geodesic Voronoi diagram onMisO((m+g)n), wheremis the number of points inSandnis the number of triangles in the mesh. Edelsbrunner and Shah  [29] showed that for a general topological space, if a closed ball property is satisfied, then the dual Delaunay triangulation of Voronoi diagram exists. Recently, Liu et al.  [30] showed that the intrinsic Delaunay triangulation on meshMcan be obtained by the duality of a geodesic Voronoi diagram onM. They proved that this duality exists under two practical assumptions and proposed an efficient algorithm for constructing the Delaunay triangulation.We refer the readers to  [31] for in-depth discussion on the properties of Delaunay triangulation and Voronoi diagram on a 2-manifold mesh.

@&#CONCLUSIONS@&#
