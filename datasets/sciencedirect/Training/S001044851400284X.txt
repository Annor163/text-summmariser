@&#MAIN-TITLE@&#
A polynomial Hermite interpolant for

@&#HIGHLIGHTS@&#
Transcendental curves and most offsets do not admit exact NURBS representation.We apply Hermite interpolation to achieveC2quasi arc-length approximation.Two alternative tools are considered: piecewise Bézier quintics and cubic B-splines.The quintic displays simple control points, with locally nonparametric arrangement.We approximate offsets and clothoids and compare our results with existing software.

@&#KEYPHRASES@&#
Arc-length,Clothoid,Hermite interpolation,Offset,Quintic,Transcendental curve,

@&#ABSTRACT@&#
Transcendental curves, or in general those resulting from offsetting, do not admit an exact rational or polynomial representation and must hence be approximated in order to incorporate them into most commercial CAD systems. We present a simple, yet general geometric tool for polynomial approximation, based on piecewise Hermite interpolation withC2quasi arc-length parameterization, a desirable property for robotics or CNC. We take the osculatory Hermite interpolation, prescribing position, tangent direction and curvature at the endpoints, and add quasi arc-length conditions, by imposing unit speed and vanishing tangential acceleration. These new conditions fit naturally into this scheme, yielding a quintic with Bézier points that turn out to display extremely simple geometry. In addition we consider a lower degree alternative to the quintic, namely a cubic B-spline. Finally, we include two examples of applications (the approximations of regular offsets and the clothoid) and compare our results with those from commercial systems or existing methods.

@&#INTRODUCTION@&#
Curves in CAD are usually represented by employing a polynomial or rational parameterization, expressed in Bernstein basis and its B-spline extension. However, remarkable cases, such as the offset or transcendental curves, do not admit this representation. In consequence, they cannot be incorporated directly into most commercial systems and must be approximated in some way. Another expressive shortcoming of the standard rational model [1–3] is that it cannot yield curves with exact arc-length parameterization [4,5], aside from the trivial case of a straight line.Most approximation methods concentrate on generating a good approximant in the sense of being close to a given curve, by guaranteeing a maximum distance. However, this requisite does not suffice for applications requiring a smooth parameterization, where smooth usually means at leastC2and close to the ideal arc-length (also called intrinsic or natural parameterization). An example where parameterization plays a key role is a trajectory whose parameter is taken as proportional to time. A smooth parameterization with approximately unit speed is desirable for CNC machining, or the definition of trajectories for robotic manipulators. Parameterization is also of paramount importance in skinning (traditionally known as lofting) [1], where several section curves are connected to generate a smooth surface. If the section curves are unevenly parameterized, the resulting surfaces display poor quality. Finally, even in case a curve admits an exact rational representation, such as the circle, a polynomial approximation may be required to improve its parameterization.To achieve a quasi arc-length approximation to a given curve, a first option would be to sample points on the curve and construct an interpolant that tries to minimize its speed deviation from unity by some optimization technique, as done in [6,7] using a quintic spline, or in  [8] with a cubic B-spline. We advocate instead a simpler, more geometric alternative that reproduces not only positional data but also tangential and curvature information from the original curve, by using a modified Hermite interpolation technique. The remaining degrees of freedom of the interpolant are employed to impose the quasi arc-length condition, namely unit speed and vanishing tangential acceleration at the endpoints. Thus, our approach is aimed at representing in an approximate manner, with the bonus of a smooth parameterization, those curves that do not fit into the NURBS model.The article is arranged as follows. First, in Section  2 we set the Hermite conditions for the interpolant and consider two alternative solutions (a piecewise Bézier quintic and a cubic B-spline). Remarkably, the quasi arc-length condition results in extremely simple geometry for the control points. We apply our tool to approximate regular offset curves (Section  3) and the clothoid (Section  4), a notable transcendental curve, comparing our results with those from commercial CAD software. Finally, conclusions and extensions of this work are outlined in Section  5.The Hermite-like interpolation process we advocate is sketched in Fig. 1. Given an original curve segmentc(t), with arbitrary parameterization over a general domaint∈[t0,t1], we seek a quasi arc-length approximationb(σ), defined over an intervalσ∈[0,L]of lengthLequal to that ofc(t), whereσapproximates the arc-length parameters. Therefore, the parametric speedv(σ)should be close to the ideal unit speed:v(σ)=|db/dσ|=|ḃ(σ)|≈1,σ∈[0,L].Another characteristic of arc-length parameterization also admits a clear kinematic interpretation. For an arc-length curvea(s), sinceȧ(s)⋅ȧ(s)=1, by differentiating this scalar product thenȧ(s)⋅ä(s)=0. In other words, the curve is traversed with vanishing tangential acceleration.The key idea is to add these kinematic requirements to the customary osculatory Hermite interpolation (Fig. 2(a)), by finding the Hermitian interpolantb(σ)that meets the following conditions at the endpoints{t0,t1}:(i)Interpolation of positions, tangents directionst0,t1, and curvaturesκ0,κ1ofc(t).Unit speedv, and accelerationb̈with vanishing tangential componentb̈t:(1)v(0)=v(L)=1,b̈t(0)=b̈t(L)=0.If the approximation with a single interpolant is not satisfactory, we subdivide the initial segmentc(t),t∈[t0,t1], into several pieces and construct a new Hermite interpolant for each piece, as shown in Fig. 2(b), which furnishes aC2piecewise approximation. To generate a more compactC2quintic B-spline [3], rather than a piecewise Bézier representation, just knot together the Bézier segments, by following a two-step procedure:1.Merge the approximations into a quintic B-spline curve, with de Boor points obtained by concatenating the Bézier polygons, and knot positions by concatenating each interval length, with knot multiplicity 5 equal to the degree.Apply twice knot removal  [1,9] at each internal knot, down to multiplicity 3.Finally, Fig. 2 illustrates the case of a planar open segment, although it clearly extends to 3D curves, or closed curves by selecting a breakpoint corresponding to botht0andt1.Next, we derive the Bézier points for the quintic interpolant, from the conditions (i) and (ii) explained in the previous section. Consider a quinticb(σ), with control points{bk}k=05and domainσ∈[0,L], instead of the customary unit interval. Ift0denotes the unit tangent vector of the original curvec(t)at the endpointt0, then the interpolation of position and tangent, along with the requirement of unit speed (1) att0, yield directly the initial control pointsb0,b1:(2)b0=c(t0),b1=b0+L5t0.Additionally in (ii), we impose a vanishing tangential component for the second derivative (1). This is tantamount to saying thatb0,b1, along with the projectionb2tofb2onto the tangent line, define a Bézier line segment with vanishing second derivative atb0, and in consequenceb0,b1,b2tlie equally spaced, as depicted in Fig. 3. Since the distance along the tangent line betweenb0andb1isL/5(2), thenb1andb2tare also separated byL/5. Intuitively, the Bézier interpolantb(σ)is locally nonparametric [3], taking as abscissa axis the tangent line (and as ordinate axis the normal direction). Finally, the interpolation (i) of the curvatureκ0ofc(t)att=t0yields the distancehfromb2tob2t:(3)h=κ0L220,wherehis always a positive distance and towards the center of curvature.Note thatb0,b1,b2only depend on data prescribed at one endpoint(t=t0), so we proceed analogously att=t1to obtainb5,b4,b3. The simplicity of expressions (2), (3) contrasts with the complexity of the osculatory cubic required inG2cubic Hermite interpolation [10,11], where condition (i) results in a coupled system of quadratic equations for the control points, whose solution (when it exists) may not be unique. Moreover, it becomes unstable for flat curves, as Elber et al. [12] pointed out in the context of offset approximation  [10]. In contrast, any given straight line segmentc(t)is recaptured exactly by our quinticb(σ), because the control pointsbklie regularly spaced by a distanceL/5along the line segment. In addition, this geometry of the quintic corresponds to a degree-elevated Bézier line, thereby yielding exact arc-length parameterization. Thus, our method enjoys linear precision, recapturing the only instance of a polynomial curve admitting an exact arc-length parameterization.The two-point Hermite interpolantb(σ)approximates the exact arc-length parameterizationcs(σ)of the given curvec(t). The differencecs(σ)−b(σ), called remainder, indicates the error with whichcs(σ)is approximated byb(σ). Assuming thatcsenjoys continuity within[0,L]and that the derivativecs(6)exists in(0,L), this Cauchy’s remainder is characterized as the particular case of Theorem 3.5.1 in  [13]:(4)cs(σ)−b(σ)=16!u3(u−1)3cs(6)(ξ)L6,u=σ/L,whereξ∈(0,L)is a suitable, not specified, intermediate parameter value. Sinceu∈[0,1], the difference (4) has clearly order of magnitudeO(L6).Instead of a Bézier quintic, B-spline curved(σ),σ∈[0,L]provides a lower-degree alternative to solve the Hermite interpolation problem posed in Section  2.1. A quartic spline would do the job, but we rather choose a cubic spline, as it yields the desiredC2continuity with the lowest possible degree. Since 6 control points{dk}k=05are required, we choose a nonperiodic knot vector{0,0,0,1/3,2/3,1,1,1}Lwith two internal knots  [3], equally spaced for simplicity.To obtain the de Boor pointsd0,d1,d2, simply impose thatd(σ)reproduces atσ=0up to the second derivatives of the quinticb(σ), and express the de Boor points in terms of the Bézier pointsb0,b1,b2(2), (3), as the barycentric combinations:(5)d0=b0,d1=19(4b0+5b1),d2=127(2b0+5b1+20b2).At the endpointσ=L, we proceed analogously to obtaind5,d4,d3, by replacing{b0,b1,b2}with{b5,b4,b3}in expressions (5). Fig. 4shows an example for the geometric relationship between the pointsdkandbk.With this cubic B-spline alternative to a quintic, we would proceed analogously as in Section  2.1 if several interpolants are required, by concatenating the de Boor points and removing the internal knots, now down to multiplicity one.Offset curves  [14,15] play a key role in geometry processing, especially in tool path generation for NC machining. Given a planar regular curvec(t)={x(t),y(t)}, called variously base, generator or progenitor curve, its offsetcd(t)at a signed distancedto the right is defined as:(6)cd(t)=c(t)+dn(t),n(t)={ẏ(t),−ẋ(t)}ẋ(t)2+ẏ(t)2,where the unit normaln(t)points to the right ofc(t)when we drive along the curve (Fig. 5). Due to the normalizing square root involving the derivativesẋ(t),ẏ(t), the offset (6) to a polynomial or rational curve is not expressible in the NURBS standard, except for simple cases, such as a straight line or a circle, and the so-called Pythagorean-hodograph curves  [16]. Therefore, in some commercial systems offsets are represented in a procedural manner  [17], as a reference to the base curve plus the distanced. Anyway, computing a NURBS approximation seems the only viable method to introduce offset curves into general CAD/CAM systems and guarantee compatibility.The offset operation displays remarkable properties [18], sketched in Fig. 5:•It keeps the center of curvatureC, as well as the tangent and normal vectorst,n(at regular points).It increases the original radius of curvatureR(t)=1/κ(t)by the constantd, with the sign convention thatκ>0ifnpoints away fromC, so the offset has radius:(7)Rd(t)=R(t)+d,Rd(t)=κd−1(t).A segmentcd(t),t∈[t0,t1]of the offset has length(8)Ld=L+dΔθ,whereLis the length of the generator segment andΔθdenotes the total counterclockwise winding angle of the tangent between the endpoints.Ifc(t)is regular, in general so is its offset, sincecd(t)inherits the well-defined tangentt(Fig. 5). However, at a distanced=−R(t), the radiusRd(t)(7) vanishes, meaning that irregular points appear  [18]. We do not tackle this situation, because it makes little sense trying to obtain aC2arc-length parameterization for a curve with cusps or isolated points. Henceforth, we assume a regular offset. In this case, if the generator curve is curvature continuous, then so is the offset curvatureκd(t)(7), in other words,cd(t)inherits the geometric continuityG2ofc(t).In contrast, things are not that simple as for parametric continuity, using the customary offset parameterizationcd(t)(6). Indeed, as a function of the curvatureκ(t)of the generator, the first derivative of the offset is given by [16,18]:(9)ċd(t)=[1+d⋅κ(t)]ċ(t),κ(t)=1/R(t).In consequence, ifc(t)∈C1, thencd(t)is not necessarilyC1, asκ(t)is not necessarily continuous. The derivativeċd(t)(9) is always collinear toċ(t), but its length changes abruptly at the discontinuities ofκ(t). Analogously, ifc(t)∈C2, thencd(t)is not necessarilyC2, because the second derivativec̈d(t)involvesκ̇(t). This would be for instance the case of the customary cubic B-splines employed in CAD. Note also that a parameterizationc(t)with unit speed does not yield an offsetcd(t)with constant speed, aside from the case of constantκ(t). We conclude that the customary parameterizationcd(t)may not be adequate for certain applications, so there is no point in trying to reproduce it, for instance using traditional parametric Hermite interpolation  [19]. In contrast, the quasi arc-length parameterization introduced in Section  2 furnishes a more sensible alternative, in fact independent from the actual parameterization ofc(t).There exists a rich literature on offset approximation (see the surveys [12–15] and Section 11.2 in the book  [20]), although most methods focus on minimizing some distance between the exact and approximated offset and none tries to mimic the arc-length parameterization. In this section, we briefly review some of the most relevant methods for offset approximation, used in the upcoming Section  3.4 for comparison purposes. Clearly, methods leading to gaps when connecting two approximations, such as those based on Legendre series  [21], are ruled out for the approximation of smooth curves.A first option is to sample points on the exact offset and interpolate them, for instance with aCn−1B-spline curve of degreen, as advocated by Piegl and Tiller  [22]. The main advantage of this method is its generality, as it easily carries over to offset surfaces, as well as to generalized or functional offsets. Another option is approximating the unit circlen(t)(6), that is, the Gauss map shared by the offset and generator. Lee et al.  [23] present several alternatives that generate aG1rational approximation, whose degree depends on that of the original curve degree. Usually, the quality of the approximant is measured through the number of control points necessary to meet a prefixed toleranceε, i.e., an upper bound of the discrepancy between the approximantcdaand the exact offsetcd. For those methods that try to reproduce the parameterizationcd(t)(6), it makes sense to employ some distance  [12,24] involving the approximantcda(t)for each instance oft. However, in a recent article, Ahn et al.  [25] employ the Hausdorff distancedH(cd,cda)between theirG2approximant and the exact offset. This distancedHis easily computed, because it turns out to be proportional by the factordto the distancedH(n,na)between the exact unit circlenand its approximantna. In  [25], the unit circle is approximated with biarcs composed of Bézier quadratics, the linear-normal (LN) Bézier curves of least degree. A circle approximation with LN curves of higher degree is also feasible [26].In our case, recall that we are not reproducing the customary parameterization (6), which makes the Hausdorff distance a very convenient option to express the admissible tolerance betweencdandcda. This distance measures the maximum deviation between two objects, independently from their parameterizations, and for instance can be efficiently computed via the algorithm proposed by Kim et al. [27]. Hence, in the numerical examples of the upcoming section, we have chosen the Hausdorff distance, so that, given a certain toleranceε, we subdivide the initial segment untildH(cd,cda)<ε. In addition, the point oncd(t)determiningdHat each step yields a sensible estimation as for the valuetwhere to perform the subdivision (Section  2.1) to refine the approximation, instead of simply at the midpoint.This section contains an example for smooth offset approximation, taken from the articles cited in the preceding section. We chose a simple cubic generatorc(t), because its offset does not display irregular points. First, we include a comparison (Fig. 6) with the offset tool available in Rhinoceros®  4.0  [28], a popular commercial NURBS-based modeler. This tool always generates a cubic B-spline approximation, so the user has no control over the degree of the approximation and can only set a “tolerance” in a dialog box, which after some numerical experiments turns out to be very close to the Hausdorff distance between the approximant and exact offset. The result was transferred from Rhinoceros into Mathematica®, via IGES file format, for analysis purposes. We compare this offset tool with our quasi arc-length quintic, setting a toleranceε=10−3in both our method and Rhinoceros dialog box. As the speed plot indicates, our quintic yields a smoother parameterization, even when it employs fewer control points (albeit resorting to a higher degree). Table 1lists the number of control points for a wider range of valuesε, as well as the results for our cubic B-spline alternative. Our solutions match the accuracy of Rhinoceros, but we enjoy the plus of the quasi arc-length parameterization andC2endpoint interpolation. For comparison purposes, in Table 1 we added data from the methods by Ahn et al. [25], as well as by Ahn and Hoffmann [26], based on circle approximation.For the sake of completeness, Table 1 also includes data from Piegl and Tiller  [22], and Lee et al. [23]. Piegl and Tiller’s method is the best one, followed by our quintic, yet the latter outperforms Piegl and Tiller’s method as the error tightens. However, any conclusions should be drawn with care, since these two works do not resort to the Hausdorff distance to express the tolerance. Other aspects should be considered, because our method cannot guarantee an “a priori” tolerance, which can only be checked after construction.Another practical application for our quasi arc-length interpolant is the approximation of transcendental curves, which being non-algebraic do not admit a rational parameterization and are not expressible in the NURBS standard. A remarkable example is the clothoid, also known as spiral of Cornu or Euler’s spiral, characterized by displaying a curvature that varies linearly with its arc-length. Because of this important property, clothoidal segments are used in the route design of highways and railways, or trajectories for automatic guided vehicles, to achieve smooth transitions between lines and/or circles [29–32].The complex representation greatly facilitates the analysis of planar curves, such as the clothoid. Adhering to the notation employed in Farouki’s book  [16], we use a bold character to denote both points of the Euclidean plane and complex numbers, regarded as interchangeable. A clothoidc(t)is parameterized in terms of the complex Fresnel integral as:(10)c(t)=∫0texp(iπξ22)dξ,where we have chosen a suitable coordinate system (Fig. 7) in the complex plane, so thatc(t)starts at the origin0=c(0)and lies in the first quadrant fort>0. The clothoid (10) displays the following remarkable properties:•Arc-lengthL(t)=t, that is, parameterization with unit speed.Curvature:κ(t)=πt.Tangent vector given by:(11)t(t)=eiθ(t),θ(t)=π2t2.Unfortunately, the integral (10) is a transcendental function that cannot be solved symbolically. As in the offset case, there exists a rich literature on methods for approximating the clothoid. All existing approximations involving non-polynomial functions, such as square roots [33] or a mixture of polynomials and trigonometric functions  [34,35], are problematic for CAD, because they are NURBS-incompatible and would require further approximations. Similarly, those leading to gaps when trying to connect two approximations, such as the classical Taylor expansions, are also inadequate. Traditional least-square approximation neither guarantees contact at the endpoints, so additional constraints must be imposed, as done in  [36,37] when using a rational Bézier segment. Another option is the approximation by arc splines  [38], which, albeit onlyG1continuous, enjoys the advantage of a very simple offset (arc splines again).Not surprisingly, most approximations to the clothoid are based on some sort of Hermitian spline, with segments generated by Hermite interpolation. Regarding polynomial approximations, Wang et al.  [39] simply blend the two Taylor expansions at each endpoint of a clothoidal segment, incurring in the cost of a degree as high asn=8to achieveC2continuity. In comparison, with standard two-point Hermite interpolation, a piecewise polynomial curve of degree2k+1yieldsCkcontinuity, so quintics would suffice to achieveC2. This approach is investigated in  [40], where a modified Newton form is used to compute two-point Hermite expansions. We could also use geometric Hermite interpolation, to achieve a higher geometric continuity for a given degree  [41]. However, since this technique takes advantage of the freedom in the choice of the parameterization, it would destroy any arc-length parameterization.When we approximate a curvec(t), such as the clothoid, already given with arc-length parameterization, our quasi arc-length quintic (Section  2.2) coincides with the customaryCkHermite interpolant of degree2k+1, for the particular instancek=2. The main advantage over our previous work  [40] is that now no expansions are required, because the control points admit straightforward explicit expressions. Indeed, the arc-length, curvature and tangentt(t)(11) of the clothoid are given by simple formulae, so that for a segment (10) overt∈[t0,t1=t0+Δt], the control points (2), (3) of the quintic interpolantb(s)in complex form are:b0=c(t0),b1=b0+Δt5t0,b2=b0+Δt5(2+iπt0Δt4)t0.Pointsb5,b4,b3are computed analogously, by swappingt0andt1.Fig. 8shows an example, where we approximate the clothoidal segmentt∈[0,1], that is, with angleθ∈[0,π/2], corresponding to the maximum range employed in practical road design. Now, to measure the quality of the approximantca(σ)it makes sense to plot the Pythagorean errorε(σ)=|c(σ)−ca(σ)|, as done in [35], because the original curve is already parameterized by arc-length and hence this error indicates the deviation from the ideal curve. Fig. 8 plots the quintic and the cubic B-spline (5) approximations, which display similar error and speed.For comparison purposes with a commercial system, unfortunately we cannot use Rhinoceros, as in Section  3.4, since it does not incorporate any built-in tool to approximate the clothoid. We resorted instead to MicroStation®  V8i  [42], a package intended for civil engineering based on the Parasolid®  kernel [43], which incorporates a clothoidal spiral tool. In the corresponding dialog box, the user chooses a “tolerance”, as well as the length and “degree of curvature”, related toκ(t), at the endpoints. Since this software employs piecewise Bézier cubics to approximate the clothoid, we also used our cubic B-splines (Section  2.3), rather than quintics. We devised an example (Fig. 9) with similar number of control points in both MicroStation and our cubic spline, and compared the Pythagorean errors. In MicroStation, a“tolerance”=10−4yields a cubic B-spline with 13 control points. With our cubic spline, we get 12 control points by simply subdividing the intervalt∈[0,1]into three equal subintervals, merging the resulting Hermitian interpolants into aC2cubic B-spline. Note that our solution furnishes a lower error, as well as a smoother speed.Finally, in Fig. 10we also approximated the offset to a clothoid, corresponding for instance to the edge of a highway whose center line (dashed curve) is defined by a clothoid. Obtaining the control points of the approximant is a straightforward exercise from the expressions (7), (8) for the offset, since the curvature, length and angleθ(t)(11) of the generator are given by simple formulae.

@&#CONCLUSIONS@&#
We present a general tool for polynomial approximation, based on piecewise Hermite interpolation withC2quasi arc-length parameterization, a desirable property for many applications. The main idea is using a quintic for Hermite interpolation of positions, tangents and curvatures at the endpoints, and employing the remaining degrees of freedom to impose unit speed as well as zero tangential acceleration and the endpoints, and hence mimic the arc-length parameterization. These additional conditions also guarantee aC2piecewise curve, if several interpolants are concatenated, instead ofG2continuity.Besides its generality, the main advantage of our method is its sheer simplicity, in contrast with the complexity of the osculatory cubic needed forG2Hermite interpolation. The control points of the quintic Bézier interpolant turn out to have projections regularly spaced on the tangent lines, i.e., they display locally a nonparametric geometry taking as abscissa axis the tangent line. We also consider a lower degree alternative to a Bézier quintic, namely a piecewiseC2cubic B-spline with two internal knots, and in consequence also 6 control points. Both alternatives enjoy linear precision, recapturing the only case where a polynomial curve admits an exact arc-length parameterization.Our tool is aimed at situations where a smooth parameterization is required. A first example is the approximation of regular offsets. Most methods try to approximate the customary offset parameterization, which displays lower parametric continuity than the generator, despite that the offset inherits the geometric continuity of the generator. In contrast, for aC2generator our Hermite interpolant yields an offset approximation that isC2too. Another example of application is the approximation of transcendental curves, such as the clothoid, that should try to reproduce their original arc-length parameterization to display some remarkable property. The control points for an arbitrary clothoidal segment admit straightforward explicit expressions. The approximation of the offset to a clothoid and other transcendental curves, such as the helix, is a straightforward exercise. Despite its generality and simplicity, our proposal compares favorably with specific methods for offset approximations and matches tools available in commercial systems.Regarding possible extensions, a clear option is trying to optimize the selection of the internal knots in the cubic B-spline alternative, which provide two additional degrees of freedom with respect to the quintic. We could also carry over our model from polynomial to rational approximation. To display a vanishing tangential acceleration, now the control points should have projections on the tangent line following the conditions for linear precision of rational Bézier curves [2,44]. The additional degrees of freedom provided by the weights could be employed to achieve circular precision, and lower degree or more accurate approximations, albeit at the cost of increased complexity.