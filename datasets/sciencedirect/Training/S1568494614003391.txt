@&#MAIN-TITLE@&#
Physical programming for preference driven evolutionary multi-objective optimization

@&#HIGHLIGHTS@&#
We deal with preference driven evolutionary multi-objective optimization statements.Our approach uses physical programming to include preferences in the optimization.Preferences and constraints are included in a meaningful way for the designer.The implemented algorithm shows its usefulness to compute a pertinent Pareto front.

@&#KEYPHRASES@&#
Multi-objective optimization design procedure,Evolutionary multi-objective optimization,Physical programming,Many-objective optimization,Preference articulation,Decision making,

@&#ABSTRACT@&#
Preference articulation in multi-objective optimization could be used to improve the pertinency of solutions in an approximated Pareto front. That is, computing the most interesting solutions from the designer's point of view in order to facilitate the Pareto front analysis and the selection of a design alternative. This articulation can be achieved in an a priori, progressive, or a posteriori manner. If it is used within an a priori frame, it could focus the optimization process toward the most promising areas of the Pareto front, saving computational resources and assuring a useful Pareto front approximation for the designer. In this work, a physical programming approach embedded in an evolutionary multi-objective optimization is presented as a tool for preference inclusion. The results presented and the algorithm developed validate the proposal as a potential tool for engineering design by means of evolutionary multi-objective optimization.

@&#INTRODUCTION@&#
Multi-objective optimization design (MOOD) procedures are generate first choose later (GFCL) holistic strategies for multi-objective problems [1]. A multi-objective problem (MOP) arises when multiple objectives and requirements must be fulfilled by the designer. Such objectives are usually in conflict with each other; therefore a trade-off solution must be calculated and selected for implementation. The GFCL strategy generates a set of potentially preferable design alternatives and the decision maker (DM or simply the designer) selects the most preferable solution according to his or her preferences. These solutions are generally Pareto optimal solutions [2].The MOOD procedure (see Fig. 1) identifies three main (possibly fundamental) steps [3,4]: the MOP definition (measure); the multi-objective optimization process (search); and the multi-criteria decision making (MCDM) step (decision making). Major efforts are made to improve the algorithms and tools to facilitate the two latter processes.In the case of multi-objective optimization, several algorithms have been designed (NBI [5], NNC11Matlab code available at http://www.mathworks.com/matlabcentral/fileexchange/38976.[6,7], NSGA-II22Source code available at: http://www.iitk.ac.in/kangal/codes.shtml; also, a variant of this algorithm is available in the global optimization toolbox of Matlab.[8], MOGA33Toolbox for Matlab available at http://www.sheffield.ac.uk/acse/research/ecrg/gat.[9], MOEA/D44Matlab code available at http://cswww.essex.ac.uk/staff/zhang/IntrotoResearch/MOEAd.htm.[10] for example) and used in a wide variety of applications [11–24]. Such algorithms mainly seek a set of Pareto optimal solutions that describe a Pareto front approximation. According to the designer's wishes, those algorithms would incorporate some desirable characteristics [23] such as convergence (capacity to reach the Pareto front), diversity (capacity to generate different solutions), and pertinency (capacity to generate useful solutions for the DM). For the decision making step, several tools and visualizations approaches [25] have been proposed over the years (scatter plot diagrams, parallel coordinates [26], level diagrams [27,28] or self-organizing maps [29] for example).In [30,31] the importance of considering both processes (optimization and selection) in a holistic way, in order to guarantee a full embedment of the DM in the decision making step, was noted. This is because the decision making process is usually more time consuming than the optimization step [32]. This embedment could be achieved by providing a useful set of solutions to the designer; thereby analysing the trade-off between conflicting objectives in order to refine his or her final selection [30].Given that the MOOD procedure should be a holistic technique, preference handling mechanisms could play a major role in bridging the gap between optimization and the selection process. These mechanisms will enable the algorithm to approximate a Pareto front with pertinent solutions in the search process; and therefore facilitating the DM's task of analysing and selecting a design alternative [33]. Furthermore, preference handling might be used in constrained optimization instances and many-objective optimization statements [34]. Challenges for preference articulation include building a practical framework to link the designer's desired trade-off with the cost function to optimize.A first step for the aforementioned challenge, is stating meaningful design objectives. Sometimes with classical optimization approaches a cost function (or objective) is built in order to satisfy a set of requirements such as convexity and/or continuity; that is, it is built from the point of view of the optimizer despite a possible loss of interpretability. The usage of more interpretable objectives facilitates the inclusion of preferences in the optimization process, producing meaningful and pertinent solutions for the designer in the selection step. Evolutionary multi-objective optimization (EMO) provides a helpful framework for this purpose, since multi-objective evolutionary algorithms (MOEAs) have been shown to be a flexible tool to handle constrained complex functions [32] in a wide variety of engineering domain applications [11]. Furthermore, a convenient feature of using MOEAs is the possibility of selecting more interpretable objectives for the designer. That is, the objective selection could be closer to the point of view of the designer, rather than the optimizer. Nevertheless, this is just a necessary step to moving forward to preference articulation, since this could assure meaningful, but not pertinent, design alternatives.The physical programming (PP) method [35] is very suitable for multi-objective engineering design since it formulates design objectives in an understandable and intuitive language for designers. Since it defines desirable, tolerable, and undesirable ranges for individual objectives, it becomes a potential technique to improve the pertinency of solutions in multi-objective optimization. PP has been merged previously with classical optimization techniques [1,36]; nevertheless, it remains an interesting topic to merge with MOEAs.In this work, PP is merged with MOEAs as an auxiliary mechanism to improve the pertinency of the calculated solutions. Such an approach will enable the DM to have more useful solutions, since it provides a flexible and intuitive coding framework where the MOP is built from the DM's point of view. Although an algorithm to test its viability is developed, it could be incorporated in other MOEAs. The remainder of this work is as follows: in the section “Background” several preliminaries in multi-objective optimization, physical programming, and the MOEA are presented. In the section “Pertinency improvement by means of GPP” the preference handling mechanism is explained, and then evaluated in the section “Experimental setup”. Finally, some concluding remarks are given.

@&#CONCLUSIONS@&#
In this work, a mechanism for preference handling in EMO using GPP has been presented. Techniques for preference handling could be desirable characteristics for an MOEA, since they improve the pertinency of solutions. Therefore, this mechanism could facilitate the DM's task of analyzing and selecting a preferable solution from the approximated Pareto front. The embedment of the articulation of preferences in an MOEA could reinforce the holistic MOOD procedure.The developed approach fulfills the requirement for preference coding in an intuitive and meaningful scheme in order to generate pertinent solutions. As a consequence, pertinent approximations of the Pareto front are built. Furthermore, the approach has shown to be effective for constrained and many-objective optimization statements.According to the examples provided, a competitive algorithm has been developed. Although it has been presented as a specific algorithm, the technique could be incorporated in other EMO approaches. The developed algorithm (spMODE-II) is flexible for articulating preferences and is DM-oriented since it provides features for multiple preference conditions, controls the size of the approximated front (based on preferences), and is able to handle the level of tolerance of a design alternative.The advantages of using this framework are:1.DM preferences are coded in an intuitive and meaningful language.A constraint handling mechanism is included in the optimization statement.The pruning mechanism can be refined by specifying which solutions are not allowed to remain in the Pareto front approximation, according to the DM's preferences.A control mechanism can be created for the quantity of solutions required in the Pareto front approximation, with regard to the solutions that interest the designer.The framework enables the algorithm to define priorities on design alternatives according to an objective value against objective value basis (see Algorithm 6).The algorithm can handle multiple preference conditions simultaneously and approximate Pareto optimal solutions for each – independently of the Pareto front shape.However, its limitations are:1.The proposal assumes that the designer has an idea about the preference values. This may not be the case, and sometimes for the designer it is only important to prioritize some of the objectives (objective against objective). In such cases, other mechanisms should be used.This approach states the preference conditions only in an a priori step; therefore, it represents a limitation when compared with progressive approaches. Further research will focus on this topic.