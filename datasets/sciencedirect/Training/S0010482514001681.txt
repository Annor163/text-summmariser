@&#MAIN-TITLE@&#
ODE/PDE analysis of corneal curvature

@&#HIGHLIGHTS@&#
We solve numerically a nonlinear boundary-value problem modeling corneal topography.We use the method of lines to facilitate fast computation and include the R routines.We derive some estimates which demonstrate the order of convergence of the algorithm.

@&#KEYPHRASES@&#
Corneal curvature,Biomechanical shell,Ordinary differential equation (ODE),Boundary value ordinary differential equation (BVODE),Partial differential equation (PDE),Parabolic PDE,R language,Method of Lines (MOL),

@&#ABSTRACT@&#
The starting point for this paper is a nonlinear, two-point boundary value ordinary differential equation (BVODE) that defines corneal curvature according to a static force balance. A numerical solution to the BVODE is computed by first converting the BVODE to a parabolic partial differential equation (PDE) by adding an initial value (t, pseudo-time) derivative to the BVODE. A numerical solution to the PDE is then computed by the method of lines (MOL) with the calculation proceeding to a sufficiently large value of t such that the derivative in t reduces to essentially zero. The PDE solution at this point is also the solution for the BVODE. This procedure is implemented in R (an open source scientific programming system) and the programming is discussed in some detail. A series approximation to the solution is derived from which an estimate for the rate of convergence is obtained. This is compared to a fitted exponential model. Also, two linear approximations are derived, one of which leads to a closed form solution. Both provide solutions very close to that obtained from the full nonlinear model. An estimate for the cornea radius of curvature is also derived. The paper concludes with a discussion of the features of the solution to the ODE/PDE system.

@&#INTRODUCTION@&#
Mathematical modeling in biological and medical sciences is currently receiving wide attention. Qualitative and quantitative models can provide a major advantage in the diagnosis and prediction of the outcome of therapies for different diseases and related health issues. In the case of vision, ophthalmologists and optometrists generally consider the cornea as one of the most important components of the eye that is crucial for normal vision [1]. For diagnostic purposes, a detailed knowledge of corneal topography and curvature is essential. To understand these features, a sufficient level of detail is achieved only by accurate measurements and correct mathematical models [2].For corneal topography modeling, models based on various conical sections such as ellipsoids and paraboloids [3] are well established and confirmed as accurate. This approach goes back to Helmholtz [4] who proposed ellipses as descriptions of corneal profiles. Presently, this description along with its many variations is the main basis for the mathematical modeling of corneal topography (for a survey see [5] and references therein; [6] presents some generalizations). Additionally, models and associated numerical simulations of the biomechanical shell that constitutes the cornea are now widely studied (see e.g., [7,8]). These structural models are invaluable for understanding the fine details of many corneal features such as their age-dependent evolution [9] and apex displacement caused by intra-ocular pressure [10]. The greater complexity of biomechanical models provides enhanced insight of the model accuracy and physical interpretations.This paper considers the numerical analysis of an intermediate (in accuracy and complexity) model between the conical sectional and structural mechanical approaches. The starting point for the analysis of corneal curvature is [11] a static force balance (see also its generalization [12])−Td2h/dx2(1+(dh/dx)2)3+kh=P1+(dh/dx)2The variables and parameters of Eq. (1) are given in Table 1.To facilitate computation, it is convenient to rescale all the variables to the non-dimensional form (while retaining the original notation for clarity) and obtain(1)d2h/dx2(1+(dh/dx)2)3/2−ah+b(1+(dh/dx)2)1/2=0witha=R2k/T,b=RP/Tand h, x rescaled by R – typical corneal dimension such as its radius. Eq. (1) is a two-point, nonlinear boundary value ODE (BVODE) with the boundary conditions (BCs)(2a)dh(x=0)dx=0(2b)h(x=1)=0Eq. (2a) reflects the symmetry of the corneal curvature h(x) around x=0. Eq. (2b) indicates that the height h(x) is defined relative to the height at x=1. Eqs. (1) and (2) constitute the BVODE to be integrated numerically as explained next. For more formal and theoretical developments of the considered problem see [13].A variety of methods exists for the solution of BVODEs. For example, the derivatives in Eq. (1) could be replaced by finite differences. The resulting system of nonlinear algebraic equations could be solved with a variant of Newton׳s method. Here we consider an approach that offers significant advantages, that is, conversion of Eq. (1) to a partial differential equation (PDE).This is accomplished by appending a derivative to Eq. (1) in a second independent variable t(3)∂h∂t=∂2h/∂x2(1+(∂h/∂x)2)3/2−ah+b(1+(∂h/∂x)2)1/2The approach then is to integrate Eq. (3) forward in t until∂h/∂t≈0in which case Eq. (3) reduces to Eq. (1). Eq. (3) is a parabolic PDE with the important property that the solution is generally stable and tends to move to the equilibrium solution∂h/∂t≈0. In particular, this is expected when|∂h/∂x|⪯¡1in which case Eq. (3) is a form of the diffusion equation.Eq. (3) requires two BCs and an initial condition (IC) in t. The latter can be selected arbitrarily if the solution forh(x,t→∞)approaches the desired solution of Eq. (1). Here we will use(4a)∂h(x=0,t)∂x=0(4b)h(x=1,t)=0(5)h(x,t=0)=0Eqs. (4) follow from Eqs. (2). Eqs. (3)–(5) constitute the PDE MOL formulation of interest.As an incidental note, t in Eq. (3) is not part of the original BVODE problem, Eqs. (1) and (2). The solution of Eqs. (3)–(5) is termed the method of false transients as it takes its name from the introduction of the pseudo-time variable t. t can also be considered as a continuation parameter that takes (continues) the solution from t=0 to the desired solution of Eq. (1) ash(x,t→∞).The principal advantage of this approach is that we can use well established methods for PDEs, in this case, the method of lines (MOL) considered next.The MOL is based on the replacement of the PDE boundary value (spatial) partial derivatives, e.g.,∂2h/∂x2in Eq. (3), with algebraic approximations. In the present case, the approximations are finite differences (FDs), although other possibilities include finite volumes, finite elements, spectral and least squares approximations. The algebraic replacement of the boundary value derivatives leaves only one independent variable, the initial value variable (time, t) so that a system of approximating ODEs results. This system of initial value ODEs can then be integrated by a library routine.These steps in the MOL solution of Eqs. (3)–(5) are illustrated with the ODE/MOL routines corneal_2.R in Appendix A1 and the main program is Appendix A2. Some features of these two R routines are considered next (for more information see [14]).The ODE/MOL R routine for Eqs. (3) and (4) is listed in Appendix A1. We can note a few particular points about this routine.•A grid in x is defined with nx=21 points in the main program discussed next, which is the basis for 21 ODEs approximating Eq. (3). The dependent variable vector for the 21 ODEs is u (in accordance with the usual convention for PDE numerical analysis, u rather than h is used for the dependent variable of Eq. (3)). Then, corneal_2 computes 21 ODE derivatives in t which are placed in the array ut. To start, BC (4b) is programmed as##BCu[nx]=0;Note the use of index nx corresponding to x=1.The derivative∂h/∂x=∂u/∂xis computed by a call to the differentiation routine dss006.##uxux=dss006(0,xl,nx,u);A vector of 21 values of the derivative, ux, results.BC (4a) is programmed as##BCux[1]=0;Note the use of the index 1 corresponding to x=0.The derivative∂2h/∂x2=∂2u/∂x2is computed by a call to the differentiation routine dss046.##uxxnl=2;nu=1;uxx=dss046(0,xl,nx,u,ux,nl,nu);nl=2 and nu=1 correspond to Neumann and Dirichlet BCs, respectively, that is BCs (4a,b).The MOL approximation of Eq. (3) is programmed as##PDEtr=sqrt(1+1/3∧2);tr3=tr∧3sr=sqrt(1+ux∧2);sr3=sr∧3if(ncase==1)ut=uxx/sr3-a⁎u+b/srif(ncase==2)ut=uxx−a⁎u+b/srif(ncase==3)ut=uxx/tr3-a⁎u+b/tr#ut[nx]=0;ncase=1(set in the main program) uses the full eq. (3)∂h∂t=∂2h/∂x2(1+(∂h/∂x)2)3/2-ah+b(1+(∂h/∂x)2)1/2ncase=2uses eq. (3) modified to∂h∂t=∂2h/∂x2-ah+b(1+(∂h/∂x)2)1/2ncase=3uses eq. (3) modified to∂h∂t=∂2h/∂x2(1+(1/3)2)3/2-ah+b(1+(1/3)2)1/2In this way, the effect of1/(1+(∂h/∂x)2)3/2is investigated. Since BC 4b specifies a constant value (zero), the ODE derivative at x=1 is set to zero, ut[nx]=0.The vector of 21 derivatives in t, utis returned to the calling main program (Listing 2 in Appendix A2) for use by the ODE integrator.##Returnderivativevectorreturn(list(c(ut)));}We can note a few particular points about the main program.•The parameters of Eqs. (1) and (2), or (3)–(5), are defined numerically. These values are used in the calculation of the numerical solutions described subsequently.##ParametersR=1;k=1;P=1;T=1;a=R∧2⁎k/T;b=R⁎P/T;nx=21;xl=1;The grid in x is defined on 21 points for the interval0≤x≤1(nx=21 is set previously as a parameter). Then IC (5) is programmed as a sequence of 21 zero values.##xgrid,initialconditionxg=seq(from=0,to=xl,by=xl/(nx-1));u0=rep(0,nx);This completes the programming of Eqs. (3)–(5).The 21 ODEs are integrated by a call to lsodes.##lsodesODEintegrationparms=c(rtol=1e-8,atol=1e-8)out=lsodes(times=tm,y=u0,func=corneal_2,parms=parms);Note the use of corneal_2. The 21 ODE solutions are returned in out. This solution array is then placed in u for subsequent numerical and graphical (plotted) display.The numerical solution of Eq. (3),u(x,t), and five terms from Eq. (3) are plotted as a 3×2 matrix of plots.##u(x,t)vsxpar(mfrow=c(3,2));#par(mfrow=c(1,1));matplot(x=xg,y=t(u),type=“l”,xlab=“x”,ylab=“u(x,t)”,xlim=c(0,xl),lty=1,main=“u(x,t),t=0,0.2,…,1”,lwd=2)⋮Intermediatecoderemovedtoconservespace⋮##Plot1/(1+ux∧2)∧(3/2)matplot(x=xg,y=term1,type=“l”,xlab=“x”,ylab=“1/(1+ux∧2)∧(3/2)”,xlim=c(0,xl),lty=1,main=“1/(1+ux∧2)∧(3/2);t=0,0.2,…,1”,lwd=2);##Plot uxx/(1+ux∧2)∧(3/2)matplot(x=xg,y=term2,type=“l”,xlab=“x”,ylab=“uxx/(1+ux∧2)∧(3/2)”,xlim=c(0,xl),lty=1,main=“uxx/(1+ux∧2)∧(3/2);t=0,0.2,…,1”,lwd=2);##Plot-a⁎umatplot(x=xg,y=term3,type=“l”,xlab=“x”,ylab=“-a⁎u”,xlim=c(0,xl),lty=1,main=“-a⁎u;t=0,0.2,…,1”,lwd=2);##Plotb/(1+ux∧2)∧(1/2)matplot(x=xg,y=term4,type=“l”,xlab=“x”,ylab=“b/(1+ux∧2)∧(1/2)”,xlim=c(0,xl),lty=1,main=“b/(1+ux∧2)∧(1/2);t=0,0.2,…,1”,lwd=2);##Plotutmatplot(x=xg,y=term5,type=“l”,xlab=“x”,ylab=“ut”,xlim=c(0,xl),lty=1,main=“ut;t=0,0.2,…,1“,lwd=2);The solutionu(x,t)=uis plotted first (using the transpose t(u) so that the row dimension of u is the same as the length of x=xg). The five terms term1,…,term5 plotted against xg are identified by the comments for each plot. Note in particular the vector of derivatives in t,∂u/∂t=ut=term5 computed as the sum of the RHS terms of Eq. (3).This description of the MOL solution of Eqs. (3)–(5) is abbreviated to conserve space. A more complete description is given in [15], Chapter 8. A discussion of the method applied to 2D problems is given in [16], Chapter 10.The composite 3×2 plot is in Fig. 1.We can note the following particular details of Fig. 1.•All six plots start at t=0 with a constant value from the IC u0[i]=0 discussed previously (note the horizontal line in each plot).The curves in all six plots appear to be approaching a final steady state through the six successive valuest=0,0.2,…,1. In particular, the(1,1)plot (top left corner),u(x=0,t=1)≈0.35. This is confirmed with the following numerical output from Listing 2 with u(0,t)=0.35188 for t=1 (Table 2). Also, u(xl,t)=0.00000 in accordance with BC (4b). The number of calls to corneal_2, 131, is quite modest indicating lsodes efficiently integrated the 21 ODEs.As the solution approaches a steady state,∂u/∂t≈0in the(3,2)plot (lower right corner) as expected.The contributions of the three RHS terms of Eq. (3) are clear in the(2,1),(2,2),(3,1)plots. In this way, the properties of a PDE solution can be explained in detail.The approach to a steady state is further confirmed in Table 3for0≤t≤5(by changing tf=1 to tf=5 in the main program of Listing 2). u(0,t)=0.37046 for t=4 and u(0,t)=0.37047 for t=5 infers convergence of the solution to five significant figures.The complete solution is presented in Fig. 2as a surface plot that illustrates how the solution evolves in space and pseudo-time. It is clear that the solution quickly and smoothly approaches a steady state. It is particularly interesting to observe how the solution at x=0 evolves, as this location is subject to the Neumann boundary condition∂h(x=0,t)/∂x=0. The method of lines handles this constraint with ease, as demonstrated in Fig. 3.A simple analytical demonstration of the method of false transients follows from a linearization of the nonlinear equation (1). According to the Gullstrand eye model, the typical cornea has the radii of curvature ρ equal to 7.7mm for anterior and 6.8mm for posterior surfaces respectively [17]. Moreover, since the typical diameter d of the cornea is equal to 11.5mm, by the formula for circular segmenth=ρ−ρ2−d24,we can calculate that the height of the cornea is approximately equal to 2.5mm for an ordinary cornea. Using that value we have|dh/dx|≈2.5/5.75≈0.43and thus(6)1(1+(∂h/∂x)2)1/2≈0.92,1(1+(∂h/∂x)2)3/2≈0.78.These quantities are only roughly close to 1, but in the first approximation it is reasonable to neglect the derivative∂h/∂xand obtain the approximation of Eq. (1)(7)−d2hdx2+ah=band its PDE generalization (3)(8)∂h∂t=∂2h∂x2−ah+balong with initial-boundary conditions (4) and (5). Due to the linearity of Eq. (8), a solution follows easily by the separation of variables. To this end, we note that ast→∞the solution of Eq. (8) should approach the steady-state that satisfies Eq. (7), that is(9)hp(x)=ba(1−cosh(ax)cosha)It is thus reasonable to look for a solution of Eq. (8) in the form of(10)h(x,t)=u(x,t)+hp(x)whereu(x,t)is the homogeneous solution and hp(x) is a particular solution. Substituting Eq. (10) into Eq. (8) we find that u is a solution of the following homogeneous equation(11)∂u∂t=∂2u∂x2−auwith boundary conditions (4) and initial condition(12)u(x,t=0)=−hp(x)By assuming the separated solutionu(x,t)=X(x)T(t)we obtain two ordinary differential equations(13)T′=−(a+λ)T,X″=−λX,λ>0where primes denote differentiation with respect to the corresponding ODE independent variables and λ is a separation constant chosen positive in anticipation of the decaying transient. We of course have to haveX′(0)=X(1)=0, which along with Eq. (13) gives us a solution as a constant multiple ofcosλx, whereλ=(π/2+kπ)2. By solving also for T and using the linearity of Eq. (11) we arrive at(14)u(x,t)=∑k=0∞Akcos((π2+kπ)x)e−(a+(π/2+kπ)2)twhere Akis calculated from the initial condition(15)Ak=−2∫01hp(x)cos((π2+kπ)x)dx=(−1)k+116bπ(1+2k)(4a+(1+2k)2π2)This finally gives us the solution of Eq. (8) with Eqs. (4) and (12)(16)u(x,t)=16bπ∑k=0∞(−1)k+1cos((π2+kπ)x)e−(a+(π/2+kπ)2)t(1+2k)(4a+(1+2k)2π2)Notice that as a characteristic feature of parabolic equations an exponential decay in t is present in each term in Eq. (16), which is essential in the false transient method. This means that fort>0all terms apart from the first vanish rapidly leaving(17)u(x,t)≈−16bπcos(π2x)e−(a+π2/4)t4a+π2which immediately gives the transient time scale1/(a+π2/4). We see that increasing parameter a increases the rate of decay of the solution. This shows a major advantage of the false transient method: exponential decay forces the solution of parabolic problem (3)–(5) to quickly reach the steady-state (equilibrium solution).A check on the rate of decay can be made by fitting an exponential model to the evolution of h. As an example, let us focus on the case ofa=b=1. Using the built-in function nls()in R, the following exponential model was fitted toh(x=0,t),(18)h^0(t)=A0(1−exp(−Bt)),A0=h(x=0,t=5),B=3.039which has a maximum absolute error of 0.003. The value of B compares well with the corresponding value from Eq. (17), i.e.(a+π2/4)=3.47. This idea can be extended over the full range ofh(x,t)and Fig. 4showsh(xi,t)overlaid with values from the exponential modelh^i(t), whereAi=h(x=xi,t=5)andxi∈(0,0.25,0.5,0.75). The approximate exponential model fits the MOL solution very well for all values of xi, even using the same value for B throughout. The differences forxi∈(0.5,0.75)can be attributed to the fast decay of the higher order terms of Eq. (16), as mentioned above.The comparison in Fig. 5of the solutions computed by the R routines in Appendices A and B with variabledh/dxand|dh/dx|=1/3fora=b=1(case 3) demonstrates the validity of our choice of the approximation,|dh/dx|≈1/3(when eq. (3) has the analytical solution ha(x, t =∞) = 0.9487 − 0.5767 cosh(1.0822x)). The argument for approximating nonlinearities in Eq. (1) can be made somewhat general. In that equation we can replacedh/dxby the average value of the derivative of the approximation hp(9), which is(19)dhdx≈∫01dhp(x)dxdx=hp(1)−hp(0)=−ba(1−1cosha)By taking the particular values ofa=b=1this approach gives|dh/dx|≈0.35(close to 1/3). Substituting (19) into (1) linearizes the problem giving an accurate “averaged” approximation(20)ha(x)=bac(1−coshac3xcoshac3)wherec=1+b2a2(1−1cosha)2Inserting the above values for a and b into Eq. (20) gives the following compact hyperbolic form11This closed form model is similar to that of an inverted catenery.for an approximation to h(x), based on the accurate averaged value for|dh/dx|(21)ha(x)=0.9433−0.5692cosh(1.0915x)Fig. 5 includes a plot of this approximation which is very close to the solution of the full nonlinear model of Eq. (3), with a maximum absolute error of 0.006.The closed form solution of Eq. (21) also provides a simple way of estimating the radius of curvature, ρ. Fromρ=|(1+h′2)3/2h″|we obtain the following estimate for the cornea radius of curvature(22)ρ(x)=coshac3bc2(1+b2cacosh2ac3sinh2(ac3x))3/2In particular, we get a useful estimate for the central radius(23)ρ(0)=coshac3bc2Using the values ofa=b=1we obtain(24)ρ(x)=1.475(1+0.386sinh2(1.092x))3/2cosh(1.0915x)givingρ(0)=1.475in non-dimensional units. This compares well with the value of(25)ρ(0)=|1ah(0)−b|=1.59obtained from the full non-linear model of Eq. (1) and BC (2a). Ophthalmologists measure the curvature of cornea in almost every eye examination and can diagnose some corneal problems (like astigmatism) from it. Having an accurate approximation to this radius is very valuable to assist in a diagnosis.

@&#CONCLUSIONS@&#
