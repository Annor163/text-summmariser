@&#MAIN-TITLE@&#
Automatic shape adaptation for parametric solid models

@&#HIGHLIGHTS@&#
Automatic shape adaptation is achieved based on corresponding faces and dimensions.A new method of determining corresponding faces is put forward.An algorithm to identify corresponding dimensions by constraint graph is proposed.

@&#KEYPHRASES@&#
Automatic shape adaptation,Shape frame,Corresponding face,Dimension promotion,

@&#ABSTRACT@&#
Adaptation, as is well known, plays a fundamental role in Case-Based Design. However, after decades of efforts, automatic adaptation approach is still rare. In common design works, the first thing one will usually do is choosing a start-up model (a candidate model) of moderate complexity based on a simple query model possessing primary design constraints. To enable the candidate model to smartly adapt its shape to that of the query model according to the embedded constraints, a novel automatic shape adaptation approach is proposed in this paper. First, to determine the corresponding faces between two non-preregistered models as relevant elements, a shape frame concept and its quantitative descriptor are defined. Second, to unify the representation of seemingly different but inherently consistent dimensions, a promotion method is adopted. Third, based on the corresponding faces and the promoted dimension representation, the corresponding dimensions between the two parametric solid models are identified. Finally, the parametric information is smoothly transferred from the query model to the candidate model as design constraints, and the shape of the candidate model is automatically adapted to the query model. Besides that, a prototype system is also implemented to verify the effectiveness of the automatic shape adaptation approach.

@&#INTRODUCTION@&#
It is well known that designers use their experience of design along with combinations and/or adaptations of previous cases or parts of cases in creating a new design  [1]. Watson et al.  [2] term this as Case-Based Design (CBD). Along with the computer-aided design (CAD) systems joining modern industries, a vast number of design cases are generated and stored in the internet or enterprise repositories. These cases always contain plenty of embedded knowledge worthy of utilization. Subsequently, CBD has got more and more attention in the past few decades  [2], while the advancement of CBD approaches makes it easier and faster to produce impressive and innovative designs in a widespread field  [3,4].CBD mainly consists of two processes: retrieving a suitable case and adapting it to satisfy new design requirements  [2,4–6]. Modern retrieval technologies  [7–23], capable of automatically searching out the cases similar to a user input query from a huge case library, are extensively used and well studied. On the other hand, adaptation is essential for CBD since no two design problems are ever identical. According to the researches mentioned in  [11,24], only a small part of products requires completely new designs, while more parts of them are obtained through an adaptation of the existing cases. However, manual adaptation process is usually tedious in some design tasks, especially during routine design. To free the designers from these unnecessary burdens and improve the efficiency of CBD, it is very important and necessary making the case adaptation automatic.Unfortunately, although the importance of automatic case adaptation in CBD is obvious, the automatic adaptation approach is rare  [2,3,5,25–30]. While some good works referred in  [3,4,31,32] show that case adaptation falls broadly into two categories: adaptation in conceptual design, and adaptation in shape (geometric) design. Despite of focusing on different design categories, two major common challenges have to be overcome in order to achieve automatic adaptation:(a)How to automatically identify which design elements in the retrieved case are relevant to new design requirements.How to automatically transfer the new design requirements to the retrieved case via their relevant design elements.It should be pointed out that, up to now, these two challenges are still the obstacles of achieving automatic case adaptation  [3]. On one hand, the automatic case adaptation for concepts, ranging from engineering to architecture to software design, shows much more feasible and prospective when the prerequisite of knowledge around domain area can be captured sufficiently and represented properly  [3,4]. However, satisfying the above prerequisite is domain dependent and is not a trivial work  [33,34]. On the other hand, the automatic case adaptation for geomantic shapes seems much more difficult without the aid of semantic information support (and/or domain specification), such as (a) the works of shape deformation  [35–38] (establishing a meaningful correspondence between two shapes is often difficult and semantically dependent  [39]), and (b) the works of shape optimization  [6,40–44] (domain specifications are required, such as materials, and pressures). So, when the semantic information support or domain specification is absent, shape adaptation is often carried out by humans instead of using the existing works  [3].Although a general automatic shape adaptation (geometric adaptation) is difficult and the related works are rare, it plays an important role in modern product design, such as the designs related to product shape optimization and structure optimization  [42,44–47]. Modern product design usually contains distinct design phases, such as preliminary design, conceptual design, geometric modeling, and so on. Furthermore, product design is an iterative design process among the distinct design phases, and the specifications of the required function of a product get more refined only as the design process moves toward its goal  [4,34]. Accordingly, the geometric shape of a product usually needs modification at each iterative step since the function of a product is often represented by its geometric shape (especially in mechanical engineering). Thus, in order to reduce the burden of manual geometric modification at each iterative step, automatic shape adaptation is necessary and very important.In this paper, we propose an automatic shape adaptation approach to enable one parametric solid model to smartly adapt its shape to that of the other one according to the embedded constraints. Because the embedded constraints in each parametric solid model are usually adopted by designers to represent their new design requirements (intent), transferring shape according to the embedded constraints is actually transferring design intent [48,49]. As we know, with the aid of embedded constrains, each parametric solid model can update its shape elements (faces, edges, and vertices) in a predicted manner after any dimension constraint modification. Apparently, an effective and direct method to transfer shape between two parametric solid models is to establish relationships between their embedded dimension constraints. However, without semantic information support, it is a difficult issue to establish relationships between two models’ embedded dimension constraints automatically since the parametric way for a parametric solid model can be very flexible (different parametric ways lead to different constraint configurations).Our approach is presented with a view to overcome the above mentioned issue in feature-based parametric design. The inputs of the approach are two parametric solid models without having been pre-registered: a query model and a candidate model. The query model, indicating the gross new shape design requirements through its roughly B-rep shape and its dimension constraints, is a simple parametric solid model. The candidate model is a parametric solid model searched from a parametric solid model library according to the query model, whose overall shape is similar to that of the query model but having more details. According to the two challenges for automatic shape adaptation (i.e. how to automatically identify which design elements are corresponding (relevant) between the two given models’ shapes, and how to automatically transfer the shape of the query model to the candidate model via their corresponding (relevant) design elements), our solution consists of the following parts: (1) we select face as the shape relevant design element, and in spite of the absence of semantic support, a novel method is presented to determine the corresponding shape frames and corresponding faces between the two models automatically; (2) we adopt a promotion method that makes face as the intermediate element that relates each embedded dimension to its model’s shape; (3) based on 3D dimension constraint graphs and corresponding faces, we identify all corresponding dimensions and corresponding dimension chains between the corresponding shape frames effectively; (4) we establish the dimension relationships among the corresponding dimensions and corresponding dimension chains to make the candidate model adapt its shape to that of the query model.The rest of the paper is organized as follows. In Section  2, we give a brief review of the related works. In Section  3, some concepts and an overview of our approach is provided. Section  4 gives a detailed process of determining corresponding faces and corresponding shape frames. In Section  5, a dimension promotion method is adopted to identify corresponding dimensions and corresponding dimension chains between the two given models based on the result of Section  4. Afterward, the dimension relationship between the two given models is established. Section  6 introduces the implementation details of the prototype system and shows some experiments and their efficiencies. Finally, we discuss our approach in Section  7, and present the conclusion of the paper and our further works in Section  8.

@&#CONCLUSIONS@&#
