@&#MAIN-TITLE@&#
Approximate queueing models for capacitated multi-stage inventory systems under base-stock control

@&#HIGHLIGHTS@&#
A queueing analysis is presented for capacitated multi-stage inventory systems.The exact model is modified by replacing state-dependent probabilities by constants.Two recursive algorithms are developed to analyze the steady-state behavior.The systems studied are more general than the ones studied so far in the literature.Proposed and existing algorithms are compared analytically and numerically.

@&#KEYPHRASES@&#
Inventory,Queueing,Manufacturing,

@&#ABSTRACT@&#
A queueing analysis is presented for base-stock controlled multi-stage production-inventory systems with capacity constraints. The exact queueing model is approximated by replacing some state-dependent conditional probabilities (that are used to express the transition rates) by constants. Two recursive algorithms (each with several variants) are developed for analysis of the steady-state performance. It is analytically shown that one of these algorithms is equivalent to the existing approximations given in the literature. The system studied here is more general than the systems studied in the literature. The numerical investigation for three-stage systems shows that the proposed approximations work well to estimate the relevant performance measures.

@&#INTRODUCTION@&#
In this paper, we analyze multi-stage production-inventory models with a base-stock controlled stock point at each stage. Such models arise within the context of pull-type make-to-stock manufacturing systems. Specifically, we consider a single item type and a serial system with a fixed sequence of manufacturing facilities. The corresponding queueing model is one of the basic building blocks to be investigated for the analysis of multi-item generalizations with various process sequences.Contribution of the paper is summarized below.•The approximation introduced by Avṣar and Zijm (2003, Chapter 1) for the steady-state performance analysis of two-stage systems is extended in this study to multi-stage systems.We introduce the proposed approximation approach for the case of modeling the manufacturing facilities as single exponential servers. In this case, a single server is considered at each stage. The generalization of our results for replacing single exponential servers with open Jackson networks follows based on the analytical investigation of Avṣar and Zijm (2003, Chapter 1) for the same generalization in two-stage systems. This generalization is skipped here for the sake of brevity; the reader is referred to the technical report due to Avṣar and Zijm (2009).The aforementioned extension is improved by proposing alternative approximations.The approximation we consider gives a product-form marginal steady-state distribution for the subsystem consisting of the first two stages. Using this distribution, we come up with a product-form marginal distribution of the subsystem consisting of the second and third stages. Proceeding recursively, a product-form marginal distribution is obtained for every subsystem consisting of two successive stages. We devise two recursive algorithms in this article for two alternative approximate derivations of the steady-state probability distributions.The proposed approximations are analytically and numerically compared with the approximations in the literature for exactly the same setting as ours when the manufacturing facilities are modeled as single exponential servers.The studies directly related to our work are due to Buzacott, Price, and Shantikumar (1992), Svoronos and Zipkin (1991), Lee and Zipkin (1992, 1995), Duri, Frein, and Di Mascolo (2000) and Gupta and Selvaraju (2006). (A comparative review of these studies is presented in Section 3. The studies of Ettl, Feigin, Lin, & Yao (2000) and Liu, Liu, & Yao (2004) are also among the related literature to be cited here.) These studies are restricted to the case of a single exponential server at each stage whereas our approach lends itself to the generalization of modeling the manufacturing facilities as open Jackson networks.We analytically prove that one of the algorithms we propose is equivalent to the existing approximations given by Lee and Zipkin (1992), Buzacott et al. (1992) and Gupta and Selvaraju (2006). Each equivalence relation is for one of three different uses of this algorithm. The other algorithm we give cannot be directly compared with the existing approximations.Our investigation for equivalence of the approximation we propose and that of Lee and Zipkin (1992) implies the aforementioned other equivalence relations due to similar investigations in the related literature. The study of Duri et al. (2000) leads to equivalence of the approximations proposed by Lee and Zipkin (1992) and Buzacott et al. (1992). Also, Gupta and Selvaraju (2006) mainly work with the approximations of Buzacott et al. (1992) for extensions and possible improvements.Importance of the equivalence relation proved in this study results from (i) using less restrictive assumptions for our approach as compared to that of Lee and Zipkin (1992) and (ii) obtaining product-form steady-state distributions with our approach unlike the matrix-based solution due to Lee and Zipkin (1992). (ii) allows us to consider extensions for more complex systems with open Jackson networks having product-form steady-state distributions when the arrivals are Poisson.This study focuses on the analytical investigation outlined above. The numerical experiments to compare the alternative approximations considered in this article are limited to three-stage systems.Another advantage of the approximation approach we use here is its potential to study not only sequential systems but also the following system configurations: two-indenture repairable item systems, base-stock and kanban controlled assembly systems and closed loop two-echelon repairable item systems (see Zijm & Avṣar, 2003; Avṣar, Zijm, & Rodoplu, 2009; Topan & Avṣar, 2011; Spanjers, van Ommeren, & Zijm, 2005).This paper is organized as follows. In Section 2.1, the queueing model is introduced for the case of single exponential servers at each stage. The approximation and the proposed algorithms are presented in Section 2.2. Section 3 is devoted to the analytical and numerical comparison of the approximate distributions proposed in this paper and the existing ones in the literature. In Section 4, we point out future research directions. The extensions, details and some of the proofs that are skipped in this article for the sake of brevity are given in the technical report due to Avṣar and Zijm (2009).In this section, a serial queueing model is given for multi-stage production-inventory systems with one manufacturing facility at each stage. The manufacturing facilities are modeled as single exponential servers. There is a base-stock controlled stock point at each stage. This relatively simple setting allows us to introduce the approximation rather easily. The generalization for the case where each stage is a job shop modeled as a product-form network (open Jackson network) is given by Avṣar and Zijm (2009).See Fig. 1below for the three-stage system with single server facilities. Demands for the finished items stocked at the last stage, stage J, arrive according to a Poisson process with rateλ. A request for an item at any stage triggers the generation of a request for the partially processed item stocked at the preceding stage (in this way demand propagates upstream through the system). Requests that cannot be satisfied immediately are backordered. A synchronization station preceding each stage represents the merge of the request and the demanded item in stock whenever there is at least one of both. For stage j such thatj∈1,…,J-1, the synchronization is to feed the succeeding stages and for stage J it is to directly satisfy the customer demand. Stock control policies employed are of base-stock type with base-stock levelSjfor stagej=1,…,Jand there areSjunits in stock initially. The facilities are operated under the first-come-first-served discipline and there is no limit on the size of the queues. Typically, managers are interested in expected lead times, work-in-process inventories and customer fill rates, as a function of base stock levels and production capacities (processing rates).Define random variablesNjandN‾jas the number of items to be served or being served at stage j with exponential service rateμjand the number of items in stock at stage j, respectively. Random variableKjdenotes the number of backordered requests at stage j. ForNj=nj,N‾j=n¯j,Kj=kj, the following inventory balance equations hold due to the base-stock inventory control policies under which the system is operated:n1+n¯1-k1=S1, and(nj+kj-1)+n¯j-kj=Sjforj=2,…,J. Synchronization at stage j implies the following relation:n¯j·kj=0forj=1,…,J. It is assumed thatρj=λ/μj<1forj=1,…,J.Since the two-stage system is a special case,J=2, of the extension considered in this article for multi-stage systems, we start this section with a review of the model due to Avṣar and Zijm (2003, Chapter 1) for two-stage systems. This model is extended for three-stage systems and, then, the extension is generalized for multi-stage systems.Based on the inventory balance equations and the properties of the synchronization at each stage, it is easy to show that a full state description for the system under consideration is given by(n1,…,nJ). ForJ=2with state description(n1,n2), the transition diagram of the queueing model is given in Fig. 2below. The solution of the balance equations for the transitions in Fig. 2 would give the steady-state probability distribution for(n1,n2), i.e.,P(N1=n1,N2=n2). Unfortunately, this solution is not easy to characterize analytically; therefore, the following aggregation of the state space is considered. All(n1,n2)pairs withn1⩽S1are aggregated into(k1,n2)=(0,n2)while each(n1,n2)pair withn1=S1+k1fork1>0corresponds to(k1,n2). This aggregation is called a partial aggregation because only a part of the states withn1⩽S1are aggregated. Then,P∼(K1=k1,N2=n2)=∑n1⩽S1P(N1=n1,N2=n2)fork1=0,P(N1=S1+k1,N2=n2)fork1>0,which is implied by the inventory balance equation for stage 1. By∑n⩽SP(N=n), we indicate the summation ofP(N=n)over all n such thatn⩽S. Aggregation of the model in Fig. 2 leads to the transition diagram in Fig. 3forj=1. Here, some transition rates are expressed in terms of conditional probabilitiesq1(n2)andr1(k1,n2)defined fork1=0andk1>0, respectively. For the formulations and definitions of these conditional probabilities, see Definition 1 and Remark 1 by settingj=1.In order to extend the two-stage model above, we first consider the three-stage system with state description(n1,n2,n3). A partial aggregation similar to the one outlined in the previous paragraph would give the model with state description(k1,n2,n3). The corresponding transition rates would then be expressed in terms of conditional probabilitiesq1(n2,n3)andr1(k1,n2,n3). A similar further aggregation to obtain a model with state description(k2,n3)and conditional probabilitiesq2(n3)andr2(k2,n3)would be as follows:P∼(K2=k2,N3=n3)=∑k1+n2⩽S2P∼(K1=k1,N2=n2,N3=n3)fork2=0,∑k1+n2=S2+k2P∼(K1=k1,N2=n2,N3=n3)fork2>0.Also, the partial state description(n1,n2)can be considered for the three-stage system. Note that the corresponding marginal steady-state probability distribution is given asP(N1=n1,N2=n2)=∑n3P(N1=n1,N2=n2,N3=n3). Then, the aggregation as in the two-stage system would give the model with state description(k1,n2).To summarize, we have two aggregate models for three-stage system with state descriptions(k1,n2)and(k2,n3). Approximate analysis of the two-stage system gives an approximate steady-state distribution for(k1,n2). Using this distribution, we propose an approximate distribution for(k2,n3)in Section 2.2. Note thatk2is determined byk1andn2for a givenS2; recall the inventory balance equation for stage 2.In general, we consider a multi-stage system withJ>2. For stages j andj+1, the aggregate model with state description(kj,nj+1),j=2,…,J-1, is obtained aggregating the model with (partial) state description(kj-1,nj,nj+1). That is,P∼(Kj=kj,Nj+1=nj+1)=∑kj-1+nj⩽SjP∼(Kj-1=kj-1,Nj=nj,Nj+1=nj+1)forkj=0,∑kj-1+nj=Sj+kjP∼(Kj-1=kj-1,Nj=nj,Nj+1=nj+1)forkj>0.As a result of this aggregation, conditional probabilitiesqj(nj+1)andrj(kj,nj+1)appear in the transition diagram of the aggregate model with state description(kj,nj+1)(see Fig. 3). The service completion rate at stage j is expressed in terms ofrj(kj,nj+1)in all states(kj,nj+1)withkj>0. The arrival rates in state(kj,nj+1)withkj=0are adjusted usingqj(nj+1). See Definition 1 for the formulations ofqjandrjand see Remark 1(a) for the use or meaning of these conditional probabilities. Throughout the paper, P is used to denote the steady-state probabilities of the models described bynjvalues only; similarly,P∼is used for the models with state descriptions including the number of backorders, i.e.,kjvalues.Definition 1Consider the model with state description(kj,nj+1).Forkj=0and anynj+1,qj(nj+1)=P(N1=S1,N2=n2)∑n1⩽S1P(N1=n1,N2=n2)forj=1,∑kj-1+nj=SjP∼(Kj-1=kj-1,Nj=nj,Nj+1=nj+1)∑kj-1+nj⩽SjP∼(Kj-1=kj-1,Nj=nj,Nj+1=nj+1)forj=2,…,J-1.Forkj>0and anynj+1,rj(kj,nj+1)=P∼(Kj-1=Sj+kj,Nj=0,Nj+1=nj+1)∑kj-1+nj=Sj+kjP∼(Kj-1=kj-1,Nj=nj,Nj+1=nj+1)forj=2,…,J-1,0forj=1.(a)qj(nj+1)is defined for the states(kj,nj+1)withkj=0. It is the probability that there is no available item in stock at stage j given that the backorder queue at stage j is empty. In state(kj,nj+1)withkj=0, a request arriving at stage j is the first one in the backorder queue with probabilityqj(nj+1).rj(kj,nj+1)is defined for the states(kj,nj+1)withkj>0. It is the probability that there is no item to be processed at stage j given that there are backordered requests at stage j. In state(kj,nj+1)withkj>0, there will not be a service completion with probabilityrj(kj,nj+1).(b) Sincer1(k1,n2)is defined fork1>0,N1corresponding to state(k1,n2)is equal toS1+k1which is positive. In other words, wheneverk1is positive there areS1+k1items at server 1, one being served and the rest waiting in queue to be processed. By definition, r1(k1,n2)=P(N1=0 ∣ K1=k1,N2=n2)=P(N1=0 ∣ N1=S1+k1,N2=n2)=0 fork1>0.Next, balance equations of the model with state description(kj,nj+1)are given by Lemma 1, its proof is skipped for the sake of brevity. Proof forj=1shows how the model in Fig. 3 for(k1,n2)is obtained from the model in Fig. 2 for(n1,n2). Similarly, proof forj∈{2,…,J-1}shows how the model with state description(kj,nj+1)in Fig. 3 is obtained from the model with state description(kj-1,nj,nj+1). For the notation with P andP∼, capital letters in parentheses denoting random variables are sometimes suppressed in the article.I{a}is the indicator function that takes a value of 1 when event a occurs and 0 otherwise.Lemma 1Balance equations of the model with state description(kj,nj+1),j=1,…,J-1, are(1)(λ+μj+1I{nj+1>0})P∼(0,nj+1)=λ(1-qj(nj+1-1))P∼(0,nj+1-1)I{nj+1>0}+μj(1-rj(1,nj+1-1))P∼(1,nj+1-1)I{nj+1>0}+μj+1P∼(0,nj+1+1)forkj=0,(2)(λ+μj+1I{nj+1>0}+μj(1-rj(1,nj+1)))P∼(1,nj+1)=λqj(nj+1)P∼(0,nj+1)+μj(1-rj(2,nj+1-1))P∼(2,nj+1-1)I{nj+1>0}+μj+1P∼(1,nj+1+1)forkj=1,(3)(λ+μj+1I{nj+1>0}+μj(1-rj(kj,nj+1)))P∼(kj,nj+1)=λP∼(kj-1,nj+1)+μj(1-rj(kj+1,nj+1-1))P∼(kj+1,nj+1-1)I{nj+1>0}+μj+1P∼(kj,nj+1+1)forkj>1.To conclude this section with an outline of the extension for multi-stage systems, consider the partial state description(kj,nj+1)for everyj=1,…,J-1and the corresponding marginal probability distribution. Then, the approximation for two-stage system can be used in an iterative or recursive manner for every two successive stages starting from the upstream two stages as explained in detail in the following section.The model presented in Section 2.1 is exact but not tractable; therefore, we proceed with the following approximation. We assume that the state-dependent probabilitiesqj(nj+1)are constant:qj(nj+1)=qjfor allnj+1and j. Based on this approximation, we present two algorithms, Algorithms 1 and 2, in this section to calculate the steady-state distributions of(Kj,Nj+1)recursively forj=1,…,J-1. Using three different (approximate) marginal distributions of the random variableNjin each of Algorithms 1 and 2, we come up with six approximations. Three of the proposed approximations are observed to be equivalent to the approximations in the literature, and the remaining three cannot be directly compared with the existing approximations. A detailed analytical comparison of the proposed and existing approximations is in Section 3.1.In the proposed approximate model, the marginal distribution for(kj,nj+1)is of product-form (see Proposition 1 below). This observation allows us to consider extensions for systems with manufacturing facilities that are modeled as open Jackson networks. Open Jackson networks consist of a number of exponential nodes, it is allowed to have parallel exponential servers at a node and probabilistic routing for sending items in process from one node of the network to another. For Poisson arrivals, these networks themselves also have product-form steady-state distributions. For the aforementioned extension, our conjecture is that Proposition 1 in Section 2.2.1 can be generalized similar to the generalization due to Avṣar and Zijm (2003, Chapter 1) for two-echelon systems with open Jackson networks. Based on the insight that is gained by the detailed analytical investigation in the cited study, Avṣar and Zijm (2009) give revised versions of Algorithms 1 and 2 for open Jackson networks. (Theorem 2 given by Avṣar and Zijm, 2003, Chapter 1, is invoked in the proposed recursive algorithms to study every subsystem with two successive stages of the multi-stage system.) For the sake of brevity, the extension for open Jackson networks and the corresponding revisions of the proposed algorithms are not given here but only the analysis for single exponential servers is presented.As proposed by Avṣar and Zijm (2003, Chapter 1), the aggregated two-staged model forJ=2is modified or approximated replacingq1(n2)withq1for alln2. Then, the solution to the balance equations of the approximate model with state description(k1,n2)turns out to be product-form. For multi-stage systems withJ>2, the aforementioned approximation is iteratively or recursively used in this paper forJ-1subsystems, each with two successive stages. Consider the model with state description(kj,nj+1)and work withqj=∑kj-1+nj=SjP∼(Kj-1=kj-1,Nj=nj)∑kj-1+nj⩽SjP∼(Kj-1=kj-1,Nj=nj)=∑nj+1=0∞qj(nj+1)P∼(Nj+1=nj+1|Kj-1+Nj⩽Sj)instead ofqj(nj+1)for allj=1,…,J-1. Then, the product-form distributions given in Proposition 1 below are obtained as the approximate marginal steady-state probability distributions. Avṣar and Zijm (2009) give the proof of an extended version of Proposition 1.Pj(nj)=(1-ρj)ρjnjused in the expressions in Proposition 1 is the steady-state probability for M/M/1 queue withρj=(λ/μj)<1. Note thatP1is the exact marginal probability distribution of random variableN1but it cannot be claimed thatPjis the marginal probability distribution of random variableNjforj=2,…,Jin the original exact model.Proposition 1Letqz(nz+1)=qzforz=1,…,j. Then, for the modified aggregate model with state description(kj,nj+1),j=1,…,J-1, the balance Eqs.(1)–(3)are satisfied byPˇ(Kj=kj,Nj+1=nj+1)=Pˇ(Kj=kj)Pj+1(nj+1)forj=1,…,J-1,wherePˇ(K1=k1)=A1/q1fork1=0,A1ρ1k1fork1>0,andA1=(1-ρ1)q11-(1-q1)ρ1andPj(nj)=(1-ρj)ρjnjandPˇ(Kj=kj)=∑kj-1+nj⩽SjPˇ(Kj-1=kj-1,Nj=nj)forkj=0,∑kj-1+nj=Sj+kjPˇ(Kj-1=kj-1,Nj=nj)forkj>0,forj=2,…,J.The approximation is only due to constantqjterms, but does not require any approximation of therjvalues. This is not surprising; the same is true for classical tandem queueing systems (i.e., systems withSj=0for all j). Note thatrj(kj,nj+1)in (1)–(3) is defined forkj>0, which means that arrivals for serverj+1occur only if there is a departure from server j with rateμj(1-rj(kj,nj+1)). In other words, we observe tandem queue behavior (independence ofKjandNj+1) for the successive stages j andj+1as long askj>0. This is proved formally by Avṣar and Zijm (2009).The observations in Proposition 1 outline one of the approximation schemes proposed in this article. Proceeding iteratively, we obtainPˇ(kJ-1,nJ)based on the use of “constantqj”,j=1,…,J-1, assumptions. As it will be seen in Section 3.2,Pˇ(kJ-1,nJ)and hencePˇ(kJ)are used to compute the approximate performance measures of the system at stage J, which is our primary concern to evaluate the system performance in satisfying independent demand. The following is an algorithmic presentation of the approximation scheme forJ⩾2.Algorithm 1Step 0.Specifyq1=P(N1=S1)P(N1⩽S1). Setρj=λμjandPj(nj)=(1-ρj)ρjnjforj=2,…,J. SetA1=(1-ρ1)q11-(1-q1)ρ1andj=1.LetPˇ(K1=k1,N2=n2)=Pˇ(K1=k1)P2(n2) wherePˇ(K1=k1)=A1/q1fork1=0,A1ρ1k1fork1>0.Ifj=J-1, then stop.Otherwise, letj=j+1and go to step 2.LetPˇ(Kj=kj,Nj+1=nj+1)=Pˇ(Kj=kj)Pj+1(nj+1) wherePˇ(Kj=kj)=∑kj-1+nj⩽SjPˇ(Kj-1=kj-1,Nj=nj)forkj=0,∑kj-1+nj=Sj+kjPˇ(Kj-1=kj-1,Nj=nj)forkj>0,forj=2,…,J.Go to step 1.Corollary 1 below is for the natural choice ofq1in Proposition 1 and Algorithm 1; that is,q1=P1(S1)∑n1⩽S1P1(n1)whereP(N1=n1)=P1(n1)is the exact marginal distribution of random variableN1. In this case, the approximate marginal steady-state distribution of random variableK1takes the form given by Corollary 1. Note that theq1value in this corollary is considered by Avṣar and Zijm (2003, Chapter 1) for two-echelon systems.Corollary 1InAlgorithm 1, letq1=P1(S1)∑n1⩽S1P1(n1)=(1-ρ1)ρ1S11-ρ1S1+1. Then,A1=1-ρ1ρ1S1andPˇ(K1=k1)=∑n1⩽S1P1(n1)fork1=0,P1(S1+k1)fork1>0.Notethatq1=P(N1=S1)∑n1⩽S1P(N1=n1)=∑n2=0∞q1(n2)P(N2=n2|N1⩽S1)=E(q1(N2)|N1⩽S1).An alternative scheme, Algorithm 2, is proposed in this section rewriting the inventory balance equation asnj+n¯j-kj=Sj-kj-1for stagej,j=2, …,J-1, and considering the following approximation:kj-1is replaced with its expected valueE(Kj-1). Note thatkj-1is integer butE(Kj-1)may take a fractional value. For the arguments considered in the items below for the development of the algorithm, we regardSj-E(Kj-1)as if it takes an integer value.•Initial step of Algorithm 2 to calculate the approximate distribution ofK1is the same as that of Algorithm 1. Using this distribution, approximateE(K1)is calculated.In order to calculate the distribution ofK2, the aforementioned approximation is considered for stage 2: isS2-E(K1)⩾0?IfS2-E(K1)⩾0, then the approximation allows us to consider stage 2 as the upper stage of the system with base-stock levelS2-E(K1), and, this way, to reduce the J-stage system to a (J-1)-stage system with a base-stock level ofS2-E(K1)at the upper stage.In this case, the first stage of the reduced system is approximated similar to the analysis of the first stage in the original J-stage system. That is, by working with a constantq2value and the correspondingA2=(1-ρ2)q21-(1-q2)ρ2the approximate probability distribution ofK2is obtained asPˇ(K2=k2)=A2/q2fork2=0,A2ρ2k2fork2>0.IfS2-E(K1)<0, thenPˇ(K2=k2)is calculated in terms ofPˇ(K1=k1)andP2(n2)as in Algorithm 1.Next, in order to calculate the distribution ofK3, the approximation is considered for stage 3: isS3-E(K2)⩾0?IfS3-E(K2)⩾0, then the (J-1)-stage system is reduced to a (J-2)-stage system with a base-stock level ofS3-E(K2)at the upper stage.IfS3-E(K2)<0, thenPˇ(K3=k3)is calculated in terms ofPˇ(K2=k2)andP3(n3)as in Algorithm 1.We continue in this manner until the approximate distribution ofKJ-1is obtained.For the case of working with base-stock levelSj-E(Kj-1)⩾0in the reduced system withJ-(j-1)stages, stage j being the upper stage of this reduced system,j=2,…,J-1, the constantqjvalue considered here isqj=P(Nj=Sj-E(Kj-1))∑nj⩽Sj-E(Kj-1)P(Nj=nj). This expression is written assuming thatE(Kj-1)takes an integer value. (See Corollary 2 for the numerical calculation ofq1.)Algorithmic presentation is given below forJ⩾2.Algorithm 2Step 0.Specifyq1=P(N1=S1)P(N1⩽S1). Setρj=λμjandPj(nj)=(1-ρj)ρjnjforj=2, …, J. SetA1=(1-ρ1)q11-(1-q1)ρ1andj=1. LetPˇ(K1=k1)=A1/q1fork1=0,A1ρ1k1fork1>0.Ifj=J-1, then letPˇ(Kj=kj, Nj+1=nj+1)=Pˇ(Kj=kj) Pj+1(nj+1) and stop. Otherwise, letj=j+1and E(Kj−1)=∑kj-1=0∞kj-1Pˇ(Kj−1=kj−1) and go to step 2.IfSj-E(Kj-1)⩾0, then specifyqj=P(Nj=Sj-E(Kj-1))P(Nj⩽Sj-E(Kj-1))and letAj=(1-ρj)qj1-(1-qj)ρjandPˇ(Kj=kj)=Aj/qjforkj=0,Ajρjkjforkj>0.Otherwise, i.e., ifSj-E(Kj-1)<0, then letPˇ(Kj=kj)=∑kj-1+nj⩽SjPˇ(Kj-1=kj-1)Pj(nj)forkj=0,∑kj-1+nj=Sj+kjPˇ(Kj-1=kj-1)Pj(nj)forkj>0.Go to step 1.Corollary 2 below is analogous to Corollary 1. For the numerical evaluation ofP(Nj=nj)inqj, we use the approximate marginal probability distributionPj(nj):qj=Pj(Sj-E(Kj-1))∑nj⩽Sj-E(Kj-1)Pj(nj)=(1-ρj)ρjSj-E(Kj-1)∑nj⩽Sj-E(Kj-1)(1-ρj)ρjnj.That is, we work with the M/M/1 formulaPj(nj)=(1-ρj)ρjnjdisregarding whetherE(Kj-1)is integer or not. For the specified value ofqj, the approximate marginal steady-state distribution of random variableKjis given in Corollary 2.Corollary 2InAlgorithm 2,q1andA1andPˇ(K1=k1)are calculated as inCorollary 1.IfSj-E(Kj-1)⩾0forj∈2,…,J-1in step 2, thenqj=(1-ρj)ρjSj-E(Kj-1)1-ρjSj-E(Kj-1)+1givesAj=(1-ρj)ρjSj-E(Kj-1)and(4)Pˇ(Kj=kj)=1-ρjSj-E(Kj-1)+1forkj=0,(1-ρj)ρjSj-E(Kj-1)+kjforkj>0.(a)Algorithm 2 is not different from Algorithm 1 for the following two cases: (1) the system under consideration is two-staged withJ=2, (2)Sj-E(Kj-1)<0for allj=2,…,J-1.CalculatingPˇ(Kj=kj)as in (4) makes sense because using theM/M/1formulas withρjfor random variableNjis in accordance with the marginal distribution of random variableNjin Proposition 1.E(K1)=ρ1S1+11-ρ1due toM/M/1nature of the marginal behavior of random variableN1.□In this section, the algorithms we propose are compared with the following existing approximations in the literature:•the matrix-based solution due to Lee and Zipkin (1992),two recursions given by Buzacott et al. (1992),the recursions that Gupta and Selvaraju (2006) use by extending one of the recursions due to Buzacott et al. (1992) and also by combining the two recursions given by Buzacott et al. (1992).The analytical comparison in Section 3.1 reveals some equivalence relations and also the differences between these existing approximations and the ones we propose. The numerical comparison in Section 3.2 is to investigate the accuracy of the proposed approximations as compared to the existing ones.For two-stage systems, Avṣar and Zijm (2003, Chapter 1) show that the product-form steady-state probability distribution obtained using theq1value in Corollary 1 is the same as the approximate distribution derived by Lee and Zipkin (1992) who work with the following assumptions: the (point) process describing the release of items from each stage is Poisson, the sojourn times of a unit at different stages are independent. This aforementioned equivalence relation is generalized in this section for serial systems with more than two stages. It is analytically shown that the product-form distribution obtained by Algorithm 1 using the naturalq1in Corollary 1 is the same as the matrix-based expression given by Lee and Zipkin (1992). Importance of this equivalence relation is clarified below.–The approximation assumptions are less restrictive in our case as compared to the assumptions considered by Lee and Zipkin (1992). For the difference between the constant-q assumption and the complete independence implied by the assumptions of Lee and Zipkin (1992), see Remark 4 given by Avṣar and Zijm (2009). Assuming thatNjs are all independent and then considering partial aggregation, the product-form distribution we propose can be obtained. The point here is that we obtain the product-form distribution with only constant-q assumption. Note that independence of allNjs is not required for the constant-q assumption. To the best of our knowledge, it has not been recognized in the literature yet that such strong complete independence assumptions are not required to come up with the same approximation.Observing the equivalence allows us to see how the matrix-based solution given by Lee and Zipkin (1992) can be obtained by the sequence of the product-form distributions proposed, each being expressed in terms of the previous one in a recursive manner.In spite of the equivalence, our approximation lends itself naturally to extensions for different more complex systems while the derivation due to Lee and Zipkin (1992) gives no clue at all in this respect. For the extensions, recall the citations given in the second paragraph in Section 1. The results in Section 2 in this paper for single exponential servers as in Fig. 1 are extended by Avṣar and Zijm (2009) for an open Jackson network at each stage.The approximation we propose allows using anyq1between 0 and 1 instead of restricting ourselves to the one in Corollary 1 which guarantees the equivalence relation mentioned above. As a matter of fact, an alternative algorithm, namely Algorithm 2, is proposed choosingqjvalues as in Corollary 2.We numerically show that it is possible to calculate the exact value of a given performance measure by choosing the “right” constantq1value. This observation reveals another advantage of our approach which is to be further elaborated. The related discussion and an example drawing are due to Avṣar and Zijm (2009).In order to show equivalence of the approximate distribution obtained by Algorithm 1 with the use ofq1value in Corollary 1 and the approximate distribution given by Lee and Zipkin (1992), the notation used by Lee and Zipkin (1992) is recalled below. Forj=1,…,J, definej×jmatrixCjas follows: the diagonal entry for row b and columnb,Cj(b,b), is-υbforb=1,…,jandCj(b,b+1)=υbforb=1,…,j-1, whereυb=μb-λ. LetPj=λ(λI-Cj)-1andγ1=[1],γj+1=[γjPjSj,1-γjPjSje],πj=γjPj, whereeis a vector of appropriate size with all of its entries being 1. Lee and Zipkin (1992) express the approximate probability distribution of work in process at stagej,j=1,…,J-1, in terms ofπj+1andPj+1, see the piecewise function in Theorem 1 below. Theorem 1 is for the equivalence of the approximate distributionPˇwe propose for random variableKj+Nj+1and the matrix-based expressions given by Lee and Zipkin (1992). Lemma 2 given in the appendix is to present some observations to be used for the proof of Theorem 1 which is deferred to the appendix.Theorem 1Forj=1,…J-1,Pˇ(Kj+Nj+1=h)=1-πj+1eforh=0,πj+1Pj+1h-1(I-Pj+1)eforh>0.Buzacott and Shantikumar (1993, Section 10.7.5) also use conditional q probabilities in order to come up with an approximate steady-state distribution for serial systems under different control mechanisms in addition to base-stock control. However, there is not any aggregation considered by Buzacott and Shantikumar (1993) although in our case q terms result from partial aggregations. On the other hand, the procedure Buzacott et al. (1992) give to approximate the probability density function of the delay in satisfying customer demand is recursive as the algorithms we propose in this article. Duri et al. (2000) show that the approximations due to Buzacott et al. (1992) and Svoronos and Zipkin (1991) are equivalent when the demand arrivals occur according to a Poisson process and there is a single exponential server at each stage. On the other hand, the analysis due to Lee and Zipkin (1992) is based on the use of the approximation proposed by Svoronos and Zipkin (1991) for a serial system with an exponential single server at each stage and Poisson demand arrivals. Then, the equivalence proof due to Duri et al. (2000) and the equivalence of Algorithm 1 and the matrix-based solution due to Lee and Zipkin (1992), the latter of which we prove in this section, lead to the equivalence of the recursive procedure given by Buzacott et al. (1992) and Algorithm 1 implemented with theq1value given in Corollary 1.The recursive algorithm due to Buzacott et al. (1992) is based on treating each stage as an independentM/M/1queue. Analyzing the behavior of departures from the first stage, Buzacott et al. (1992) consider the second stage as aGI/M/1queue and, this way, improve their approximation for two-stage systems. In this case, the approximate distribution of random variableN2isPG2(n2)=(1-ρ2)forn2=0,ρ2(1-ς2)ς2n2-1forn2>0,whereς2is the solution ofL2(μ2-μ2ς2)=ς2.L2(z)=λz+λ-ρ1S1(μ1-λ)z2(z+λ)(z+μ1)(z+λ+μ1)is the Laplace–Stieltjes transform of the interarrival time distribution for stage 2 whenS1>0. This improved approximation due to Buzacott et al. (1992) is equivalent to Algorithm 1 forJ=2whenq1in Corollary 1 is used andP2(n2)in Algorithm 1 is replaced withPG2(n2).Gupta and Selvaraju (2006) consider a recursion as in Algorithm 1 for systems with more than two stages using the transform definition above asLjwithςjbeing the solution ofLj(μj-μjςj)=ςjand similarly defining the marginal distribution of random variableNjasPGj(nj)=(1-ρj)fornj=0,ρj(1-ςj)ςjnj-1fornj>0,forj=2,…,J.That is, what Gupta and Selvaraju (2006) propose is an extension of the improved approximation due to Buzacott et al. (1992) and is the same as Algorithm 1 for anyJ>1with theq1specification in Corollary 1 but for usingPGj(nj)instead ofPj(nj). Furthermore, Gupta and Selvaraju (2006) improve the approximation accuracy reported by Lee and Zipkin (1992) and Buzacott et al. (1992) by using the following weighted average ofςjandρjinstead ofςjto calculatePGj(nj):(1-e-Sj-12/2)ςj+e-Sj-12/2ρj. The weights chosen are to eliminate the disadvantages of usingPGj(nj)withςjorPj(nj)withρj. Note that these disadvantages are observed numerically, the details for the rationale of using the weighted average are given by Gupta and Selvaraju (2006).Incorporating the use of independentGI/M/1queues withPGjinstead ofM/M/1queues withPjin Algorithm 2, we come up with two other approximations different than the approximations in the literature. Furthermore, working with the generalizationLjandςj, we implement Algorithm 1 usingPGjinstead ofPjalso forJ>2. Corollary 3 below is to fully characterize these approximations. As for the use of Algorithm 2 with this corollary, the second item in Remark 3(a) needs to be for the case such thatSj-E(Kj-1)<1for allj=2,…,J-1.Corollary 3InAlgorithms 1 and 2, consider the use ofPGj(nj)withσj=ςjorσj=(1-e-Sj-12/2)ςj+e-Sj-12/2ρjinstead ofPj(nj)withρj.q1,A1andPˇ(K1=k1)are calculated as inCorollary 1.The following is for step 2 inAlgorithm 2.IfSj-E(Kj-1)⩾1forj∈2,…,J-1, thenqj=PGj(Nj=Sj-E(Kj-1))∑nj⩽Sj-E(Kj-1)PGj(Nj=nj)=ρj(1-σj)σjSj-E(Kj-1)-11-ρjσjSj-E(Kj-1)andAj=(1-σj)qj1-(1-qj)σj=ρj(1-σj)σjSj-E(Kj-1)-1,Pˇ(Kj=kj)=1-ρjσjSj-E(Kj-1)forkj=0,ρj(1-σj)σjSj-E(Kj-1)+kj-1forkj>0.Otherwise, ifSj-E(Kj-1)<1forj∈2,…,J-1, thenPˇ(Kj=kj)=∑kj-1+nj⩽SjPˇ(Kj-1=kj-1)PGj(nj)forkj=0,∑kj-1+nj=Sj+kjPˇ(Kj-1=kj-1)PGj(nj)forkj>0.Six approximations considered in this paper result from the use of Algorithms 1 and 2 withPjin terms ofρjand withPGjin terms ofςjand(1-e-Sj-12/2)ςj+e-Sj-12/2ρj. The (equivalence) relations observed in this section are summarized below.–Algorithm 1 withPjis equivalent to the approximations due to Lee and Zipkin (1992) and Buzacott et al. (1992).Algorithm 1 withPGjin terms ofςjis an extension of the improved approximation due to Buzacott et al. (1992) forJ=2toJ>2based on the use of the generalization forLjthat is considered by Gupta and Selvaraju (2006). That is, Algorithm 1 withPGjin terms ofςjis equivalent to the recursion used also by Gupta and Selvaraju (2006).Algorithm 1 withPGjin terms of the weighted average ofρjandςjis equivalent to the improved approximation proposed by Gupta and Selvaraju (2006).Algorithm 2 is not directly comparable to an existing approximation in the literature and use of both Algorithm 1 and Algorithm 2 with some other constant q values to be proposed would turn out as alternatives to the existing approximations.Accuracy of the proposed approximations is investigated in this section for three-stage systems with a single server at each stage. Performance measures considered are associated with the satisfaction of independent demand at the last stage; namely, stockout probabilitySP=Pr(KJ>0), fill rateFR=Pr(KJ-1+NJ<SJ), expected backorders at the last stageEB=E(KJ)and expected work to be processed at the last stageEW=E(KJ-1+NJ). Using the expressions in Remark 4 below forj=J,EW=E(KJ-1+NJ)can be calculated more easily in Algorithm 2 as compared to Algorithm 1.Remark 4LetE(K0)=0. WhenPjis used in Algorithm 2,E(Kj-1)=ρj-1Sj-1-E(Kj-2)+1(1-ρj-1)andE(Nj)=ρj1-ρjforSj-1-E(Kj-2)⩾0andj=2,…,Jas a result of Corollary 2. For the use ofPGjin Algorithm 2 instead ofPj,E(Kj-1)=ρj-1σj-1Sj-1-E(Kj-2)(1-σj-1)andE(Nj)=ρj1-σjforSj-1-E(Kj-2)⩾1andj=2,…,Jas a result of Corollary 3.In Tables 1–3given in this section, simulation results obtained using batch means method are compared with the approximate performance measures. All the errors reported are percent errors. Error for SP and FR is the difference between simulation and approximation results whereas relative error is calculated for EB and EW dividing the difference by the simulation result. Positive (negative) errors show overestimations (underestimations). Abbreviation sim. is used for simulation and alg.1 and alg.2 stand for Algorithms 1 and 2, respectively. alg.1 and alg.1(LZ-BPS) are for the use ofM/M/1formulaPjspecifyingq1as in Corollary 1, alg.1(BPS-mod) and alg.1(GS) are for the use ofGI/M/1formulaPGjspecifyingqjas in Corollary 3 withσj=ςjandσj=(1-e-Sj-12/2)ςj+e-Sj-12/2ρj, respectively. alg.2, on the other hand, is for the use ofM/M/1formulaPjspecifyingqjas in Corollary 2, alg.2(BPS-mod) and alg.2(GS) are for the use ofGI/M/1formulaPGjspecifyingqjas in Corollary 3 withσj=ςjandσj=(1-e-Sj-12/2)ςj+e-Sj-12/2ρj, respectively. LZ-BPS in parentheses is due to the equivalence relation in Theorem 1 in Section 3.1. BPS-mod stands for the use ofPGjexpressed in terms ofςjas in the modified or improved approximation due to Buzacott et al. (1992). Similarly, GS stands for the use ofPGjexpressed in terms of bothρjandςjas proposed by Gupta and Selvaraju (2006).Bold figures in Tables 1–3 are the best approximate performance measures obtained. In order to observe equivalence of the derivations in this article for alg.1 with the use ofPjand the derivations due to Lee and Zipkin (1992) numerically, the parameter sets used by Lee and Zipkin (1992) are considered in Table 3. It would be noticed that some EW and EB estimates listed in the tables in the appendix for different approximations are observed to be the same although the respective errors are close but different. This is because of rounding to show only a few decimal digits of the estimates.Tables 1 and 2 are to compare Algorithms 1 and 2 used withM/M/1formulas. This preliminary investigation shows that it is worth considering Algorithm 2 with the variations in Corollary 3. In Table 1, alg.2 works better than alg.1 for almost all of the(S1,S2)pairs considered with equal process rates for all the stages. In Table 2, base-stock levels are kept the same for the two upper stages but process rates are allowed to differ. In general, alg.1 is better when process rate at the first stage is smaller than the rate at the second stage. For the cases the process rate at the second stage is smaller than that at the first stage, alg.2 appears not only as an alternative to alg.1 but also an approximation dominating alg.1. In Table 1 where process rates are all the same, similarly alg.1 is better only for the exceptional cases whereS1is small enough to again cause the first stage to be sufficiently slower than the second stage. Having observed the cases in which alg.2 performs better than alg.1 in Tables 1 and 2, comparison of six alternative approximations is reported in Table 3. At first glance, it is observed that in general Algorithm 2 is better than Algorithm 1. alg.2(BPS-mod) and alg.2(GS) turn out to be the best. Performance of alg.2, alg.1(BPS-mod) and alg.1(GS) is not as good as that of alg.2(BPS-mod) and alg.2(GS), but better than the others. alg.1(LZ-BPS) does not give the best estimate of a performance measure for any of the(μ,S1,S2)combinations tested in Table 3.Except for the cases the first stage is slower than the second stage in Table 2, the following are the errors reported for Algorithm 2: the highest absolute error for SP and FR is around 4.5% and the highest absolute value of the relative errors for EW (EB) is around 8.5% (17.5%). For Algorithm 1, the highest absolute error reported for SP and FR is around 3% and the highest absolute value of the relative errors for EW (EB) is around 6.5% (8%). For the cases Algorithm 2 is more accurate than Algorithm 1, the highest absolute error observed for SP and FR is around 2.5% and the highest absolute value of the relative errors for EW and EB is less than 4.5%. Thus, interpretation for the comparison of these percentages together with the observations in the previous paragraph is that error for Algorithm 2 varies over a larger range as compared to Algorithm 1 although, in general, Algorithm 2 works better than Algorithm 1. It should be noted that the high relative errors for EW and EB could be misleading because such high relative errors result in when the exact EW and EB values are small, see the cases with(μ1,μ2)=(9,12)in Table 3. As a matter of fact, the absolute errors, but not relative errors, for EW (EB) do not exceed 1 item (backordered request). The case in Table 1 for(S1,S2)=(0,3)shown as(0∗,3∗)is to recall Remark 3(a).Observations regarding the behavior of the approximation performance over systematically varying parameter sets are in accordance with the ones observed previously in the literature for two-stage and three-stage cases, with no marked deterioration in approximation accuracy to be reported as moving from two-stage to three-stage case as Lee and Zipkin (1992) note. AsS1increases for a givenS2value in Table 1 and asμ3increases for givenμ1andμ2in Table 2, approximation errors for both algorithms increase in general and then start decreasing. The approximation works better for low and high base-stock levels. Such low and high base-stock levels roughly correspond to stockout probabilities and fill rates above 0.90 or below 0.10. Between these low and high levels of base-stocks, the absolute error increases up to a maximum. Also, the absolute errors get larger when the traffic intensity increases. This is apparent in Tables 2 and 3.

@&#CONCLUSIONS@&#
