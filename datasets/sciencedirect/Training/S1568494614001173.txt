@&#MAIN-TITLE@&#
Effect of hybridizing Biogeography-Based Optimization (BBO) technique with Artificial Immune Algorithm (AIA) and Ant Colony Optimization (ACO)

@&#HIGHLIGHTS@&#
Effect of hybridizing Biogeography-Based Optimization (BBO) technique with Artificial Immune Algorithm (AIA) and Ant Colony Optimization (ACO). All the considered techniques are effective and well proven in the literature.The proposed method is experimented on 13 unconstrained benchmark problems and 24 constrained benchmark problems, 20 mechanical design problems and 22 real life problems from the literature.The propose method is also investigated on 10 multi-objective optimization benchmark problems from CEC 2009.Performances of the algorithms are checked statistically using Friedman and Holm–Sidak test.Results show the effective performance of the proposed hybrid BBO algorithms.

@&#KEYPHRASES@&#
Hybrid metaheuristics,Biogeography Based Optimization,Ant Colony Optimization,Artificial Immune Algorithm,

@&#ABSTRACT@&#
Hybridization in optimization methods plays a very vital role to make it effective and efficient. Different optimization methods have different search tendency and it is always required to experiment the effect of hybridizing different search tendency of the optimization algorithm with each other. This paper presents the effect of hybridizing Biogeography-Based Optimization (BBO) technique with Artificial Immune Algorithm (AIA) and Ant Colony Optimization (ACO) in two different ways. So, four different variants of hybrid BBO, viz. two variants of hybrid BBO with AIA and two with ACO, are developed and experimented in this paper. All the considered optimization techniques have altogether a different search tendency. The proposed hybrid method is tested on many benchmark problems and real life problems. Friedman test and Holm–Sidak test are performed to have the statistical validity of the results. Results show that proposed hybridization of BBO with ACO and AIA is effective over a wide range of problems. Moreover, the proposed hybridization is also effective over other proposed hybridization of BBO and different variants of BBO available in the literature.

@&#INTRODUCTION@&#
Optimization is a very old field and has started with many traditional deterministic methods. Although, traditional mathematical programming techniques had been employed to solve optimization problems, these techniques have following limitations: traditional techniques do not fare well over a broad spectrum of problem domains; traditional techniques are not suitable for solving multi-modal problems as they tend to obtain a local optimal solution; traditional techniques are not ideal for solving multi-objective optimization problems and traditional techniques are not suitable for solving problems involving large number of constraints.Considering the drawbacks of traditional optimization techniques, attempts are being made to solve the optimization problems by using metaheuristics, which are mostly nature inspired, like Genetic Algorithm (GA), Artificial Immune Algorithm (AIA), Ant Colony Optimization (ACO), Particle Swarm Optimization (PSO), Differential Evolution (DE), Artificial Bee Colony Optimization (ABC), Biogeography Based optimization (BBO), etc. and this research in metaheuristic has been very active during the last two decades. All this metaheuristics can be applied to a wide variety of problems, and so continuous research is going on to develop such optimization techniques. Moreover, many researchers have concluded that no single metaheuristic is better on a wide spectrum of problems. So, it is further required to have an effective combination of metaheuristics with other types of algorithms for the optimization problems, which can lead to more efficient behavior and greater flexibility in application. The combination of one metaheuristic with components from other metaheuristics or with other techniques is called a hybrid metaheuristic. The growing interest in this field of hybrid metaheuristics and some of its latest applications to a wide range of problems can be summarized in Table 1for the last decade.It is observed from Table 1 that continuous research is been carried out to hybridize different algorithms to make it suitable for different problems. To contribute more in this research area this work investigates the effect of hybridizing BBO with other two well-known techniques viz. AIA and ACO as no investigation is reported for such hybridization. The hybridization of BBO with each algorithm is carried out in two different ways for updating the solutions in each generation. The detailed discussion about the hybridization is given in the next session. All the basic versions and its hybridized variants are tested on different unconstrained benchmark problems and constrained benchmark problems. The next section presents the brief introduction of BBO, AIA and ACO.Biogeography Based optimization (BBO) is an evolutionary algorithm (EA) developed in 2008 [1] inspired by the immigration and emigration tendency of the species. In BBO, each solution is considered as a “habitat” with a habitat suitability index (HSI). High HSI solutions tend to share their features with low HSI solutions. Low HSI solutions accept a lot of new features from high HSI solutions. Each solution has its own immigration rate λ and emigration rate μ. A good solution has higher μ and lower λ and vice versa. The immigration rate and the emigration rate are functions population size. For understanding the working of BBO, consider a population of solutions which is represented by design variable. Each design variable for particular population member is considered as suitability index variable (SIV) for that population member. The objective function value indicates the HSI for the particular population member. The emigration and immigration rates of each solution are used to probabilistically share information between habitats. If a given solution is selected to be modified, then its immigration rate λ is used to probabilistically modify each SIV in that solution. If a given SIV in a given solution Siis selected to be modified, then its emigration rates μ of the other solutions is used to probabilistically decide which of the solutions should migrate its randomly selected SIV to solution Si. The above phenomenon is known as migration in BBO. After migration solutions undergo mutation phenomena. Mutation process mutates low HSI as well as high HSI solutions.Pseudo code for BBO is given below:Start1. Generate population2. Calculate the immigration rate λiand the emigration rate μifor each individual Solutioni3. Select Solutioniwith probability proportional to λiif rand(0, 1)<λiFor j=1 to population sizeSelect Solutionjwith probability proportional to μjif rand(0, 1)<μjRandomly select a variable x from SolutionjReplace the corresponding variable in Solutioniwith xEndifEndforEndif4. MutationStopMany researches are carried out for the analytical analysis of this algorithm, some of which includes the analysis of migration models [2], probabilistic analysis of BBO [3], Markov analysis of BBO [4] and analysis of different immigration and emigration rates [5]. BBO is also compared with other EA's like GA, ES, DE and PSO based on the equivalencies with its application to many real life problems [6]. BBO is also investigated on many real life optimization problems. Some of these applications include Economic dispatch problems [7], smart grid scheduling [8], gear box optimization [9], job scheduling problems [10], and mechanical design problems [11]. Some studies are also carried out for the hybridization of BBO with other algorithms. BBO is hybridized with DE and it is experimented on unconstrained benchmark problems [12]. Hybridization of BBO with PSO is carried out for the constrained engineering problems and cross country path planning [13,14]. An attempt to hybridize BBO with ABC for unconstrained problems, constrained problems and mechanical design problems are discussed in [11].Artificial immune algorithm works on the principle of the immune system which defends the body against harmful diseases and infections. The immune system reacts to the pathogens which is driven by the clonal selection and affinity maturation principles [15]. Clonal selection is the process in which when a pathogen invades the organism, a number of immune cells that recognize these pathogens will proliferate, out of which some of them will become effector cells, while others will be maintained as memory cells. The effector cells are the cells which secrete antibodies in large numbers while the memory cells have long life spans so as to act faster and more effectively in future exposures to the same or a similar pathogen. During the cellular reproduction, the cells also suffer somatic mutations with high rates by which the higher affinity cells in relation to the invading pathogen differentiate into memory cells. An immune algorithm, named CLONALG, was developed by De Castro and Von Zuben [16] to perform pattern recognition and optimization.The AIA starts with a random population of antibodies. Affinity of the antibody is decided from its objective function value. Select n highest antibodies to be cloned. These antibodies are cloned depending on its affinities. If the affinity is more for the particular antibody it will have more number of clones. It is calculated using Eq. (1):(1)Nc=∑i=1nroundβNiwhere β is the multiplying factor controlling the number of clones and N is the total number of antibodies. These generate repertoire, which undergoes affinity maturation process as shown in Eq. (2), which is inversely proportional to its antigenic affinity. If the affinity is high the mutation rate is low.(2)xnew=xold+A(randn)where A is the factor depending on the affinity and decreases as affinity increases. Replace low affinity antibodies with new randomly generated antibodies given by Eq. (3):(3)xi=xmin+rand(0,1)(xmin−xmin)Pseudo code of AIA is given below:Start1. Generate population2. Select the n highest affinity antibodies (solutions) (Eq. (1))3. Affinity maturation process (Eq. (2))4. Replace the lowest affinity antibodies by new antibodies (Eq. (3))StopAnt Colony Optimization was developed by Dorigo [17,18] which works on the cooperative behavior of real ant colonies. Ants have the tendency to find the shortest path from their nest to a food source. Consider an optimization problem as a multilayered graph, where the number of layers is equal to the number of design variables and the number of nodes in a particular layer is equal to the number of discrete values corresponding to the design variables.Let the ant colony consist of N ants. In the beginning of the optimization process, all the edges are initialized with an equal amount of pheromone. The ants start at the home node, travel through the various layers from the first layer to the last layer, and end at the destination node in each generation. Each ant can select only one node in each layer as per the following Eq. (4):(4)Pijk=τijα∑τijαifj∈Nik0ifj∉Nikwhere Pijkdenotes the probability of choosing j as the next node for an ant k located at node i, τijis the pheromone trail and α is the pheromone sensitivity.Once the path is complete, the ant deposits some pheromone on the path based on the local updating rule given by Eq. (5):(5)τij=τij+Δτkwhere Δτkis the pheromone deposited by kth ant on the path it has visited.When all the ants complete their paths, the pheromones on the globally best path are updated using the global updating rule given by following Eq. (6):(6)τij=(1−ρ)τij+∑k=1NΔτijkwhere ρ is the pheromone decay rate (evaporation rate), Δτijkis the pheromone deposited by best ant k on the path ij calculated as Q/fitnessk, where Q is a constant.Pseudo code for ACO is given below:StartGenerate populationCalculate pheromone Eq. (5)Calculate probabilities based on pheromone amounts as Eq. (4)Update solution asFor j=1 to number of design variablesif rand>Q0SP=P1Si=1while SP<randSi=Si+1SP=SP+PSiendendxi,j=xi,SiEnd ForCalculate pheromone update Eq. (6)StopIt is observed from the description of BBO, AIA and ACO that all these algorithms have different tendency to search the optimum solution. Many studies are reported to improve the effectiveness of BBO, but still very less work is carried out for the hybridization of BBO with other algorithms. So, the efforts must be continued to hybridize BBO with other optimization techniques which can be more effective, robust and able to provide accurate solutions. As explained earlier there are many optimization algorithms such as GA, PSO, DE, ACO, AIA, ABC, etc. to which BBO can be hybridized. Out of these algorithms, hybridization of BBO with DE, PSO and ABC is already available in the literature. Furthermore, searching of BBO and GA is nearly same as both these algorithms update the solutions by sharing the part of the solution with the other solution. Also, due to the restriction of the space, only two well-known algorithms ACO and AIA are considered which is having altogether different searching mechanisms than BBO. In this research work, a new hybrid metaheuristic is developed by hybridizing BBO with other metaheuristics like AIA and ACO. The hybridization is based on the different diversity (exploration) and intensification (exploitation) capability of the metaheuristics. For any population based metaheuristics, the terms diversity and intensification have been playing an important role in describing the working of an algorithm. Use of existing information is generally known as ‘intensification’. Generation of new solutions in the search space is generally termed as ‘diversity’. As intensification and diversity are the opposing forces, its balance is required for the algorithm to search for the global optimum solutions. Any selection procedure in the algorithm is generally characterized as intensification because the fitness (information) of the individuals is used to determine whether or not an individual should be exploited. So, diversity and intensification are two important aspects in the population based optimization algorithms. However, different algorithms employ different operators for diversity and intensification. In this paper BBO, ACO and AIA are chosen for hybridization because all these algorithms possess altogether a different searching mechanism which leads to different diversity and intensification tendencies. These algorithms have different intensification tendency like BBO use the fitness value to map the immigration and emigration rates, AIA uses this tendency to clone the solutions and ACO uses it for the pheromone deposit rates. Moreover, diversity tendency (solution update) of these algorithms is also different. So, all hybrid metaheuristics are developed by keeping BBO as a common algorithm. Hybridization will combine the diversity and/or intensification capabilities of BBO with such capabilities of AIA and ACO.There are many ways by which the hybridization can be done. In this work two different methods for the hybridization are followed.1.First hybrid variant: BBO_AIA_1 and BBO_ACO_1The solution is obtained using BBO. It is accepted if it is better than the previous solution. The same solution is updated by ACO or AIA search mechanisms. The solution is accepted if it is better than the previous solution (Figs. 1 and 2).Second hybrid variant: BBO_AIA_2 and BBO_ACO_1The solution is obtained using BBO. The same solution is updated by ACO or AIA search mechanisms. The solution is accepted if it is better than the BBO solution (Figs. 3 and 4).So, the first hybrid variant increases the function evaluation for each generation but at the same time combines the searching mechanisms of BBO with AIA or ACO. In the second hybrid variant of BBO the solution is updated using BBO search mechanism as in first version, but in this method the same solution is updated using AIA or ACO search mechanism and the solution is accepted if it is better than the previous, which will not increase the function evolutions.The step by procedure of all the four variants is explained below:Hybrid BBO_AIA variant_1 (BBO_AIA_1)STARTStep 1: InitializationInitialize population size, stopping criterion (here in this paper function evaluations), immigration rates, emigration rates, mutation rate, multiplying factor controlling the number of clones, repertoire rate and number and range of design variablesStep 2: Initial populationGenerate the initial population and evaluate the fitness for each individualStep 3: BBO search mechanismStep 4: Greedy selectionReplace new solution if it is better than the previous one (Greedy selection)Step 5: AIA search mechanismStep 6: Greedy selectionStep 7: Clear duplicate solutionsIf two solutions are same than one solution is changed by changing one of its design variable randomly. This mechanism allows the algorithm to escape from the local optimaStep 8: RepetitionRepeat from step 3 till the termination criteriaSTOPHybrid BBO_ACO variant_1 (BBO_ACO_1)STARTStep 1: InitializationInitialize population size, stopping criterion (here in this paper function evaluations), immigration rates (λ), emigration rates (μ), initial pheromone value (τ0)mutation rate, pheromone update constant (Q), exploration constant (Q0), global pheromone decay rate (ρg), local pheromone decay rate (ρl), pheromone sensitivity (α) and number and range of design variablesStep 2: Initial populationStep 3: BBO search mechanismStep 4: Greedy selectionStep 5: ACO search mechanismStep 6: Greedy selectionStep 7: Clear duplicate solutionsStep 8: RepetitionRepeat from step 3 till the termination criteriaSTOPHybrid BBO_AIA variant_2 (BBO_AIA_2)STARTStep 1: InitializationInitialize population size, stopping criterion (here in this paper function evaluations), immigration rates, emigration rates, mutation rate, multiplying factor controlling the number of clones, repertoire rate and number and range of design variablesStep 2: Initial populationStep 3: BBO search mechanismStep 5: AIA search mechanismStep 6: Greedy selectionStep 7: Clear duplicate solutionsStep 8: RepetitionRepeat from step 3 till the termination criteriaSTOPHybrid BBO_ACO variant_2 (BBO_ACO_2)STARTStep 1: InitializationInitialize population size, stopping criterion (here in this paper function evaluations), immigration rates (λ), emigration rates (μ), initial pheromone value (τ0), mutation rate, pheromone update constant (Q), exploration constant (Q0), global pheromone decay rate (ρg), local pheromone decay rate (ρl), pheromone sensitivity (α) and number and range of design variablesStep 2: Initial populationStep 3: BBO search mechanismStep 5: ACO search mechanismStep 6: Greedy selectionStep 7: Clear duplicate solutionsStep 8: RepetitionRepeat from step 3 till the termination criteriaSTOPIt is seen from the first hybrid variant of BBO that, the solution is first updated using BBO search mechanism which is accepted if it is better. These better solutions further follow the search mechanism of other algorithm and it will be excepted if it produces the better solution. So, it can be said that the solution follows diversity by BBO, intensification by greedy selection, diversity by AIA and again intensification by greedy selection. Moreover, the solution is only given one chance for the improvement if it improves itself by any of the search mechanism than it will be accepted otherwise not. To overcome the above “over exploited” mechanism the second hybrid variant is suggested. This variant of BBO with AIA and ACO will now be referred as BBO_AIA_2 and BBO_ACO_2 respectively. In this variant step 4 of the variant 1 is omitted for both AIA and ACO, and the solution obtained from the BBO directly follows step 5. This allows the solution obtained from BBO to follow other search mechanism. The other change in this hybrid variant is that, the solution is accepted if the other search mechanism produces better solutions than that produced using BBO. In other words, it can be said that if other algorithm (in this paper AIA or ACO) fails to produce better solutions than it will be purely a BBO search. Moreover, in this variant more importance is given to the diversity of the solutions than the intensification of the solutions. The methodology and experimentations of above hybrid variants of BBO are discussed in the next section.

@&#CONCLUSIONS@&#
This paper presents four variants of hybrid metaheuristic optimization algorithms which combines the characteristics of Biogeography Based Optimization (BBO) with Artificial Immune Algorithm (AIA) and Ant Colony Optimization (ACO). The proposed methods are experimented on different unconstrained and constrained benchmark problems for single and multi-objective optimization and also on real life problems. It can be summarized from the results that second variants of hybridization of BBO with ACO (BBO_ACO_2) has performed better on unconstrained problems and second variant of BBO with AIA (BBO_AIA_2) has performed effectively on constrained problems. Statistical analysis has been performed using Friedman test and Holm–Sidak test. Furthermore, the results of the proposed algorithm are compared with the published results of different hybrid BBOs and different variant of BBO. Results show the effectiveness of proposed hybrid BBO over the other hybrid BBOs and different variant of BBO. Future work can be extended to make the hybridization of BBO with other metaheuristics and to check its effectiveness over a wide range of problems.