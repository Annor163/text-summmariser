@&#MAIN-TITLE@&#
Rapid Physarum Algorithm for shortest path problem

@&#HIGHLIGHTS@&#
A heuristic method is proposed to make a bio-inspired algorithm, called as Physarum Algorithm, more efficient.We have demonstrated the efficiency of the proposed Rapid Physarum Algorithm on a variety of networks.The proposed Rapid Physarum Algorithm greatly decreases the time consumption of this bio-inspired mathematic model.

@&#KEYPHRASES@&#
Rapid Physarum Algorithm,Physarum polycephalum,Shortest path problem,Heuristic rule,

@&#ABSTRACT@&#
As shortest path (SP) problem has been one of the most fundamental network optimization problems for a long time, technologies for this problem are still being studied. In this paper, a new method by integrating a path finding mathematical model, inspired by Physarum polycephalum, with extracted one heuristic rule to solve SP problem has been proposed, which is called Rapid Physarum Algorithm (RPA). Simulation experiments have been carried out on three different network topologies with varying number of nodes. It is noted that the proposed RPA can find the optimal path as the path finding model does for most networks. What is more, experimental results show that the performance of RPA surpasses the path finding model on both iterations and solution time.

@&#INTRODUCTION@&#
The shortest path (SP) problem is one of the most fundamental problems in a wide variety of applications, such as road navigation in transportation systems [1–4], traffic routing in communication networks [5,6], and path planning in robotic systems [7,8] and so on [9–12,3]. And many classic algorithms has been developed to solve the SP problem, such as the Dijkstra labeling algorithm [13], Bellman–Ford successive approximation algorithm [14,15]. However, these traditional algorithms have a common shortcoming that they exhibit excessive computational time as the complexity of the SP problem becomes higher. Therefore, many biologically inspired algorithms have emerged, such as artificial neural networks [16], genetic algorithm [17,18], ant colony algorithm [19] and particle swarm optimization [20] and so on [21,22].Recently, a new method for shortest path problem, inspired by Physarum polycephalum, is proposed. The plasmodium of P. polycephalum is a large amoeboid organism with a body made up of tubes and is capable of solving many graph theoretical problems, including shortest path problem [23–27,9,28–31], network design [32–35]. By extracting the underlying physiological mechanism of tube construction and degeneration, a path finding mathematical model is constructed [36]. And it is shown that the model is capable of finding the shortest route and road navigation in complex road networks [37–39]. What is more, as a photophobic organism, the plasmodium of P. polycephalum still exhibits the minimum-risk path while partially illuminated [40]. Furthermore, it is found that the plasmodium has the ability of forming networks with properties comparable to or better than the Tokyo rail network [32].However, with a more detailed study into the path finding process of the model, it is revealed that the degenerating process for paths which tend to vanish requires much calculation and time. Therefore, it is necessary to reduce the complexity of calculation and accelerate the path finding process of the model. In order to solve the problem, a new method called Rapid Physarum Algorithm (RPA) is proposed in this paper, by integrating one heuristic rule into the mathematical model. In addition, the efficiency of the proposed algorithm RPA has been compared to the mathematical model on various network topologies. The analysis of the results indicates the superiority of the proposed algorithm over the basic mathematical model.The rest of the paper is organized as follows. In Section2, the path finding mathematical model inspired by P. polycephalum is briefly introduced. Section3 describes the overall flow of the proposed RPA for solving the SP problem. The implementation and experimental results of RPA on several networks are discussed in Section4. Finally, the conclusion is given in Section5.P. polycephalum is a large, single-celled amoeboid organism that can form a dynamic tubular network linking the discovered food sources during foraging. And the physiological mechanism behind the tube formation and selection contributes to the Physarum's ability of path finding, which is: tubes thicken in a given direction when the flux through it persists in that direction for a certain time. With this mechanism, a mathematical model for path finding has been constructed to simulate the adaptive dynamics of tubular network. A brief introduction for the model is given below.Assume the shape of Physarum is represented by a graph, in which a plasmodial tube refers to an edge of the graph and a junction between tubes refers to a node. Two special nodes acting as food sources are labelled as N1 and N2 in the graph, while other nodes are labelled as N3, N4, N5, …. And the edge between node i and j is labelled as Mij. The variable Qijdenotes the flux through tube Mijfrom node Nito Nj. Assuming approximate Poiseuille flow, the flux is given as:(1)Qij=DijLij(pi−pj)where piis the pressure at node Ni, Lijis the length of tube Mijand Dijis its conductivity.By considering the inflow and outflow must be balanced, we have ∑iQij=0(j≠1, 2). For the nodes correspond to the food sources, ∑iQi1+I0=0, ∑iQi2−I0=0, where I0 is the flux from the source node which is set as a constant in the model.With the equations above, the network Poisson equation for the pressure is derived:(2)∑iDijLij(pi−pj)=−1,forj=1,+1,forj=2,0,otherwise.By setting p2=0 as a basic pressure level, all pi's can be determined by solving equation (Eq. (2)), and each Qijis also obtained by Eq. (1).With the mechanism between the flux and tube thickness (described as the conductivity of the tube), the adaptation equation for conductivity is constructed as follows:(3)ddtDij=f(|Qij|)−αDijIt is obvious that positive feedback exists in the model, as f(Q) is a increasing function with f(0)=0.With experiments of path finding process of the mathematical model described in Section2, it is observed that although the shortest paths can be automatically selected as others disappear, much time and calculation is required to derive the final solution. However, in some SP applications, it is required that shortest paths need to be quickly identified either because an immediate response is needed or because the shortest paths need to be recalculated repeatedly. For this reason, a number of heuristic approaches have been advocated for decreasing the computation time. In this section, with the integration of one heuristic rule extracted from experiments, a Rapid Physarum Algorithm (RPA) is proposed to improve the efficiency of the original mathematical model.With observation of path finding process of the model in fully connected graphs, some phenomena have been found. After several iterations, the flux through each tube shows regularity in variation, which means that the flux through some tubes keeps increasing as the tubes thicken, while other keeps decreasing as the tubes thinner until the flux converge to 0 and the tubes disappear. However, when the flux through the tube decreases to a very small value. Normally, when the flux is lower than a small value θ, a lot of iterations are still needed until the tube vanishes. θ's value varies from network to network, which is determined by the properties of the network, including its structure, the edge length, etc. According to our observation, when θ is in the range [0, 0.1] in most of the networks, we can change the flux associated with corresponding edges to 0. As we can see in Fig. 1, almost 2/3 of the iterations are used for paths to adjust its flux to decrease from a small value to zero.If some heuristic rules can be integrated to reduce the iteration process by cutting those tubes which will potentially vanish, the efficiency of the path finding process can be improved with less computation complexity. Therefore, after a detailed study into our simulation of the model and results, an empirical heuristic rule is adopted from those phenomena and integrated into the model.Rule: If the variation of the flux through the tube maintains a stable decreasing trend, then the tube will be cut.This heuristic rule means that if a “stable decreasing trend” is determined through variation process of the flux which may imply the flux will continue decrease until it reaches 0, the tube will not be part of shortest path and is deleted directly with its flux assigned 0. The “stable decreasing trend” criterion is met if Qvij, the times for which the flux has continuously decreased/increased, satisfies the following condition:(4)S(Qvij,Qij)=Qvij+C1+R1(Qij)+R2(n)where positive value of Qvijmeans the flux has continuously increased for Qvijtime while negative value means continuously decreasing times. And R1(Qij) denotes the influence of current flux Qijon S. If Qijis very small, the tube is more likely to vanish and small |Qvij| is needed to identify “stable decreasing trend”. In contrast, if Qijis very large, more iterations are needed in case of wrong decision on cutting tubes. What is more, considering that the scale of the SP problem can also affect the decision criterion, R2(n) is included in the Eq. (4). Therefore, with Eq. (4), if S(Qvij, Qij)≤0, the “stable decreasing trend” of tube between node i and j is identified and Qijcan be assigned 0.Based on the heuristic rule extracted above and the path finding mathematical model, the Rapid Physarum Algorithm is proposed. The main idea of the RPA for SP problem is presented as Algorithm 1, with the entire graph of the SP problem regarded as the tube network that P. polycephalum initiates at the very beginning, the starting/ending node of SP problem (NS/NE) as the food sources in the tube network and the paths connecting nodes as tubes.Algorithm 1RPA(L,S,E)// L is an n×n matrix, Lijdenotes the length between node Niand Nj// NSis the starting node, NEis the ending nodeDij←(0, 1](∀i, j=1, 2, …, N∧i≠j)Qij←0(∀i, j=1, 2, …, N)Qpij←0(∀i, j=1, 2, …, N)// flux in previous iterationQvij←0(∀i, j=1, 2, …, N)Pi←0(∀i=1, 2, …, N)count←1repeatPE←0// pressure at the ending node NECalculate the pressure Piof each node using Eq. (2)∑iDijLij(Pi−Pj)=−1,forj=S+1,forj=E0,otherwisefori=1 toN−1doforj=i+1 toNdoQij←Dij×(Pi−Pj)/Lij// using Eq. (1)Update Qvijaccording to Qijand Qpijusing the equation belowQvij=Qvij+1,|Qij|−|Qpij|≥0andQij≥01,|Qij|−|Qpij|≥0andQij<0Qvij−1,|Qij|−|Qpij|<0andQij≤0−1,|Qij|−|Qpij|<0andQij>0ifQvij≤f(Qvij)thenQij←0Qvij←0end ifend forend forDij←f(|Qij|)−αDijcount←count+1untila termination criterion is metFirstly, the conductivity of each tube (Dij) is initiated with random value between 0 and 1 and other variables are assigned with 0, such as flux through each tube (Qij), pressure at each node (Pi). Secondly, the mathematical model is used to adapt the flux and conductivity of each tube with the flux variation (Qvij) is recorded. Thirdly, according to the flux variation recorded, the heuristic rule will be applied to determine whether the tube should be cut or not. The last two steps are repeated until the termination criterion is satisfied.There are several possible solutions to decide when to stop execution of Algorithm 1, such as the maximum number of iterations is arrived, conductivity of each tube converges to 0 or 1, and flux through each tube remains unchanged.As a matter of fact, the time complexity of the original Physarum Algorithm is determined by solving the linear equations shown in Eq. (2). Its time complexity is O(N3), where |N| is the number of nodes in the network. As shown in Algorithm 1, for RPA, it is still necessary to solve the linear equations. Consequently, the time complexity is the same as that of the original Physarum Algorithm. However, the RPA reduce the external loop iterations. In other words, RPA cost less iteration to reach the termination criterion. By this way, it accelerates the search of a solution and reduces the executing time and running iterations. In Section4, numerical experimental results are used to demonstrate this point. It can be noticed that in all the experiments, RPA outperforms the Physarum Algorithm to a great extent on executing time and iterations.To demonstrate the effectiveness and efficiency of the proposed RPA, a series of experiments have been conducted on different datasets, in comparison with the existing path finding mathematical model.

@&#CONCLUSIONS@&#
