@&#MAIN-TITLE@&#
High-speed autonomous navigation system for heavy vehicles

@&#HIGHLIGHTS@&#
The paper presents techniques for autonomous path tracking of heavy vehicles at high speeds.Vehicle state estimation is based on fuzzy logic, and a Takagi–Sugeno type controller is used for vehicle lateral control.The paper describes the real implementation and testing of the controllers in a real truck.The implementation of high speed robot controllers for heavy vehicles is more difficult in practice than for small mobile robots.The paper also describes experiments with the soft controller at high speeds, up to 100km/h.

@&#KEYPHRASES@&#
Autonomous vehicles,Navigation,Heavy vehicles,Fuzzy control,Differential GPS,Sensor data fusion,

@&#ABSTRACT@&#
This paper presents techniques for GPS based autonomous navigation of heavy vehicles at high speed. The control system has two main functions: vehicle position estimation and generation of the steering commands for the vehicle to follow a given path autonomously. Position estimation is based on fusion of measurements from a carrier-phase differential GPS system and odometric sensors using fuzzy logic. A Takagi–Sugeno fuzzy controller is used for steering commands generation, to cope with different road geometry and vehicle velocity. The presented system has been implemented in a 13tons truck, and fully tested in very demanding conditions, i.e. high velocity and large curvature variations in paved and unpaved roads.

@&#INTRODUCTION@&#
Autonomous guidance of ground vehicles has been an active research and development topic in the last 30 years. For example, several systems have been implemented in experimental outdoor autonomous vehicles such as the Navlab family at Carnegie Mellon University [1], the ARGO autonomous vehicle [2], the ROMEO vehicles [3]. The interest in autonomous vehicles’ technologies has grown specially in the US, where DARPA has organized the Grand Challenges and the Urban Challenge from 2004 to 2007 [4,5], which remarkably promoted the technologies of intelligent vehicles around the world. Reference [6] presents the main autonomous vehicles developed in the last years in the US. Other remarkable examples in the last years are the VisLab autonomous vehicles [7,8]. Most of these vehicles are the result of the adaptation of conventional cars or vans. However, the number of references presenting experimental results with autonomous heavy vehicles, such as trucks, is lower.Interest in heavy vehicle autonomous guidance has grown from the nineties in the framework of the initiatives on intelligent transportation systems (ITS) and automated highway systems (AHS). Published results on autonomous heavy vehicles come mainly from the California PATH program [9–11] and University of Minnesota's SAFETRUCK [12–14]. Other work on autonomous heavy vehicles has been done with TERRAMAX [15,16], designed for off-road navigation, and by Isuzu Motors in Japan [17]. Recently, special attention has been devoted to vehicle platooning or semi-autonomous “road trains” [18], composed by a leader vehicle with a human driver with one or several autonomous vehicles following it closely, for its potential in fuel and emissions savings and increase of road capacity. The SARTRE European Project has made a road demonstration of a platoon with a leader truck and several vehicles following it [19,20]. Tests with a three truck platoon have been performed within the Energy ITS Project in Japan [21,22]. Other examples include the German KONVOI project which analyzes the implications of truck platoons in autobahns [23] and the Swedish research program on intelligent vehicles [24].Many of these autonomous vehicle researches have been done at medium or low speeds. High speed navigation of autonomous vehicles is still a challenging application due to the requirements on reliability and safety.The choice of the sensors used for position estimation in autonomous navigation may have important practical requirements. Some sensors require auxiliary guidance mechanisms in or around the field of interest [25], as is the case with most of PATH program work [13], which uses magnetic markers buried in the road. The work in [17] also uses magnetic markers, but it stores a “map” of the markers for preview control.This paper deals with GPS based autonomous navigation by implementing a sensor data fusion and path following techniques.With the advent of modern GPS receivers, kinematic centimeter-level absolute position estimation and attitude measurements of the vehicle are available using carrier-phase differential global positioning system (DGPS) with position accuracy up to few centimeters. Carrier-phase DGPS techniques are being used for straight line tracking and heading control of golf carts and farm vehicles at low velocities [25], and adapted to conventional cars [26]. The TerraMax autonomous heavy vehicle [15] uses 3 different DGPS receivers for improved reliability. However, the use of GPS receivers requires operation environments with good sky visibility. Furthermore, in practical implementations, also arise other sources of errors like communication loss of differential correction messages, output variable latency and receiver errors [13]. Some of them can be detected taking into account the vehicle dynamics, using model-based fault detection and identification techniques, as is described in [14], and in [27] for an aerial vehicle. It has been also recognized that sensor data fusion can improve significantly the reliability of position estimation. Sensor data fusion for vehicle position estimation can be solved by means of statistical approaches, such as Kalman filtering (see, for example, [28]). These techniques require a stochastic state-space representation of the vehicle model and of the measurement process. A kinematic model of the vehicle and knowledge of measuring equipment are typically used to derive the state-space representation, although for nonlinear systems an extended Kalman filter formulation is needed. However, a main drawback of Kalman filtering is that sensor noise is modeled as white noise. Although this can be accurate for several sensors, it is clearly not true for DGPS. Moreover, the implementation of Kalman filtering requires estimations of the measurement covariance matrix, which can be obtained from the technical characteristics of the sensor equipment, and the process covariance matrix, that represents the model inaccuracies, which is much more difficult to obtain. It has been also shown that a poor estimation of input noise statistics may seriously degrade Kalman filter performance and even cause filter divergence [29]. In this paper fuzzy logic is applied to position estimation without the need for precise information, which can be difficult or expensive to obtain.The path following component of a vehicle controller has the mission of generating the vehicle's steering to track a previously defined path, by taking into account the vehicle's actual position and orientation and the constraints imposed by the vehicle and its low-level motion controller. Path following, which is sometimes referred to as “lateral control” or “path tracking”, is directly related to the lateral vehicle motion and steering control. Vehicle control also involves speed control. Both are coupled problems. However, path following has been usually studied for constant velocity. Thus, the path following algorithm implements a steering control law by using the error between the current estimated vehicle position/orientation and the path to follow. The inputs of the path tracker are variables defining the state of the vehicle with respect to the path, and the output is the steering command to be executed by the low-level motion controller. Linear control methods have been successfully applied for vehicle automated steering [30,31]. However, if the linearization conditions are violated or nonlinearities in the steering mechanism or in the motion sensors exist, the tracking deteriorates. Nonlinear path following techniques, as Takagi–Sugeno (TS) fuzzy control, have shown good performance [26]. TS fuzzy systems are a special type of fuzzy systems in which the consequent part of the rules is not defined by a fuzzy membership function but by affine linear dynamic systems. A TS fuzzy model will approximate a nonlinear system by smoothly interpolating these affine local models. Fuzzy control can also be used to integrate the driving knowledge acquired in the form of if-then rules from an experienced driver, and TS driving control laws directly extracted from sensor data recorded while the vehicle is operated by a human driver [32]. Furthermore, design techniques that guarantee stability based on Lyapunov functions and other methods can be also applied [33–37].Most path following methods have parameters related to the selection of a goal point, or a particular segment of the path to follow, which are required to compute the signal error in the path following loop. This has been integrated with path tracking through the concept of preview control. TS fuzzy logic also provides an efficient framework for integrating this parameter adaptation in the steering controller [38] and could be also implemented to tune automatically the parameters according to the current navigation conditions. This paper presents a Takagi–Sugeno fuzzy path following controller for heavy vehicles at high speeds, including fuzzy sensor data fusion for vehicle position estimation.The remaining of the paper is organized as follows. Section 2 introduces the main characteristics of GPS-based path following. In Section 3 the Takagi–Sugeno fuzzy path following strategy is presented. Section 4 describes the experiments carried out with a 13tons truck. Finally Section 5 presents the conclusions.GPS receivers provide low-frequency position information which is clearly insufficient to control a vehicle at high velocities. It is necessary to use additional high-frequency sensors to improve the performance and integrity of GPS navigation systems. A position estimation algorithm should use low-frequency sensor information for correcting low-frequency drift error in high frequency sensors and should use high frequency sensor information to decorrelate the errors in low-frequency sensors. Kalman filtering is one of the most widely used sensor data fusion technique in autonomous navigation.This paper proposes the application of fuzzy sensor data fusion to consider the heuristic knowledge involved in the estimation problem. This technique is based on the use of a fuzzy system for the on-line fusion of the measurements from a tachometer, a gyroscope and a carrier-phase DGPS receiver. The proposed fuzzy position estimation system initially showed similar performance to the extended Kalman filter in experimental tests, but the fuzzy position estimation was much more flexible and easily tuned than the Kalman filter. This flexibility comes from the fact that a human designer can easily understand what each rule does and it is much easier to tune them to match experimental results.The fuzzy position estimation system uses the data from the available sensors to obtain an estimation of the position and orientation of the truck in real time. The DGPS receiver provides data on latitude and longitude of the receiver antenna, which is then converted to Universal Transverse Mercator (UTM) coordinates. On the other hand, the gyroscope provides an estimation of the angular velocity of the vehicle, and the tachometer sensor readings are converted to linear velocity of the vehicle. With these measurements it is possible to obtain an incremental estimation of the position and orientation of the vehicle using the kinematic model.At a first approximation and for short distances, the truck can be considered to move on a plane, and a simplified 2D model can be used. For navigation in 2D, the position and orientation of the vehicle is given by (x, y, θ) (see Fig. 1), where x and y are the vehicle's cartesian coordinates, θ is the orientation angle, and (v, ω) are the linear and angular velocities of the truck, respectively.Then, the kinematic model is given by the following differential equations [3]:(1)x˙=−vsinθy˙=−vsinθθ˙=ωIf the differential equations (1) are discretized using the Euler method, the following expressions are obtained for the position and heading at instant k+1:(2)x(k+1)=x(k)−v(k)ΔTsinθ(k)y(k+1)=y(k)+v(k)ΔTcosθ(k)θ(k+1)=θ(k)+ω(k)ΔTwhere x(k) and y(k) are the absolute vehicle position in UTM coordinates, θ(k) is the orientation at time k, v(k) is the vehicle velocity, ω(k) is the yaw rate, and ΔT is the sampling period. This method is usually known as dead reckoning (DR) or odometry. It has a high performance for short distances and can be computed very quickly, but the growth of position uncertainty is unbounded since it is an incremental method.At last there are two independent estimations. The GPS estimation is a very accurate, absolute position estimation, but the sampling frequency is low, 5–10Hz at most. Furthermore, in some situations the estimations can be degraded due to satellite loss or other factors (i.e. in urban canyons). Luckily most receivers provide an indicator of the accuracy of the estimation (i.e. meter, submeter, centimeter), which can be used in the position estimation algorithms. In some cases the GPS receiver may provide one or a group of few outlier points that are far from the previous estimations. These outlier points are not compatible with the vehicle kinematics, and can be detected comparing them with the DR estimations.On the other hand, the DR estimation is relative, it is very fast (up to 200Hz or more) and it is very accurate for short distances. However, for larger periods the errors accumulate and grow unboundly, and then a good indicator of its accuracy is the distance from the last absolute correction.The fuzzy position estimation uses the complementary characteristics of both to obtain an estimation. The fuzzy system can be split up into two subsystems [40], a position fuzzy system and an orientation fuzzy system (see Fig. 2).Then, the position is computed by means of:Position=pos_GPS_factor∗GPS_position+(1−pos_GPS_factor)∗DR_positionwhere DR_position is the vehicle position computed using dead reckoning, and pos_GPS_factor is the position fuzzy system output, which gives the confidence in the sensors. This factor should be very close to 1.0 most of the time, as shown from statistics obtained in tests (GPS receiver position error less than 2cm with 95% probability), and it should be close to 0.0 when the GPS measurement is too far from the DR estimation, assuming DR estimation uncertainty is low for short intervals. Although this assumption is true most of the time, it could fail due to loss of GPS measurements. The fuzzy sensor data fusion method takes it into account.The position fuzzy system inputs are the level of accuracy (meter, submeter, centimeter) provided by the DGPS receiver, the distance traveled by the vehicle in the DR estimation since last GPS update, and the position error between the DR estimation and the GPS position. The rules are as:IF accuracy IS high AND pos_error IS low THEN pos_GPS_factor IS highwhere the membership functions of the inputs and the output are defined in Fig. 3. A similar scheme is used in the orientation fuzzy system.This fuzzy position and heading estimation system has been implemented and tested in a test heavy vehicle (which is described in Section 4), with good performance: it is able to achieve track lateral errors of less than 7cm in curved paths, and less than 3cm in straight paths. It is able to work at high output frequencies (it has been tested at up to 200Hz).The position and heading fuzzy estimation system was tuned in the following way. Several experiments were done in one of the tracks described in Section 4 (track A). The “true” position and heading were obtained with a human driving the test truck along track A. The vehicle position and heading were recorded by the onboard computer, and they were postprocessed first to remove outliers. Then the path was obtained from the data using principal curves [39], which are curves that pass through the “middle” of the data distribution, and are self-consistent (i.e., a point on the curve is the average of all data points that project onto it).Then, the output of the fuzzy position and heading estimation system was compared to the “true” solution; the rules were tuned in the track sections with larger errors. Although there may be a considerable number of rules, only very few of them are active at a given instant. Therefore, the candidate rules can be easily selected and, as the rules are self-explanatory, they can be easily modified to reduce the error. This process is repeated iteratively until the position and heading error is reduced to a specified level.The path following controller generates the vehicle's steering to track a previously defined path, based on the estimated errors between the current vehicle position and the path to follow. As shown in Fig. 4, the path following vehicle controller has two components, a motion low level controller and a path following strategy. In this figure, RP is the reference path, e is the error between actual vehicle position and the path to follow, γ is the desired curvature and p is the actual vehicle position.The low level controller commands the steering wheel motor for the vehicle to get the curvature given by the high level controller. PID motion controllers are usually applied in this low motion control level, which requires a curvature to steering wheel angle mapping. PID controllers provides good results in most cases if a satisfactory feedback signal is available.The objective of the path following high level controller (or simply path following controller, as is usually referred to) is to generate control commands for the vehicle to follow a previously defined path by taking into account the actual position and the constraints imposed by the vehicle and its low level controller.Path following is a nonlinear control problem. There are many algorithms that have been used but there is no general solution that can guarantee robustness when the curvature of the path varies. Fuzzy logic is a suitable technique to apply to path following strategies defined by means of rules. The resulting controllers are known as direct fuzzy controllers. The controller inputs are the variables defining the state of the vehicle with respect to the path. The output of the fuzzy controller is the steering command to be executed by the low level motion controller.Several methods have parameters related to the selection of a goal point on the path to follow. This goal point is required to compute the signal error in the path following loop. These parameters are related to the gain of the closed loop system and have a significant effect on the tracking performance. Thus, oscillations or even instability can arise for some values of the controller parameters. These instability conditions are related to both the vehicle's characteristics and navigation conditions including speed, path to follow and terrain. Usually these algorithms select a goal point P on the path at a fixed distance from the vehicle that is called the lookahead distance L, as shown in Fig. 5. Using this goal point three values can be obtained that are the inputs to the path tracker. These inputs are the lateral position error in vehicle coordinates ξ, the orientation error with respect to the goal point θeand the curvature error with respect to the goal point γe. The expressions of θeand γeare:(3)θe=θ−θpathγe=γ−γpathwhere θpath and γpath are the orientation and curvature of the path at the goal point.These algorithms are usually efficient, but a common problem is that the results are critically dependent on the appropriate tuning of the lookahead distance for the current navigation conditions. For example, at a given velocity if the lookahead is too long the vehicle may cut corners and if too short oscillations may arise.In this section, a Takagi–Sugeno (TS) fuzzy path following system for heavy autonomous vehicles at high speeds is presented. TS fuzzy systems are a special type of fuzzy systems in which the consequent part of the rules is not defined by a fuzzy membership function but by affine linear dynamic systems [41]. A TS fuzzy model will approximate a nonlinear system by smoothly interpolating these affine local models. Each local model contributes to the global model in a fuzzy subset of the input space. The TS fuzzy model has recently found wide applicability in fuzzy model based control. From a control engineering perspective the use of local affine (or local linear) models bridges the gap between fuzzy control and conventional control. Many existing tools and theories in linear systems theory can be partially applied to TS fuzzy models and controllers. Furthermore, general TS fuzzy systems have been shown to be universal approximators, and they can be used to effectively model a wide class of nonlinear systems.Stability analysis of TS systems also benefit from its internal structure. Sufficient stability conditions for this class of systems rely on the existence of a common quadratic Lyapunov function [33] or a piecewise-quadratic (PWQ) Lyapunov function for less conservative stability conditions [34]. The search for the Lyapunov function can be stated as a convex optimization problem in terms of linear matrix inequalities (LMI) for which efficient solving methods and software exist. Stability conditions for uncertain systems have also been developed [35]. Other approaches seek to reduce the conservativeness of the stability conditions obtaining local domains of attraction with fuzzy Lyapunov functions [36]. Alternative stability analysis based on LaSalle theorem has also been proposed [37].The path following controller for heavy vehicles should fulfill the conditions explained in the previous section: (i) it should be able to drive the vehicle at a large range of velocities, following the path without cutting corners and without oscillations; (ii) it should drive the vehicle through path sections with different curvatures and curvature variations; (iii) the controller should be able to manage the different dynamic regimes that appear in heavy vehicle guidance; and (iv), in heavy vehicle autonomous guidance control signals must be smooth, specially at high velocities; control signals with fast variations can cause oscillations.A satisfactory path-tracking needs a fast response of the steering system when the vehicle has to change its curvature to manage a turn. This fast response is necessary because the vehicle's curvature set point is continuously updated. If the steering response is slow, the cross track error will increase in these situations, and then control signals should be strong.The proposed TS fuzzy controller is an ideal candidate to deal with all these conditions. The TS fuzzy controller is composed of two sets of rules. One of them make an estimation of the lookahead distance for each driving conditions, and it is derived from heuristic knowledge from experienced drivers and vehicle experiments. The second set provides the control input to the low level controller, and it is derived from input/output data obtained in path following experiments with a human driver.Lookahead distance selection depends on path characteristics (curvature and curvature change), as have been derived from human driver and prior experiment heuristics. In general, drivers reported that they used a closer reference point on the path and applied a tight control when the curvature was changing between straight and curved path segments. Furthermore, reference points used by drivers where closer in curves than in straight segments. From that, the idea that has been implemented in the lookahead selector fuzzy set of rules is to increase the controller gain (decrease lookahead distance, since gain is inversely proportional to the lookahead distance) when the curvature of the path is changing (typically entering or leaving a turn) and have a lower gain (higher lookahead distance) when the vehicle must follow a constant curvature segment (straight or turn). Also, lookahead distance will be larger in straight segments than in curved segments. A typical lookahead variation can be seen in Fig. 6, for a road composed of a straight section, a curved section and another straight section. The vehicle moves along a straight path with a lookahead L1; when a goal point is detected in a transition area between straight and curved sections of the path, the lookahead is lowered to L2. Then, the goal point moves to a non-transition curved path segment with a fixed turning radius, and so, the lookahead is set to L3. When the vehicle reaches the transition area to leave the turn, a similar operation is performed.Furthermore, the lookahead distance L depends heavily on the velocity of the vehicle (V). The analysis in [3] suggests that stability of path tracking algorithms depends on the parameter L/V for a given vehicle, and then L should grow close to linearly with V to maintain the stability conditions. Experimental results in [42] with human drivers at different velocities report a slightly more than linear growth of the lookahead distance used by the drivers with the velocity of the vehicle, this is, the ratio L/V will be larger for larger values of V.The TS fuzzy controller proposed in this paper analyses the path to track and adjust the lookahead with path characteristics, vehicle velocity and other driving conditions. The path is given by a sequence of points with three values each one: an x, y absolute position (in UTM coordinates) and the turning radius of the path at that point. A given path may be divided in segments of constant curvature joined by short segments with changing curvature. These segments with changing curvature will be referred as transition areas, and can be obtained using the first derivative of the curvature γ (the inverse of the turning radius) in each point; a position is marked as transition area if δγ, the derivative of the curvature, exceeds a threshold (Fig. 7). The segments with constant curvature are also subdivided in seven classes, from straight line to very high turn, using the absolute value of the turning radius (see Fig. 7).The TS fuzzy controller analyses the path from the vehicle's nearest point to a given horizon; in this way the estimator obtains the kind of segment in which the vehicle is currently placed and the kind of segment where the vehicle is approaching; this segment will be called the goal segment. The information given in this analysis and the velocity are used to estimate the lookahead. The segmentation of the path, the determination of current segment and goal segment, and the estimation of the parameter are done in real-time using fuzzy logic.The inputs are the velocity, the turning radius of the nearest point on the path (nearest turning radius – NTR), the turning radius of the goal point on the path (goal turning radius – GTR), the module of the first derivative of the curvature in the nearest point on the path (δγN) and the module of the first derivative of the curvature in the goal point (δγG). The NTR and δγNinputs are used to determine the kind of segment in which the vehicle is currently located, and the GTR and δγGinputs give the kind of segment the vehicle is approaching. The output, as previously discussed, is the lookahead distance (L).The rules are defined following the reasoning in the previous paragraphs. The dependence of L with the velocity is expressed directly: L will be larger when V increases. The variation of L with the type of road segment uses the NTR, δγN, GTR and δγGinputs. For example, if the truck is in a straight road segment and the path ahead is also straight the inputs will be:-NTR IS very-very-high ANDδγNIS low AND GTR IS very-very-high ANDδγGIS lowBut if the truck is in a straight segment and is entering in a transition to a curved segment the inputs would be:-NTR IS very-very-high ANDδγNIS high AND GTR IS medium ANDδγGIS highIncluding both the inputs related to the velocity and the type of road segment, the complete rules are such as:Ri:IF velocity IS high AND NTR IS very-high ANDδγNIS lowAND GTR IS very-high ANDδγGIS lowTHEN Li=CiThe rules have a symmetric structure, so that the same subset of rules can be repeated for different vehicle velocity values. For example, when velocity is ‘high’, there are 16 different significant rules, and many of them can be reused for other velocities, thus reducing considerably the number of rules that need to be defined. The membership functions of the inputs are defined in Fig. 7. The number and values of the membership functions have been defined from previous experiments, and considering the wide range of road curvature and vehicle velocity conditions that have to be addressed.The second set of rules is used to generate the control command to the steering system low level controller. The control strategy depends strongly on the velocity: if the velocity is high, the curvature applied γRto correct an error should be lower than the curvature applied to correct the same error at a lower speed. The output of the fuzzy controller is the required steering command γR.Assuming that positive steering is counterclockwise, for a given lookahead L, the rules of the proposed Takagi–Sugeno controller are as follows:Rj:IFξIS positive high AND velocity IS high AND NTR IS very-highANDδγNIS low AND GTR IS very-high ANDδγGIS lowTHENγRj=K1jξ+K2jθeK3jγewhere K1j, K2jand K3jare constants that define the local linear submodel which is the consequent of the jth rule. K1jis the most relevant gain, since the lateral position error is the more significant error. The values of these gains are obtained from experimental data.

@&#CONCLUSIONS@&#
This paper proposes a path following system designed and implemented for heavy unmanned vehicles. A TS fuzzy control system can be used to control heavy vehicles at different driving conditions. A good performance is achieved following paths with very different curvatures and velocities with this single controller. The controller is able to drive the truck at high speed (up to 100km/h) on unpaved roads, and it can also control the vehicle on curved roads with a turning radius of 30–40m. The conditions in which the driving tests have been done are very demanding, because in most of them legal speed limits have been exceeded. Moreover, most of the tests have been done on unpaved gravel roads. The main advantage of the presented controller is its capability of adaptation to road segments of different curvatures and the transitions between them. Furthermore, its structure allows the easy addition of new rules considering for example the slip angle or other factors to increase the envelope of working conditions of the controller. Future improvements can be done considering slip in the motion of the vehicle and applying on-line estimation of slip angle to correct the γ−α mapping in the low-level control.