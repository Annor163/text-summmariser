@&#MAIN-TITLE@&#
Smoothness driven frame field generation for hexahedral meshing

@&#HIGHLIGHTS@&#
We propose a novel algorithm to generate block-structured hexahedral meshes for any CAD domain.The proposed approach does not require a pre-meshed boundary.The frame field is built so that singularities are better positioned.A skeleton is built using the frame field.Each part defined by the skeleton can be meshed with a structured mesh.

@&#KEYPHRASES@&#
Meshing algorithm,Hexahedra,Block-structured,Frame fields,

@&#ABSTRACT@&#
For many years, providing an algorithm to generate hexahedral meshes that fulfill minimal geometric criteria (boundary-alignment, minimum of singularity vertices) and that is not limited to a category of geometries has been an open issue. In the past couple of years, techniques using 3D frame fields have emerged to design such meshes (Huang et al., 2011; Li et al., 2012). Those methods are based on a two-step process where a 3D frame field is built by assigning a frame to each cell of a tetrahedral mesh, then a parametrization algorithm is applied to generate a hexahedral mesh. In this work, we propose a novel algorithm to generate block-structured hexahedral meshes for any CAD domainΩ. This work differs from previous ones in many points: (1) the proposed approach does not need to start from a pre-meshed quad boundary; (2) The frame field initialization does not put singularity lines around the medial object ofΩ; (3) Conceptually, frames are assigned to the vertices and not to the cells of the tetrahedral mesh; (4) The parametrization process is replaced by a constructive algorithm that generates a block structure, which partitionsΩin meshable regions.

@&#INTRODUCTION@&#
For some numerical simulations, engineers prefer to use hexahedral meshes than tetrahedral meshes in order to perform finite element or volume analysis. In computational fluid dynamics or for fluid–structure interactions, hexahedral meshes allow to have aligned elements along geometric boundaries. This is due to their layered structure that can be aligned along the boundary of 3D geometric domains  [1,2]. They also have interesting numerical properties, such as a reduced number of elements and a high approximation accuracy in numerous simulations in physics and mechanical engineering. However, generating high-quality hexahedral meshes is a very difficult and time-consuming task. Indeed, meshes are expected to abide by a number of rules to be of any use  [3]: (1) To align elements along the boundary and inner directional constraints. This means having hexahedra layers along each boundary or constrained surface, and rows of hexahedra along each boundary or constrained edges. (2) To maximize the hexahedra geometric quality by keeping their distortion to a minimum. The distortion of an element is evaluated by considering the min scaled Jacobian value of every single element  [4].11Perfect cubes have a value of 1, while non-convex elements have a value close to 0.To achieve this, singular edges, i.e. edges with more or less than four incident hexes, have to be introduced inside the volume to reduce global distortion, while being kept at a minimum to reduce local distortion.We consider that the automatic generation of high-quality hexahedral meshes requires to have geometric information inside the volume and not only on the boundary. Such information can be provided by a frame field, as shown in  [5–7]. In  [5], authors provide theoretical foundations to characterize frame fields that are suitable for hexahedral mesh generation but their frame field computation is generated from a meta-mesh that must be interactively built by the final user. In  [6,7], the frame field is generated by minimizing a non-linear energy function. A caveat of such methods is the impact of the initial solution that leads to a solution corresponding to local minima of the minimization function. In both works, the initial solution is obtained through a simple straightforward process that can lead to non-optimal final solution: “…propagation-based frame field initialization likely generates singular edges around the medial axis of the volume, and most of them cannot be eliminated by frame optimization”  [7]. This leads to potential high distortions for the resulting hexahedral elements, or even to unnecessary singularities. In order to overcome these limitations, we propose a novel initialization step that prevents clusters of singularities in the vicinity of the medial object ofΩ;The approach described in this paper allows us to generate block structures that can be used to generate full-hexahedral meshes. Starting from a tetrahedral meshTΩof a domainΩwith sharp features, we build a continuous frame fieldFΩonTΩas a continuous piecewise linear frame field extending a discrete unit frame field that we compute on the vertices ofTΩ. This solution differs from those proposed in  [6,7] on many points, which are the main contributions of this work:1.The quadrilateral mesh of the surface is not a parameter of our approach. We start from a geometrical domainΩand a tetrahedral meshTΩof this domain. Both the surface and the volume mesh ofΩare generated by our approach.Internal 3D frames are not defined by snapping the nearest 3D frame defined on∂Ω, but by solving an iterative process, which consists in defining internal 3D frames that are in most stable areas as first. This is essential to control the location of singularities, since the optimization problem that we will consider afterward is nonlinear and the result strongly depends on the initial solution.3D frames are not associated to tetrahedral elements but to the vertices ofTΩ. As a consequence, we do not have a discrete singularity graph made of vertices and edges ofTΩ, but a singularity graph, which is built by applying linear interpolation into each tetrahedron containing a singularity of the 3D frame field (see Definition 6). By this way, we avoid the topological cleaning process that is performed in  [6,7], where the lines of singularity lines are made of edges ofTΩ. Sharp angles between selected edges and defaults occur and have to be removed.We do not generate an atlas of parametrizations, which is very sensitive and expensive to compute. We use the singularity graph to define a domain partitioning and then a block structure, where each block can be easily meshed using a simple mapping algorithm.The remainder of this paper is structured as follows: in Section  2, related works are described before giving an overview of our approach in Section  3. Section  4 provides useful definitions to handle 3D frames. Significative details of the two main stages of the proposed approach, which are the frame field generation and the singularity graph extraction, are given in Sections  5 and 6 respectively. Eventually, results and elements of discussion are given in Section  7.

@&#CONCLUSIONS@&#
In this paper we presented a novel algorithm to generate block-structures that are adapted to hexahedral mesh generation. Following  [6,7], a frame field is used to guide the block-structure creation but our work is original in many aspects: (1) the proposed algorithm does not require a pre-meshed boundary or a predefined boundary cross field; (2) Using an optimized initialization step, we alleviate a drawback of  [6,7], preventing lines of singularities to be clustered around the medial object and lowering the energy value of the field; (3) We use a per-vertex formulation that allows us to generate smooth singularity graphs without performing post-process topological operations onTΩ; (4) Instead of performing a parametrization algorithm, a block structure is built on the singularity graph of the frame field.Improvements and future works have to be done to obtain a more robust algorithm. We consider that two main directions should be investigated. First, it would be interesting to use an adaptive process where a coarse mesh would be used to get a first estimation of the solution before refining it in the vicinity of the singularity points and lines. Such an improvement could significantly reduce the computational cost of the initialization step. Second, as we generate the frame field along the surfaces first then inside the volumes, we can meet unexpected configuration due to incompatible decisions taken on different surfaces. A major incoming improvement will be to generate the surface and volume frame field in a same process, that would only consider 3D geometric information. Eventually, the main drawback of the proposed approach is that we have no theoretical guarantee that the generated frame field corresponds to the structure of a hexahedral mesh. To achieve this, we believe that it is necessary to take into account the global structure of hexahedral meshes in the formulation of the energy to minimize, while only local line alignment is performed by now.