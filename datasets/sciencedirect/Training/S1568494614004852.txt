@&#MAIN-TITLE@&#
AGFS: Adaptive Genetic Fuzzy System for medical data classification

@&#HIGHLIGHTS@&#
Adaptive Genetic Fuzzy System (AGFS) for optimizing rules and membership functions.Examined the system with seven datasets using quantitative and qualitative analysis.Achieved average accuracy of 87%.AGFS can be functional to different types of application related to classification.

@&#KEYPHRASES@&#
Classification,Fuzzy set,Genetic Algorithm,Rule optimization,Mutation,Cross over,

@&#ABSTRACT@&#
A Genetic Fuzzy System (GFS) is basically a fuzzy system augmented by a learning process based on a genetic algorithm (GA). Fuzzy systems have demonstrated their ability to solve different kinds of problems in various application domains. Currently, there is an increasing interest to augment fuzzy systems with learning and adaptation capabilities. Two of the most successful approaches to hybridize fuzzy systems with learning and adaptation methods have been made in the realm of soft computing. The GA can be merged with Fuzzy system for different purposes like rule selection, membership function optimization, rule generation, co-efficient optimization, for data classification. Here we propose an Adaptive Genetic Fuzzy System (AGFS) for optimizing rules and membership functions for medical data classification process. The primary intension of the research is 1) Generating rules from data as well as for the optimized rules selection, adapting of genetic algorithm is done and to explain the exploration problem in genetic algorithm, introduction of new operator, called systematic addition is done, 2) Proposing a simple technique for scheming of membership function and Discretization, and 3) Designing a fitness function by allowing the frequency of occurrence of the rules in the training data. Finally, to establish the efficiency of the proposed classifier the presentation of the anticipated genetic-fuzzy classifier is evaluated with quantitative, qualitative and comparative analysis. From the outcome, AGFS obtained better accuracy when compared to the existing systems.

@&#INTRODUCTION@&#
Computational Intelligence methods such as artificial neural networks, fuzzy logic, and genetic algorithms (GAs) are admired research subjects, since they can deal with composite engineering problems which are complicated to explain by classical methods [1]. In the Computational Intelligence community hybrid approaches have gained considerable attention. One of the most popular approaches is the hybridization among Fuzzy Logic and GA that leads to genetic fuzzy systems (GFSs) [2,7,8,60,61,64]. A GFS is fundamentally a fuzzy system augmented, which includes GAs, genetic programming and evolutionary strategies among other evolutionary algorithms (EAs) by a learning process derived from evolutionary computation and GA [5]. The foremost focus here is on the problem of obtaining a compact and precise fuzzy rule-based model from examination data. Commonly, in data-driven fuzzy modeling proposal, the Takagi–Sugeno–Kang (TSK)-type fuzzy model [3] and Mamdani fuzzy model are adopted [3].A Genetic Algorithm (GAs) is one such method that has established a lot of concentration in recent journalism, owing its recognition to the opportunity of searching irregular and high-dimensional solution spaces. FRBCSs – Fuzzy Rule-Based Classification Systems [3,4,14,15] are productive and recognized tools in the machine learning framework, since they can present an interpretable model for the end user [5–8]. Including anomaly intrusion detection [9], image processing [10], there are numerous real applications in which FRBCSs have been engaged. In most of these areas, the existing or useful data consist of a high number of patterns (instances or examples) and/or variables. The inductive learning of FRBCSs suffers from exponential growth of the fuzzy rule search space in these circumstances. With the capability to investigate a large search space for appropriate solutions only requiring the performance measure, the routine definition of an FRBS can be seen as an optimization or search problem, and where GAs are a recognized and extensively used global search method. Furthermore, to incorporate a priori knowledge the generic code structure and independent presentation features of GAs make them appropriate candidates. For scheming FRBSs over the last few years these capabilities extended the use of GAs in the expansion of a wide range of approaches.In recent times, for efficient classification purpose, researchers make the hybridization of fuzzy with other technique like, neural network, genetic algorithm and decision tree. The reason behind combining the fuzzy with other techniques is that the inability of fuzzy classifier in better classification without providing the proper fuzzy rules. Neural network, decision tree and genetic algorithms are used to create the fuzzy rules and the rules generated from those techniques are then specified to the fuzzy rule base for classification process. But, to decrease the computational complexity and the number of algorithms used, rule generation and optimization within a single algorithm is required. Accordingly, the neural network and decision tree is not much proficient of selecting and optimizing the rules. Similarly to produce the optimized rules since it follow the evolutionary computation process, the genetic algorithm can be good choice.There are numerous techniques of soft computing family among, which Fuzzy Logic (FL) and Genetic Algorithm (GA) are the most significant techniques. By means of fuzzy logic based technique, imprecision, uncertainty and human oriented knowledge representation is possible; but yet self-learning and generalization of rules in not possible. Robust general purpose search algorithms that use principles motivated by natural population genetics to develop solutions to the trouble are Genetic Algorithms (GA). GA produces flexibility to interface with present models and simple to hybridize [14,15]. With intellectual information systems where genetic fuzzy methodology has been effectively implemented, among which Hybridized techniques of GA and Fuzzy are very functional real world applications. In all domains such as power system, data mining, image processing etc. the Genetic Fuzzy system is applied. The following list explains some of the problems solved by means of Genetic Fuzzy Systems.1.Diagnostic system for disease such as myocardial infraction, breast cancer, diabetes, dental development age prediction, abdominal pain, etc. [41–44].A trading system with GA for optimized fuzzy model [45].For optimizing social regulation policies [46].Self-integrating knowledge-based brain tumor diagnostics system [47].Classification of rules in dermatology data sets for medicine [48].Integrating design stages for engineering using GA [49].Multilingual question classification through GFS [50].University admission process through evolutionary computing [51].Genetic mining for topic based on concept distribution [52].Intelligent web miner with Neural-Genetic-Fuzzy approach [53].Extraction of fuzzy classification rules with genetic expression programming [54].Integrated approach for intrusion detection system using GA [55].In our work, to resolve the disadvantages of fuzzy system we have joint the genetic algorithm with fuzzy system. The basic association of the paper is given as follows: Section 2 represents the review of related works and Section 3 presents the problem description and solution. Section 4 illustrates the contributions made in the work. Section 5 discusses the proposed genetic fuzzy classifier with the applicable diagram and mathematical equations. Results and discussion is specified in section 6 and the practical implication of the proposed genetic-fuzzy classifier is discussed in Section 7. The conclusion is summed up in Section 8.This section represents the detailed survey of the fuzzy genetic system accessible in the literature particularly, in the standard journals. After cautiously analyzing the literature, by means of the genetic algorithm the drawbacks of the fuzzy classifier are solved. So, every author considered some of the drawbacks of the fuzzy system and the specific drawbacks are solved using the genetic programming method. Our research is frequently concentrated on rule generation, rule selection and membership function designing. Hence, the following table signifies the standard research papers published in the literature from 1999 to 2012. This table details their ultimate reason of applying the genetic algorithm to fuzzy system and the differentiation among the proposed methods with the earlier work (Table 1).For a range of purpose like membership Function optimization [19–21,27,28,36,39], co-efficient optimization, [3,6,13,18,22,23,25,26,29,31,37], rule generation [14,15,32,35,38], rule selection [4,5,7,8,11,12,16,17,24,30,33,34,65,66] subsequent to analyzing the literature entirely, the genetic algorithm is applied on the fuzzy system. Any one of the above function is the definitive of the authors to relate the genetic algorithm over the fuzzy system. To merge the fuzzy genetic system some of the authors used diverse kind of algorithm like adaboost, association rule discovery. Our work is to some extent different from these works i.e., 1) genetic algorithm is straightly given for the data to produce and choose the rules. 2) Fuzzy membership function is planned by association with the discretization.1)This section represents the detailed description about the problem statements of Genetic Fuzzy System (GFS). Here we stated 4 different problems and how our proposed methodology will give solutions in detailed manner. The 4 problems statements are, Expert's knowledge is needed to define the rule base.Experts knowledge is needed to design the membership function.Selection of less and suitable rules.Selection of rules with constrained length.To find the class label of testing data if we are not having the knowledge of the data, the classification with the fuzzy system is not possible because, the rules should be given to the fuzzy rule base. Suppose, the data we are having is big of normal and abnormal behavior of particular system. No one is having an idea about the behavior of system, how the system behaves normally and abnormally. For this situation, the rule definition is tough to give within the rule base so that classification with the help of fuzzy system is not possible. Here, for analyzing the historic data we need a rule generation system that should generate rules automatically. This will demolish the disadvantage of the fuzzy system. So, the important requirement here is that the generation of rules from the data without the human intervention. Solution: Here, genetic programming approach is used to generate the rules from the training data such a way that the rules can be used in fuzzy system for classification purpose. The genetic algorithm is not only used for generation of rules. The rules should be less but having the ability of detection the behavior of the system clearly. So, we adopt the genetic algorithm to generate the precise and optimized rules from the datasets.Since the designing process should have correlation with the rules specified in the rules base, designing of membership function is an additional important problem in fuzzy system. Frequently, the domain expert's can only able to propose the membership function because they are having an idea about the data and the rules agreed. Lacking human experts, the designing of membership function is basically not possible suppose, if we want to find the class label of the data. This circumstances leads to the answer for designing membership function automatically. Also, the correlation should be there for rule generation and membership function designing process. Solution: Using the deviation of attribute values in every class we are providing a simple technique for discretization and membership function. By correlating both the procedure in an automatic way, the proposed method is designed carefully.By means of the fuzzy system the quantity of rules implemented in the rule base, is an extra main problem. The system can efficiently recognize the class without much confusion if the rules are less. If the submitted rules are high, the fuzzy system's routine will be definitely affected. The capability of finding the class with the assist of these rules should be high in spite of rules being less in quantity. So, the given rules should be less in quantity and also, it should be better rules. Solution: The concept of number of rules inclusion in the rules base through the help of chromosome is incorporated in the Genetic algorithm. Furthermore, the better rules set are chosen through the help of fitness function.In the fuzzy system rules with constrained length is also a significant problem. To offer the effective classification results the rules having large length will not be adequate. So, to produce the rules from the training data the selection of optimal length is very significant. Solution: Rules generated from the training data is in various length so that the constrained length problem will be solved.The accurateness of the classification will be enhanced and also, the human interference is not required to offer the rules when we hybridize both the techniques. This will present the unique advantage of the fuzzy system such as flexibility and time efficiency. Along with, through the help of genetic algorithm the drawback of the fuzzy system is entirely overcome.By combining Genetic algorithm (GA) with the fuzzy set, we have offered an adaptive genetic fuzzy system (AGFS). Optimized Rule generation by means of GA, and classification using fuzzy classifier are the process of the proposed AGFS, which is divided into two main steps. To decide on the additional important rules that is then stored to the fuzzy rule base, primarily the training data set is specified to genetic algorithm. In the next step, for classification task the fuzzy system is considered with the rule base and membership function. In the testing phase, the input is fuzzified and then, the fuzzified input is matched with the fuzzy rules defined in the rules base. Finally, to find out whether the input is related with which class, the fuzzy score is generated after the defuzzification process.The overall process of the AGFS is separated into three steps, such as1)Optimized rule generation using GA,Automatic designing of fuzzy membership function,Classification through fuzzy system.The overall architecture of the proposed system is given in Fig. 1.Let ‘D’ be the database with ‘m’ data record. The database is separated into two sets, training dataset (DTR) and testing dataset (DTE). To produce the fuzzy rules and designing of fuzzy system the training dataset is applied. With the assist of testing dataset the classification accuracy of the proposed system is evaluated. The complete process of generating the fuzzy rules is explained by means of the following steps:To shift the input data into discretized one at first, the training dataset DTR={dij;0≤i≤mand0≤j≤n containing ‘n’ number of attributes is specified to the discretization function. Discretization is an significant step in data processing, which is used to change the data into specific interval, and the mean where the range of values is confined into a specific interval. At this point, maximum and minimum value of every attributes belonging to every class is computed and these are sorted in an ascending order. Then, the interval is recognized based on the sorted vector and the maximum and minimum values are computed for every class if the input database has three classes. It produces six elements in a vector. Consequently, these values are sorted in an ascending order and five interval ranges are acknowledged. Then, the equivalent data that comes below this interval is transformed to corresponding discretized value. The sample example is given in Table 2. After discretization function, the training dataset, DTRis transformed to the discretized format DDwhere, all the data element DD(i, j) include only the VL, L, or M if k=3.With the help of genetic algorithm once the information has been discretized, the optimized rules are created. To maintain diversity in the route of optimization process in the anticipated adaptive GA, the chromosomes are separated into sub-chromosomes. The individuals are interchanged among sub-chromosomes and the sub-chromosomes are in parallel. This procedure is achieved periodically until the greatest individuals are obtained through the set of sub-chromosomes. By means of migration operator the substitute operation is done. Migration of individuals among dissimilar sub-chromosomes lead by the application of genetic operators results in the production of new individuals. The charge of migration allows the algorithm to organize the level of diversity to be maintained inside the sub-chromosomes. The process of adaptive GA is explained in Fig. 2. The evaluation procedure of proposed adaptive GA is reviewed as follows.For the optimization problem the primary stage of GA is the production of chromosome. The chromosomes are none other than the, discretized data provided from the earlier step. The size of the chromosome is NxM, where, N is the number of rules measured and M is the attributes measured in the rule, which may be less than the number of attributes. In the same way, ‘N’ numbers of chromosomes are taken analytically from the discretized data. The generated chromosomes are examined as the primary chromosome, which is illustrated as,(1)Xi=[x0(i)x1(i),…,xNL−1(i)];0≤i≤NP−1,0≤j≤NL−1where,xj(i)is the jth gene of the chromosome, NPis the population pool, NLis the length of the chromosome.The length of the chromosomesNL=(xi(max)−xi(min)/σ)+12; where, xi(max) is the maximum value of gene, xi(min) is the minimum value of gene, and σ is the precision value. From the generated chromosome, the sub-chromosomesXi1Xi2Xin−1andXinare progressed. The sub-chromosomes are illustrated as,(2)Xi1=x0(1i)x1(1i),…,xNL−1(1i)(3)Xi2=x0(2i)x1(2i),…,xNL−1(2i)(4)Xin−1=x0(n−1)ix1(n−1)i,…,xNL−1(n−1)i(5)Xin=x0(ni)x1(ni),…,xNL−1(ni)This generation process is also known as initialization process. After generating the sub-chromosomes, the subsequent step is to estimate the fitness value for the generated sub-chromosomes. The sample chromosome is specified in Table 3.Every chromosome subsequent to the identification of fitness values, are fed to the following procedure namely genetic operations, crossover, mutation and selection. To accelerate the convergence of the optimal solution rather using ordinary mutation operation, herewith we adopt an adaptive mutation technique. Additional to the mutation, the surplus genetic operations, crossover and assortment follows a non-adaptive process.Fitness function is a kind of objective function, which is the leading target parameter to the optimized value. The fitness function is calculated by applying the subsequent formula.(6)Fi(Xj,Dja)=a=a+1ifXj==DDjaaotherwiseDerived from the frequency of the each class here, the fitness value of each chromosome is calculated. After scheming the fitness values, decide on the solution and go to step 7 otherwise, move toward to the next step 3.To discover the frequency i.e. the fitness function the chromosome is scanned in the database. The excellent chromosome is the chromosome, which is having maximum frequency. This demonstrates that the maximum data objects in the training data follow the rule specified in chromosome. Suppose we presume that the total number of records in class 1 is 20 and so the fitness of the chromosome is 18. This signifies that the rule has accurately fixed for the 90% of the data objects in the training data.The genes of the sub-chromosomes are migrated collectively, in this step. Hence, an optimal solution is received. The positions of genes in the sub-chromosomes are altered in the migration process. The matrix form for new set of sub-chromosomes is known as,(7)Xi(new)1Xi(new)2::Xi(new)n−1Xi(new)n=x0(1i)x0(2i)…x0(n−1)ix0(ni)x1(1i)x1(2i)…x1(n−1)ix1(ni)::::::::::xNL−1(1i)xNL−1(2i)…xNL−1(n−1)ixNL−1(ni)As of the new set of sub-chromosomes, the master gene and the slave genes are required. The genetic operators are functional in the new set of sub-chromosomes. The function of crossover and mutation operations is illustrated in the following steps (Fig. 3).To obtain a new chromosome called offspring the crossover process is done among two parent chromosomes. The genes are chosen and a new child chromosome is created, based on the crossover rate Cr. After generating a new chromosome, the fitness function is implemented to the recently generated child chromosome. The formula for computing the crossover rate is given as,(8)CrossoverRate(Cr)=NumberofGeneCrossoveredChromosomeLengthDerived from the mutation rate (Mr) the mutation operation is passed out. Based on the specified mutation rate here, genes are mutated randomly. The formula for computing the mutation rate is known as,(9)Mutationrate(Mr)=MPNLwhere MPis the mutation point, NLis the chromosome length.As declared earlier, by altering the mutation point dynamically the mutation is made adaptive in the future technique. With esteem to the fitness of the obtained children's mutation point the mutation point is go through the change dynamically. Primarily, all the potential mutation points are recognized from the children chromosomes that are subjected to the mutation. The steps involved in the adaptive mutation process are,1.Generate Mutation points.Evaluate each mutation point.Identify the best mutation point.Perform mutation based on the optimal point selected.The vector that represents the possible mutation points is given as follows(10)Mq(k)=mq0(k)mq1(k)mq2(k),…,mqNTx−1(k);0≤q≤Nu(k)−1In Eq. (10),Mq(k)is a vector in which the mutation point is indicated by 1s and the remaining as 0s. For each child chromosome,Nu(k)number of mutation points are possible, where,Nu(k)represents the number of one's present in the corresponding chromosome. Each element ofMq(k)is recognized as(11)mqn(k)=1;ifn(k)∈PM(k)0;elseIn Eq. (11),PM(k)is a vector that hold only the position of the genes which has ‘1’ as its element, where,PM(k)(q)∈(0,NTx−1)andPM(k)=Nu(k). Hence for the children chromosomes,∑kNu(k)possible mutation points are obtained. Best mutation point is selected from the different mutation points offered by each child chromosome based on their fitness value.To solve the exploration problem here, we have introduced another one operator, called systematic addition. In this step, we systematically take the chromosomes from the initial data and added it up. This allows the new type of chromosomes can be in the population so that the new better rules can be established.TheoremLet N be a sum number of data records in the database and ‘f’ be the number of chromosomes added analytically. Then, Niter specified by the user must be less than N/f. Since, if the Niter sum number of systematic addition is potential in the search space of genetic algorithm is f* Niter, which has to be less than N.Imagine that the database consist 100 records and the total number of chromosomes added analytically for all iteration in search space is 5. So, total number of iteration is supposed to be less than 20. If the iteration is above 20, the systematic addition is not possible because all the data values are added in the problem space already.In the termination stage, based on the fitness function the excellent chromosome is selected. Then the above process is continued until it reaches the highest number of iterations. After the conclusion of termination process, the optimized rules are fixed and then they are given to attribute pruning.The chromosome acquired from the final step with high fitness is the optimized rules observed from the genetic algorithm.Some of the attributes are detached to generate the final rule set for training the fuzzy system, after acquiring the optimized rules from the Genetic algorithm. The equivalent attributes are ejected from the rule set, if the attribute values of similar attribute are common for both classes. With the consideration of removing irrelevant attribute can lead to better result, this attributes pruning can present better classification results.The fuzzy membership function definition and fuzzy rule base are the two significant steps, which are used in designing the fuzzy system.By selecting the proper membership function, the membership function is calculated. Here, we have selected the triangular membership function to transfer the input data into the fuzzified value. The Triangular membership function consists of three vertices a, b and c of f(x) in a fuzzy set A (a: lower boundary and c: upper boundary where membership degree is zero, b: the center where membership degree is 1). One of the key issues in all fuzzy sets is how to decide fuzzy membership functions,•The membership function fully defines the fuzzy set.A membership purpose provides a measure of the degree of resemblance of an element to a fuzzy set.Membership functions can take any structure, but there are some widespread examples that appear in real applications.The formula used to calculate the membership values is depicted as below,(12)f(x)=0ifx≤ax−ab−aifa≤x≤bc−xc−bifb≤x≤c0ifx≥cFig. 4represents the plot to have overlapping values for all the four membership functions. Here, the curves for very low, low, medium and high, which are illustrated for a specific attribute.From the discretization function examined in the initial step for each attributes of data, the number of membership function required for the fuzzy definition is observed. The number of membership is selected derived from the number of interval recognized routinely. Then, every membership function, the value of a, b and c value is supposed to be defined so that the designing of membership function is accomplished. For each interval, by taking the intermediate value of ‘a’ and ‘c’ the maximum (c) and minimum (a) value is previously identified and the value of ‘b’ is computed.Using the similar procedure of Mamdani fuzzy inference system, we proposed the fuzzy system through the help of fuzzy rules and the fuzzy membership function, in which the classification process is completed. The thorough procedure involved in the proposed Adaptive Genetic Fuzzy system (AGFS) is specified in Fig. 5.We have already generated the fuzzy rule setRF={RjF;1≤j≤m−T}that is arranged in the fuzzy rule base through genetic algorithm. The rule base consist a set of fuzzy rule in the form of, IF A1 is Low and A2 is Medium and A3 is Very Low and A4 is Very Low THEN decision is Very Low.In the course of the second phase automatically, number of membership function for each attributes and their consequent triangular membership values are generated.Derived from the fuzzy membership function the testing data (DTE) is set to the fuzzy logic system, where the test data is transformed to the fuzzified value. With the fuzzy rules stated in the rule base then, the fuzzified input is coordinated. To obtain the linguistic value it is then changed to the fuzzy score, by using the average weighted method the rule inference procedure. The conclusion is generated from the fuzzy score gained.

@&#CONCLUSIONS@&#
