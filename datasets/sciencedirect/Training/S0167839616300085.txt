@&#MAIN-TITLE@&#
Direct immersogeometric fluid flow analysis using B-rep CAD models

@&#HIGHLIGHTS@&#
Immersogeometric analysis that directly uses the B-rep CAD model is proposed.A GPU-accelerated point membership classification is performed.Distribution of the surface quadrature points is crucial for accuracy.The quadrature error near the trim curves is relatively insignificant.The methodology is found effective on a 3D benchmark and an industrial problem.

@&#KEYPHRASES@&#
Isogeometric analysis,Immersed method,B-rep CAD model,Nitsche's method,GPU,Point membership classification,

@&#ABSTRACT@&#
We present a new method for immersogeometric fluid flow analysis that directly uses the CAD boundary representation (B-rep) of a complex object and immerses it into a locally refined, non-boundary-fitted discretization of the fluid domain. The motivating applications include analyzing the flow over complex geometries, such as moving vehicles, where the detailed geometric features usually require time-consuming, labor-intensive geometry cleanup or mesh manipulation for generating the surrounding boundary-fitted fluid mesh. The proposed method avoids the challenges associated with such procedures. A new method to perform point membership classification of the background mesh quadrature points is also proposed. To faithfully capture the geometry in intersected elements, we implement an adaptive quadrature rule based on the recursive splitting of elements. Dirichlet boundary conditions in intersected elements are enforced weakly in the sense of Nitsche's method. To assess the accuracy of the proposed method, we perform computations of the benchmark problem of flow over a sphere represented using B-rep. Quantities of interest such as drag coefficient are in good agreement with reference values reported in the literature. The results show that the density and distribution of the surface quadrature points are crucial for the weak enforcement of Dirichlet boundary conditions and for obtaining accurate flow solutions. Also, with sufficient levels of surface quadrature element refinement, the quadrature error near the trim curves becomes insignificant. Finally, we demonstrate the effectiveness of our immersogeometric method for high-fidelity industrial scale simulations by performing an aerodynamic analysis of an agricultural tractor directly represented using B-rep.

@&#INTRODUCTION@&#
Immersogeometric analysis was first introduced by Kamensky et al. (2015) as a geometrically flexible technique for solving computational fluid–structure interaction (FSI) problems involving large, complex structural deformation. The method analyzed a surface representation of the structure by immersing it into a non-boundary-fitted discretization of the background fluid domain and focused on accurately capturing the immersed geometry (and hence the name immersogeometric) within non-boundary-fitted analysis meshes. The method was successfully applied to the FSI simulation of bioprosthetic heart valves (Kamensky et al., 2015; Hsu et al., 2014, 2015a). The immersogeometric method was further investigated by Xu et al. (2016) in the context of a tetrahedral finite cell approach (Varduhn et al., 2016) for the simulation of incompressible flow, both laminar and turbulent, around geometrically complex objects. The motivation was to alleviate the difficulties associated with computational fluid dynamics (CFD) mesh generation around complex design geometries. Typical mechanical computer-aided designs (CAD) are so complex that they cannot be handled by CFD mesh generation software independently and automatically, but require human analysts to perform intermediate steps such as defeaturing, geometry cleanup, and mesh manipulation (Marcum and Gaither, 2000; Wang and Srinivasan, 2002; Beall et al., 2004; Lee et al., 2010). The immersogeometric method was proposed to eliminate these labor-intensive procedures from the CFD simulation pipeline while still maintaining high accuracy of the simulation results.In recent years, the development of isogeometric analysis (IGA) (Hughes et al., 2005; Cottrell et al., 2009) has paved a path towards a tighter integration of engineering design and computational analysis. The core idea of IGA is to use the same basis functions for the representation of geometry in CAD and the approximation of solution fields in finite element analysis (FEA). Aside from its potential to eliminate unnecessary labor from the design-through-analysis pipeline (Schillinger et al., 2012a; Breitenberger et al., 2015; Hsu et al., 2015b), IGA has attracted a great deal of attention due to the improvements in solution quality that follow from incorporation of smooth basis functions into engineering analysis (Cottrell et al., 2007; Akkerman et al., 2008). Over the last decade, IGA has been successfully employed in many areas of engineering and sciences, such as fluid mechanics and turbulence (Bazilevs et al., 2007a; Bazilevs and Akkerman, 2010; Akkerman et al., 2011; Evans and Hughes, 2013; Liu et al., 2013), structural and contact mechanics (Cottrell et al., 2006; Kiendl et al., 2009; Benson et al., 2010b; De Lorenzis et al., 2011; Temizer et al., 2012), fluid–structure interactions (Bazilevs et al., 2008, 2012), phase-field modeling (Gomez et al., 2008; Borden et al., 2014), collocation (Auricchio et al., 2010; Schillinger et al., 2013; Reali and Gómez, 2015), efficient quadrature rules (Hughes et al., 2010; Auricchio et al., 2012; Schillinger et al., 2014), boundary element methods (Simpson et al., 2012; Scott et al., 2013), shape and topology optimization (Dedè et al., 2012; Kiendl et al., 2014; Kostas et al., 2015), finite cell methods (Rank et al., 2012; Schillinger et al., 2012b; Schillinger and Ruess, 2015), trimmed geometries and patch coupling (Schmidt et al., 2012; Ruess et al., 2014; Guo and Ruess, 2015), analysis-suitable trivariate models (Zhang et al., 2007; Stein et al., 2012; Liu et al., 2014), T-splines (Bazilevs et al., 2010a; Scott et al., 2012; Li and Scott, 2014), and standardized file formats for data exchange between CAD and FEA packages (Benson et al., 2010a; Borden et al., 2011; Scott et al., 2011).Despite the progress achieved in the last few years, several challenges remain in effectively using IGA to improve the engineering design process. Perhaps the biggest challenge is the construction of analysis-suitable geometric models. The typical industry standard for the representation of geometry in mechanical CAD systems is non-uniform rational B-splines (NURBS)-based boundary representations (B-reps). Although B-reps are ubiquitous in the CAD industry, they are not commonly used in analysis due to the challenges associated with directly using the B-rep information to perform geometric operations such as surface integration. Hence, the common practice in mechanical analysis (CFD or FEA) is to preprocess the B-reps by tessellating them into triangles and then using the triangular surface mesh in the simulations. Generating the surface tessellations of complex CAD models is time-consuming and labor intensive, since the geometry needs to be manually checked to avoid creating any intersecting or non-manifold features (such as hanging nodes) during tessellation. In addition, the tessellation of curved surfaces represented using spline surfaces introduces a tessellation error depending on the size of the triangles used to approximate them.A pioneering work using NURBS-based B-rep models directly in nonlinear isogeometric shell analysis was presented by Breitenberger et al. (2015). However, directly using B-rep models in flow analysis is still limited because for flow simulations, the meshing of the surrounding fluid domain needs to be considered in addition to having the object surface discretization. Generating a high-quality boundary-fitted fluid mesh requires intense manipulation of the surface mesh. Although there have been advances in using analysis-suitable trivariate T-splines (Zhang et al., 2013; Wang et al., 2013; Liu et al., 2014) for volumetric discretization, using T-splines for CAD and CFD meshing continues to be limited by the geometric problems associated with the surface. To overcome these challenges, we present a novel method for immersogeometric fluid flow analysis that directly uses the CAD B-rep of a complex object and immerses it into a non-boundary-fitted discretization of the surrounding fluid domain. This work is inspired by Rank et al. (2012), who proposed to extend the finite cell method (Parvizian et al., 2007; Düster et al., 2008) to use CSG-tree and B-rep information for point membership classification, such that geometric models can be directly used in the finite cell analysis.The immersogeometric method for CFD is comprised of the following main components. A variational multiscale (VMS) formulation of incompressible flow (Hughes et al., 2000, 2001, 2004; Bazilevs et al., 2007a) is used, which provides accuracy and robustness in both laminar and turbulent flow conditions. The Dirichlet boundary conditions on the surface of the immersed objects are enforced weakly in the sense of Nitsche's method (Nitsche, 1970; Bazilevs and Hughes, 2007). Adaptively refined quadrature rules are used to faithfully capture the flow domain geometry in the discrete problem without modifying the non-boundary-fitted background mesh. It was found by Xu et al. (2016) that the faithful representation of the geometry in intersected elements is critical for accurate immersogeometric fluid flow analysis.To simulate fluid flow past B-rep CAD models using the immersogeometric method, two key geometric operations need to be performed. The first is to evaluate points on the surface of the solid model to enforce Dirichlet boundary conditions. The second is to perform point membership classification on the points belonging to the background mesh to identify points inside the solid CAD model. Both operations need to be performed adaptively for the CFD analysis to be accurate and converged. In this paper, we have developed new methods to perform these operations directly using the B-rep of the CAD model.The boundary of solid models created using CAD systems is usually represented using multiple trimmed NURBS surfaces. Previous implementations of immersogeometric analysis using complex CAD models rely on triangular tessellation of surfaces for analysis. Tessellating these surfaces to create surface triangulations requires the use of adjacency information usually stored in the B-rep of the solid model to prevent gaps; tessellating the surfaces individually can lead to generation of small gaps along the edges of adjacent surface patches. This makes the tessellation process more tedious and requires specialized algorithms. In addition, since these surfaces are usually trimmed, additional surface quadrature points need to be evaluated close to the trim curves. In our method, we directly make use of the trimmed-NURBS surfaces without tessellating them. The surfaces are evaluated uniformly to the required level of precision and the parametric locations close to the trim curves are adaptively refined to include additional surface quadrature points as required.Point membership classification (e.g., of the vertices of the background mesh) is traditionally performed using a ray-tracing approach (Rossignac and Requicha, 1999; Requicha and Voelcker, 1985). Any point inside the solid model intersects the surface of the model an odd number of times. Performing this operation directly on B-reps consisting of trimmed NURBS surfaces is a compute-intensive operation. Hence, in our method, we create a high-resolution voxelization of the CAD model using GPU rendering of trimmed-NURBS surfaces (Krishnamurthy et al., 2009, 2011). This voxelization is then used to perform point membership classification on vertices of the background mesh. The same operation is repeated to perform point membership classification on the volume quadrature points in the background mesh.This paper is organized as follows. In Section 2, we briefly review the variational problem and solution strategies for immersogeometric analysis. In Section 3, we discuss the B-rep data structure and surface quadrature rules for B-rep-based immersogeometric analysis. In Section 4, we present a GPU-accelerated point membership classification technique for inside–outside test against B-rep models. In Section 5, we apply our proposed methods to the simulations of flow around a sphere as a benchmark study to investigate the influence of trimmed surfaces, and a full-scale agriculture tractor (Fig. 1) to demonstrate the ability of our B-rep-based immersogeometric method for the aerodynamic analysis of industrial-scale problems. In Section 6, we draw conclusions.In this section, we present the key features of immersogeometric fluid flow analysis. The components include a variational multiscale (VMS) formulation of incompressible flow (Hughes et al., 2000, 2001, 2004; Bazilevs et al., 2007a), the weakly enforced Dirichlet boundary conditions on the surface of the immersed objects (Bazilevs and Hughes, 2007; Xu et al., 2016), and the adaptively refined quadrature rules for faithfully capturing the geometry in intersected background elements. The last is critical for accurate immersogeometric fluid flow analysis, as shown in Xu et al. (2016).Let Ω (subsets ofRd,d∈{2,3}) denote the spatial domain and Γ be its boundary. Consider a collection of disjoint elements{Ωe},∪eΩe⊂Rd, with closures covering the fluid domain:Ω⊂∪eΩe‾. Note thatΩeis not necessarily a subset of Ω. LetVuhandVphbe the discrete velocity and pressure spaces of functions supported on these elements. The VMS discretization of the Navier–Stokes equations of incompressible flows is stated as: Find fluid velocityuh∈Vuhand pressureph∈Vphsuch that for all test functionswh∈Vuhandqh∈Vph:(1)BVMS({wh,qh},{uh,ph})−FVMS({wh,qh})=0,where(2)BVMS({wh,qh},{uh,ph})=∫Ωwh⋅ρ(∂uh∂t+uh⋅∇uh)dΩ+∫Ωε(wh):σ(uh,ph)dΩ+∫Ωqh∇⋅uhdΩ−∑e∫Ωe∩Ω(uh⋅∇wh+∇qhρ)⋅u′dΩ−∑e∫Ωe∩Ωp′∇⋅whdΩ+∑e∫Ωe∩Ωwh⋅(u′⋅∇uh)dΩ−∑e∫Ωe∩Ω∇whρ:(u′⊗u′)dΩ+∑e∫Ωe∩Ω(u′⋅∇wh)τ‾⋅(u′⋅∇uh)dΩ,and(3)FVMS({wh,qh})=∫Ωwh⋅ρfdΩ+∫ΓNwh⋅hdΓ.In (2),u′is defined as(4)u′=−τM(ρ(∂uh∂t+uh⋅∇uh−f)−∇⋅σ(uh,ph))andp′is given by(5)p′=−ρτC∇⋅uh.In the above equations, ρ is the density of the fluid, f is the external force per unit mass,σandεare the stress and strain-rate tensors, respectively, and h is the traction vector at the Neumann boundaryΓN. The terms integrated over element interiors may be interpreted both as stabilization and as a turbulence model (Brooks and Hughes, 1982; Tezduyar, 1992; Tezduyar and Osawa, 2000; Hughes et al., 2001; Bazilevs et al., 2007a; Hsu et al., 2010).τM,τCandτ‾are the stabilization parameters. Their detailed expression used in this work can be found in Xu et al. (2016).The standard way of imposing Dirichlet boundary conditions in Eq. (1) is to enforce them strongly by ensuring that they are satisfied by all trial solution functions. This is not feasible in immersed methods. Instead, the strong enforcement is replaced by weakly enforced Dirichlet boundary conditions proposed by Bazilevs et al. (Bazilevs and Hughes, 2007; Bazilevs et al., 2007b, 2010b). The semi-discrete problem becomes(6)BVMS({wh,qh},{uh,ph})−FVMS({wh,qh})−∫ΓDwh⋅(−phn+2με(uh)n)dΓ−∫ΓD(2με(wh)n+qhn)⋅(uh−g)dΓ−∫ΓD,−wh⋅ρ(uh⋅n)(uh−g)dΓ+∫ΓDτTANB(wh−(wh⋅n)n)⋅((uh−g)−((uh−g)⋅n)n)dΓ+∫ΓDτNORB(wh⋅n)((uh−g)⋅n)dΓ=0,whereΓDis the Dirichlet boundary that may cut through element interiors,ΓD,−is the inflow part ofΓD, on whichuh⋅n<0, g is the prescribed velocity onΓD,τTANBandτNORBare stabilization parameters that need to be chosen element-wise as a compromise between the conditioning of the stiffness matrix, variational consistency, and the stability of the formulation.For immersogeometric methods, weakly enforced boundary conditions are particularly attractive as the additional Nitsche terms (the third to last terms on the left-hand side of Eq. (6)) are formulated independently of the mesh. In contrast to strong enforcement, which relies on boundary-fitted meshes to impose Dirichlet boundary conditions on the discrete solution space, the Nitsche terms also hold for intersected elements, where the domain boundary does not coincide with element boundaries. All that is needed is a separate discretization of the domain boundary with quadrature rules whose position of the quadrature points in intersected elements is known or can be determined. In Xu et al. (2016), the geometry of the object was described by the stereolithography (STL) format, which uses polygons (mostly triangles) to discretize (tessellate) the object surface. However, modern CAD models are typically described using B-rep, and the conversion from B-rep to STL is not trivial, especially when the geometry is not “watertight”. In this work we tackle this issue by performing the surface integration of the weak boundary conditions directly using B-rep model information. This novel approach eliminates the need for a different discretization of the object surface and allows use of the actual CAD model directly for the purpose of immersogeometric analysis. This approach also shares the same philosophy with isogeometric analysis (Hughes et al., 2005; Cottrell et al., 2009)—bridging the gap between design and analysis.Another advantage of weakly enforced Dirichlet boundary conditions is the release of the point-wise no-slip condition at the boundary of the fluid domain. Although maybe counterintuitive at first sight, some violation of the no-slip boundary condition is in fact desirable, as it allows the flow to slip on the solid surface and imitates the presence of the thin boundary layer that typically needs to be resolved with spatial refinement. It was shown in Bazilevs et al. (2010b) and Hsu et al. (2012) that weak boundary conditions allow for an accurate overall flow solution even if the mesh size in the wall-normal direction is relatively large. Weak enforcement of Dirichlet boundary conditions also provides special benefits in turbulent flow simulation (Bazilevs et al., 2007b, 2010b). In the immersogeometric method, the fluid mesh is arbitrarily cut by the object boundary, leaving a boundary layer discretization of inferior quality compared to the boundary-fitted counterpart. However, it was shown in Xu et al. (2016) that accurate laminar and turbulent flow solutions were obtained using the immersogeometric method with a mesh resolution and refinement pattern comparable to the boundary-fitted mesh used to obtain the reference values. We believe this is partially attributed to using the weak boundary condition formulation.The immersogeometric method introduces elements that are intersected by the geometric boundary, which creates complex, discontinuous integration domains in intersected elements. To ensure geometrically accurate evaluation of volume integrals in intersected elements, we use a sub-cell-based adaptive quadrature scheme (Düster et al., 2008; Xu et al., 2016). The basic concept is to increase the number of quadrature points around immersed geometric boundaries so that arbitrary integration domains resulting from the intersecting boundary can be taken into account accurately. This is achieved by recursively splitting intersected cells into sub-elements. At each level, only those sub-elements intersected by the boundary are further split. For clarity, we illustrate the quadrature scheme based on adaptive sub-cells for triangles in 2D in Fig. 2. We emphasize that splitting is performed on the quadrature level only and does not affect the basis functions, which are still defined on the original tetrahedral element.We complete the discretization of Eq. (6) by a time integration scheme from the family of generalized-α methods (Chung and Hulbert, 1993; Jansen et al., 2000; Bazilevs et al., 2008), which is a fully-implicit, second-order accurate method with control over the dissipation of high-frequency modes. At each time step, the solution of a nonlinear algebraic problem is required. We directly apply Newton–Raphson iterations (with an approximate tangent) to converge the residual of this algebraic problem. For each Newton–Raphson iteration, the linear system is solved using a block-diagonal preconditioned GMRES method (Saad and Schultz, 1986; Shakib et al., 1989). The computations reported in this work are carried out in a parallel computing environment on Linux clusters. A description of our parallelization strategy can be found in Hsu et al. (2011) and a strong linear scaling of the immersogeometric method was shown in Xu et al. (2016). The mesh is partitioned into subdomains using METIS (Karypis and Kumar, 1999), and each subdomain is assigned to a processor core.In B-rep, the boundary of a CAD model is represented using a set of faces. The geometry of the faces is usually represented using tensor product NURBS surface patches. In addition, the B-rep data also includes information regarding the topology of the CAD model: the connectivity between the faces. This information is used to create watertight, 2-manifold, tessellations of the CAD model.Representing B-rep faces using traditional NURBS surfaces restricts them to topologically rectangular sheets; they are not very flexible, especially when it comes to representing surfaces that are not rectangular or those with holes or complex local geometries that arise due to Boolean operations. Therefore, the NURBS patches are trimmed, discarding a portion of the surface defined in the parametric domain. An example of a trimmed NURBS surface in a CAD model is shown in Fig. 3(a). The trimming information is defined in the 2D parametric domain of the surface (Fig. 3(b)). Typically, trim curves are represented as directed closed loops; the direction of the loop determines which side of the trim curve to cut away. There can also be multiple loops per surface, one defining the boundary and others defining interior holes, or even holes within holes. In conventional CAD B-rep, there is at least one trim curve that bounds the valid surface region for every surface (even if is the trivial outer boundary) in order to have a consistent representation.The Dirichlet boundary conditions on the surface are imposed in the weak sense in our immersogeometric method. This requires the evaluation of the surface integrals of Eq. (6) on the object surface. These weak boundary conditions are evaluated at the surface Gaussian quadrature points.11We typically use(p+1)Gaussian integration points per parametric direction for each knot span. p is the degree of the NURBS.For untrimmed NURBS surfaces, the surface quadrature points can be directly evaluated based on standard Gaussian quadrature rules. However, in the presence of trimmed NURBS surfaces, the surface quadrature points need to be checked if they lie inside the trim curves of the surface.22The regions inside and outside the trim curves are called the trimmed surface and trimmed-out section, respectively.In addition, for accurate evaluation of the function near the trim curve, the surface needs to be adaptively sampled around the trim curve.The adaptive quadrature for trimmed NURBS is implemented by first dividing the base untrimmed NURBS surface patches into quadrature elements for each knot span. The Gauss quadrature points for each quadrature element are generated in the parametric space. The parametric location of each Gauss point is then tested using the trim curves to classify them as inside or outside the trimmed-out section of the quadrature element. Those quadrature elements that have some Gauss points outside the trimmed-out section (inside the trimmed surface) are recursively refined using the sub-cell approach and the process is repeated with new Gauss quadrature points generated inside each refined quadrature element. This approach is illustrated in Fig. 4.

@&#CONCLUSIONS@&#
In this paper, we presented a new method for immersogeometric fluid flow analysis that directly makes use of the CAD B-rep of a complex object and immerses it into a locally refined, non-boundary-fitted background fluid mesh to avoid the challenges associated with geometry cleanup and mesh generation and manipulation. To assess the accuracy of the proposed method, we performed computations of the benchmark problem of flow over a sphere represented using B-rep. Quantities of interest such as drag coefficient were in good agreement with reference values reported in the literature. The results showed that the density and distribution of the surface quadrature points are crucial for accurate high-fidelity flow analysis. Also, with sufficient levels of surface quadrature element refinement, the quadrature error near the trim curves became insignificant. Finally, we demonstrated the effectiveness of our immersogeometric method for industrial scale simulations by performing an aerodynamic analysis of an agricultural tractor directly represented using B-rep.