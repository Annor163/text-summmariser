@&#MAIN-TITLE@&#
IdealKnock: A framework for efficiently identifying knockout strategies leading to targeted overproduction

@&#HIGHLIGHTS@&#
IdealKnock can be employed to efficiently identify excellent knockout strategies for the overproduction of various products.IdealKnock breaks through the common bottleneck of knockout number limitation, and gene–reaction relationship is well considered.The knockout strategies given by IdealKnock are generally robust, which means the maximum and minimum production rate are close.

@&#KEYPHRASES@&#
Genome-scale metabolic network models,OptKnock,OptGene,Knockout strategies,

@&#ABSTRACT@&#
In recent years, computer aided redesigning methods based on genome-scale metabolic network models (GEMs) have played important roles in metabolic engineering studies; however, most of these methods are hindered by intractable computing times. In particular, methods that predict knockout strategies leading to overproduction of desired biochemical are generally unable to do high level prediction because the computational time will increase exponentially. In this study, we propose a new framework named IdealKnock, which is able to efficiently evaluate potentials of the production for different biochemical in a system by merely knocking out pathways. In addition, it is also capable of searching knockout strategies when combined with the OptKnock or OptGene framework. Furthermore, unlike other methods, IdealKnock suggests a series of mutants with targeted overproduction, which enables researchers to select the one of greatest interest for experimental validation. By testing the overproduction of a large number of native metabolites, IdealKnock showed its advantage in successfully breaking through the limitation of maximum knockout number in reasonable time and suggesting knockout strategies with better performance than other methods. In addition, gene–reaction relationship is well considered in the proposed framework.

@&#INTRODUCTION@&#
During these years, increasing amounts of genomic, proteomic and transcriptomic data are becoming available, and at the same time, many GEMs that serve as scaffolds for omic data integration have been reconstructed (Akesson et al., 2004; Borodina and Nielsen, 2005; Schwartz and Gaugain, 2011). These GEMs have triggered a new concept in metabolic engineering, termed ‘in silico metabolic engineering’. In silico metabolic engineering is less time-consuming and giving more systematic answer compared to traditional intuitive strategies. However, given the increasing complexity and scale of the metabolic network model, it is a great challenge to identify optimal strategies for redesigning the network leading to improved production of the desired biochemical.In these years, many algorithms have been developed for redesigning or analyzing metabolic networks leading to overproducing of targeted products (Curran et al., 2012; Feist and Palsson, 2008; Osterlund et al., 2012). These redesign algorithms can be classified into four types by their suggested manipulations, which are knockout, up-regulation, down-regulation, and heterologous knock in. One of the earliest and most well-known algorithms is OptKnock (Burgard et al., 2003), which identifies knockout strategies that lead to the highest potential production based on bi-level optimization. Later, a derived algorithm of OptKnock, named RobustKnock (Tepper and Shlomi, 2010), was developed to search for knockout strategies that led to the highest minimum potential production, by accounting for the presence of competing pathways. Another derived method, OptReg (Pharkya and Maranas, 2006), extends the function of OptKnock to allow prediction of up- or down-regulation of reactions. However, OptReg is very complex and time-consuming. Later, OptStrain (Pharkya et al., 2004) further extends OptKnock to be able to suggest knock-in of non-native reactions or pathways combined with knockouts to achieve overproduction of the desired biochemical, based on the idea that introduce foreign pathways may enhance native production. Another two recently developed methods named ReacKnock and GDBB (Egen and Lun, 2012) challenged the inner dual transformation system of bi-level optimization in OptKnock, and greatly improved the searching efficiency (Xu et al., 2013). These methods are all based mainly on the flux balance analysis (FBA) method (Orth et al., 2010) and multi-level optimization (usually consisting of two optimization problems: inner optimization of cellular objective and outer optimization of production). Multi-level optimization requires global search, but global search essentially involves combinations for which the numbers increases exponentially when high-level manipulations are required. To reduce the computational cost, Kim et al. (2011) introduced several techniques that included screening candidates and imposing bounds on dual variables, and developed two algorithms named SimOptStrain and BiMOMA. The SimOptStrain framework was derived directly from OptStrain, and BiMOMA changed the OptKnock’s inner FBA optimization into an MOMA (minimization of metabolic adjustment) optimization (Segre et al., 2002). As the gene–reaction network in a biosystem is very complicated, almost all the methods mentioned above (including GDBB, which only considers the complicated relationship by deleting enzymes but not genes) have difficulties in dealing with the relationship properly and may give knockout strategies that are unrealistic in terms of gene manipulations. OptGene (Patil et al., 2005) is a previously developed method that directly searches gene knockout strategies using genetic algorithm. Compared with OptKnock, the calculation time of OptGene is reasonable and the calculation framework is flexible, since complex objective such as Biomass-Production Coupled Yield (BPCY) could be introduced as a screening criterion. However, OptGene has the problem of falling into local optimum solution rather than the global one. Another method named GDLS (Lun et al., 2009) further improved the computational efficiency, but would still miss the global optimal solution. Some of these algorithms, such as OptKnock and OptGene, have been applied to in vivo applications (Asadollahi et al., 2009; Fong et al., 2005), showing the great potential of in silico metabolic engineering. Recently, another algorithm named FastPros (Ohno et al., 2013) utilizing shadow price as a new screening criterion could further improve the performance in silico metabolic engineering. However, methods that identify up-regulations or down-regulations are still very rare, and OptForce (Ranganathan et al., 2010), FSEOF/FVSEOF (Choi et al., 2010; Park et al., 2012) and Redirector (Rockwell et al., 2013) are the outstanding ones among this type of methods.Almost all the methods mentioned above have quite limited capability in searching for high level knockout strategies and cannot properly handle the gene–reaction relationship. Although some of them could identify 10 or more knockouts (i.e. OptGene, GDLS), it takes quite a long time (usually more than 10h for a medium sized GEM). In addition, their time expenses increase dramatically when searching for higher level knockout strategies. In this study, we propose a novel algorithm, named IdealKnock, for identifying knockout strategies, which has significant advantages of reducing computation time, a non-restricted maximum knockout number, and properly handle the gene–reaction relationship. IdealKnock scans for thousands of mutants with potential positive production of desired chemicals by simply considering knockouts and hereafter, directly identifies knockout targets with the guidance of overproducing phenotypes of selected mutants in a way of iterative search. IdealKnock can identify strategies within a few minutes while the number of knockouts is not explicitly limited before searching, thus it allows for comprehensive/whole genomic metabolic engineering designs.FBA is the most commonly used and validated method to determine flux distribution (Curran et al., 2012; Edwards et al., 2001; Lewis et al., 2010), which assumes that organisms use substrates to maximize their growth rate and, thus, eventually to adapt to changes in the environment. The FBA method has been incorporated into COBRA Toolbox. In this study, we used FBA to calculate the flux distributions. In addition, flux variability analysis (Mahadevan and Schilling, 2003), which has also been incorporated into COBRA Toolbox, was used to find out the potential maximal and minimal flux of each reaction. All optimization problems were solved in Matlab (version 7.12.0.635 (R2011a)) with COBRA Toolbox 2.0 incorporated. The solvers ‘glpk’ (version 4.35) and Tomlab/CPLEX (version 7.9) were used for FBA and OptKnock (which has also been incorporated into COBRA Toolbox), respectively. All procedures were implemented on a personal computer with 3.40GHz Intel(R) Core(TM) i7-2600k and 16.0 GB RAM.The Escherichia coli model iAF1260 (Feist et al., 2007), is a large and high-quality GEM. It is a comprehensive model that has been verified against large amounts of experimental data, such as growth phenotypes validations on different substrates and genetic conditions. All simulations were carried out under the condition of minimal glucose medium. The maximum glucose uptake rate was set to 10mmol/gDW/h.It should be noticed that few existing methods can properly handle the gene–reaction relationship. One could better understand this by considering the situation below:Reaction A is associated with a gene set (a and b), reaction B is associated with a gene set (a or c). Assume that gene b and c is essential for growth. Then, for methods like OptKnock and ReacKnock, they may give a knockout strategy involves reaction B. Apparently, the strategy involves disturbing the essential gene c, thus not feasible. For methods like GDBB, they may suggest a strategy including a gene set (a and b), which may mislead someone choose to disturb gene b in case of not realizing that b is essential. GDBB may also indicate knock out gene set of (a or c) while c is an essential gene. In our study, IdealKnock can directly give gene knockout strategies, yet also be able to suggest reaction knockout strategy and taking the gene–reaction relationship into consideration at the same time.IdealKnock is a top-down framework which first scans for the mutants of interest, and then identifies a knockout strategy achieving it. The whole procedure of IdealKnock (as shown in Fig. 1) can be divided into two stages: (1) to design an ideal flux distribution which involves the steps of finding key reactions (denoted as KeyRxns in the flowchart), sampling and evaluating mutants; (2) to identify knockout targets based on the guidance of a designed ideal flux distribution which involves the step of iterative searching process.Ideal-type flux distribution (ITF) is an important concept in IdealKnock since it directly guides the process of searching knockout targets from hundreds of candidates. For a specific strain, the ideal flux distribution (ideal-type) can be directly calculated by optimizing production rate with a minimum growth guaranteed (i.e. Vgrowth>P×maximum growth rate, where 0<P<1). Thus, in the ITF, once the growth is guaranteed, the rest of resources are directed to the synthesis of desired product, which is the most ideal way to transform resources into biomass and production. Here an ideal point is defined by the growth rate and production rate of the ideal-type fluxes, i.e. ideal point=(growth rate, production rate).ITF plays a key role in discovery of knockout targets In IdealKnock. For a specific strain, what kind of ITF is needed to get a knockout strategy with a high production rate? Intuitively, the ITF with the highest production rate is desired and this means that the lowest P is needed. Here, in the case of succinate production, we obtained 100 different ITFs with 100 P values ranging from 0 to 1 (step=0.01). In the following trials, ideally, all reactions carrying no fluxes in ITF were directly removed, and the flux distribution of the mutant was recalculated by optimizing biomass (see dot points in Fig. 2). Interestingly, according to the dot-line, we could see that the production ability of the 100 mutants decreased but not continuously with increasing P values. The phenomenon implies that the lower the P value is, the higher possibility there is for us to discover a near-global optimal engineering mutant. Thus, throughout this study, the value of P was set to 0.05 for IdealKnock.For a specific strain, as described above, 100 samples of ideal flux distributions could be obtained together with 100 ideal points defined by the corresponding growth rates and production rates. Here an ideal production line (IPLine) is defined by a line joining these 100 ideal points. Apparently, not all the points on the IPLine can be reached by simply considering the knockout of reactions. To determine how many ideal points were reachable or could be approximately reached by deleting reactions only, the blocked reactions were first identified from the ideal flux distribution. Among these identified blocked reactions only those whose corresponding genes were not associated with other flux-carrying reactions in the ideal flux distribution were removed, and both growth rate and production rate were recalculated based on the optimization of cell growth. The point defined by the newly obtained growth and production (the production equals the fitness in Fig. 1) was considered reachable by knocking out reactions, and it generally located on or below the IPLine. Such a point is defined as a reachable ideal point, and higher reachable piont means higher production rate. In case of succinate production, only one reachable ideal point with positive production was obtained from 100 samples of the wild-type strain, as marked by ‘+’ in Fig. 3.A specific P value of 0.05 was used for sampling reachable ideal points throughout this study. Reachable ideal point of the wild-type strain does not necessarily have a positive production or the best production in terms of production rate or BPCY, thus thousands of reachable ideal points of mutants were also examined. Again, taking succinate production in the wild-type strain as an example, oxygen uptake rate was set to 18.5mmol/gDW/h. First, method FVA was applied to determine must reactions (denotes asMustRxnsin Fig. 1) which must carry fluxes when production was optimized and certain growth was maintained. Furthermore, reactions that must carry fluxes (denotes asBasicRxnsin Fig. 1) in order to maintain a certain percentage of maximum growth rate and maximum production rate were excluded from the MustRxns set, resulting in a key reaction set (denotes asKeyRxnsin Fig. 1). Then, a large number of mutants were obtained by knocking out a maximum of k reactions randomly selected from the key reaction set. Undoubtly, mutants derived in this way are likely to have different IPLines from that of the wild-type strain, and their reachable ideal points are likely close to the ideal point of the wild-type strain. Thus, sampling this kind of reachable points will greatly increase the chance to discover a near-global optimal knockout strategy, and this is important for IdealKnock to identify a good knockout strategy. It should be noted that a smaller k is likely (but not necessarily) to lead to a higher reachable ideal point since it corresponds to a higher IPLine. The default value for k was 2. According to our experience, a higher k value means a dramatically increased computing time, but does not necessarily result in a better solution. The IPLines of 12 mutants were shown in Fig. 1 as examples. Twelve reachable ideal points were identified (‘*’ in Fig. 1) for 12 mutants respectively. Generally, the mutant with the highest reachable ideal point in terms of production rate or BPCY could be selected for further identification of reaction knockouts. The ITF of this selected mutant is what we are looking for, and it will guide the iterative knockout search. The whole process of designing this ideal-type flux distribution only involves regular linear programming, which could be completed efficiently by using parallel computing toolbox in Matlab.ITF represents an ideal-type strain which has great production potential, and it is quite difficult to find a concise strategy to transform the wild-type strain into the ideal-type strain. Here, in order to find knockout strategies to overproduce desired product, we designed an iterative searching process based on the ITF. The core process to identify knockout set is described below and visualized in the lower half of Fig. 1: (1) Wild-type flux distribution was calculated by optimizing biomass. (2) Determine knockout. Find out reactions carrying fluxes in the wild-type flux distribution while being blocked in ideal flux distribution. To reduce the size of final knockout set, these reactions or genes associated with these reactions will be ranked by positive score (descending order), potential positive score (descending order), and number of associated genes (ascending order). When a reaction or gene set is removed, the positive score equals the number of joint deleted reactions (as gene–reaction relationship is considered) that are members of the identified knockouts in this turn, and potential positive score equals number of reactions associated with the deleted genes meanwhile are members of the identified knockouts in this iterative turn. At last, the reaction which ranked first as well as its joint reactions would be knocked out (if knockout type is gene, the first ranked gene will be deleted). The resulted mutant is named mutantA, and a transition flux distribution is achieved by optimizing biomass. (3) Similar to (1) and (2), the role of wild-type flux distribution is replaced by transition flux distribution, and a new set of knockout candidates is identified. Again, the new mutant takes the role of mutantA later. (4) Iterative process. Perform (3) iteratively until no knockout candidates are identified. During the iterative process, the knocked reactions or genes are accumulated gradually, and consist a quite simplified final knockout set. Normally, the searching procedure can be completed within one minute.IdealKnock identifies accumulated knockouts in an iterative searching way, thus in most cases, the final knockout set is redundant and needs to be refined. OptKnock and OptGene were then used as the primary tool to extract the most concise and effective knockout strategies from the final set. Because the number of the knockout candidates predicted by IdealKnock (usually <100) was quite small compared to the size of genome-scale model and deletion of all or part of the candidates can guarantee a production, OptKnock could be implemented very efficiently with calculation time ranging from only seconds to several minutes even when the maximum knockout number was assigned to be more than ten. Also, based on the result of IdealKncok, OptGene could also be performed within much more reasonable time. In addition, if someone is interested in obtaining the best mutants with a fixed knockout number, OptKnock could be implemented for all available mutants with different positive production. Therefore, the optimal mutants with the best production could be selected from the resulting strategies obtained by OptKnock. In this case, the computing time will increase to a few hours, which is still acceptable.

@&#CONCLUSIONS@&#
