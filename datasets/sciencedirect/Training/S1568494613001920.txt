@&#MAIN-TITLE@&#
Design of a grey-prediction self-organizing fuzzy controller for active suspension systems

@&#HIGHLIGHTS@&#
This study developed a grey-prediction self-organizing fuzzy controller (GPSOFC) for active suspension systems.The GPSOFC employs a grey-prediction algorithm to pre-correct fuzzy rules to reasonable ones for active suspension control.The GPSOFC eliminates the problem caused by the self-organizing fuzzy controller (SOFC) with inappropriately chosen parameters to overcome the difficulty of an SOFC implementation.Experimental results demonstrate that the GPSOFC achieved better control performance than the SOFC as well as the passive control for the manipulation of the active suspension system.

@&#KEYPHRASES@&#
Self-organizing fuzzy controller,Grey-prediction algorithm,Active suspension systems,

@&#ABSTRACT@&#
Self-organizing fuzzy controllers (SOFCs) have excellent learning capabilities. They have been proposed for the manipulation of active suspension systems. However, it is difficult to select the parameters of an SOFC appropriately, and an SOFC may extensively modify its fuzzy rules during the control process when the parameters selected for it are inappropriate. To eliminate this problem, this study developed a grey-prediction self-organizing fuzzy controller (GPSOFC) for active suspension systems. The GPSOFC introduces a grey-prediction algorithm into an SOFC, in order to pre-correct its fuzzy rules for the control of active suspension systems. This design solves the problem of SOFCs with inappropriately chosen parameters. To evaluate the feasibility of the proposed method, this study applied the GPSOFC to the manipulation of an active hydraulic-servo suspension system, in order to determine its control performance. Experimental results demonstrated that the GPSOFC achieved better control performance than either the SOFC or the passive method of active suspension control.

@&#INTRODUCTION@&#
As typical nonlinear complex systems, suspension systems play a crucial role in providing ride comfort, road-handling quality, and road-damage minimization, and they also contribute to the overall performance of a vehicle. Suspension systems can be classified as passive, semi-active, or active. The design of suspension systems mainly involves making a tradeoff between suspension deflection, ride comfort, and tire deflection. Active suspension systems are far more elastic and efficient than the others and, as such, provide more effective road-handling ability and ride quality. Active suspension control has thus attracted the attention of numerous researchers and engineers, both in academia and in the automotive industry, with the aim of improving the road-handling ability and ride quality of passenger vehicles.As mentioned previously, active suspension systems generally present nonlinear, complex characteristics, so their mathematical models are difficult to accurately estimate. Consequently, it is impractical to design model-based controllers for active suspension systems. Fuzzy logic controllers (FLCs), which do not require system models, have been designed and employed extensively in manipulating active suspension systems in order to improve their control performances [4,6,19]. For practical applications, however, the design of FLCs has difficulty in determining suitable membership functions and fuzzy control rules, especially when manipulating complex systems with nonlinearities. As active suspension systems generally have nonlinear and complex dynamics, this increases the difficulty in designing an FLC for active suspension systems.The main problem in the design of an FLC [1,2,20,29,30,32] has been that both the inference table and the knowledge base of an FLC are fixed after they have been selected, and their selections depend completely on an expert's knowledge or on the experience of a skilled operator. Procyk and Mamdani [31] were the first to propose a self-organizing fuzzy controller (SOFC) to solve the problem of an FLC implementation. This strategy, rather than using human reasoning, established fuzzy control rules by learning the dynamic behavior of the system, in order to simplify the procedure of designing an FLC. Shao [33] and Zhang and Edmunds [40] modified learning methods to further improve the design of the SOFC. The construction of the modified learning scheme is based on a performance-decision table proposed by Procyk and Mamdani [31]; unfortunately, determining a performance-decision table is as difficult as designing a fuzzy rule table. To eliminate the problem, Yang [39] applied the output error and the error change of the system to establish a learning algorithm that could adjust the linguistic fuzzy rule table of the SOFC directly; its generation thus begins with an empty fuzzy rule table. The SOFC proposed by Yang [39] overcomes the difficulty of designing an FLC with appropriate membership functions and fuzzy rules. On the basis of Yang's study [39], Huang and Lin [16] suggested a personal computer-based (PC-based) SOFC under the disk operating system, Lian et al. [23] designed a PC-based SOFC under Windows 2000 operating system, and Lin and Lian [24] proposed a digital signal processor-based (DSP-based) SOFC for separately manipulating active suspension systems and thus improving their control performances.Although SOFCs [16,23,24] have demonstrated their superior learning capabilities for the control of active suspension systems, both the learning rate and weighting distribution of an SOFC are difficult to choose appropriately, and once decided on are fixed. Moreover, the selection of an SOFC parameters affects the control performance of the system. An SOFC with inappropriately selected parameters substantially influences the output response of the system, resulting in the production of oscillation or instability. To eliminate this problem, this study develops a grey-prediction self-organizing fuzzy controller (GPSOFC) for manipulating active suspension systems with the aim of improving their control performances.Grey system theory [8–11,18] has recently been increasingly applied in various fields of control engineering [15,17,22,36]. A grey-prediction algorithm, based on grey system theory, is used to establish a grey model [8–11,18] to predict the next-step output of the system. It differs from an evolutionary-based algorithm [35], which was applied to dealing with real-life optimization problems. Introducing a grey-prediction algorithm into the design of an FLC can pre-correct its fuzzy rules to reasonable ones for controlling active suspension systems. This design enhances the control performance of active suspension systems.Sie et al. [34] proposed an FLC with a grey-prediction algorithm for controlling a quarter-car active suspension system. They also demonstrated that their proposed strategy for active suspension control was capable of improving the ride comfort and the road-holding ability of a car. However, such a strategy has fixed fuzzy rules once it has been designed. This capability significantly limits its control performance.To eliminate this problem, this study develops a GPSOFC for active suspension systems. The proposed GPSOFC also includes a grey-prediction algorithm, in addition to the original properties of an SOFC. The grey-prediction algorithm is employed to establish a grey model for estimating the next-step output of the system, with the aim of designing a look-ahead SOFC to manipulate active suspension systems. This design eliminates the problems faced by SOFCs with parameters chosen inappropriately for active suspension control. To evaluate the feasibility of the proposed method, this study applies a GPSOFC in controlling a quarter-car hydraulic-servo active suspension system to determine its control performance.To evaluate the performance of the proposed GPSOFC from the dynamic response of an active suspension system, this study designed and constructed a quarter-car hydraulic-servo active suspension system in the laboratory. Fig. 1shows the quarter-car hydraulic-servo active suspension control system, which mainly comprises a vehicle body (sprung mass), a tire, two springs with their guiding pillars, two dampers, two hydraulic cylinders.An optical linear scale 1 and an accelerometer were installed on the vehicle body to measure the displacement and acceleration of the sprung mass, respectively. An optical linear scale 2 was installed on the support frame to measure the displacement of the tire shaft or the unsprung mass. An optical linear scale 3 was installed on the rod-end of a hydraulic cylinder 2 to measure the movement displacement of the rod for this cylinder.A hydraulic cylinder 1 was installed between the vehicle body and the support frame, its base connected to the vehicle body and its rod-end attached to the support frame. A servo-valve 1 was employed to adjust the hydraulic flow-rate for the purpose of controlling the displacement of the rod-end of hydraulic cylinder 1, thereby creating an active control force to suppress suspension system vibration whenever a road profile-generated disturbance was input into the system. The base of a hydraulic cylinder 2 was fixed to the base of the system, while the rod-end of the hydraulic cylinder 2 was connected to the frame of the roller, thus enabling the roller to be in continuous contact with the tire; this set-up was employed to simulate real-life road profile disturbances. The disturbance signal was excited using a servo-valve 2 to regulate the hydraulic flow-rate, thus controlling rod movement in the hydraulic cylinder 2. This would produce the desired control action, simulating the disturbance from the road profiles. A power unit with 11.3kW was employed to drive the hydraulic cylinders 1 and 2 either simultaneously or independently, thereby achieving the desired control action. Additionally, an encoder with 2000 pulses per revolution was attached to the revolving shaft of the tire to generate feedback regarding the angular position of the tire. A hydraulic motor, powered by a 7.5kW power unit, drove the tire rotation. The hydraulic motor was controlled using a proportional-valve to regulate the hydraulic flow-rate in order to achieve the desired rate of rotation.Fig. 2displays a simplified diagram of an active suspension system. The sprung mass ms represents the vehicle body and the unsprung mass mus is an assembly of the axle and wheel. The tire was assured contact with the surface of the road when the vehicle was traveling. It was modeled as a linear spring with stiffness Kt. The passive components of the suspension system consist of a linear damper, whose equivalent damping coefficient is Bs, and a linear spring, whose equivalent stiffness coefficient is Ks. The hydraulic actuation force between the sprung and unsprung masses is Fa. The zs and zus are vertical displacements of the sprung mass and the unsprung mass, respectively, and zr is the vertical road profile. The motion equation of the active suspension system is derived from Newton's second law:(1)msz¨s=−Ks(zs−zus)−Bs(z˙s−z˙us)+Fa−Ff(2)musz¨us=Ks(zs−zus)+Bs(z˙s−z˙us)+Kt(zr−zus)−Fa+Ffwhere Ff represents the hydraulic friction force. Both the forces Fa and Ff can be derived from the dynamics in the hydraulic-servo suspension system. The differentiation of the actuation force in the hydraulic-servo suspension system can be described [28] as(3)F˙a=P˙lAa=4βeVt[KgKvvs−BtPl−Aa(zs−zus)]where Aa is the cross section area of cylinder;P˙lis the cylinder differential pressure; Kg represents the servo-valve flow gain; Kv exhibits the servo-valve gain; Vt is the total compressed volume; βe is the bulk modulus for the hydraulic oil; Bt represents the total leakage coefficient;vsdenotes the servo-valve control voltage. The hydraulic friction force Ff in Eqs. (1) and (2) is a nonlinear function of external load, viscosity-slip friction, and Coulomb friction. This function is difficult to model and estimate.The active suspension system obviously has nonlinear and time-varying characteristics due to the nonlinear dynamics of the hydraulic-servo system, saturation of the actuator, buckling of the spring, bouncing behavior of the tire, and other factors. Consequently, the system parameters, except ms=275kg, mus=50kg, Ks=12, 015N/m, and Kt=157, 750N/m, are difficult to accurately estimate to establish a precise mathematical model of the system, so designing a model-based controller to control such a system is impractical.Although a model-free SOFC can be used to manipulate such active suspension systems, both the learning rate and weighting distribution of the SOFC are difficult to select appropriately. When the SOFC with inappropriately chosen parameters is used to manipulate an active suspension system, it may excessively modify its fuzzy rules during the control process. This property results in system oscillation or instability. To solve the problem, this study developed a GPSOFC for the control of active suspension systems.Grey system theory [8–11,18] treats random variations as a variation in the grey value within a certain range; the random process is treated as a time-varying grey-process within a certain range. The grey system theory employs a data generation method, rather than a statistical regulation, to obtain a more regular generation sequence from the initial random data. As mentioned previously, the grey-prediction algorithm is used to establish a grey model. The grey model, therefore, can be used to predict a system variation in the future. The unique feature of establishing a grey model is to use a discrete time sequence to establish an ordinary differential equation.Accumulated generation operation (AGO) and inverse accumulated generation operation (IAGO) provide the basic tools for establishing a grey model [8–11,18]. The AGO and IAGO orders depend on the order of the differential equation of a grey model and the number of grey variables. The general form of a grey model isGM(n¯,h¯), wheren¯denotes the order of the ordinary differential equation of a grey model andh¯represents the number of grey variables. Establishing a grey model requires computing time; however, the required computing time increases exponentially regarding the order of the ordinary differential equation of a grey model,n¯, and the number of grey variables,h¯. Although various types of grey models have been mentioned [8–11,18], most of the previous researchers have focused their attention on a GM(1, 1) model in their prediction applications [15,17,22,23,36] because the GM(1, 1) model has faster computational efficiency than other grey models. In practical applications, the computational efficiency of a grey model is one of the most crucial parameters affecting the overall control performance of the system. Therefore, the GM(1, 1) model, which has the faster computational efficiency, is widely applied to various research fields for prediction applications.If {y(0)(k)}, y(0)(k)≥0, k= 1, 2, …, N, is a time data sequence, then the AGO can be described [8–11,18] as(4)y(1)(k)=∑λ=1ky(0)(λ)where y(1)(k) denotes an accumulated data generation sequence and is monotonically increasing. As y(0)(k) is not always a positive data generation sequence, this study uses a linear mapping method [8–11,18] to change its behavior for obtaining a positive data generation sequence before conducting the next data generation operation.The IAGO for y(1)(k) [8–11,18] can be described as(5)y(0)(k)=y(1)(k)−y(1)(k−1)where y(0)(k) is the inverse accumulated data generation sequence of y(1)(k). The trend of this generated time data sequence can be approximated by an exponential function, whose dynamic behavior is similar to that of a first-order differential equation. Consequently, the first-order ordinary differential equation of the GM(1, 1) model can be established [8–11,18] as(6)dy(1)dt+μy(1)=τwhere μ and τ are grey parameters and can be determined using the least-square scheme based on the accumulated data generation sequence y(1)(k).If the sampling interval is one unit, then the differential of the accumulated data generation sequence y(1) can be described as a discrete time data sequence [8–11,18],(7)dy(1)dt=y(1)(k+1)−y(1)(k)=y(0)(k+1).The y(1) in Eq. (6) can be considered to represent the average of y(1)(k+1) and y(1)(k) [8–11,18]. Then, Eq. (6) in the discrete-time domain can be described as(8)y(0)(k+1)=μ−12y(1)(k+1)+y(1)(k)+τwhere μ and τ can be estimated from the time data sequence y(0)(k) and the accumulated data generation sequence y(1)(k). To obtain an approximation of the growing curve for y(1)(k), this study required at least four data sets to extract the tendency of the grey mode. The identified problem for the grey parameters becomes a contradictory solution, because of the grey model established by the extra data sets. Fortunately, the least-square technique can be employed to determine an optimal average solution between the grey parameters. Its corresponding matrix form can be described [8–11,18] as(9)φˆ=μτ=(ΦTΦ)−1ΦTYN.Matrices YNand Φ in Eq. (9) can be expanded and described respectively as(10)YN=[y(0)(1)y(0)(2)…y(0)(N)]Tand(11)Φ=−12(y(1)(0)+y(1)(1))1−12(y(1)(1)+y(1)(2))1⋮⋮−12y(1)(N−1)+y(1)(N)1where N denotes the number of used data sets to estimate the grey parameters.The predicted value of the accumulated data generation sequence on the next step can be calculated by substituting the estimated grey parameters into the first-order differential equation in Eq. (6). The solution to this differential equation in the discrete time domain can be described [8–11,18] as(12)yˆ(1)(k)=y(1)(0)−τμe−μ(k−1)+τμ.Since y(1)(0) is defined as y(0)(1) [8–11,18], Eq. (12) at k+1-step can be described as(13)yˆ(1)(k+1)=y(0)(1)−τμe−μk+τμ.By referring to Eq. (7), the predicted data set in Eq. (13) at k+1-step can be estimated as(14)yˆ(0)(k+1)=yˆ(1)(k+1)−yˆ(1)(k)=(1−eμ)y(0)(1)−τμe−μk.As mentioned previously, establishing a first-order single-variable GM(1, 1) model which provides a reasonably accurate prediction [8–11,18] requires at least four data sets. However, the predicted accuracy, applied by the grey model, is not proportional to the number of used data sets, whereas the corresponding computing time increases exponentially [8–11,18].From the literature [8–11,15,17,18,34,36] and the previous experimental experience, five data sets can yield a more accurate prediction value than the other choices. Therefore, this study used the most recent five data sets, y(k−4), y(k−3), y(k−2), y(k−1), and y(k), to forecast the next-step data setyˆ(k+1)using the GM(1, 1) model. These data sets were substituted into Eqs. (9)–(11) for solving the grey parameters μ and τ, recursively.For a control system, the next-step output of the system can be predicted by substituting the grey parameters μ and τ into Eqs. (13) and (14). The predicted output of the system in the next step is employed to calculate the predicted output error and predicted error change of the system in the next step in order to design a look-ahead fuzzy control strategy.An SOFC has been developed for many applications [5,13,16,21–24]. It has outstanding learning capabilities, beginning from zero fuzzy control rules. An SOFC is designed without requiring a system model, so it can be used to control complex and nonlinear systems. The self-organizing part was introduced into an FLC to constitute an SOFC, as depicted in Fig. 3. It comprised three steps: system performance measurement, model estimation, and rule modification. The system performance measurement is important for achieving a successful learning algorithm. Two physical features, such as the output error and the error change of the system, were measured as performance indices in a decision table. The measurement of such indices is similar to the establishment of a fuzzy rule table. A system model was estimated to determine the relationship between the output response and the control input of the system. The performance measurement was then used to determine the correction value of each fuzzy rule by applying the estimative model of the system. However, a suitable performance decision table is arduous to organize for each control system. To eliminate the problem, this study developed a real-time linguistic SOFC, in which two parameters (learning rate and weighting distribution) were employed to establish a performance measurement function, instead of a performance decision table.The rule table of an SOFC proposed in this study included only a modification of the original fuzzy rules. The correction value of each fuzzy rule was introduced into each original fuzzy rule to generate a new control rule for the design of an SOFC. This method overcame the expansive defect of the database in the scheme of Procyk and Mamdani [31] and reduced time consumption. The dynamic behavior of the system can be represented using an autoregressive moving average model [27]:(15)y(k)=A(q)y(k−1)+Mu(k−d)+B(q)u(k−d−1)whereA(q)=1+a1q−1+a2q−2+⋯+anq−nB(q)=1+b1q−1+b2q−2+⋯+bmq−(m−d)where q represents a forward shift operator, d is the system delay, and M is the direct forward system gain in the control system. The values of n and m depend on the dynamic characteristics of the system. It is difficult to estimate the aforementioned parameters for a system with complexity and nonlinearity. To eliminate the problem, this study applied an FLC, which is one of the model-free control methods for manipulating complex and nonlinear systems, to control the above-mentioned system. It neither requires a system model nor depends on either a precise mathematical model or system parameter. Hence, the following controller design includes none of these.If the system is excited with a different control input u′(k−d), at a k−d-step sampling interval while the past state of the system is unchanged, then the system output y′(k), at a k-step sampling interval, can be described as(16)y′(k)=A(q)y(k−1)+Mu′(k−d)+B(q)u(k−d−1).The correction of the control input,Δu¯(k), will yield a system output deviation Δy(k). If Δy(k) is small, then the relationship between the correction of the control input and the deviation of the corresponding system output is(17)Δy(k)=y′(k)−y(k)=M[u′(k−d)−u(k−d)]=MΔu¯(k).Therefore, the difference of the system output deviation,Δy˙(k), can be described as(18)Δy˙(k)=Δy(k)T=MTΔu¯(k)where T represents a sampling interval that is small. If a system at a k-step sampling interval has a system output deviation Δy(k) and its differenceΔy˙(k), then the corrections of the corresponding theoretical control input areΔu¯e(k)andΔu¯ec(k), respectively. Referring to Eq. (18) yielded the following correction equations:(19)Δu¯e(k)=Δy(k)MandΔu¯ec(k)=TΔy˙(k)M.The system has only one control input u(k) so the correction of the control input must be an appropriate combination of the aforementioned two terms. The following form for general cases [39] was used to express the correction of the control input:(20)Δu¯(k)=(1−ς)Δu¯e(k)+ςΔu¯ec(k)where ς is a design parameter, which was restricted to lie in (0, 1), and represents the weighting distribution betweenΔu¯e(k)andΔu¯ec(k). If the system output y(k) differs greatly from the desired system output yd(k), then a value of y′(k) between y(k) and yd(k) should be chosen in the design. The system output y(k) would then slowly approach yd(k) at a learning rate γ[39]:(21)y′(k)=(1−γ)y(k)+γyd(k),0<γ<1.The system output deviation Δy(k) and its differenceΔy˙(k)thus became(22)Δy(k)=y′(k)−y(k)=γ[yd(k)−y(k)]=γe(k)(23)Δy˙(k)=γe˙(k)=γe(k)−e(k−1)T=γTec(k).From Eqs. (19), (22), and (23), Eq. (20) could be written as follows:(24)Δu¯(k)=γM[(1−ς)e(k)+ςec(k)].The output error of the system, e(k), and error change of the system, ec(k), were divided into seven fuzzy subsets with integer values from −6 to +6. In each control step, the input variables of an FLC, the output error and error change of the system, generated two fuzzy subsets of the E on the universe of discourse of the EC and two subsets of the EC on the universe of discourse of the E, respectively. The control input u(k) was derived from the fuzzy rule inference so four fuzzy rules would be modified in each control step. The correction value of each fuzzy rule is proportional to the excitation strength of each fuzzy rule,w[39]. Thewwas represented as a triangular-shaped membership function and was calculated using a linear interpolation algorithm [39]. Then, the control input of the lth fuzzy rule could be represented as(25)u¯l(k+1)=u¯l(k)+Δu¯l(k)=u¯l(k)+welweclγM×[(1−ς)e(k)+ςec(k)].The term γ/M in Eq. (25) can be regarded as the correction weighting for the control input of the system. This study set M to 1 to eliminate the identification procedure of the system and reduce the computational time required during implementation. The correction weighting was determined only by the learning rate γ. A large value of γ would introduce a large rule correction and result in system oscillation. This parameter for the control system influences only the transient response and does not affect the steady-state performance. This property was demonstrated by Huang and Lee [13] through their experiments.An SOFC comprised a self-organizing part and an FLC, as shown in Fig. 3. The learning algorithm of an SOFC was presented in the preceding section. The design procedure of an FLC was described here. The structure of an FLC design consisted of the following: the definition of input–output fuzzy variables, decision-making related to fuzzy control rules, fuzzy inference logic, and defuzzification. A more complete description and definition for the design of an FLC can be found in [14]. As shown in Fig. 3, the control variables of the system could be defined as(26)e(k)=r(k)−y(k)(27)ec(k)=e(k)−e(k−1)where e(k) and ec(k) are the output error and error change of the system on k-step sampling interval, respectively; e(k−1) is the output error of the system on k−1-step sampling interval; r(k) and y(k) represent the reference input and output response of the system on k-step sampling interval, respectively.As mentioned previously, the SOFC may excessively modify its fuzzy rules during the control process when its parameters are inappropriately chosen, so this study developed a GPSOFC for the control of active suspension systems. Fig. 4shows a GPSOFC for an active suspension system. Similar to the process derived from the SOFC in Section 3.2, the learning algorithm of the GPSOFC could be obtained as(28)u¯ˆl(k+1)=u¯ˆl(k)+Δu¯ˆl(k)=u¯ˆl(k)+wˆeˆlwˆecˆlγM×(1−ς)eˆ(k+1)+ςecˆ(k+1).The control variables of the grey-prediction self-organizing fuzzy control system, as shown in Fig. 4, could be described as(29)eˆ(k+1)=r(k+1)−yˆ(0)(k+1)(30)ecˆ(k+1)=eˆ(k+1)−e(k)whereeˆ(k+1)andecˆ(k+1)are the predicted output error and predicted error change of the system on k+1-step sampling interval, respectively; r(k+1) andyˆ(0)(k+1)are the reference input and predicted output of the system on k+1-step sampling interval, respectively; theyˆ(0)(k+1)in this study was estimated using the grey-prediction algorithm described previously.A triangular membership function, depicted in Fig. 5, was used to convert these input variables (e(k) and ec(k) for the SOFC, oreˆ(k+1)andecˆ(k+1)for the GPSOFC) and the output variable (u(k) for the SOFC, oruˆ(k)for the GPSOFC) into linguistic control variables (NB, NM, …, PB), where αi(see Fig. 5) is a scaling factor. Its superscript (i=1, 2, 3) was used to express the output error, error change, and control input of the system, respectively when designing an SOFC; otherwise, its superscript (i=1, 2, 3) was employed to depict the predicted output error, predicted error change, and control input of the system, respectively for the design of a GPSOFC.This study applied fuzzy control rules of the state evaluation [12] to control the inherently complicated, nonlinear, active suspension systems. If the fuzzy-inference logic used the max–min composition ∧ [12] to operate fuzzy rules, the change of its suitability would not be smooth. To address this problem, this study used an algebraic product [14] instead of the ∧ operation. Finally, this study used the height method [12] to defuzzify the output variables of the controller to obtain accurate objectives for controlling this active suspension system. The aforementioned design process resulted in the following actual control input of the actuator for this self-organizing fuzzy control system:(31)u(k)=u(k−1)+Δu(k)where Δu(k) indicates the output increment of the SOFC (the control input increment of the system) on k-step sampling interval; u(k) and u(k−1) represent the outputs of the SOFC (the control inputs of the system) on k-step and k−1-step sampling intervals, respectively.Similar to the procedure designed from the SOFC in Eq. (31), this study could then obtain the actual control input of the actuator for this grey-prediction self-organizing fuzzy control system as(32)uˆ(k)=uˆ(k−1)+Δuˆ(k)whereΔuˆ(k)indicates the output increment of the GPSOFC on k-step sampling interval;uˆ(k)anduˆ(k−1)express the outputs of the GPSOFC on k-step and k−1-step sampling intervals, respectively.Although an SOFC has real-time learning capabilities, it still cannot solve the problem of selecting appropriate parameters for specifying a learning rate and weighting distribution. The SOFC can modify an inappropriate fuzzy rule table into a satisfactory fuzzy rule table continually according to the designed learning algorithm as mentioned previously. However, for the control of a complicated and time-varying system, the weighting distribution ς and learning rate γ of the SOFC influence the dynamic behavior of the system output. In general, the weighting distribution of the SOFC can be chosen to be 0.5 to avoid bias towardΔu¯e(k)orΔu¯ec(k). This choice does not guarantee that such a parameter selected is appropriate for designing an SOFC. Additionally, choosing a suitable learning rate for designing an SOFC is intricate since a high learning rate chosen may extensively modify fuzzy rules of an SOFC, resulting in output oscillation or instability of the system. In contrast with a small learning rate selected, the system generates a slow output response. Even though the learning time is increased, the control performance of the system is unlikely to show improvement. An appropriate learning rate of the SOFC can be obtained by trial and error or can be drawn from the experience of a skilled operator, but still remains fixed once selected. This method creates the problem of considerably limiting the dynamic behavior of the output response in the system, as it is unable to specify an appropriate parameter in real time for designing an SOFC according to the output response of the system during the control process. To solve this problem, this study developed a GPSOFC for the control of active suspension systems. The GPSOFC employs a grey-prediction algorithm to pre-correct fuzzy rules to reasonable ones to manipulate active suspension systems. This design eliminates the problem caused by the SOFC with inappropriately chosen parameters for the control of active suspension systems.Moreover, it is important to determine the stability and robustness of the proposed controller for control applications. However, the stability and robustness of the GPSOFC are difficult to demonstrate using a rigorous mathematical proof [3,7,37,38], because the proof requires complex mathematical operations and might currently be impossible to obtain. One of the methods, such as the state-space approach [25,26], which does not need complicated mathematical operations, can be employed to determine the stability and robustness of the proposed controller. Therefore, the stability and robustness of the GPSOFC can be demonstrated and guaranteed by following the process derived from Lin and Lian [25,26] using the state-space approach.

@&#CONCLUSIONS@&#
