@&#MAIN-TITLE@&#
A learning-guided multi-objective evolutionary algorithm for constrained portfolio optimization

@&#HIGHLIGHTS@&#
A learning-guided multi-objective evolutionary algorithm for constrained portfolio optimization problem is proposed.Four practical constraints, cardinality, quantity, pre-assignment and round lot, are considered.Performance wise, the proposed algorithm is not only capable to deliver high-quality portfolios enriched by additional constraints but also able to efficiently solve a reasonable size of asset up to 1318. It significantly outperforms the existing state-of-the-art algorithms.

@&#KEYPHRASES@&#


@&#ABSTRACT@&#
Portfolio optimization involves the optimal assignment of limited capital to different available financial assets to achieve a reasonable trade-off between profit and risk objectives. In this paper, we studied the extended Markowitz's mean-variance portfolio optimization model. We considered the cardinality, quantity, pre-assignment and round lot constraints in the extended model. These four real-world constraints limit the number of assets in a portfolio, restrict the minimum and maximum proportions of assets held in the portfolio, require some specific assets to be included in the portfolio and require to invest the assets in units of a certain size respectively. An efficient learning-guided hybrid multi-objective evolutionary algorithm is proposed to solve the constrained portfolio optimization problem in the extended mean-variance framework. A learning-guided solution generation strategy is incorporated into the multi-objective optimization process to promote the efficient convergence by guiding the evolutionary search towards the promising regions of the search space. The proposed algorithm is compared against four existing state-of-the-art multi-objective evolutionary algorithms, namely Non-dominated Sorting Genetic Algorithm (NSGA-II), Strength Pareto Evolutionary Algorithm (SPEA-2), Pareto Envelope-based Selection Algorithm (PESA-II) and Pareto Archived Evolution Strategy (PAES). Computational results are reported for publicly available OR-library datasets from seven market indices involving up to 1318 assets. Experimental results on the constrained portfolio optimization problem demonstrate that the proposed algorithm significantly outperforms the four well-known multi-objective evolutionary algorithms with respect to the quality of obtained efficient frontier in the conducted experiments.

@&#INTRODUCTION@&#
Portfolio selection problem is a well-studied topic in finance and it is concerned with the optimal allocation of a limited capital among a finite number of available risky assets, such as stocks, bonds, and derivatives in order to gain the possible highest future wealth. Markowitz's mean-variance model [40,41] is considered to play an important role in the development of Modern Portfolio Theory. The mean-variance (MV) model assumes that the future market of the assets can be correctly reflected by the historical market of the assets. It considers the trade-off between risk and reward in selecting efficient portfolios. A portfolio is considered to be efficient if it provides the highest possible reward for a given risk or alternatively, if it presents the least possible risk for a given level of profit. The reward (profit) of the portfolio is measured by the average expected return of those individual assets in the portfolio whereas the risk is measured by its combined total variance.While investing the capital within the MV framework, investors have two objectives: maximizing the total profit and minimizing the total risk of their portfolios. With these two conflicting objectives to be optimized simultaneously, the portfolio selection problem can be classified as a multi-objective optimization problem. A single solution that optimizes all the conflicting objectives simultaneously hardly exists in practice. Instead, there exists a set of acceptable ‘compromise’ solutions which are optimal in such a way that no other solutions are superior to them when all objectives are considered simultaneously. Such solutions are referred to as efficient solutions, non-dominated solutions or Pareto-optimal solutions.The collection of such efficient portfolios conveying the compromise between risk and return is called the efficient frontier or Pareto-optimal front. The efficient frontier helps investors to visualize the risk and return trade-off curve in a two-dimensional graph with risk on the horizontal axis and expected return on the vertical axis (see Fig. 13).Since the Markowitz's pioneering work, many researchers have pursued studies for efficient algorithms [27,29,43,52] to compute the efficient frontier of the MV model. However, the classic MV model assumes a perfect market where short sales are disallowed, securities can be traded in any (non-negative) fractions, no limitation on the number of assets in the portfolio, investors have no preferences over assets and they do not care about different assets types in their portfolios. In practice, these assumptions are unrealistic. As a result, several extensions and modifications have been proposed to address the real-world constraints. In this paper, we extended the basic MV model to include four practical constraints as follows:Cardinality constraintCardinality constraint limits the number of assets (K) that compose the portfolio. Very often in practice, investors prefer to have a limited number of assets included in their portfolio since the management of many assets in the portfolio is tedious and hard to monitor. They also intend to reduce transaction costs and/or to assure a certain degree of diversification by limiting the maximum number of assets in their portfolios.Floor and ceiling constraintsThe floor and ceiling constraints specify the minimum and maximum limits on the proportion of each asset that can be held in a portfolio. In practice, investors prefer to avoid excessive administrative costs for very small holdings of assets in the portfolio and/or some institutional policies require to model their policies on the lower and upper bounds of each asset in the portfolio. The floor and ceiling constraint is also known as bounding or quantity constraints.Pre-assignment constraintThe pre-assignment constraint is usually used to model the investor's subjective preferences. An investor may intuitively wish some specific assets to be included in the portfolio, with its proportion fixed or to be determined.Round lot constraintRound lot constraint requires the number of any asset in the portfolio to be in exact multiple of the normal trading lots. In practice, several market securities are traded as multiples of minimum lots.These four constraints stated above are hard in the sense that they have to be satisfied at any time. In practice, portfolios are composed of markets with hundreds to thousands of available assets, and the calculation of risk measures grows quickly in relation to the number of assets. By introducing the cardinality constraint alone already transforms the classic quadratic optimization model into a mixed-integer quadratic programming problem which is an NP-hard problem [6,47]. There are several exact approaches proposed in the literature for cardinality constrained portfolio optimization problem [5,6,35,47]. However, all these works relaxed the cardinality constraint as an inequality constraint allowing the number of assets in the portfolio to vary with maximum bound (K) and the results showed that they are able to handle the test problems with limited size (up to 500 assets). On the other hand, Gulpinar et al. [26] considered the strict cardinality constraint and computational results are performed on a small test problem involving 98 assets.When additional constraints are added to the basic MV model, the problem thus becomes more complex and the exact optimization approaches run into difficulties to deliver solutions within reasonable time for large problem size. As a result, this motivates the investigation of approximate algorithms such as meta-heuristics [33] and hybrid meta-heuristics [56,45]. In general, meta-heuristics cannot guarantee the optimality of the solution, but they are efficient in finding the optimal or near optimal solutions in a reasonable amount of time.There exist many studies which applied meta-heuristics or other techniques to solve portfolio optimization problem [21,39]. The recent research in portfolio optimization problem is widely carried out by incorporation of constraints in the problem model and/or handling the problem as a multi-objective one. Although the portfolio optimization problem involves two conflicting objectives, many studies in the literature [11,17,20,37] have been performed as single objective meta-heuristics approaches with aggregating function that combines two objectives into a single scale objective, and in which the weights are varied to generate the set of efficient solutions for portfolio selection problems with cardinality and quantity constraints. Mansini and Speranza [38] showed that the portfolio selection problem with round lot constraint is an NP-complete problem and proposed three mixed integer linear programming heuristic algorithms to solve the problem. Lin and Liu [36] proposed a genetic algorithm with three different models for portfolio selection problems with round lots. Chang et al. [11] and Gaspero et al. [25] discussed the pre-assignment briefly but had not addressed the constraint in their experiments.In recent years, many publications had discussed the portfolio optimization problems with multi-objective evolutionary algorithms by considering a subset of the real-world constraints. Diosan [22] and Mishra et al. [42] applied several well-known multi-objective evolutionary algorithms to solve the unconstrained portfolio optimization problem. Recently, Krink et al. [34] also proposed an algorithm called DEMPO inspired by the NSGA-II algorithm [19]. The difference between NSGA-II and DEMPO is that Differential Evolution (DE) is used instead of Genetic Algorithm (GA) to generate new candidate solutions during the evolution. DEMPO is applied to solve the basic portfolio optimization problem based on Value-at-Risk risk measure and experimental results show that DEMPO outperforms NSGA-II. Armananzas and Lozano [3] studied greedy search, simulated annealing (SA) and ant colony optimization (ACO) algorithms in a multi-objective framework to solve the portfolio selection problem with cardinality constraints.Anagnostopoulos and Mamanis [2] considered the extended MV model with cardinality and quantity constraints and tested five advanced MOEAs to investigate the performance. The cardinality constraint considered in their work is relaxed and as a result a portfolio can be composed of any number of assets with maximum bound (K). The experimental results confirmed that all multi-objective algorithms considered outperformed the single objective evolutionary algorithm. The results also concluded that SPEA-II [60] performed the best among those algorithms tested. Branke et al. [7] also presented an envelope-based MOEA integrating the NSGA-II [18] and the critical line algorithm. Chaim et al. [12] proposed an order-based solution representation and considered the cardinality constraint as a soft constraint and quantity constraint as a hard constraint. In their work, the cardinality constraint was relaxed and hence it was allowed to vary the number of assets in the portfolio from the minimum limit to the maximum limit.Streichert et al. [55,54] applied a multi-objective evolutionary algorithm (MOEA) to solve the portfolio selection problems with cardinality, floor and round lot constraints. These works studied various crossover operators adopting hybrid chromosome representation with binary and real values. This hybrid encoding enhances the performance of the algorithm significantly regardless of the choice of crossover operators. Skolpadungket et al. [50] also studied the portfolio selection problems with cardinality, floor and round lot constraints and tested them with various MOEAs. They adopted the same hybrid encoding as Streichert et al. [55,54]. Experiments are performed on the small dataset containing 31 assets and the performance metrics showed that SPEA-II [60] is the best algorithm among those tested. In their work, the cardinality constraint was relaxed and only the maximum cardinality constraint was considered.Fieldsend et al. [23] and Anagnostopoulos and Mamanis [1] considered the cardinality constraint as an additional objective to be minimized. Brito and Vicente [8] reformulated the cardinality constrained MV model as a bi-objective problem, allowing the investors to analyze the efficient trade-off between mean-variance and cardinality. The detailed reviews of the multi-objective evolutionary algorithms in portfolio optimization can be found in [10,13,44,49].In this work, we propose a new learning-guided hybrid evolutionary algorithm for the mean-variance portfolio optimization problem within the context of the multi-objective optimization. We extended the MV model to consider the strict cardinality, quantity, pre-assignment and round lot constraints.We for the first time investigate the performance of the learning-guided multi-objective evolutionary algorithm with external archive (MODEwAwL) on the extended MV model with four constraints considered. Randomly generating a new candidate solution is very unlikely to achieve a good-quality practical solution for the constrained portfolio optimization problem. Instead, a learning-guided solution generation scheme incorporating additional problem-specific heuristics is proposed to generate a good-quality solution. The proposed algorithm contributes to enhance an efficient convergence of the search algorithm by concentrating on the promising areas of the search space.In this study, we consider four existing well-known multi-objective evolutionary algorithms (MOEAs), the Non-dominated Sorting Genetic Algorithm (NSGA-II) [19], the Strength Pareto Evolutionary Algorithm (SPEA2) [60], Pareto Envelope-based Selection Algorithm (PESA-II) [16] and Pareto Archived Evolution Strategy (PAES) [30]. A large set of simulation experiments have been conducted over a number of instances. Results demonstrate that the proposed algorithm is highly efficient in terms of both finding solutions close to the true Pareto-front and good distribution along the Pareto-front.The rest of the paper is organized as follows. Section 2 describes the generic multi-objective portfolio optimization, followed by the extended MV model considering the cardinality, quantity, pre-assignment and round lot constraints. Section 3 introduces the proposed algorithm outlining the main differences from the existing approaches. Section 4 provides the detailed structure of the proposed algorithm. Section 5 discusses the analysis of the simulation results. In Section 6, conclusion and future work are presented.Multi-objective optimization generally involves balancing all conflicting objectives and searches for a set of compromise solutions between the objectives while satisfying the various constraints. In such context, this set of solutions is known as Pareto-optimal solutions [18].In multi-criteria variant of portfolio optimization problem, the MV model can be formalized as a bi-objective optimization problem. The objective is to find a set of efficient portfolios that maximize return and minimize risk simultaneously. In this work, four real-world constraints, cardinality, quantity, pre-assignment and round lot, are considered (see Section 1). Mathematically, the problem with considered constraints can be formulated as follows:(1)minf1=∑i=1N∑j=1Nwiwjσij(2)maxf2=∑i=1Nwiμi(3)subjectto∑i=1Nwi=1(4)∑i=1Nsi=K,(5)wi=yi.υi,i=1,…,N,yi∈ℤ+(6)ϵisi≤wi≤δisi,i=1,…,N,(7)si≥zi,i=1,…,N(8)si,zi∈{0,1},i=1,…,Nwhere N is the number of available assets, μiis the expected return of asset i (i=1, …, N), σijis the covariance between assets i and j (i=1, …, N;j=1, …, N), andwi(0≤wi≤1) is the decision variable which represents the proportion held of asset i. Eq. (3) defines the budget constraint (all the money available should be invested) for a feasible portfolio.Eq. (4) defines the cardinality constraint where K is the number of invested assets in the portfolio and sidenotes whether asset i is invested or not. If siequals to one, asset i is chosen to be invested and the proportion of capitalwilies in [ϵi, δi], where 0≤ϵi≤δi≤1. Otherwise, asset i is not invested andwiequals to zero.In this study, we adopted the strict cardinality constraint [3,11,37,39,55,54] and thus require to select fixed K number of assets. Experimental results from the literature [11,55] showed that when the cardinality constraint with high K value is imposed, the approximation of the constrained efficient frontier tends to approach towards the unconstrained efficient frontier (UCEF). The cardinality constraint has been relaxed in several related works [2,7,50], where the equality constraint is replaced by inequality constraint (i.e. up to K assets can be included in the portfolio). In some works [12,25], the cardinality constraint is alternatively relaxed by specifying the maximum and minimum number of assets that a portfolio can hold.Eq. (7) defines the pre-assignment constraint to fulfil the investors’ subjective requirements where the binary vector zidenotes if asset i is in the pre-assigned set that has to be included in the portfolio or not. Eq. (5) defines the round lot constraint where yiis a positive integer variable and υiis the minimum lot that can be purchased for each asset. The inclusion of round lot constraint may make it impossible to exactly satisfy the budget constraint (see Eq. (3)) as the total capital might not be the exact multiples of the required trading lot for various assets.The above stated model could be solved by obtaining a set of efficient portfolios. These obtained solutions are optimal in the sense that there are no other solutions in the solution domain or search space that are superior to them when all objectives are considered simultaneously [18]. The complete set of these efficient portfolios forms the efficient frontier that represents the best trade-offs between the mean return and the variance (risk). In practice, when more real-world constraints are considered, the efficient frontier reduces to a smaller curve.In a two-dimensional space of risk and return, a solution a is said to be efficient (i.e., Pareto-optimal) if there does not exist any solution b such that b dominates a[24]. Solution a is considered to dominate solution b if and only if:f1(a)≤f1(b)ANDf2(a)>f2(b)ORf2(a)≥f2(b)ANDf1(a)<f1(b)The ultimate goals in a multi-objective portfolio optimization problem are to find a set of solutions as close as possible to the Pareto-optimal front and to find a good distribution of solutions along the Pareto front. Once the efficient frontier is obtained, the decision maker determines the portfolio based on the investor's risk preference. Hence, the diversity of the solutions along the efficient frontier is important for the decision maker not to miss certain trade-off portfolios which he/she might be interested.The multi-objective portfolio optimization problem becomes too complex to solve by numerical methods when those practical constraints reflecting investors’ preferences and/or institutional trading rules are considered. Over the last two decades, multi-objective evolutionary algorithms (MOEAs) have received a significant amount of attention and demonstrated their effectiveness and efficiency in approximating the Pareto-optimal front [13].DEMO [46] is one of the recent algorithms which combines the advantages of DE [53] with the mechanisms of Pareto-based sorting and crowding distance sorting [19]. It had been successfully tested on the carefully designed test functions (ZDT) introduced in [59]. The procedure of the DEMO is described in Fig. 1. DEMO maintains a population of individuals, where each represents a potential solution to the optimization problem. During the evolution, it allows its population capacity expand in order to add newly found non-dominated solutions (see Fig. 1, lines 3–9). Hence, it enables the newly found non-dominated solutions to immediately take part in the generation of the subsequent candidate solutions. This feature of DEMO promotes fast convergence towards the true Pareto front. In each generation, if the population exceeds the size limit, it is sorted based on the non-domination and crowding distance metrics [19] in order to identify those individuals to be truncated. It thus aims to maintain a good distribution of non-dominated portfolios.In this work, we propose a learning-guided multi-objective evolutionary algorithm (MODEwAwL) for the constrained portfolio optimization. The proposed algorithm adopts a new approach to extend generic DEMO scheme to solve the constrained portfolio optimization problem. The main differences of our approach with respect to the DEMO scheme in the literature can be outlined as follows:1.A secondary population (i.e. an external archive) is introduced to store the well spread non-dominated solutions found throughout the evolution (see Section 4.9).A learning mechanism is proposed to extract the important features from the efficient solutions found throughout the evolution (see Section 4.4).An efficient solution generation scheme utilizing the learning mechanism, problem specific heuristics and effective direction-based search methods is proposed to guide the search towards the promising search space (see Section 4.5).The proposed MODEwAwL use the archive to extract the important features of non-dominated solutions. Incorporating learning mechanism and prior problem-specific knowledge exploitation in the evolution process allows the proposed MODEwAwL to generate promising offspring solutions. The proposed MODEwAwL thus aims to promote convergence by concentrating on the promising regions of the search space. The pseudocode of the proposed algorithm is described in Fig. 2.LetAthe archive maintaining the set of non-dominated portfolio(s)the crossover probability for differential evolutionthe scaling factor for differential evolutionthe number of assets in a portfolio, i.e. the cardinalitythe number of assets in the pre-assignment setthe maximum size of the archivethe number of available assetsthe number of individuals in the populationlist of portfolios in the populationthe concentration of ith asset in the archivethe ith portfolio in the populationthe proportion of capital invested in the ith assetthe minimum trading lot of the ith assetthe lower bound on the proportion of the ith assetthe upper bound on the proportion of the ith assetrandom real value between x1 and x2, both inclusiverandom integer value between x1 and x2, both inclusiveIn our solution representation, two vectors of size N are used to define a portfolio p: a binary vector si, i=1, …, N denoting whether asset i is included in the portfolio, and a real-value vectorwi, i=1, …, N representing the proportions of the capital invested in the assets. Some existing researches [2,50,55,54] adopt similar encoding to define a portfolio. When the cardinality and pre-assignment constraints are considered, the introduction of binary variables siin the multi-objective portfolio model enhances the evaluation of the algorithm.To generate an initial population, K different indexes (including all assets in the pre-assignment subset) are randomly selected and proportions are assigned to those selected assets randomly. If the generated portfolio violates the budget and/or quantity constraints, such solution is corrected by the constraint handling techniques provided in Section 4.6. Hence, all generated solutions in the trial population are feasible.At each generation, the distribution of assets from non-dominated solutions in the external archive is observed to identify the promising assets. The concentration score of each asset ciis calculated by counting its occurrences in the archive divided by archive size.ci=∑j=1∣A∣si,j∣A∣.The new solutions to be generated are encouraged to compose with those assets by exploiting the knowledge obtained throughout the evolution to direct the search towards the promising search space. The proposed learning mechanism is computationally cheap as it only uses a single update at each generation. A similar form of scoring function has been used as one of the components in the trade-off studies by Smith et al. [51].One of the factors to consider in designing the portfolio model in the proposed MODEwAwL is to find an effective way to generate offspring. We aim to find effective and efficient scheme with a good balance between the exploitation and exploration. The new solution is generated by two phases: the selection of assets from a universe of N available assets and the allocation of capital to those selected assets. The idea presented here is to use DE for exploring the real decision variables and exploit learning mechanism and problem specific heuristics described below to select the promising assets in the new solution.The information about the concentration of the assets in the non-dominated portfolios in the archive is exploited in selecting the promising assets for the new candidate portfolio. Hence the assets are ranked according to their concentrations in the archive non-dominated solutions. The assets which score greater than zero are considered to be promising ones. The higher the score of the asset, the higher its chances to be included in the new candidate portfolio (see Section 4.4).In finance literature, it is considered to be a fundamental premise to utilize assets that have low correlation with each other. Hence the assets which are less correlated to each other are preferable to the heavily correlated assets. It is also commonly believed that it is beneficial to reduce the portfolio's standard deviation of return. Intuitively, investors prefer higher return assets with less risk [28].In order to generate a new candidate solution, the L assets are firstly selected if the pre-assignment constraint is considered. By taking into account of the above stated intuitive learning, in this work, the proposed MODEwAwL then alternatively uses the following selection schemes to fill the remaining assets:S1The (K−L) assets are selected by roulette wheel selection based on the concentration score ci.The (K−L) assets which have the highest concentration score ciare selected.The (K−L) assets which have the highest expected return values are selected.The random n assets (where n=R[0, K−L]) which have the highest concentration score ciare selected. The remaining (K−n) assets are filled by selecting one of the following methods.•Select those assets which have the lowest risk values.Select those assets which have the highest return values (i.e. S3).Select those assets which have the least correlation from those n assets already chosen.By adopting the above stated selection scheme, the new candidate solution satisfies the pre-assignment and cardinality constraints. The proportions of those selected assets for the new candidate solution are assigned by using a direction-based offspring generation scheme where p1, p2 and p3 are randomly selected portfolios from the current population P as follows:W1wi′:=w3i+r[0,1]×(w1i−w2i)wi′:=w3i+F×(w1i−w2i)rank p1, p2 and p3 by dominance and crowding distance measure (i.e. p1 is the best portfolio and p3 is the worst portfolio among three portfolios) and generate weight allocations of candidate portfolio by directing away from p3 and towards the middle between p1 and p2 as follows:wi′:=w1i+w2i2The detailed procedure of the candidate generation is provided in Fig. 3. The proposed candidate generation mechanism intends to guide the search toward promising direction by learning from the reference assets from the archive and reference proportions from the current population. In this way, the proposed algorithm converges efficiently. The new candidate portfolio is repaired if the quantity and round lot constraints are violated (see the repair mechanism in Section 4.6).When using an evolutionary algorithm to solve constrained optimization problems, there are various methods proposed in the literature [15] for handling constraints in evolutionary optimization, such as penalty function method, special representations and operators, repair methods and multi-objective methods. Among those methods, repair method is one of the effective approaches to locate feasible solutions.During the population sampling, each constructed individual portfolio is repaired if it does not satisfy all considered constraints. As described in Section 4.5, the new solution generated by our proposed MODEwAwL already satisfies the cardinality and pre-assignment constraints.Hence, the following repair mechanism stated in [50,54] is applied:1.All weights of selected asset in the candidate solution are adjusted by settingwi′=ϵi+(wi′−ϵi)/∑(wi′−ϵi).The weights are then adjusted to the nearest round lot level by settingwi′=wi′−(wi′modυi). The remaining amount of capital is redistributed in such a way that the largest amount of (wi′modυi) is added in lot of υiuntil all the capital is spent.The proposed MODEwAwL applies the elitist selection scheme based on Pareto optimality (see Fig. 2). During the evolution, the population is extended by adding the newly found non-dominated solutions. Hence, at each generation, the number of portfolios in the current population will be between NP and 2NP.In each generation, if the number of portfolios in the current population exceeds its limit NP, it needs to identify those which need to be removed. The individuals in the population are sorted based on the non-dominance and crowding distance metrics. Then the current population is truncated by keeping the best NP individuals for the next generation.The main objective of the external archive A is to keep all the non-dominated solutions encountered along the search process. This approach is adopted in order to save and update all well spread non-dominated solutions generated by the algorithm during the search.In each generation, the archive A is updated with the non-dominated solutions from the trial population. The computational time of maintaining the archive increases with the archive size [14,32,60]. The size of the archive is therefore restricted to a pre-specified value. When the external archive has reached its maximum capacity M, the crowding distances of the solutions are calculated to determine the most crowded archive members which need to be discarded.

@&#CONCLUSIONS@&#
