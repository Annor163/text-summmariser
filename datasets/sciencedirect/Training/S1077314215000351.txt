@&#MAIN-TITLE@&#
Three-dimensional volume reconstruction from slice data using phase-field models

@&#HIGHLIGHTS@&#
Three-dimensional PDE-based volume reconstruction from slice data is proposed.The Allen–Cahn and Cahn–Hilliard equations are used in the model.The algorithm can automatically reconstruct 3D geometries using slice data.

@&#KEYPHRASES@&#
Image segmentation,Image inpainting,Volume reconstruction,Allen–Cahn equation,Cahn–Hilliard equation,Multigrid method,

@&#ABSTRACT@&#
We propose the application of a phase-field framework for three-dimensional volume reconstruction using slice data. The proposed method is based on the Allen–Cahn and Cahn–Hilliard equations, and the algorithm consists of two steps. First, we perform image segmentation on the given raw data using a modified Allen–Cahn equation. Second, we reconstruct a three-dimensional volume using a modified Cahn–Hilliard equation. In the modified Cahn–Hilliard equation, a fidelity term is introduced to keep the solution close to the slice data. The numerical methods use a hybrid method and an unconditionally stable nonlinear splitting scheme. The resulting discrete equations are solved using a multigrid method. The experiments on synthetic and real medical images are performed to demonstrate the accuracy and efficiency of the proposed method.

@&#INTRODUCTION@&#
Developing reconstruction algorithms attracts a significant amount of attention because the three-dimensional (3D) volume reconstruction from a sequence of medical images has numerous applications such as medical diagnostic, plastic and artificial limb surgery, virtual surgery system, anatomy teaching, and treatment planning [2,3]. Various algorithms have been proposed to reconstruct a surface or volume from a set of planar cross-sections. A method which combines the elastic interpolation algorithm, spline theory, and surface consistency theorem was proposed for reconstructing a smooth 3D object from serial cross sections [4]. Guo et al. presented a morphology-based mathematical method to implement the interpolation by means of a combined operation of weighted dilation and erosion [5]. Jones and Chen constructed surfaces from cross sections using a field function in each slice and the marching cubes algorithm to generate a surface consisting of polygonal facets [6]. In shape-based interpolation method, the signed distance value of a voxel to the edges of a cross section is calculated. After each slice has been assigned the distance values, distances for other slices are defined using an interpolation. Then, the volume is obtained by the zero isosurface [7]. For other approaches to 3D reconstruction, refer to [8–11].In this paper, we present a phase-field framework for 3D volume reconstruction using slice data. The proposed algorithm has two steps: image segmentation and 3D reconstruction using two partial differential equations, which are the modified Allen–Cahn and Cahn–Hilliard equations. This paper is organized as follows. In Section 2, we describe the governing equations for the image segmentation and volume reconstruction. Section 3 describes a practically stabilized nonlinear splitting scheme for the volume reconstruction and presents a multigrid method. In Section 4, we perform numerical experiments with synthetic and real medical images. Finally, our conclusion is given in Section 5.In this section, we propose a numerical algorithm for 3D volume reconstruction from slice data. We start with an illustration of the process of the proposed algorithm when we have a set of cross-sectional slice data (Fig. 1(a)).For the first stage, by using a modified Allen–Cahn equation, the image segmentation algorithm is applied for the given slice data f to obtain the phase-field function ψ (segmented image). Fig. 1(b) shows the filled contour plots of segmented slice data ψ. For the second stage, by using a modified Cahn–Hilliard equation and the segmented slice data, we reconstruct the volume (Fig. 1(c)).Since the original image may have noises (Fig. 2(a) and (b)), to prepare the numerical slice data ψ (Fig. 2(c)) before applying the proposed method for volume reconstruction, we use an image segmentation algorithm [12–18]. The method we use for image segmentation is based on the Allen–Cahn equation and it enforces the diffuse interface to be the hyperbolic tangent profile. The geometric active contour model based on the mean curvature motion is given by the following evolution equation [14]:(1)∂ψ(x,t)∂t=g(f0(x))(−F′(ψ(x,t))∈2+Δψ(x,t))+βg(f0(x))F(ψ(x,t)),wherex=(x,y)andf0(x)=(f(x)−fmin)/(fmax−fmin). Here, fmaxand fminare the maximum and minimum values of the given slice image f(x), respectively. Here, ψ(x, t) is a phase-field function which is close to 1 or−1. The functiong(f0(x))=1/[1+|∇(Gσ0.25em0ex*0.25em0exf0)(x)|2]is the edge-stopping function, which stops the evolution when the contour reaches the edge. The function(Gσ0.25em0ex*0.25em0exf0)(x)=∫ΩGσ(x−y)f0(y)dyis the convolution of the given image f0 with the Gaussian functionGσ(x)=12πσ2e−x2+y22σ2. Here,F(ϕ)=0.25(ϕ2−1)2,0.35em0ex∈is a constant that is related to the phase transition width, and β is a parameter. In this paper, we useσ=1.5andβ=50,000.We applya hybrid method [14] to solve Eq. (1) and we outline the numerical solution algorithm for the sake of completeness. We discretize Eq. (1) inΩ=(a,b)×(c,d). Let Nxand Nybe positive even integers,h=(b−a)/Nx=(d−c)/Nybe the uniform mesh size. Letψijnbe approximations of ψ(xi, yj, nΔt), wherexi=a+(i−0.5)h,yj=(j−0.5)h, and Δt is the time step. The discrete edge function is defined byg(f0)ij=11+(Gσ0.25em0ex*0.25em0exf0)x,ij2+(Gσ0.25em0ex*0.25em0exf0)y,ij2,where(Gσ0.25em0ex*0.25em0exf0)x,ij=[(Gσ0.25em0ex*0.25em0exf0)i+1,j−(Gσ0.25em0ex*0.25em0exf0)i−1,j]/(2h)and(Gσ0.25em0ex*0.25em0exf0)y,ij=[(Gσ0.25em0ex*0.25em0exf0)i,j+1−(Gσ0.25em0ex*0.25em0exf0)i,j−1]/(2h). The discrete convolution is defined as(Gσ0.25em0ex*0.25em0exf0)ij=∑p=i−1i+1∑q=j−1j+1f0pq2πσ2e−[(i−p)2+(j−q)2]h22σ2.The zero Neumann boundary condition is used. Then the following operator splitting numerical algorithm for Eq. (1) is as follows:(2)ψij*−ψijnΔt=gijΔdψij*+βgijF(ψijn),which is solved by a multigrid method [1]. Here Δdis the standard five point discrete Laplacian operator. Next, using the method of separation of variables we analytically solve the equation(3)ψt=gψ−ψ3∈2,with the conditionψn=ψ*. Then the solution of Eq. (3) att=(n+1)Δtis given asψijn+1=ψij*/e−2gijΔt∈2+(ψij*)2(1−e−2gijΔt∈2).Fig. 2 illustrates the process of image segmentation using Eq. (1). For the given medical image in Fig. 2(a), we define the scaled image f0(x) and initialize ψ(x, 0) asψ(x,0)=1if x is inside the square contour,ψ(x,0)=−1otherwise (see Fig. 2(d)). In Fig. 2(e) and (f), the initial contour evolves until it reaches the boundary of the image through the motion created by the mean curvature (the first term) and the second term on the right-hand side of Eq. (1). The term βg(f0(x))F(ψ(x, t)) evolves the contour beyond the non-convex and disconnected regions.In order to reconstruct a 3D volume from a set of segmented slice data, we consider the modified Cahn–Hilliard equation which contains a fidelity term:(4)∂ϕ(x,t)∂t=Δμ(x,t)+λ(x)(ψ(x)−ϕ(x,t)),1em0exx∈Ω,1em0ex0<t≤T,(5)μ(x,t)=F′(ϕ(x,t))−∈2Δϕ(x,t),wherex=(x,y,z),0.35em0exΩ=(0,Lx)×(0,Ly)×(0,Lz)is a domain, andλ(x)={λ0,if0.35em0exx0.35em0exis0.35em0exin0.35em0exthe0.35em0exgiven0.35em0exslice0.35em0exdata,0,otherwise.Here, ϕ(x, t) is a phase-field function which is close to 1 or−1for the reconstructed volume’s respective interior and exterior. The surface of the volume is represented by the zero-level set of ϕ. Let ψ(x, y, zi) fori=1,⋯,Nsbe the segmented slice data obtained by performing the image segmentation algorithm onSi:=Ω∩{z=zi}, wherez1=0andzNs=Lz. Here, Nsis the number of slice data. Fig. 3 shows the slice data’s schematics.To define the initial condition ϕ(x, 0), we use a linear interpolation between two consecutive slices: We have(6)ϕ(x,y,θzi+1+(1−θ)zi)=θψ(x,y,zi+1)+(1−θ)ψ(x,y,zi),for 0 ≤ θ ≤ 1 andi=1,⋯,Ns−1. Homogeneous Neumann boundary conditions for both ϕ and μ are applied:n·∇ϕ=n·∇μ=0on ∂Ω exceptz=z1andz=zNs, where Dirichlet boundary condition for ϕ is applied. Let us consider the following total energy functional:(7)E(ϕ)=ECH(ϕ)+EF(ϕ),where(8)ECH(ϕ)=∫Ω[F(ϕ(x,t))+∈22|∇ϕ(x,t)|2]dx,(9)EF(ϕ)=∑i=1Ns∫Siλ02(ψ(x)−ϕ(x,t))2dxdy.Then, thefirst term and second term in Eq. (4) are negative gradient descents with respect to theH−1and L2 inner products for the energiesECHandEF, respectively [19]. It should be pointed that Eq. (4) is neither a gradient flow inH−1nor L2. Ifλ0=0, then Eqs. (4) and (5) become the Cahn–Hilliard equation [20], which has been widely employed as a useful mathematical model in order to understand the phase separation phenomena observed when binary alloys are quenched at critical temperatures. For physical, mathematical, and numerical derivations of the binary Cahn–Hilliard equation, see [21] and the references therein.Eqs. (4) and (5) have also been used in image inpainting problem, which is the process of filling in missing parts of damaged images based on information from the surrounding areas [19]. The basic mechanism of the inpainting model is illustrated in Fig. 4. The gray region in Fig. 4(a) denotes the inpainting region. Let ψ(x) be the image data from Fig. 4(a). In the figure, black, gray, and white colors representψ(x)≈−1,0, and 1, respectively. Take the initial condition asϕ(x,0)=ψ(x)and solve Eqs. (4) and (5). Then outside the inpainting region, due to the fidelity termλ(x)(ψ(x)−ϕ(x,t)), the temporal evolution of ϕ(x, t) does not deviate much from the original image data ψ(x). On the other hand, inside the inpainting region whereλ(x)=0, the Cahn–Hilliard dynamics takes place. The gray value will evolve to either−1or 1 depending on the boundary values of the inpainting region. Fig. 4(b) and (c) show the intermediate and steady states, respectively. More details can be found in [19].We use a nearly identical governing equation to those used for image inpainting, which is two-dimensional. However, we use the equation in a different context, meaning we reconstruct a 3D volume from a set of slice data. Our approach involves the salient application of the partial differential equation used in image inpainting.Forthe stable temporal discretization, we use the efficient numerical scheme based on the unconditionally gradient stable scheme [23,24], which allows large time steps. We discretize the governing equations, Eqs. (4) and (5), in our 3D space,Ω=(0,Lx)×(0,Ly)×(0,Lz). Letxi=(i−0.5)h,0.35em0exyj=(j−0.5)h,0.35em0exzk=(k−0.5)h,0.35em0ex1≤i≤Nx,0.35em0ex1≤j≤Ny, and 1 ≤ k ≤ Nz, whereNx,0.35em0exNy, and Nzare positive even integers andh=Lx/Nx=Ly/Ny=Lz/Nzis the uniform mesh size. Letxijk=(xi,yj,zk)and letϕijknbe an approximation of ϕ(xijk, nΔt), whereΔt=T/Ntis the time-step, T is the final time, and Ntis the total number of time-steps. Then the discrete domain is defined byΩh={xijk|1≤i≤Nx,1≤j≤Ny,1≤k≤Nz}. In addition, we denote the grid function asϕh={ϕijk|xijk∈Ωh}and discrete l2-norm of ϕhas(10)∥ϕh∥2=∑xijk∈Ωhh3(ϕijkn)2.We then have the following discretization.(11)ϕijkn+1−ϕijknΔt=λijk(ψijk−ϕijkn)+μi+1,jkn+1+μi−1,jkn+1h2+μi,j+1,kn+1+μi,j−1,kn+1+μij,k+1n+1+μij,k−1n+1−6μijkn+1h2,(12)μijkn+1=(ϕijkn+1)3−ϕijkn−∈2ϕi+1,jkn+1+ϕi−1,jkn+1h2−∈2×ϕi,j+1,kn+1+ϕi,j−1,kn+1+ϕij,k+1n+1+ϕij,k−1n+1−6ϕijkn+1h2.The resulting discrete equations, Eqs. (11) and (12), are solved using a multigrid method. In order to condense the discussion, we describe only the relaxation step of this method. Letϕijkn+1,mandϕijkn+1,m+1be the respective current and updated approximations ofϕijkn+1. We set the initial guess to be the previous time-step solution asϕijkn+1,0=ϕijkn. We linearize(ϕijkn+1)3as(ϕijkn+1)3≈(ϕijkn+1,m)3+3(ϕijkn+1,m)2(ϕijkn+1−ϕijkn+1,m).Then we apply the Gauss–Seidel relaxation to the multigrid method:ϕijkn+1,m+1Δt+6μijkn+1,m+1h2=ϕijknΔt+λijk(ψijk−ϕijkn)+μi+1,jkn+1,m+μi−1,jkn+1,m+1+μi,j+1,kn+1,m+μi,j−1,kn+1,m+1+μij,k+1n+1,m+μij,k−1n+1,m+1h2,−(6∈2h2+3(ϕijkn+1,m)2)ϕijkn+1,m+1+μijkn+1,m+1=−2(ϕijkn+1,m)3−ϕijkn−∈2ϕi+1,jkn+1,m+ϕi−1,jkn+1,m+1+ϕi,j+1,kn+1,m+ϕi,j−1,kn+1,m+1+ϕij,k+1n+1,m+ϕij,k−1n+1,m+1h2.For more details about the multigrid algorithm of a 3D Cahn–Hilliard equation, please refer to [23]. It should be noted that without the fitting term (Eq. (4) withλ0=0), the proposed scheme is an unconditionally gradient stable scheme [25].In this section, we perform several numerical experiments in order to demonstrate the performance of our proposed scheme. Across the interfacial transition region, the phase-field function ϕ varies from−0.9to 0.9 over a distance of approximately22∈tanh−1(0.9)ifλ0=0. Therefore, if we want this distance to be approximately m grid points, ∈ is defined as∈m=hm/[22tanh−1(0.9)][21]. We regard the numerical result as the steady state solution if the relative error∥ϕn+1−ϕn∥22/∥ϕn∥22is less than a tolerance tol. Unless otherwise specified, we use∈=∈4, time stepΔt=0.5h,0.35em0exλ0=1000, andtol=0.002. Throughout the paper, we use isotropic grids and we apply the image segmentation step for the slice data unless we use the analytic hyperbolic tangent function.Westart with an example in the two-dimensional (2D) spaceΩ=(0,1)×(0,0.5)with a64×32mesh grid to show the algorithm’s basic mechanism in Eqs. (4) and (5).In Fig. 5(a), thick line segments are the given slices and has following hyperbolic tangent profiles, which are shown in Fig. 5(b):ψ(x,y0)=−1+tanh[(x−0.15)/(2∈4)]−tanh[(x−0.4)/(2∈4)]+tanh[(x−0.6)/(2∈4)]−tanh[(x−0.9)/(2∈4)],ψ(x,y11)=−1+tanh[(x−0.3)/(2∈4)]−tanh[(x−0.45)/(2∈4)]+tanh[(x−0.55)/(2∈4)]−tanh[(x−0.7)/(2∈4)],ψ(x,y21)=−1+tanh[(x−0.4)/(2∈4)]−tanh[(x−0.65)/(2∈4)],ψ(x,y33)=−1+tanh[(x−0.25)/(2∈4)]−tanh[(x−0.65)/(2∈4)].Because this is an example in 2D, we assume that the given slice data has the hyperbolic tangent profile. However, in the 3D case, we need an image segmentation algorithm as a preprocess before the volume reconstruction. We guess the initial state using the liner interpolation (see Fig. 5(c)), and the filled contour at level zero is shown in Fig. 5(d). Fig. 5(e) displays the reconstructed image obtained by our proposed method.Inorder to test the accuracy of our proposed method, we examine four synthetic functions whose surface and volume are implicitly defined as zero-level and positive valued sets, respectively:ψ(x)=tanh[(0.25−(x−0.5)2+(y−0.5)2)/(2∈4)],ψ(x)=tanh[(0.25−(x−0.1z−1)2+(y−0.5)2)/(2∈4)],ψ(x)=tanh[(0.2−(x−0.5)2+(y−0.5)2+0.1z)/(2∈4)],ψ(x)=tanh[(0.42−(x−0.5)2+(y−0.5)2+(z−0.5)2)/(2∈4)].Using different mesh grids64×64×64and128×128×128, we run the evolution up toT=0.024with a time-stepΔt=2h2. All tests are performed in the unit cube domainΩ=(0,1)×(0,1)×(0,1). We obtain the slice data atz=z0,z5,⋯,zNz+1using the given synthetic function ψ(x). We define the error of a grid aseh=ϕh−ψh. In Fig. 6, the top row shows the reconstructed volumes. These are compared with the respective numerical and reference solutions aty=0.5in the bottom row. The discrete l2-norms of errors are given in Table 1. The numerical results agree with the theoretical values.We perform simulations to show the effect of pixel dimension on 3D volume reconstruction with increasing pixel number,16×16×8,32×32×16, and64×64×32. We set numerical parameters as∈=∈4,0.35em0exΔt=0.1h, andtol=0.0001on a domainΩ=(0,1)×(0,1)×(0,0.5). The given slice data is a set of two circles whose radii are same asr=0.2and centers are apart byd=0.4. Fig. 7 shows the steady solutions with different pixel numbers. We can see that, with a few grid points, the reconstructed surface could not be connected, however, with increasing pixel number, it is getting smooth and connected.We consider the effect of interslice dimension between two consecutive slices. A64×64×16mesh grid is used and numerical parameters are set as∈=∈4,0.35em0exΔt=0.5h, andtol=0.0001on a domainΩ=(0,1)×(0,1)×(0,0.25). The given slice data is a set of two circles which radii are same asr=0.15and centers are apart byd=0.32, see Fig. 8(a). The reconstructed surface is not connected because the circles are not close enough comparing with the given interslice. However, if we add a slice atz=z8, which has same radius and is located in middle in two circles, then we have smoothly connected surface as shown in Fig. 8(b).In this section, we show several numerical results of image segmentation step on real medical images of a bone in Fig. 9. From left to right columns, they are given medical images with contours obtained by the image segmentation, mesh plots of the given images, and mesh plots of the final results. As can be seen, even though the original images are with noises, the image segmentation step produces visually clear results. We will use the image segmentation afterward, unless otherwise mentioned.We reconstruct the 3D volume using the three set of more complicated synthetic slice data, consisting a spiral, two linked tori, and three branching. In this section, we usetol=0.001. First, we consider 3D spiral with twenty-seven slice data (Fig. 10(a)). We have five slices between any two consecutive slice data sets except for one slice between the last two slice data sets. Fig. 10(b) and (c) exhibit the initial shape and final result obtained after 18 iterations. A128×128×128mesh grid is used for the unit cube domainΩ=(0,1)×(0,1)×(0,1). Second, we consider two 3D linked tori with twenty-four slice data (Fig. 11(a)). We have seven slices between any two consecutive slice data sets except for four slices between the last two given slices. A128×128×160mesh grid is used for the domainΩ=(0,1)×(0,1)×(0,1.25). Fig. 11(b) and (c) display the initial shape and final result obtained after 17 iterations.Third, we employ a similar test to that used in [4], where a more complex case of branching from one to three contours was tested using synthetic contours. Twelve slice data are used (Fig. 12(a)) and there are two slices between any two consecutive slice data sets. This simulation is performed on the domain(0,1)×(0,1.125)×(0,0.531)with a64×72×34mesh grid. Fig. 12(b) and (c) are the initial shape by linear interpolation and final result obtained after 44 iterations.In this section, we simulate several volume reconstructions by using real slice data. Fig. 13 shows the reconstructed volumes such as a human head, brain, and terra-cotta bunny, whose slice data are obtained from [26]. Each column in Fig. 13 shows the result of the volume reconstruction using different interslice dimensions. The detail information of the data we used is displayed in Table 2. This simulation is performed on the domain(0,1)×(0,1)×(0,1)with a256×256×256mesh grid. We can see that our proposed method successfully manages this complex topology and the reconstructed surface is very smooth. Furthermore, our method is working well with small set of slice data. And, Table 2 shows that the iteration number for convergence slightly increase when the number of slice data decrease.Next, we consider a human vertebra with a twenty-six slice data from [27] (Fig. 14(a)). There are two slices between any two given successive slice data sets, except for the first and last sets, between which we use only one slice. This simulation is performed on the domain(0,1)×(0,1)×(0,0.45)with a160×160×72mesh grid. Fig. 14(b) and (c) represent the initial state by the linear interpolation and final result obtained after 14 iterations. As can be seen, our proposed method produces visually clear results, even though the contours are not convex and multiple links between contours are exist.Our last test examines the volume reconstruction from medical images of a human bone (tibia and fibula). We have a set of bone slice images with an image size of216×216(Fig. 15(a)). The number of slices is 128 and there are seven slices between any two consecutive slices. Note that, because our method can reconstruct the volume with fewer slice data, we remove some similar slices (the empty boxes in Fig. 15(a)) and use 63 slices. We perform the resolution on the domain(0,1)×(0,1)×(0,4.120)with a216×216×890mesh grid. Fig. 15(b) and (c) show results of volume reconstruction with different angles after only 23 iterations. As can be seen, our algorithm represents the bone image well and produces good visual quality.

@&#CONCLUSIONS@&#
