@&#MAIN-TITLE@&#
Simultaneous localization and mapping in wireless sensor networks

@&#HIGHLIGHTS@&#
We propose an algorithm to solve the simultaneous localization and mapping problem in wireless sensor networks.We introduce a semiparametric statistical model to take random perturbations into account.The algorithm is based on a newly proposed online Expectation Maximization procedure and on sequential Monte Carlo methods.The performance of the algorithm is illustrated with both simulated data and a true data set.

@&#KEYPHRASES@&#
Simultaneous localization and mapping,Indoor localization,Received signal strength indicator,Parameter estimation,Signal propagation,

@&#ABSTRACT@&#
Mobile device localization in wireless sensor networks is a challenging task. It has already been addressed when the WiFi propagation maps of the access points are modeled deterministically or estimated using an offline human training calibration. However, these techniques do not take into account the environmental dynamics. In this paper, the maps are assumed to be made of an average indoor propagation model combined with a perturbation field which represents the influence of the environment. This perturbation field is embedded with a distribution describing the prior knowledge about the environmental influence. The device is localized with Sequential Monte Carlo methods and relies on the estimation of the propagation maps. This inference task is performed online, using the observations sequentially, with a new online Expectation Maximization based algorithm. The performance of the algorithm is illustrated with Monte Carlo experiments using both simulated data and a true data set.

@&#INTRODUCTION@&#
In this paper, we consider a WiFi communication network made up of a mobile device, a server and WiFi access points (AP). In this context, a key step to localize the mobile device is to estimate the WiFi signal strength at different positions in the environment. However, in an indoor environment, signals may experience complex attenuation such as shadowing or reflection.Different techniques can be used to approximate the WiFi propagation map of each AP. In Gorce et al. [19], a deterministic model based on the characteristics of the surrounding AP and on the localization of the obstacles in the environment is introduced. In Bahl and Padmanabhan [2] and Evennou and Marx [16], a previous offline training phase is performed. In this site survey, the signal strength indicator (RSSI) received from different AP is measured at some previously determined positions. This allows us to build an accurate estimation of the signal strength, but only for a finite number of points. Ferris et al. [17] provide a method to extend these measures to the entire map using Gaussian processes techniques.In this paper, we propose an estimation method that does not require any calibration procedure. The propagation maps are estimated online, without storing the observations, using the data sent by the mobile device. Any modification in the signal propagation (due to new obstacles for instance) affects the data sent by the mobile device. Then, while these changes deteriorate the accuracy of localization systems based on fixed estimators of the propagation maps, our estimation procedure takes them into account. Thus, as illustrated in Section 5.2, the accuracy of our localization method improves with time instead of degrading.We use a semiparametric statistical model introduced in [15, Chapter 5]: the propagation maps are made of a parametric average indoor model and a nonparametric perturbation field. This model combines a prior knowledge on signal propagation with random perturbations due to the obstacles. Based on the data collected by the mobile device, the parameters and the perturbation field can be estimated. The proposed procedure relies on a new online Expectation Maximization (EM) based algorithm introduced in Le Corff and Fort [21,22] and on Sequential Monte Carlo methods. The device position can be simultaneously estimated using the weighted samples produced by the Sequential Monte Carlo method.The structure of this paper is the following. Section 2 details the approach of the paper in comparison with other methods for localization and mapping in wireless sensor networks. Section 3 describes the model and defines the notations. Section 4 introduces our algorithm for the considered Simultaneous Localization and Mapping (SLAM) problem. Section 5 illustrates the performance of this algorithm with numerical experiments.In a radio network field, the signal strength is measured by the RSS (received signal strength, in dBm). Each WiFi connected device can compute the RSS as it is needed to associate the device with the AP providing the best signal/noise ratio. Localization systems based on RSS measurements allow us to locate any WiFi connected device.Remark 1Different devices might have different methods to compute the RSS. It is common to use the terminology of RSSI (received signal strength indicator) expressed without unit to name the information on the signal level provided by a WiFi device. To overcome the issue of information disparity between WiFi connected devices, a previous RSSI to RSS conversion might be needed for each localized device. The conversion rule is specific to the device׳s WiFi card. For the sake of clarity, we assume in this paper that the mobile device׳s RSSI corresponds to the standard RSS.Using RSS to estimate the position of the device is challenging. As represented in Fig. 1, RSS is highly unstable as it fluctuates considerably between two consecutive measures at the same position. It is common to describe the RSS variations using a Gaussian representation.Despite the instant variations of the RSS, its mean value strongly depends on the position of the device. The function that returns the expected RSS at each position is called the propagation map. In free spaces, signals propagate in straight line from the emitter to the receptor. The propagation maps are isotropic and can be described using few parameters, see Friis [18]. Therefore, there exist two parameters c and d such that the strength of a signal received at x and emitted at O isc+dlog(∥x−O∥)where c and d depend on the network characteristics.On the other hand, indoor propagation of WiFi signals is not isotropic. Fig. 2represents the propagation map of a WiFi signal in an indoor environment. This figure was built deterministically by Gorce et al. [19] using the physical properties of electromagnetic signals.Let Xkbe the device position at time k. The received signal strength vector measured by the device, denoted by Yk, is written as(1)Yk=Fk⋆(Xk)+ϵk.In the following, the superscript ⋆ is used to name the true value of every unknown parameter involved in the model.{ϵk}k≥0are i.i.d. multidimensional random variables with distributionN(0,σ⋆,2Id)where Id is the identity matrix. Each component ofFk⋆(x)represents the expected RSS at position x relative to an AP. The time dependency ofF⋆brings the environmental effects on the propagation maps into relief. The distribution of{ϵk}k≥0implies that the noise affecting the RSS of different AP are independent. This assumption is somehow strong, however, the correlation between the RSS of different AP can be hardly taken into account and can strongly depend on the environment configuration.Indoor localization requires to overcome two challenges. One has to design a good approximation ofFk⋆and then to use this approximation to estimate the position Xkcorresponding to a given measure Yk.The contribution of this paper is a new estimation procedure of the propagation maps. This new method is combined to a localization algorithm to highlight the relevance of our estimation procedure. Using our propagation maps estimator, many positioning algorithms may be considered. We do not address a comparison of the accuracy between our method and the state of art but a new way to improve indoor localization deployment at a large scale.Fk⋆can be approximated deterministically using physical properties (see [19,26]). Such constructions need a precise description of the environment such as the position and the composition of the walls and furniture present in the environment. They also need a fine knowledge about the different factors influencing signal propagation such as the humidity level in the environment. Without this precise description, the propagation maps built using deterministic methods may be far from reality.Most of the existing WiFi based localization systems use a preliminary measurement campaign (offline) which is also called fingerprinting technique. A human operator performs a site survey by measuring the RSS from different AP at some fixed positions in the environment. This set of measures, associated with positions, can be directly stored in a database [2] to be used in the localization system as a reference. These measures can also be extrapolated to the entire map using kriging methods such as in Ferris et al. [17]. Users must compile a fairly dense radio map comprising many RSS measurements at many sampled points to attain reasonable positioning accuracy. Moreover, these methods suppose that the propagation maps remain constant which, with our notation, means that the propagation functionF⋆does not depend on time. The measurement campaign can be seen as an instant “photograph” of the propagation map and has to be regularly performed in order to maintain the accuracy of the system. These problems have particularly been spotted by Chen et al. [9] and Madigan et al. [24]. Chen et al. [9] introduce RFID sensors in the environment to perform passive site survey. Madigan et al. [24] use a hierarchical Bayesian model to localize the mobile without site survey but rely on isotropic propagation maps which might lead to a bad estimation in complex indoor environments (although they study a more elaborate model that includes “corridors effects”).In this paper, we present a new estimation procedure of the propagation maps which does not involve any measurement campaign or additional sensors. The considered model does not assume any knowledge on the environment apart from the position of the AP. The propagation maps are estimated using an online Expectation Maximization (EM) based algorithm using the RSS measurements collected by the device. A similar approach can be found in Chai and Yang [8] which uses the classical EM algorithm to refine the propagation maps estimators obtained using a preliminary site survey. The first substantial benefit of our method concerns its ability to be implemented in any building. Moreover, unlike fingerprinting based methods, the precision of our localization system does not degrade with time as each measure Ykis used to improve the propagation maps estimators. The computation of the estimators requires sufficient statistics. These statistics summarize the information contained in all the past measures since they were last reset. If there are regular environmental modifications that strongly affect the WiFi propagation, regularly resetting these sufficient statistics is enough to improve the estimation. Then, our system is more robust than site survey based methods using static propagation maps estimators.Once the expected RSS has been estimated for the whole map or for some fixed positions, the device can be localized. Bahl and Padmanabhan [2] use the nearest neighbor algorithm. With this algorithm, the strong variability of the RSS leads to a very unstable localization. We use particle filtering to track the mobile device. Such filters have already been used by Ferris et al. [17] in a similar way. Evennou and Marx [16] introduce particle filtering on the Voronoi diagram. Such filters provide a much more stable sequence of positions despite the high variability of the data.Remark 2There is no chance to identify{Fk⋆}k≥0with the observations{Yk}k≥0only. In the next section, we omit the time dependency ofF⋆which might seem contradictory with our introduction. However, as stated in the above section, regularly resetting the sufficient statistics allows us to adapt the algorithm to environmental changes.Let Xkbe the cartesian coordinates of the mobile device at time k in a two-dimensional compact space. This compact space represents the map of the one-floor building where the localization is performed. This continuous environment is discretized into a finite grid map, denoted byC. It is assumed that{Xk}k≥1is a Markov chain taking values inCwith initial distribution ν and Markov transition matrix given, for all(x,x′)∈C2, by(2)q(x,x′)∝e−∥x−x′∥2/a,where∥·∥denotes the usual euclidean norm inR2(the associated inner product is denoted by〈·,·〉).a∈R+⋆depends on the average speed of the mobile and is assumed to be known. Therefore, the initial state X0 is distributed according to ν and, for anyk≥1and anyx∈C, givenXk=x,Xk+1=x′with probabilityq(x,x′).Let B be the number of AP and|C|be the cardinality ofC. In the sequel, for anyB×R|C|matrix A, we use the shorthand notation Ajfor the vector{Aj,x}x∈Cand Aj2 for the vector{Aj,x2}x∈C. At each time stepk≥1and for eachj∈{1,…,B}, the mobile device measures and sends to the server the observationYk,jgiven by(3)Yk,j=defμj,Xk⋆+δj,Xk⋆+εk,j,where•μj,x⋆is the j-th average indoor propagation term at position x. For allx∈Cand allj∈{1,…,B},μj,x⋆only depends on the distance between x and Ojwhere Ojis the known position of the j-th AP. In the sequel, we use the so-called Friis transmission equation given by Friis [18]:(4)μj,x⋆=defcj⋆+dj⋆log∥x−Oj∥,wherecj⋆anddj⋆are parameters depending on the environment and wherelogis the logarithm to the base e.δj⋆is an additive term due to random perturbations. A similar model of WiFi propagation maps using Gaussian processes can be found in Ferris et al. [17]. It is assumed that the parameters{δj⋆}j=1Bare embedded with the prior distribution π given, for anyδ∈RB|C|, byπ(δ)∝exp{−12∑j=1BδjTΣ−1δj},where for any matrix A,ATis the transpose of A and whereΣis assumed to be known.{εk}k≥0is a sequence of i.i.d Gaussian random vectors inRB, independent of{Xk}k≥1, with mean 0 and covariance matrixσ⋆,2IB, where IBis the identity matrix of size B×B.Fj⋆=defμj⋆+δj⋆will be referred to as the true propagation map of the j-th AP andF⋆=def{Fj⋆}j=1Bas the true propagation maps. Fig. 3displays a realization ofδj⋆(sampled from π) and the functionsμj⋆andFj⋆, defined on the gridC={0,…,30}×{0,…,30}. The parameters used in this figure areOj=(15,15), andcj⋆,dj⋆andΣare given in Section 5. In the sequel, we writeθ⋆=def(c⋆,d⋆,δ⋆,σ⋆,2),wherec⋆=def{cj⋆}j=1B,d⋆=def{dj⋆}j=1Bandδ⋆=def{δj⋆}j=1B.For anyx∈Cand anyk≥1, the distribution of Ykconditionally toXk=xhas a density with respect to the Lebesgue measure onRBgiven bygθ⋆(x,Yk), where, for ally=def(y1,…,yB)∈RB,gθ⋆(x,y)=def(2πσ⋆,2)−B/2∏j=1Bexp{−|yj−Fj,x⋆|22σ⋆,2}.In the sequel, we aim at simultaneously estimating the device position andθ⋆using the observations{Yk}k≥1. For any positive integer n, any observation set(y1,…,yn)shortly denoted byy1:n, and any parameterθ=(c,d,δ,σ2), the likelihood of the observationsy1:nis given byLθ(y1:n)=def∑x1:n∈Cnν(x1)gθ(x1,y1)∏k=2nq(xk−1,xk)gθ(xk,yk).Let n be a positive integer andY1:nbe a set of observations. The estimator ofθ⋆is set as one maximizer of the function:(5)θ=(c,d,δ,σ2)↦n−1[logLθ(Y1:n)+logπ(δ)].The EM algorithm is a well-known iterative algorithm to perform maximum likelihood estimation in hidden Markov models [13]. An EM based algorithm can be introduced to maximize (5). Each iteration of this algorithm is decomposed into an E-step where the expectation of the complete data log-likelihood (log of the joint distribution of the states and the observations) conditionally on the observations is computed; and a M-step which updates the parameter estimate. LetY1:nbe a fixed set of observations and θibe the current map estimate.(i)The E-step amounts to computing the conditional expectation(6)Qθi(Y1:n;θ)=Eθi[1nlogpθ(X1:n,Y1:n)|Y1:n],wherelogpθ(X1:n,Y1:n)is the complete data log-likelihood andEθi[·|Y1:n]is the conditional expectation givenY1:nwhen the map is θi.The M-step computes the new value θi+1 by choosing one of the maps θ maximizingθ=(c,d,δ,σ2)↦Qθi(Y1:n;θ)+n−1logπ(δ).Map update.Require:n,S1,{S2,j}j=1B,{S3,j}j=1B.1: Computation of intermediate quantities2: forj=1 to Bdo3:forx∈Cdo4:Dj,x=log∥x−Oj∥.5:end for6:M0,j=diag(S1)+σ2n+1Σ−1.7:M1,j=diag(S1)[I|C|−M0,j−1diag(S1)].8:M2,j=I|C|−diag(S1)M0,j−1.9:W1,j=1TM1,j1.10:W2,j=1TM1,jDj.11:W3,j=DjTM1,jDj.12:wj=W1,jW4,j−W2,j2.13: end for14: Parameter update15: forj=1 to Bdo16:cj=wj−1[W3,j1T−W2,jDjT]M2,jS2,j.17:dj=wj−1[−W2,j1T+W1,jDjT]M2,jS2,j.18:δj=M0,j[S2,j−diag(S1)(cj1+djDj)].19:Fj=cj1+djDj+δj.20:σ2=B−1∑j=1B{FjTdiag(S1)Fj−2S2,jTFj+S3,j}.21: end for22: returnθi+1=(c,d,δ,σ2).This two step process can be repeated until the likelihood does not improve significantly. However, when the observations are obtained sequentially, this algorithm does not produce a new estimate as new observations are received. The mobile device localization requires an online method which does not store the data and which frequently updates the propagation maps.Online variants of the EM algorithm have been proposed to obtain map estimates each time a new observation is available. In the case of i.i.d. observations, Cappé and Moulines [6] proposed the first EM based online algorithm. This algorithm replaces the exact computation of the sufficient statisticsS1,S2,jandS3,jby a stochastic approximation step. In the case of hidden Markov models, when both the observations and the states take a finite number of values (resp. when the state-space is finite) an online EM-based algorithm was proposed by Mongillo and Denève [25] (resp. by [5]). These algorithms combine an online approximation of the filtering distributions of the hidden states and a stochastic approximation step to compute an online approximation of the sufficient statistics. This has been extended to the case of general state-space models with Sequential Monte Carlo algorithms in Cappé [4], Del Moral et al. [12] and Le Corff et al. [23]. More recently, Le Corff and Fort [21,22] proposed the Block Online EM (BOEM) algorithm in which the estimate is kept fixed as block of observations is received and is updated at the end of each block. See also Andrieu et al. [1] for an overview of online estimation procedures using Sequential Monte Carlo methods.This paper introduces an EM algorithm for online localization in wireless sensor networks based on the algorithm introduced in Le Corff and Fort [21,22]. Let{τk}k≥1be a sequence of block-sizes and defineT0=def0and, for anyk≥1,Tk=def∑i=1kτi. Within each block of observationsYk=defYTk+1:Tk+1, the estimate θkis kept fixed and the sufficient statisticsS1k,S2,jkandS3,jkare computed sequentially using the current estimate θk, the observationsYkand τk+1 as the number of observations. The superscript k indicates which observations are used in the definition of the statistics. The next parameter estimate θk+1 is computed when the last observationYTk+1is received using Algorithm 1.Unlike in the traditional EM algorithm where the sufficient statistics are computed using forward–backward techniques, Cappé [5], Del Moral et al. [12] and Le Corff and Fort [22] proposed to compute the sufficient statistics recursively (i.e. as the observations are received and without any storage). In general state-space hidden Markov models, these online computations are not available in closed form (except in simple models such as linear Gaussian models) and have to be approximated, e.g. using sequential Monte Carlo methods [4,12]. For finite state-space hidden Markov models, the computations can be performed in theory but are computationally too expensive if the number of states is too large (which is the case in our localization framework, see Section 5). Therefore, sequential Monte Carlo methods are used in this paper to localize the mobile.In this case, the filtering distribution ϕtkon the block k, i.e the distribution ofXTk+tgivenYTk+1:Tk+tandXTk~ν, is approximated by weighted particles{(ξTk+ti,ωTk+ti)}i=1Nsuch thatϕ^tk(x)=∑i=1NωTk+tiδξTk+ti(x),whereδξTk+tidenotes the Dirac distribution at positionξTk+ti. For allk≥0andt∈{1,…,τk+1},{ξTk+ti}i=1Nis a set of possible mobile positions at timeTk+t. At each time step, the new population of particles is built from the previous population using the bootstrap filter, see Gordon et al. [20]. The Bootstrap filter combines sequential importance sampling and resampling steps to produce this set of random particles with associated importance weights. Implementations of such procedures are detailed in Cappé [3], Del Moral [11], Cappé et al. [7], and Doucet and Johansen [14].Online map estimation: We describe here the online approximation on the blockYkof the statisticS1kwhich is used to compute the map estimate θk+1 whenTk+1is received. The computations forS2,jkandS3,jkfollow the same lines. The rationale to establish this online approximation can be found in Del Moral et al. [12]. The first particles ξ0i,i∈{1,…,N}, are sampled uniformly inCand the first weights are set asω0i=N−1,i∈{1,…,N}:(i)SetρTki=0for alli∈{1,…,N}.For allt∈{1,…,τk+1}repeat(a)For alli∈{1,…,N},•draw I in{1,…,N}with probabilities{ωTk+t−1ℓ}ℓ=1N;sampleξTk+ti~q(ξTk+t−1I,·);setωTk+ti∝gθk(ξTk+ti,YTk+t).ComputeρTk+ti=1ts1(ξTk+ti)+t−1t∑ℓ=1N×ωTk+t−1ℓq(ξTk+t−1ℓ,ξTk+ti)ρTk+t−1ℓ∑p=1NωTk+t−1pq(ξTk+t−1p,ξTk+ti).The approximation ofS1kon the blockYkis then given byS^1k=∑i=1NωTk+τk+1iρTk+τk+1i.Once these computations are done for each statistic, the estimate θk+1 is computed by Algorithm 1 applied withS^1k,S^2,jk,S^3,jkand τk+1.The BOEM proposed in Le Corff and Fort [22] also introduced an averaged estimate{θ˜k}k≥0based on a weighted mean of all the sufficient statistics computed in the past. It is proved in Le Corff and Fort [22] that this averaged estimator has an optimal rate of convergence. This can be easily done recursively after the computation of each statistic in step (iii). Step (iii) is then followed by(iii′)Compute (withS˜10=0)S˜1k=TkTk+1S˜1k−1+τk+1Tk+1S^1k.And step (iv) is then followed by(iv′)Once these computations are done for each statistic, the estimateθ˜k+1is computed by Algorithm 1 applied withS˜1k,S˜2,jk,S˜3,jkandTk+1.Localization procedure: At each time step, we compute two estimators of the device position:(i)Nonaveraged algorithm: At each time step, the estimation of the device position is set as the particle with the greatest importance weight:X^t=defξtimax,whereimax=defargmaxiωti.Averaged algorithm: As the average sequence{θ˜k}k≥0has a better rate of convergence, another particle system{(ξ˜ti,ω˜ti)}is run using only step (ii) (a) above by replacing θkbyθ˜k. Then, the estimation of the device position is set asX˜t=defξ˜ti˜max,wherei˜max=defargmaxiω˜ti.Other natural estimators of the device position such as the posterior means could be used:X^t=∑i=1NωtiξtiandX˜t=∑i=1Nω˜tiξt˜i.However, we did not observe significant differences between the estimated localization provided by the posterior means and by the proposed estimators with both simulated and true data. Moreover, we observed that the bootstrap filter sometimes produces several clouds of particles remote from each other (each of them is concentrated around local maxima of the filtering distribution). In this case, the proposed estimators offer a better accuracy than the weighted means. Finally, some indoor maps may not be convex such as in Section 5.2. In this case, the weighted means may not belong to the map while the proposed estimators always do.Stabilization procedure: We add a stabilization step which consists in regularly replacing the original map estimate by the averaged one(θk←θ˜k). This step is needed to improve the performance of the algorithm as detailed in Section 5.

@&#CONCLUSIONS@&#
