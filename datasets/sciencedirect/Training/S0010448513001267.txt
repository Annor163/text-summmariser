@&#MAIN-TITLE@&#
Efficient time-optimal feedrate planning under dynamic constraints for a high-order CNC servo system

@&#HIGHLIGHTS@&#
A relationship between the tracking error and the input signal is established.The tracking error constraint for a CNC system is reduced to a kinematic constraint.The nonlinear constraints on jerk are reduced to linear constraints.Feedrate planning under confined tracking error is reduced to convex optimization.

@&#KEYPHRASES@&#
Time-optimal feedrate planning,Tracking error,Jerk,High-order CNC servo system,Convex optimization,

@&#ABSTRACT@&#
In this paper, the time-optimal feedrate planning problem under confined feedrate, axis velocity, axis acceleration, axis jerk, and axis tracking error for a high-order CNC servo system is studied. The problem is useful in that the full ability of the CNC machine is used to enhance the machining productivity while keeping the machining precision under a given level. However, the problem is computationally challenging. The main contribution of this paper is to approximate the problem nicely by a finite-state convex optimization problem which can be solved efficiently. The method consists of two key ingredients. First, a relationship between the tracking error and the input signal in a high-order CNC servo system is established. As a consequence, the tracking error constraint is reduced to a constraint on the kinematic quantities. Second, a novel method is introduced to relax the nonlinear constraints on kinematic quantities to linear ones. Experimental results are used to validate the proposed method.

@&#INTRODUCTION@&#
The problem of time-optimal feedrate planning along a given parametric tool path has received a significant amount of attention in the CNC machining literature due to its ability to increase the productivity of CNC machining by using the full ability of the machines  [1–13]. The feedrate planning problem is usually formulated as a time-minimum optimal control problem under kinematic constraints such as confined feedrate, axis acceleration, jerk, and even jounce, and efficient algorithms have been proposed to solve the problem. The acceleration bounds are introduced to reduce inertia and prevent mechanical shocks. The jerk and jounce bounds are used to generate smooth feedrate profiles aimed at improving the machining quality.For various reasons, such as the inertia of the CNC axes and inaccurate modeling of the CNC dynamic system, the tracking error is not guaranteed to reach the desired level even if the acceleration and jerk are bounded. A common method to reduce tracking errors is to use a closed-loop controller which calculates the difference between the desired signal and the feedback signal in real time and generates a control signal to minimize the dynamic error. Many algorithms along this line have been developed, such as the cross-coupled control strategy  [14,15], the model-referenced adaptive control  [16], the predictive control [17], and the learning control  [18]. In order to use these closed-loop methods, users need to access the control system, which demands more from the end-users.An alternative approach is to combine “open-loop” feedrate planning with dynamic precision control by adding a tracking error bound as a new constraint in the feedrate planning phase. An advantage of this approach is that accessing the control system is not required, and hence this is more convenient for the end-users. Dong and Stori  [19,20] considered the dynamic error information in the feedrate planning phase by approximating the tracking error with the linear part of its Taylor expansion. Ernesto and Farouki  [4] solved the problem of compensating for inertia and damping of the machine axes by a priori modifying the commanded tool path. In  [21,22], Lin, Tsai, et al. used critical point approaches to generate a feedrate with confined contouring errors. In  [23], a linear programming method is proposed to solve the feedrate planning problem under confined tracking error for CNC systems based on PD controllers.In this paper, the time-minimum feedrate planning problem under confined feedrate, axis velocity, axis acceleration, axis jerk, and axis tracking error is studied. To be practical, dynamic systems with PID controllers are considered, where the tracking error satisfies a third-order differential equation. The time-minimum feedrate planning problem in this situation is strongly nonlinear, and there exist no efficient algorithms for solving it at present. The main contribution of this paper is to reduce the time-minimum feedrate planning problem into a finite-state convex optimization problem whose global optimal solution can be computed efficiently. The work consists of two key ingredients. First, a relationship between the tracking error and the input signal in high-order CNC servo systems is established. As a consequence, the tracking error constraint can be reduced to a constraint on a linear combination of kinematic quantities such as accelerations and jerks. Second, a novel method is introduced to relax the nonlinear constraints involving the jerk to linear constraints. Experimental results show that the new convex optimization problem gives a nice approximation to the original problem and can be solved efficiently.In contrast to the work reported in  [19,4,23], high-order CNC servo systems are considered, which allows the usage of PID controllers, while the work reported in  [19,4,23] only considered second-order systems for P or PD controllers. Furthermore, the relaxation of the tracking error in this paper is theoretically guaranteed to be valid, while the one given in  [19] is an approximation. Also, our approach reduces the optimal feedrate planning problem into a convex programming problem which can be solved efficiently. The method proposed in  [10], although more general than ours, is less efficient. In contrast to  [21,22], our approach generates an approximate time minimum feedrate, while the feedrate generated with methods in  [21,22] is not time minimum. And in contrast to  [9], which initiates the powerful convex optimization approach, we consider a much more general and non-convex problem which is reduced to a convex optimization problem, while the problem considered in  [9] is itself convex.The paper is organized as follows. Section  2 describes high-order dynamic models and shows how to simplify the tracking error constraint. Section  3 presents an efficient method to solve the time-minimum feedrate planning problem by converting it to a convex optimization problem. In Section  4, experimental results are used to demonstrate the effectiveness of the approach. In Section  5, concluding remarks are given.In this section, we will show that the tracking error constraint can be replaced by a constraint on kinematic quantities such as accelerations and jerks.Suppose that the CNC machine is controlled byMaxes; the subscriptτ∈{1,…,M}will represent these axes. Each axis is powered by a DC motor satisfying annth-order linear system whose transfer function is  [24, p. 70]Hτ(s)=xτ(s)Xτ(s)=bmsm+bm−1sm−1+⋯+b1s+b0ansn+an−1sn−1+⋯+a1s+a0,whereXτandxτare the commanded axis location and the actual axis location, respectively.Using the closed-form position control shown in Fig. 1, we can calculate the transfer function between the tracking erroreτ=Xτ−xτand the input signalXτ:G(s)=eτ(s)Xτ(s)=(ansn+an−1sn−1+⋯+a1s+a0)−(bmsm+bm−1sm−1+⋯+b1s+b0)ansn+an−1sn−1+⋯+a1s+a0=clsl+cl−1sl−1+⋯+c1s+c0ansn+an−1sn−1+⋯+a1s+a0,wherel≤max(m,n). Using the inverse Laplace transformation of the above equation, if the initial values ofeτ(t)and its derivatives are zero, then the tracking erroreτ(t)satisfies the following differential equation:(2.1)andneτdtn+an−1dn−1eτdtn−1+⋯+a1deτdt+a0eτ=cldlXτdtl+cl−1dl−1Xτdtl−1+⋯+c1dXτdt+c0Xτ,wheretrepresents time. In order for the above system ineτto be stable, the real parts of the eigenvalues of the linear system on the left-hand side of (2.1) are assumed to be negative  [24, p. 76]. More precisely, the roots of the following character equation of system (2.1)(2.2)anλn+an−1λn−1+⋯+a1λ+a0=0are assumed to have negative real parts.Now, the problem of optimal trajectory planning along a given tool-path can be formulated as the following time-minimum control problem under kinematic constraints and tracking error constraints:(2.3)minTs.t.|dXτdt|≤Xmax1,|d2Xτdt2|≤Xmax2,…,|dmXτdtm|≤Xmaxm,|eτ|≤Emax,whereτ∈{1,…,M}represents the axes,mis a positive integer to be given by the user,Xmaxjare positive real numbers, andeτ(t)satisfies Eq. (2.1).Note that the numbermdetermines the smoothness of the velocity functions to be obtained. For instance, ifm=2, then the acceleration is bounded and the velocity function is continuous; ifm=3, then the acceleration and the jerk are bounded, and the velocity function is differentiable; and ifm=4, then the acceleration, jerk, and jounce are bounded, and the acceleration function is differentiable. Generally speaking, the smoother the velocity function is, the less vibration occurs, as shown in [5].The last constraint of (2.3) is difficult to deal with since it will lead to complicated equations when solving the optimization problem via discrete methods. In this section, we will show that the tracking error constraint can be replaced with a constraint on the kinematic quantities. More precisely, we have the following.Theorem 2.1Leteτbe the tracking error for theτaxis, which satisfies   (2.1)   and has initial valueseτ(0)=deτdt(0)=⋯=dn−1eτdtn−1(0)=0. Then(2.4)|cldlXτdtl+cl−1dl−1Xτdtl−1+⋯+c1dXτdt+c0Xτ|≤δEmaximplies that|eτ|≤Emax. The constantδin   (2.4)   isa0in   (2.1)   if the roots of Eq.   (2.2)   are real numbers and is computed with   (2.7)   otherwise.The above theorem will be proved in the rest of this section. Two cases will be considered according to whether the roots of Eq. (2.2) are real numbers or not. First, we deal with the easier case given in the following theorem.Theorem 2.2Lety(t)be a function in timet, which satisfies the followingnth-order ordinary differential equation (ODE):(2.5)andnydtn+an−1dn−1ydtn−1+⋯+a1dydt+a0y=g(t),whereaiare constants andg(t)is a nonlinear function int. Furthermore, assume thaty(0)=⋯=dn−1ydtn−1(0)=0and that the roots of Eq.(2.2)   are negative real numbers. Then, for a constantM,|g(t)|≤|a0|Mimplies that|y(t)|≤M.In order to prove the above theorem, the following lemma is needed, which is from  [23].Lemma 2.3Lety(t)be a differentiable function in the time domaint∈[0,∞)such thaty(0)=0, and letMandrbe positive real numbers. Ifysatisfies|rdydt+y|≤M, then|y|≤M.Proof of Theorem 2.2By the assumption of the theorem, the roots of the character equation (2.2) are negative real numbers, which are denoted by−1di,i=1,…,n,di>0. Then, the character equation (2.2) of the left-hand side of system (2.5) can be expressed asf(λ)/a0=(d1λ+1)(d2λ+1)⋯(dnλ+1)=0.Define{z1=d1dydt+y,z2=d2dz1dt+z1,⋯zn=dndzn−1dt+zn−1.It is easy to verify that the left-hand side of (2.5) becomes(andnydtn+an−1dn−1ydtn−1+⋯+a1dydt+a0y)/a0=zn=dnżn−1+zn−1=g(t)/a0.Thus, by Lemma 2.3, from|g(t)/a0|≤M, we have|zn−1|≤M. Sincezn−1=dn−1żn−2+zn−2anddn−1>0, using Lemma 2.3 again, we have|zn−2|≤M. Repeatedly, we have|y|≤M, which proves the theorem.■The second case, where Eq. (2.2) has complex roots, is more involved. Before giving the result, some notation and a lemma are needed.LetRbe the set of real numbers,x∈Rn, andA∈Rn×n. Then it is well known that the following vector 1-norm and matrix 1-norm‖x‖1=∑j=1n|xj|,‖A‖1=max1≤j≤n∑i=1n|aij|satisfy the following compatible condition:‖Ax‖1≤‖A‖1‖x‖1.Besides, the following lemma is needed.Lemma 2.4Letx=(x1(t),…,xn(t))and letxi(t)be integrable functions fromRtoR. Then‖∫abx(τ)dτ‖1≤∫ab‖x(τ)‖1dτ.Proof‖∫abx(τ)dτ‖1=∑j=1n|∫abxj(τ)dτ|≤∑j=1n∫ab|xj(τ)|dτ=∫ab{∑j=1n|xj(τ)|}dτ=∫ab‖x(τ)‖1dτ.■The following theorem simplifies the tracking error in the second case.Theorem 2.5Lety(t)be a function in timet, which satisfies the followingnth-order ODE:(2.6)andnydtn+an−1dn−1ydtn−1+⋯+a1dydt+a0y=g(t),whereaiare constants andg(t)is a nonlinear function int. Furthermore, assume thaty(0)=⋯=dn−1ydtn−1(0)=0. Then, for a constantM,|g(t)|≤δMimplies that|y|≤M, where the constantδis calculated using(2.7)δ=1∫0∞‖eτA‖1dτforA=(010⋯⋯⋯⋯00⋯01−a0an−a1an⋯−an−1an)n×n.ProofWe rewrite the ODE (2.6) in matrix form:(2.8)dydt=Ay+g(t),wherey=(y,y1,…yn−1)T,g(t)=(0,0,…,0,g(t))T, and matrixAis given in the theorem to be proved. Obviously,|λI−A|=det(λ−10⋯⋯⋯⋯00⋯λ−1a0ana1an⋯λ+an−1an)n×n.Expand this determinant along the last column:|λI−A|=(λ+an−1an)λn−1+an−2anλn−2+⋯+a1anλ+a0an,which is the character equation of (2.6). Hence, the eigenvalues ofAare the same as the roots of Eq. (2.2).According to the theory of differential equations, the solution of (2.8) can be calculated asy(t)=e(t)Ay(0)+∫0te(t−τ)Ag(τ)dτ,wherey(0)is the initial value. Sincey(0)=0, according to the definition of vector norm and Lemma 2.4, we have‖y(t)‖1=‖∫0te(t−τ)Ag(τ)dτ‖1=‖∫0teτAg(t−τ)dτ‖1≤∫0t‖eτA‖1‖g(t−τ)‖1dτ.Thus|y|≤‖y(t)‖1≤δM∫0∞‖eτA‖1dτ≤M.Since the roots of (2.2) have negative real parts,∫0∞‖eτA‖1dτexists, and the theorem is proved.■In most cases, error-based feedback controllers are based on PID controllers whose control parameters are the proportional, integral, and derivative gainskP,kI, andkD, respectively. An illustration is given in Fig. 2, whereeτ=Xτ−xτis the tracking error. The other parameters are explained below. The current amplifierkaconverts the actuating signaluinto the currentito control the motor, which produces a torqueTthrough the motor torque gainkt. The torqueTdetermines the angular speed through the system inertiaJand dampingB. The motor shaft angleθ, obtained by integration of the motor shaft angle speedw, determines the axis linear positionxthrough the transmission ratiorg. Besides, setK=kaktrg, since these three parameters often occur in this product form. Then, the tracking error and the input signal satisfy the following dynamic equation:(2.9)Jd3eτd3t+(B+KkD)d2eτd2t+KkPdeτdt+KkIeτ=Jd3Xτd3t+Bd2Xτd2t=Jjτ+Baτ,whereaτandjτare the acceleration and the jerk of theτaxis.Notice that a third-order system with real coefficients has either one real eigenvalue or three real eigenvalues, and explicit criteria can be given for these cases. Thus, we have the following simplification criterion for system (2.9).Theorem 2.6Let the tracking erroreτ(t)satisfy the initial valueseτ(0)=deτdt(0)=d2eτd2t(0)=0. Then the tracking error constraint|eτ|≤Emaxcan be replaced by(2.10)|JKkIjτ+BKkIaτ|≤δEmax,whereδis determined as follows. Letd=4((B+KkD)2−3JKkP)3−(2(B+KkD)3−9J(B+kkD)KkP2+27KkIJ2).Then, ifd>0, we can setδ=1. Ifd<0,δis calculated with   (2.7).ProofWe need to know when the following cubic equation(2.11)Jλ3+(B+KkD)λ2+KkPλ+KkI=0has real or complex roots. A cubic equation has either one or three real roots. Following the criterion given in  [25, p. 299], ifd>0, then Eq. (2.11) has three distinct real roots andδ=1by Theorem 2.2; ifd<0, then Eq. (2.11) has one real root and two distinct complex roots, and the theorem follows from Theorem 2.5.■In this section, we will show how to convert the time-optimal feedrate planning problem for CNC systems with PID controllers into a finite-state convex optimization problem.We consider a CNC system with three translational axesx,y,z, and assume that these axes have the same dynamic parameters. Also assume that the PID controller is used for each axis. Thus the tracking error satisfies Eq. (2.9). The tool-path of the three-axis CNC machine is given by a set of parametric functions with at leastC2continuity:r(u)=(x(u),y(u),z(u)),u∈[0,1].The tool-pathr(u)could be described by NURBS,B-splines, or other parametric equations. We will see in Section  3.3 that only the evaluations ofr(u),dr(u)du,d2r(u)d2uat certain given parametric values are needed in the feedrate planning.In order to obtain smooth velocity functions, bounds of axis velocity, acceleration, and jerk are introduced. Furthermore, high-precision machining can be achieved by bounding the axis tracking error. Therefore, the problem is to design a parametric velocityu̇=dudtsuch that the tool-path can be traversed with minimal time under the kinematic and precision constraints mentioned above:(3.1)minu̇∫011u̇dus.t.|vf|≤Vfmax,|vτ|≤Vmax,|aτ|≤Amax,|jτ|≤Jmax,|eτ|≤Emaxwhereτ∈{x,y,z}is the axis,vfis the tangential feedrate,vτis the axis velocity,aτis the axis acceleration,jτis the axis jerk,eτis the axis dynamic error satisfying (2.9), andVfmax,Vmax,Amax,Jmax,Emaxare the corresponding bounds, respectively. The following initial values are assumed:u̇(0)=u̇(1)=ü(0)=ü(1)=0.Note that, instead of the contour error, the tracking error is considered here for two reasons: the model based on tracking error is simpler and can be solved efficiently, as shown by this paper, and limited tracking errors lead to limited contour errors.By Theorem 2.6, the tracking error constraint can be simplified and the optimal control problem (3.1) can be relaxed into the following problem, whose constraints involve kinematic quantities only.(3.2)minu̇∫011u̇du(3.3)s.t.{|vf|≤Vfmax|vτ|≤Vmax|aτ|≤Amax|jτ|≤Jmax|JKkIjτ+BKkIaτ|≤δEmax,whereδis given in Theorem 2.6 andu̇(0)=u̇(1)=ü(0)=ü(1)=0.In the rest of this section, we will rewrite problem (3.2) into a form which is more convenient for numerical solution. Denote “′” to be “ddu” and “̇” to be “ddt”. Introduce three new functionsa(u),b(u), andc(u)inu:a(u)=u̇(u)2,(3.4)b(u)=ü=du̇dt=12(u̇2)′=12a′(u),c(u)=b′(u).Then the kinematic quantities can be written as functions ina,b, andc:vτ=τ′u̇=τ′a(u),(3.5)aτ=τ″u̇2+τ′ü=τ″a(u)+τ′b(u),jτ=τ‴u̇3+2τ″u̇ü+τ′=a(u)(τ‴a(u)+τ″b(u)+τ′c(u)),vf=σa(u),whereσ=x′2+y′2+z′2andτ∈{x,y,z}.Treatc(u)as the control variable anda,bas the state as the state variables. Then problem (3.2) becomes a classic optimal control problem:(3.6)minc(u)∫011a(u)du(3.7)s.t.{σ2a(u)≤Vfmax2(τ′)2a(u)≤Vmax2|τ″a(u)+τ′b(u)|≤Amax|a(u)(τ‴a(u)+τ″b(u)+τ′c(u))|≤Jmax|Ja(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))KkI|≤δEmax,whereτ∈{x,y,z}represents the axis. From (3.4), the initial values area(0)=a(1)=b(0)=b(1)=0.Obtaining a numerical solution to problem (3.6) is challenging due to the strong nonlinear part in the jerk and tracking error constraints, as shown in Section  4.2. In this section, we will show that problem (3.6) can be relaxed to a convex optimal control problem whose constraints are linear in the control and state variables.Two ideas are used in the relaxation. First, the unique optimal solution of the following time-minimum feedrate planning problem under confined acceleration(3.8)minu̇∫011u̇dus.t.|vf|≤Vfmax,|vτ|≤Vmax,|aτ|≤Amaxis generated and used to simplify the last two constraints in (3.7). Second, new conditions on the dynamic parameters will be introduced to further simplify the last constraint in (3.7).The following important property for problem (3.8) is proved in  [2,19].Lemma 3.1The optimal solution of problem   (3.8)   achieves the maximum values among all feasible solutions at any parameter value.We now reduce problem (3.6) to a new form, where the constraints are linear in the control and the state variablesa,b,c.Theorem 3.2Leta∗(u)=u̇(u)2be the optimal solution of problem   (3.8), and assume that the parameters satisfy the following condition:(3.9)EmaxKkI−BAmax>0.Then problem   (3.6)   can be relaxed to the following optimal control problem:(3.10)minc(u)∫011a(u)du(3.11)s.t.{σ2a(u)≤Vfmax2(τ′)2a(u)≤Vmax2|τ″a(u)+τ′b(u)|≤Amax|a∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))|≤Jmax|Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))KkI|≤Emax,with initial valuesa(0)=a(1)=b(0)=b(1)=0. More precisely, ifa,b,csatisfy constraints   (3.11), then they must satisfy constraints   (3.7).ProofSince the first three constrains in (3.7) and (3.11) are the same, we just need to show that the fourth and fifth constraints of (3.11) imply the fourth and fifth constraints of (3.7).Leta(u),b(u),c(u)be feasible solutions to problem (3.10). Since the first three constraints of (3.11) are the same as those of (3.8),a(u)is also a feasible solution to problem (3.8). Then, by Lemma 3.1,a(u)≤a∗(u)foru∈[0,1]. We thus have|a(u)(τ‴a(u)+τ″b(u)+τ′c(u))|=|a(u)||(τ‴a(u)+τ″b(u)+τ′c(u))|≤|a∗(u)||(τ‴a(u)+τ″b(u)+τ′c(u))|,and hence the fourth constraint in (3.11) implies the fourth constraint in (3.7).For the fifth constraint, two cases are considered. In the first case, the fifth constraint in (3.11) is assumed to be bang–bang; that is,|Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))KkI|=Emax,which means either(3.12)Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))=EmaxKkI,or(3.13)Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))=−EmaxKkI.Suppose that (3.12) is valid. Due to condition (3.9),Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))=EmaxKkI−B(τ″a(u)+τ′b(u))=EmaxKkI−Baτ≥EmaxKkI−B|aτ|≥EmaxKkI−BAmax≥0.Hence,(τ‴a(u)+τ″b(u)+τ′c(u))≥0andJa∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))≥Ja(u)(τ‴a(u)+τ″b(u)+τ′c(u)).Therefore, the fifth constraint in (3.11) implies the fifth constraint in (3.7). Likewise, if (3.13) is valid,Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))=−EmaxKkI−B(τ″a(u)+τ′b(u))=−EmaxKkI−Baτ≤−EmaxKkI+BAmax≤−(EmaxKkI−BAmax)≤0.Then, in this case,Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))≤Ja(u)(τ‴a(u)+τ″b(u)+τ′c(u)).Thus, in the first case, a solution of (3.10) is also a feasible solution of (3.6).Now consider the second case, that is, the fifth constraint in (3.11) is not bang–bang:(3.14)|Ja∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))KkI|<Emax.We will show that the fifth constraint in (3.7) is also valid. Suppose the contrary; that is,|Ja(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))KkI|>Emax.Consider one case as an example:(3.15)Ja(u)(τ‴a(u)+τ″b(u)+τ′c(u))+B(τ″a(u)+τ′b(u))KkI>Emax.From (3.9) and (3.15), we haveJa(u)(τ‴a(u)+τ″b(u)+τ′c(u))>KkIEmax−B(τ″a(u)+τ′b(u))>0.Hence,(τ‴a(u)+τ″b(u)+τ′c(u))>0andJa∗(u)(τ‴a(u)+τ″b(u)+τ′c(u))≥Ja(u)(τ‴a(u)+τ″b(u)+τ′c(u))≥KkIEmax−B(τ″a(u)+τ′b(u)),which contradicts (3.14). The theorem is proved.■Note that the constraints in (3.11) are linear in the control and state variables and that the objective function is a convex function [9]. Then, problem (3.10) is a convex optimal control problem.In this section, the direct transcription method is used to solve problem (3.10). It is shown that problem (3.10) can be reduced to a finite-state convex optimization problem which admits efficient numerical solution.To convert the infinite-state optimization problem into a finite-state optimization problem, the parametric interval[0,1]is divided intoNequal parts with knotsui=iN,i=0,1,…,N. The length of each subinterval isΔ=1N. SinceΔis very small, the constraints can be approximately transformed into discrete inequalities at pointsui.Problem (3.10) is solved in two steps.First, efficient numerical methods from  [13] or [9] are used to compute a discrete optimal solutionai∗=a(ui),i=0,…,Nfor problem (3.8).Second, to solve problem (3.10), we useci=c(ui),i=0,…,Nas the control variables, and the state variablesai=a(ui),i=0,…,Nandbi=b(ui),i=0,…,Ncan be calculated with finite differences due to (3.4):bi≈ai+1−ai2Δ,ci≈bi+1−biΔ,i=0,1,…,N−1.Sincea(0)=b(0)=a(1)=b(1)=0, we havea0=a1=b0=aN=bN=0and(3.16)bi+1=Δ∑k=0ick+b0=Δ∑k=0ick,i=0,…,N−1.(3.17)ai+1=2Δ∑k=0ibk=2Δ2∑l=0i−1(i−l)cl,i=1,…,N−1.Following the two steps described above, problem (3.10) can be approximated by the following finite-state nonlinear programming problem:(3.18)minci∑j=2N−11ajs.t.{σi2ai≤Vfmax2(τi′)2ai≤Vmax2|τi″ai+τi′bi|≤Amax|ai∗(τi‴ai+τi″bi+τi′ci)|≤Jmax|J(ai∗(τi‴ai+τi″bi+τi′ci))+B(τi″ai+τi′bi)KkI|≤EmaxΞ∈Ω,whereτ∈{x,y,z},i=0,…,N,τi′=τ′(ui),τi″=τ″(ui),ai∗are the solution of (3.8) obtained in the first step,aiandbican be derived from (3.17) and (3.16),Ξis the set of mechanism and bound parameters, andΩis the parameter domain determined by (3.9). Also, the initial valuesaN=bN=0lead to the following constraints onci:∑i=0N−1ci=0and∑i=0N−2(N−1−i)ci=0.The constraints of problem (3.18) are linear in variablesci, and the objective function is a convex function inci[9]. As a consequence, problem (3.18) is a convex optimization problem which has the nice property that a local optimal solution of the problem is its unique global optimal solution. This allows us to use any gradient-based method to solve problem (3.18).In this paper, the Sequential Quadratic Programming (SQP) method [26] is used to solve problem (3.18). The SQP method reduces the problem to a sequence of optimization subproblems, each of which optimizes a quadratic model of the objective function to a linearization of the constraints. Since the constraints of problem (3.18) are already linear, the SQP method is particularly suited for it.In order to use the SQP method to solve problem (3.18), the numberNof discretizations need to be given. The selection ofNis closely related to the lengthsΔsi=‖r(ui)−r(ui−1)‖of the line segmentsr(ui)r(ui−1). According to the theory of the finite element method  [7], these lengths need to satisfyΔsi≤0.1mmin order to achieve high-accuracy computation for most CNC machining. So, a lower boundNlforNis the smallest integer such thatΔsi≤0.1mmfori=1,…,N. Furthermore,Nshould be large enough for the tool-path to be sufficiently subdivided. Combining these two factors, an experimental lower bound forNismax{100,Nl}.In this section, the proposed method is tested in a CNC tool to validate its effectiveness.The plane curve “star” shown in Fig. 3is used as the experimental tool-path, whose parametric equation is{x=(15+5⋅cos(10πu))⋅cos(2πu+0.5π)y=(15+5⋅cos(10πu))⋅sin(2πu+0.5π),u∈[0,1].Moreover, the curve will be initialized from the original point(0,0)in order to satisfy the inverse Laplace transformation.A Fadal CNC machine tool shown Fig. 4is used for the experiment. The kinematic limits are set to beVfmax=150mm/s,Vmax=(250,250)mm/s,Amax=(1500,1500)mm/s2,Jmax=(18000,18000)mm/s3, which are for the tangent velocity, axis velocity, axis acceleration, and axis jerk, respectively. The initial and terminal axis velocities and axis accelerations are all zero. The numberNof discretizations is set to be 120. The sampling period is 1 ms. The drive parameters for thexandyaxes are listed in Table 1. The actual positions on thexandyaxes are obtained from their encoders mounted on the CNC machine tool.

@&#CONCLUSIONS@&#
