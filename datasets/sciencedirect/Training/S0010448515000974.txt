@&#MAIN-TITLE@&#
Average curve of

@&#HIGHLIGHTS@&#
We define the Average Curve (AC) of any compatible set ofnsmooth Jordan curves.We define the inflation of the AC that conveys local variability.We present a linear-cost algorithm for computing a polygonal approximation of the AC.The AC and the inflation form a natural extension of the Medial Axis Transform.

@&#KEYPHRASES@&#
Average of curves,Medial axis,Statistical analysis of shapes,

@&#ABSTRACT@&#
We define the Average Curve (AC) of a compatible set of two or more smooth and planar, Jordan curves. It is independent of their order and representation. We compare two variants: the valley AC (vAC), defined in terms of the valley of the field that sums the squared distances to the input curves, and the zero AC (zAC), defined as the zero set of the field that sums the signed distances to the input curves. Our formulation provides an orthogonal projection homeomorphism from the AC to each input curve. We use it to define compatibility. We propose a fast tracing algorithm for computing a polygonal approximation (PAC) of the AC and for testing compatibility. We provide a linear-cost implementation for tracing the PAC of polygonal approximations of smooth input curves. We also define the inflation of the AC and use it to visualize the local variability in the set of input curves. We argue that the AC and its inflation form a natural extension of the Medial Axis Transform to an arbitrary number of curves. We propose extensions to open curves and to weighted averages of curves, which can be used to design animations.

@&#INTRODUCTION@&#
Motivation: The concept of average of scalar values plays a central role in statistics  [1] and hence in a broad variety of application areas. It also extends naturally to points  [2]. But, extending the notion of an average to a set ofn>2planar curves is non-trivial.Theoretical contributions: We define the Average Curve (AC) of any “compatible” set ofnsmooth Jordan curves (i.e., simple loops) in the plane and propose it as the mathematical formulation of their average.We define the Gap between the input curves and provide a formulation and also a sufficient condition for compatibility that is based on the Gap Relative Projection (GRP).We define the inflation of the AC and show that it helps to convey the local variability in the input curves at any point along their AC. Fig. 1illustrates the use of the AC and inflation for statistical shape analysis and visualization. The thickness of the inflation is a more useful statistical indicator of local variability than the thickness of the gap.We compare two variants: (1) the valley AC (vAC) defined in terms of the valley of the field that is the sum of the squared distances to the input curves and (2) the zero AC (zAC) defined in terms of the zero set of the field that is the sum of the signed distances to the input curves. They are nearly identical for the configuration of Fig. 1.Construction algorithm: Our Trace algorithm for computing the polygonal approximation (PAC) of the AC is independent of the order and representation of the curves. It produces consecutive samples along the AC incrementally, while traversing each curve only twice.Implementation: We present a linear-cost algorithm for computing the PAC from finely sampled polygonal approximations of smooth input curves. We use it to show the effectiveness and limitations of the AC and to compare its vAC and zAC variants.Extensions: We propose extensions of the AC to open curve segments and to the weighted average of curves, which we illustrate by showing patterns of curves or frames of curve animations.Applications: We anticipate that the availability of a precise mathematical definition for the average of a set of curves (and ultimately of surfaces) will have benefits in a broad set of application areas.For example, it may play a role in legal matters and in coastal studies, as a tool for providing precise definitions of shorelines in spite of their periodic fluctuations and for tracking the evolution of their average (rather than of their extrema) over time  [3].Shape averaging also has important industrial applications. For example, being able to compute the average shape of a set of machined parts is fundamental for assessing the statistical consistency of a manufacturing process  [4]. Early efforts in developing formal models of statistical tolerances for CAD are discussed in  [5].Many aspects of medical research, surgery planning, and diagnosis are based on comparing the anatomy of a particular patient to the average anatomy of a population  [6]. Hence, it is important to have a precise definition of that average anatomy and algorithms for computing it.Finally, artists often prefer overdrawing (rather than erasing and redrawing or manipulating control points) to modify a curve locally. In digital approaches that support such an interface  [7], it makes sense to define the final curve in terms of the (possibly weighted) average of the overdrawn strokes.Other applications of shape averaging are illustrated in  [8] (which proposes to define the average as a minimizer of an elastic deformation energy).We illustrate applications of the AC to the statistic analysis of medical scans and of the weighted average to the design of animations of a smooth curve defined by several control curves.We discuss prior approaches for computing averages of curves in terms of: (1) correspondence, which establishes a mapping between all input curves, and (2) construction, which defines a point of the average in terms of each set of corresponding points on the input curves and possibly of the corresponding normals. We also mention approaches that define the average in terms of fields or concatenations of input segments.Arc-length or Landmark correspondence: Inferring correspondence from a normalized arc-length parametrization may lead to unacceptable artifacts  [9]. Inferring correspondence from landmarks (salient features, extrema, inflections)  [10,11] either requires tedious user input or delicate heuristics for matching possibly incompatible sets of landmarks on different curves. The solution proposed here does not reply on arc-length parametrization or on landmark matching, but requires that the curves be smooth and compatible (i.e., reasonably parallel).Generalized Fréchet correspondence: AnO(n2logn)algorithm for computing the Fréchet distance between two polygonal curves was proposed in  [12], extended to more general curves in  [13] and to more than two curves in  [14]. AnO(kn)algorithm for computing a mean curve for a set ofnpolygonal curves, each of complexityO(k), was proposed in  [15]. It minimizes its maximum Fréchet distance to each input curve. Unfortunately, small changes in the input curves can lead to large changes in the Fréchet metric (see Fig. 2.4 of  [16]) and hence in the mean. To overcome this drawback, for two curves, measures that compute the summed and average Fréchet distance have also been proposed  [16]. The solution proposed in this work has complexityO(nk), but assumes that the input curves are polygonal approximations of smooth and compatible input curves.Normal or Radial correspondence: When one of the curves can be chosen as base so that each other curve is its normal offset   [17] or its radial offset   [17], the resulting correspondence (ortho map, normal map   [18,19]) is a homeomorphism. Unfortunately, the average obtained by using these correspondences is asymmetric: it depends on which curve is chosen to be the base. The solution proposed here is symmetric: it computes the AC as a new curve that is independent of the order of the input curves and establishes a normal map from the AC to each input curve.Minkowski correspondence: The Minkowski average establishes a correspondence between points with the same normal. Realtime rendering approaches have been proposed for the weighted Minkowski average of two  [20] and of more  [21] polygonal solids. Unfortunately, it fails to satisfy many desirable properties of the average curve that AC has. For example, the Minkowski average of a non-convex curveCwith itself is notC(their AC is).Other approaches to correspondence: Correspondence between two curves can also be established by minimizing the integral of distance between corresponding points  [22], by adapting the sampling step to the local curvature  [23], or by minimizing the affine transformations that map corresponding pieces  [24].Construction: Many approaches use a construction based on the centroid of the corresponding points. The medial axis  [25] and its variations (as discussed in  [26]) do not. Similarly to the medial axis construction, the solution proposed here constructs points on the AC as normal offsets of the corresponding (i.e., locally closest projection) points on the input curves. A variant that constructs the centroid of the corresponding points yields nearly identical results, but a different parametrization.Averaging discrete points: The algorithm proposed in  [27] computes a polygonal averageCfor an unordered set of discrete sample points by initially aligningCwith the least-square fit line and then iteratively moving its vertices towards weighted averages of samples that have close projections onC. The authors of  [27] point out that there is no guarantee of uniqueness or existence. Applying this solution to a sampling of all input curves will, in general, not yield the AC, but the duality between the two approaches is intriguing.Our algorithm implements a fixed-point iterative scheme to converge to a point on the AC and this may be viewed as an extension of Moving Least Square techniques for computing a surface that interpolates a point cloud: set of input points or surfels (points associated with surface normals)  [28,29]. In a future 3D extension of the vAC, the desired “average” surface may be defined by several surfaces, each one defined by its cloud.Zero set of a field: An average of two curves was defined in  [30] as the zero set of a heat field. The result is similar to the Ball Morph  [26]. A linear and cubic interpolation of density in medical scans was discussed in  [31] as a mean to produce interpolating cross-sections, which were defined on each slice as zero-sets of a 3D field. This principle was exploited in  [32] to define morphs between pairs of curves and between pairs of surfaces. When using a signed distance field, the mid-course curve of such a morph corresponds to the zAC of two curves. We extend this approach to more than two curves, propose the vAC variant, present the Trace algorithm and its efficient implementation for tracing the AC, and define the GRP to increase the set of configurations for which Trace produces the desired result.Median trajectories: Given a set of polygonal trajectories, a median trajectory is constructed  [33] by concatenating selected segments of input trajectories.We consider an input set {Ci} ofnsmooth curves. We propose two formulations of their AC: vAC and zAC.vAC: The arithmetic mean,x, of a set of numbers,xi, isargminx(x−xi)2. Hence, we define the Valley Average Curve (vAC) as the valley of the scalar height fieldQof the sum of squared distance. For any pointP,Q(P)=∑iPiP2wherePiis a “local closest projection” ofPontoCi. Its precise definition is discussed further below. Also, in our notation,Nirepresents the outward normal toCiatPi. Fig. 2shows the vAC for a compatible configuration and the associated height field.zAC: The average,x, of a set of numbers,xi, is the value that cancels the derivative∑i(x−xi)of∑i(x−xi)2. Hence, we define the zero Average Curve (zAC) as the zero set of the scalar height fieldDof signed distances, whereD(P)=∑iPiP⋅Ni. Fig. 3shows the zAC for the configuration of Fig. 2 and the associated height field.To discuss the proper definition of the “local closest projection”,Pi, we use the following two concepts.Face:Fidenotes the face (bounded and open set) that hasCias boundary. By our convention,FiabutsCifrom the right.Gap: Extending (to more than two curves) the definitions proposed in  [34,35], we define the gap of{Ci}as(∪Fi)−−(∩Fi)∘, whereH−andH∘denote respectively the topological closure and interior11The closure and interior operators are necessary to deal with cases where the gap includes lower-dimensional portions. For example, when all input curves are identical, the gap is one-dimensional and is identical to these curves.of setH[36].Inadequacy of using global closest projection: DefiningPias the closest point onCitoPis adequate for simple configurations, such as the one of Fig. 2, but may fail in more complex ones.Fig. 4shows an example of a configuration where the vAC contains components outside of the gap. Note that zAC does not have this problem, since, for any pointPoutside of the gap, the componentsPiP⋅Niall have the same sign.Fig. 5shows a configuration where both vAC and zAC yield inadequate results. To understand why a segment of the left-most portion of the AC in the gap is missing in the vAC and lacking the expected curvature in the zAC, consider a pointPon that missing segment. Its closest projectionP0onto the outer-most (green) curveC0is not on the left-most part ofC0, but on a different portion ofC0.One can verify in this example that such erroneous closest projections cannot be characterized byPiP⋅Ni<0. So, to prevent them, we definePias the GRP ofP.GRP: The Gap Relative Projection (GRP) definesPias a point ofCisuch that the line segment(Pi,P)lies in the gap and is orthogonal toCiatPi.Definition of compatibility: We say that the input curves are compatible if there exists a curve,C, such that the GRP map from pointPto its GRP,Pi, is a homeomorphism22In other words, the GRPs establish continuous and bijective correspondences between the AC and the input curves.for alli.The problem with this definition is that it can be tested only if a suitable curveCis found. Hence, we define below a sufficient, although not necessary, condition for compatibility (which we call strong compatibility) that can be verified without computingC.Ball and normal compatibility of two curves: Two curves are compatible if and only if they are ball compatible (BC)  [35] ​(i.e., when the symmetric map between them, called the ball map,Chazal:2010 is a homeomorphism). A sufficient condition for ball compatibility is that the minimum of their local feature size (LFS) exceeds their Hausdorff distance  [35]. The normal map   [19] (i.e. the closest point map) fromC0toC1associates with each pointP0ofC0the set of pointsP1ofC1at which the distance toP0passes through a local minimum. If the normal map from each curve to the other is a homeomorphism, the two curves are said to be normal compatible   [19] (NC). The equivalent and more descriptive term of projection homeomorphic was used in  [18]. Two curves are NC if the minimum of their LFS  [37] exceeds their Hausdorff distance  [38] divided by(2−2). (See  [19] for a formal proof and intuition.) NC is a more constraining condition than BC  [35].Gap compatibility and strong compatibility: We say that the input curves are gap compatible if the GRP,Pi, is unique for alliand for all pointsPin the gap.We say that the input curves are strongly compatible if each pair is normal-compatible.Spike: Consider any one of the input curves: wlogC0. For each pointP0ofC0, we consider the lineLthat is orthogonal toC0atP0. We consider the set{S}of segments of the intersection ofLwith the gap. We define the spike ofC0atP0as the segment of{S}that containsP0.Strong compatibility implies gap compatibility: If the input curves are strongly compatible, the spikes ofC0are pairwise disjoint and their union is the gap. Indeed, each endpoint of a spike lies on another input curve, wlogC1. SinceC0andC1are normal compatible, the spikes never cross (see Corollary 1 of [19]).Given that the above holds for any choice of curveC0, any pointPof the gap lies on exactly one spike of each curve.Hence, strong compatibility implies gap compatibility.Conjectures: We advance the following conjectures for strongly compatible configurations: (1) the restriction ofQ(P)along each spike (i.e., the value ofQ(P)as a function of arc-length parameter along the spike) has a local minimum and (2) there is only one local minimum per spike.We have proven the conjecture for sections of the gap where the input curves are locally straight (see Section  4).Our experiments strongly suggest that the conjectures are true for more general configurations, but we do not have a formal proof.Comparing vAC and zAC: For a typical valid input, the vAC and zAC are nearly identical. In fact, they are provably identical in sections of the gap where the input curves are parallel (constant radius offsets  [39] of each other). A slight difference can be observed (see Fig. 6) in sections of the gap where corresponding GRPs have tangents with significantly different orientations.Important properties: Both variants of the AC satisfy the following properties: (1) The AC is a non-contractible Jordan curve in the gap. (2) The AC is uniquely defined and independent of the order of the input curves. (3) The AC is independent of the representation and parametrization chosen for each curve. (4) In places where all input curves are close to each other and locally parallel, the GRPs,Pi, are nearly collinear and the corresponding point on the AC is close to their centroid. (5) The AC passes through all points that are contained in all input curves. (6) The AC commutes with similarity transformations.Definitions of inflation: With each point,P, of the AC, we associate a radius,r(P), that captures the local variability (i.e., deviation of the input curves from their AC). We define the inflation as the infinite union of the disks of centerPon the AC and of radiusr(P).33The envelop of the inflation can be computed as the radial offset of the AC  [17].In Fig. 1, we show the inflation for anL1norm, wherer(P)=∑id(P,Pi)/n. For some applications, one may prefer anL2norm, wherer(P)=∑iPiP2/n. Relation to the MAT: Consider configurations of two curves. The Medial Axis (MA) of their gap is the set of the centers of all maximal disks  [25] in the gap. The two curves are compatible if and only if the MA of their gap is a Jordan curve (has no bifurcation). The Medial Axis Transform (MAT)  [25,40] of the gap augments the MA with a radius function that is identical to r(P), regardless of whether we use theL1orL2norm (see Fig. 7).Hence, we view the AC and its inflation as a natural extension of the MAT to an arbitrary number of curves.Before presenting our algorithm for tracing the AC of compatible curves and for testing compatibility, we discuss the special case where the input curves are not Jordan curves, but infinite lines. We do so because our trace algorithm for tracing the PAC is based on the closed-form expressions for computing the closest projection of an arbitrary pointPonto the AC of lines. But our formal vAC and zAC definitions of the average of a set of lines may have other applications.We consider a set{Li}of oriented lines in the plane. We define lineLi=L(Si,Ti)by an arbitrary pointSion the line and by a unit tangent vectorTi.Nidenotes the normal toLi. We define the corresponding faceFias the half-space{P:SiP⋅Ni<0}.We prove that the AC is a line and provide a closed-form expressions for computing its normal,N, and the closest projection,V, of an arbitrary point,P, onto the AC.We do so for both the vAC and the zAC variants.vAC of lines: LetQL(P)=∑i(SiP⋅Ni)2. Using Cartesian coordinates(x,y)forP,(xi,yi)forSi, and(ui,vi)forNi, and writingQL(x,y)forQL(P), we obtainSiP⋅Ni=(x−xi)ui+(y−yi)viand thus(1)QL(x,y)=∑i(ui2x2+vi2y2+2uivixy−2ui(uixi+viyi)x−2vi(uixi+viyi)y+2uivixiyi+ui2xi2+vi2yi2)=ax2+by2+cxy+dx+ey+f.QLis a quadratic polynomial. Hence, we can use the following matrix notation withX=[xy]T:QL(x,y)=XTHX+BTX+CwithH=[ac/2c/2b],B=[de],C=[f].The vAC of a set of lines is the valley of their height fieldQL.The valley ofQLis defined by∇QL⋅E2=0, whereE2is the eigenvector of the HessianHofQLthat corresponds to the larger eigenvalue ofH[41,42]. Here,∇QL=[2ax+cy+d2by+cx+e].The eigenvalues ofHare the roots of its characteristic equation:λ2−(a+b)λ+ab−c2/4=0. The eigenvectors(Ei)ofHcan be computed in closed form.BecauseHis constant,E2is constant and∇QL⋅V=0defines a lineL(S,T)that passes through pointS=(2bd−ce,2ae−cd)/(c2−4ab), which minimizesQL(P), and that has for tangent a vectorTorthogonal toE2.Thus, the valley of lines is a line and its representation can be computed it in closed form.Tis undefined for special configurations. For example, for two orthogonal lines,QLhas radial symmetry. Conveniently, these configurations are excluded, since we assume that the input is strongly compatible.One can easily show that the tangentT=(cosα,sinα)defined above is the minimizer of∑isin2(wi), wherewiis the angle betweenTandTi, and thatαmay also be computed using:(2)tan(2α)=2∑xiyi∑xi2−yi2.Computing pointSusing the expression above for the global minimizer ofQLfails in situations where the vectorsTiare (nearly) parallel, because the minimizer,S, may be (nearly) at infinity, which leads to (numeric instability or) a division by zero. To address this problem, we have devised a robust and fast computation for the closest projection,V, ofPonto the vAC,L. We formulate it asV=P+sN, whereNis orthogonal toT, and solve for the value ofsthat minimizesQL(V).The details of computingTandVare presented in Algorithm 1 for the ProjectV function, which, given a pointPreturns the closest projectionVofPonto the vAC. In our notation, vectorNi=(Ni.x,Ni.y).zAC of lines: LetDL(P)=∑i(SiP⋅Ni). Its zero-set is the line defined by∑i(SiP⋅Ni)=0. ReplacingSiPbySiO+OPyieldsOP⋅(∑iNi)=−∑i(SiO⋅Ni), which is the equation of a line with normal directed alongN=∑iNi.The details of ProjectZ for projecting onto a zAC of lines are shown in Algorithm 2. Note that we do not require normalization of the computedN.Comparing the vAC and zAC of lines:   Fig. 8shows the vAC and the zAC of a set of four lines in two configurations. Note that the vAC and zAC are identical when all lines are parallel.Using prior art for tracing the AC: One may consider using previously proposed tracing algorithms to compute the vAC as the valley ofQ(P)in the gap.The concepts of ridges and valleys have applications in non-photo-realistic rendering  [43], image analysis  [41], shape recognition  [44], and other areas. The literature on extracting valley and ridge curves of height fields is vast. Existing techniques can be classified into sampling methods  [45], tracing methods  [46] and differential equation solving methods  [47]. Many prior techniques rely on a regular sampling of the plane and approximate the height field by a piecewise linear field. To obtain smoother approximations of the valley, one could approximate the field by a B-Spline function and use a variation of the tracing approach of [48].Similarly, we could produce an approximation of the zAC by samplingD(P)on a regular grid and using zero-set (iso-curve) tracing algorithms (see for example  [49]).Instead of these approaches, we propose below an efficient algorithm (Trace) that works from the input curves directly and traces the AC by producing points that lie exactly on the AC. The algorithm is almost identical for the vAC and zAC.Project: The basic step in our solution is Project. It takes as input a candidate pointPin the gap. For eachCi, it computes the GRP,44The segment(P,Pi.)is in the gap and is orthogonal toCiatPi.Pi, ofPonCi. Then, it calls ProjectV (Algorithm 1) or ProjectZ (Algorithm 2) depending on whether we want the vAC or the zAC. It returns a pointVon the vAC or on the zAC of the tangent lines. We view the AC as the set of fixed points of the Project operator, applied to points in the gap.Snap: Given a candidate pointPin the gap, Snap(P)iteratesP=Project(P)until the distance between consecutive locations ofPfalls below a small threshold (we use 10−6 of the diagonal of the minimum axis-aligned bounding box containing the input set). The process is illustrated in Fig. 9. We found that 3 iterations suffice to converge in all cases that we tested. Therefore, Snap(P) can be implemented in closed form as:Trace algorithm for computing the PAC: Our Trace (Algorithm 4) builds a polygonal approximation (PAC) of the AC incrementally, one vertex at a time. We compute the first (seed) vertex of the PAC as Snap(S), whereSis the left-most point of the input set. This step requires traversing each curve once, before the tracing of the PAC starts. Other, more robust, solutions may be used. For example, one may consider a small set of seed candidates randomly chosen on the input curves and select the one for which the minimum distances to the other curves have the smallest sum.Then we repeat the following process. We consider the last vertexUof the PAC (the last one appended). We use the GRPsUiofUto compute the tangent lines to the input curves and the directionTof their AC using the formulation of the normalNof the AC of lines, as provided in Algorithm 1 or 2.55Note that we may not need to recomputeUiandTif these are saved as the results of the previous snap.Tis the tangent to the AC atU. We compute a candidate pointP=U+eTas an extrapolation ofUalong the tangent to the AC. Then, we compute a new vertexV=snap(P)and appends it to the PAC. It will serve asUfor the next iteration.The sampling density, and hence the number of samples appended to the PAC are controlled by the step sizee. For example, we set it to 1/300 of the average length of the input curves if we wish to create an AC with about 300 vertices. To increase performance, we provide the option of increasingeautomatically in segments of the gap where the distance fromUto its GRP is large, but a large step size may reduce the smoothness of PAC. One may of course subdivide the PAC to produce a smoother curve.Trace stops (i.e.,  Closed becomes True), when the distance from the new vertexVto the first vertex of the PAC is less thane. We test whetherVprojects onto the interior of the first edge of the PAC. If so, we do not append it.Incremental closest projection: Each call to Project computes the GRPs{Pi}ofPonto the{Ci}. Assuming strong compatibility, we do not need to perform a search forPiover the entire curveCi. Instead, we start the search at the closest projectionUiofUand stop the search at the first pointPialongCiwhere the distance toPreaches a local minimum.Incremental compatibility check: Assume thatUis the last vertex appended so far to the PAC and thatVis the new vertex produced by Snap. To perform a local compatibility check, for each curveCi, we verify that the GRP from the line segment(U,V)to the section ofCibetween the closest projectionUiofUand the closest projectionViofVis a homeomorphism.Justification of correctness: The correctness of Trace hinges on the following assumptions: (1) Snap(S)of the left-most pointSalways lies on the AC. (2) Each candidatePlies in the gap. (3) Each candidatePhas a GRP on each input curve. (4) The extrapolationP=U+eTfollowed by Snap(P)yields a point further thanUalong the AC (so that Trace always moves forward).Assumption (1) is true, sinceSis on the boundary of the gap.Assumption (2) may fail (for example, wheneis large and the gap is turning). We have considered testing whetherPlies in the gap and reducingeif it does not, but our experiments indicate that this precaution is not necessary.Assumption (3) is guaranteed if the input curves are strongly compatible.We do not have a mathematical proof of (4). Our experiments (Fig. 10) indicate that the basin of attraction of each short segment of the AC (i.e., the set of points of the gap that snap to it) is a thin cross-section of the gap that is nearly straight and orthogonal to the AC.Parametrization of the gap: This observation suggests a natural parametrization of the gap: a pointPof the gap is represented by(s,h)wheresis the arc-length parameter along the AC of pointVreturned by Snap(P)and wherehis the distance fromPtoV.Centroid variant: An interesting variant of the AC may be obtained by replacing each pointPof the AC by the centroid,G, of its GRPs. Although the shape of that variant is nearly identical to the AC, it provides a more natural relation betweenGand the corresponding pointsPi. It may be viewed as an extension of the Midpoint Locus variation  [50] of the medial axis.In this section, we present simple extensions of the AC to weighted averages and to open curves.Weighted average of curves: To compute a weighted vAC (resp. zAC) of{Ci}with weights{wi}that sum up to 1, we replace, in ProjectV (resp. ProjectZ), the formulations of the sum of the squared distances (resp. of signed distances) by a weighted sum.The choice of the weights or their variation with time or some other parameter depends on the application.For example, this solution may be used to support the design and animation of the morph between two curves. Fig. 11shows a superposition of a series of frames of such an interpolation. These may also be used as a pattern of curves or as a tool to parametrize the gap.Our solution extends to morphs defined by more than two curves, for example by using the paradigm proposed in  [21] for a Bézier path in the space of polyhedra. But here, instead of using a weighted Minkowski sum, we use a weighted sum of (signed or squared) distance fields and trace the corresponding AC.Because scaling and addition of (squared) distance fields behave as their equivalent operators on scalars or points, various formulations developed for motions or (parametric or subdivision) curves defined by control points may be trivially adapted to produce motions or patterns of curves that are defined by several control curves. For example, we can use Bézier weights or time parametrized weights derived from the Neville algorithm  [51], so as to ensure that the animation interpolates all control curves with proper timing.Open curve segments: We have extended the AC to sets of oriented open curve segments (which we call strokes). To test this extension, we have developed an interactive system where the user draws the input strokes. We use a light smoothing filter to remove trembling, pixel quantization, and time-dependent sampling artifacts.We extend each stroke at each end with a half-line that abuts the stroke with tangent continuity. We start with the Snap of the centroid of the start points of the strokes. We then perform Trace until we pass the Snap of the centroid of the end points.Optionally, one can trim the AC to the part that has a homeomorphic normal map with each input stroke. Examples are shown in Fig. 12.Statistical analysis of families of shapes is used in medicine to facilitate diagnosis and support research. For example, in  [52], the authors study the variability of femur heads (using 3D models reconstructed from CT images) and quantify variations between femurs with and without Cam Femoroacetabular Impingement. As another example, PCA is used in  [53] to compute a statistical shape atlas that complements anatomical features (acquired from X-ray scans) to compute patient specific femoral bone shapes.To illustrate a possible application of the VA in this domain, we used a set of input curves that each approximate the projected silhouettes of a portion of the femoral head. We have traced these curves from images in Fig. 15 of  [54]. We compute the average and variability of the first three curves, and also overlay the fourth curve, that corresponds to a complex cam-type deformity, on top of this information (Fig. 13) to show how the anatomy of a patient may be compared to a statistical model of a family of shapes.

@&#CONCLUSIONS@&#
