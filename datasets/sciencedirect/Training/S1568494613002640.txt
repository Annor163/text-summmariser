@&#MAIN-TITLE@&#
A block-based evolutionary algorithm for flow-shop scheduling problem

@&#HIGHLIGHTS@&#
A block-based evolutionary algorithm (BBEA) is developed.Blocks can evolve generation after generation.New chromosomes are generated by recombining blocks and the rest of jobs.BBM can solve large size of combinatorial problems.

@&#KEYPHRASES@&#
Evolutionary algorithm,Gene linkage,Combinatorial optimization problem,Building blocks,Recombination,

@&#ABSTRACT@&#
Combinatorial problems like flow shop scheduling, travel salesman problem etc. get complicated and are difficult to solve when the problem size increases. To overcome this problem, we present a block-based evolutionary algorithm (BBEA) which will conduct evolutionary operations on a set of blocks instead of genes. BBEA includes the block mining and block recombination approaches. A block mining algorithm is developed to decompose a chromosome into a set of blocks and rest of genes. The block is with a fixed length and can be treated as a building block in forming a new chromosome later on. To guide the block mining process, a gene linkage probability matrix is defined that shows the linkage strength among genes. Therefore the blocks can be further evolved during the evolutionary processes using this matrix. In the block recombination approach, the blocks along with the rest of genes are recombined to form a new chromosome. This new evolutionary approach of BBEA is tested on a set of discrete problems. Experimental results show that BBEA is very competitive when compared with traditional GA, EA or ACGA and HGIA approaches and it can largely improve the performance of evolutionary algorithm and save a fair amount of computational times simultaneously.

@&#INTRODUCTION@&#
Almost all the genetic algorithms (GAs) rely on genetic operators such as selection, crossover and mutation to search the solution spaces for optimal solutions using some kind of fitness values. GAs are powerful search techniques that are used successfully to solve problems in many different disciplines. However, for most combinatorial problems such as traveling salesman problems (TSP), machine scheduling problems, and vehicles routing problems are very difficult to solve and even for moderate cases the GA converges prematurely to some local optima owing to the computational complexities of the problem.The basic issues of the current developments in genetic algorithm [1] include the following: (1) Chromosome representation: When compared with the DNA or RNA structures, the chromosome representation of most problems are not sufficient enough to show the sophisticated structure of natural representation of DNA or RNA and there are still lots of rooms for improvement in this chromosome representation. (2) Design of operators: Operators such as crossover or mutation involving the exchange of a set of genes within the chromosome are not very efficient and effective and they may produce lots of redundant moves during the evolutionary processes. For example in case of flow shop scheduling problem, if the sequence is disturbed even slightly more than required, then it may completely mislead the solution. In some other cases, the genetic operators will be very inefficient in dealing with large size of combinatorial problems. (3) Selection: Natural selection is much diversified when compared with the current selection methods such as roulette wheel or tournament selections. Looking towards the issues of simple genetic algorithm, this research attempts to develop a novel approach by providing a block-based evolutionary approach which is more efficient in dealing with the combinatorial optimization problems.The research is based on the concept of schema theorem to locate blocks from a set of chromosomes with good fitness. These short, low-order and highly fit schemata are called blocks. It is not always possible to get good blocks every time as the quality of the blocks depend on the problem as well as the chromosomes generated in previous generations. Therefore, this research is quite different from the previous researches which try to learn linkage relationships or building blocks (BBs) to form a new method [2–4]. Instead, the aim of this work is to come out with a novel approach which can locate a block, i.e., a series of genes, from a set of high-quality chromosomes or elites. As we move towards the end of the evolution process, the quality of chromosomes increases, hence better blocks are generated which leads to better solutions. We then recombine these blocks mined from the elite to generate a new chromosome. Toward this goal, a simplified definition of BBs is proposed. Blocks are similar contiguous bits found in highly fit chromosomes. The motivation of this research is to merge these blocks with other genes to form a new chromosome. Consequently, the resulting chromosomes are of higher quality.The paper is organized as follows. The next section provides a literature reviews on BBs in GA. Section 3 introduces the block mining and recombination approach for flow shop scheduling problems. Section 4 validates the algorithm with experimental results. Finally, Section 5 gives discussion and conclusion.The BBs are common structures of high-quality solutions. It is assumed that high-quality solutions can be obtained by combining the BBs. One obvious solution is finding a way to identify better BBs explicitly and then recombine them in an appropriate manner to form a legal chromosome. The BBs can be regarded as the linkage between two or more alleles [5]. There are many ways to determine the linkage association such as loosely or tightly. A model of the linkage can be built in several manners and can be identified explicitly. In general, the meaning of the linkage model is equivalent to the BBs.In order to prevent the early convergence in GA as mentioned by Holland [1], and to assure the success of genetic algorithm, it is important to mine linkage information to recombine alleles. A GA approach was proposed by Goldberg et al. [6] that proper problem decomposition is one of the keys to ensure the effectiveness of GA. An approach that concerns with explicit BBs is the messy GA (mGA) [7]. The mGA allows schema redundancy, and uses cut and splice technique as recombination operators. The mGA's mechanism and its BBs outperform the simple GAs (sGA) in many problems. Later, the mGA is improved in various versions [8,9]. Since then, many researches in linkage learning design for GA [10] have been developed. The linkage learning GA (LLGA) [11–13] that the chromosome is represented as a circular structure and the probabilistic expression mechanism is used for interpreting the chromosome. The recombination process uses the exchange crossover which performs linkage skew and linkage shift. Performance of the LLGA is superior to the simple GA on exponentially-scaled problems. Different linkage learning methods have been explained like explicit linkage learning, e.g., linkage identification by nonlinearity check procedure (LINC) [14], probabilistic model building GAs (PMBGA) [15], or estimation of distribution algorithms (EDA) [16]. The deterministic e.g., dependency structure matrix GA (DSMGA) [17]. However, the problem with explicit linkage learning is that the probabilistic model also prematurely gets trapped into local optimum. As for the explicit model, it is hard to identify a set of blocks or linkage set from the chromosome in real world application.A very similar but different to mGA is proposed in [3]. The authors present a novel co-evolutionary algorithm, the Puzzle Algorithm, where a population of BBs coevolves alongside a population of solutions. They show that the addition of a building-block population to a standard evolutionary algorithm results in notably improved performance on the hard shortest common superstring (SCS) problem. However, due to the nature of BBs that are dependent on the problems and the encoding of the chromosome, their behaviors are difficult to analyze. General problem-independent GAs such as mGA [8] and the puzzle algorithm [3] are not very efficient in solving TSPs, especially for large problems.A lot of work has been done in the past to determine the linkage sets. Most of them can be categorized into two classes. One is called perturbation methods (PMs) and the other is called estimation of distribution algorithms (EDAs). PMs perturb values (or combinations of values) and calculate fitness differences to obtain linkage information. EDA replaces traditional crossover and mutation of GAs by (1) building a probabilistic model of promising strings and (2) sampling the built model to generate new strings. Advanced EDAs involve conditional or marginal probabilities to encode relationships between variables. For example, extended compact genetic algorithm (ECGA) [16] detects sets of variables tightly linked to form a building block by computing a combined complexity measure. The combined complexity is the sum of model complexity and compressed population complexity. The ECGA, which is more GA-like algorithm than other EDAs, combines strings according to the obtained sets of variables and do not employ the probabilistic sampling which most of EDAs do employ. The schema theorem assumes a positive effect of the selection that can maintain the good schema, and shows the negative effect of the crossover and the mutation that disrupt the good schema. However there is no guideline how to process the BBs and the analysis is limited to the progress made in one generation. There is an effort to measure quantity of the BBs [18]. Many problems are analyzed: OneMax, Trap, Parabola and TSP problem. Two encoding schemes are used: the binary encoding and the gray encoding. The results show that BBs exist in OneMax, Trap, Parabola (the gray coding) and TSP (with third encoding scheme: binary matrix). This shows that the BBs existence also depend on the encoding scheme. There are many factors that affect BBs such as the selection method, the identification algorithm, the recombination procedure and the measurement criterion.In the earlier researches [19–21], ACGA has shown up as a very successful method in injecting ACs into the evolutionary process of GA to speed up the convergence. However, the solution quality still can be further improved when compared with other approaches. In this research, a block-based genetic algorithm is introduced. BBEA contains several special characteristics. Firstly, the new method uses gene linkage probability matrix update rules to extract the blocks from the population generated in the previous generations. It is a process of linkage learning which is applied to discover the hidden knowledge within the dependent variables. The good substructures can be interpreted as common subsequences among a set of highly fit chromosomes. The block consists of a series of genes linked to each other continuously. Secondly, a recombination procedure is adopted to regroup the blocks and the rest of jobs together to generate a new chromosome. These new generated chromosomes are built with very good subsequences (or, micro-structures) and they will be recombined to form a new chromosome. The block mining by gene linkage probability matrix update is very effective which can identify a good subsequence from the chromosome. These blocks can reduce the size of the search space, so that the search process would take less time to find the near-optimal solution. In summary, BBEA is introduced to further enhance the search effectiveness and efficiency.The framework of the BBEA is shown in Fig. 1. The key processes include block mining and recombination operator. We will introduce the block mining first and then the recombination procedure.In most applications, GAs can search excellent solutions even the optimal solutions. However, in the applications of high complexities, GA is usually trapped in the local optima and hard to reach the global optima. BBEA aims at mining the linkage information of genes to assemble the strong joining blocks and recombine the mined blocks with rest genes to generate ACs to enhance the solutions structure. Due to the composition of solutions which contains the different permutations with the natural evolved solutions; the BBEA has the ability to extend the searching space and to locate more promising solution when compared with other meta-heuristics.Data mining is the process of applying these methods to data with the intention of uncovering hidden patterns [22], which will lead the algorithm to recombine the discrete genes more effectively. In this paper, the so-called “Blocks Mining” technique of mining linkage information is applied for joining available segments together as the assembling foundation to recombine the blocks and the left out genes to form the new chromosomes. Theoretically, each insertion of block will significantly decrease the complexity of searching solutions. Therefore, the computational time will be reduced while the quality of solutions will be enhanced via recombining the mined blocks.In this paper, we aim at adopting the mined block to enhance the performance of recombination in new chromosome generation. As for the detail definition of block, it can be referred to [23–25]. Basically, block recombination is regarded as the rearranging the jumbled blocks to form the appropriate sequence. Here we propose a “block-based model” (BBM). BBM is formally defined as a triplet (H, S, R) where H is a finite set of non-empty blocks with fixed gene length, that may vary with the size of the problem, S is the rest of jobs not in the blocks, R is called the recombination function that combine the set of blocks with S together to form a legal chromosomes, i.e., nearest neighbor (NN) in this research. A schematic diagram of the above model is illustrated in Fig. 2can be depicted as follows. In R1 the chromosome is created by giving priority to random selection of jobs first then blocks whereas in R2 the blocks created are given first priority to get a place in the new chromosomes.The advantages of using this BBM include (1) There is no need to use the crossover and mutation operators. (2) Blocks can evolve generation after generation. (3) The recombination of these blocks and the rest of jobs can generate new chromosomes with high quality. (4) BBM can solve large size of combinatorial problems efficiently and effectively when compared with SGA. These advantages can be verified in the section of experimental results.We will show the mechanism of establishing the probabilistic model, definition of blocks, block mining and blocks recombination as following. Finally, we will describe the detail of our proposed algorithm.BBEA employs univariate probabilistic models, as it has been explained in this section. Moreover, we explain how to further utilize the probabilistic model in BBEA.To build the probabilistic models, a set of m best chromosomes C1, C2, …, Cmare selected in the current generation t. In general, any selection method such as proportional selection and tournament selection can be used for this purpose. We use proportional selection in BBEA.Xijkis a binary variable and can be understood as a gene within chromosome Ck(see Eq. (1)). It is used to define the univariate model.(1)Xjpk=1ifjobatpositionp0otherwise,j=1,2,…,n;p=1,2…,n;k=1,2,…,mAfter we sum up the statistic information from all m chromosomes, we obtain ϕij(t) in Eq. (2) which represents the total number of times that job i at position j in the current generation t. Let G be the total number of generations, we have(2)ϕjp(t)=∑k=1mXjpk;j=1,2,…,n;p=1,2…,n;k=1,2,…,mA schematic diagram of the probabilistic model is shown in Fig. 3.The probability of job i in position j in generation t is Pij(t).(3)Pjp(t)=ϕjp(t)m;j=1,2,…,n;p=1,2…,n;k=1,2,…,mA block mining procedure aims at applying the gene linkage probability matrix to extract the blocks from the set of high fit chromosomes. It is a process of linkage learning which is applied to discover the hidden knowledge within the chromosomes. The block consists of a series of genes linked to each other continuously. To mine the blocks from the set of high fit chromosomes, two methods can be applied: static block size, on which equally sized blocks are created or dynamic block size where blocks are created with random sizes. In this research, we will focus on static block size. In order to maintain diversity as well as to encourage the proper recombination the size of block is very important while dealing with the problem with different number of jobs.As shown in the probability matrix in Fig. 3 each job has certain probability to occur in each position. The block consists of jobs in continuous positions. Further, we define the quality of block by using the total probability of the block. For example, in Fig. 3, if a block is job-2, job-3 and job-1 in position-1, position-2 and position-3, the quality of this block will be 2/5×3/5×2/5.This gives the probability of generating a block with size l, i.e.,P(Hpk(l))is defined as follows:(4)PHpk(l)=∏p=ss+l−1PjpFor example, if the block is to be generated for position s to position s+l−1, then the probability of generating this block is Pj,s×Pj,s+1⋯Pj,s+l−2×Pj,s+l−1. For the reason, the size of block is kept low so that stronger blocks are formed.Also if we set the size of block too small, then there would not be efficient utilization of the pattern similarity (schema) among the chromosome. This may also result in poor convergence. So in our research, we set the size of block according to the problem complexity. When the problem is bigger, we set bigger block to find good link and to help speeding up the convergence.A number of static blocks with size l can be generated according to the following procedures:UJ={J1, J2, …, Jn, }: a set of unselected jobs and UP={P1, P2, …, Pn, }: a set of unselected positions.Sj=ϕ: scheduled job.l: block size.y: number of blocks.While y=1 to kStep1. From the gene linkage probability matrix, randomly select a position Pjfrom Upand using any selection scheme, select job Jifrom Ujfor Pj. UG=UG∼Pj, Uj=Hj∼Ji, Sj=Sj∪JiStep2. Move to the next position p=p+1. Then using RWS to select Jifrom UJfor Pj+1. UG=UG∼Pj+1, UJ=UJ∼Ji, Sj=Sj∪Ji.Step3. Repeat step2 until j=l−1. A candidate block is generated and,Hpk(l)1=Sj,Sj=ϕ, Repeat steps 1 to 3 for the next blocks until all the blocks are generated.End (Then there will be y candidate blocks.)Step4. Calculate fitness of each candidate block, and reserve the block in H with the best fitness.Some basic rules in governing the blocks are listed as follows:(1)The fitness for each block will be calculated from the gene linkage probability matrix.Using the Roulette wheel selection, the blocks for the next generation are selected and the block archive is updated.The procedures will be repeated again until a pre-defined number of blocks is met, i.e., k, are identified. If any block with a job overlaps with the blocks previous generated, it will be abandoned.For example, let 20 jobs are to be scheduled, block size is say 4 and randomly position 6 is selected. If job number 12 is having the maximum probability at position 6 then it would be selected for that position. For the next position, let jobs with the probability in descending orders are 19, 13, 4, 16 and 1 and so on as shown in Fig. 4. So for the next level job number 19 is selected. The process is repeated until all the positions are filled. In the final level, we will have 20×19×18×17 jobs explored. Finally, let's we may have a block with jobs {12, 19, 6 and 18}.A branching strategy is applied in generating the possible blocks. The branching rule prescribes how the current problem should be partitioned into sub problems. In this research, we adopt a forward branching strategy that prescribes which sub problems should be expanded next and best first search (BFS) which solves the most promising sub problem first, usually the sub problem with the largest value of the probability.A block is a set of jobs connecting jobs from level one up to level four. In this example, we branch three times to form a legal block with the length of four. The reason is to decrease the computational times especially when the problem size is large, i.e., thousand or up to ten thousands of jobs. In addition, the block is just like a micro-structure of the chromosome. They can be easily recombined by a good heuristic function R in the recombination process to form a longer block.The finally set of mined blocks from probability matrix are stored in the Block archive as shown in Fig. 4.Blocks are assumed to form highly fit chromosome because they appear identically in different selected chromosomes which are assumed to be good or highly fit. Therefore they will be retained in the original structures. The next problem is how to combine these blocks with the rest of the jobs to form a legal chromosome. Once the set of blocks are identified and stored in the archive, the rest of jobs which are not in the blocks are also saved together. We name this archive as a BBs archive as shown in Fig. 5.The next mission is to recombine these blocks and remaining jobs to form a legal chromosome. There are numerous methods to recombine these blocks and jobs to construct a feasible chromosome. Here two different approaches have been used. The first one is the nearest neighbor (NN) approach. The NN method was initially introduced [26] where the ratio of expected and observed mean value of the nearest neighbor distances is used to determine if a data set is clustered. This method is directly applied in traveling salesman problem. Here a different but quite similar method is used as shown in Fig. 6.The pseudo-code of recombination is given as follows:(1)Given the set of jobs to be sequenced U, a set of blocks, i.e., H and the rest of jobs, i.e., J. Let U=ϕ, π=ϕ, π is a sequence of jobs.Put the starting job of each block, i.e., js∈Hkand the rest of jobs, i.e., S, not present in the blocks into the set U.For each position, if there is a block starting with that position number then insert the whole block into the set π such that π=Hkand U=U−Hkand the current position is updated as the next to the last position of the block else select a job Jiusing roulette wheel selection from U as the current job, then put Jiinto the current position of the sequence π, and U=U−Ji. Then the position is updated as next position.Repeat step 3 until U is empty.The recombined chromosome here is called AC, which is explained in previous section. AC is the key to maintain the population in GA. Since AC is produced via the block recombination and stored in the AC archive, shown as Fig. 8, these artificial chromosomes will be injected to the population mating pool. These ACs with very good infrastructures can play a paramount role in speeding up the convergence process. In addition, these small blocks within the ACs also provide a good chance to come out with a better fit chromosome when mutated, also shown in Fig. 7.In this approach all the generated blocks may not get a chance to be selected in the artificial chromosome which is as per the requirement in the beginning stage when we do not have good blocks. In the subsequent generations the good blocks starts emerging, so to give priority to the blocks, following approach has been used.Recombination function 1 (R1): Place all the blocks in the sequence π, such that π=H1, H2,…,Hk: k=no. of blocks and U=S.Recombination function 2 (R2): Now all the remaining positions are filled up by the jobs using the roulette wheel selection.The ratio of AC generated via the two different techniques is maintained throughout the evolution as, initially 80% of the AC's are created by the RF1 and remaining by RF2, which at the end changes to 20% AC's via R2 and remaining by R1. The linear relationship is given by,(5)Number_R1=80−60×1−generationnumbertotalnumberofgeneration(6)Number_R2=80−60×generationnumbertotalnumberofgenerationHere, number_R1 and number_R2 denote number of ACs generated by method R1 and R2, respectively.The reason for using R1 and R2 to generate artificial chromosome is to increase the diversity and convergence speed. In our research, blocks are generated from the parts of higher performance chromosomes. R1 which uses all blocks will be helpful for convergence speed. R2 which did not use all blocks will have more diversity than R1. We set the numbers of R1 and R2 having linear relationship. Because in the beginning of evolving process, chromosomes are with lower performances. Even we collect the better ones of these chromosomes, they are not good enough. For the reason, blocks also are with lower quality. With evolution developed, blocks will have more and more higher quality. So in our research, we make the numbers of chromosomes generated by R1 increasing with the progress of the evolving and by R2 decreasing. According to this strategy, the evolving can give consideration to two or more things of diversity and convergence ability. The detailed framework of BBEA is shown in Fig. 8.Algorithm 1Block-based evolutionary algorithm (BBEA).In addition, the restart procedure will occur after accumulative successive h generations when there is no improvement of fitness value. The restart mechanism works as follows:(1)Use the updated gene linkage probability matrix to generate the new blocks.Block selection from the block archives and block mutation.In recombination of population, there has 1% elite individual preserved from previous generations, and the remaining selected from the 200 chromosomes comprising of the parent and the mutated offspring individuals.

@&#CONCLUSIONS@&#
