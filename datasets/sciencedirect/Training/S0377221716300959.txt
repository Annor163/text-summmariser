@&#MAIN-TITLE@&#
Modified Differential Evolution with Locality induced Genetic Operators for dynamic optimization

@&#HIGHLIGHTS@&#
We present a modified Differential Evolution (DE) for dynamic optimization.The modified DE mutation can retain the proximity information for each solution.A local-best crossover operation helps in preserving diversity.We propose an exhaustive dynamic change detection technique.Our algorithm has been extensively tested and validated w.r.t. the state-of-the-art.

@&#KEYPHRASES@&#
Continuous optimization,Dynamic optimization,Differential Evolution,Self adaptation,Genetic operators,

@&#ABSTRACT@&#
This article presents a modified version of the Differential Evolution (DE) algorithm for solving Dynamic Optimization Problems (DOPs) efficiently. The algorithm, referred as Modified DE with Locality induced Genetic Operators (MDE-LiGO) incorporates changes in the three basic stages of a standard DE framework. The mutation phase has been entrusted to a locality-induced operation that retains traits of Euclidean distance-based closest individuals around a potential solution. Diversity maintenance is further enhanced by inclusion of a local-best crossover operation that empowers the algorithm with an explorative ability without directional bias. An exhaustive dynamic detection technique has been introduced to effectively sense the changes in the landscape. An even distribution of solutions over different regions of the landscape calls for a solution retention technique that adapts this algorithm to dynamism by using the previously stored information in diverse search domains. MDE-LiGO has been compared with seven state-of-the-art evolutionary dynamic optimizers on a set of benchmarks known as the Generalized Dynamic Benchmark Generator (GDBG) used in competition on evolutionary computation in dynamic and uncertain environments held under the 2009 IEEE Congress on Evolutionary Computation (CEC). The experimental results clearly indicate that MDE-LiGO can outperform other algorithms for most of the tested DOP instances in a statistically meaningful way.

@&#INTRODUCTION@&#
Optimization problems in the real world are very often dynamic in nature. For these Dynamic Optimization Problems (DOPs), the function landscape changes temporally i.e. optima of the problem to be solved change their locations over time and thus, the optimizer should be able to track the optima continually by responding to the dynamic environment (Jin & Branke, 2005; Nguyen, Yang, & Branke, 2012). Variations in market price, probabilistic arrival of a new job in a scheduling problem, uncertainty on the demand and unit costs in a network in context to the facility location problem are some of the common instances of a dynamic environment (Gabrel, Murat, & Thiele, 2014). Under such situations, converging tendency of a conventional EA can impose severe limitations on the performance of the EA. If the population members of the EA converge rapidly, they will not succeed in effectively responding to the environmental changes. Therefore, in case of DOPs the foremost challenge is maintenance of a diverse population and simultaneous production of highly accurate solutions by monitoring the moving optima. At this point we would like to mention that there are also DOP instances where the optimal solution does not need to be tracked. For example, the work of Allmendinger and Knowles (Allmendinger & Knowles, 2010) investigates DOPs where the constraints (Ephemeral Resource Constraints (ERCs)) change over time but not the landscape and thus, also not the optimal solutions. In this paper we focus on the real-parameter bound-constrained DOPs where the objective function landscape explicitly changes with time and not on the problems with ERCs. However, the proposed algorithm is not designed for DOPs with other (more practical) equality and inequality constraints on the decision variables. The benchmark suite used for testing the algorithm also comprises of bound-constrained problems only (i.e. each decision variable is bounded from above and below).Differential Evolution (DE) (Das & Suganthan, 2011; Storm & Price, 1997) has been used effectively as one of the most powerful optimizing tool for continuous search spaces. DE implements similar computational steps to that of standard Evolutionary Algorithms (EAs). However, unlike traditional EAs, DE-variants perturb the current-generation population members with the scaled differences of randomly selected and distinct population members. Therefore, no separate probability distribution (like the Gaussian distributions used in Evolutionary Programming (EP) and Evolution Strategies (ES) or the Cauchy distributions used in case of the Fast EPs) is used to generate offspring.Classical DE suffers from some difficulties in its application in DOPs owing to two main factors. First, in many cases, local basins of attraction covering areas in and around the local and global optima result in a premature convergence. Thereafter, explorative power is compromised due to similarity of the minimally perturbed new optimum in a changed environment. Second, DE may occasionally stop proceeding toward the global optimum even though the population has not converged to a local optimum or any other point (Lampinen & Zelinka, 2000). Ongoing research has been directed to introduce modifications in DE algorithms to locate the changing optima for dynamic landscapes. A short summary of the relevant literature has been presented in Section 2.In this paper we present an alternative approach of solving DOPs by using a modified DE algorithm with locality induced genetic operators. Our proposal is based on the fact that any dynamic change is reflected by the varying dominance of the candidate solutions over periods of change instances. Thus, attempts have been made to monitor each such solution over the entire period of optimization. The retention of the spatial traits characterizing these solutions forms an essential part of the genetic operations (mutation and crossover) in the proposed algorithm called Modified DE with Locality induced Genetic Operators (MDE-LiGO). The crossover phase of the genetic operation stage is handled by an adaptive l-best scheme that allows a rotation of the trial solutions and can attain a compromise between both axis parallel search and rotation-invariant search. The modification of DE is coupled with two additional featuresâ€”first dynamic detection using a scheme to measure the number of unsuccessful updates and second, adapting to that change using clustering techniques. Diversity maintenance is an essential feature of MDE-LiGO.Although a preliminary version of this article has been presented as a conference paper in Mukherjee, Debchoudhury, Kundu, Das, and Suganthan (2013), we have substantially modified and expanded it both in terms of the algorithmic features and the experimental analyses. Unlike the conference version, parameter adaptation is introduced to enable a control on the retention of traits around a promising solution. Consequently higher percentages of traits that have the ability to lead to a potential solution are identified and retained, thereby increasing the efficiency of the process. The blending rate Br has been selected from a pool of values sampled from a normal distribution, the parameters of which are guided by the influence of a set of successful crossover probabilities. This modification appears to make the crossover stage more functional and much more effective. A significant contribution added to this version is the introduction of an exhaustive dynamic detection stage that identifies the onset of a dynamic change. The difference in deviation of locally mutated DE individuals serves as the criterion which dictates when a change in the landscape has occurred. An analytical discussion on the evaluation of such a deviation mechanism has been presented in context to the detection of a dynamic change by MDE-LiGO. In addition extensive comparisons and experimental validations have been provided to validate the different components of the MDE-LiGO algorithm.Organization of the rest of the paper is in order. Section 2 provides a brief description of classical DE and one of its adaptive variant. The section also presents a compact survey of the different modified EAs previously used for solving DOPs. A detailed description of the proposed algorithm with all its salient features is provided in Section 3. Section 4 describes the experimental settings and presents the results of comparing MDE-LiGO against seven state-of-the-art dynamic EAs with in-depth discussions. Section 5 experimentally investigates the effect of different strategies proposed for the MDE-LiGO framework. Finally conclusions are drawn in Section 6.

@&#CONCLUSIONS@&#
MDE-LiGO proposes a modification to the genetic operators of the DE model to particularly suit optimization attempts for DOPs. Additional features, key to the success of any DOP have also been incorporated. The backbone to the algorithm has been formed of a conglomeration of three novel concepts. First, owing to limitations of the standard DE mutation operators a unique DE set of DE p-local best mutation equations has been utilized. The use of Euclidean distance based proximity of traits pertaining to a candidate solution and retention of the same throughout the search forms the basic essence of these new proposed mutation equations. The parameterphas been made to vary adaptively so that retention of traits is controlled by the fruitfulness of the search in the particular domain. The second most prominent feature of MDE-LiGO is the introduction of an adaptive l-best crossover technique that further modifies the genetic operation. Unlike conventional crossover where a trait is either accepted or rejected based on a crossover probability, l-best crossover makes use of the concept of an adaptive blending rate which dictates the rate at which the traits intermix to produce a successful offspring. Finally, we detect the change in dynamic environment by an exhaustive locality induced retention technique. The margin of the number of unsuccessful updates after a certain generation is monitored which when exceeds a certain threshold state; a dynamic environment change is inferred to have occurred. Adaptation to detected changes is done using clustering techniques which again is in harmony with our objective of retaining information that may lead to future success. The performance of MDE-LiGO has been tested on the CEC 2009 benchmark on DOP's and the results have been found to be far superior to that obtained from the state-of-the-art EAs. The algorithmic key points have also been substantiated with thorough experimental validation. Thus MDE-LiGO offers a reliable, robust and effective method in dealing with problems posed by a dynamic environment.It should be noted that several practical DOPs may come up with linear or non-linear constraints imposed in the form of equality or inequality relations involving the decision variables. It is worthy to investigate the applicability of MDE-LiGO to such constrained problems. A few years ago Kimbrough, Koehler, Lu, and Wood (2008) proposed a dual population GA for solving the constrained static optimization problems. The algorithm maintains two separate populations: one for feasible solutions that evolve to further reduce the objective function and the other for the infeasible solutions that evolve to reduce the constraint violations. A slightly different approach involving a dual population DE was proposed by Huang, Wang, and He (2008) where one population evolves with DE according to the objective function value or constraint violation, while the other population stores the feasible solutions which may be reused for repairing some of the infeasible solutions. It may be interesting to integrate the dual-population scheme with MDE-LiGO especially when the constraints are changing with time. Such problems involving dynamic constraints very often emerge in practice and some tangible instances include document stream modeling, evolvable hardware design, optimal control of fermentation processes and hydrothermal scheduling. Also, it is important to investigate the performance of MDE-LiGO on practical DOPs beyond the benchmarks used in this paper. Such investigation may indicate whether some modifications as suggested here for MDE-LiGO has biased the algorithm for the GDBG test-suite.