@&#MAIN-TITLE@&#
Optimal design of mixed AC–DC distribution systems for commercial buildings: A Nonconvex Generalized Benders Decomposition approach

@&#HIGHLIGHTS@&#
We develop an MINLP model which determines the optimal design of a mixed AC–DC building electrical distribution system.We develop a tailored global optimization algorithm, based on Nonconvex Generalized Benders Decomposition.We provide a case study, including a medium office building.

@&#KEYPHRASES@&#
Electric power systems,Mixed AC–DC electricity distribution,Global optimization,Nonconvex Generalized Benders Decomposition (NGBD),Optimal power flow (OPF),

@&#ABSTRACT@&#
Direct current (DC) electricity distribution systems have been proposed as an alternative to traditional, alternating current (AC) distribution systems for commercial buildings. Partial replacement of AC distribution with DC distribution can improve service to DC loads and overall building energy efficiency. This article develops (i) a mixed-integer, nonlinear, nonconvex mathematical programming problem to determine maximally energy efficient designs for mixed AC–DC electricity distribution systems in commercial buildings, and (ii) describes a tailored global optimization algorithm based on Nonconvex Generalized Benders Decomposition. The results of three case studies demonstrate the strength of the decomposition approach compared to state-of-the-art general-purpose global solvers.

@&#INTRODUCTION@&#
In 1893, George Westinghouse won the contract to provide electric lighting at the Chicago World’s Fair using alternating current (AC), underbidding Thomas Edison’s direct current (DC) proposal by nearly half (Cowdrey, 2006). The event secured the dominance of his and Nikola Tesla’s AC paradigm over Edison’s competing DC architecture. At the time, the voltage transformer offered AC a clear advantage: unlike DC, AC could be transmitted over long distances with minimal loss. As a result, AC became the standard for the generation, transmission, distribution, and consumption of electricity—and remains so 120 years later.Meanwhile, much has changed about the way society uses electricity. Thirty years ago, most building loads were still AC devices, such as incandescent lamps, heating coils, and induction motors. In today’s buildings, driven by the advent of low-cost computing and advanced power electronics, DC loads are rapidly replacing these traditional loads. A DC load is any device which requires DC electricity either for end-use or as a power conditioning stage—loads such as computers, consumer electronics, cellular telephones, electronic ballast fluorescent lamps, light-emitting diode lamps, and variable frequency motor drives. The interconnection of these DC loads to the AC electric grid requires AC–DC power conversion, introducing energy losses and reducing power system efficiency.Despite the recent proliferation of DC devices, the design of electricity distribution systems in buildings has changed very little: AC distribution is used throughout the building and AC–DC conversion occurs only at the point of end use—one converter per DC device. In a 21st century revival of the AC versus DC debate, centralized DC electricity distribution systems for buildings have been proposed as a means to reduce the energy losses associated with individual AC–DC converters. DC distribution has the potential to both increase system efficiency and reduce operating costs (Boroyevich et al., 2010; George, 2006; Savage, Nordhaus, and Jamieson, 2010). In addition, DC distribution facilitates the integration of DC distributed generation (DG) sources, such as photovoltaic (PV) arrays. The opportunity for energy savings is considerable—by one estimate as much as 8 percent of the U.S. national electricity consumption (Savage et al., 2010).Regardless of the apparent efficiency advantage, widespread implementation of building-level DC electricity distribution is presently out of reach for technical and economic reasons. Since whole building DC distribution represents a paradigm shift from traditional AC distribution, significant research is required in order to understand and quantify its potential benefits (George, 2006). Areas of active research include technological barriers (Lu and Agelidis, 2009; Sannino, Postiglione, and Bollen, 2003), safety (Boroyevich et al., 2010; Engelen et al., 2006), and system control (Karlsson and Svensson, 2003; Salomonsson and Sannino, 2007; Schonberger, Duke, and Round, 2006).What is missing from the existing literature, however, is a thorough treatment of the efficiency advantage of DC distribution over AC. Although researchers have examined some aspects of DC distribution efficiency (AlLee and Tschudi, 2012; Gentile Polese, Frank, Alahmad, Lee, and Waters, 2011; Nilsson and Sannino, 2004; Sannino et al., 2003), no study to date has comprehensively compared the energy efficiency of AC and DC distribution systems for buildings. This article extends the work of Gentile Polese et al. (2011) to provide a framework for such an assessment.In this article, we present a modeling approach and optimization algorithm to maximize the energy efficiency of electricity distribution systems for commercial buildings via the use of mixed AC–DC electricity distribution. A mixed AC–DC electricity distribution system contains separate AC and DC subsystems which serve AC and DC devices, respectively, reducing losses associated with AC–DC conversion. The major contributions of the article are1.A mixed-integer, nonlinear, nonconvex mathematical programming model which determines an optimal design of a mixed AC–DC building electricity distribution system, minimizing energy losses,A tailored global optimization algorithm based on Nonconvex Generalized Benders Decomposition (Li, Tomasgard, and Barton, 2011), andIllustrative results from three cases studies.The development and reformulation of the mixed AC–DC power flow equations is unique and allows the use of certain reformulation techniques which have not previously applied to power systems analysis. In addition, this article represents the first application of Nonconvex Generalized Benders Decomposition to electric power systems. The research presented in this article extends a dissertation recently submitted by the first author to the Colorado School of Mines (Frank, 2013).The remainder of the article is organized as follows: in Section 2, we describe the concept of a mixed AC–DC electricity distribution system and review the relevant literature. We outline the mathematical programming formulation in Section 3 and develop an exact decomposition algorithm in Section 4. We present computational results and discussion for the case studies in Section 5 and conclude with Section 6.A building electricity distribution system is the network of power distribution and conversion apparatus which transfers electrical energy between the utility point of common coupling (PCC) (typically, the location of the electric meter) and the point of interconnection (POI) of each electrical load and source within the building. Building electricity distribution systems experience three main categories of energy loss:1.Resistive (conduction) losses in cables, bus duct, and transformer windings,Magnetic losses in transformer cores, andConversion losses in AC–DC, DC–AC, and DC–DC power converters.A rigorous evaluation of mixed AC–DC electricity distribution system efficiency must address losses associated with any piece of equipment whose performance is affected by the choice of AC or DC distribution, including the first energy conversion (if any) at each load or source POI. Fig. 1illustrates this definition of the system boundaries.Over a fixed time horizon, the energy efficiency of the distribution system is the ratio of the system input energy EIn, defined as the total energy delivered at the utility PCC and each source POI, to the system output energy EOut, defined as total energy consumed by loads at each load POI. ELoss = EIn − EOut is the energy loss associated with electricity distribution and AC–DC conversion. In the mixed AC–DC electricity distribution system design problem considered in this article, the goal is to select a system design which minimizes ELoss.Several studies have compared the efficiency of AC and DC distribution systems, but the reported results are conflicting because no single study accounts for all the sources of loss identified in Fig. 1. Although George (2006) and Savage et al. (2010) estimate 10–20 percent energy savings from the elimination of AC–DC converters (rectifiers) associated with DC loads, neither study addresses other system losses, including losses associated with centralized rectification. Sannino et al. (2003) and Engelen et al. (2006) demonstrate that wiring conduction losses for DC distribution are significantly lower than for AC distribution provided that a sufficiently high DC voltage is selected, but Nilsson and Sannino (2004) conclude that efficiency gains in the wiring may be offset by losses in the centralized AC–DC converters. Lu and Agelidis (2009) present experimental evidence that existing loads operate more efficiently on DC networks than on AC, while AlLee and Tschudi (2012) provide a strong argument for the use of DC distribution in data centers.With the exception of AlLee and Tschudi (2012), none of these studies formally defines the system boundaries for the efficiency analysis. In addition, the existing research neglects the effect of time-varying loads, providing efficiency estimates for fixed load conditions only. Furthermore, George (2006) and Savage et al. (2010) offer savings projections based on statistical estimation rather than derived from electrical models. Therefore, it is difficult to draw conclusions from the existing literature regarding the system-level energy efficiency of DC distribution. Moreover, prior studies analyze fixed scenarios only: the distribution system is either entirely AC or entirely DC. No study to date has applied an optimization approach to mixed AC–DC electricity distribution system design.By contrast, the optimization of AC power systems enjoys a rich history. First introduced by Carpentier (1962), the field of optimal power flow (OPF) has become an integral aspect of utility planning and operations. The mixed AC–DC electricity distribution system design problem parallels several interesting and difficult OPF problem classes in power systems planning, including optimal capacitor placement in distribution systems (González, Lyra, and Usberti, 2012), optimal distribution feeder reconfiguration (de Oliveira et al., 2010), and optimal installation of flexible AC transmission system (FACTS) devices (Esmaili, Shayanfar, and Moslemi, 2014).Electrical power systems may be modeled as networks consisting of a set of buses (nodes) interconnected by a set of branches (arcs). Buses represent physical points of electrical interconnection, such as distribution panels and switchgear, while branches represent paths for power flow: transmission lines, cables, transformers, and similar power systems apparatus. At each bus, electrical power may be supplied by sources or consumed by loads.Like general network models, electrical networks obey the principle of flow balance, or “conservation of flow” (Rardin, 1997). Conservation of flow requires that for some given quantity (in this case, electrical power), the condition(1)(Totalflowout)−(Totalflowin)=(Supply)−(Demand)must hold at every network node. For electrical networks, conservation of flow follows from the application of Kirchoff’s current law.Conceptually, a mixed AC–DC electricity distribution system may be partitioned into two separate networks: an AC network and a DC network. Each network may contain buses, branches, sources, and loads associated with its type of electricity (AC or DC). AC–DC converters interconnect the two networks, providing a means for electrical power exchange.The flow balance of an AC network operating at steady state is represented by the matrix equation(2)I˜=Y˜V˜,in whichI˜,Y˜,andV˜are complex quantities that describe the physical behavior of the power system in the frequency domain:I˜is a vector of AC current injections at each bus in the network, that is, supply minus demand,is the system admittance matrix, which models the electrical behavior of the system branches, andis a state vector of AC bus voltages.The DC power flow equivalent of (3) is(4)P=V∘(GV),in whichPis a vector of DC power injections at each bus,is the DC system conductance matrix, andis a state vector of DC bus voltages.A mixed AC–DC electricity distribution system includes separate AC and DC networks linked together by power electronics converters. The power balance equation for such converters is(5)PIn=POut+α+βPOut+γPOut2,in which PIn is the converter input power, POut is the output power, and α, β, and γ are fitted parameters which model conversion loss. Parameter α is nonnegative, but β and γ may assume any arbitrary value. Therefore, PIn is not necessarily a convex nor concave function of POut.Eqs. (3)–(5) fully describe the behavior of a mixed AC–DC electricity distribution system operating at steady state, and, with suitable transformations, provide a set of real-valued constraints compatible with optimization algorithms.OPF describes the field of research which seeks to optimize the operation of electrical power systems using mathematical programming techniques. OPF differs from other power systems optimization procedures, such as economic dispatch and unit commitment, in that it includes the power flow equations (3) in the formulation. OPF encompasses a wide range of power systems optimization problems and is an extremely active field of research (Frank, Steponavice, and Rebennack, 2012a; 2012b). Although OPF has traditionally been applied to AC transmission systems, it also provides a rich foundation for the design and optimization of distribution systems, including mixed AC–DC systems.The classical OPF formulations of Carpentier (1962) and Dommel and Tinney (1968) represent an electrical power system as a set of busesi∈Nwhich are connected by branchesik∈B. The generators,G⊊N,are located at the buses and operate with a (typically quadratic) cost in their respective real output power:Ci(PiG). Within this framework, we wish to minimize total generation cost subject to operating limits.The classical formulation is then given by(6a)min∑i∈GCi(PiG),(6b)[6pt]s.t.Pi(V,δ)=PiG−PiL∀i∈N,(6c)[6pt]Qi(V,δ)=QiG−QiL∀i∈N,(6d)[6pt]PiG,min≤PiG≤PiG,max∀i∈G,(6e)[6pt]QiG,min≤QiG≤QiG,max∀i∈G,(6f)[6pt]Vimin≤Vi≤Vimax∀i∈N,(6g)[6pt]δimin≤δi≤δimax∀i∈N.Pi(V, δ) and Qi(V, δ) are the power flow equations (3) in polar form. The right-hand-sides of (6b) and (6c) are the real and reactive power injection at each bus i (generation minus load). This formulation and several common OPF variants are summarized in OPF texts (Wood and Wollenberg, 1996; Zhu, 2009).The feasible region (6b)–(6g) is a nonconvex set, due to the nonconvex power flow equations (6b) and (6c). The polar form of the power flow equations implies trigonometric terms, posing an unfavorable structure for global optimization solvers. Alternatively, the power flow equations can be represented in quadratic form, but this comes at the cost of imposing additional nonlinear constraints which model voltage magnitude and angle relationships. To overcome these challenges, a broad suite of tailored solution algorithms has been developed (Frank et al., 2012a). These tailored algorithms tend to outperform general purpose solvers but can very rarely guarantee global optimality.Of existing OPF variants, security-constrained unit commitment (SCUC) (Guy, 1971) presents a close parallel to the mixed AC–DC electricity distribution system design problem described in this article. Unit commitment (UC) refers to the scheduling of generating units such that total operating cost is minimized. SCUC extends UC by modeling the power flow equations during each time period. The SCUC formulation modifies the classical OPF formulation to include a time index and a set of binary control variables which model unit commitment. Because of the presence of these binary decision variables and nonlinear equality constraints, SCUC is a large-scale, multi-period, nonconvex mixed-integer nonlinear programming problem (MINLP) and is among the most difficult optimization problems in power systems engineering (Bai and Wei, 2009; Zhu, 2009). Several decomposition approaches have been applied to UC and SCUC, including algorithms based on Benders’ Decomposition (Alguacil and Conejo, 2000; Canto, 2008; Jiang, Zhang, Li, and Guan, 2014).Like SCUC, the mixed AC–DC electricity distribution system design problem may be formulated as a multi-period, nonconvex MINLP. For any given system design, it is possible to define a set of harmonic power flow (HPF) equations of the form (2)–(5) which quantify the instantaneous system power flow. Although system power continually fluctuates, construction of these equations across a carefully set of discrete time periods during which power flow is assumed constant yields a reasonable estimate of the system energy performance. To model the design problem, we then combine the HPF equations with binary decision variables and associated constraints that represent design alternatives. The resulting mathematical programming problem determines a set of optimal design decisions and the associated system energy performance.This article limits the scope of the mixed AC–DC electricity distribution system design problem to the analysis of utility energy consumption in retrofit mixed AC–DC systems. Minimization of utility source energy provides a proxy for the minimization of system energy loss: a design which minimizes utility source energy typically also minimizes total energy loss (maximizes energy efficiency).Several factors motivate the focus on retrofit systems. Existing studies suggest that DC retrofits within existing AC networks may reduce losses, improve power factor, and increase reliability (AlLee and Tschudi, 2012; Salomonsson and Sannino, 2007; Sannino et al., 2003). In addition, the limited design space of the retrofit case is easier to understand and formulate as a mathematical programming problem than the more open-ended design problem of new construction. Finally, analysis of the retrofit case provides a structured comparison of similarly configured AC, DC, and mixed AC–DC systems: the predefined network layout allows a direct comparison of various types of system losses.The mixed AC–DC electricity distribution system design problem is a nonconvex MINLP of the general form(7)minF(x,y),s.t.G(x,y)≤0,x∈X,y∈Yandbinary.The continuous variables x model the system voltage states and power flows in each time period. The binary variables y model design decisions, specifically the allocation of branches, sources, and loads to the AC or DC networks and the inclusion or exclusion of AC–DC, DC–AC, and DC–DC converters. The objective function F(x, y) is linear and represents the total utility source energy supplied over the specified time horizon. The constraints G(x, y) include both linear functions and nonconvex, nonlinear functions which represent1.Power and harmonic current balance constraints at each system bus,Power and harmonic current relationships for branches, sources, loads, and converters,Voltage limits,Converter power and current limits,Restrictions on architecture assignment for branches, sources, and loads, andFeasibility restrictions which ensure a properly design electrical network.The nonconvexities in the constraints produce a nonconvex feasible region, greatly increasing problem difficulty despite the linear objective function.This design problem has several features in common with SCUC:•The power flow equations in each time period form the core of the formulation,The formulation includes binary decision variables which affect system power flow, andThe formulation includes several side constraints which govern the feasibility of the design.Accordingly, the sense of the constraints developed in this article closely parallels existing SCUC formulations (Zhu, 2009). Conversely, the mixed AC–DC electricity distribution system design problem differs from SCUC in that the binary design decisions are independent of the time period. This allows decoupling by time period once the binary decisions are fixed, similar to a two-stage stochastic programming model.Bold italic font,a, denotes decision variables, italic font, a, denotes fixed parameters or indices, and calligraphic font,A,denotes sets. When multiple subscripts are present, we omit the separating commas except in cases in which a numeric value is substituted for a symbol. The network representation in the formulation employs the following indices and sets:a∈ASet of system network architectures (a = 0 for DC and a = 1 for AC),Set of system buses (nodes),Set of system branches (arcs),Set of system sources (supply),Set of system loads (demand),Set of system converters (AC–DC, DC–AC, or DC–DC),Set of harmonic frequencies, andSet of time periods under evaluation.For harmonics h, harmonic frequency fh= hf1, in which f1 is the fundamental frequency. Therefore, h = 0 corresponds to DC, h = 1 corresponds to fundamental frequency AC, and h > 1 and integer corresponds to the conventional definition of harmonic frequencies in power systems engineering.Binary variablesxB,xS,xL, andxC model the system design decisions:xikaBequals 1 if branch ik is assigned to network architecture a, and 0 otherwise;equals 1 if source s is connected to the system using architecture a, and 0 otherwise;equals 1 if load ℓ is connected to the system using architecture a, and 0 otherwise; andequals 1 if converter c is present in the system, and 0 otherwise.Eqs. (8) and (19) on the following pages present the full formulation for the mixed AC–DC electricity distribution system design problem.The objective function (8) minimizes the total energy supplied from the AC electric utility at the fundamental frequency over the specified time horizon. (Source s = 1 represents the utility interconnection.) For each time period t, the energy demand equals the AC utility source powerP^1,1,tSmultiplied by duration τt. The use of multiple time periods allows the objective function to correctly model variances in system performance caused by daily and seasonal load fluctuations.The objective function does not include energy supplied at harmonic frequencies because the formulation does not directly model power at harmonic frequencies. In general, well-behaved AC sources supply negligible real power at harmonic frequencies. Instead, the power required to support harmonic current injections is drawn from the AC network at the fundamental frequency, with coupling provided through the system loads. The formulation presented in this article does not directly model this coupling, but the fundamental frequency AC load nevertheless indirectly reflects system harmonic losses.Constraints (9) and (10) enforce the flow balance equation (1) for power and current, respectively. Source and converter output power and current are defined using the source convention (into the bus), while load and converter input power and current are defined using the load convention (out of the bus). Branch power and current are defined as entering the branch (leaving the bus). Therefore, the left hand sides of constraints (9) and (10) represent net power and current injected into each bus and the right hand sides represent net power and current draw out of each bus.Constraints (11) govern the DC and AC power flow for each system branch. Similarly, constraints (12) govern AC branch current at harmonic frequencies. These constraints are an expanded form of the power flow equations (2)–(4) using rectangular voltage coordinates. (The trigonometric functions which appear in (11) and (12) do not operate on the decision variables but only represent transformed constants.) If branch ik is not physically present in network a (xikaB=0), then its complex powerPikhtB+jQikhtBand currentIikhtB,ℜ+jIikhtB,ℑmust equal zero at each harmonic h and time period t; otherwise, the power and current are physical functions of the voltage at each end of the branch.Constraints (13) define the net power for each source and load in the system. Each complex source powerP^shtS+jQ^shtSor load powerPˇℓhtL+jQˇℓhtLis a quadratic function of voltage; this type of supply and demand model is common in electrical power systems analysis. As with the branches, the binary(Objective; see Section 3.3.1)(8)min∑t∈TτtP^1,1,tS(Power balance; see Section 3.3.2)(9a)s.t.∑s∈S^iDP^s,0,tS−∑ℓ∈LˇiDPˇℓ,0,tL+∑c∈C^iDP^c,0,tC−∑c∈CˇiDPˇc,0,tC=∑k∣ik∈BDPik,0,tB+∑k∣ki∈BDPik,0,tB∀i∈ND,∀t∈T(9b)∑s∈S^iAP^s,1,tS−∑ℓ∈LˇiAPˇℓ,1,tL+∑c∈C^iAP^c,1,tC−∑c∈CˇiAPˇc,1,tC=∑k∣ik∈BAPik,1,tB+∑k∣ki∈BAPik,1,tB∀i∈NA,∀t∈T(9c)∑s∈S^iAQ^s,1,tS−∑ℓ∈LˇiAQˇℓ,1,tL+∑c∈C^iAQ^c,1,tC−∑c∈CˇiAQˇc,1,tC=∑k∣ik∈BAQik,1,tB+∑k∣ki∈BAQik,1,tB∀i∈NA,∀t∈T(Current balance; see Section 3.3.2)(10a)s.t.∑s∈S^iAI^shtS,ℜ−∑ℓ∈LˇiAIˇℓhtL,ℜ+∑c∈C^iAI^chtC,ℜ−∑c∈CˇiAIˇchtC,ℜ=∑k∣ik∈BAIikhtB,ℜ+∑k∣ki∈BAIikhtB,ℜ∀i∈NA,∀h∈HH,∀t∈T(10b)∑s∈S^iAI^shtS,ℑ−∑ℓ∈LˇiAIˇℓhtL,ℑ+∑c∈C^iAI^chtC,ℑ−∑c∈CˇiAIˇchtC,ℑ=∑k∣ik∈BAIikhtB,ℑ+∑k∣ki∈BAIikhtB,ℑ∀i∈NA,∀h∈HH,∀t∈T(Branch power; see Section 3.3.3)(11a)s.t.Pik,0,tB=xik,0B(1Aik,0,t2(gik,0,tSe+gik,0,tSh2)Vi,0,t2−1Aik,0,tgik,0,tSeVi,0,tVk,0,t(gik,0,tSe+gik,0,tSh2))∀ik∈BD,∀t∈T(11b)Pki,0,tB=xik,0B((gik,0Se+gik,0Sh2)Vk,0,t2−1Aik,0gik,0SeVi,0,tVk,0,t)∀ik∈BD,∀t∈T(11c)Pik,1,tB=xik,1B(1Aik,1,t2(gik,1,tSe+gik,1,tSh2)(Ei,1,t2+Fi,1,t2)+1Aik,1,t(−gik,1,tSecosφik,1,t+bik,1,tSesinφik,1,t)×(Ei,1,tEk,1,t+Fi,1,tFk,1,t)+1Aik,1,t(gik,1,tSesinφik,1,t+bik,1,tSecosφik,1,t)×(Ei,1,tFk,1,t−Fi,1,tEk,1,t)(gik,1,tSe+gik,1,tSh2))∀ik∈BA,∀t∈T(11d)Pki,1,tB=xik,1B((gik,1,tSe+gik,1,tSh2)(Ek,1,t2+Fk,1,t2)+1Aik,1,t(−gik,1,tSecosφik,1,t−bik,1,tSesinφik,1,t)×(Ei,1,tEk,1,t+Fi,1,tFk,1,t)+1Aik,1,t(gik,1,tSesinφik,1,t−bik,1,tSecosφik,1,t)×(Ei,1,tFk,1,t−Fi,1,tEk,1,t)(gik,1,tSe+gik,1,tSh2))∀ik∈BA,∀t∈T(11e)Qik,1,tB=xik,1B(−1Aik,1,t2(bik,1,tSe+bik,1,tSh2)(Ei,1,t2+Fi,1,t2)+1Aik,1,t(gik,1,tSesinφik,1,t+bik,1,tSecosφik,1,t)×(Ei,1,tEk,1,t+Fi,1,tFk,1,t)+1Aik,1,t(gik,1,tSecosφik,1,t−bik,1,tSesinφik,1,t)×(Ei,1,tFk,1,t−Fi,1,tEk,1,t)(bik,1,tSe+bik,1,tSh2))∀ik∈BA,∀t∈T(11f)Qki,1,tB=xik,1B(−(bik,1,tSe+bik,1,tSh2)(Ek,1,t2+Fk,1,t2)+1Aik,1,t(−gik,1,tSesinφik,1,t+bik,1,tSecosφik,1,t)×(Ei,1,tEk,1,t+Fi,1,tFk,1,t)+1Aik,1,t(−gik,1,tSecosφik,1,t−bik,1,tSesinφik,1,t)×(Ei,1,tFk,1,t−Fi,1,tEk,1,t)(bik,1,tSe+bik,1,tSh2))∀ik∈BA,∀t∈T(Branch current; see Section 3.3.3)(12a)s.t.IikhtB,ℜ=xik,1B(1Aikht2((gikhtSe+gikhtSh2)Eiht−(bikhtSe+bikhtSh2)Fiht)IikhtB,ℜ=+1Aikht(−gikhtSecosφikht+bikhtSesinφikht)EkhtIikhtB,ℜ=+1Aikht(+gikhtSesinφikht+bikhtSecosφikht)Fkht(gikhtSe+gikhtSh2))∀ik∈BA,∀h∈HH,∀t∈T(12b)IkihtB,ℜ=xik,1B((gikhtSe+gikhtSh2)Ekht−(bikhtSe+bikhtSh2)FkhtIkihtB,ℜ=+1Aikht(−gikhtSecosφikht−bikhtSesinφikht)EihtIkihtB,ℜ=+1Aikht(−gikhtSesinφikht+bikhtSecosφikht)Fiht(gikhtSe+gikhtSh2))∀ik∈BA,∀h∈HH,∀t∈T(12c)IikhtB,ℑ=xik,1B(1Aikht2((bikhtSe+bikhtSh2)Eiht+(gikhtSe+gikhtSh2)Fiht)IikhtB,ℑ=+1Aikht(−gikhtSesinφikht−bikhtSecosφikht)EkhtIikhtB,ℑ=+1Aikht(−gikhtSecosφikht+bikhtSesinφikht)Fkht(gikhtSe+gikhtSh2))∀ik∈BA,∀h∈HH,∀t∈T(12d)IkihtB,ℑ=xik,1B((bikhtSe+bikhtSh2)Ekht+(gikhtSe+gikhtSh2)FkhtIkihtB,ℑ=+1Aikht(gikhtSesinφikht−bikhtSecosφikht)EihtIkihtB,ℑ=+1Aikht(−gikhtSecosφikht−bikhtSesinφikht)Fiht(gikhtSe+gikhtSh2))∀ik∈BA,∀h∈HH,∀t∈T(Source and load power; see Section 3.3.4)(13a)s.t.P^s,0,tS=xs,0S(Ps,0,tS+Vi,0,tIs,0,tS−Vi,0,t2gs,0,tS)∀i∈ND,∀s∈S^iD,∀t∈T(13b)P^s,1,tS=xs,1S(Ps,1,tS+Vi,1,tIs,1,tS,D+Ei,1,tIs,1,tS,ℜ+Fi,1,tIs,1,tS,ℑ−Vi,1,t2gs,1,tS)∀i∈NA,∀s∈S^iA,∀t∈T(13c)Q^s,1,tS=xs,1S(Qs,1,tS−Vi,1,tIs,1,tS,Q−Ei,1,tIs,1,tS,ℑ+Fi,1,tIs,1,tS,ℜ+Vi,1,t2bs,1,tS)∀i∈NA,∀s∈S^iA,∀t∈T(13d)Pˇℓ,0,tL=xℓ,0L(Pℓ,0,tL+Vi,0,tIℓ,0,tL+Vi,0,t2gℓ,0,tL)∀i∈ND,∀ℓ∈LˇiD,∀t∈T(13e)Pˇℓ,1,tL=xℓ,1L(Pℓ,1,tL+Vi,1,tIℓ,1,tL,D+Ei,1,tIℓ,1,tL,ℜ+Fi,1,tIℓ,1,tL,ℑ+Vi,1,t2gℓ,1,tL)∀i∈NA,∀ℓ∈LˇiA,∀t∈T(13f)Qˇℓ,1,tL=xℓ,1L(Qℓ,1,tL−Vi,1,tIℓ,1,tL,Q−Ei,1,tIℓ,1,tL,ℑ+Fi,1,tIℓ,1,tL,ℜ−Vi,1,t2bℓ,1,tL)∀i∈NA,∀ℓ∈LˇiA,∀t∈T(Source and load current; see Section 3.3.4)(14a)s.t.I^shtS,ℜ=xs,1S(IshtS,ℜ−EihtgshtS+FihtbshtS)∀i∈NA,∀s∈S^iA,∀h∈HH,∀t∈T(14b)I^shtS,ℑ=xs,1S(IshtS,ℑ−EihtbshtS−FihtgshtS)∀i∈NA,∀s∈S^iA,∀h∈HH,∀t∈T(14c)IˇℓhtL,ℜ=xℓ,1L(IℓhtL,ℜ+EihtgℓhtL−FihtbℓhtL)∀i∈NA,∀ℓ∈LˇiA,∀h∈HH,∀t∈T(14d)IˇℓhtL,ℑ=xℓ,1L(IℓhtL,ℑ+EihtbℓhtL+FihtgℓhtL)∀i∈NA,∀ℓ∈LˇiA,∀h∈HH,∀t∈T(Converter power; see Section 3.3.5)(15a)s.t.xcCP^chC,min≤P^chtC≤xcCP^chC,max∀c∈C,∀h∈{0,1},∀t∈T(15b)xcCPˇchC,min≤PˇchtC≤xcCPˇchC,max∀c∈C,∀h∈{0,1},∀t∈T(15c)∑h∈{0,1}PˇchtC=xcC(∑h∈{0,1}P^chtC+αc+βc∑h∈{0,1}P^chtC+γc(∑h∈{0,1}P^chtC)2)∀c∈C,∀t∈T(15d)xcCQ^c,1C,min≤Q^c,1,tC≤xcCQ^c,1C,max∀c∈C,∀t∈T(15e)xcCQˇc,1C,min≤Qˇc,1,tC≤xcCQˇc,1C,max∀c∈C,∀t∈T(Converter current; see Section 3.3.5)(16a)s.t.−xcCI^chC,max≤I^chtC,ℜ≤xcCI^chC,max∀c∈C,∀h∈HH,∀t∈T(16b)−xcCIˇchC,max≤IˇchtC,ℜ≤xcCIˇchC,max∀c∈C,∀h∈HH,∀t∈T(16c)−xcCI^chC,max≤I^chtC,ℑ≤xcCI^chC,max∀c∈C,∀h∈HH,∀t∈T(16d)−xcCIˇchC,max≤IˇchtC,ℑ≤xcCIˇchC,max∀c∈C,∀h∈HH,∀t∈T(State variable relationships; see Section 3.3.6)(17a)s.t.Vi,1,t2=Ei,1,t2+Fi,1,t2∀i∈NA,∀t∈T(17b)xcCEihmin≤Eiht≤xcCEihmax∀i∈NA,∀c∈CiI,∀h∈HH,∀t∈T(17c)xcCFihmin≤Fiht≤xcCFihmax∀i∈NA,∀c∈CiI,∀h∈HH,∀t∈T(Binary logic; see Section 3.3.7)(18a)s.t.∑a∈AxikaB≤1∀ik∈B(18b)∑a∈AxsaS=1∀s∈S(18c)∑a∈AxℓaL=1∀ℓ∈L(18d)xs,0S≤∑ℓ∈LˇiDxℓ,0L+∑k∣ik∈BDxik,0B+∑k∣ki∈BDxki,0B+∑c∈CˇiDxcC∀i∈ND,∀s∈S^iD(18e)xs,1S≤∑ℓ∈LˇiAxℓ,1L+∑k∣ik∈BAxik,1B+∑k∣ki∈BAxki,1B+∑c∈CˇiAxcC∀i∈NA,∀s∈S^iA(18f)xℓ,0L≤∑s∈S^iDxs,0S+∑k∣ik∈BDxik,0B+∑k∣ki∈BDxki,0B+∑c∈C^iDxcC∀i∈ND,∀ℓ∈LˇiD(18g)xℓ,1L≤∑s∈S^iAxs,1S+∑k∣ik∈BAxik,1B+∑k∣ki∈BAxki,1B+∑c∈C^iAxcC∀i∈NA,∀ℓ∈LˇiA(18h)xcC≤∑s∈S^iDxs,0S+∑k∣ik∈BDxik,0B+∑k∣ki∈BDxki,0B∀i∈ND,∀c∈CˇiD(18i)xcC≤∑s∈S^iAxs,1S+∑k∣ik∈BAxik,1B+∑k∣ki∈BAxki,1B∀i∈NA,∀c∈CˇiA(18j)xcC≤∑ℓ∈LˇiDxℓ,0L+∑k∣ik∈BDxik,0B+∑k∣ki∈BDxki,0B∀i∈ND,∀c∈C^iD(18k)xcC≤∑ℓ∈LˇiAxℓ,1L+∑k∣ik∈BAxik,1B+∑k∣ki∈BAxki,1B∀i∈NA,∀c∈C^iA(18l)xik,0B=0∀ik∈B∖BD(18m)xik,1B=0∀ik∈B∖BA(18n)xs,0S=0∀s∈S∖SD(18o)xs,1S=0∀s∈S∖SA(18p)xℓ,0L=0∀ℓ∈L∖LD(18q)xℓ,1L=0∀ℓ∈L∖LA(Variable bounds; see Section 3.3.8)(19a)s.t.Vihmin≤Viht≤Vihmax∀i∈N,∀h∈{0,1},∀t∈T(19b)Eihmin≤Eiht≤Eihmax∀i∈N,∀h∈H∖{0},∀t∈T(19c)Fihmin≤Fiht≤Fihmax∀i∈N,∀h∈H∖{0},∀t∈T(19d)xikaBbinary∀ik∈B,∀a∈A(19e)xsaSbinary∀s∈S,∀a∈A(19f)xℓaLbinary∀ℓ∈L,∀a∈A(19g)xcCbinary∀c∈CvariablesxsaSandxℓaLenforce the condition that the source or load power is zero if not connected to network a and otherwise is a function of bus voltage at the point of interconnection.Constraints (15) govern the real and reactive power processed by active converters. Unlike branch, source, and load powers, which are physical functions of voltage, converter power can be actively controlled. If a particular converter c is present in the system (xcC=1), then it can supply real output powerP^chtCat harmonic h within the limits imposed by constraint (15a). Constraint (15c) models converter input power, output power, and losses per (5). If a converter is not present in the system (xcC=0), then the converter input and output power are fixed to zero.Appropriate selection of the limitsP^chC,min,P^chC,max,PˇchC,min,andPˇchC,maxenforces the type of converter (AC–DC, DC–AC, or DC–DC). For example, for a DC–DC converter, all four of these power limits are equal to zero at h = 1. AC-connected converters may also supply or consume reactive power within the limits defined by (15d) and (15e).Inverters feeding AC islands are required to source and sink harmonic currents in addition to supplying real and reactive power at the fundamental frequency. Constraints (16) provide nonzero limits for harmonic currents provided the corresponding converter c is present in the system (xcC=1). Converter losses associated with processing harmonic currents are assumed negligible.In constraints (15) and (16), converter input and output power and current are defined independently of the buses to which the converter terminals connect. Instead, the setsC^iD,C^iA,CˇiD,andCˇiAdetermine the converter connections and therefore provide proper allocation of the contribution from each converter to the appropriate bus in the power and current balance constraints.Constraints (17) enforce relationships among the various state variables. Constraint (17a) is an auxiliary constraint which defines the fundamental frequency voltage magnitudesVi, 1, tin terms of the real and imaginary voltage componentsEi, 1, tandFi, 1, t, respectively. This constraint enforces equivalence between the voltage as expressed in polar and rectangular coordinates, permitting other constraints in the formulation to avoid the use of trigonometric and square root terms. Constraint (17a) is required only at the fundamental frequency because voltage magnitude terms do not appear in the harmonic frequency equations.Typically, inverters or filters that sink current at harmonic frequencies do so by constraining the harmonic voltage to zero at the bus where they connect. Constraints (17b) and (17c) enforce this condition for the set of convertersCiIat each bus i that are capable of filtering harmonic currents.Constraints (18) enforce several logical conditions that define the feasible design of a mixed AC–DC electricity distribution system. Constraints (18a)–(18c) are packing and partitioning constraints which define the proper assignment of system equipment. Constraints (18a) prohibit a system branch from being assigned to the AC and DC networks simultaneously, although it is permissible for a branch to not be assigned to any network. Constraints (18b) and (18c) ensure that all sources and loads, respectively, are assigned to exactly one network architecture (AC or DC). Because sources and loads represent fixed supply and demand, it is not permissible to omit them from the system. (Otherwise, the optimal solution would include all the sources and omit all the loads.)Constraints (18d)–(18i) enforce common sense engineering design principles on the network configuration. These constraints are redundant with the power balance equations and definitions for branch, source, load, and converter power, and may therefore be considered feasibility cuts. The advantage of these cuts is that they operate specifically on the binary variables, tightening the integer feasible region in relaxations of the formulation.Constraints (18j) and (18k) are optimality cuts for converter placement that ensure that all converter outputs connect to a load or a branch such that there is a destination for power transfer through the converter. Since each converter c incurs fixed loss αcsimply by being present in the system, it is suboptimal to include a converter that serves no load.Finally, constraints (18l) and (18m), (18n) and (18o), and (18p) and (18q) prevent the assignment of branches, sources, and loads, respectively, from being assigned to an incompatible network architecture.Constraints (19a)–(19c) provide limits on the system voltages. Bounds forEihtandFihtare derived from the voltage magnitude limits and any restrictions on the bus voltage angles. Constraints (19d)–(19g) define the scope of the binary decision variables. There are no explicit bounds on the power and current variables.We employ several reformulation techniques that increase the tractability of the nonconvex MINLP:1.The isolation of nonconvexity using reformulation variables (Section 3.4.1),Exact linearization of binary-continuous terms using equivalent big M constraints (Section 3.4.2), andImplementation of valid cuts which improve algorithm performance (Section 3.4.3).The resulting, equivalent mathematical program to (8)–(19) is a nonconvex mixed-integer quadratically constrained programming problem (MIQCP).In order to isolate the nonconvexity caused by bilinear terms containing products of continuous variables, we replace such terms with auxiliary reformulation variablesw—one per bilinear term. This requires the introduction of reformulation constraints which restrict the value ofwto equal the original bilinear term. For example, the single constraintu=∑i∑kxixkmay be replaced with the set of constraintsu=∑i∑kwikandwik=xixk∀i,k.This strategy is part of the Reformulation-Linearization Technique presented in Sherali and Alameddine (1992) and extended in Liberti and Pantelides (2006). The advantages of the reformulation are that it (i) renders the original constraint linear, isolating the nonconvexity in the reformulation constraints, and (ii) facilitates explicit relaxation strategies for the reformulation variables.Isolation of all continuous bilinear terms in the formulation requires reformulation variables and associated constraints for voltage products (used in the device power definitions) and squared converter power terms (used in the converter input–output power relationship),(20a)wikhtVV=VihtVkht∀i,k∈N∣i≥k,∀h∈{0,1},∀t∈T,(20b)wikhtEE=EihtEkht∀i,k∈N∣i≥k,∀h∈{1},∀t∈T,(20c)wikhtEF=EihtFkht∀i,k∈N,∀h∈{1},∀t∈T,(20d)wikhtFF=FihtFkht∀i,k∈N∣i≥k,∀h∈{1},∀t∈T,(20e)wctC=∑h∈{0,1}P^chtC∀c∈C,∀t∈T,(20f)wctCC=(wctC)2∀c∈C,∀t∈T.Thesewvariables replace their associated bilinear or otherwise composite terms in the formulation. For example, constraint (13a) becomesP^s,0,tS=xs,0S(Ps,0,tS+Vi,0,tIs,0,tS−wii,0,tVVgs,0,tS).Constraints (11), (13), (15c), and (17a) are all reformulated this way.After reformulating the nonlinearities in the continuous terms, the formulation still contains constraints of the formu=yf(x) whereuandxare continuous,yis binary, and f(x) is a linear function. Such constraints may be linearized using big M switching constraints,(21a)f(x)−M+(1−y)≤u≤f(x)+M−(1−y),(21b)−M−y≤u≤M+y.Wheny= 0, constraints (21a) are nonbinding but constraints (21b) fix the value ofuto zero. Wheny= 1, constraints (21b) become nonbinding but constraints (21a) fix the value ofuto f(x).We linearize constraints (11) and (13) this way. For example, we replace constraint (13a) with the set of constraintsP^s,0,tS≤(Ps,0,tS+Vi,0,tIs,0,tS−wii,0,tVVgs,0,tS)+M−(1−xs,0S),P^s,0,tS≥(Ps,0,tS+Vi,0,tIs,0,tS−wii,0,tVVgs,0,tS)−M+(1−xs,0S),P^s,0,tS≤M+xs,0S,P^s,0,tS≥−M−xs,0S.Constraint (15c) also follows this pattern, but may be linearized more directly. From (15a), allP^chtC=0wheneverxcC=0. We therefore reformulate (15c) as∑h∈{0,1}PˇchtC=wctC+xcCαc+βcwctC+γcwctCC.In order to strengthen the model, we introduce two tailored feasibility cuts derived from the power flow equations:1.Cuts that constrain branch real power losses to be nonnegative, andCuts that constrain the geometry of the AC voltages.The cuts are valid in the sense that they hold for any solution which satisfies the original MINLP formulation, that is, the cuts are redundant for the full nonconvex model. However, their presence tightens the feasible region in mixed-integer linear programming (MILP) relaxations of the model.The branch loss cuts take the form(22)PikB+PkiB≥0,which states that the real power entering the branch from each terminal must sum to a nonnegative net power which represents the branch loss. The reasoning is that branch losses can never be negative, as then the branch would be creating energy—a violation of the laws of physics. Similar cuts may be derived for branch reactive power loss, but the sense of the inequality depends on the electrical characteristics of the branch. Unlike real power, reactive power represents circulating energy, and therefore may either be “lost” in an inductive branch or “gained” in a capacitive branch.The voltage magnitude cuts follow from the definition of complex AC voltage in rectangular coordinates,V˜=E+jF.Real and imaginary voltage componentsEandFare orthogonal, as illustrated in Fig. 3. From the geometry of the voltage triangle and the trigonometric relationshipV2=E2+F2,the cuts(23)|V|≤|E|+|F|,(24)|E|≤|V|and(25)|F|≤|V|are valid for all feasible values ofV, E, andF. In practice, cuts (23)–(25) require either a linearization of the absolute value function or a restriction on the signs ofV, E, andF. Therefore, we apply the cuts only to voltage combinations for which the variable bounds enable dropping the absolute value function.After reformulation, the mixed AC–DC electricity distribution system design problem is a MIQCP of the general form(P)z=minF(x,y),s.t.G(x,y)≤0,x∈X,y∈Yandinteger.The objective function F is linear. The constraints G are nonlinear and nonconvex, but are separable inxandy. In addition, (P) decomposes inxby time period whenyis fixed, although it remains nonconvex.Current state-of-the-art global optimization solver cannot efficiently solve a monolith for this problem (see Section 5). However, the two-stage structure of (P) lends itself to efficient decomposition techniques. In this section, we present an efficient solution algorithm for (P) based on Nonconvex Generalized Benders Decomposition (NGBD). Under certain mild assumptions, namely that the feasible integer solution spaces of both (P) and its convex relaxation are bounded, the algorithm guarantees both finite convergence and a globally optimal solution of (P) within a finite tolerance.The tailored algorithm includes two pre-processing techniques which improve the tractability of the formulation: computation of minimal big M values and a bound-tightening procedure. We also develop two enhancements to the NGBD algorithm which decrease solution time without adversely affecting solution quality.Generalized Benders Decomposition (GBD) (Geoffrion, 1972) is a decomposition procedure used to solve nonlinear problems of the form(26)minx,yF(x,y)s.t.G(x,y)≤0,x∈X,y∈Y,in whichyis a set of “complicating” variables in the sense that (26) becomes much easier to solve forxwhenyis fixed. Although GBD does not require that (26) be convex jointly inxandy, it does require that functions F and G are convex inxwhenyis fixed. Therefore, GBD cannot be applied to the mixed AC–DC electricity distribution system design problem.NGBD (Li et al., 2011) extends GBD to nonlinear, nonconvex problems of the form(27)minξ,y∑t∈TFt(ξt,y)s.t.Gt(ξt,y)≤0∀t∈T,ξt∈Ξt∀t∈T,y∈Yandinteger,in whichTrepresents a set of time periods or scenarios which are independent for fixedy. Problem (27) is a special case of (P) in whichx={ξ1,…,ξ|T|},F(x,y)=∑t∈TFt(ξt,y),G(x,y)=G1(ξ1,y)×…×G|T|(ξ|T|,y),X=Ξ1×…×Ξ|T|.Since (P) and (27) are equivalent for the mixed AC–DC electricity distribution system design problem, we use the more compact notation of (P) throughout the article.Like GBD, NGBD seeks solutions to (P) by generating trial points foryand computing the corresponding feasible solutionsxusing separate but related optimization problems. The lower bounding problem(LBP)z̲=minx,yF̲(x,y),s.t.G̲(x,y)≤0,x∈X,y∈Yandinteger,is a convex relaxation of (P) that generates trial pointsy=yi′and associated lower boundszion the optimal objective function value of (P). In (LBP),FandGare convex underestimators for F and G, respectively.The upper bounding problem(UBP)z¯(y)=minxF(x,y),s.t.G(x,y)≤0,x∈X,is a nonconvex NLP inxfor fixedy. Given a trial pointy=yi′,solving (UBP) yields a feasible solutionx=xi′and associated upper boundz¯ion the optimal objective function value of (P).The main loop of the NGBD algorithm solves (P) by iteration between (LBP) and (UBP) (Fig. 4). The logic behind NGBD is as follows: the algorithm solves a sequence of increasingly restrictive (LBP)s, generating a sequence of non-decreasing lower boundszi, each of which applies to the current trial pointy=yi′and all feasible solutionsythat have not yet been visited. Then, by solving a sequence of (UBP)s using the trial pointsyi′at each iteration i, the algorithm generates a sequence of upper boundsz¯i. These upper bounds are not necessarily non-increasing nor non-decreasing; therefore the algorithm must track which is the best. At each iteration i, the tightest upper boundz¯i′corresponds to the best feasible solution(xi′′,yi′′)found during any iteration i′ up to and including i. As soon as the lower boundzion the unvisited values ofyis greater than or equal to the upper boundz¯i′on the visited values ofywithin tolerance ɛ, then no value ofywill yield a better solution than the current best solution(xi′′,yi′′). Therefore, at algorithm termination,(xi′′,yi′′)is globally optimal within tolerance ɛ.After each iteration, the algorithm adds the solution elimination constrainty≠yi′to (LBP). The solution elimination constraints ensure that the main loop never generates a given trial point more than once. In the worst case, NGBD enumerates all pointsy∈ Y, solving (UBP) at each trial point. The finite convergence of NGBD therefore requires that domain Y contains a finite number of integer points.As described by Li et al. (2011) and Li, Chen, and Barton (2012), the full NGBD algorithm uses GBD to solve (LBP) at each iteration. However, any solution procedure for (LBP) may replace GBD provided that (i) it is finitely convergent and (ii) it returns a global optimum to (LBP). In order for NGBD to guarantee an ɛ-optimal solution, the optimality tolerances for the (LBP) and (UBP) algorithms must sum to ɛ. In our tailored NGBD algorithm (Section 4.5), we solve the (LBP) monolith rather than employ a decomposition algorithm.Both NGBD and the bound-tightening procedure require a convex relaxation of (P). Strictly speaking, all mixed-integer programs (linear or nonlinear) are nonconvex due to the integrality requirements. Nevertheless, problem (7) may be termed a convex MINLP if the functions F and G are convex. Convex MINLPs are significantly more tractable than nonconvex MINLPs because they are readily solved to global optimality using local NLP solvers coupled with branch and bound techniques on the integer variables.The convex MINLP (P̆) is a convex relaxation of a nonconvex MINLP (P) if (i) every feasible solution for (P) is also feasible for (P̆), and (ii) the optimal objective function valuez˘*of (P̆) is better than or the same as the optimal objective function value z* of (P). Solving convex relaxation (P̆) provides a lower bound on the objective function value of (P).After reformulation, the nonconvexities in the mixed AC–DC electricity distribution system design problem are isolated in quadratic reformulation constraints of the formw=x2 and bilinear reformulation constraints of the formw=x1x2. Therefore, a convex relaxation for the problem may be obtained by replacing these reformulation constraints with convex underestimators.To obtain the relaxation of (P), we first create the McCormick inequalities (McCormick, 1976) to the definitions of the reformulation variableswikhtVV,wikhtEE,wikhtFF,andwikhtEF(20a)–(20d).The quadratic termw=x2 is a special case of the bilinear termw=x1x2 in whichx1 =x2 =x. Ifx∈ [xL, xU], then the McCormick inequalities(28a)w≥2xLx−(xL)2,(28b)w≥2xUx−(xU)2,(28c)w≤xLx+xUx−xLxUprovide a valid linear relaxation ofw. However, relaxation (28) is generally weak unless xL and xU are close together.Because the function f(x) =x2 is convex, the underestimating terms (28a)–(28b) may be strengthened by adding cuts at points intermediate to xL and xU. For a univariate, differentiable, convex functionw= f(x), the tangent line at any pointx= x′ provides the valid underestimator which is tight atx= x′,w≥f(x′)+dfdx|x=x′·(x−x′).Therefore, given a set of K values of x′ such thatxL≤xk′≤xUfor k ∈ {1, …, K}, the set of inequalities(29a)w≥2xk′x−(xk′)2∀k∈{1,…,K},(29b)w≤xLx+xUx−xLxU,provide a valid linear relaxation that is tighter than (28). Given a sufficiently large K, the underestimating constraints (29a) can be made arbitrarily tight. However, the overestimating constraint (29b) remains weak. We apply this convex relaxation strategy to the definition of the reformulation variableswctCC(20f) as well as towikhtVV,wikhtEE,andwikhtFFfor cases in which i = k.Remark 1Because the function f(x) =x2 is convex, the underestimating terms (28a) and (28b) may instead be replaced with the exact expressionw≥x2 to produce a convex MIQCP. However, this would change the problem class from a MILP to a convex MIQCP. Testing indicated that the improvement in relaxation tightness did not justify the large increase in solution time for the instances of the design problem examined in this article.The use of arbitrarily large values of M in switching constraints (21) can lead to slow convergence or numerical instability in practical MILP solvers. It is therefore desirable to use the smallest possible values for M+ and M− that provide adequate switching foru.Given simple boundsx∈ X for the continuous variables, the big M pre-processing procedure solves the auxiliary problemsM+=max{maxx∈Xf(x),0}andM−=max{−minx∈Xf(x),0}for each big M constraint set in (P). Setting M = 0 if it would otherwise be negative simplifies the construction of (21) while retaining the correct sense of the constraints, facilitating automatic elimination of redundant constraints by MILP solvers.Bound tightening procedures can improve the performance of both conventional branch-and-bound algorithms, which branch on integer variables, and spatial branch-and-bound algorithms, which branch by partitioning the domains of the continuous decision variables. Bound tightening restricts the problem domain and, by extension, reduces the size of the branch-and-bound tree. Although many nonconvex MINLP solvers employ internal bound tightening, performing bound tightening explicitly during pre-processing allows exploitation of special structure and can further improve algorithm performance.We perform bound tightening using a convex relaxation (P̆) for problem (P) instead of the original MINLP. Since the feasible domain of (P) is by definition a subspace of the feasible domain of (P̆), any feasibility-based bound tightening that is valid for (P̆) remains valid for (P).Given a convex relaxationGof the nonconvex constraints G in (P), the lower bound tightening problem(LBT)zkL=minxkoryk,s.t.G̲(x,y)≤0,x∈X,y∈Y,and upper bound tightening problem(UBT)zkU=maxxkoryk,s.t.G̲(x,y)≤0,x∈X,y∈Y,compute valid bounds for each variable:zkL≤xk≤zkUfor continuous variables or⌈zkL⌉≤yk≤⌊zkU⌋for integer variables. For computational speed, the integer decisionsyare relaxed to be continuous during bound tightening, hence the need for floor and ceiling operations to obtain the tightened bounds.Problems (LBT) and (UBT) may be solved sequentially for each continuous variablexand integer variableyto perform bound tightening over the entire domain of (P). In addition, knowledge of the exact nonlinear relationships in (P) may be exploited to improve the tightness of the relaxation. For example, consider the generic reformulation variablewikwhich is the product of reformulation variablesxi∈[xiL,xiU]andxk∈[xkL,xkU]. After any update to the bounds onxiorxk, the bounds onwikmay be tightened according towikL←max{wikL,min{xiLxkL,xiUxkL,xiLxkU,xiUxkU}},wikU←min{wikU,max{xiLxkL,xiUxkL,xiLxkU,xiUxkU}}.Similarly, for the generic reformulation variablewii=xi2,an update to upper boundwiiUmay be used to tighten the upper and lower bounds onxiaccording toxiL←max{xiL,−wiiU},xiU←min{xiU,+wiiU}.In addition, to the extent that it exploits the bounds on the nonlinear variables, convex relaxationGmay also be tightened.We implement the iterative bound tightening procedure shown in Fig. 5, in whichXNdefines the set of all continuous decision variables which participate in nonlinear terms,defines the set of all reformulation variables for the nonlinear terms (thewvariables),defines the set of all continuous decision variables which appear in linear constraints only, anddefines the set of binary decision variables.The iterative portion of the bound tightening algorithm operates on the nonlinear and reformulation variables only, since nonlinear relationships may be exploited to improve their bounds. (Without exploitation of nonlinear relationships, bound tightening provides no further improvement after the first iteration because (LBT) and (UBT) are linear programs for this particular design problem.) The loop repeats until the bounds converge within a specified absolute tolerance ɛ or for the maximum number of iterations, whichever occurs first. After iteratively bound tightening the variables related to nonlinear terms, a single pass tightens the bounds on the remaining continuous and binary variables.Remark 2Although the binary variables could be included in the iterative portion of the bound tightening procedure, testing indicated that the gains are minimal for the instances of the design problem examined in this article.After computing big M values and performing bound tightening, we generate problems (LBP) and (UBP) and solve (P) using a variant of the NGBD algorithm presented in Section 4.1. The tailored algorithm includes enhancements to address instances of poor performance in the (LBP) and (UBP).For the mixed AC–DC electricity distribution system design problem, (LBP) follows from (P) by replacing all reformulation constraints for thewvariables with their convex relaxations as described in Section 4.2. The resulting mathematical program is a MILP and may be solved directly using commercial mixed-integer linear solvers.Alternatively, if the number of scenarios is large, Benders Decomposition may be used to solve the (LBP), as in the full NGBD algorithm. Benders Decomposition applies because (LBP) exhibits the necessary block structure: the problem decouples into individual, linear Benders subproblems inxwhen binary variablesyare fixed. Since subproblems are linear, they produce exact duality-based feasibility and optimality cuts as required for the Benders master problem iny.Becauseyis fixed, the (UBP) is in general a continuous, nonconvex NLP. For the mixed AC–DC electricity distribution system design problem in particular, it is a continuous, nonconvex, quadratically-constrained program (QCP) with a linear objective function. Problem (UBP) has several characteristics which aid its tractability:•(UBP) decouples by time period into distinct subproblems (UBP)t.The harmonic power flow constraints for h > 1 decouple as separate linear programs. Therefore, the (LBP) solution for harmonic currents h > 1 is exact and (UBP) need model only DC (h = 0) and fundamental frequency AC (h = 1), for which the power flow constraints remain nonlinear.Sinceyis fixed, there is no need for big M reformulations in (UBP); exact equality constraints may be used instead. This significantly reduces the number of constraints per time period compared to (LBP).For each time periodt∈T,subproblem (UBP)tmay be solved using a global optimization algorithm; aggregation of the solutions for each subproblem generates the solution to (UBP).In order to verify that NGBD converges to an ɛ-optimal solution, the (UBP) solver employed must compute a globally valid lower bound. This limits the field of potential solvers to global, nonconvex, nonlinear solvers, such as BARON, LINDOGlobal, and GloMIQO. Although local nonlinear solvers can often provide solutions of comparable quality in less time, they do not provide a globally valid lower bound. If local nonlinear solvers or heuristic optimization methods are used to solve (UBP), then NGBD no longer guarantees a global optimum.In practice, the NGBD algorithm may exhibit poor performance (slow convergence or a lack of progress) in either the (LBP) or the (UBP) during any given iteration. To address poor performance in the (LBP), we introduce a solution generation time limit. To ensure that the lower bounds generated by the (LBP) remain valid, we alter the algorithm to setzito the lower bound on the (LBP) solution at each iteration rather than to the objective function value. If the (LBP) solver is unable to determine an optimal solution within the allotted time, the algorithm then transfers the incumbent (LBP) solutiony=yi′to the (UBP) regardless of the gap. This enhancement generates trial points more rapidly but with a possible reduction in trial point quality.Note thatziremains a true, but weaker, lower bound for (P). In addition, because the NGBD termination criterion now references (LBP) lower bounds, this enhancement has the effect that the (LBP) tolerance no longer penalizes the final optimality gap of the NGBD algorithm.To address poor performance in the (UBP), we also introduce a time limit for solving each (UBP) subproblem. For each subproblem, the algorithm then tracks both the partial objective function value ζitsuch thatz¯i:=∑t∈Tζitand the final subproblem gap δitsuch thatɛi′:=∑t∈Tδitrepresents the (UBP) optimality gap for iteration i.This (UBP) enhancement sacrifices the a priori guarantee of an ɛ-optimal solution in order to secure an upper time limit for each NGBD iteration. Nevertheless, upon successful algorithmic termination it is possible to determine if the solution obtained is ɛ-optimal. First, ifɛi′≤ɛfor each iteration i, then the best solution(xi′′,yi′′)is ɛ-optimal. Even if someɛi′>ɛ,however, solution(xi′′,yi′′)is still ɛ-optimal if two weaker conditions are met:1.To ensure that(xi′′,yi′′)is ɛ-optimal for the (UBP), it is required thatɛi′′≤ɛ.For all other iterations i ≠ i′, the relationshipz¯i−ɛi′≥z¯i′−ɛmust be satisfied. This ensures that no other (UBP) examined could have yielded a solution to (P) that is better than the optimum obtained at iteration i′ by more than ɛ.Together, these conditions ensure that solution(xi′′,yi′′)is globally optimal for (P) within tolerance ɛ. If the conditions are not satisfied, then the offending (UBP) subproblems may be resolved without time limits, if desired. Otherwise, the final optimality gap isz¯i′−mini{z¯i−ɛi′}.We present computational results for three case studies. The first is a three bus system constructed to test the capabilities of the algorithm and does not represent a typical building. The second and third cases model a typical three-story office building under reduced and full DC distribution retrofit scenarios, respectively. Data for both systems are available in Frank (2013).We implemented the NGBD algorithm for the mixed AC–DC electricity distribution system design problem using the General Algebraic Modeling System (GAMS) (Rosenthal, 2012). Source code and test cases are available in the online appendix of EJOR. All tests were performed on dual six core Intel Xeon X5670 CPUs operating at 2.93 gigahertz and 48 gigabytes of RAM running GAMS 24.1.3 (64-bit) on Ubuntu Linux 12.04.4. Each test used a single core. The (LBP) solver used was CPLEX (International Business Machines, Inc., 2009): 12.5.1.0 for the three bus and full medium office building test cases, and 12.6.0.0 for the reduced medium office building test case (due to numerical difficulties with 12.5.1.0). The global solvers used were BARON 12.5.0 (Tawarmalani and Sahinidis, 2005), GloMIQO 2.3 (Floudas and Misener, 2013), and LINDOGlobal 8.0.1283.385 (Lin and Schrage, 2009).The three bus test system (Fig. 6a) contains three buses, three branches, two sources, and two loads. Although building electricity distribution systems typically have radial topologies, this test system uses a loop topology to test the capabilities of the solution algorithm: the loop topology allows a large number of feasible designs with similar performance characteristics.The design decisions include the allocation of the PV array, the lighting load, and the three branches to the AC or DC network and the inclusion or exclusion of two active converters. The utility source and the compressor motor load require AC connections. The test case examines three frequencies—DC (h = 0), the AC fundamental (h = 1), and the 3rd harmonic (h = 3)—and includes three time periods.Prior to presolve, the MIQCP formulation for the test case contains 12 binary variables, 341 continuous variables, and 871 constraints. There are 108 possible design combinations, of which 28 are feasible. Although the problem is of a modest size, the nonconvexity and tightly constrained feasible region present significant challenges for state-of-the-art global solvers. In contrast, the (LBP) relaxation contains 334 variables (12 binary) and 1477 constraints—a trivial size for modern MILP solvers. Each (UBP) subproblem contains 83 continuous variables and 108 constraints.Table 1displays the performance for the global solvers BARON, LINDOGlobal, and GLoMIQO for the MIQCP monolith for the three bus test case. All three solvers terminated upon reaching a 24 hour (86 400 second) time limit. BARON was unable to find a feasible solution. GloMIQO and LINDOGlobal returned solutions identical to the optimum found by NGBD, but their optimality could not be verified to within a 1.0 percent tolerance within the time limit.In contrast, NGBD solves the test case rapidly to within 1.0 percent. Table 2displays the performance of the NGBD algorithm with and without bound tightening using BARON, GLoMIQO, and LINDOGlobal as the (UBP) solver. NGBD is orders of magnitude faster than solving the monolith: with or without bound tightening, NGBD using either BARON or GLoMIQO returned a globally optimal solution in under 30 second. LINDOGlobal was unable to solve some (UBP) subproblems to the specified tolerance within a 10 minute (600 second) time limit. Nevertheless, because of the enhancements described in Section 4.5.3, the algorithm is still able to guarantee a global optimum within 1.0 percent upon termination.Bound tightening accelerates NGBD convergence, reducing the number of NGBD iterations required by a factor of 4. However, because of the modest problem size, the added overhead of bound tightening offsets the reduction in NGBD iteration time, increasing total execution time for BARON and GLoMIQO.Fig. 7plots the convergence of the NGBD algorithm (with BARON) for the test case, with and without bound tightening. The convergence plots for GLoMIQO and LINDOGlobal appear very similar. The algorithm finds the optimal design early in the search: on the first iteration with bound tightening and on fourth without. Without bound tightening, the algorithm visits 26 of 28 feasible designs; bound tightening reduces the number of designs visited to only 7.

@&#CONCLUSIONS@&#
In this article, we present a mathematical formulation and tailored solution algorithm for the design of energy efficient mixed AC–DC electricity distribution systems for commercial buildings. We describe a unique MIQCP formulation and relaxation strategy which allow the design problem to be solved using efficient decomposition techniques, develop preprocessing techniques to determine efficient big M values, present a bound tightening procedure, and propose an enhanced NGBD algorithm which allows recovery in the event of difficult subproblems.The proposed algorithm efficiently solved two of three design test cases and found a high quality solution for the third. In contrast, state-of-the-art global solvers encountered difficulty in solving the test cases, neither finding feasible solutions nor computing tight bounds. The case study results demonstrate that the proposed algorithm can efficiently optimize small mixed AC–DC electricity distribution systems and can still suggest high quality designs for larger design cases.The tightly constrained nature of the design problem does present challenges for the proposed algorithm, namely slow progress in solving the relaxation (LBP) for the larger test cases and the tendency of the algorithm to enumerate all feasible solutions prior to termination. Promising avenues for future research include the application of a decomposition technique, such as Benders Decomposition, to the (LBP) to improve performance and the application of enhanced cuts or dual information to reduce the optimality gap, as proposed by Chen et al. (2012).