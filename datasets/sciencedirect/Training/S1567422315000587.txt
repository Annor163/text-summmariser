@&#MAIN-TITLE@&#
Towards a web payment framework: State-of-the-art and challenges

@&#HIGHLIGHTS@&#
This paper analyses the functionality a Web payment framework should provide.It presents the works and projects that can be used to build this framework.It introduces some current initiatives such as FIBO or the Web Payments Initiative.The different issues to cover regarding Web payment frameworks are analysed.The analysis of current state and issues is made following a layered approach.

@&#KEYPHRASES@&#
Electronic commerce,Electronic payment systems,Web payment framework,

@&#ABSTRACT@&#
In the Internet era, through the web, and access to content, products and services has evolved in a spectacular way. At the same time, different business models have been developed for access and consumption. Many of these business models are based on making a payment via the web. The use of electronic payments in the web is a complex issue since it involves the support of multiple payment instruments, the secure exchange of payment information, receipts, and so on. A proposed solution approach to web payments is the development of a web payment framework based on a layered approach. This article analyzes the functionality this framework should provide, what solutions may be used, and what issues still need to be addressed so that a web payment framework can make e-payments more widespread.

@&#INTRODUCTION@&#
In the last ten years, electronic commerce activities have been associated with important changes and innovations, from a technological perspective and for the business models that have been introduced. Recent advances in electronic payments also reflect this. The use of e-payments based on credit and debit cards has been growing on the Internet over the years, and systems such as PayPal have seen as its volume of payments have increased year by year. More recently, the birth of Bitcoin (Nakamoto 2008, Barber et al. 2012) has been a watershed event in the adoption of electronic cash to make payments on the Internet (Peck 2012, Hileman 2014). Until recently, the adoption of e-cash had mostly been a series of failed initiatives. At the same time, new payment systems such as Apple Pay have appeared. With several payment instruments available today, many of them mobile payment systems, the challenge has been to make it easier for the different to perform the different steps that take place for a purchase transaction so that security and interoperability are guaranteed. This includes a variety of stakeholders, such as consumers, merchants, banks, mobile operators and payment services providers.B2C transactions on the web typically take several steps in which payment information and payment systems are used, in order to complete them (Ruiz-Martínez et al. 2012). First, the consumer locates the product or service (shortened to just “product” hereafter) to be purchased or consumed through her web browser installed on her PC or her smartphone. Then she will obtain the description of the product with the payment conditions required by the merchant. Depending on the kind of transaction, the price and payment options available may be negotiated and chosen. Thereafter, the consumer will proceed with the checkout and the payment will be made. If the payment succeeds, the transaction will finish and the consumer will be able to acquire the product, for example, via a ticket that is issued to confirm purchase. Associated with the purchase, the merchant will provide a receipt of the transaction to the consumer. The consumer may receive some loyalty information (ticket, points, coupons) that can be used in subsequent transactions to obtain better prices or other advantageous conditions (Turban et al. 2014).Related to product access, if a problem occurs or the product does not satisfy the conditions agreed to, the consumer will be able to request a refund. If the request is accepted, the merchant will refund the payment by issuing a ticket or some kind of a coupon that will be considered as an alternative currency (de Lange et al. 2012), or by making a payment to the consumer. In this scenario when a web payment is made, there are different exchanges of information. In these exchanges, different kinds of payment information and different payment instruments can be used. Currently, the web and the different standards that define it do not offer a comprehensive and standard solution that supports all of the steps mentioned though. The solution proposed to overcome this challenge has been the definition of a web payment framework (Ruiz-Martínez et al. 2012, Jaffe and Boyera 2015, W3C 2015b). It aims to facilitate, along the purchase process, the exchange of payment information and the use of different payment instruments in an easy way at the same time it guarantees interoperability, trust and security.The development and adoption of this kind of framework is a challenge though. It requires the definition of a set of components that perform different kinds of tasks. With this in mind, I will analyze two issues. First, I will examine the tasks a web payment framework should accomplish in each step of the purchase process, and what solutions have been defined for these tasks so far. Second, based on the current state-of-the-art, I will asses the different issues that are still to be overcome in order to have a comprehensive and standard solution that performs the tasks previously mentioned.The development of a web payment framework has been addressed in several previous academic and industry research works. They include: the Joint Electronic Payment Initiative (JEPI) (Chung and Dardailler 1997); the Secure Electronic Marketplace for Europe (SEMPER) (Lacoste et al. 2000b); and the W3C Common mark-up for micropayment per-fee-links (Michel 1999). The latter contains some ideas proposed in this specification that were followed in another article, by the present author (Ruiz-Martínez et al. 2009). Other initiatives include the Internet Open Trading Protocol (IOTP) (Burdett 2000, Hiroya and Kawatsura 2004, Dulai et al. 2013), and the Payment Frameworks (PayFrameworks) related to the purchase of electronic products (Ruiz-Martínez et al. 2012).These solutions were not adopted due to two main reasons. First, the use of e-payment systems was not widely diffused, and some of the core technologies were not mature enough to support payments effectively (e.g., the web, security, and semantics). Second, not all of the stakeholders were taken into account in their development. The participation of all stakeholders is especially relevant for the success of any mobile payment initiative (Gannamaneni et al. 2015).Currently, the situation in the e-payments area is different. The use of e-payments is thriving and there are different mobile payment solutions too. They include: Paypal, EMV, BulaPay, Google Wallet, Square Cash, Bitcoin, Apple Pay, MPesa, and APSWPP, among others (Javan and Bafghi 2014). The variety of e-payments solutions, mainly mobile payment systems, is causing problems with interoperability, usability, and security. To solve these problems and to enable competition and innovation in web payments, the W3C has launched the Web Payments Interest Group (WPIG) (Jaffe and Boyera 2015, W3C 2015b). There are also other initiatives of standardization considering issues regarding e-payments such as the Financial Business Ontology (2015).Fig. 1shows a conceptual layered architecture that reflect all of the elements a payment framework should define to support the core tasks, and that is based on the initiatives I have mentioned.In this work, I will follow a top–down approach for the description of the different layers and solutions available so far. The Web Application layer shows information about the product that a consumer may be interested in purchasing through a web page, and also includes payment information. How this information is provided is fundamental to produce a good consumer experience and prevent the risk of shopping cart abandonment. This information should also be exchanged in a secure way. To this end, it is embedded in the web page using some language that allows its automatic processing, which also is intended to improve the consumer experience. For embedding this information in a web page (HTML5), such microformats as Turtle, RDFa and JSON for Linking Data (JSON-LD), which has been adopted by WPIG, can be used. These formats attempt to express meaning on the web in a simpler way than the XML vocabularies do.With this data, a consumer should also have information about the identity of participating entities in the system that allows her to determine their trustworthiness. For identification and authentication, there are several mechanisms available. They include X.509 certificates, OpenID Foundation (2015, Recordon and Reed 2006), Mozilla Persona (Mozilla 2015), WebID (Story 2015, W3C 2015c), and Identity Credentials from WPIG (Sporny 2014b, W3C 2015a). The latter initiatives have arisen because certificates do not provide enough information about the kind of entity that is involved. For example, the WebID and Identity Credentials aim at identifying an entity through the web at the same time they allow working with her credentials. Currently, these initiatives are still in draft form and need to be developed further.As for trust, there are two approaches to determine the extent of trust that exists for a web site. On the one hand, it is possible to use directories of certifying identities, such as TRUSTe. On the other hand, some mechanisms based on the concept of the “Web of Trust” are being developed, such as the Monkeysphere Project and WebID. The Identity Credentials specification (Sporny 2014b) aims at unifying the work done in identity projects such as WebID and Mozilla Persona. It provides expressive information on identity that allows associating third-party information with an entity and establishing whether it is trustworthy. It also aims to define integration mechanisms with other solutions, such as OpenID and OAuth.When the consumer confirms the transaction, the payment process is executed by invoking the services provided by the Payment Web API. This process should be easy, quick and comfortable for the consumer.The Payment Information layer represents the vocabularies and semantics used to describe information related to a purchase: products and their categories within various catalogs, payment instruments, loyalty information, and so on, as I noted earlier. The representation of this information in a semantic way facilitates the process, so that subsequently, the purchase processes can be delegated to intelligent agents (Rosaci and Sarn 2014) or recommender systems can be built (Wang et al. 2014). This information can also be shared in applications of social commerce, as an extension of e-commerce (Huang et al. 2014). The use of loyalty and coupon schemes is being introduced in mobile wallets as an additional feature (Gannamaneni et al. 2015).Currently, the main efforts being made to define ontologies available for this purpose are progressing. They include: the GoodRelations ontology for details of products, which is widely supported by search engines (Ashraf et al. 2011); the schemas and ontology defined in the per-fee-link framework, mainly focused on payment information (Ruiz-Martínez et al. 2012); and the Payments Ontology defined by United Kingdom’s government for organizational spending information (Reynolds 2010). Another ontology is the Financial Industry Business Ontology (FIBO) for financial data. There also are other vocabularies that are being defined by WPIG for the different types of commercial transactions, web payments networks, credit cards, product offers and receipts (Sporny 2014a). As yet though, there is no comprehensive vocabulary that manages all the concepts needed during a purchase.The Payment Web API layer is responsible for defining an API that allows the development of different processes (negotiation of a payment instrument, making a payment, receiving a receipt) associated with the use of different payment instruments to make a purchase. This API has to be independent of the payment instrument and the use of a payment instrument will be made through a standard API defined in the Digital Wallet layer. Thus, any web application (merchants websites, social networks), through the web browser or any web agent can use different payment instruments in a uniform and well-established way. Furthermore, this API helps the consumer to manage her different payment instruments, which improves the consumer experience. In the PayFrameworks, the approach is to define special URLs representing payment-based products. In the WPIG, at this stage of its development, the Web Commerce API (Sporny 2014d) only offers a single operation to initiate the payment.The Digital Wallet layer has to offer a generic API, independent of the payment instrument, which provides the functions needed to perform the operations related to a payment using a particular payment instrument. This payment instrument may be a credit card, a crypto-currency, a mobile payment system, a cloud-based payment instrument, or others. This generic API should be defined to be able to support the new e-payment systems that are appearing and the use of new business models that appear. They are often based on the participation of financial entities, but now there are different partnerships among various entities, such as mobile phone carriers, financial institutions, payment processors, and social networks.With this kind of API, the developer must know how a particular payment instrument works and whether it is based on the use of hardware devices (e.g., smart cards). Another possibility is that the implementation is based on other technologies, such as Web Crypto (Sleevi and Watson 2014). Thus, the use of any payment instrument will occur in the same way, which improves usability. This API has to be defined for and invoked from a web browser or from a native mobile applications. Furthermore, for a payment instrument, there may be different implementations and the consumer will wish to use the most reliable one. This improves security and innovation, and reduces fraud, of course. For this purpose, there are some related APIs, such as those defined in SEMPER (Lacoste et al. 2000a), IOTP (Dulai et al. 2013) and PayFrameworks (Ruiz-Martínez et al. 2012), which is the most generic one. In WPIG, the digital wallet is viewed as the consumer payment agent, but at this moment, it has not been fully defined.The Payment Instrument layer comprises the set of payment instruments available to make a payment. In this layer, the consumer should have different kind of instruments supporting different models, such as credit cards or token-based payments. Currently, there are multiple payment systems that I noted earlier. And new systems will appear and offer Internet-based payment solutions that reduce the risk of fraud, and improve security and anonymity features. Each payment system offers different features, such as availability, security, anonymity, and usability.The Negotiation Mechanism layer is defined so that the consumer as payer and the merchant as payee can agree on the payment instrument to be used in the transaction and, optionally, the price or payment conditions. Through this layer, the consumer can choose the system that works better for the purchase she is going to perform. This process can also be delegated to intelligent agents. The information exchange can be coded in XML or in JSON, which is more lightweight. This coding facilitates the automation of the process based on the consumer preferences, which can also improve the consumer experience (Jaffe and Boyera 2015). In SEMPER and PayFrameworks, there are mechanisms to perform this negotiation. However, in the WPIG, this layer, or the functionality related to this issue, has not been defined so far.The Non-Repudiation Mechanisms layer is defined for transactions for which non-repudiation has to be guaranteed independently, whether the payment instrument provides some repudiation mechanism or not. Currently, there are different non-repudiation protocols. However, there is not a defined framework that can be applied to HTTP messages. For its definition, different standards related to electronic signatures (e-signatures) can be used, such as PKCS#7/CMS, and CAdES/XAdES. Thus, the WPIG is working on the definition of mechanisms that could be the building blocks for the construction of this layer, such as the secure messaging specification (Sporny 2014c) or the Signing HTTP Messages specification (Cavage and Sporny 2015). From these elements, the building of the non-repudiation evidence for the origin, recipient, or delivery will become possible.The Transport layer is the building block over all the exchanges of payment information are made. At this moment, the main transport protocol is HTTP. This protocol defines an error code, 402 Payment Required (Fielding and Reschke 2014), to indicate that the access to a resource requires a payment. However, this code is not being used and its semantic details are not yet defined. In mobile payment systems, the most convenient transport mechanism is NFC, although BLE and RFID are also being used (Ali et al. 2014).The Secure Transport layer is used to guarantee that the exchange of information is made in a secure way. For this purpose, the main mechanism available is the TLS Protocol Version 1.2 (Turner 2014). Another alternative is TCPCrypt (Bittau et al. 2010; Mazieres et al. 2014, 2015), which provides encryption in the Transport layer as an extension of TCP. Currently, its standardization is, being developed in the TCP Increased Security (TPCINC) Working Group.Now that we have presented the state-of-the-art, next we will present the different issues that have not been completely addressed. In the Web Application layer, the set of options to embed information in HTML5 are suitable and the main issues to address are related to security and trust. Standard mechanisms are needed to verify the identity of payer or payee at the same time as the minimum information is released, in order to preserve privacy. These mechanisms will help to reduce fraud. Regarding this issue, the WPIG is still working on the Identity Credentials specification (Sporny 2014b). Once a solution is adopted, the issue will be how to associate a level of trust with an entity or an application. In the social environment, the use of adaptive incentive mechanisms has been proposed (Noorian et al. 2014). The W3C Trust and Permissions Working Group is currently working on trust issues. Furthermore, to foster consumer trust, a legal framework is currently being developed (Vandezande 2013).In the Payment Information layer, when the vocabularies that are being defined by the WPIG are finished, there will be a comprehensive set of vocabularies available. The challenge will be the establishment of some mappings and relations between the concepts of the different vocabularies. In this layer, we cannot suppose that there will be only one vocabulary since there are some successful initiatives. An example is GoodRelations (Ashraf et al. 2011). The investments that have already been made will not be easily replaced with a new standard. This layer could be based on Linked Data Platform (LDP) (Speicher et al. 2015), and use the different mechanisms defined to query resources to include payment information.The Payment Web API, along with the Digital Wallet layer, is a key layer in order to support multiple kinds of payment transactions (negotiations, payments, refunds). However, at this moment, there are no standardized solutions. The main issue to consider is how to develop this API and which model to follow. This API can be developed with either the web browser, or browser extensions and plug-ins. It also can be defined as a “reduced API” that is used to invoke native applications in the system. All these solutions are technically viable but the approach that will follow will mainly depend on the position the different stakeholders adopt – mainly the web browser providers.Although there are some proposals for the Digital Wallet layer, they are focused on the payments and do not consider the rest of processes associated to the purchase, such as receipts. It also is fundamental that, relative to the definition of this API, all of the stakeholders ought to participate. As a result, this issue should be explored by the WPIG to provide a comprehensive solution that can be used seamlessly for the different types of payment instruments and for both web consumer agents and mobile applications.It is important to point out that the participation of all stakeholders will help to avoid more than one API for this purpose. This would cause the fragmentation of the web payment market and introduce more development costs. This has occurred with the support of hardware-based cryptography with the PKCS#11 and CSP APIs. Furthermore, for the wallet API, it is challenging to define the information that will support the auto-completion of payment information, which will improve the consumer experience. Other issues to address include the definition of mechanisms and policies to protect access to these elements from malicious applications or by web applications that are not trusted.In the Payment Instruments layer, there already are instruments that are being used. Now, the main issues to deal with are the definition of payment systems that support P2P payments and offline payments, the definition of payment tokens, and to take into account the different financial regulations (Vandezande 2013). It is also important that the definition of group-based payment systems support social commerce.In the Negotiation Mechanism layer, once the mechanism for how to represent payment information is defined (using information from the Payment Information layer), the main issues to be addressed will be how the negotiation of payment mechanisms is accomplished. This process needs to take into account consumer’s preferences, and the possible negotiation of the purchase conditions, such as the price. Moreover, the exchange of information will need to be made in the most efficient way. Some previous proposals were defined in XML, however, the use of JSON for these information exchanges may improve the efficiency of the process.In the Non-Repudiation Mechanism layer, the main issue to address is how, from the different elements defined for securing HTTP messages, we can generate non-repudiation evidence that will be usable for HTTP messages (Ruiz-Martínez et al. 2012). Apart from generating evidence, it is also important to address how to manage non-repudiation evidence when it must be stored long term (Vigil et al. 2015).For the Transport layer, HTTP Version 2.0 is being developed. It is intended to reduce latency by means of header field compression, allowing multiplexing as well as the prioritization of requests. This will make purchase transactions more efficient. Another challenge is the storage of digital evidence in a secure way that cannot be tampered with once it has been generated. As for NFC, RFID and BLE, the main challenge is to guarantee security when information exchanges occur in their presence. In addition, these technologies have to be loaded in any mobile device.Within the HTTP protocol, it is be important to define the use of the 402 Payment Required message (Fielding and Reschke 2014). Within this message, payment information can be included and used to launch the digital wallet to start the payment process. This mechanism has been extended in several proposals to support making payments in the Session Initiation Protocol (Hao et al. 2008; Fischl and Tschofenig 2007; Ruiz-Martínez and Marin-Lopez 2012).The security mechanisms in the Transport layer basically are composed of the TLS Protocol. The issues to be addressed have already been considered by the TLS Working Group for the new TLS Version 1.3 (Rescorla 2015, Turner 2014). This version has as its main challenges the improvement of its security by encrypting handshake information as much as possible, privacy via application traffic padding, and efficiency. This new version is intended to allow all of the operations made during a purchase to be performed in a more efficient and secure way.After our analysis of the issues that need to be addressed, we conclude that there is a long road to develop a web payment framework that will facilitate the use of multiple payment mechanisms in a way that facilitate interoperability and preserve security. There are still important issues to cover though, however, there also are initiatives that are trying to solve these issues. Thus, although support for the tasks and issues defined for the different layers is fundamental for the development of a comprehensive web payment framework – irrespective of whether the payment is mobile, the key layers that the stakeholders have to standardize are the web applications, the Payment Web API, payment information, digital wallets, and the security mechanisms for the Transport layer.The Digital Wallet layer is the cornerstone for the support of multiple payments, increased security, usability and innovation. The layers with Non-Repudiation Mechanisms are required to provide a comprehensive architecture but are not a priority now, and could be developed in a second phase. Table 1sums up the solutions and challenges to be addressed for the different layers.

@&#CONCLUSIONS@&#
The support of web payments is a continuing challenge that began when the web was developed and attracted the interest of companies. Since then, many technological solutions have been proposed. But often have failed because they or the components they needed were not mature enough. However, currently, there is a base of payment systems that can be use to make transactions on the web. Also available are new technological components (e-signatures, semantic web, security mechanisms, web standards) that are required for developing systems that support web payments. We are nearer to developing the components needed to facilitate the further development and use of web payments. With these components, we also can build a web payment framework. Its development is a cornerstone to facilitate the use of different e-payment instruments, and to support greater interoperability.In this article, we analyzed the different components that are required in a web payment framework, its functionality, and the different solutions that are available for its development. From this analysis, we can see that the first steps to provide a web payment framework have been taken and several solutions and projects are covering part of the functionality required in this kind of framework. This analysis also shows that there are still some issues to be overcome.The most important ones are the definition of a digital wallet API and improved security. This article has also noted that there currently are some starting specifications and projects such as the WPIG or the FIBO specification that can help to cover them. The results of these specifications and projects will be a key for the future development of web payments. Furthermore, taking into account that, for each layer, there are different solutions available, it is important to agree upon rationalized framework that facilities the interoperability of the different solutions and that allows the implementation of services and applications that make use of web payments.