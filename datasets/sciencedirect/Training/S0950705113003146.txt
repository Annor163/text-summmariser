@&#MAIN-TITLE@&#
Recommendations of closed consensus temporal patterns by group decision making

@&#HIGHLIGHTS@&#
A new model is proposed to find closed consensus temporal patterns.The experiments were performed by synthetic and real datasets.This showed the model’s computational efficiency, scalability, and effectiveness.

@&#KEYPHRASES@&#
Group decision making,Data mining,Recommendation systems,Consensus temporal pattern,Closed pattern,

@&#ABSTRACT@&#
The aggregation of individuals’ preferences into a consensus ranking is a decision support problem which has been widely used in various applications, such as decision support systems, voting systems, and recommendation systems. Especially when applying recommendation systems in business, customers ask for more suggestions about purchasing products or services because the tremendous amount of information available can be overwhelming. Therefore, we have to gather more preferences from recommenders and aggregate them to gain consensuses. For an example of preference ranking, C>A⩾D⩾B indicates C is favorable to A, A is somewhat favorable but not fully favorable to D, and ultimately D is somewhat favorable but not fully favorable to B, where > and ⩾ are comparators, and A, B, C, and D are items. This shows the ranking relationship between items. However, no studies, to the best of our knowledge, have ever developed a recommendation system to suggest a temporal relationship between items. That is, “item A could occur during the duration of item B” or “item C could occur before item D”. This type of recommendation can be applied to the reading order of books, course plans in colleges, or the order of taking medicine for patients. This study proposes a novel recommendation model to discover closed consensus temporal patterns, where closed means the patterns are only the maximum consensus sequences. Experiments using synthetic and real datasets showed the model’s computational efficiency, scalability, and effectiveness.

@&#INTRODUCTION@&#
In group decision making, aggregating individual preferences and obtaining consequences has become a significant and interesting issue, called the group ranking problem[22,23,29] (or multi-person decision making [6]). Generally, this type of decision cannot be made by any optimal approaches, requiring members’ opinions to subjectively determine a compromising result, which sometimes could be neither efficient nor effective in theory. Members, however, are requested to negotiate with one another to reach a consensus and believe the decision is (1) fair and open and (2) the best result for us at this time [55]. Afterwards they could achieve the consensus of which the term is defined as: (1) general agreement and (2) group solidarity in belief and sentiment [48].The group ranking problem has been examined for more than two centuries [15] and applied to many fields, such as recommendation systems [21,43,49,56], machine learning [28], sport tournaments [46], and decision support models [14,29]. In recommendation systems, we can consider more preference recommendations for items, such as books, CDs, and other products, through the group rating. For example, in the recommendation system of Amazon.com, five users rated four books, a, b, c, and d, based on their preferences as (1) c>a⩾d⩾b, (2) c⩾a⩾d>b, (3) a>c>d>b, (4) c>a>d>b, and (5) c>a>d⩾b, where > denotes the former is favorable to the latter, and ⩾ denotes the former is somewhat favorable but not fully favorable to the latter. As a result, we generally discern the reading order of the five books recommended by users is c first, and then is a, d, and finally b. As in the example, the goal is to aggregate each user’s ranking and ultimately produce a result. In this case, however, user (3) has a different opinion about a>c than the other users. Therefore, the task of integrating these preferences into a consensus solution is one of the major steps in this problem [58].To extract the aggregated information from individuals’ preferences, group ranking models are classified into two types, full and partial rankings. The former requires participators to appraise whole alternatives, whereas the latter allows for cases in which they can only compare with a subset of alternatives. The former representation proposed by Kemeny and Snell [36] was developed for complete and weak orderings. Bogart [9] extended the idea to include partial orderings. Both types have their advantages and are applied to different environments. For example, if we would like to acquire the complete orderings, the preferences for all alternatives must be ranked by participators. Moreover, conflict resolution takes place to obtain the final ranking of all alternatives if the preferences for some alternatives have different rankings. In the partial ranking, participators can naturally give their preferences for a subset of alternatives if they are not required to offer the rankings for the whole alternatives.Traditionally, the group ranking problem deals with preference among items, meaning which items are preferable to other items. However, the interest in the temporal relationships between items is of importance in real-life circumstances as well. We can give the temporal preferences of items; for example, “item a could occur during the duration of item b” or “item a could occur before item c”. The recommendation in temporal preferences can be availed in many cases. For book recommendations in Amazon, users can suggest the reading order of books. For a course plan in a college, students take suggestions about the study order of courses. The above examples can benefit users if recommenders can adequately present their opinions, and the results produced by the aggregation procedure are provided. Another example is the order of taking medicine for patients recommended by doctors. When a patient takes different kinds of medicines, their interactive influences have to be considered during treatment. Some medicines can be taken during the same period; however, some should be taken in disjointed periods. All of these examples demonstrate the issue of temporal recommendation is interesting and necessary in real-life circumstances. To the best of our knowledge, however, no studies have addressed this problem.Inspired by the idea of frequent itemset mining (FIM), Chen and Cheng [22] proposed a discovery model of maximum consensus sequences (MCS) for rankings, generating the maximum (or closed) sequences if their supports are larger than or equal to the user-specified threshold. Since the feature of FIM is adopted from the level-wise heuristic, generating candidates from length k−1 frequent itemsets and testing their supports to find length k frequent itemsets, the MCS model can arrive at the maximum agreement level-by-level and identify the conflict items. Differing from the traditional consensus approaches, i.e. distance-based and ad hoc models [15,25,57], their model is able to establish a simpler line to extend the consensus issue for application to other types of group decision making. Therefore, we follow the line of FIM to solve our research problem.To establish the temporal recommendation model, we first have to discuss whether we should consider the complete set of items in rankings or not. For example, a complete set needs to provide the relationships between a and b, b and c, c and d, and a and d and among a, b, and c, b, c, and d, and a, b, c, and d. However, with only the relationships between a, b, c, and d, we can obtain all the above relationships. In light of the description, we follow the idea of mining frequent closed itemsets[60] to uncover closed consensus temporal orderings (or called patterns); that is, a pattern I is closed if no superset of I exists with the same support. An example to describe non-closed and closed itemsets is as follows.•Non-closed itemsets: ab, ac, ad, bc, bd, cd, abc, abd, bcd, acd, abcd, bc, bf, cf, and bcf (assume that their supports are the same);Closed itemsets: abcd and bcf.This depicts the idea of the latter not only can avoid providing a huge amount of information to us, but does not lose all of them.Since no previous research has addressed the topic of recommendation systems for recommending temporal preferences with the closed idea, we first propose an algorithm to find this kind of pattern, closed consensus temporal patterns, in the data mining field. The algorithm is developed by extending the well-known generalized sequential pattern (GSP) algorithm, which uses a stage-by-stage process for generating frequent patterns [52]. To correspond with the consensus requirement in decision making, however, we modify some steps of the GSP algorithm and develop some special functions for our proposed patterns. Moreover, we tackle a conflict case if the temporal relationship between items suggested by users reaches a specified conflict threshold.This paper is organized as follows. Section 2 reviews related studies. Section 3 formally defines the problem. A new algorithm, closed consensus temporal mining (CCTM), is developed in Section 4. Section 5 describes experiments that evaluate the efficiency, scalability, and effectiveness of our algorithm. Finally, conclusions are presented in Section 6.

@&#CONCLUSIONS@&#
Most existing approaches focus on giving recommendations of ranking items based on group decisions. Unfortunately, no studies have ever addressed the topic of recommendation systems in temporal preferences between items with a closed idea. This work presents a novel mining approach to find closed consensus temporal patterns to broaden the spectrum for the application of recommendation systems.The CCTM algorithm is presented for discovering closed consensus temporal patterns. In addition, we tackle a conflict case in which the proportion of two time relations between items reaches a specified conflict threshold. An analysis of its performance by the three arguments, the diminishing coefficient, the minimum support threshold, and the average conflict ratio, is shown using synthetics datasets. In a scalability test, the run times of the CCTM algorithm grow somewhat exponentially with the number of users (sequences) and the average number of items per user (sequence). The algorithm, however, scales up linearly with increases in the average number of itemsets per user (sequence) and decreases in the conflict threshold. As a result, the performance of the CCTM algorithm is still serviceable and can be applied to discover patterns. A test involving a real dataset collected in this study showed the novel model can find interesting patterns, provide more concise information for users, and reduce the information overload problem. The result in the number of conflict patterns shows the conflict case is presented in the recommendation of temporal preferences. This reflects the paradox of voting in social choice.Closed consensus temporal pattern mining represents a new and promising research area in recommendation systems and data mining. The model can be extended by considering more temporal relationships, such as meet, during, and overlap, fuzzy temporal patterns, and other kinds of time-related knowledge. Finally, more real-life collected datasets in other types of recommended items can be used to test the proposed model’s effectiveness.