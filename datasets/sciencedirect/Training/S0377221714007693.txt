@&#MAIN-TITLE@&#
Lead time considerations for the multi-level capacitated lot-sizing problem

@&#HIGHLIGHTS@&#
Classical multi-level capacitated lot-sizing models deliver unrealistic results.New MIP formulations including the scheduling aspect.Two variants: batching and lot-streaming.New models enable generating feasible production plans.Comparison with classical models using well known problem instances.

@&#KEYPHRASES@&#
Production,Lot-sizing,Scheduling,Mixed integer programming,Synchronization,

@&#ABSTRACT@&#
The classical multi-level capacitated lot-sizing problem formulation is often not suitable to correctly capture resource requirements and precedence relations. Depending on lead time assumptions, either the model provides infeasible production plans or plans with costly needless inventory. We tackle this issue by explicitly modeling these two aspects and the synchronization of batches of products in the multi-level lot-sizing and scheduling formulation. Two models are presented; one considering batch production and the other one allowing lot-streaming. Comparisons with traditional models demonstrate the capability of the new approach in delivering more realistic results. The generated production plans are always feasible and cost savings of 30–40 percent compared to classical models are observed.

@&#INTRODUCTION@&#
The complexity of the product structure (bill-of-materials or BOM) of real-world cases has motivated researchers to decompose hierarchically the overall planning system into a set of more manageable subsystems. Production planning and scheduling (PPS) is one of the most prominent hierarchical systems and lies at the very heart of the performance of industrial enterprises. At the upper level of this two-level system, the tactical driver is to determine the amount of each product that must be produced in each time-period across several resources (sizing of lots). The production scheduling (sequencing of lots) is left to the lower operational level of planning. In many situations (especially if one of the production stages represent stationary bottlenecks—see Seeanner and Meyr, 2013) this approach might be sufficient. Nevertheless, as the top level has no detailed view about system capacity in terms of scheduling, there is no guarantee that scheduling constraints (e.g., precedence, capacity) are respected, and the production plans might be infeasible (Urrutia, Aggoune, and Dauzère-Pérès, 2012). In order to ensure that the plans generated at the upper-level can be scheduled afterward, the interdependencies between both levels should be incorporated in solution approaches, through top-down and bottom-up influences.Significant research has been conducted on the multi-level capacitated lot-sizing problem (MLCLSP) that fits the highest level of PPS. MLCLSP is considered a big time bucket model as several products can be produced in each macro period, and it is an extension of the single-level capacitated lot-sizing problem (CLSP) by incorporating the bill-of-material information (i.e. the relationship in terms of material requirements between different items to be produced) in the inventory balance constraints. Researchers have tried to consider more realistic classes of MLCLSP, including setup times, setup carryover and/or backlogging (cf. Tempelmeier and Buschkühl, 2009; Toledo et al., 2013; Wu et al., 2011). However, even today the majority of the models and algorithms proposed for MLCLSP rely on one of the following two assumptions: either lead times are neglected, thus allowing predecessors and successors to be produced in the same period; or lead times account for at least one period for each component, forcing the throughput time (in number of periods) of the finished products to be at least equal to the number of levels of the BOM.Buschkühl et al. (2010) report in their review that out of 16 papers dealing with metaheuristic solutions to MLCLSP, only one study (Berretta et al., 2005) considers lead time, while all others neglect it. The present work is motivated by the observation that the majority of the solutions published for well-known MLCLSP instances suffer from this assumption. Indeed, the zero lead time assumption leads to plans that are not implementable, as the lower-level scheduling problem is likely to be infeasible. This is more pronounced as the capacity tightens. On the other hand, positive lead time usually results in extensive amounts of work-in-process, which tends to increase with a larger number of levels in the BOM.There have been a few attempts for small-bucket approaches (in which the micro-period time structure only allows for one setup per period—see Seeanner and Meyr, 2013), but only few works include scheduling decisions within big-bucket multi-level lot-sizing (cf. Gómez Urrutia et al., 2012; Karimi-Nasab and Seyedhoseini, 2013; Stadtler, 2005).We study the impact of not considering scheduling decisions within MLCLSP and the limitations/flaws of well known previous MLCLSP formulations. We show, by means of studying the synchronization of the batches of products within MLCLSP, that most of the solutions reported in the literature obtained by standard MLCLSP with zero lead times are infeasible, and those that consider positive lead times entail significant work-in-process. To this end, two linear mixed-integer programming formulations are proposed, one restricted to batch production and the other one allowing lot-streaming. In each time period of both models, sizing and sequencing of production lots are simultaneously addressed in such a way that precedence relationships of products are respected. The batching formulation considers production taking place in batches such that units produced within each lot can only be processed as raw materials on the subsequent BOM level once the whole batch is completed. The lot-streaming or non-batching model relaxes this requirement, allowing components to be transformed further on as soon as they are released. In the latter case, modeling is tricky and it requires a rigorous argument to establish correctness. We present results establishing correctness of the two models and comparing them with respect to the produced cost.Both formulations are applied to benchmark instances and the differences to the classical model approaches11By classical model approaches we mean the multi-level lot sizing and scheduling problem without scheduling aspects as proposed by Billington et al. (1983) and described in Buschkühl et al. (2010).are analyzed. In contrast to MLCLSP with zero lead time the new model formulations are able to generate always feasible production plans. Comparing them with MLCLSP with positive lead time illustrates the potential cost savings of 30–40percent due to a reduced total throughput time and work-in-process, respectively.Our contributions are:•developing two integrated models of lot-sizing and scheduling for a multi-level production system based on MLCLSP,proving the correctness of both formulations and establishing a relationship between them,analyzing the drawbacks of the classical MLCLSP model with and without lead time using standard benchmark instances,quantifying the potential gains by using more detailed models for such a multi-stage production planning problem.In Section 2 we introduce MLCLSP and the major hurdles of its standard formulation proposed in the literature. In Section 3 two novel multi-level formulations are developed for the capacitated lot-sizing and scheduling problem, based on the assumptions for batching and lot-streaming production environments, respectively. We then address several possible extensions to these models. In Section 4 we then apply the new model formulation to standard benchmark instances and compare the results with those of the classical MLCLSP.Lot-sizing problems have been studied by researchers in different variations during the last decades. One of the initial works describing the trade-off between the setup and holding costs for a dynamic demand scenario is provided by Wagner and Within (1958). Introducing capacity limitations and considering several products simultaneously led to the capacitated lot-sizing problem (CLSP), which Bitran and Yanasse (1982) have shown to be NP-hard. In the case of positive setup times, Maes et al. (1991) proved that already the feasibility problem is NP-complete. MLCLSP dealt in this paper was first introduced by Billington et al. (1983) and it extended the lot-sizing models toward material requirements planning. Before this work, lot-sizing problems have mainly been applied at the final product level.A recent review about different model formulations and solution methods for MLCLSP can be found in Buschkühl et al. (2010). This review points out that it is necessary to consider manufacturing lead times, but many researchers neglect them. For example, 15 out 16 papers on metaheuristic solution methods for MLCLSP mentioned in that review neglect lead time (e.g. Berretta and Rodrigues, 2004; Pitakaso et al., 2006; Xie and Dong, 2002). The remaining work (Berretta et al., 2005) assumes that some items have no lead times and others have positive lead times of one period or more. More recently, also Wu et al. (2011) and Wu, Shi, Geunes and Akartunali (2012) present MIP models for solving capacitated multi-level lot-sizing problems with setup times and backlogging, considering null lead times. Clark et al. (2011) stress the need to incorporate more specificities of production environments in lot-sizing models, including the synchronization of resources.The present paper deals with the manufacturing lead time consideration for MLCLSP. This involves also scheduling decisions. The classical MLCLSP problem is considered to be a big-bucket model, as the planning horizon is divided into a small number of long time periods allowing for multiple products/setups per time bucket. On the other hand, the class of small-bucket models try to capture both lot-sizing and scheduling decisions, as at most one setup might be performed in each period and, consequently, a complete production sequence is generated by default, Drexl and Kimms (1997). Here, the planning horizon is divided into many short periods. Nevertheless, Wolsey (2002) provides a comprehensive study and classification scheme for different small- and big-bucket models, and shows that the LP relaxation of small-bucket models usually delivers very weak lower bounds. Only with customized reformulations and valid inequalities added to the problem an improvement of the lower bound is possible. In contrast, most big-bucket models (MLCLSP is classified as such) provide much better lower bounds (see Almeder and Almada-Lobo, 2011).A few researchers have tried to incorporate the multi-level structure and the exact timing issues into small-bucket models. Stadtler (2011) presents a proportional lot-sizing and scheduling problem formulation for a multi-level problem. In order to allow synchronization of the different levels within a period, the problem is restricted to a single capacitated resource, i.e., it is not possible to produce different items simultaneously on different machines. Meyr (2004) and Seeanner and Meyr (2013) use a general lot-sizing and scheduling problem formulation (GLSP) to model a multi-level system with possible simultaneous production of predecessor and successor items. The GLSP is based on time buckets of variable length (usually determined by the size of a lot). In order to allow synchronization, all machines must use the same period structure, which might lead to unproductive idle times. Furthermore, it is not possible to enforce the finishing of a production lot before the production of a successor starts.For the class of big-bucket lot-sizing models, there are extensions to incorporate scheduling decisions. Haase (1996),Gupta and Magnusson (2005), and Almada-Lobo et al. (2008) developed extensions for the single-level capacitated lot-sizing problem to deal with sequence dependent setups. In what concerns big-bucket models for the multi-level setting, we are only aware of one paper (Fandel and Stammen-Hegene, 2006) that tackles this problem. The authors model a similar problem as our here, but in contrast to our approach, the authors develop a non-linear formulation. The complexity of that formulation prohibits to solve even small instances. To the best of our knowledge, efficient solution methodologies for their model are not known as of this date. The review by Zhu and Wilhelm (2006) analyzes the research on the intersection of lot-sizing and scheduling from the scheduling point of view.Another subject related to this work is the problem of synchronizing the use of common resources. Tempelmeier and Buschkühl (2008) describe a problem where a common setup operator has to perform the setup operations on different machines. Hence, it is necessary to ensure that there are no two setup operations at the same time. In Almeder and Almada-Lobo (2011) a model describing the synchronization of a secondary resource used in a parallel machine environment is developed.

@&#CONCLUSIONS@&#
Our extensive computational study clearly indicates that the solutions obtained by MLCLSP are either infeasible or lead to excessive work-in-process (from 15 percent to 60 percent increase in overall cost). The need for synchronization is thus clearly established. This work is the first step in such a direction to develop a synchronization mechanism in a big-bucket lot-sizing framework. We present here two extensions of MLCLSP representing the two extreme cases of batching (i.e. a successor item can only be produced if the full batches of the predecessor items are finished) and lot-streaming (i.e. the successor item can be produced simultaneously with its predecessor items as long as it uses a different resource). It is straightforward to introduce any possible lead time in between these two extremes if technical restrictions are demanding it.While commercial solvers are capable of solving small to mid size instances and many larger instances, large-scale cases need further investigations. Future work should be devoted to develop tighter model formulations and MIP-based heuristic solution approaches.Supplementary material associated with this article can be found, in the online version, at 10.1016/j.ejor.2014.09.030.