@&#MAIN-TITLE@&#
A differential evolution based energy trajectory planner for artificial limb control using motor imagery EEG signal

@&#HIGHLIGHTS@&#
Classification of finger-, elbow- and shoulder-movement along with left- and right-hand movement.Classified outputs used to move a simulated robot arm in 3D space towards a known target.Design of an energy optimal trajectory planner, based on differential evolution to decide the optimal path for the robot arm to move towards the target.The average training classification accuracy obtained is 76.88%.The success rate of the simulated robot arm reaching the target is 85%.

@&#KEYPHRASES@&#
Brain–Computer Interfacing,Electroencephalography,Energy efficient trajectory planning,Differential Evolution,Wavelet transforms,Naïve Bayesian classifier,

@&#ABSTRACT@&#
Current research on neuro-prosthetics is aimed at designing several computational models and techniques to trigger the neuro-motor rehabilitative aids. Researchers are taking keen interest to accurately classify the stimulated electroencephalography (EEG) signals to interpret motor imagery tasks. In this paper we aim to classify the finger-, elbow- and shoulder-classification along with left- and right-hand classification to move a simulated robot arm in 3D space towards a target of known location. The contribution of the paper lies in the design of an energy optimal trajectory planner, based on differential evolution, which would decide the optimal path for the robot arm to move towards the target based on the classifier output. Each different set of movements consists of a trajectory planner which is activated by the classifier output. The energy distribution of wavelet coefficients of the incoming EEG signals is used as features to be used as inputs in a naïve Bayesian classifier to discriminate among the different mental tasks. The average training classification accuracy obtained is 76.88% and the success rate of the simulated robot arm reaching the target is 85%.

@&#INTRODUCTION@&#
Rehabilitative Engineering has travelled a great distance from mechanical prosthetics to neural prosthetics in the last two decades. Such neuroprosthetic aids aim at improving the living standard of people suffering from motor, sensory and cognitive failures by providing rehabilitative solutions for the same [1–3]. In this regard, Brain–Computer Interfacing (BCI) [3–5] provides the technology to translate the brain signals acquired from the brain to drive various assistive and rehabilitative devices. Among various available modalities to measure brain signals, Electroencephalography (EEG) is widely used among researchers because it is non-invasive, cost effective, portable, and has a good temporal resolution which can be easily used to generate control signals for real world application [5,6]. Various researchers have employed the EEG based BCI technology to drive a word processor [7–9], speech synthesizer [10,11], keyboard [12] and cursor simulators [13,14], virtual reality [15,16] and various robotic devices [17–19].Movement related BCIs have been extensively researched in the past few decades with the aim to provide assistive and rehabilitative solutions to the clinical population suffering from neuro-muscular disorders like Amyotropic Lateral Sclerosis (ALS), Spinal Injury, Paralysis and amputation [20–22]. Movement related signals are characterized by specific waveforms at the mu- (8–12Hz) and central beta- (16–24Hz) bands, called Event-related Desynchronization and Synchronization (ERD/S), respectively [23,24]. The recognition of these waveforms leads to the successful classification of various motor imagery signals.In this study, we have used left-right and finger-elbow-shoulder movement EEG signals to generate the control signals to drive a simulation of an external (prosthetic) device. For this purpose, wavelet transforms [25,26] have been used to extract the relevant information from the EEG signals and the feature vectors comprises of their energy distribution. The features are used as inputs to the Naïve Bayesian classifier [27,28] whose outputs are used to move the simulated robot arm. In this study, we have proposed the use of an Energy Efficient Technique [29] based on Differential Evolution [30,31] to plan the optimal trajectory path of a simulated arm in 3D space. The subject would send control signals from the given list of movements (left finger, left elbow, left shoulder, right finger, right elbow and right shoulder) and the energy efficient technique would plan the optimal trajectory path for the simulated arm towards the target. While moving towards an object in space, a number of different paths are available to us to reach that object. We have devised a novel approach using both the quantized classifier output and the energy efficient technique to move the robot arm towards the target using an optimum path (the path which requires the minimum energy). This approach finds preference in the sense that in real life implementations an energy optimal path is more relevant to control an artificial limb towards targets present at fixed positions.The rest of the papers are organized as follows: In Section 2 we have our proposed algorithm developed in this study to control an artificial arm. Section 3 describes the experimental implementation of the developed algorithm followed by a discussion and comparison of the results obtained in Section 4. The concluding remarks and future directions are discussed in Section 5.For our study, we have designed a robot arm with two links and two movable sections each having one degree of freedom to mimic the movement of a 2DOF robot arm in real world. Their movements are described by angles θ and ϕ which are defined with respect to the co-ordinate system as shown in Fig. 1. The first section of length L1 moves in the vertical plane as described by θ measured from the +ve z-axis. The vertical plane in which it moves is displaced from the x-axis by an angle α. The second section of length L2 moves in the horizontal plane as described by ϕ measured from the +ve x-axis. The arm ends in a gripper whose co-ordinates are given by(1)x=L1×sin(θ)×cos(α)+L2×cos(ϕ)y=L1×sin(θ)×sin(α)+L2×cos(ϕ)z=L1×cos(θ)Here for our analysis we take, without loss of generality, α=90°, so that the upper arm is entirely confined in the Y–Z plane.Here we have developed an energy efficient method of fitting a smooth trajectory to the set of via-points (points between two given location) to move the robot arm towards a target from the initial position. Let us consider that we have n+1via-points (including initial and final points) that are obtained from EEG control. We fit smooth cubic polynomials for θ and ϕ as functions of time in between each of these points as shown below:(2)θ=a0+a1t+a2t2+a3t3ϕ=b0+b1t+b2t2+b3t3where the coefficients are determined partly by a set of boundary conditions and partly by energy minimization criterion.The boundary conditions for the polynomial between the (i−1)th and ith via-points are as follows:(3)Fori=1,2,…,n;θ=θi,ϕ=ϕi,att=0θi¯=θi−θi−1,ϕi¯=ϕi−ϕi−1,att=Twhere T is the time to move from the (i−1)th to the ith via-point, andθ¯,ϕi¯are the first time derivatives of θ and ϕ, respectively. Condition of continuity of angular displacements is of course necessary, whereas condition of continuity of angular velocity at every via-point avoids jerky movement of the arm. At the initial point angular velocities are zero. Using the boundary conditions, we get the coefficients as:(4)Fori=1,2,…,n;a0=θi,b0=ϕi,a1=θi¯,b1=ϕi¯,a2=1/T2(θi+1−θi−θi¯⋅T−a3⋅T3),b2=1/T2(ϕi+1−ϕi−ϕi¯⋅T−b3⋅T3)Evidently the above conditions give three equations for four unknown coefficients, and the final equation is provided by the energy term. At any point the mechanical energy of the arm will be given by the summation of kinetic and potential energies of each of the arm sections as shown below:(5)E=∑(K.E.i+P.E.i)whereK.E.i=12mivi2+12ICMiandP.E.i=mi.g.hihere ωiis angular velocity of ith link, i.e.ω1=θ¯andω2=ϕ¯.vi=translational velocity=x¯i2+y¯i2+z¯i2, wherexi¯,yi¯,zi¯are the first time derivatives of the co-ordinate of the centre of mass (CM) of the ith link.ICMi: moment of inertia of the ith link about its CM. mi: mass of the ith link. hi: height of the ith link from the ground, which is taken as the reference for zero potential energy.Upon calculations, the total mechanical energy of the system is found to be equal to(6)E=12m2L12⋅θ¯2+16(m1L12⋅θ¯2+m2L22⋅θ¯2)+12m2L1L2cos(θ)cos(ϕ)⋅θ¯⋅ϕ¯+gH(m1+m2)−gL112m1+m2cos(θ)In this equation we put the expressions for θ, ϕ andθ¯,ϕ¯; and replace a2, b2 in terms of a3, b3 so that E is now a function of time, and a3, b3. The energy integrated over a single time interval will give a measure of the total energy consumed and this is a function of a3 and b3, using recursive adaptive Simpson quadrature technique. Thus we can find an optimum value of the remaining coefficient by minimizing FK, where(7)FK(a3,b3)=∫0TE⋅dtThis completes description of the entire trajectory subject to smooth motion and minimization of energy consumed [32,33].Like any other evolutionary algorithm, DE starts with a population of NP D-dimensional parameter vectors representing the candidate solutions. We shall denote subsequent generations in DE by G=0, 1, …, Gmax. We represent the ith vector of the population at the current generation asX→i,G=x1,i,G,x2,i,G,…,xD,i,G.The initial population (at G=0) should cover the entire search space as much as possible by uniformly randomizing individuals within the search space constrained by the prescribed minimum and maximum bounds:(8)X→min=x1,min,x2,min,...,xD,min,andX→max=x1,max,x2,max,...,xD,maxHence we may initialize the jth component of the ith vector as(9)xj,i,0=xj,min+randi,j(0,1).(xj,max−xj,min)where randi,j(0, 1) is a uniformly distributed random number lying between 0 and 1 and is instantiated independently for each component of the ith vector. The following steps are taken next: mutation, crossover, and selection (in that order), which are explained in the following subsections.After initialization, DE creates a donor vectorV→i,Gcorresponding to each population memberX→i,Gin the current generation through mutation using arithmetic recombination. It is the method of creation of donor vector that differentiates one DE scheme from another. A popular mutation strategy “DE/rand/1” [31] has been adopted in our paper, which is defined as:(10)V→i,G=X→r1i,G+F(X→r1i,G−X→r3i,G)The indicesr1i,r2iandr3iare mutually exclusive integers randomly chosen from the range [1,NP], and all are different from the base index i. The scaling factor F is a positive control parameter for scaling the difference vectors.X→best,Gis the vector with the best fitness in the population at generation G[30,31].To increase the potential diversity of the population, a crossover operation comes into play after generating the donor vector through mutation. The donor vector exchanges its components with the target vectorX→i,Gunder this operation to form the trial vectorU→i,G=u1,i,G,u2,i,G,...,uD,i,G. In our paper we consider binomial crossover where the donor vector exchanges its components with the target vectorX→i,Gfor each of the D variables whenever a randomly picked number between 0 and 1 is less than or equal to the Cr value. In this case, the number of parameters inherited from the donor has a (nearly) binomial distribution. The scheme may be outlined as:(11)uj,i,G=vj,i,G,ifrandi,j(0,1)≤Crorj=jrandxj,i,G,otherwisewhere randi,j(0, 1)∈[0, 1] is a uniformly distributed random number lying between 0 and 1and is instantiated independently for each jth component of the ith vector. jrand∈[1, 2, ..., D] is a randomly chosen index, which ensures thatU→i,Ggets at least one component fromV→i,G.To keep the population size constant over subsequent generations, the next step of the algorithm calls for selection to determine whether the target or the trial vector survives to the next generation i.e., at G=G+1. The selection operation is described as follows:(12)uj,i,G=U→i,G,iff(U→i,G)≤f(X→i,G)X→i,G,iff(U→i,G)>f(X→i,G)wheref(X→)is the function to be minimized. So if the new trial vector yields an equal or lower value of the objective function, it replaces the corresponding target vector in the next generation; otherwise the target is retained in the population. Hence the population either gets better (with respect to the minimization of the objective function) or remains the same in fitness status, but never deteriorates.The above three processes are repeated till maximum number of generations is reached. The parameters selection in the DE algorithm for this study are as follows: scaling factor=10, population size=50, crossover ratio=0.8, maximum number of generations=10,000, stopping criteria=20 number of same fitness.The complete scheme (Fig. 2) is summarized as follows: First, we construct the feature vector from the acquired EEG signals from C3 and C4 electrode location using the energy coefficient of the level 3 and level 4 wavelet detail coefficient. The features are then fed to the classifiers to yield the respective output: Right Finger (RF), Right Elbow (RE), Right Shoulder (RS), Left Finger (LF), Left Elbow (LE), and Left Shoulder (RS). The classifier outputs and their corresponding commands to the simulated robot arm are given in Table 1. The classifiers are trained using the previous EEG signals of the given subject. The classifier output is fed as control signals to the local trajectory planner (i.e., trajectory planners for each control signal) which simulates the movement of the robot arm based on the proposed energy efficient algorithm discussed in the previous section. The trajectory planner plans the most energy efficient path based on the output of the classifiers and provides a feedback to the subject about the same. The subject would decide the next movement based on the feedback and the process would continue until the goal is reached. Also, the local trajectory planner for each state would interpolate the position of each link of the robot arm (w.r.t. target position) in such a manner so as to minimize the energy consumption.The EEG signal has been recorded using a NeuroWin amplifier comprising of 19 channel (Fp1, Fp2, F8, F4, Fz, F3, F7, T4, C4, Cz, C3, T5, T6, P4, Pz, P3, T7, O2, O1) Ag/AgCl electrodes at a sampling frequency of 250Hz. The left ear and FPz location is selected as the point for reference and ground electrode. The sensitivity of the amplifier is set to 100μV and an additional 50Hz notch filter had been utilized to suppress the line noise.The experiment is so designed to make the subject move the instructed joint (finger/elbow/shoulder) of any one of the hand (left/right) in a self-paced manner. Six females and seven males (right handed) in the age group of 25±5 years were employed as subjects in our experiment. The subjects were made to fill up a consent form and a simple introduction about the research work and stages of the experiment were given.The training experiment consists of 3 sessions with 60 trials each conducted on the same day with fifteen minutes break in between. The subjects imagine moving a specific joint (either Elbow, Finger, Shoulder movement) of either right or left hand based on the instructions given on screen. In each trial, a blank screen was displayed in the first 2s. In the 2nd second a fixation cross ‘+’ was displayed on the screen which indicates the beginning of the trial. From the 3rd second onwards, the instructions are displayed on screen. At that instance, the subject moves their respective joint-limb until the display is blank again. The timing scheme of the visual cue is given below in Fig. 3.During the online experimentation, a target appears randomly on screen and based on its current location, the subject moves the robot arm based on the motor imagery control commands shown in Table 1. Here, on each 500 milliseconds of incoming signal, a feature vector is constructed which is fed to the trained classifier to yield the control commands based on Table 1. Thus, 125 sample-points are accumulated at each update of half a second. These control commands activates the local trajectory planner to move the robot arm towards the target.Researchers have verified that movement related signals (in terms of planning, action or imagination) originates from the sensorimotor area, pre-motor cortex and primary motor cortex and EEG captures the movement related signals from their adjoining locations in the scalp, which are centrally located in the scalp [33]. Signals from electrodes C3 and C4 contains the most information related to left and right hand movement [5] and thus are selected in this study to identify the different movements. Another reason for selecting two electrodes instead of all nineteen of them is to reduce the computational time required by the processor to detect the right output. The signals from the selected electrode are filtered using Common Average Reference [5], followed by band-pass filtering using an elliptical filter (order 14) between 8 and 25Hz, to reduce the effect of neighbouring electrodes and environmental noises, and movement related information are mostly obtained in this bandwidth.In this study, we have used wavelet transforms for feature extraction the given EEG data. Wavelet Transform (WT) has its obvious advantages over techniques based on time-domain or frequency-domain as it provides localized frequency related information at a given time. Further details on wavelet transforms are found in [25,26]. In our study, we have selected the Daubechies mother wavelet of order 4 (db4) to decompose the EEG data. The percentage energy distribution [35] at third (D3) and fourth (D4) level of decomposition are selected to prepare the feature vector because the motor imagery signals are predominant at 8–12Hz and 16–24Hz. The final size of the feature vector during both offline training and online testing is 2 (electrodes)×2 (energy components from D3 and D4 components).The feature vectors thus constructed are fed to the classifier to classify among the various movements. Two levels of classifiers, as shown in Fig. 4are used in this study based on a tree formation: first, the left, right hand movements or no movements (Classifier 1) are classified followed by the finger, elbow and shoulder classification (Classifier 2 and 3) for each limb. The classification in both level has been done using the one-versus-rest (OVR) scheme [36], where one movement is classified against rest of the movement. In the offline training phase, Naïve Bayesian (NB), Support Vector Machine (SVM), Radial Basis Function Support Vector Machine (RSVM), Multilayer Perceptron Support Vector Machine (MSVM), k-Nearest Neighbour (kNN), and Linear Discriminant Analysis (LDA) [30] are trained for motor imagery state detection and the best performing classifier among these are used in the online experimentation of moving the robot arm.The performance of the classifier is compared with various other state-of-the-art classifiers in Section 4 and its performance is found to be competitive.

@&#CONCLUSIONS@&#
