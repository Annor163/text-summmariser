@&#MAIN-TITLE@&#
Li-function activated ZNN with finite-time convergence applied to redundant-manipulator kinematic control via time-varying Jacobian matrix pseudoinversion

@&#HIGHLIGHTS@&#
The LFAZNN model is developed for time-varying Jacobian matrix pseudoinversion.This paper presents the theoretical result about the LFAZNN finite-time convergence.This paper further shows the LFAZNN application to robots’ kinematic control.Simulation results demonstrate well the effectiveness of the LFAZNN model.

@&#KEYPHRASES@&#
Li-function activated ZNN,Finite-time convergence,Redundant manipulator,Kinematic control,Time-varying matrix pseudoinversion,

@&#ABSTRACT@&#
This paper presents and investigates the application of Zhang neural network (ZNN) activated by Li function to kinematic control of redundant robot manipulators via time-varying Jacobian matrix pseudoinversion. That is, by using Li activation function and by computing the time-varying pseudoinverse of the Jacobian matrix (of the robot manipulator), the resultant ZNN model is applied to redundant-manipulator kinematic control. Note that there are nine novelties and differences of ZNN from the conventional gradient neural network in the research methodology. More importantly, such a Li-function activated ZNN (LFAZNN) model has the property of finite-time convergence (showing its feasibility to redundant-manipulator kinematic control). Simulation results based on a four-link planar robot manipulator and a PA10 robot manipulator further demonstrate the effectiveness of the presented LFAZNN model, as well as show the LFAZNN application prospect.

@&#INTRODUCTION@&#
Recently, robotics have played more and more significant role in scientific researches and engineering applications [1–10]. Being a sub-topic of robotics, the redundancy-resolution problem (or say, inverse-kinematics problem), which is related to the kinematic control of redundant robot manipulators, has attracted the extensive attention of many researchers [11–16]. The general description is that, given the desired Cartesian path rd(t)∈Rmof the end effector, the corresponding joint trajectory θ(t)∈Rnneeds to be obtained. Note that, for a redundant robot manipulator, it possesses more degrees of freedom (DOFs) than necessary to perform a given end-effector primary task (in other words, n>m) [1–4]. The extra DOFs allow the existence of infinite number of feasible solutions to the redundancy-resolution problem. This can be utilized to determine the best joint-velocity/joint-acceleration vector (for a given end-effector velocity/acceleration vector), which corresponds to a specified optimality criterion [15,16]. Thus, many studies have been reported on kinematic control of redundant robot manipulators [11–19].The pseudoinverse-based (P-based) method is the conventional solution to the redundancy-resolution problem; i.e., one minimum-norm particular solution plus a homogeneous solution is available. Note that the P-based method is depicted in an analytical solution and can readily solve the redundancy-resolution problem. This characteristic has made the research and application of such a P-based method popular in the past decades [3,4,11–13,15–19]. For example, Kemény [17] developed an algorithm which finds the solution with a constrained optimization, using a parameterized form of the kinematic equation's null space. In another study, Tchoń [18] presented optimal extended Jacobian inverse-kinematics algorithms for robot manipulators. Differing from these studies, Machado et al. [13] investigated a multi-objective approach for motion planning of redundant robot manipulators. Their approach combined the closed-loop pseudoinverse method with a multi-objective genetic algorithm.Among the P-based techniques for robotic redundancy resolution, the minimum velocity norm (MVN) scheme, which aims at minimizing the sum of squares of joint velocities, has been widely adopted by researchers for kinematic control of redundant robot manipulators [1–4,15,16]. In addition, to guarantee the precision of the end-effector positioning error, the feedback can be added to such a P-based MVN scheme. Thus, the P-based MVN scheme with feedback (being a closed-loop scheme) is formulated as(1)θ˙=J†(r˙d+κ(rd−f(θ))),whereθ˙is the joint-velocity vector, J†∈Rn×mdenotes the pseudoinverse of the Jacobian matrix J∈Rm×n, andr˙ddenotes the time derivative of the desired end-effector path rd. In addition, κ>0∈R is the feedback gain, and f(·) is a differentiable nonlinear mapping [1–4,15,16] with known structure and parameters for a given robot manipulator. The solution computed by the P-based MVN scheme (1) is the optimal solution to the following problem [15,16]:minimize{θ˙Tθ˙}subject toJθ˙=r˙d+κ(rd−f(θ)),where the superscript ‘T’ denotes the matrix or vector transposition. Note that, as for the equality constraint in the above optimization problem, it can be obtained by defining the error as ϵ=rd−f(θ) and by exploiting the neural-dynamics approach presented in Appendix A. Compared with the widely-used constraint (i.e.,Jθ˙=r˙d) in the existing literature [1,2,15,16], a prominent advantage of the feedback-added constraint is that it guarantees the error ϵ with no drifting/diverging happened. This also means that there does not exist the error drift/divergence phenomenon in the P-based MVN scheme (1). Besides, one of the main reasons for the popularity of the two norm as an optimality criterion, is the fact that the related optimization problems yield closed-form analytical expressions. Thus, in many robotic applications, the two-norm optimality criterion is utilized, more because of its mathematical tractability than physical desirability [15,16]. On the basis of the above considerations, the P-based MVN scheme (1) for redundant-manipulator kinematic control is the focus of this paper.In recent years, as a branch of artificial intelligence, artificial neural networks (ANNs) have attracted considerable attention as candidates for novel computational systems [1,2,20–24]. Being a special type of ANNs, recurrent neural networks (RNNs), which originated from the research of Hopfield neural network [25], have been developed and investigated for solving a wide variety of mathematical problems arising in numerous fields of science and engineering [1,2,20,21,26–31]. Note that, compared with conventional numerical algorithms, the neural-dynamics approach based on RNNs has several potential advantages in real-time applications, e.g., high-speed parallel-processing, distributed-storage, and adaptive self-learning natures. Therefore, such an approach is generally taken into account as a powerful alternative to online computation and optimization. Specifical for robotic redundancy resolution, various RNN models have been developed, exploited and investigated [1,2,32–37]. For example, Wang et al. [32] developed a Lagrangian network for kinematic control of redundant robot manipulators. Differing from such a neural network, Hou et al. [36] presented a dual neural network for coordination of redundant robots (with multicriteria optimization). Besides, in [37], a primal-dual neural network (based on linear variational inequality) was investigated for redundant-manipulator kinematic control. In summary, by combining the redundancy-resolution scheme and the corresponding RNN solver, the purpose of kinematic control of redundant robot manipulator is thus achieved.As for the P-based MVN scheme (1), the problem of time-varying matrix pseudoinversion is involved in the scheme formulation. Thus, it is necessary to develop an approach for online solution of time-varying matrix pseudoinverse so as to achieve the purpose of redundant-manipulator kinematic control. In the existing literature, lots of algorithms have been proposed and investigated for matrix pseudoinversion [38–41]. Especially, the gradient-based RNNs (or say, gradient neural networks, GNNs) are proposed and investigated in [38,39]. Note that these methods use the Frobenius norm of the error matrix as the performance criterion and design a neural network evolving along the negative gradient-descent direction to make the error norm decrease to zero with time in the time-invariant case. However, for the time-varying case, the Frobenius norm of the error matrix can not converge to zero even after infinitely long time. In other words, the GNNs are less effective and efficient for time-varying matrix pseudoinversion. Since the Jacobian matrix J of robot manipulator is time varying during the motion-task execution, it is thus less applicable for GNNs to kinematic control of redundant robot manipulators.Aiming at online time-varying matrix pseudoinversion, a special type of RNNs termed Zhang neural network (ZNN) has been proposed and investigated [42,43]. Note that there are nine novelties and differences of ZNN from GNN in the research methodology for time-varying problems solving (and please refer to Appendix A for more details) [21,27,28]. Compared with GNNs, a prominent advantage of the ZNN solution lies in that the lagging error diminishes to zero exponentially as time t evolves. In addition, the ZNN design is based on a matrix-valued indefinite error function and an exponent-type formula (i.e., the ZNN design formula), which makes every entry/element of the error function exponentially converge to zero. By making good use of the time-derivative information of the time-varying coefficient, the resultant ZNN models can effectively avoid the lagging errors generated by GNNs and can exponentially converge to the theoretical pseudoinverse of time-varying matrix (e.g., the Jacobian matrix J involved in this paper) [42]. Besides, it has been realized that different choices of the activation function lead to different performances for ZNN models for time-varying matrix pseudoinversion [42,43]. Differing from the activation functions investigated in [21,42], a new activation function, which is called Li activation function [44], is presented and exploited in this paper for the ZNN model to achieve the finite-time convergence.On the basis of the successful work [21,42,44], this paper presents and investigates the application of ZNN activated by Li function to kinematic control of redundant robot manipulators via time-varying Jacobian matrix pseudoinversion. That is, by using Li activation function and by computing the time-varying pseudoinverse of the Jacobian matrix (of the robot manipulator), the resultant ZNN model is applied to redundant-manipulator kinematic control. Note that such a Li-function activated ZNN (LFAZNN) model has the property of finite-time convergence (showing its feasibility to redundant-manipulator kinematic control). Simulation results based on a four-link planar robot manipulator and a PA10 robot manipulator are illustrated to demonstrate the effectiveness of the presented LFAZNN model, as well as show the LFAZNN application prospect.The rest of this paper is organized into four sections. In Section ‘Time-varying Jacobian matrix pseudoinversion’, the general nonlinear ZNN model is presented for time-varying Jacobian matrix pseudoinversion. Section ‘Li-function activated ZNN model’ presents the LFAZNN model, together with the theoretical result about the finite-time convergence of such an LFAZNN model. In Section ‘LFAZNN applications to different-type robot manipulators’, simulation results are illustrated, when the presented LFAZNN model is applied to different robot manipulators. Section ‘Concluding remarks’ concludes this paper with final remarks. Before ending this section, it is worth summarizing and listing the main contributions of this paper as follows.•This paper presents a Li-function activated ZNN (LFAZNN) model for time-varying Jacobian matrix pseudoinversion involved in robotic redundancy resolution. Note that Li activation function is quite different from the activation functions investigated in the previous work [21,27].In this paper, theoretical result about the finite-time convergence of the presented LFAZNN model (including the upper bound of the convergence time) is given. This is the first time to provide the finite-time exact solution to time-varying Jacobian matrix pseudoinverse arising in robotic redundancy resolution.This paper shows the application of the LFAZNN model to kinematic control of redundant robot manipulators. Note that this work is very novel as it provides results differing from those of pure ZNN research community (i.e., the new area and utility of ZNN are discovered).This paper presents an effective kinematic-control method [i.e., the P-based MVN scheme (1) aided with the LFAZNN model] for redundant robot manipulators. With the feedback added, such a method does not encounter the error drift/divergence phenomenon.Simulation results based on different types of redundant robot manipulators demonstrate well the effectiveness of the presented kinematic-control method, as well as show the LFAZNN application prospect.In this section, based on the previous work [21,42,44], the general nonlinear ZNN model is presented and investigated for time-varying Jacobian matrix pseudoinversion.As for the full-rank time-varying Jacobian matrix J(t)∈Rm×n(with m<n), its time-varying pseudoinverse J†(t)∈Rn×msatisfies the matrix equation J†(t)J(t)JT(t)=JT(t) [40]. Thus, in this paper, the following problem formulation of time-varying Jacobian matrix pseudoinversion is considered:(2)X(t)J(t)JT(t)−JT(t)=0∈Rn×m,where X(t)∈Rn×mis the time-varying unknown matrix to be obtained. To lay a basis for further discussion, J(t) is assumed to be of full-rank at any time instant t∈[0, ∞) in this paper. In other words, there does not exist the configuration singularity for the redundant robot manipulator during the motion-task execution.To monitor the solving process of the problem (2), the following matrix-valued indefinite error function is defined:(3)E(t)=X(t)J(t)JT(t)−JT(t)∈Rn×m.Then, based on the ZNN design methodology presented in Appendix A, from [42], the generalized nonlinear ZNN model for time-varying Jacobian matrix pseudoinversion is given as follows:(4)X˙(t)W(t)=−γF(X(t)W(t)−A(t))−X(t)U(t)+B(t),where X(t), starting from any initial condition X(0)∈Rn×m, denotes the neural state matrix corresponding to the time-varying theoretical pseudoinverse of J(t) [i.e., J†(t)]. In addition, coefficient matrices W(t)=J(t)JT(t),U(t)=J˙(t)JT(t)+J(t)J˙T(t), A(t)=JT(t), andB(t)=J˙T(t). Furthermore,X˙(t)andJ˙(t)denote the time derivatives of X(t) and J(t), respectively. Besides, design parameter γ>0∈R is used to scale the convergence rate of ZNN model (4) (which should be set as large as the hardware would permit [45] or selected appropriately for simulative/experimental purposes), andF(·):Rn×m→Rn×mdenotes a matrix-valued activation function array of ZNN model (4). Note that, forF(·), any monotonically-increasing odd activation function f(·) [being the element ofF(·)] can be used, e.g., the linear activation function and Li activation function [44]. This is the reason why (4) is called the generalized nonlinear ZNN model in the previous sentence.For the presented ZNN model (4), the following convergence result is provided, with the detailed proof given in [42].Theorem 1Given a smoothly time-varying Jacobian matrix J(t)∈Rm×nof full rank, if a monotonically increasing odd activation function arrayF(·)is used, then the state matrix X(t) of ZNN model(4)globally converges to the time-varying theoretical pseudoinverse of J(t), i.e., J†(t).Besides, when the linear activation function array is used, ZNN model (4) reduces to(5)X˙(t)W(t)=−X(t)(γW(t)+U(t))+γA(t)+B(t).For such a linear ZNN model (5), the global and exponential convergence result is further presented as follows.Corollary 1Given a smoothly time-varying Jacobian matrix J(t)∈Rm×nof full rank, the state matrix X(t) of ZNN model(5)globally and exponentially converges to the time-varying theoretical pseudoinverse J†(t), with the convergence rate being γ.ProofIt can be generalized from Theorem 1 and [42]. □In this section, by exploiting a specific activation function array (i.e., the so-called Li activation function array) [44], the Li-function activated ZNN (LFAZNN) model is developed and investigated for time-varying Jacobian matrix pseudoinversion.Li activation function, which originated from [44], is formulated asℓ(eij)=12Lipτ(eij)+12Lip1/τ(eij),where eijdenotes the ijth element of the error function E(t) and design parameter τ∈(0, 1). In addition, the function Lipτ(·) is defined as follows (with symbol |·| denoting the absolute value of a scalar):Lipτ(eij)=|eij|τ,ifeij>0,0,ifeij=0,−|eij|τ,ifeij<0.Therefore, by using Li activation function arrayL(·)[with ℓ(·) being its element], the following LFAZNN model is established for time-varying Jacobian matrix pseudoinversion:(6)X˙(t)W(t)=−γL(X(t)W(t)−A(t))−X(t)U(t)+B(t).For such an LFAZNN model, the theoretical result on its general convergence property is presented as follows.Corollary 2Given a smoothly time-varying Jacobian matrix J(t)∈Rm×nof full rank, the state matrix X(t) of LFAZNN model(6)globally converges to the time-varying theoretical pseudoinverse of J(t), i.e., J†(t).ProofIt can be generalized from Theorem 1. □Note that LFAZNN model (6) can be reformulated as(7)X˙(t)=X˙(t)(I−W(t))−γL(X(t)W(t)−A(t))−X(t)U(t)+B(t),where I∈Rm×mis the identity matrix. Thus, for better understanding on the LFAZNN structure, (7) is expressed in the ijth neuron form as follows (with i∈{1, 2, …, n} and j∈{1, 2, …, m}):(8)x˙ij=∑k=1mx˙ikvkj−γℓ∑k=1mxikwkj−aij−∑k=1mxikukj+bij,where xijdenotes the ijth neuron of (6) corresponding to the ijth entry of state matrix X(t), and aijand bijdenote the ijth entries of A(t) and B(t), respectively. In addition, time-varying weightswijand uijfor i, j∈{1, 2, …, m} denote respectively the ijth entries of W(t) and U(t), andvij=δij−wijwith δijbeing the ijth entry of identity matrix I∈Rm×m. Thus, on the basis of (8), the network structure of LFAZNN model (6) is illustrated in Fig. 1(for better readability and potential hardware implementation).In this subsection, the finite-time convergence result of LFAZNN model (6) is presented. That is, such a model has the property of finite-time convergence for time-varying Jacobian matrix pseudoinversion, showing its feasibility to kinematic control of redundant robot manipulators.Theorem 2Given a smoothly time-varying Jacobian matrix J(t)∈Rm×nof full rank, the state matrix X(t) of LFAZNN model(6), starting from any initial state X(0), converges to the time-varying theoretical pseudoinverse J†(t) in finite timetc<max2|e−(0)|1−τγ(1−τ),2|e+(0)|1−τγ(1−τ),where e+(0) and e−(0) are the largest and the smallest elements in the matrix E(0)=X(0)W(0)−A(0), respectively.ProofSee Appendix B. □Note that, as mentioned previously, the linear ZNN model (5) [i.e., (4) with the linear activation function array used] has the global exponential convergence on time-varying Jacobian matrix pseudoinversion. By exploiting Li activation function, ZNN model (4) can be accelerated to finite-time convergence to the time-varying theoretical pseudoinverse. Thus, in comparison with the linear ZNN model (5), the presented LFAZNN model (6) has superior convergence property, which will be demonstrated via computer simulations given in the ensuing subsection.In this subsection, to provide an intuitive result on finite-time convergence, computer simulations are conducted by applying LFAZNN model (6) to computing the time-varying pseudoinverse of the time-varying matrix presented in Example 1 of [42] [i.e., J(t) in (6) is set as the matrix presented in Example 1]. For reading convenience, such a matrix is given as follows:(9)J(t)=sin(1.5t)cos(1.5t)−sin(1.5t)−cos(1.5t)sin(1.5t)cos(1.5t)∈R2×3.Besides, for comparison, the linear ZNN model (5) is also used in the simulations. The corresponding simulation results are illustrated in Fig. 2, where symbol ∥·∥F denotes the Frobenius norm of a matrix.Specifically, the transient behavior of residual error synthesized by the linear ZNN model (5) is shown in Fig. 2(a) and (b), while that synthesized by LFAZNN model (6) is shown in Fig. 2(c) and (d). As seen from Fig. 2, the residual errors all converge to zero, thereby demonstrating that the ZNN model ((5) or (6)) is effective on time-varying matrix pseudoinversion. Note that the comparison between Fig. 2(a) and (c) [or Fig. 2(b) and (d)] shows that the residual errors of LFAZNN model (6) decrease directly to zero within finite time instead of converging exponentially to zero. These comparative results demonstrate that the presented LFAZNN model (6) is much superior to the linear ZNN model (5) for time-varying (Jacobian) matrix pseudoinversion, and, more importantly, that such an LFAZNN model (6) has the finite-time convergence property (in terms of the residual error decreasing directly to zero within finite time).Remark 1It follows from Fig. 2 that the convergence time of LFAZNN model (6) is expedited by increasing the value of γ. Based on these results as well as the theoretical result, it can be concluded that the upper bound of the convergence time has an inverse relationship with the value of γ. More specifically, the convergence time of LFAZNN model (6) for time-varying matrix pseudoinversion is decreasing as the value of γ increases. Thus, design parameter γ should be selected appropriately large to achieve the convergence purpose in practice (e.g., the convergence within finite time 0.01s for robotic applications). In summary, because of the feedback added to the P-based MVN scheme (1) as well as the finite-time convergence property of LFAZNN model (6) for time-varying Jacobian matrix pseudoinversion, the kinematic-control method developed in this paper [i.e., (1) aided with (6)] is feasible and effective for redundant robot manipulators (which will be presented and investigated in the ensuing section).Remark 2As for the P-based MVN scheme (1) and LFAZNN model (6), design parameters κ and γ play important roles in kinematic control of redundant robot manipulators. Specifically, κ is the gain of the outer loop to solve for θ while γ decides the convergence rate of the inner loop for solving the LFAZNN for the pseudoinverse of Jacobian matrix. This is a cascaded system (see also Fig. 3), and it is thus necessary to choose the value of γ much larger than the value of κ such that the inner loop converges much faster (e.g., γ=104 and κ=1 used in the ensuing simulations).In this section, based on a four-link planar robot manipulator and a PA10 robot manipulator, computer simulations are conducted to demonstrate the effectiveness of the presented LFAZNN model (6) for redundant-manipulator kinematic control. For better understanding, the block diagram of the kinematic-control system that incorporates the P-based MVN scheme (1) and the presented LFAZNN model (6) is illustrated in Fig. 3, where rp=rd−f(θ). Besides, in the simulations, design parameters τ=0.5 and γ=104 are used for LFAZNN model (6).In this subsection, the presented LFAZNN model (6) is applied to kinematic control of the four-link planar robot manipulator, of which the geometry is illustrated in Fig. 4. For such a robot manipulator, the Jacobian matrix J∈R2×4 is given as follows:J=−l1s1−l2s2−l3s3−l4s4−l2s2−l3s3−l4s4−l3s3−l4s4−l4s4l1c1+l2c2+l3c3+l4c4l2c2+l3c3+l4c4l3c3+l4c4l4c4,where li(with i=1, 2, 3, 4) denotes the length of the ith link. In addition,si=sin(∑j=1iθj)andci=cos(∑j=1iθj). In the simulations, the lengths of the links are set as l1=l2=l3=l4=1m, and the initial joint state is θ(0)=[π/9, π/12, π/12, π/12]Trad. Then, the end effector of the four-link planar robot manipulator is expected to track different paths, with the corresponding simulation results illustrated in Figs. 5 and 6and Table 1.Specifically, Fig. 5(a) shows the motion trajectories of the four-link planar robot manipulator that are synthesized by the P-based MVN scheme (1) aided with LFAZNN model (6). Fig. 5(b)–(d) correspond to end-effector positioning errors, joint angle, joint velocity transients, respectively. Note that ϵ shown in the figure is obtained as ϵ=rd−f(θ)∈R2. As seen from Fig. 5(a) and (b), the simulated end-effector trajectory of the robot manipulator is very close to the desired tricuspid path (with a tiny positioning error). In addition, as shown in Table 1, the maximal end-effector positioning error is 7.1431×10−5m, showing that the kinematic-control purpose is achieved successfully by using the P-based MVN scheme (1) aided with LFAZNN model (6). Besides, the joint variables (i.e., the joint angle θ and the joint velocityθ˙) shown in Fig. 5(c) and (d) are smooth and have not undergone abrupt changes, which is suitable for engineering applications. These results substantiate well that the P-based MVN scheme (1) aided with LFAZNN model (6) is effective on redundant-manipulator kinematic control.For further investigation and illustration, the end effector of the four-link planar robot manipulator is expected to track more different paths, i.e., a triangle path and a square path. The related simulation results synthesized by the P-based MVN scheme (1) aided with LFAZNN model (6) are shown in Fig. 6 and Table 1. Note that, as for Fig. 6, the left subfigures show the simulated motion trajectories of the robot manipulator, and the right subfigures show the corresponding end-effector positioning errors. Evidently, as seen from Fig. 6, all the simulated end-effector trajectories of the robot manipulator are close to the desired paths, with the positioning errors being small enough (i.e., of order 10−5m). More specifically, as shown in Table 1, the maximal end-effector positioning errors for the triangle-path and square-path tracking examples are 3.5407×10−5m and 5.6524×10−5m, respectively. This also means that the purpose of redundant-manipulator kinematic control is achieved successfully, thereby demonstrating again the effectiveness of the P-based MVN scheme (1) aided with LFAZNN model (6).In summary, the above simulation results have demonstrated that the LFAZNN model (6) is applied effectively to kinematic control of redundant robot manipulators (via time-varying Jacobian matrix pseudoinversion).In this subsection, the presented LFAZNN model (6) is applied to the kinematic control of a PA10 robot manipulator [1] (which is different from the above-presented planar robot manipulator). Two simulation examples are shown as follows: i.e., a circular-path tracking example and a tricuspid-path tracking example. Note that, for such two tracking examples, the motion-task duration is T=10s, and the initial joint state of PA10 robot manipulator is θ(0)=[0, −π/4, 0, π/2, 0, −π/4, 0]T rad in the simulations.In the circular example, the motion trajectory of the PA10 end-effector is expected to be a circle with radius of 0.12m and the revolute angle about X-axis being π/6rad. The corresponding simulation results are illustrated in Fig. 7and Table 2, which are synthesized by the P-based MVN scheme (1) aided with LFAZNN model (6). Evidently, as seen from Fig. 7(a) and (b), the simulated trajectory of the PA10 end-effector is very close to the desired circular path (with a tiny positioning error). In addition, as shown in Table 2, the maximal end-effector positioning error is 4.5432×10−5m, showing that the kinematic-control purpose is achieved successfully by using the P-based MVN scheme (1) aided with LFAZNN model (6). Besides, Fig. 7 (c) and (d) denote that the solutions of joint angle θ and joint velocityθ˙synthesized by (1) aided with (6) are smooth and have not undergone abrupt changes (which are suitable for engineering applications). These simulation results substantiate that the P-based MVN scheme (1) aided with LFAZNN model (6) is effective on redundant-manipulator kinematic control.In another example, the P-based MVN scheme (1) aided with LFAZNN model (6) is simulated for the end effector of PA10 tracking a tricuspid path. The corresponding simulation results, which are shown in Fig. 8and Table 2, demonstrate again the effectiveness of the P-based MVN scheme (1) aided with (6) for kinematic control of redundant robot manipulators. That is, the simulated end-effector trajectory is close to the desired tricuspid path with a tiny positioning error. In addition, the θ andθ˙solutions are smooth, making them suitable for engineering applications.In summary, the above simulation results based on PA10 robot manipulator have further shown the application prospect of the presented LFAZNN model (6). Such an LFAZNN model (6) is applicable not only for kinematic control of planar robot manipulators, but also for that of three-dimensional robot manipulators (e.g., the PA10 robot manipulator).This paper has presented and investigated LFAZNN application to kinematic control of redundant robot manipulators. Specifically, to obtain the theoretical pseudoinverse of time-varying Jacobian matrix involved in robotic redundancy resolution, the ZNN model by exploiting Li activation function [i.e., the LFAZNN model (6)] has been developed and investigated. Theoretical result about the finite-time convergence of (6) has also been given, showing the LFAZNN feasibility to redundant-manipulator kinematic control. Then, the presented LFAZNN model (6) has been applied to different types of redundant robot manipulators (i.e., the four-link planar robot manipulator and PA10 robot manipulator). Simulation results with various path-tracking examples have demonstrated the effectiveness of the LFAZNN model (6), as well as shown the LFAZNN application prospect.Besides, it is worth pointing out here that one future research direction can be the investigation of the P-based techniques with the inequality constraints considered, e.g., the limited range of the joint angle/velocity components. Another future research direction can be the investigation of LFAZNN practical application to kinematic control of redundant robot manipulators. By following this work, the P-based MVN scheme (1) aided with LFAZNN model (6) is expected to be applied to motion planning of a practical six-link planar robot manipulator [14,26] in the laboratory.

@&#CONCLUSIONS@&#
