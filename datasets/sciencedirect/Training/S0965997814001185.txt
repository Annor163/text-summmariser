@&#MAIN-TITLE@&#
Determining the joints most strained in an underactuated robotic finger by adaptive neuro-fuzzy methodology

@&#HIGHLIGHTS@&#
Kinetostatic analyzing of the new finger structure.Selecting and analyzing of the most strained finger joints.Variable selection based on using adaptive neuro-fuzzy inference system.Improving the prediction performance of the predictors.Providing the most influential parameters on the predictor.

@&#KEYPHRASES@&#
Underactuated finger,Adaptive neuro fuzzy system,Kinetostatic analysis,Contacts forces,Variable selection,Estimation,

@&#ABSTRACT@&#
The main purpose of this paper is to determine what joints are most strained in the proposed underactuated finger by adaptive neuro-fuzzy methodology. For this, kinetostatic analysis of the finger structure is established with added torsional springs in every single joint. Since the finger’s grasping forces depend on torsional spring stiffness in the joints, it is preferable to determine which joints have the most influence on grasping forces. Hence, the finger joints experiencing the most strain during the grasping process should be determined. It is desirable to select and analyze a subset of joints that are truly relevant or the most influential to finger grasping forces in order to build a finger model with optimal grasping features. This procedure is called variable selection. In this study, variable selection is modeled using the adaptive neuro-fuzzy inference system (ANFIS). Variable selection using the ANFIS network is performed to determine how the springs implemented in the finger joints affect the output grasping forces. This intelligent algorithm is applied using the Matlab environment and the performance is analyzed. The simulation results presented in this paper show the effectiveness of the developed method.

@&#INTRODUCTION@&#
To overcome the limited success of the early robotic finger designs due to the cost of the control, a special emphasis has been placed on the reduction of the number of degrees of freedom, thereby decreasing the number of actuators [1]. The strategy for reducing the number of actuators while keeping the hand capability to adapt its shape to the grasped object is referred to as underactuation [2]. Paper [3] shows that underactuation allows reproducing most of the grasping behaviors of the human hand, without augmenting the mechanical and control complexity.The main goal of this paper was in selection of the most strained joints of the proposed underactuated finger by adaptive neuro-fuzzy methodology. To perform it, kinetostatic analyzing of the finger structure was established with added torsional springs in every single joint. The kinetostatic analysis is based on screw theory [4]. Screw theory [5] can be used to do contact analysis of the underactuated robotic finger. Screw theory uses a matrix representation to describe the degrees of freedom of parts (twist-matrix) and the directions along which the contact forces react (wrench-matrix) [6]. From these screw-matrices it is possible to individuate the exact contact conditions of parts into the assembly.The proposed finger structure was optimized in article [7] as compliant structure. In order to perform kynetostatic analysis the compliant finger was converted to the rigid-body counterpart mechanism. The rigid-body finger mechanism was composed of two four bar crank mechanisms, one for each of the two finger phalanges. Since the rigid-body finger mechanism has more degree of freedom than the number of inputs (one), torsional springs were added in each of the finger joint. The stiffness of the implemented springs has different effect on each of two grasping contact forces. To build a finger model with the best features, it is desirable to select and analyze a subset of joints that are truly relevant or the most influential to the finger grasping forces. Hence it should be selected the most strained finger joints during grasping process. This procedure is typically called variable selection [8]. A solution to the variable selection problem could be the utilization of prior knowledge in order to screen out the irrelevant variables [9]. However, in most cases, the large number of variables and the complexity of the process dictate the application of more sophisticated methods [10]. In this study, the variable selection procedure was modeled by using adaptive neuro-fuzzy inference system (ANFIS).Variable searching using the ANFIS network was performed to determine how the finger joints affect the output grasping forces. The kinetostatic model of the finger was used to extract training and checking data for the ANFIS network. ANFIS [11], as a hybrid intelligent system that enhances the ability to automatically learn and adapt, was used by researchers for modeling [12–15], predictions [16–18] and control [19–23] in various engineering systems. The basic idea behind these neuro-adaptive learning techniques is to provide a method for the fuzzy modeling procedure to learn information about data [24,25]. The ANFIS is one of the methods to organize the fuzzy inference system with given input/output data pairs [26,27]. This technique gives fuzzy logic the capability to adapt the membership function parameters that best allow the associated fuzzy inference system to track the given input/output data [28].Fig. 1shows the target functions for optimization process of the finger structure. These functions represent two grasping shapes of object, convex (a) and concave (b). The design domain for the unknown mechanism is shown, as well.Topology optimization of compliant mechanisms can be performed based on continuum, as well as truss and frame, discretization. Here, the continuum discretization was used. The goal of the topology optimization problem is to design a structure that converts an input displacement on a prescribed output displacement. To be able to transfer work from the input port to the output port, the displacement must be performed in a structurally efficient way. Here, the finger contact points with object were assumed fixed. The optimal finger structure topology obtained by optimality criteria method [7] is shown in Fig. 2. The finger behavior verification is shown in Fig. 3for both grasping shapes, convex (a) and concave (b).Afterwards FEM simulations were performed in order to make additional improvements of the finger structure. According to the performed FEM simulations, the final structure of the finger mechanism is presented in Fig. 4(a). According to the obtained compliant finger topology the rigid-body counterpart mechanism was designed (Fig. 4(b)). The rigid-body finger mechanism was composed of two four bar crank mechanisms, one for each of the two finger phalanges. Since the rigid-body finger mechanism has more degree of freedom than the number of inputs (one), torsional springs were added in each of the finger joint [29].Underactuated fingers generally use elastic elements in the design of their unactuated joints. In underactuated fingers, the actuation wrench Tais applied to the input of the finger and is transmitted to the phalanges through suitable mechanical elements, e.g. four-bar linkages. Passive elements are used to kinematically constrain the finger and ensure the shape-adaptation of the finger to the object grasped. The type of underactuated two-phalanx finger considered in this paper and all important parameters are illustrated in Fig. 5. The actuation torque Tais applied to the first link which transmits the effort to both phalanges.A simple kinetostatic model for the fully adaptive finger with compliant joints can be obtained by adding springs to every joints of the finger. A grasp state is defined as the set of the geometric configuration of the finger and the contact locations on the phalanges necessary to characterize the behavior of the finger. Static model of the finger is built to obtain generic grasping forces exerted by the phalanges where some notations are used:•A0B0‾: the length of the proximal phalanx.B0C0‾: the length of the distal phalanx.A0A‾: the length of the first driving bar.B0B‾: the length of the second driving bar.AB‾: the length of the underactuation bar.F1: the grasping force on the proximal phalanx.F2: the grasping force on the distal phalanx.s1: the force arm of F1 with respect to A0.s2: the force arm of F2 with respect to B0.θa: the rotating angle of the first driving bar with respect to the base.θ1: the rotating angle of the proximal phalanx with respect to the base.θ2: the rotating angle of the distal phalanx with respect to the proximal phalanx.ki: the stiffness of the torsional spring associated with θi.Ta: the torque of actuator.Ti: the torque produced by the decoupling spring Ti=−ki∗Δθi, i=1,2,3,4,5,6Δθi: the ith joint coordinate relative to the rest configuration θi+1−θi.To determine the contact forces in depend of contact point location and the joint torques inserted by springs the friction must be ignored and grasping object has to be fixed. Equating the input and the output virtual powers of the fingerTT∗ω=FT∗Vcwhere(1)TT=TaT1T2T3T4T5→input torque vector exerted by the actuator and the springs(2)ω=θ̇aθ̇1θ̇2θ̇3θ̇4θ̇5→corresponding velocity vector(3)FT=F1F2→vector of contact forces for two finger phalanges(4)Vc=V1V2→vector of the projected velocities of the contact pointsContact point velocities for the both phalanges Vccan be expressed as the product of a Jacobian matrix J and the derivatives of the phalanx joint coordinates, i.e.(5)Vc=V1V2=J·θ̇1θ̇2θ̇3θ̇4θ̇5θ̇6whereJ=s1A0B0‾∗cosθ2+s2A0B0‾-s1s2(A0B0‾+B0B‾∗cosθ3)-s1s2-B0B‾∗cos(θ3+θ2)s1-A0A‾∗sinθa(A0B0‾∗cosθ2+s2)-A0A‾∗sinθa(A0B0‾+B0B‾∗cosθ3+BC‾∗sin(θ3-θ5)-s1s2-B0B‾∗cos(θ3+θ2)-BC‾∗sinθ5(A0B0‾+e∗cosθ2)-s1B0C0‾-s2Therefore the contact point velocities for the both phalanges can be expressed as(6)v1v2=A11A12A13A14A15A16A21A22A23A24A25A26·θ̇1θ̇2θ̇3θ̇4θ̇5θ̇6whereA11=s1,A12=A0B0‾-s1,A13=(A0B0‾+B0B‾∗cosθ3)-s1,A14=s1-A0A‾∗sinθa,A15=(A0B0‾+B0B‾∗cosθ3+BC‾∗sin(θ3-θ5)-s1,A16=(A0B0‾+e∗cosθ2)-s1,A21=A0B0‾∗cosθ2+s2,A22=s2,A23=s2-B0B‾∗cos(θ3+θ2),A24=(A0B0‾∗cosθ2+s2)-A0A‾∗sinθa,A25=s2-B0B‾∗cos(θ3+θ2)-BC‾∗sinθ5,A26=B0C0‾-s2.Due to four-bar linkages as transmission mechanisms in the both finger phalanges, the principle of transmission of instantaneous angular velocities gives the angular velocity ratio of every linkage. By superposition for given four-bar linkage and using the principle of instantaneous angular velocities it can be obtained:(7)θ̇a=θ̇1+P31B0‾P31B0‾+A0B0‾∗θ̇2+P31B0‾∗P53B0‾(P31B0‾+A0B0‾)∗(P53B0‾+B0C0‾)∗θ̇6(8)θ̇4=P31B0‾∗(P20A0‾+A0A‾)(P31B0‾+A0B0‾)∗P20A0‾∗θ̇1(9)θ̇3=P20B0‾+B0B‾P20B0‾∗θ̇1(10)θ̇6=P53B0‾∗(P40B‾+B0B‾)(P53B0‾+B0C0‾)∗P40B‾∗θ̇2(11)θ̇5=P40C‾+C0C‾P40C‾∗θ̇2.In matrix representation it becomesJT=1B12000B1601B23B24000010B35B36000100000010000001whereB12=P31B0‾P31B0‾+A0B0‾,B16=P31B0‾∗P53B0‾(P31B0‾+A0B0‾)∗(P53B0‾+B0C0‾),B23=P20B0‾+B0B‾P20B0‾,B24=P31B0‾∗(P20A0‾+A0A‾)(P31B0‾+A0B0‾)∗P20A0‾,B35=P40C‾+C0C‾P40C‾,B36=P53B0‾∗(P40B‾+B0B‾)(P53B0‾+B0C0‾)∗P40B‾.The first row in the matrix JTrepresents the finger mechanism without compliance i.e. only with added spring in one joint to ensure coherent motion. Expressions in the other rows represent added compliance in the other finger joints. For non-compliant mechanism there are expressions only in the first row. Matrix JTrelates vector ω to the time derivatives of the phalanx joint coordinates asω=θ̇aθ̇1θ̇2θ̇3θ̇4θ̇5→ω=JT·θ̇1θ̇2θ̇3θ̇4θ̇5θ̇6→θ̇aθ̇1θ̇2θ̇3θ̇4θ̇5=JT·θ̇1θ̇2θ̇3θ̇4θ̇5θ̇6Using previous equation one can obtain(12)FT=TT∗ω∗Vc-1After some transformations the final expression of the contact forces becomes(13)FT=[C11C12C13C14C15C16]·J-1whereC11=Ta,C12=T1+Ta∗P31B0‾P31B0‾+A0B0‾,C13=T2+T1(P20B0‾+B0B‾)P20B0‾,C14=T3+T1∗P31B0‾∗(P20A0‾+A0A‾)(P31B0‾+A0B0‾)∗P20A0‾,C15=T4+T2∗(P40C‾+C0C‾)P40C‾,C16=T5+Ta∗P31B0‾∗P53B0‾(P31B0‾+A0B0‾)∗(P53B0‾+B0C0‾)+Ta∗P53B0‾∗(P40B‾+B0B‾)(P53B0‾+B0C0‾)∗P40B‾,By some trigonometric manipulations with the instantaneous centers of rotation for the four-bar linkages, the following relationships can be obtainedP31B0‾=P31B0‾(θ2,θ3),P20B0‾=P20B0‾(θ3),P31A0‾=P31A0‾(θa,θ1),P53B0‾=P53B0‾(θ2,θ3),P40C‾=P40C‾(θ6),P40B‾=P40B‾(θ5).Finally, the grasping forces on the phalanges are expressed as function of all angles, inserted spring torques in every joint and phalanx contact distances.(14)FT=F1(θa,θ1,θ2,θ3,θ5,θ6,Ta,T1,T2,T3,T4,T5,s1,s2)F2(θa,θ1,θ2,θ3,θ5,θ6,Ta,T1,T2,T3,T4,T5,s1,s2)ANFIS can serve as a basis for constructing a set of fuzzy ‘IF-THEN’ rules with appropriate membership function to generate the stipulated input–output pairs. The membership functions are tuned to the input–output data. ANFIS is about taking an initial fuzzy inference (FIS) system and tuning it with a back propagation algorithm based on the collection of input–output data. The basic structure of a fuzzy inference system consists of three conceptual components: a rule base, which contains a selection of fuzzy rules; a database, which defines the membership functions used in the fuzzy rules; and a reasoning mechanism, which performs the inference procedure upon the rules and the given facts to derive a reasonable output or conclusion. These intelligent systems combine knowledge, technique and methodologies from various sources. They possess human-like expertise within a specific domain – adapt themselves and learn to do better in changing environments. In ANFIS, neural networks recognize patterns, and help adaptation to environments. Fuzzy inference systems incorporate human knowledge and perform interfacing and decision-making.Fuzzy logic toolbox in MATLAB was used for the entire process of training and evaluation of fuzzy inference system. Fig. 6shows an ANFIS structure for two inputs, the most strained joint of the robotic finger, estimated contact force magnitude on the first or the second phalange. Here, the analysis was constrained on the selection of two the most influential joint springs on the grasping forces.In this work, the first-order Sugeno model with two inputs and fuzzy IF-THEN rules of Takagi and Sugeno’s type is used:(15)IfxisAandyisCthenf1=p1x+q1y+r1The first layer consists of input variables membership functions (MFs), input 1 and input 2. This layer just supplies the input values to the next layer. In the first layer every node is an adaptive node with a node function O=μAB(x) and O=μCD(x) where μAB(x) and μCD(x) are MFs. In this study, bell-shaped MFs with maximum equal to 1 and minimum equal to 0 is chosen, such as(16)μ(x)=bell(x;ai,bi,ci,di)=11+x-ciai2biwhere {ai,bi,ci,di} is the set of parameters set that in this layer are referred to as premise parameters. In this layer x and y are the inputs to nodes and they represented the stiffness of the most influential torsional springs.The second layer (membership layer) checks for the weights of each MFs. It receives the input values from the 1st layer and acts as MFs to represent the fuzzy sets of the respective input variables. Every node in the second layer is non-adaptive and this layer multiplies the incoming signals and sends the product out like wi=μAB(x)∗μCD(y). Each node output represents the firing strength of a rule.The third layer is called the rule layer. Each node (each neuron) in this layer performs the pre-condition matching of the fuzzy rules, i.e. they compute the activation level of each rule, the number of layers being equal to the number of fuzzy rules. Each node of these layers calculates the weights which are normalized. The third layer is also non-adaptive and every node calculates the ratio of the rule’s firing strength to the sum of all rules’ firing strengths likewi∗=wiw1+w2, i=1,2. The outputs of this layer are called normalized firing strengths.The fourth layer is called the defuzzification layer and it provides the output values resulting from the inference of rules. Every node in the fourth layer is an adaptive node with node functionOi4=wi∗xf=wi∗(pix+qiy+ri)where {pi,qi,r} is the parameter set and in this layer is referred to as consequent parameters.The fifth layer is called the output layer which sums up all the inputs coming from the fourth layer and transforms the fuzzy classification results into a crisp (binary). The single node in the fifth layer is not adaptive and this node computes the overall output as the summation of all incoming signals(17)Oi5=∑iwi∗xf=∑iwif∑iwiThe hybrid learning algorithms were applied to identify the parameters in the ANFIS architectures.

@&#CONCLUSIONS@&#
