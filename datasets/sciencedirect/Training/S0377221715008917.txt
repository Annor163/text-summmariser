@&#MAIN-TITLE@&#
A branch-and-cut algorithm for the truck dock assignment problem with operational time constraints

@&#HIGHLIGHTS@&#
We propose a new model and motivate our choices.Several classes of valid inequalities have been identified.The dimension of associated polytope and some classes of facet-defining inequalities have been identified.A branch-and-cut algorithm has been developed.

@&#KEYPHRASES@&#
Truck dock assignment,Polytope,Dimension,Valid inequalities,Facet-defining inequalities,

@&#ABSTRACT@&#
In this paper, we address a truck dock assignment problem with operational time constraint which has to be faced in the management of cross docks. More specifically, this problem is the subproblem of more involved problems with additional constraints and criteria. We propose a new integer programming model for this problem. The dimension of the polytope associated with the proposed model is identified by introducing a systematic way of generating linearly independent feasible solutions. Several classes of valid inequalities are also introduced. Some of them are proved to be facet-defining. Then, exact separation algorithms are described for separating cuts for classes with exponential number of constraints, and an efficient branch-and-cut algorithm solving real-life size instances in a reasonable time is provided. In most cases, the optimal solution is identified at the root node without requiring any branching.

@&#INTRODUCTION@&#
Cross-docks play a key role in modern distribution systems. They are logistic terminals where deliveries are unloaded from inbound trucks, sorted and moved from one dock to another—within the cross dock—until they are finally loaded on the outbound trucks towards the next destination within the distribution network. Cross docks are often used to perform rapid transhipment activities and usually do not carry out any further processing of the shipments (see Fig. 1). An important problem in a cross dock is the dock assignment of inbound and outbound trucks, given the characteristics of cross dock (such as layout, installations, resources, capacity, etc.) and those of clients (such as time windows within which the trucks are present at cross dock, origin–destination volumes of flow, etc.).In the truck dock assignment problem, given the time windows defined by the arrival and the departure times of every truck (as well as capacity of the cross dock), we aim at finding an optimal assignment of the trucks to the docks in such a way that the number of deliveries being processed is maximized. A delivery from an inbound truck that has not succeeded to leave the cross dock using an outbound truck in the same day, leads to impose some holding costs at the cross dock until being delivered to its destination in the next call of the outbound truck (which is usually the next day). Every inbound truck usually has shipments to several different destinations. Whether an inbound truck will be able to deliver deliveries to an outbound truck via cross dock depends on, (1) feasibility of time windows (i.e. the outbound truck does not leave before the inbound arrives), (2) the arrival time of incoming truck plus the dock-to-dock transfer time within the cross dock, which should not exceed the departure time of the outbound truck, and (3) the available capacity at the cross-dock during the visit time window of the inbound trucks.As mentioned, the transfer of shipments from inbound truck i to outbound truck j depends on the transfer time between the two docks k and l where i and j, respectively, are assigned. A sub-optimal solution to the truck dock assignment problem can cause significant waiting times for other arriving trucks, which will eventually miss the same-day-service of their shipment. However, an optimal assignment can minimize the intra cross dock (i.e. inter-dock) operational cost, including the costs for drivers and vehicles that carry out in-house pickups and deliveries and also the handling costs for sorting and consolidating cargo. In presence of capacity, the total volume of deliveries present at the cross dock at every point in time is restricted.In this paper, we propose a new model for the dock assignment problem. Then, we identify the dimension of the corresponding polytope. We introduce several classes of valid inequalities and prove that some of those valid inequalities are in fact facet-defining ones. We propose then separation procedures which are embedded in an efficient branch-and-cut algorithm. This method is capable of providing optimal solution to real-life size instances of the problem in a reasonable computational time.The paper is structured as follows. In Section 2, we review the relevant literature on the cross dock management. In Section 3, we introduce our mathematical model and discuss the relation with a related presented in Miao, Lim, and Ma (2009). Section 4 is reserved to present some classes of valid inequalities for the problem. Section 4.2 reports some polyhedral properties. Section 5 describes the proposed solution method and Section 6 reports some computational results and analysis. Section 7 summarizes the work, presents a conclusion and pinpoints some further research directions. Some elaborated details are also provided in Appendix A.

@&#CONCLUSIONS@&#
We propose a new model for the truck dock assignment problem based on the assumptions formulated in Miao et al. (2009). We identified several classes of valid inequalities. By proposing a systematic way for generating linearly independent feasible solutions, we showed that the corresponding polytope is a full-dimensional one. Based on that, we proved that some of the proposed valid inequalities are facet-defining. Finally, we developed a branch-and-cut algorithm that solves 74 percent of the instances of the testbed to optimality at the root node and 90 percent to less than 5 percent gap within the time limit. In all such cases, either none or only a few branching were needed.Given that the model is a pure binary model with a particular structure, our initial experiment with several decomposition schemes did not perform well as the choice of a good subproblem is not trivial. However, we showed that branch-and-cut methods are successful candidates that can be very efficient in dealing with this class of problems and can solve real-size instances in a reasonable time. We pushed the limit of solvability of instances of the problem when compared to the earlier contributions (e.g. Miao et al., 2009).Our future work will be on identifying more facets of the TDAP polytope and identify possible reformulation with exponential number of columns. Metaheuristics and other exact methods such as decompositions and hybrid methods also deserve attention.