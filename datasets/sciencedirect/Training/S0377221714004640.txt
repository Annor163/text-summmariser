@&#MAIN-TITLE@&#
Finding maximum subgraphs with relatively large vertex connectivity

@&#HIGHLIGHTS@&#
We discuss clique relaxation models based on relative vertex connectivity.We show relations between problem complexity and vertex connectivity requirements.The proposed generalization encompasses previously known models.We develop mixed integer programs and exact algorithms for the proposed models.We illustrate properties of the proposed models with computational experiments.

@&#KEYPHRASES@&#
Vertex connectivity,Clique relaxations,Computational complexity,Mixed integer programming,2-Club,

@&#ABSTRACT@&#
We consider a clique relaxation model based on the concept of relative vertex connectivity. It extends the classical definition of a k-vertex-connected subgraph by requiring that the minimum number of vertices whose removal results in a disconnected (or a trivial) graph is proportional to the size of this subgraph, rather than fixed at k. Consequently, we further generalize the proposed approach to require vertex-connectivity of a subgraph to be some function f of its size. We discuss connections of the proposed models with other clique relaxation ideas from the literature and demonstrate that our generalized framework, referred to as f-vertex-connectivity, encompasses other known vertex-connectivity-based models, such as s-bundle and k-block. We study related computational complexity issues and show that finding maximum subgraphs with relatively large vertex connectivity is NP-hard. An interesting special case that extends the R-robust 2-club model recently introduced in the literature, is also considered. In terms of solution techniques, we first develop general linear mixed integer programming (MIP) formulations. Then we describe an effective exact algorithm that iteratively solves a series of simpler MIPs, along with some enhancements, in order to obtain an optimal solution for the original problem. Finally, we perform computational experiments on several classes of random and real-life networks to demonstrate performance of the developed solution approaches and illustrate some properties of the proposed clique relaxation models.

@&#INTRODUCTION@&#
LetG=(V,E)be a simple undirected graph with a set of n vertices (nodes) V and a set of edgesE⊂V×V. Two vertices v andv′are connected if G contains a path between them; graph G is connected (disconnected) if all its vertices are pairwise connected (there exists a pair of vertices that are not connected). The vertex connectivity of a graph G, referred to asκ(G), is defined as the minimum number of vertices of G whose removal results in either a disconnected graph or a trivial graph (i.e., consisting of exactly one vertex) (Kirousis, Serna, & Spirakis, 1993; Pattillo, Youssef, & Butenko, 2013). We say that graph G is k-vertex-connected if its vertex connectivity is at least k, i.e.,κ(G)⩾k. Vertex connectivity and k-vertex connectivity of a given graph can be verified in polynomial time (Galil, 1980). Since vertex connectivity is among the fundamental graph properties, there is a considerable body of work on this topic, see Galil (1980); Kammer and Täubig (2005); Kirousis et al. (1993); Matula (1969); Reif and Spirakis (1985) and references therein.The longest distance (or, equivalently, the length of a longest shortest path) between all pairs of vertices in G is referred to as the diameter of G, i.e.,diam(G)=maxv,v′∈GdG(v,v′), wheredG(v,v′)denotes the length of a shortest path between v andv′in G. The densityρ(G)of graphG=(V,E)is defined as the ratio of the number of edges|E|to the maximum possible number of edges in a graph with|V|vertices, i.e.,ρ(G)=|E|/|V|2. Denote byNG(v)the set of all neighbors ofv∈Vin G, i.e.,v′∈NG(v)for all(v,v′)∈E. Then the degree of v in G is given bydegG(v)=|NG(v)|.A graphG=(V,E)is complete if all its pairs of vertices are connected by an edge. For any subset of verticesS,G[S]=(S,(S×S)∩E)denotes the subgraph induced by S on G. A clique C is a subset of V such that the subgraphG[C]induced by C in G is complete (Luce & Perry, 1949). The maximum clique problem is to find a clique of maximum cardinality in G, see, e.g., Bomze, Budinich, Pardalos, and Pelillo (1999). This problem is NP-hard (and its decision version is NP-complete) (Garey & Johnson, 1979).A clique is a very intuitive and simple concept of a cohesive subgraph with numerous important applications (Bomze et al., 1999; Butenko & Wilhelm, 2006). Cliques possess a number of “ideal” cohesiveness properties (Pattillo, Youssef, et al., 2013): each vertex is connected to all other vertices, a clique has maximum possible edge density as well as edge and vertex connectivity, the distance between any pair of vertices is one, etc. However, in many practical scenarios cliques are overly restrictive graph structures. Thus, a number of clique relaxation models have been introduced in the literature, see, e.g., Balasundaram, Butenko, Hicks, and Sachdeva (2011); Balasundaram, Butenko, and Trukhanov (2005); Veremyev and Boginski (2012a).A unifying taxonomic framework proposed by Pattillo, Youssef, et al., 2013 demonstrates that all existing clique relaxation models in the literature are based on relaxing some of the elementary clique-defining properties, namely, distance, diameter, domination, degree, density and connectivity. These relaxations are further classified into absolute and relative ones. One illustrative example of an absolute (diameter-based) relaxation is an s-club, which is defined as a subsetS⊆Vsuch that the subgraphG[S]induced by S in G has diameter of at most s, i.e.,diam(G[S])⩽s, where s is a fixed positive integer (Balasundaram et al., 2005; Veremyev & Boginski, 2012a). Clearly, requirings=1results in a clique, while relaxings⩾2defines a subgraph with somewhat less restrictive diameter requirements. The problem of finding maximum s-clubs is known to be NP-hard for any fixeds⩾2(Balasundaram et al., 2005).Another absolute clique relaxation model using vertex connectivity is a k-block (Pattillo, Youssef, et al., 2013), which is defined as a subsetS⊆Vsuch that the subgraphG[S]induced by S in G has vertex connectivity of at least k, i.e.,κ(G[S])⩾k. In contrast to the computationally hard clique relaxation model above, finding a maximum 1-block is a polynomially solvable problem, as it corresponds to finding the largest connected component of a graph. Similarly, maximum 2-connected and 3-connected components can be found inO(|V|+|E|)time (Kammer & Täubig, 2005); furthermore, for any fixedk>3, finding maximum k-connected components can be performed inO(2k|V|3)time (Pattillo, Youssef, et al., 2013).A classical example of a relative (edge-based) clique relaxation model is aγ-quasi-clique defined as a subsetS⊆Vsuch that the subgraphG[S]induced by S in G has an edge density of at leastγ, i.e.,ρ(G[S])=|(S×S)∩E|/|S|2⩾γ, whereγ∈[0,1]is a fixed constant parameter (Abello, Resende, & Sudarsky, 2002). Obviously,γ=1corresponds to a clique, while0⩽γ<1defines subgraphs with smaller edge densities. The problem of finding maximumγ-quasi-cliques is known to be NP-hard for any fixedγ∈(0,1], see Pattillo, Veremyev, Butenko, and Boginski (2013); Pattillo, Youssef, et al. (2013); Uno (2010).Theγ-quasi-clique is, probably, the most well-known relative clique relaxation model with a number of important applications in biological, social, telecommunication and financial areas (Abello, Pardalos, & Resende, 1999; Abello et al., 2002; Matsuda, Ishihara, & Hashimoto, 1999; Mahdavi Pajouh, Miao, & Balasundaram, 2014; Uno, 2010). For example, in graph-theoretical models that are built upon some real-life (e.g., experimental) data, measurement errors and noisy observations often result in missing “links” (i.e., edges). Using cliques for capturing and representing dense clusters of closely related (either through cohesiveness or “tightness”) functional elements within such networked systems can be impractical and too idealistic since large cliques rarely occur in natural systems. Consequently, techniques based onγ-quasi-clique models can be applied to address such issues. However, Pattillo, Youssef, et al., 2013 pointed out that other relative clique relaxations ideas should also be studied. Specifically, the concept of relative vertex connectivity was identified as an interesting research direction that is worth exploring. In this paper, we further investigate this issue by using the following definition of a clique relaxation model:Definition 1γ-relative-vertex-connected subgraphGiven a graphG=(V,E)and a fixed parameterγ∈[0,1], a subgraphG[S],S⊆V, is calledγ-relative-vertex-connected (or relativeγ-vertex-connected) if the minimum number of vertices, whose removal disconnectsG[S](or results in a trivial subgraph with exactly one vertex), is at leastγ(|S|-1).Parameterγcan be viewed as the minimum fraction, or percentage, of vertices that need to be removed (“destroyed”) in order to disconnectG[S]or obtain a subgraph with exactly one vertex. Note that if S is a clique in G, thenG[S]has maximum possible vertex connectivity, i.e.,κ(G[S])=|S|-1. Conversely,γ=1implies that S is a clique in G.One important observation is that anyγ-relative-vertex-connected subgraph is also aγ-quasi-clique; thus, desirable properties ofγ-quasi-cliques (i.e., edge-density) are preserved inγ-relative-vertex-connected subgraphs. Indeed, the degree of any vertex inG[S]is at leastγ(|S|-1); otherwise, if there exists a vertex with a smaller degree, then deletion of all its neighbors results in a disconnected vertex, which violates the definition of aγ-relative-vertex-connected subgraph. Therefore, the number of edges inG[S]is at leastγ(|S|-1)·|S|/2implying thatG[S]is also aγ-quasi-clique. However, there existγ-quasi-cliques that do not induceγ-relative-vertex-connected subgraphs. In particular, aγ-quasi-clique may be a disconnected graph, which is often mentioned as the key disadvantage of this relative clique relaxation model.In this paper we consider the problem of finding a maximum (in terms of cardinality|S|,S⊆V) subgraphG[S]that isγ-relative-vertex-connected. We refer to the decision version of this problem as theγ-RELATIVE-VERTEX-CONNECTED subgraph problem. In Section 2.1 we show for any fixedγ∈(0,1]the problem remains NP-complete (and its optimization version is NP-hard). Note thatγ=0corresponds to a polynomially solvable case as any graph G is 0-relative-vertex-connected, whileγ=1reduces to the classical maximum clique problem.Next, we further generalize the concept ofγ-relative-vertex-connectivity with the following1We useZ>0to denote the set of all strictly positive integers.1:Definition 2f-vertex-connected subgraphGiven a graphG=(V,E)and a functionf(·)such thatf:Z>0→R+, a subgraphG[S],S⊆V, is called f-vertex-connected if the minimum number of vertices, whose removal disconnectsG[S](or results in a trivial graph with exactly one vertex) is at leastf(|S|).For a fixedf(·), define the decision version of the f-VERTEX-CONNECTED subgraph problem as follows: given graphG=(V,E)and positive integer k, the question is whether G contains an f-vertex-connected subgraph of size at least k. The optimization version of the f-VERTEX-CONNECTED subgraph problem consists of finding a maximum (in terms of cardinality,|S|) f-vertex-connected subgraphG[S],S⊆V.First, observe thatf(|S|)=|S|-1corresponds to the CLIQUE problem, whilef(|S|)=γ|S|-1,γ∈(0,1], reduces to theγ-RELATIVE-VERTEX-CONNECTED subgraph problem (see Definition 1). Similarly, iff(|S|)=k, where k is a fixed positive integer, then the problem corresponds to finding a maximum k-block, e.g., the largest connected component fork=1. The proposed generalization encompasses another known vertex-connectivity-based model, namely, s-bundle (Pattillo, Youssef, et al., 2013), which is defined asS⊆Vthat induces a subgraph with vertex connectivity at least|S|-s, i.e.,κ(G[S])⩾|S|-s, where s is a fixed positive integer. Any 1-bundle is a clique and an s-bundle is also an f-vertex-connected subgraph forf(|S|)=|S|-s. It is known that finding a maximum s-bundle is also NP-hard (Pattillo, Youssef, et al., 2013).The discussion above highlights the fact that identifying maximum subgraphs remains a difficult combinatorial optimization problem in general graphs as long as the required cohesiveness property is relatively strict (e.g., clique, s-bundle,γ-vertex-connected graphs forγ>0). On the other side of the spectrum, there is a k-block model withf(|S|)=O(1), which induces a polynomially solvable problem. Thus, it is interesting to consider other types of functionf(·). In Section 2.2 we partially address this question and explore several other examples off(·)that correspond to graphs with less restrictive connectivity requirements.The remainder of this paper is organized as follows. In Section 2 we study the theoretical computational complexity issues. In Section 3 we develop a linear mixed integer program (MIP) for finding the maximumγ-relative-vertex-connected and another for the general f-vertex-connected subgraphs. Then in Section 4 we describe an effective exact algorithm that iteratively solves a series of simpler MIPs along with some enhancements in order to obtain an optimal solution for the original problem. Section 5 is focused on an interesting special case referred to as theγ-relative-robust 2-club that extends the recently introduced R-robust 2-club model from Veremyev and Boginski (2012a, 2012b). In Section 6 we provide the results of our computational experiments using the developed solution approaches on several classes of random and real-life networks. We also describe simple preprocessing techniques that substantially improve the performance of standard solvers. Finally, we conclude the paper by highlighting promising directions for future research work in Section 7.DefineKnto be a complete graph with n vertices. LetK(n,n)be a graph with2nvertices depicted on Fig. 1. Specifically, it consists of two complete graphsKn(denoted byKn1andKn2) and additional edges that connect only pairs of vertices with the same labels inKn1andKn2, i.e., every vertex i in graphKn1is connected to all vertices inKn1(due to completeness) and exactly one vertex i inKn2.Recall the classical CLIQUE problem (Garey & Johnson, 1979): given graphG=(V,E)and positive integerk⩽|V|, the question is whether G contains a clique of size at least k. It is also known (see related comments in Garey & Johnson, 1979) that for a givenβ∈(0,1), it is NP-complete to decide whether G contains a clique of size at leastβ|V|. Next, we provide two technical lemmas that represent slight modifications of this result. The proof of the first lemma is omitted as it is rather straightforward.Lemma 1For any fixedα∈Z>0andβ∈(0,1), the problem of deciding whether a given graphG=(V,E)contains a clique of size at leastαk, where k is restricted to satisfy⌊β|V|⌋+1⩽αk⩽|V|,k∈Z>0, is NP-complete.For any fixedβ∈(0,1), the problem of deciding whether a given graphG=(V,E)contains a clique of size at least k, where k is restricted to satisfy|V|-|V|β⩽k⩽|V|,k∈Z>0, is NP-complete.The proof is based on the reduction from the CLIQUE problem. Given an input graphG′=(V′,E′), letℓ=|V′|1β-|V′|. Clearly,ℓ⩾1for sufficiently large graphs. Thus, we can construct a complete graphKℓand connect each vertex inG′to every vertex inKℓby an edge. The obtained graph, referred to asG=(V,E), has|V|=|V′|1βvertices. Next, we observe thatG′has a clique of size at leastk′if and only if G has a clique of size at least k such thatk=k′+|V′|1β-|V′|⩾|V|-|V|β,which concludes the proof.□The next lemma provides a simple construction that is used as a building block in our further derivations.Lemma 3GraphK(n,n)is12-relative-vertex-connected.By definition,K(n,n)is a12-relative-vertex-connected graph if the minimum number of vertices, whose removal disconnectsK(n,n), is at least12(2n-1)=n-12. Thus, the removal of anyn-1vertices should not disconnect it. The removal of n vertices, namely,{1,…,n-1}inKn1, and vertex n inKn2, disconnectsK(n,n), because vertex n inKn1becomes isolated. Furthermore, observe that the removal of anyn-1vertices leaves at least one pair of vertices(i,i)fromKn1andKn2to be connected by an edge. Recall thatKn1andKn2are complete. Therefore, the removal of anyn-1vertices cannot disconnect the graphK(n,n), i.e., it is12-relative-vertex-connected.□The1ℓ-RELATIVE-VERTEX-CONNECTED subgraph problem is NP-complete for any fixed positive integerℓ.The problem is clearly in NP since k-vertex connectivity of any graph can be verified in polynomial time (Galil, 1980). Without loss of generality assumeℓ⩾2. LetGt=(Vt,Et),t=1,…,ℓ, beℓcopies of graphG=(V,E), where|V|=n. Then constructG′=(V′,E′)as follows:V′=V1∪V2∪…∪Vℓ,E′=E1∪E2∪…∪Eℓ∪{(i,j):∀i∈Vℓ,j∈Vt,t=1,…,ℓ-1;i=j}.Fig. 2illustrates the constructed graph forℓ=2, while Fig. 3provides the general scheme ofG′. Next, we prove that G has a clique of size k if and only ifG′has a1ℓ-relative-vertex-connected subgraph of sizeℓk. We considerk⩾⌊ℓ-1ℓn⌋+1. By Lemma 1 the restricted version of the CLIQUE problem used in our reduction is NP-complete, i.e.,α=1andβ=ℓ-1ℓ. Also, asℓis fixed, assumek>ℓ.Suppose that there exists a cliqueVcof size k in graph G. LetVc′be the union of copies ofVcin graphsG1,…,Gℓ. The induced subgraphG′Vc′is1ℓ-relative-vertex-connected if the minimum number of vertices, whose removal disconnectsG′Vc′, is at least k because1ℓVc′-1=k-1ℓ. Since the copies ofVcin every pair of graphs(Gt,Gℓ)(t=1,…,ℓ-1)induce aK(k,k)graph, then using the proof of Lemma 3 it is easy to observe that the removal of anyk-1vertices does not disconnectG′Vc′. Hence,G′Vc′is a1ℓ-relative-vertex-connected subgraph.Conversely, suppose that there exists a1ℓ-relative-vertex-connected subgraph induced by the set of verticesVc′of sizeℓk. Sincek>ℓ-1ℓn, thenVc′>n(ℓ-1)andVt∩Vc′≠∅(t=1,…,ℓ), i.e., every subsetVt∩Vc′(t=1,…,ℓ)has at least one vertex. Recall that the degree of each vertex in subgraphG′Vc′is at least k and any vertex inVt(t=1,…,ℓ-1)is connected to exactly one vertex inVℓ. Thus, the degree of vertex i inVt∩Vc′(t=1,…,ℓ-1)is at leastk-1. Hence,Vt∩Vc′⩾k(t=1,…,ℓ-1). Similarly,Vℓ∩Vc′⩾k-ℓ+2.In order to show that G has a clique of size k, at least one subset of verticesVt∩Vc′,t=1,…,ℓ-1, should have exactly k vertices. Suppose this is not the case. Then|Vt∩Vc′|⩾k+1for allt=1,…,ℓ-1andVc′=|Vℓ∩Vc′|+∑t=1ℓ-1|Vt∩Vc′|⩾k-ℓ+2+(k+1)(ℓ-1)=ℓk+1,which results in a contradiction asVc′=ℓk.□The next statement generalizes Proposition 1 for anyγ=pq∈0,1],p,q∈Z>0.Proposition 2Thepq-RELATIVE-VERTEX-CONNECTED subgraph problem is NP-complete for any fixed positive integers p and q such thatpq∈0,1].Without loss of generality, consider any positive integers p and q such thatpq∈0,1. Clearly, there always exists a positive integerℓ⩾2such thatpq>1ℓ. The key idea of the reduction is to increase vertex connectivity of the graph constructed in the proof of Proposition 1 by adding a large enough clique. Specifically, we add a complete subgraphGℓ+1=(Vℓ+1,Eℓ+1)of size|Vℓ+1|=(ℓp-q)kto the graph depicted on Fig. 3 and connect every vertex ofG1,…,Gℓto all vertices inGℓ+1(see Fig. 4for an illustration of the obtained graph).Formally, letGt=(Vt,Et),t=1,…,ℓ, beℓcopies of graphG=(V,E), where|V|=n, andGℓ+1=(Vℓ+1,Eℓ+1)be a complete graph of size|Vℓ+1|=(ℓp-q)k. DefineG′=(V′,E′)asV′=V1∪…∪Vℓ∪Vℓ+1,E′=E1∪…∪Eℓ∪{(i,j):∀i∈Vℓ,j∈Vt,t=1,…,ℓ-1;i=j}∪{(i,j):∀i∈Vt,t=1,…,ℓ+1;j∈Vℓ+1}.To show NP-completeness of the considered problem, we prove that G has a clique of size(q-p)kif and only ifG′has apq-relative-vertex-connected subgraph of size(ℓ-1)qk. We restrict our consideration to(q-p)k⩾(ℓ-1)ℓn+1. From Lemma 1 the restricted version of the CLIQUE problem used in our reduction is NP-complete, i.e.,α=q-pandβ=ℓ-1ℓ. Also, asℓis fixed, assume that k is large enough to ensure(q-p)k>ℓ.Suppose that there exists a cliqueVcof size(q-p)kin graph G. LetVc′be the union ofVℓ+1and all copies ofVcin graphsGt(t=1,…,ℓ). NoteVc′=ℓ(q-p)k+(ℓp-q)k=(ℓ-1)qk.To show thatG′Vc′ispq-relative-vertex-connected, the minimum number of vertices, whose removal disconnects it, has to be at least(ℓ-1)pkbecausepqVc′-1=pq((ℓ-1)qk-1)=(ℓ-1)pk-pqand0<pq<1.Each vertex inVℓ+1is connected to all vertices inG′by an edge. Thus, to disconnect the subgraphG′Vc′all vertices inVℓ+1need to be removed first. As it follows from the proof of the previous proposition, the subgraphG′Vc′⧹Vℓ+1is1ℓ-relative-vertex-connected, i.e., at least(q-p)kvertices need to be removed to disconnect the graph. Therefore, the subgraphG′Vc′requires at least(ℓp-q)k+(q-p)k=(ℓ-1)pkvertices to be removed in order to disconnect it.Conversely, suppose that there exists apq-relative-vertex-connected subgraphG′Vc′induced by the set of verticesVc′⊂V′of sizeVc′=(ℓ-1)qk. From thepq-connectivity property, it follows that the degree of each vertex in this graph is at least(ℓ-1)pk.By assumption(q-p)kℓ>(ℓ-1)n. Also, observe thatVc′⧹Vℓ+1⩾Vc′-|Vℓ+1|=(ℓ-1)qk-(ℓp-q)k=(q-p)kℓ>(ℓ-1)n,which impliesVc′∩(V1∪,…,∪Vℓ)⩾(q-p)kℓ>(ℓ-1)n,andVt∩Vc′≠∅for allt∈{1,…,ℓ}.The degree of each vertex inVt∩Vc′,t∈{1,…,ℓ}for the subgraphG′Vc′is at least(ℓ-1)pk=|Vℓ+1|+(q-p)k. Thus, it immediately follows thatVt∩Vc′⩾(q-p)k,∀t∈{1,…,ℓ-1},Vℓ∩Vc′⩾(q-p)k-ℓ+2.Indeed, for everyt∈{1,…,ℓ-1}every vertex in the subsetVt∩Vc′can be connected by an edge to at most|Vℓ+1|+1vertices outsideVt∩Vc′; thus, it should be connected by an edge to at least(q-p)k-1vertices inVt∩Vc′. Similarly, every vertex in the subsetVℓ∩Vc′should be connected by an edge to at least(q-p)k-(ℓ-1)vertices inVℓ∩Vc′.If we show thatVℓ+1⊂Vc′, then|Vc′⧹Vℓ+1|=(q-p)kℓ, and we can apply the proof of Proposition 1 to demonstrate that there existst∈{1,…,ℓ-1}:Vt∩Vc′=(q-p)k, orVt∩Vc′is a clique of size(q-p)k.The proof is done by contradiction. Suppose|Vc′∩Vℓ+1|=(ℓp-q)k-sfor some positive integer s. Using the same degree restrictions, we conclude thatVt∩Vc′⩾(q-p)k+s,∀t∈{1,…,ℓ-1},Vℓ∩Vc′⩾(q-p)k-ℓ+2+s.Therefore,Vc′=∑t=1ℓ+1Vt∩Vc′⩾(ℓ-1)((q-p)k+s)+((q-p)k-ℓ+2+s)+((ℓp-q)k-s)=ℓ(q-p)k+ℓs-ℓ+2+(ℓp-q)k-s=(ℓ-1)qk+(ℓ-1)(s-1)+1=Vc′+(ℓ-1)(s-1)+1>Vc′and the obtained contradiction implies the necessary result.□As discussed in Section 1, the concept of f-vertex-connectivity encompasses other known vertex-connectivity-based models proposed in the literature such as s-bundle and k-block. Next, we show that the f-VERTEX-CONNECTED subgraph problem remains NP-complete for two other types off(·)with substantially less restrictive vertex connectivity requirements.Proposition 3The f-VERTEX-CONNECTED subgraph problem is NP-complete for(i)f(|S|)=|S|1-α-1and any fixedαsuch thatα∈[0,12);f(|S|)=γ(|S|-|S|α)and any fixedαandγsuch thatα∈[0,1)andγ=pq∈(0,1], where p and q are positive integers.(i): Without loss of generality assumeα∈(0,12). The construction approach is similar to the one used in the proof of Proposition 1. Specifically, for a given positive integer k, letℓ=k11-α-1.Next, we constructG′=(V′,E′)(as in Fig. 3) and show thatG=(V,E)has a clique of size k if and only ifG′=(V′,E′)has a(ℓk)1-α-1-connected subgraph of sizeℓk. We considern-n2-11-α⩽k⩽n-1, wheren=|V|. By Lemma 2 the restricted version of the CLIQUE problem used in our reduction is NP-complete, i.e.,β=2-11-αand0<β<1sinceα∈(0,12).Suppose that there exists a cliqueVcof size k in graph G. LetVc′be the union of copiesVcin graphsG1,…,Gℓ. Observe thatVc′=ℓk. By Lemma 3 removal of anyk-1vertices does not disconnectGVc′. Also,(ℓk)1-α-1⩽k11-α-1·k1-α-1=k-1,which implies thatGVc′is(ℓk)1-α-1-connected.Conversely, supposeVc′is a(ℓk)1-α-1-connected subgraph of sizeℓk. Observen·ℓ-1ℓ=n·k11-α-1-1k11-α-1<n·n11-α-1-1n11-α-1⩽n-n2-11-α⩽k,which follows from the fact that functiong(x)=1-1xis strictly increasing forx>0and the initial assumption for the considered values of k. Next, the above inequality implies thatVt∩Vc′≠∅(t=1,…,ℓ), i.e., every subsetVt∩Vc′(t=1,…,ℓ)has at least one vertex. The remainder of the proof follows same arguments as in the proof of Proposition 1.(ii): The proof is based on the ideas similar to the discussion above and the proof of Proposition 2.□Ifα=0thenf(·)in Proposition 3 is eitherf(|S|)=|S|-1orf(|S|)=γ(|S|-1), respectively. For the latter case, Definitions 1 and 2 coincide, and the second statement of Proposition 3 reduces to Proposition 2. Also, ifα=1(both cases) orγ=0(the latter case) then the problem admits a trivial solution.Interestingly,f(|S|)=k, where k is a fixed positive integer, corresponds to finding a maximum k-block, e.g., the largest connected component fork=1. As we briefly described in Section 1, the related optimization problem is polynomially solvable.One observation from the above examples and theoretical results is that s-bundles (i.e.,f(|S|)=|S|-s, see discussion in Section 1) correspond to functionsf(·)with asymptotic behaviorf(|S|)∼|S|. Thus, the required vertex connectivity is rather strict (recall that for cliquesf(|S|)=|S|-1), and it is intuitive that finding maximum subgraphs with this property is hard. On the other hand,γ-relative-vertex-connectivity and the examples considered in Proposition 3 correspond to subgraphs with much less restrictive vertex connectivity requirements. Specifically, functionsf(|S|)=|S|1-α-1,α∈[0,12), andf(|S|)=γ(|S|-|S|α),γ∈(0,1], result in asymptotic behaviorf(|S|)∼|S|1-αandf(|S|)∼γ|S|, respectively. However, it is still restrictive enough as1-α⩾12andγ>0, so that the resulting problems remain NP-complete. Therefore, it is interesting to explore other types of functionf(·), particularly those that may possibly admit a polynomial time solution algorithm for finding subgraphs. Our results open an appealing avenue for future research work as they highlight “boundaries” for possible types of functionf(·)that should be considered in the context of the proposed general model of f-vertex-connectivity.In this section we provide linear mixed 0–1 programming formulations for finding maximumγ-relative-vertex-connected and general f-vertex-connected subgraphs. We generalize the network flow linear programming formulation; recall that k-vertex-connectivity between any pair of vertices can be checked via a maximum flow approach (Kammer & Täubig, 2005). In the remainder of this section we assumeγ|V|⩾2.First, we consider the problem of finding the maximumγ-relative-vertex-connected subgraphG[S]=(S,(S×S)∩E)⊆Gas given by Definition 1. Let variableuijstdenote the flow sent from vertexs∈Vto vertext∈Vthrough edge(i,j)∈E,s<t. Define 0–1 variablexito be equal to 1 iff vertexi∈S. Then we obtain the following mathematical program:(1)(γ-CP):max∑k=1|V|xk(2)subjectto∑j:(s,j)∈Eusjst-∑i:(i,s)∈Euisst⩾γ∑k=1|V|xk-1+(γ|V|-1)(xs+xt-2)∀s,t∈V,s<t,(3)∑i:(i,t)∈Euitst-∑j:(t,j)∈Eutjst⩾γ∑k=1|V|xk-1+γ|V|-1(xs+xt-2)∀s,t∈V,s<t,(4)∑j:(k,j)∈Eukjst⩽xk∀s,t∈V,s<t,∀k∈V⧹{s,t},(5)∑j:(i,j)∈Euijst-ujist=0∀s,t∈V,s<t,∀i∈V⧹{s,t},(6)xk∈{0,1},0⩽uijst⩽1∀s,t,k∈V,s<t,∀(i,j)∈E.By Definition 1 we need at leastγ(|S|-1)vertex-disjoint paths between any pair of vertices inG[S]. Thus, we should be able to send at leastγ|S|-1units of flow between each pair of verticess∈Sandt∈S, which is enforced by constraints (2)–(4). Constraints (4) also ensure that there is no flow through vertices inV⧹S. Constraints (5) are standard flow balance constraints.Next, consider the general case of finding the maximum f-vertex-connected subgraph. For a given functionf:Z>0→R+, defineck=⌈f(k)⌉,k=1,…,|V|. Also, letc¯=max1⩽k⩽|V|ck. Then formulation (1)–(6) is replaced by:(7)(f-CP):max∑k=1|V|xk(8)subjectto(4),(5),∑j:(s,j)∈Eusjst-∑i:(i,s)∈Euisst⩾∑k=1|V|ckzk+c¯(xs+xt-2)∀s,t∈V,s<t,(9)∑i:(i,t)∈Euitst-∑j:(t,j)∈Eutjst⩾∑k=1|V|ckzk+c¯(xs+xt-2)∀s,t∈V,s<t,(10)∑k=1|V|xk=∑k=1|V|kzk,∑k=1|V|zk=1,(11)xk,zk∈{0,1},0⩽uijst⩽1∀s,t,k∈V,s<t,∀(i,j)∈E.Constraints (8) and (9) are similar to (2) and (3) as they ensure that the obtained subgraphG[S]contains at leastf|S|vertex-disjoint paths between any pair of vertices inG[S]. Constraints (10) enforce the proper selection ofckin the right hand-sides of constraints (8) and (9), i.e.,∑k=1|V|ckzk=⌈f(|S|)⌉. Note that the number of binary and continuous variables in the proposed formulations isO(|V|)andO(|V|2|E|), respectively; the number of constraints isO(|V|3).Next, we develop an Exact Iterative Algorithm (EIA) for finding maximumγ-relative-vertex-connected and general f-vertex-connected subgraphs, which is based on the following rather simple observation: given a subsetSL⊆V, if a subgraphG[SL]is L-vertex-connected, i.e.,κ(G[SL])⩾L, andf(|SL|)⩽L, thenG[SL]is also f-vertex-connected. Conversely, if a subgraphG[S]is f-vertex-connected, then there exists a non-negative integer L such that the vertex connectivity ofG[S]is at least L andf(|S|)⩽L. Therefore, in order to solveγ-CPandf-CPone should simply find the largest subgraphG[SL]such that its vertex connectivity is L andf(|SL|)⩽L.Formally, consider the following MIP obtained by a slight modification of (7)–(11):(12)f-CP(L):max∑k=1|V|xk(13)subjectto(4),(5),∑j:(s,j)∈Eusjst-∑i:(i,s)∈Euisst⩾L(xs+xt-1)∀s,t∈V,s<t,(14)∑i:(i,t)∈Euitst-∑j:(t,j)∈Eutjst⩾L(xs+xt-1)∀s,t∈V,s<t,(15)∑k=1|V|xk⩽maxif(i)⩽L,i=1,…,|V|,(16)xk∈{0,1},0⩽uijst⩽1,∀s,t,k∈V,s<t,∀(i,j)∈E,where L is a fixed constant parameter,L∈{1,…,|V|}. Note that f-CP(L) is simpler and easier to solve than f-CP due to the absence of variableszk,k=1,…,|V|. In the remainder of the section whenever we refer to an optimal (feasible) solution of f-CP(L) or f-CP, we imply a subset of V obtained according to the values of binary variablesxk,k=1,…,|V|, in an optimal (feasible) solution of the respective MIP.Next, we formalize the above observation as follows:Proposition 4Given a graphG=(V,E)and a functionf(·)such thatf:Z>0→R+, letSL⊆Vbe an optimal solution off-CP(L), whereL∈{1,…,|V|}. Denote byS∗a subset of V that induces a maximum f-vertex-connected subgraph of G, i.e.,S∗is an optimal solution off-CP. Then:|S∗|=maxL∈{1,…,|V|}|SL|.Due to (15) for anyL∈{1,…,|V|}a subgraphG[SL]is f-vertex-connected; thus,SLis a feasible solution off-CP. Therefore:|S∗|⩾maxL∈{1,…,|V|}|SL|.On the other hand, letL∗=⌈f(|S∗|)⌉. Thus,S∗is a feasible solution of f-CP(L∗) and|S∗|⩽|SL∗|⩽maxL∈{1,…,|V|}|SL|,which concludes the proof. □Exact Iterative Algorithm (EIA) for solvingf-CPThe key idea of EIA (see pseudo-code in Algorithm 1 and the discussion below for the definition ofGL) is to iteratively solve a series of MIPs given by f-CP(L) for different values ofL∈{1,…,|V|}. Also, in order to boost its performance we introduce the following two enhancements:•We perform additional preprocessing to reduce the size of the input graph via vertex removal (see lines 2–5 in Algorithm 1). Specifically, ifG[S]is L-vertex-connected, then each vertex in S has the degree of at least L, i.e.,degG[S](v)⩾L, for allv∈S. Hence, ifL>maxdegG(v)|v∈VthenSL=∅andf-CP(L)does not need to be solved. Moreover, for any given L all vertices with a degree smaller than L do not need to be considered when solvingf-CP(L). In particular, letGLbe a subgraph of G obtained from G by iteratively removing vertices with a degree less than L until either all vertices inGLhave a degree of at least L, orGL=(∅,∅), i.e.,GLcontains no vertices and edges. Clearly, solvingf-CP(L)for G andGLprovides the same optimal solution.We iteratively decrease L until the upper bound on a subgraph size given by (15) is equal or smaller than the size of the best solution identified at previous iterations. This enhancement is valid iff(·)is a non-decreasing function, which is a natural assumption. Otherwise, one should simply modify line 14 of Algorithm 1 to consider allL⩾1.Clearly, the correctness of EIA follows from Proposition 4. We demonstrate EIA performance on a number of real-life and random graph instance in Section 6.An important special case of s-clubs (a diameter-based clique relaxation described in Section 1) is a R-robust 2-club proposed in Veremyev and Boginski (2012a, 2012b) (we assumeR∈Z>0), which is defined as a subsetS⊆Vsuch that for any pair of vertices v andv′in S there exist at least R vertex-disjoint paths of length at most 2 connecting them inG[S]. The motivation behind introducing this concept is the following observation. All 2-clubs ensure that there exists a very “short” path (of length at most 2) between any pair of vertices. Nevertheless, unlike cliques such graphs are potentially still vulnerable to specific vertex-targeted attacks (or errors). Generally speaking, the concept of attacks (or errors) in graphs is typically defined as “targeted” (or “not-targeted,” e.g., due to a random failure) disruptions that destroy certain graph elements (e.g., vertices) in order to interfere with a desirable graph property (e.g., vertex connectivity) (Albert, Jeong, & Barabási, 2000; Veremyev & Boginski, 2012a). One illustrative example of a very vulnerable 2-club is a star graph, i.e., a tree with one internal vertex and|V|-1leaves. All paths between leaves in this graph share a common vertex. Thus, it is easy to observe that removal (e.g., a failure due to an attack or error) of the internal vertex completely disconnects the graph.It is important to note that in the definition of R-robust 2-club, parameter R is fixed and does not depend on the size of S. However, it is natural to consider more “robust” (i.e., vertex-attack tolerant as in Veremyev & Boginski (2012a, 2012b)) subgraphs that require a larger number of vertex-disjoint “short” paths as their sizes grow. Based on this intuition, we define the following model:Definition 3γ-relative-robust 2-clubGiven a graphG=(V,E)and a fixed parameterγ∈(0,1], a subsetS,S⊆V, is called aγ-relative-robust 2-club if for any pair of vertices v andv′in S there exist at leastγ(|S|-1)vertex-disjoint paths of length at most 2 connecting them inG[S].Observe that 1-relative-robust 2-club is a clique and the following statement holds.Proposition 5For any fixedγ∈(0,1], ifS⊆Vis aγ-relative-robust 2-club, thenG[S]is also aγ-relative-vertex-connected subgraph.Moreover, we establish another interesting property ofγ-relative-vertex-connected subgraphs linking them toγ-relative-robust 2-clubs. (To simplify further discussion, if S is a 2-club, in the remainder of the paper we may refer to the induced subgraphG[S]as a 2-club as well.)Proposition 6For any fixedγ∈(1/2,1]andS⊆V, ifG[S]is aγ-relative-vertex-connected subgraph then S is also a2(γ-12)-relative-robust 2-club.First, observe that the degree of each vertex inγ-relative-vertex-connected subgraphG[S]is at leastγ(|S|-1). Therefore, any two non-adjacent vertices inG[S]have at least2γ(|S|-1)-(|S|-2)common neighbors, and any two adjacent vertices have at least2γ(|S|-1)-1-(|S|-2)common neighbors. As a result, we conclude that there are at least2γ(|S|-1)-(|S|-1)=2(γ-12)(|S|-1)vertex-disjoint paths of length at most 2 between any pair of vertices, which implies the necessary statement.□As mentioned above the problem of finding a maximum 2-club is NP-hard (Balasundaram et al., 2005). We refer to the decision version of this problem as the 2-CLUB problem. Next proposition demonstrates that thepq-RELATIVE-ROBUST 2-CLUB problem (defined according to Definition 3) is also computationally difficult.Proposition 7Thepq-RELATIVE-ROBUST 2-CLUB problem is NP-complete for any fixed positive integerspandqsuch thatpq∈(0,1].The problem is in NP since the number of paths of length at most 2 between any pair of vertices can be checked in polynomial time. The proof is constructed using a slight modification of the 2-CLUB problem and reduction to theγ-RELATIVE-ROBUST 2-CLUB problem. Specifically, it is rather easy to demonstrate that for any fixed positive integers p andq,p<q, the problem of deciding whether a given graphG=(V,E)contains a 2-club of size(q-p)k+2remains NP-complete. Next, for G and given positive integer k, we construct another graphG′=(V′,E′)and show thatG=(V,E)has a 2-club of size(q-p)k+2if and only ifG′=(V′,E′)has aγ-relative-robust 2-club of sizeqk+1.LetG1=(V1,E1)≡Kpk-1be a complete graph of sizepk-1, andG′=(V′,E′)is a graph such that:V′=V∪V1,E′=E∪E1∪{(i,j):∀i∈V,j∈V1}.Suppose that there exists a 2-clubVcof size(q-p)k+2in graph G. LetVc′=Vc∪V1. Then|Vc∪V1|=(q-p)k+2+(pk-1)=qk+1. The induced subgraphG′Vc′is aγ-relative-robust 2-club if there are at leastpqVc′-1=pkvertex-disjoint paths of length at most 2 between any pair of vertices. Next, we consider the number of paths for three possible types of vertex pairsi,j∈Vc′. Specifically,(1):i∈Vcandj∈Vc: there are|V1|=pk-1paths of length 2 through vertices inV1and one extra path inG[Vc]sinceG[Vc]is a 2-club.i∈V1andj∈V1: by construction both i and j are connected to all other vertices in the graphG′; thus, there areqk>pkpaths of length at most 2 between i and j.i∈V1andj∈Vc: there are|V1|-1=pk-2paths of length 2 from vertex i to j through vertices inV1⧹{i}and one direct path through edge(i,j). Moreover, sinceG[Vc]is a 2-club, then vertex j should have at least one neighborj′∈Vcand there exists a path from i to j through vertexj′. Thus, we have at least pk paths of length at most 2 between i and j.The discussion above implies thatG′Vc′is aγ-relative-robust 2-club.Conversely, suppose that there exists aγ-relative-robust 2-club induced byVc′⊆V′, such thatVc′=qk+1. LetVc=Vc′⧹Vc′∩V1. Observe thatVc⊆Vand|Vc′∩V1|⩽pk-1. By definition,GVc′contains at leastpqVc′-1=pkvertex-disjoint paths of length at most 2 between any pair of vertices inVc′. Thus, after the removal of anypk-1vertices fromVc′, the remaining subset of vertices remains a 2-club. Therefore,Vcis a 2-club.□Using a similar idea as in Section 1, we further generalize the proposed model as follows:Definition 4f-robust 2-clubGiven a graphG=(V,E)and a functionf(·)such thatf:Z>0→[1,+∞), a subsetS,S⊆V, is called an f-robust 2-club if for any pair of vertices v andv′in S there exist at leastf(|S|)vertex-disjoint paths of length at most 2 connecting them inG[S].Iff(|S|)=R(i.e., constant) then Definition 4 describes R-robust 2-clubs; iff(|S|)=γ(|S|-1)then Definitions 3 and 4 coincide. We may consider more complex types off(·)— such guaranteed existence of multiple short-path connectivity between any pair of vertices that depends on the size of the subgraph could be useful in communication, transportation and military networks to ensure reliable network functionality, in particular, in the presence of disruptions such as traffic jams, permanent or temporary component failures, unstable signals (links), or vertex/edge capacity constraints.In terms of finding maximumγ-relative-robust 2-clubs we extend MIPs for R-robust 2-clubs described in (Veremyev & Boginski, 2012a). As in Section 3, define 0–1 variablesxi,i∈V, to be equal to 1 iff vertexi∈S. Then:(17)(γ-RCP):max∑k=1|V|xk(18)subjectto1{(i,j)∈E}+∑k:{(i,k),(k,j)}⊆Exk⩾γ∑k=1|V|xk-1+(γ|V|-1)(xi+xj-2)∀i,j∈V,(19)xk∈{0,1}∀k∈V,where1denotes the standard indicator function (i.e., in (18) it returns 1 iff(i,j)∈E) and constraint (18) ensures that Definition 3 holds for the subgraph obtained according to the values of variablesxi,i∈V.Using the notation and ideas behindf-CP, formulationγ-RCPcan be generalized to obtain the following MIP for finding maximum f-robust 2-clubs:(20)(f-RCP):max∑k=1|V|xk(21)subjectto(10),1{(i,j)∈E}+∑k:{(i,k),(k,j)}⊆Exk⩾∑k=1|V|ckzk+c¯(xi+xj-2)∀i,j∈V,(22)xk,zk∈{0,1}.∀k∈V.Bothγ-RCPandf-RCPcontain onlyO(|V|)binary variables andO(|V|2)constraints, which results in more compact formulations than MIPs given byγ-CPandf-CP. Thus, requiring vertex-connectivity with “short” paths (i.e., lengths of paths are at most 2 as in Definitions 3 and 4) may potentially simplify the problem of finding large subgraphs with the desirable properties. On the other hand, it also reduces the sizes of the obtained subgraphs due to somewhat stricter requirements. These insights are also supported by the results of our computational experiments described below in Section 6.Finally, we note that EIA discussed in Section 4 can be easily extended to solve f-RCP. In particular, one should modify MIP f-RCP by changing the right-hand side in (21) similar to (14), remove constraints (10) and introduce an additional constraint (15). As in Section 4, we refer to the obtained MIP as f-RCP(L). In Section 6 whenever we use EIA to find either a maximum f-vertex-connected subgraph, or a maximum f-robust 2-club, we assume that either f-CP(L), or f-RCP(L) is used a subprocedure in EIA, respectively.In this section we describe a series of computational experiments performed using several classes of randomly generated (uniform and power-law) and real-life graph test instances. In particular, we are mostly interested in studying effectiveness of the proposed exact solution approach, namely, EIA. We also compare its performance with respect to the developed linear MIP formulations. Moreover, comparing the sizes of the obtained maximum subgraphs (includingγ-relative-vertex-connected and f-vertex-connected subgraphs, as well asγ-relative-robust 2-clubs) in different classes of test instances for a range of possible parameter values, we provide some insights that illustrate properties of the proposed clique relaxation models.In order to streamline the discussion in this section, we simply refer to the termsγ-relative-vertex-connected and f-vertex-connected subgraphs asγ-relative-connected and f-connected subgraphs, respectively.Our study is conducted on a Mac OS X machine equipped with an Intel Core i7 2.8GHz processor, 8GB of RAM and FICO Xpress-Optimizer 7.6 (FICO, 2013). The time limit of 50,000s is used in all computational experiments.We consider three classes of test instances: (i) uniform random graphs with 50 and 500 vertices denoted byu50andu500, respectively, (ii) power-law random graphs with 50 and 500 vertices denoted byp50andp500, respectively, and (iii) a subset of real-life networks obtained from the University of Florida Sparse Matrix Collection database (Davis & Hu, 2011) and Pajek datasets (Batagelj & Mrvar, 2006). In particular, for real-life networks we focus on instances, where the results of the respective optimization problems have meaningful interpretations, e.g., optimal solutions correspond to “highly connected subgroups” in social or communication networks that require a reasonably large fraction of their vertices to be removed in order to disconnect the subgroup. The parameters of the selected instances (including their sizes and network types, e.g., social, biological) are provided in Tables 1, and 5.Uniform random graphs are constructed according to a classicalG(n,p)model (Erdős & Rényi, 1959), where n denotes the number of vertices, and an edge between each pair of vertices is generated randomly and independently with probability p. Specifically, we use:p=0.15for instancesu50-1,…,u50-5 andp=0.05for instancesu500-1,…,u500-5.It is widely reported in the literature that many real-life networks (e.g., biological, financial, telecommunication, social) have a power-law structure (Faloutsos, Faloutsos, & Faloutsos, 1999; Newman, 2003), i.e., the probability that a vertex has degree k isΘ(k-β)for some constantβ, where the value ofβdepends on the network edge density. Thus, we also consider instances of power-law random graphs (i.e.,p50-1,…,p50-5 andp500-1,…,p500-5), which are generated as in Chung, Lu, and Vu (2004) to approximately match the edge densities of the corresponding classes of uniform random graphs described above (recall that the numbers of variables and constraints in the proposed MIP models depend on both|V|and|E|).Most of our computational experiments are focused on EIA because the algorithm significantly outperforms an approach based on solving MIPs using a standard solver. In order to demonstrate this observation we report comparisons of EIA withγ-CP, f-CP andγ-RCP in Table 7. However, we also improve the solver’s performance by applying a simple, but rather effective preprocessing procedure to reduce the sizes of the input graphs (via vertex and edge removal) and consequently decrease the sizes of the corresponding MIP formulations. The intuition behind our preprocessing procedure described in detail next, is similar to one of the enhancements used in EIA (see Section 4).First, consider the problem of finding a maximumγ-relative-connected subgraph. For a given graphG=(V,E)and anyγ(0<γ<1), letSγbe the corresponding subset of vertices that induces a maximumγ-relative-connected subgraphG[Sγ]in G. Assume thatSγˆ(or at least its cardinality|Sγˆ|) is known for someγˆ. Then|Sγ|⩾|Sγˆ|for anyγsuch that0<γ⩽γˆ. Therefore, for any vertexv∈V, ifdegG(v)<γ(|Sγˆ|-1), then it is easy to observe thatv∉Sγ. Thus, v can be removed from G. If nothing is known initially (e.g.,γ=0.9in Table 7), then one could simply useγˆ=1and pre-compute the size of the maximum clique in G (while this is an NP-hard problem, such approach is still computationally advantageous in our experiments).Following the same idea, this approach can be extended for a more general problem of finding maximum f-connected subgraphs. Next, consider the problem of finding a maximumγ-relative-robust 2-club. Note that we can remove all edges(i,j)∈Esuch that|NG(i)∩NG(j)|<γ(|Sγˆ|-1)-1as both i and j cannot be inSγsimultaneously. One important observation is that removal of any vertexv∈V(or edge(i,j)∈E) decreases the degrees of its neighborsv′∈NG(v)(or the degrees of i and j) in the updated graph. Thus, the proposed vertex and edge removals can be re-applied in an iterative manner.

@&#CONCLUSIONS@&#
