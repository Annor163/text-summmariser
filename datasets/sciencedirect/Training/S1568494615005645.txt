@&#MAIN-TITLE@&#
A computationally efficient genetic algorithm for MIMO broadcast scheduling

@&#HIGHLIGHTS@&#
Multiple-input multiple-output (MIMO) is suitable technique to ensure high speed data transmission as well as low delay communication networks.In MIMO, dirty paper coding (DPC) is an efficient scheme to support multiple users with optimum sum rate capacity of the system. However, DPC is a complex scheme where the user encoding sequence is important to transmit data to multiple users.An optimal exhaustive search as used in DPC is prohibited due to the extremely large size of the search space in this optimization problem.Evolutionary algorithm (genetic algorithm) can be used as an alternative for this optimization problem to reduce the complexity of the search (scheduling problem). The performance of the genetic algorithm with elitism and adaptive mutation is demonstrated to be near optimal as obtained with an exhaustive search. It has been demonstrated in this paper that GA achieves about 98–99% of system sum rate as obtained with DPC with significant reduction in time and computational complexity.The proposed BGA is able to provide the optimum solution well within the packet duration of modern wireless packet data communications.

@&#KEYPHRASES@&#
Multiple-input multiple-output (MIMO) scheduling,Genetic algorithms (GAs),Multi user MIMO (MU MIMO),Dirty paper coding (DPC),

@&#ABSTRACT@&#
In conventional single-input single-output (SISO) systems, the capacity is limited as base station can provide service to only one user at any instant. However, multiuser (MU) multiple-input multiple-output (MIMO) systems deliver optimum system capacity by providing service to multiple users (as many as transmit antennas) simultaneously according to dirty paper coding (DPC) scheme. However, DPC is an exhaustive search algorithm (ESA) where the user encoding sequence is important to transmit data to multiple users. Exhaustive search becomes imperative as the search space grows with number of users and number of transmit antennas in the MU MIMO system. This can be treated as an optimization problem of maximizing the achievable system sum-rate. In this paper, it has been demonstrated that combined user and antenna scheduling (CUAS) with binary genetic algorithm (BGA) adopting elitism and adaptive mutation (AM) achieves about 97–99% of system sum-rate obtained by ESA (DPC) with significantly reduced computational and time complexity. It has been shown that BGA is able to find the globally optimum solution for MU MIMO systems well within the time interval of modern wireless packet data communications. However, it is interesting to observe that BGA is able to find a solution to CUAS close to the optimum value quite rapidly. In this paper, it is also shown that BGA with elitism and AM achieves higher throughput than limited feedback scheduling schemes as well.

@&#INTRODUCTION@&#
High speed data communications is not ensured by conventional single-input single-output (SISO) system. The system throughput of SISO system is also limited by the available power and bandwidth. To increase data rate for fixed available power, the bandwidth of transmission needs to be increased. Bandwidth is a scarce entity. Multiple-input multiple-output (MIMO) systems gathered momentum as they ensure high channel capacity without consuming extra bandwidth or transmit power. Channel capacity of single user MIMO systems scales with min{M, N}, where M is the number of transmit antennas at the base station (BS) and N is the number of receive antennas at each user terminal (UT) as described in Refs. [1–4]. The advantages obtained with MIMO systems are spatial multiplexing [5,6], spatial diversity [7], array gain, and interference reduction.Multi-user (MU) MIMO systems achieve further gain in channel capacity by exploiting the concept of multi-user diversity (MUD). This can be experienced by the independent fading channels between BS and the multiple UTs. User and antenna scheduling is popular in delay tolerant MU MIMO systems where better system sum-rate is guaranteed. This is achieved by allowing UTs with good channel condition to receive data and the other users are delayed till the improvement of channel condition. A variety of MU MIMO scheduling algorithms [8–12] have been proposed in literature which take advantage of MUD. Good scheduling schemes make both the physical layer and multiple access control (MAC) layer work in tandem. This helps to allocate power optimally and to select best channel conditioned users for transmission of data streams with proper modulation techniques to maximize the system throughput. High-speed downlink packet access (HSDPA) systems use some of these cross layer scheduling techniques [13]. Cross-layer scheduling algorithms for MU MIMO are discussed in Refs. [14,15]. Scheduling is often treated as an optimization problem of either maximizing utility functions or minimizing cost functions.In SISO MU broadcast channel (BC), the optimal approach is to allocate all the available power to a single scheduled UT at any instant. On the contrary, near optimal throughput of MU MIMO BC system is obtained by scheduling multiple users simultaneously through a process known as dirty paper coding (DPC) [16], which is an interference pre-cancellation technique. According to DPC, the user data are encoded in a certain sequence at transmitter and decoded exactly in the reverse sequence of encoding at the receiver. The transmitter encodes each UT k to precancel the interference due to the previous (k−1) encoded users. The signal of previous (k−1) encoded users do not interfere with the desired signal of the present encoded UT k. However, the practical hardware implementation process of DPC is complex. In general DPC does not have any restriction on the number of UTs that can be encoded simultaneously. As per DPC scheme, the excess number of users than the number of transmit antennas are assigned with zero power. To obtain the system capacity as that of DPC, the BS needs to transmit to M number of users simultaneously as presented in Refs. [17,18].DPC is dependent on the UTs encoding sequence. Hence, to obtain the optimum value of the utility function (i.e., the system throughput) for MU MIMO BC systems with DPC implementation, the system needs to search through all possible ordered selections of UTs. Let a MU MIMO system with M number of transmit antennas at BS provide service to K number of geographically dispersed users each equipped with N number of receive antennas. For the above system to achieve system capacity as that of DPC, the transmitter should schedule M number of the best receive antennas among NK number of total receive antennas. As per DPC implementation, the total number of ordered selections is given by (1), which is huge for higher number of users:(1)NOrderedUsers=∑k=1M(k!)Kk.For a practical system, it will not be possible to perform an exhaustive search algorithm (ESA) as in DPC which can explore this huge search space during a normal scheduling interval (generally few milliseconds). Therefore, in this paper we implement evolutionary algorithm (Binary Genetic Algorithm (BGA)) to carry out the scheduling to obtain the maximum of system sum-rate obtained by DPC in a relatively short span of time. Furthermore, it is demonstrated that BGA may take some time to find the globally optimum solution for scenarios of higher order MIMO systems with larger number of users. It successfully finds a solution in the vicinity of the near-optimum value swiftly.GA has been used in Ref. [14,15] for the cross-layer scheduling of MU MIMO single carrier and multicarrier systems respectively. In recent studies [15,19], GA along with adaptive mutation (AM) is preferred. In Ref. [19], authors applied self adaptive crossover, mutation and elitism to MU MIMO system with one receive antenna UTs. Authors in Ref. [19] considered precoding matrices, Zero Forcing Beamforming (ZFB) and water-filling algorithm for optimum power allocation. Joint antenna and user selection scheme is implemented with different evolutionary algorithms for MU MIMO uplink system [20,21]. These works motivate us to consider the use of BGA for combined user and antenna scheduling (CUAS) for MU MIMO BC systems.In this paper, system sum-rate of single carrier MU MIMO BC is optimized by implementing BGA with elitism and AM. Random beamforming (RBF) is followed in this paper as described in [22,23]. As replacement to DPC, suboptimal user and antenna scheduling algorithms with limited feedback and less complexity are proposed in literatures [22–30]. The system model considered in this paper is similar to [23] and full feedback scheduling scheme among the three schemes discussed there attains the maximum sum-rate. Hence, full feedback scheduling scheme in [23] is selected for comparison with DPC and proposed BGA.In this paper, we show the system throughput due to ESA can be achieved by implementing the processes of BGA to CUAS with less computational complexity as compared to ESA. Moreover, it is also shown that the system sum-rate achieved by BGA with elitism and AM is more than the limited feedback scheduling schemes (e.g., full feedback scheduling scheme in Ref. [23]).The remaining portion of this paper is organized as follows. Section 2 discusses the system model considered for MU MIMO BC system. The scheduling for MU MIMO BC system using BGA is discussed in Section 3. In Section 4, the simulations results are presented and discussed. Both throughput and computational complexity performance of BGA is compared with the optimal ESA. Statistical performances of the current methodology of GA is also presented in this section. Finally, in Section 5 the paper is being concluded with a brief conclusion.In this paper, MU MIMO Gaussian broadcast channel is considered. There are K number of geographically dispersed active users, each user is equipped with N number of receive antennas. The entire cell is served by a BS with M number of transmit antennas. The considered MIMO cellular system is single carrier system. We assume that the wireless channel is perfectly known at the transmitter. Generally in a typical cellular system, it is observed that the number of active users is much larger than the number of transmit antennas at BS. The receiver (UT) is equipped with less number of receive antennas compared to the number of transmit antennas at BS. Hence, throughout this paper, we assume K≫M and M≥N. The received signal at the kth user in any time slot t:(2)Ykt=αkHktXt+Wkt,k=1,…,KwhereYktis a vector of dimension N×1 represents the received signal by the user k at time slot t,Hktrepresents the channel matrix at time slot t of dimension N×M and (n,m)th entryhkt(n, m)∼CN(0,1)is independent and identically distributed (i.i.d) complex Gaussian channel gain coefficient with zero mean and unit variance. Each element of this channel matrix is the complex channel gain coefficient from transmit antenna m to receive antenna n of user k at any time slot t. Transmitted signal from all M transmit antennas of the BS is given by Xtat time slot t, which is a vector of size M×1. The complex white additive Gaussian noise with zero mean and variance N0 isWkt, which is of size N×1. All the elements ofWktare i.i.d complex Gaussian with zero mean and variance N0.αkmodels the power attenuation due to path loss and shadowing effect.It is assumed that the total transmit power is equal to unity, i.e.,Tr(Xt[Xt]H)=1, where Tr(.) is the trace of a matrix. This assumption ensures that the total transmit power is independent of the number of transmit antennas at the BS. For simplicity time slot parameter t is removed here after. The received signal of the user k at the receive antenna n is expressed as:(3)yk(n)=αk∑m=1Mhk(n,m)x(m)+wk(n)wherewk(n)is the additive white Gaussian noise for the receive antenna n of the user k. Let the signal x(m) is the desired signal for the kth user and the interference signals for kth user are x(m′), m′≠m. Then, the instantaneous signal-to-interference-plus-noise ratio (SINR) for yk(n) can be expressed as:(4)SINRm,n(k)=|hk(n,m)|2(M/ρk)+∑m′≠m|hk(n,m′)|2where ρk=(αk/N0) is the average signal-to-noise ratio (SNR) of UT k. We consider ρk= ρ for k=1, …, K (i.e., homogeneous network).We use sum-rate capacity and throughput interchangeably throughout this paper. The higher limit of the achievable system capacity can be expressed as below:(5)Csum(H1,…,HK)≤E∑m=1Mlog21+max1≤k≤K,1≤n≤NSINRm,n(k)where E[b] is the mathematical expectation value of b. H1, …, HKare the K channel matrices of K users representing the channel conditions. The instantaneous system sum-rate capacity with the feedback of SINR values can be expressed as in Ref. [23]:(6)Csum(H1,…,HK)=∑m=1Mlog21+max1≤k≤K,1≤n≤NSINRm,n(k)According to DPC, BS can provide service to M users simultaneously. It is the responsibility of the scheduler to assure that M best users are selected out of K UTs. In other words, the scheduler needs to select M number of receive antennas of different UTs out of total N×K number of receive antennas. Moreover, DPC depends on the sequence of user encoding at BS. The possible ways of selecting M number of users with distinct encoding orders is given in (1), which is large enough to be considered during an interval of few milliseconds. As in modern communication systems BS has dedicated DSP processors for carrying out the complex multiplications and additions as required by the complex signal processing, some complexity is being transferred to the algorithm which will be executed in the BS. Hence, in this paper we propose to evaluate a subset of this large possible collection of user sequences by imposing the below mentioned constraints as:(I)The unique ordering of the user sequence is relaxed, i.e., the combination of same M users will be examined once instead of examining all the possible combinations of these M users.Every transmit antenna should send independent data streams to different users, i.e., a user sequence should have always distinct users without repetition.Any of the transmit antenna should not be idle, i.e., always M number of unique users should be scheduled for M transmit antennas.(7)NUniqueUserSequence=KM.However, this number increases exponentially with increase in number of users and transmit antennas. Hence, in this section, we discuss the methodology of BGA to search near optimum with less computation complexity. Let us assume that θ represents a particular sequence of M number of users out of K total active users and θ is an element of a superset Θ (the collection of all possible unique user sequences as given in (7)), i.e., θ∈Θ and θi={θi1,θi2, …,θiM}, 1≤i≤|Θ|, where |A| denotes the cardinality of set A. Then, the system sum-rate capacity achieved by a particular selected user sequence is(8)Csum(θ,H1,…,HK)=∑m=1Mlog21+maxk∈θ,1≤n≤NSINRm,n(k)The set of receive antennas resulting in maximum SINR corresponding to each transmit antenna are stored in a vector as Ni={ni1,ni2, …,niM}. The current problem of selecting M favourable receive antennas of distinct users resulting in the maximum system throughput can be modelled as the below mentioned combinatorial optimization problem(9)maxθ∈ΘCsum(θ,H1,…,HK),i.e.,maxθ∈Θ∑m=1Mlog21+maxk∈θ,1≤n≤NSINRm,n(k)The optimal user sequence resulting in the maximum sum-rate is denoted asθopt=argmaxθ∈ΘCsum(θ,H1,…,HK). The set of selected receive antennas of the users present in θoptis represented by Nopt={Nθopti=1i=1, …,Nθopti=Mi=M}, whereNθoptii=argmax1≤n≤NSINRi,n(θopti). The pseudo code explaining the execution of (9) is given below:FindingθoptandNopt.1:INITIALIZE θopt←{ϕ}.2:INITIALIZE Nopt←{ϕ}.3:fori = 1 to |Θ| do4:INITIALIZE θopt,i←{ϕ}.5:INITIALIZE SINRopt,i←{ϕ}.6:INITIALIZE Nopt,i←{ϕ}.7:INITIALIZEMAXSINRVECTORmi←{ϕ}, 1≤m≤M.8:INITIALIZERXANTENNAVECTORmi←{ϕ}, 1≤m≤M.9:form = 1 to Mdo10:Km←θim.11:form1 = 1 to Mdo12:INITIALIZE SINR* = 0.13:INITIALIZE Rx* = 0.14:forn = 1 to Ndo15:Compute SINR =SINRm1,n(K)as per (4).16:ifSINR≥SINR*then17:SINR* = SINR.18:Rx* = n.19:end if20:end for21:MAXSINRVECTORmi=MAXSINRVECTORmi∪SINR*.22:RXANTENNAVECTORmi=RXANTENNAVECTORmi∪Rx*.23:end for24:end for25:form2 = 1 to Mdo26:SINRopt,im2=maxMAXSINRVECTORmi(m2)∀m∈{1, …, M}.27:Updateθopt,im2with the corresponding user index.28:UpdateNopt,im2with the corresponding entry inRXANTENNAVECTORmi(m2).29:end for30:end for31:fori = 1 to |Θ| do32:form3 = 1 to Mdo33:θopt= θopt∪ {user index fromθopt,im3corresponding tomaxSINRopt,im3}.34:UpdateNoptm3with the corresponding entry inNopt,im3.35:end for36:end forESA needs to evaluate all the possible user sequence options Θ given in (7) to maximize (9). Quite a huge number of function evaluations are needed to be performed for such a huge search space. Such a huge number of computations cannot be accomplished within the time limit of current packet data systems where the time slots are of the order of few milliseconds as shown in Ref. [13]. Hence, ESA becomes computationally inefficient. Algorithms with lower computational complexity is preferred for high data rate communications. Hence, optimization methods with less computational complexity are desired for such huge search space optimization problems. Refs. [14,15,19] have already implemented GA to perform similar activities for MIMO systems.The advantage of using GA is its capability of delivering near-optimal performance with much lower computational complexity. Further, GAs are also known for their speed of operation. Though GAs may not be able to have the most optimal solution very quickly, generally GAs can find a very good solution to the optimization problem within a short time. In 1975, Holland considered the evolutionary algorithms which can mimic the evolution process of biological systems [31]. One more advantage with GA is that they can handle non convex optimization functions also, which may not be the case with other optimization techniques. Furthermore, GAs can handle discontinued and other abnormal utility functions conveniently which may not be handled by other optimization methods. This really makes GAs better suitable candidates for scheduling problems where quality of service (QoS) can have much importance.In this subsection, binary genetic algorithm (BGA) is discussed which is utilized for optimal user scheduling with reduced computational complexity. Different parameters and notations used in BGA are presented below•F denotes the utility function as expressed in (9).Ncis the number of genes present in a chromosome and Nc= M×⌈log2M⌉. This represents the binary representation of M randomly chosen users.P is the population size, i.e., the number of chromosomes to be evaluated for utility function.Pcand Pmdenotes the probability of crossover and mutation respectively.Ngdenotes the number of generations.SelectedUsers is a row vector of size M which stores the M users selected by BS to be served.SelectedReceiveAntennas is also a row vector of size M which stores the selected receive antennas of the selected users present in SelectedUsers.Step 0:(I)Initialize the generation counter to 1 and generate a random initial population, i.e., a P×Ncmatrix of randomly generated bits of “0” or “1”.Each row represents a selection of θ and is represented as a binary stringζ=[ω1k1,…,ω⌈log2M⌉k1,…,ω1kM,…,ω⌈log2M⌉kM],ωim∈[0,1]∀1≤i≤⌈log2M⌉,1≤m≤M.The binary representation of the user randomly selected to be served by mth transmit antenna is present in the mth ⌈log2M⌉ bits of ζ.For example, let us consider a case with M = 3, N = 2, and K = 40. Suppose 39th user, 24th user, and 7th user are randomly selected to be served by three transmit antennas at BS. Then, Nc= ⌈log240⌉ = 6. Hence, θ representing this selection will be[1,0,0,1,1,1,︷Representationof390,1,1,0,0,0,︸Representationof240,0,0,1,1,1︷Representationof7].Initialize SelectedUsers and SelectedReceiveAntennas with vector of M zeros.Step 1:(I)Validate each chromosome for the below mentioned set of constraints for better performance by GA.(A)Every transmit antenna should send independent data streams to different users, i.e., none of the rows of the population should have repetitive user index.All the rows of the population should be unique, i.e., different combinations of users will be evaluated in less span of time.Any user index should not be either zero or any value more than the number of users, i.e., K.If any constraint is violated by any chromosome then some bits need to be toggled randomly and this process should be repeated until none of the aforementioned constraints are violated.Step 2:(I)Update Θ with the present population.Evaluate the fitness of each chromosome by evaluating (9).The chromosomes will be sorted in the descending order of their fitness.Update SelectedUsers = θopt, i.e., the first user sequence after sorting.Also, update SelectedReceiveAntennas = Nopt.The breeding probability associated with a chromosome i is expressed as:(10)pbreeding_i=Ci∑p=1PCpStep 3:(I)The probability of crossover Pcis assumed to be unity.Randomly selected parents (according to (10) crossover T(=0.5×P×Pc) times to generate P×Pcchildren.In this paper, “one-point” crossover is followed. In this method, a point along the length of the chromosome is being selected randomly. The parts of the parent chromosomes till this point remain unaltered and beyond this point the portions of the parent chromosomes are swapped to form two new chromosomes known as children.By the process of crossover, the information of the parent chromosomes combine in such a fashion that the partial characteristics of a good chromosome is being transferred into a new chromosome to have a better solution (e.g., better user sequence to be scheduled).Step 4:(I)Introduce mutation (i.e., toggling of bit values) to the newly formed children from crossover process to introduce randomness to the optimization of the utility function.Pmis the probability of mutation.The total number of genes undergo mutation are ⌈P×Pc×Nc×Pm⌉.In the process of mutation, the randomly selected gene of the randomly selected child gets toggled, i.e., a bit of “0” will be replaced with a bit of “1” and vice versa (as we are dealing with BGA, where a bit “0” or a bit “1” are the only two possibilities for any gene).In this paper, we follow adaptive mutation where the value of Pmwill change depending on the mean and standard deviation of the current population rather than being fixed at a specific value as done in simple mutation. Hence, any random bit in the children generated from crossover is toggled with a probability given as(11)Pm=1β1+β2σP/μPwhere β1 = 1.2 and β2 = 10 (randomly chosen as [15]) are constants used in our experiment, σPand μPare the standard deviation and mean of the fitness of the current population before selection respectively.Throughout this paper, the value of Pmis assumed to be 0.1 for the experiments without AM and for AM Pmis computed as per (11).Step 5:(I)Impose the aforementioned set of constraints on the newly formed chromosomes after the process of crossover and mutation for better performance of GA.If any constraint is violated by any newly formed chromosome then some bits need to be toggled randomly and this process should be repeated until none of the aforementioned constraints are violated (Fig. 1).Step 6:(I)Follow elitism and pass on the best P chromosomes of the present generation to the next generation.Update Θ with the present population including all parents, children formed by crossover and mutants formed after mutation.Evaluate the fitness of each chromosome by evaluating (9).Then, sort the current population in the descending order according to the fitness value.Update SelectedUsers = θopt, i.e., the first user sequence after sorting.Also, update SelectedReceiveAntennas = Nopt.Update Θ with the first P chromosomes by discarding the others and pass on to the next generation.This process assures better fitness by the subsequent generations. The process of elitism is shown in Fig. 2.Step 7:(I)Check the generation counter.if (generation counter <Ng) then,-Increment the generation counter by 1.Go to Step 2 and repeat the steps.Terminate the process.The system throughput will be the fitness value of the first chromosome according to (9).Update SelectedUsers = θopt, i.e., the first user sequence after sorting.Also, update SelectedReceiveAntennas = Nopt.In this section, simulation results obtained for various scenarios are presented for performance comparison of the proposed BGA for user scheduling problem of MU MIMO BC networks. The suboptimal scheduling algorithm (full feedback scheduling algorithm of [23]) is also considered for comparison with the throughputs obtained by DPC and by the BGA presented above. We have presented system sum-rate comparison for GA with and without elitism and AM to emphasize the advantages obtained by these methods. For performance comparison, we have chosen four real time scenarios used in [21] as (M, N, K, P, Ng) = (6, 2, 20, 20, 25), (7, 2, 25, 25, 25), (8, 2, 26, 26, 25), and (10, 2, 30, 30, 25). Figs. 4–7illustrate the achievable system sum-rate by ESA(DPC), random search, suboptimal algorithm of [23], BGA with and without elitism and AM for these different scenarios. In random search method, a user sequence is selected randomly and then the receive antennas which attain the optimum system sum-rate are selected as per the pseudo code explained earlier [32]. It is observed that BGA with the implementation of elitism and AM achieves the optimal system capacity as DPC for a wide range of system SNR values. Each point in these figures is the average of 100 independent runs. In each run channel matrices of all users (i.e., H1,…,HK) are generated independently.The result of ESA (DPC) is assumed to be the optimal value for finding out the performance metric of different methods. We calculated the percentage deviation from optimal (PDFO) for random search, full feedback suboptimal algorithm of [23], BGA with and without elitism and AM as discussed in Ref. [21]. The percentage deviation from optimal is defined as follows:(12)PDFO(ϕ)=(CsumESA)−CsumϕCsumESA×100,where ϕ can be random search, suboptimal algorithm [23], BGA with and without elitism and AM. PDFO for the above mentioned four scenarios are illustrated in Figs. 8–11. It is important to observe that BGA with elitism and AM has the least PDFO (very close to zero) among random search, suboptimal algorithm, and BGA with and without elitism and AM for a wide rangeof system SNR values. Each point in these figures also is the average of 100 independent runs.Figs. 12 and 13exhibit the per generation performance of BGA with and without elitism and adaptive mutation. This performance is evaluated for two different scenarios of (M, N, K, P, Ng) = (8, 2, 20, 20, 10), and (10, 2, 20, 20, 10). Simulation results show that the performance of BGA with elitism and AM is better than BGA without elitism and AM. It is important to observe that the fitness increases in the initial generations and then decreases gradually for BGA with elitism and AM. However, no such specific observation can be made from the simulation results of BGA without elitism and adaptive mutation. There are 100 independent runs are averaged for each point in the figures.The stochastic nature of BGA in CUAS problem for MU MIMO BC is explored in Figs. 14–16and Table 1. For these figures and table, four different scenarios are considered as (M, N, K, P, Ng, SNR in dB) = (8, 2, 30, 30, 10, 10), (8, 2, 30, 30, 10, 20), (10, 2, 30, 30, 10, 5), and (10, 2, 30, 30, 10, 20). Each point in these figures is an average value of 1000 independent simulation runs. The empirical distribution of histogram of sum-rate capacities achieved by BGA with and without elitism and AM are illustrated in Figs. 14–16. These simulation results express that BGA with elitism and adaptive mutation achieves more consistent and better solutions than BGA without elitism and AM. The statistical data like minimum (min, worst), maximum (max, best), median, mean (average), and standard deviation are presented in Table 1. This shows that standard deviation achieved by BGA with elitism and AM is close to zero.The computational complexity comparison of DPC and BGA is presented in this subsection. The number of times the utility function (9) gets evaluated for the proposed methodology of BGA can be expressed as follows:(13)NGA=(P+2×⌈P×Pc⌉)×Ng.Further, the total number of complex multiplications and additions (CMA) performed by different algorithms are considered as a measure of computational complexity as discussed in [21]. It can be observed from (4) that 2M number of complex multiplications and additions are required for calculating a SINR value. TotalN×MSINR terms exist for each user. Hence, for a user 2M2N number of CMA are required for (6). Each sequence of M number of unique users, i.e., θ∈Θ, requires 2M3N number of CMA. For ESA (DPC), the number of possible unique user sequences is given as (7). Hence, ESA (DPC) will require total2M3NKMnumber of CMA. BGA with elitism and AM will require2M3N×NGAnumber of CMA. To accomplish these CMA, dedicated multi-core DSP processors are used by modern day packet data communications and signal processing systems as discussed in [21]. The ability of implementation and feasibility of ESA (DPC) and proposed BGA for practical systems is analysed in Table 2.Table 2 represents the number of CMA required and computation time required by high computational DSP processors like multi-core ARM and DSP processor 66AK2Ex series of Texas Instruments (this processor has the capability of performing up to 44.8 Giga multiply-accumulate per second (GMACS)) for different MIMO configurations, i.e., different search space with different parameters. The comparison shows that proposed BGA with elitism and adaptive mutation spans less time than ESA (DPC). Implementation of proposed BGA is quite feasible in the duration of packet data communications which is in the order of few milliseconds [13–15].

@&#CONCLUSIONS@&#
