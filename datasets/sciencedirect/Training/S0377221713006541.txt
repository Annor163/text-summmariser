@&#MAIN-TITLE@&#
Minimum vertex cover problem for coupled interdependent networks with cascading failures

@&#HIGHLIGHTS@&#
Minimum vertex cover problem is extended to the framework of interdependent networks.Cascading failure mechanisms in coupled interdependent networks are considered.NP-completeness of all introduced problems is shown.Linear 0–1 formulations are developed; generalized LP approximation ratio is derived.The concept of “depth of cascade” is proposed and analyzed.

@&#KEYPHRASES@&#
Interdependent networks,Minimum vertex cover,Cascading failures,Depth of cascade,Linear 0–1 formulations,LP approximation,

@&#ABSTRACT@&#
This paper defines and analyzes a generalization of the classical minimum vertex cover problem to the case of two-layer interdependent networks with cascading node failures that can be caused by two common types of interdependence. Previous studies on interdependent networks mainly addressed the issues of cascading failures from a numerical simulations perspective, whereas this paper proposes an exact optimization-based approach for identifying a minimum-cardinality set of nodes, whose deletion would effectively disable both network layers through cascading failure mechanisms. We analyze the computational complexity and linear 0–1 formulations of the defined problems, as well as prove an LP approximation ratio result that generalizes the well-known 2-approximation for the classical minimum vertex cover problem. In addition, we introduce the concept of a “depth of cascade” (i.e., the maximum possible length of a sequence of cascading failures for a given interdependent network) and show that for any problem instance this parameter can be explicitly derived via a polynomial-time procedure.

@&#INTRODUCTION@&#
Modern infrastructures consist of heterogeneous networked systems, such as electricity, telecommunication, and transportation; moreover, these systems interact with each other (i.e., interdependent systems). The functionality of the whole interdependent system is ensured only if each of the underlying network layers is operational. A common example of such a situation is the operation of a network that depends on electricity as an essential source of power provided to its nodes (i.e., telecommunication or computing devices), whereas nodes in an underlying electricity network may in turn be controlled by nodes in a computer/communication (i.e., SCADA) network.In general, the patterns of interdependence between infrastructure systems can be rather complex, with different types of commodities or information being sent via interdependent links. Virtually all modern infrastructures depend on each other in a variety of ways; therefore, it is important to study the interactions within this heterogeneous large-scale infrastructure system. Rigorous quantitative analysis of this entire complex system is challenging; however, recent studies have started to analyze its subsystems containing two interconnected (coupled) networks, such as electric power and telecommunication networks.Clearly, electric power is an essential component of modern infrastructures. The overwhelming dependence on electricity presents the challenge of determining strategies for reliable and secure energy supply. With infrastructures operating near their physical limits, the reliability of the systems may decrease. The recent power outage caused by a short-circuit in North Gila, Arizona affected millions of people in California, Arizona, and Mexico on September 8th, 2011. The transportation infrastructure was dramatically affected in urban areas due to the lack of power. Energy systems appear to be very vulnerable due to mutual dependencies with other infrastructures. One of the recent examples of cascading failures in interdependent infrastructures occurred in Italy on September 28th, 2003, where a shutdown of a power station led to failures of communication (SCADA) network nodes, which were used for controlling the electricity network, which in turn led to further failures in the power network, thus creating a sequence of catastrophic cascading failures (Buldyrev, Parshani, Paul, Stanley, & Havlin, 2010). A similar illustrative example of such coupled interdependent networks is given in Fig. 1. The power grid network is depicted using the well-known IEEE 118-bus test case, which represents a portion of the U.S. power grid in the Midwestern states in 1960s. For illustrative purposes, the SCADA network was randomly generated assuming the power-law degree distribution and placed separately in the picture. Interdependent links connect the nodes between the networks (only a few of such links are shown for illustrative purposes). Note that in general, multiple interdependent links may be outgoing from or incoming to a node, thus creating the possibility of “one-to-many” and “many-to-one” relationships between nodes in different networks, which generalizes the “one-to-one” relationships in the model of Buldyrev et al. (2010). The corresponding types of interdependencies, which may cause cascading failures, will be formalized in subsequent sections, and computational experiments on this illustrative example in the context of the defined problems will be presented.Although quantitative analysis of network robustness can be addressed from a variety of perspectives, an intuitive and classical measure of robustness is the minimum number of nodes (absolute, or relative to the size of the whole network) that need to be disabled in order to disrupt the functionality of the entire network. Obviously, if this number is small compared to the overall number of nodes in a network, then one can conclude that a network is vulnerable to attacks, whereas if this number is comparable with the size of the whole network, then such a network is more robust with respect to random or targeted disruptions. From an optimization perspective, if an adversary possesses complete information about the topology of a given network, he can solve an optimization problem of identifying a minimum-cardinality set of nodes that need to be disabled in order to limit the operational capabilities of the residual network. For instance, if the requirement is to limit the size of the remaining connected components by a pre-defined threshold L, such a problem is referred to as the cardinality-constrained critical node detection problem (Arulselvan, Commander, Shylo, & Pardalos, 2011; Veremyev, Boginski, & Pasiliao, 2013). In the special case of L=1, this problem is reduced to the classical minimum vertex cover problem, which identifies a minimum-cardinality set of nodes that “touches” every edge in a network, thus resulting in a residual network with no edges after all nodes in the minimum vertex cover are disabled.In this paper, we define and analyze the generalization of the minimum vertex cover problem to the case of two-layer interdependent networks, taking into account the possibility of cascading failures that may be caused by two common types of interdependence. To our knowledge, this is the first study that extends this classical optimization problem to the interdependent network framework. Identifying the minimum-cardinality set of nodes whose deletion would effectively destroy the network is useful from both attack and defense perspectives. In the former setup, the attacker identifies an optimal set of nodes that need to be disabled, whereas in the latter setup, the defender has an opportunity to protect an identified set of nodes and potentially interfere with the propagation of cascading failures.There has been substantial body of recent work on analyzing robustness of interdependent networks, including general concepts and challenges (Rinaldi, Peerenboom, & Kelly, 2001; Amin, 2002; Little, 2002; Rinaldi, 2004), performance of interdependent networks under vertex or edge removals and related risk assessment issues (Dueñas-Osorio, Craig, & Goodno, 2004, 2007a, 2007b; Newman et al., 2005; Ouyang, Hong, Mao, Yu, & Qi, 2009; Reed, Kapur, & Christie, 2009), as well as analytical and simulation approaches to studying cascading failures in interdependent networks (Simonsen, Buzna, Peters, Bornholdt, & Helbing, 2008; Luiijf, Nieuwenhuijs, Klaver, van Eeten, & Cruz, 2009; Buldyrev, Shere, & Cwilich, 2011; Gao, Buldyrev, Havlin, & Stanley, 2011; Barrett et al., 2010; Parshani, Rozenblat, Ietri, Ducruet, & Havlin, 2010; Shao, Buldyrev, Havlin, & Stanley, 2011). However, most of the previous quantitative studies of interdependent networks primarily focus on simulation and lack an exact optimization-based approach. This article attempts to explore this research direction.Organization. The remainder of the paper is organized as follows. Section 2 summarizes basic definitions used in this study. Section 3 proposes mathematical programming formulations and proves related analytical results for the considered problems. Section 4 proves NP-completeness of the decision versions of all the considered problems. Section 5 presents the results of computational experiments. Section 6 concludes the discussion and identifies potential directions of future work.We model a coupled interconnected infrastructure as a two-layer interdependent network with graphs G1=(V1,E1), G2=(V2,E2) being its layers with sets of nodes V1={1,…,n1}, V2={1,…,n2} (n1+n2=n), and edges E1, E2. We assume that some nodes in one layer depend on nodes in the other layer, and denote by E12, E21 the sets of interdependent links, meaning that if (i,j)∈E12, then node j∈V2 depends on node i∈V1. For example, in the network depicted in Fig. 2: E12={(2,1),(2,2),(3,3),(4,3)} and E21={(4,4),(3,2)}. For simplicity, we denote the entire coupled interdependent network as G(2)=((V1,E1),(V2,E2),E12,E21). We assume that the set of initially failed/attacked nodes causes subsequent failures of other nodes stage-by-stage due to interdependence (sets E12,E21), similar to the assumptions of Buldyrev et al. (2011). The motivation for this assumption is the fact that in many cases cascading failures do not spread instantaneously, but rather with some delay between cascade stages (Bienstock, 2011). We assume that the number of cascading stages is bounded by a fixed pre-specifined parameter S.In this paper we consider two common types of interdependence: Type 1 (“one-to-many”) and Type 2 (“many-to-one”).Definition 1An interdependent network has Type 1 failure causality if the failure of one node causes the failure of all of its dependent nodes.An interdependent network has Type 2 failure causality if the failure of one node is caused only by the failures of all nodes it depends on.For any given interdependent network G(2), type of interdependence and the number of cascading stages S, the stages of cascade and the vertex cover are defined as follows.Definition 3Cascade StageLet the initial set of failed/attacked nodes belong to stage 0. Then for any s∈{1,…,S}, stage s contains nodes that either belong to stage (s−1), or have been failed due to the dependence on nodes in stage (s−1).A vertex cover of G(2) is a set of nodes in V1∪V2 whose failure causes the failure of vertex cover sets in graphs G1 and G2 at stage S through the corresponding cascading failure mechanisms.For the given interdependent network G(2), type of interdependence and the number of cascading stages S the minimum vertex cover problem asks for the minimum cardinality vertex cover in G(2).Fig. 3illustrates stage-by-stage node failures caused by disabling two nodes at stage 0 (hatched, Fig. 3(b)), assuming Type 1 interdependence and S=2. At stage 2, every edge in both layers is “touched” by failed nodes, thus the initially failed nodes represent a vertex cover of this interdependent network (Fig. 3(a)). Fig. 4illustrates the same situation assuming Type 2 interdependence. Due to a different nature of interdependence, the number of nodes in the vertex cover is three, which means that more nodes need to be disabled at stage 0 in order to achieve the same result by stage 2.Note that if both sets E12, E21 are empty, then no failure propagation occurs, and the considered problem becomes the classical minimum vertex cover problem on a simple undirected graph G1∪G2.Denote A11, A22, A12, A21 as the adjacency matrices for the sets of edges E1, E2 and the sets of interdependent links E12, E21, respectively, with the corresponding elementsaij11,aij22,aij12,aij21. Define the binary variablesvlisthat show whether node i in layer l (l=1,2) fails by stage s (vlis=1if it does fail, andvlis=0otherwise). Using these variables, the linear 0–1 formulation for the minimum vertex cover in G(2) problem can be written as follows:Problem 1F1(1)minimize∑l=1,2∑i∈Vlvli0(2)subject tovliS+vljS⩾1,∀(i,j)∈El,l=1,2,(3)v1is⩾1n2+1v1is-1+∑j∈V2aji21v2js-1,∀i∈V1,s=1,…,S,(4)v2is⩾1n1+1v2is-1+∑j∈V1aji12v1js-1,∀i∈V2,s=1,…,S,(5)v1is⩽v1is-1+∑j∈V2aji21v2js-1,∀i∈V1,s=1,…,S,(6)v2is⩽v2is-1+∑j∈V1aji12v1js-1,∀i∈V2,s=1,…,S,(7)vlis∈{0,1},∀i∈Vl,l=1,2,s=0,…,S.Constraints (2) ensure that the nodes failed by stage S form a vertex cover in the entire two-layer network. Constraints (3) and (4) recursively model stage-by-stage node failures (in both layers) caused by the failures of nodes belonging to stage 0. Constraints (5) and (6) reflect the condition that the nodes that have not yet been affected by cascading failures by stage s remain operational at stage s.The formulation (1)–(7) contains (S+1)n binary variables and ∣E1∣+∣E2∣+2Sn constraints. The next section describes a slightly more compact formulation for the same problem utilizing the nature of Type 1 interdependence, which contains n binary variables and ∣E1∣+∣E2∣ constraints (i.e., the number of entities does not depend on S).Moreover, for the tighter LP relaxation, constraint (3) can have∑j∈V2aji21,∀i∈V1instead of n2, and constraint (4) can have∑j∈V1aji12,∀i∈V2instead of n1. Although we use these observations in the computational experiments, for the sake of readability we continue further discussion using the normalizing coefficients in the above format.For any node i in layer m (m=1, 2) define Drm(i) as the set of nodes in layer r (r=1, 2) such that failure of any node in Drm(i) at stage 0 causes node i to fail by stage S, which can be formally written as(8)Drm(i)={k∈Vr:ifkfailsatstage0,theni∈VmfailsbystageS}.To simplify further notation, defineDrm(i,j)=Drm(i)∪Drm(j).We will use the notation Drm(i,j,S), or Drm(i,S), if we need to emphasize its dependency on the number of considered cascade stages S. Consequently, all affected nodes at stage S form a vertex cover if and only if for any edge (i,j) in layer 1 there is at least one failed (attacked) node in the set D11(i,j)∪D21(i,j), and for any edge (i,j) in layer 2 there is at least one failed (attacked) node in the set D22(i,j)∪D12(i,j). Using this observation and the definition of Drm(i), the problem can be formulated as follows:Problem 2F1c(9)minimize∑l=1,2∑i∈Vlvli(10)subject to∑k∈D11(i,j)v1k+∑k∈D21(i,j)v2k⩾1,∀(i,j)∈E1,(11)∑k∈D22(i,j)v2k+∑k∈D12(i,j)v1k⩾1,∀(i,j)∈E2,vli∈{0,1},∀i∈Vl,l=1,2.This problem formulation requires the identification of sets Drm(i) for every node i in the network. This can be easily done using the reverse breadth-first search from i up to a level S since Drm(i) is the set of nodes in Vrfrom which there is a shortest directed path of length ⩽S to node i∈Vmthrough E12, E21.It is a well-known fact that an LP relaxation of the minimum vertex cover problem provides a 2-approximation algorithm (Vazirani, 2001). In this section we analyze an approximation algorithm for the minimum vertex cover problem in interdependent networks based on the LP relaxation of formulation (9)–(11).Proposition 1Define Δ1and Δ2as(12)Δ1=max(i,j)∈E1|D11(i,j)|+|D21(i,j)|,(13)Δ2=max(i,j)∈E2|D22(i,j)|+|D12(i,j)|,and Δ=max (Δ1,Δ2). Then, the LP relaxation of formulation(9)–(11)provides a Δ-approximation.Letvli∗,i=1,…,nl, l=1, 2 be an optimal solution of the LP relaxation of the IP formulation (9)–(11), and let wLP, wIPbe the optimal objective values of LP and IP, respectively. Obviously, wLP⩽wIP. Define for l=1, 2(14)vli=0,vli∗<1Δl,1,vli∗⩾1Δl.Since the number of variables in every constraint of the formulation (9)–(11) is no greater than Δ, then vector vli, i=1,…,nl, l=1, 2 is a feasible solution of the IP (9)–(11). LetwIPLPbe the corresponding IP objective function of this solution, then(15)wIP⩽wIPLP.Also, by definition (14), it follows that(16)wIPLP⩽ΔwLP.Combining the last two inequalities, we get(17)wIP⩽ΔwLP.□Note that if there are no interdependent links between the layers (E12=∅, E21=∅), then Δ=2, and the problem (9)–(11) reduces to the standard minimum vertex cover problem. Therefore, Proposition 1 contains the classical 2-approximation result for the standard minimum vertex cover problem as a special case.As mentioned above, the total number of stages in a cascading failure process cannot exceed S=n−1 (“the longest possible cascade”), since at every stage the cascade either stops or causes at least one more node failure. Therefore, if one wants to solve the considered problem with “unconstrained” number of failure stages, then S=n−1 should be used in the aforementioned problem formulations (F1, F1c). However, for computational reasons, it might not be efficient to use the largest possible S, since it may require a lot of unnecessary calculations and usage of redundant variables. We show how to find such a number of failure stages S∗⩽n−1, that the problem formulations F1(S) and F1c (S) have the same optimal solution for all S⩾S∗. In the notations F1(S) and F1c (S), we use the argument S to refer to the problem formulations F1, F1c with a specified parameter S.Definition 5The depth of cascadeS∗ is the maximum possible length of the sequence of cascading failures in a given interdependent network G(2).The next proposition shows that in the case of Type 1 interdependence, the depth of cascade can be identified explicitly for any given problem instance.Proposition 2Let G(2)=((V1,E1), (V2,E2),E12,E21) be an interdependent network with Type 1 interdependence, G=(V1∪V2, E12∪E21), and let dist(i,j) be the length of the shortest directed path from node i to node j in G (dist(i,j)=∞ if there is no path from i to j).Then, thedepth of cascadeof network G(2)is given by(18)S∗=maxi,j∈V1∪V2(dist(i,j)|dist(i,j)<∞).Moreover, formulations F1c(S) are identical for all S⩾S∗.The proof is straightforward and follows from the definition of S∗.□As demonstrated by the computational experiments presented further in the paper, the depth of cascade S∗ is typically much smaller than n−1, which significantly reduces the size of the problem and the corresponding CPU time.Similarly to Type 1 interdependence, one can consider the concept of failure stages s=0,…,S introduced in Section 2 in the context of Type 2 interdependence. The corresponding linear 0–1 problem formulation is obtained using the same notations as in formulation (1)–(7) by changing the constraints on stage-by-stage node failures to incorporate this type of interdependence.Problem 3F2(19)minimize∑l=1,2∑i∈Vlvli0(20)subject tovliS+vljS⩾1,∀(i,j)∈El,l=1,2,(21)vlis⩾vlis-1,∀i∈Vl,l=1,2,s=1,…,S,(22)1-v1is⩾∑j∈V2aji21(1-v2is-1)n2+1-v1is-1,∀i∈V1:∑j∈V2aji21⩾1,s⩽S,(23)1-v2is⩾∑j∈V1aji12(1-v1is-1)n1+1-v2is-1,∀i∈V2:∑j∈V1aji12⩾1,s⩽S,(24)1-v1is⩽∑j∈V2aji21(1-v2is-1),∀i∈V1:∑j∈V2aji21⩾1,s⩽S,(25)1-v2is⩽∑j∈V1aji12(1-v1is-1),∀i∈V2:∑j∈V1aji12⩾1,s⩽S,vlis∈{0,1},∀i∈Vl,l=1,2,s=0,…,S.Note that the theoretical results proven for the problem with Type 1 interdependence do not necessarily extend automatically for Type 2 interdependence due to the substantially different structure of failure mechanisms, which makes it challenging to address from analytical and computational perspectives.In addition to the two aforementioned baseline models, where the same type of interdependence (e.g., Type 1 or Type 2) is characteristic for both network layers (and every individual node in these layers), it is easy to extend the minimum vertex cover problem to a more general case, where network layers are characterized by different types of interdependence, for instance, Type 1 interdependence for layer G1=(V1,E1) on layer G2=(V2,E2), and Type 2 interdependence for layer G2 on layer G1. In this case, the linear 0–1 programming formulation is obtained straightforwardly from formulation F2 by substituting constraints (22) and (24), which correspond to the failure of nodes in layer G1= (V1,E1) due to Type 2 dependence on G2=(V2,E2), by constraints (3) and (5) which correspond to the failure of nodes in layer G1=(V1,E1) due to Type 1 dependence on G2=(V2,E2). Moreover, the formulation can be generalized similarly if every node in the interdependent network has its own type of interdependence (Type 1 or Type 2) on nodes from the other layer.The classical Minimum Vertex Cover (MVC) problem, which is NP-hard (Garey & Johnson, 1979), is a special case of the Minimum Vertex Cover problem in Interdependent Networks (MVCIN) for S=0. However, it does not necessarily imply that the MVCIN problem is NP-hard for any fixed S and S∗. The propositions below show that the decision (recognition) version of MVCIN problem is NP-complete for any fixed S,S∗. Following the standard approach (Garey & Johnson, 1979), we define the recognition version of the problem, Vertex Cover in Interdependent Networks (VCIN), as follows: given fixed positive integers k, S, S∗ (S⩽S∗) and a two-layer interdependent network G(2) with depth of cascade S∗, does there exist a subset of nodes V′⊆V1∪V2 of size k whose failure causes the failure of a subset of nodes Vc′⊆V1∪V2, which forms a vertex cover in G(2)?Proposition 3The VCIN problem with Type 1 interdependence is NP-complete for any fixed S, S∗.The VCIN problem is obviously in class NP. Next, we reduce the classical VC problem to the VCIN problem. Namely, for the given k, S, S∗ and a graph G=(V,E) (V={1,…,n}) we will construct a two-layer interdependent network G(2)=((V1,E1), (V2,E2), E12,E21) with depth of cascade S∗, and prove that G has a vertex cover of size k if and only if G(2) has a vertex cover of size k for the fixed number of failure stages S. The construction proceeds as follows. Let(26)Gi=(V,E),i=1,…,S+1,(V,∅),i=S+2,…,S∗+1.In other words, Giis just a copy of graph G if i⩽S+1, and is a graph with ∣V∣ nodes and no edges if S+1<i⩽S∗+1. To distinguish the nodes among the graphs Giwe denote a node j∈V in Gias ji. Let also(V1,E1)=⋃i=1S∗+12G2i-1,(V2,E2)=⋃i=1S∗+12G2i,E12=(j2i-1,j2i):∀j∈V;i=1,…,S∗+12,E21=(j2i,j2i+1):∀j∈V;i=1,…,S∗-12.The depth of cascade of this interdependent network is, obviously, S∗, and the network construction can be done in a polynomial time. Fig. 5illustrates how the interdependent network G(2) is constructed from G=(V,E) for S=5, S∗=7. Observe that the failure of node j1 in G1 will consequently cause the failure of nodes jiin all graphs Gifor i=2,…,S+1.Assume that V′⊂V is a vertex cover of graph G, such that ∣V′∣=k. Let V(2)={i1∈V1:∀i∈V′}, then, obviously, V(2) is a vertex cover of the interdependent network G(2). Conversely, assume that V(2) is a vertex cover of size k in the interdependent network G(2). Using the observation above, we can conclude that having a node ji∈V(2) (i>1) does not do better than having a node j1∈V(2). Indeed, the failure of node j1 will cause the failure of all the nodes that fail due to the failure of node jifor any fixed i>1. Therefore, without loss of generality, we can assume that all the nodes in V(2) belong to the first copy of graph G (G1). Obviously, the set of nodes V(2) in the original graph G is its vertex cover of size k.□The VCIN problem with Type 2 interdependence is NP-complete for any fixed S,S∗.Using the proof of Proposition 3, observe that in the constructed interdependent network G(2) Type 2 interdependence produces the same failure mechanism, since every node in G(2) depends on no more than one other node. Therefore, the same logic can be used to prove the NP-completeness of VCIN problem with Type 2 interdependence.□The NP-completeness results are straightforwardly generalized to the VCIN problem with “mixed” types of interdependence.A series of computational experiments was performed to study the effectiveness and scalability of the developed linear 0–1 formulations, their LP relaxations, and the corresponding LP approximation (where applicable). Moreover, the computational experiments helped to numerically investigate the relationship between the size of a minimum vertex cover and various structural characteristics of an underlying interdependent network such as topologies of individual layers, type of interdependence, number of interdependent links and cascading stages S. This relationship can provide better understanding of how the presence of interdependence affects the vulnerability of networks with different topologies, since the size of a minimum vertex cover can be viewed as a measure of network robustness. The depth of cascade in networks with various numbers of interdependent links was also considered.The computational experiments were performed on a Dell machine equipped with Windows 7×64 operating system and an Intel Core i7 940XM processor (CPU 2.13GHz, L2 8MB), RAM 8GB. All problem instances were solved to optimality using FICO Xpress-IVE solver (Xpress, 2012). The corresponding CPU times are presented in seconds. Consistently with other related studies, we considered problem instances on random graphs with two well-known degree distributions: power-law and uniform. A uniform random graph G(n,p) has n nodes, where each pair of nodes is connected by an edge randomly and independently with a fixed probability p, whereas in a power-law graph the probability that a node has degree k is proportional to k−β. We used these two types of degree distributions to generate network layers G1=(V1,E1) and G2=(V2,E2). The interdependent links E12 and E21 were generated assuming that each node in one layer is dependent on each node in another layer randomly with a fixed probability q.To the best of our knowledge, there are no real-world interdependent network data available in public domain; therefore, the majority of the computational experiments below are based on randomly generated instances. However, in order to give an intuitive interpretation of the proposed models in realistic settings, we also performed computational experiments on the two-layer network illustrated in Fig. 1, which consists of the well-known IEEE 118-bus power grid network (constructed using publicly available data) and a randomly generated SCADA network (with the assumed power-law distribution, which is common for communication networks).

@&#CONCLUSIONS@&#
