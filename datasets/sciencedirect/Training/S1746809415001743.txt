@&#MAIN-TITLE@&#
A new personalized ECG signal classification algorithm using Block-based Neural Network and Particle Swarm Optimization

@&#HIGHLIGHTS@&#
Personalized classification of ECG heartbeats in five heartbeat types according to AAMI recommendation.A Block-based Neural Network (BBNN) has been used as the classifier.Particle Swarm Optimization algorithm has been used for training the BBNN.The performance evaluation using the MIT-BIH arrhythmia database shows a high classification accuracy of 97%.

@&#KEYPHRASES@&#
Block-based Neural Network (BbNNs),Particle Swarm Optimization (PSO),Electrocardiogram signals (ECG),Patient specific,ECG signal classification,

@&#ABSTRACT@&#
The purpose of this paper is the classification of ECG heartbeats of a patient in five heartbeat types according to AAMI recommendation, using an artificial neural network. In this paper a Block-based Neural Network (BBNN) has been used as the classifier. The BBNN is created from 2-D array of blocks which are connected to each other. The internal structure of each block depends on the number of incoming and outgoing signals. The overall construction of the network is determined by the moving of signals through the network blocks. The Network structure and the weights are optimized using Particle Swarm Optimization (PSO) algorithm. The input of the BBNN is a vector which its elements are the features extracted from the ECG signals. In this paper Hermit function coefficient and temporal features which have been extracted from ECG signals, create the input vector of the BBNN. The BBNN parameters have been optimized by PSO algorithm which can overcome the possible changes of ECG signals from time-to-time and/or person-to-person variations. Therefore the trained BBNN has an unique structure for each person. The performance evaluation using the MIT-BIH arrhythmia database shows a high classification accuracy of 97%.

@&#INTRODUCTION@&#
Electrocardiogram (ECG) signals show the electrical activities of heart using some electrodes which are connected to special points of body. Some of these electrodes apply electrical signals and some of them readout the output signal. Any change in the appearance of the signal might show a heart disease. Medical specialist just can see these appearances but in some cases, two signals have similar patterns but show different diseases (Fig. 1(a) and (b)), and in some other cases, two signals have different patterns but indicate the same disease (Fig. 1 (a) and (c)). In these cases medical specialist cannot easily diagnose the diseases. Therefore only using the ECG signals appearance is not an accurate approach to detect the possible diseases. Using another features of these signals might be helpful to detect the diseases. A number of ECG signal feature extraction methods have been presented in the literature such as morphological features [1], heartbeat temporal intervals [2], frequency domain features [3], and wavelet transform coefficients [4,5]. Only for a day, ECG records are composed of thousands of heart beats and it is extremely difficult for medical experts to follow all the signals to detect the possible diseases. Therefore we need an automatic monitoring system which can follow and study all these heart beats very fast. Linear discriminant analysis [6], support vector machines [7], artificial neural networks (ANNs) [8], mixture-of-experts method [9], and statistical Markov models [10] are examples of the methods for studying and classification of the heart diseases that have been proposed in the literature.Artificial neural networks by mimicking brain function are one of the powerful tools for automatic diagnosing the disease. ECG signals vary significantly for different individuals (because of gender, age, etc.) [11]. Also some physical conditions cause ECG signals to change for the same individual over the time. Therefore because of dynamical nature of ECG signals, a fixed structure ANN cannot be used.In this paper an artificial neural network is used which its parameters (structure and internal configuration) are modified based on the changes of ECG signals. For designing an artificial neural network, two issues must be considered. First issue is optimization of the structure and corresponding weights, simultaneously. Another issue is hardware implementation of ANN. For tackling with these issues we have used a Block-based Neural Network [12] that has been trained using Particle Swarm Optimization (PSO) algorithm [13,14]. The internal weights and overall structure of BBNN can be represented by a vector. Therefore by using this method the network structure and the weights can be optimized simultaneously.In this research, Particle Swarm Optimization (PSO) algorithm is used for training and optimization purposes. This algorithm which is based on birds flocking behavior for finding food [13,14], uses swarm intelligence for finding optimal solution for problems. The birds flocking movement to find food is equal to create a swarm of solutions for a problem and the food resource is equal to the best solution. In this algorithm all members of swarm have two parameters; position and velocity. At first, these parameters are initialized with random values. The swarm of solutions is named particles. Each particle in this algorithm, changes its position and velocity until finding an optimal solution. All particles are in contact with each other. To achieve an optimal solution, they change their positions according to best position of each particle itself (local best) and population best position (global best).In this research ECG signals which have been selected from MIT-BIH arrhythmia database [15], are classified in five groups (a normal group and four abnormal groups) according to AAMI recommendation [16]. The designed classifier has a unique optimal structure for each person. The BBNNs use the morphological (Hermit transfer function based features) and temporal (RR-interval ratio) features which extracted from the ECG signals. The overview of the proposed system for ECG signal classification have been shown in Fig. 2.This paper is organized as follows: Section 2 represents the basic concepts of BBNN which has been used as the classifier. In Section 3 the ECG signals, pre-processing of ECG records and the method for extracting the features from the signals will be described. Section 4 will represent a new method for designing a BBNN in MATLAB and in Section 5 the new method for optimizing the designed BBNN and also classification of ECG records will be described, and at the end, in Section 6 the conclusions of this research will be presented.A Block-based Neural Network [12] is represented by a structure of blocks in two dimensions. Each block is a small neural network with one input layer and one output layer (without any hidden layer). There are four neighboring blocks around each block and it is connected to them with signal flows. In other words, the outputs of each block are connected to the inputs of the neighbor blocks. The first block and the last block in each row are also connected to each other. The overall construction of network and internal structure of all blocks are determined simultaneously by flowing the signal through the network blocks. Fig. 3represents the BBNN structure by size of m*n where m and n are numbers of network rows and columns, respectively.Each block is labeled as Bmnthat specifies the block position (mth row and nth column). The input vector, x, goes into the network by input blocks and the output vector, y, goes out from the output blocks. The BBNN can contain multiple middle layers. In Fig. 2, xi(i=1, 2,…,n) and yj(j=1, 2,…,m) are network inputs and outputs, respectively. The input signal x, flows through the blocks and produces the output signal y. Because of modular property of BBNN, it can grow by adding extra blocks. In this paper a BBNN with downward signal flow is used to facilitate hardware implementation. A BBNN with feedback signal flow produces the outputs with longer delay, therefore prompting the network needs for extra hardware resources [17].There are three different types of internal configuration for a BBNN. Each block has four nodes that are connected to each other. Some nodes are the inputs and some are the outputs. Fig. 4shows four different blocks: (a) three input nodes and one output node, (b) one input node and three output nodes, (c) two types for blocks with two input nodes and two output nodes. Input and output nodes are connected to each other with weighted connections. A weightwijdenotes a connection from node i to node j. The output nodes also have a bias weight. Therefore, a block can have at least four connection weights for the case of three inputs and one output and maximum connection weights can be six for the cases of two inputs with two outputs and one input with three outputs.Direction of signal flow between the nodes, determines the type of the nodes. When an arrow is incoming to a node, it is the input and an outgoing arrow from a node, specifies the node as an output. Each output node uses an activation function h(·). After summation of the weighted inputs and the bias weight, the result passes from this activation function and creates the output of the block. The signals uiandvjrepresent the input and the output signals of a block.(1)vj=h(gj),j∈Jgj=∑i∈Iωijui+bjI and J denote the indexes of the input and the output nodes, respectively. gjis the output of the node before the activation function and bjis the bias of the jth node. In this paper, the final output of each block is produced by flowing the signal through this type of sigmoid activation function.(2)h(x)=21+e−2x−1In this paper for training and testing the designed classifier, the MIT-BIH arrhythmia database [15] has been used. This database contains of 48 records that are obtained from 47 individuals. Each record contains two channels (MLII and V5) ECG signals for 30min duration that is selected from 24h recordings. Continues ECG signals were filtered using a bandpass filter with a pass-band from 0.1 to 100Hz, then were converted to digital data. Each record in this database also has an annotation file. Information about the occurrence time of heartbeat (R-peak location) or beat class information is in the annotation file. With considering 100 samples around the R-peak, we can detect the heartbeats. In the database four records that have the paced beats are excluded and the remaining 44 records are used. The first 20 records (numbered from 100 to 124) include representative samples of routine clinical recordings and we have used them as common training set. The remaining 24 records (numbered from 200 to 234) contain some unusual beats such as ventricular and supra ventricular arrhythmia. We have used these records as testing set.In this study we have used modified-lead II (MLII) signals for all records. According to AAMI recommendation, each ECG beat can be classified into one of the five different classes. Each class shows one type of heartbeats and are represented with N (normal beats), VEB (ventricular ectopic beats), SVEB (supra ventricular ectopic beats), F (fusion beats), and Q (unclassifiable beats). Because of variation of ECG signals for different persons, a unique classifier (BBNN) has been designed for each person. This neural network is trained with two sets of training sets. First set is common for all persons and consists of 200 sample beats which randomly selected from records 100 to 124 (60 samples for N, 60 samples for VEB, 60 samples for SVEB, all 13 samples for F, and all 7 samples for Q). The second set contains all the samples in the first 5min of each person ECG record [18]. The remaining records (200–234) are used in testing set for performance evaluation of classification.Most of ECG signals include noise. These noises are because of environmental situation or circumstances during recording the signals and AC power swinging. Two of most important noises are Ac power swinging [19] and base line drift [20], that will be introduced in following sections.This kind of noise, is a signal in frequency of 50 or 60Hz and its band width is smaller than 1Hz. The amplitude of this noise is up to 50% of ECG signal and combines with it. Fig. 5a shows a signal with noise and Fig. 5b shows the same signal after canceling the power-line noise.A low pass Butterworth filter with 4 poles and with normalized cut-off frequency of 0.1πrad/sample has been used as the power-line noise canceler [19].This type of noise is a low-frequency (0.15 up to 0.3Hz) noise. This noise is because of breathing of patient and causes to baseline shifting of ECG signals. In this study we use wavelet transformation [21] for noise removing of the ECG signals [20]. We decomposed the original ECG signal into corresponding approximation and detail coefficients up to 8 levels using Dabachies6 Discrete Wavelet transformation. Since this type of noise is low frequency, the low frequency components of the decomposed signal (A8, D8) are removed from the original ECG signals.Representation of signals with basis functions is an efficient method for extraction of features of signals [22,23]. One of the useful basis functions for QRS complex representation is Hermit function [24,25]. Since Hermit basis function expansion has a width parameter that differ for different QRS duration, this method has been used for extracting the features of ECG signals.In this study each QRS duration has been represented with Hermit basis function. The coefficients of Hermit function has been used as the feature vector elements for each heartbeat. Hermit basis functions are given by:(3)Φ(t,σ)=1σ2ll!πe(−t2/2l2)HltσIn this equation σ is the Width parameter. Hl(t/σ) is called the Hermit Polynomials and have been defined in Eq. (4).(4)Hn(x)=1,n=02x,n=12xHn−1(x)−2(n−1)Hn−2(x)n≥2With considering 100 samples around R-Peak, we can detect the heart Beats. By considering each heartbeat (QRS complex) as x(t), the approximated signal will be as:(5)xˆ(t)=∑l=0L−1cl(σ)Φl(t,σ)If L→∞ thenx(t)→xˆ(t).Since Hermit functions are orthonormal for any fixed values of σ, therefore using the Eq. (5) it is possible to calculate the expansion coefficients of the signals.(6)cl(σ)=∑t=−∞∞Φl(t,σ)x(t)By stepwise increasing the σ and calculation of sum of square error between x(t) andxˆ(t), we can find an optimal σ for the approximated signal. The upper bound for σ increasing for a given L is determined according the method that has been described in [26].There is a trade-off between the approximation levels and the computation time. Using more levels causes decreasing the approximation error, however the computation time will increase. Therefore in this study we used 7 levels of approximation to have an acceptable calculation time and approximation error.For discriminating of normal and premature heartbeats, the time interval ratio between two neighboring R-Peaks (Eq. (7)) in feature vector of signal (Fig. 6) [17] have been used. Therefore, the approximation coefficients, the width parameter and RR-interval ratio construct the elements of the feature vector.(7)IRi=Ti−Ti−1Ti+1−TiAs Block-based Neural Network is not present in MATLAB toolbox yet, we need to define it in MATLAB. As described in Section 2, the overall construction of network and internal structure of all blocks are determined simultaneously by the flow of the signal through the network blocks. It has to be considered that the outputs of one stage cannot be prepared simultaneously, because the input of one block is the output of an another block. Therefore it should wait until the preparation of the output of the previous block. Therefore it is determined which blocks are preparing the outputs earlier than the other blocks. The output of these blocks can be used in other blocks as the input. Therefore at the beginning, in the first stage, the blocks with one input and three outputs (1/3) will prepare the outputs. Because in this study it is considered that the network is feed-forward, therefore at least one input of each block is ready (either the inputs are the feature vector for the first stage or the inputs are fed from the previous stages), therefore this type of blocks need one input to prepare the outputs at first. Thereafter, the blocks which need two inputs (2/2) can prepare the outputs. One input is ready from the previous stage and one input comes from the neighboring blocks. At the end, the output of the blocks which have three inputs and one input (3/1) can be prepared.At first it is considered an overall structure that all connections are established between nodes. This structure has been shown in Fig. 7. From this figure we can see that each block has been shown with three vectors; structure vector, bias vector, and weight vector. So, it is possible to create these vectors for four available structures of a block that have been shown in Fig. 8. For determining the type of a block in MATLAB, a vector for each type of block (structure vector) is considered. Up and down arrows are downward and they are not considered in structure vector. The vectors which are right to left (←) denoted by (0) and the vectors which are left to right (→) denoted by (1). Weights and biases are shown in separate vectors. Some elements of these vectors which have not been used, have been considered to be (0).For a BBNN, a vector is considered that the first part of this vector determines the structure vector of all blocks in BBNN and the second and the third parts show the weights and biases vectors of all blocks, respectively. An example of this vector has been shown in Fig. 9. This vector shows all parameters of BBNN (structure and the corresponding weights) which should be optimized by Particle Swarm Optimization (PSO) algorithm. In other words, PSO algorithm should train the network (to determine the weights) and these weights should be optimum.Particle Swarm Optimization was first introduced by Dr. Russell C. Eberhart and Dr. James Kennedy in 1995 [13]. In this algorithm, a population of particles adapts by returning toward previously successful regions [14].In this study PSO algorithm has been used for training the network and also finding the optimized solution for ECG signals classification problem. Each solution for this problem is considered as a particle. Particles in this algorithm follow two laws: Data exchanging law and movement law. Each particle should know the position of optimal particle and can go towards that particle. According to the data exchanging law, each particle can be informed about the optimal particle and knows how much and in which direction should move to reach to the optimal particle. According to the movement law, each particle changes its position towards the optimal particle. These two laws are known as velocity and position operators. During the optimization, these operators will be updated and each particle is accelerated towards the particles previous best position and the global best position. Particle previous best position shows the best personal experience of each particle and global best position shows the best particle in population of the particles. At each generation a new velocity and position are calculated for each particle according to the following equations:(8)vi(t)=χvi(t−1)+c1r1pbesti−xi(t−1)+χc2r2gbesti−xi(t−1)(9)xi(t)=xi(t−1)+vi(t)(10)χ=22−φ−φ2−4φIn this equation χ is the construction coefficient which was developed by Clerc in 1999 [27]. The construction coefficient causes particles to quickly convergence over the time. The amplitude of the particles oscillations decrease as it focuses on the local and global previous best position. Therefore, the particles converge to a optimal point over the time.If the previous local and the global best positions are near each other, χ causes the particle to perform a local search with small steps. If the previous local and the global best positions are far apart from each other, the particle performs a global search with big steps. During the search, the global best position and the previous best position for each particle will change and the particle will shift from the local search back to the global search.Clerc [27] found that by modifying φ, the convergence characteristics (c1 and c2) of the system can be controlled. In this paper c1 and c2 are set to 2.05 and φ is set to 4.1.The new velocity value is calculated based on the current velocity value of the particle, the distance from its previous best position, and the distance from the global best position. This process is then repeated until meeting a stop condition such as finishing a set number of times or achieving to a minimum error. At the end of each process a fitness function evaluates the quality of problem solving.In this study, the BBNN structure and the weights are the parameters which should be optimized using PSO algorithm. In Section 4, it is described a vector for BBNN which shows all the weights and the structure of the BBNN. Therefore, we need to optimize this vector. In this algorithm we create a population of the particles that each of these particles is an answer for the optimization problem. These particles can be changed using PSO algorithm laws.Fitness function. Fitness function evaluates the quality of problem solutions. In this study for each particle, fitness function is evaluated using the following equation:(11)Fitness=β1+1noM1∑l=1M1dcl−ycl2+γ1+1noM2∑l=1M2dsl−ysl2β and γ indicate how much common and patient specific training data influence the network training. M1 and M2 are the numbers of common and patient specific training data samples and noshows the number of the output blocks. dand y are the target and the actual outputs, respectively.Both common and patient specific training data influence the training of the BBNN. Patient specific data causes the trained network to be specific for each patient and common training data help to have enough samples from different types of heart beats in training data set. A small value of β (less than 0.5) causes better effect of patient specific classification for a patient [17]. In this study γ and β have been considered respectively 0.8 and 0.2. In Table 1, the steps for optimizing BBNN with PSO has been shown.The number of BBNN columns is equal to or greater than the number of the elements of the feature vector. The number of the rows also should be enough in order to have enough complexity for BBNN to solve the problem. In this study, a BBNN with size of 29 is considered. Usually a network with small size is preferable. The disease are classified in five classes (N, S, V, F and Q). Therefore, a vector with five elements is considered for the target output. These vectors for each type of diseases have been shown in Table 2. Also the parameters that are used in PSO algorithm are shown in Table 3. These parameters are same for all test data. According to Eq. (11), the purpose of optimization is maximization of the fitness function. Fig. 10shows evolution trend for all test records. PSO algorithm is repeated 2000 times for each record. Minimum and maximum fitness are achieved for records 207 and 234, respectively and the fitness value for these records are 0.73 and 0.94.Each BBNN has been specifically designed for each patient. For example Fig. 11shows the designed BBNN for the records 207 and 234. Y1, Y2, …, Y5 show the output of each block. Extra outputs have been shown with *. In input vector X1, X2, …, X7 show Hermit function coefficients, X8 shows Width parameter and X9 shows RR-interval ratio. Tables 4 and 5show the weight and the bias vectors for all blocks of the records 207 and 234, respectively. B1, B2, , B18 indicate the blocks of the network and W12, W13, …, W24 and b2, b3, b4 are the weights and the biases of the connections between nodes that have been shown in Figs. 7 and 8.PSO algorithm tests the different structures for BBNN blocks to find an optimal structure. For example, the PSO algorithm tests 15 different structures for record 234 and finally optimizes the structure. As seen in Fig. 12the percentage of occurrence of near optimal and optimal structures are more than other structure occurrences.All 54,727 beats of all test records are classified in 5 classes. The results of this classification are shown in Table 6. According to AAMI [16], four fundamental measurements that show the classification performance are: classification Accuracy (Acc), Sensitivity (Sen), Specificity (Spe), and Positive predictive value (Ppr). These measurements are based on another four parameters: TP (True Positive), TN (True Negative), FP (False Positive), and FN (False Negative) and have been shown in Eq. (12).(12)Acc=TP+TNTP+TN+FP+FNSen=TPTP+FNSpe=TNTN+FPPp=TPTP+FPAccording to AAMI, overall classification performance has been reported using two sets of performance: 1. the detection of VEBs, 2. the detection of SVEBs. Tables 7 and 8, define the parameters of TP, TN, FN, and FP for detection of VEB and SVEB beats. According to AAMI, the classification of ventricular fusion beats (F) and unknown beats (Q) as VEB and classification of unknown beats as SVEBs do not consider in classification performance measurement.The performance for ECG signal classification using BBNN and PSO algorithm for detection of VEB and SVEB has been shown in Table 9. As seen from this report, the performance of SVEB beats classification is lower than VEB classification. It is because of low variety of SVEB samples in the training data.For comparison we have considered two previous works which have used the same data set and AAMI standards. In [18], PSO algorithm is used for classification of heart beats. Also in this work, some morphological and temporal features have been used as the feature vector. In [17], Hermit transfer functions have been used for the feature extraction and an evolutionary algorithm for optimization of the classification. In these two previous works, the data set has been divided into two sets which the first 20 records have been used for determining the optimal structure for the classifier, and then this classifier has been used to classify the remaining records in the second set.Receiver operating characteristic (ROC) [28] is a plot which illustrates the performance of a classifier system and is created by plotting false positive rate (FPR) versus true positive rate (TPR). ROC curve for these three methods for detecting VEB and SVEB are shown for comparison in Fig. 13. Upper-left corner of the ROC curve (TPR=1, FPR=0) is the optimal solution. Therefore, the TPR-FPR curve of a solution that is closer to upper-left corner will be better. According to Fig. 13, the proposed method have an acceptable solution in comparison to the other two methods.Another way for comparison is based on the overall accuracy, sensitivity, specificity, and the positive productive value of the three methods. The proposed method for the detection of VEB and SVEB in some terms are better than the two other works. This comparisons are shown in Tables 10 and 11.In this section the effect of noise in the fitness value and the way BBNN can recover its functionality after applying the noise are studied. For this propose, after optimization of the BBNN structure and the weights using PSO algorithm, a low Gaussian noise with a SNR of 5dB is added to the network parameters. In [17], evolution of the optimization has been stopped after 3000 generation. In this point a Gaussian noise and a recovery evolution has been applied to the noise, to recover the BBNN functionality. This process has been shown in [17].In proposed method, evolution of the optimization has been stopped after 1000 generation when convergence is observed. Thereafter a Gaussian noise has been applied. Fig. 14shows the changes in the BBNN parameters and Fig. 15shows the evolution trend of the proposed method after applying the noise.In [17] the maximum fitness value has been dropped significantly after inducing the noise. However Fig. 15 shows the noise does not influence the evolution trend. In other words the noise cannot influence the network performance. It is because of PSO algorithm. In this algorithm there is a parameter that named Global fitness. In each generation the achieved fitness is compared with this parameter. If global fitness was bigger than the achieved fitness, the global fitness will be the fitness of that generation and it prevents the dropping of the fitness value.

@&#CONCLUSIONS@&#
