@&#MAIN-TITLE@&#
CDNFRE: Conflict detector in non-functional requirement evolution based on ontologies

@&#HIGHLIGHTS@&#
Proposing the software architecture of CDNFRE tool for detecting conflicts in non-functional requirementsThe ontological conflict detection method is represented as a set of rules for automatic conflict detection.Proposing the non-functional requirement metadata and processes about derived requirement generation and conflict detectionImplementing prototype for demonstrating how the CDNFRE software architecture worksProviding a case study to validate the effectiveness of the proposed conflict detection rules

@&#KEYPHRASES@&#
Systems analysis,Requirement engineering,Ontology,Conflict detection,Non-functional requirement,

@&#ABSTRACT@&#
Analyzing conflicts in non-functional requirements is a major task in large software systems development projects. Many of the non-functional requirements that accumulate vary over time. Systems analysts often maintain non-functional requirements incrementally. Requirement information overload and employee turnover problems may complicate conflict detection in the non-functional requirement evolution process. This work proposes a conflict detector in non-functional requirement evolution (CDNFRE) system that uses ontologies as a theoretical foundation for automatically detecting conflicts. Requirement metadata and conflict detection rules and their associated requirement generation and conflict detection processes are proposed for the CDNFRE mechanism. A prototype is developed. A case study of electronic commerce in a television station company demonstrates the feasibility and effectiveness of the proposed CDNFRE system.

@&#INTRODUCTION@&#
Information systems development for the highly competitive consumer markets of today must consider intertwining technology and business requirements [3,32]. Technology and business requirements are numerous and constantly evolving. The hidden inconsistencies and conflicts are often difficult to identify in a large mass of requirements. Employee turnover is inevitable and may cause organizations to forget requirements. Therefore, formal requirement analysis is essential and requires computer support [20].Customers are now focusing on non-functional requirement (NFR) [9,27]. Non-functional requirements determine the efficiency and effectiveness of a software system in completing a task [38]. Non-functional requirements are often presented chaotically without a common standard and without sufficient analysis [17]. Analyzing NFR conflicts is essential for successful information systems development [31]. Insufficient NFR analysis can cause serious problems in systems development [25,28].To facilitate NFR analysis, this work proposes a Conflict Detector in Non-Functional Requirement Evolution (CDNFRE) mechanism for automatically detecting conflicts during maintenance of non-functional requirements by systems analysts. The CDNFRE tool includes four essential elements: metadata, ontology, cause-and-effect relationship, and conflict detection rule. Metadata can be conceptualized as a blank form, and ontology can be conceptualized as a dictionary that stores concepts and semantic relationships. By applying ontology concepts (vocabulary in the dictionary), the system analyst can provide the metadata (the blank form) needed to model non-functional requirements. Based on cause-and-effect relationships, inference knowledge can be used to derive requirements about side effects from ontology and metadata. In contrast, a conflict detection rule is a rule for using ontology and metadata to infer conflicts as NFRs evolve.Non-functional requirements consist of software attribute, business value, and restriction [9,22]. Software attribute considers interface, performance, and quality. Business value includes goal, strategy, policy, and control. Restriction represents limitations and assumptions for constraining information systems, such as law, culture, and budge. Business value and restriction, which are related to software attribute, must be considered when determining software attributes. Business value is an important element of information system development in a profit-oriented organization [1,22]. For example, business considerations such as target market and brand position must be considered when designing the interface during electronic commerce websites design.Ontology is typically offered to support a shared understanding [29]. An ontology includes both concepts and their relationships [4,10]. In the software engineering domain, application of ontology is increasingly common [12]. There are evidences of the benefits of using ontologies in requirement engineering activities both in industry and academy for reducing inconsistencies although the most existing studies addressed functional requirements [5]. One of the nice characteristics of ontologies is their capability of reasoning. The reasoning may help in detecting some type of inconsistencies [14]. Some studies [2,14] apply ontologies in functional requirements. Besides software attributes, other features should be included in NFR, such as business value, restriction, and cause-and-effect relationship which are not considered yet. To fill this research gap, this work uses ontologies which consider various NFR features to detect conflict in non-functional requirements.The rest of this paper is structured as follows. Section 2 discusses related works in requirement analysis. Section 3 introduces the proposed method of CDNFRE design. Section 4 describes the proposed ontologies for non-functional requirements. Section 5 presents the software architecture and database design of CDNFRE tool. Sections 6 and 7 describes the CDNFRE prototype and the results of a real-world case study to confirm its feasibility and effectiveness. Finally, the results are discussed, and conclusions are given.

@&#CONCLUSIONS@&#
