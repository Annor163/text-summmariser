@&#MAIN-TITLE@&#
A hybrid metaheuristic for multiobjective unconstrained binary quadratic programming

@&#HIGHLIGHTS@&#
We extend conventional single-objective unconstrained binary quadratic programming (UBQP) to the multiobjective case.We define a flexible model to generate multiobjective UBQP problem instances with complementary features.We propose a hybrid metaheuristic to identify an approximation of the Pareto set.We experiment the performance of our algorithm on large-size multiobjective UBQP problem instances with two and three objectives.

@&#KEYPHRASES@&#
Unconstrained binary quadratic programming,Multiobjective combinatorial optimization,Hybrid metaheuristic,Evolutionary multiobjective optimization,Tabu search,Scalarizing function,

@&#ABSTRACT@&#
The conventional unconstrained binary quadratic programming (UBQP) problem is known to be a unified modeling and solution framework for many combinatorial optimization problems. This paper extends the single-objective UBQP to the multiobjective case (mUBQP) where multiple objectives are to be optimized simultaneously. We propose a hybrid metaheuristic which combines an elitist evolutionary multiobjective optimization algorithm and a state-of-the-art single-objective tabu search procedure by using an achievement scalarizing function. Finally, we define a formal model to generate mUBQP instances and validate the performance of the proposed approach in obtaining competitive results on large-size mUBQP instances with two and three objectives.

@&#INTRODUCTION@&#
Given a collection of n items such that each pair of items is associated with a profit value that can be positive, negative or zero, unconstrained binary quadratic programming (UBQP) seeks a subset of items that maximizes the sum of their paired values. The value of a pair is accumulated in the sum only if the two corresponding items are selected. A feasible solution to a UBQP instance can be specified by a binary string of size n, such that each variable indicates whether the corresponding item is included in the selection or not. More formally, the conventional and single-objective UBQP problem is to maximize the following objective function.(1)f(x)=x′Qx=∑i=1n∑j=1nqijxixjwhere Q=(qij) is an n by n matrix of constant values, x is a vector of n binary (zero-one) variables, i.e., xi∈{0, 1}, i∈{1, …, n}, and x′ is the transpose of x.The UBQP is known to be a general model able to represent a wide range of important problems, including those from financial analysis [1], social psychology [2], computer aided design [3] and cellular radio channel allocation [4]. Moreover, a number of NP-hard problems can be conveniently transformed into the UBQP, such as graph coloring, maxcut, set packing, set partitioning, maximum clique, and so on [5,6]. As a consequence, the UBQP itself is clearly a NP-hard problem [7]. During the past few decades, a large number of algorithms and approaches have been proposed for the single-objective UBQP in the literature. This includes several exact methods based on branch and bound or branch and cut [8–10] and a number of heuristic and metaheuristic methods like simulated annealing [11], tabu search [12–16], path-relinking [17], evolutionary and memetic algorithms [18–21].In this paper, we extend this conventional single-objective UBQP problem to the multiobjective case, denoted by mUBQP, where multiple objectives are to be optimized simultaneously. Such an extension naturally increases the expressive ability of the UBQP and provides a convenient formulation to fit situations which the single-objective UBQP cannot accommodate. For instance, UBQP can recast the vertex coloring problem (of determining the chromatic number of a graph) [5] and the sum coloring problem (of determining the chromatic sum of a graph) [22]. Still, UBQP is not convenient to formulate the bi-objective coloring problem which requires to determine a legal vertex coloring of a graph while minimizing simultaneously the number of colors used and the sum of colors. For this bi-objective coloring problem, the mUBQP formulation can be employed in a straightforward way.In addition of introducing the mUBQP problem, the paper has two contributions. First, given that the single-objective UBQP is NP-hard, its generalized mUBQP formulation is also a difficult problem to solve in the general case. For the purpose of approximating the Pareto set of a given mUBQP instance, heuristic approaches are appealing. Following the studies on memetic algorithms for the UBQP and many other problems, we adopt as our solution approach the memetic framework and propose a hybrid metaheuristic which combines an elitist evolutionary multiobjective optimization algorithm with a state-of-the-art single-objective tabu search procedure based on an achievement scalarizing function. The last contribution of this work is to define a formal and flexible model to generate hard mUBQP instances. An experimental analysis validates the effectiveness of the proposed hybrid metaheuristic by achieving a clear improvement over non-hybrid and conventional algorithms on large-size mUBQP instances with two and three objectives.The paper is organized as follows. Section 2 introduces the multiobjective formulation of the UBQP problem (mUBQP). Section 3 presents the hybrid metaheuristic (HM) proposed for the mUBQP problem and its main ingredients, including the scalarizing evaluation function, the tabu search procedure, the initialization phase and the variation operators. Section 4 gives an experimental analysis of the HM algorithm on a large set of mUBQP instances of different structure and size. The last section concludes the paper and suggests further research lines.This section first introduces the multiobjective unconstrained binary quadratic programming problem. Some definitions related to multiobjective combinatorial optimization are then recalled, followed by problem complexity-related properties and a link with similar problem formulations. Last, the construction of problem instances, together with an experimental study on the correlation of objective values and the cardinality of the Pareto set, are presented.The multiobjective unconstrained binary quadratic programming (mUBQP) problem can be stated as follows:(2)maxfk(x)=∑i=1n∑j=1nqijkxixjk∈{1,…,m}subjecttoxi∈{0,1}i∈{1,…,n}where f=(f1, f2, …, fm) is an objective function vector with m≥2, n is the problem size, and we have m matricesQk=(qijk)of size n by n with constant positive, negative or zero values, k∈{1, …, m}. The solution space X is defined on binary strings of size n.Let X={0, 1}nbe the set of feasible solutions in the solution space of Problem (2). We denote byZ⊆ℝmthe feasible region in the objective space, i.e., the image of feasible solutions when using the maximizing function vector f. The Pareto dominance relation is defined as follows. A solution x∈X is dominated by a solution x′∈X, denoted by x≺x′, if fk(x)≤fk(x′) for all k∈{1, …, m}, with at least one strict inequality. If neither x⊀x′ nor x′⊀x holds, then both solutions are mutually non-dominated. A solution x∈X is Pareto optimal (or efficient, non-dominated) if there does not exist any other solution x′∈X such that x′ dominates x. The set of all Pareto optimal solutions is called the Pareto set, denoted by XPS, and its mapping in the objective space is called the Pareto front, denoted by ZPF. One of the most challenging issues in multiobjective combinatorial optimization is to identify a minimal complete Pareto set, i.e., one Pareto optimal solution mapping to each point from the Pareto front. Note that such a set may not be unique, since multiple solutions can map to the same non-dominated vector.For many multiobjective combinatorial optimization problems, computing the Pareto set is computationally prohibitive for two main reasons. First, the question of deciding if a candidate solution is dominated is known to be NP-hard for numerous multiobjective combinatorial optimization problems [23,24]. This is also the case for the mUBQP problem since its single-objective counterpart is NP-hard [7]. Second, the cardinality of the Pareto front typically grows exponentially with the size of the problem instance [24]. In that sense, most multiobjective combinatorial optimization problems are said to be intractable. In the following, we prove that the mUBQP problem is intractable.Proposition 1The multiobjective unconstrained binary quadratic programming problem(2)is intractable, even for m=2.ProofConsider the following bi-objective mUBQP instance.qij1=2n(i−1)−i(i−1)2+j−1ifi≥j0ifi<ji,j∈{1,…,n}Letqij2=−qij1for all i, j∈{1, …, n}. It is obvious that all solutions are mutually non-dominated, and that each solution maps to a different vector in the objective space. Therefore, |ZPF|=|XPS|=|X|=2n.□The bi-objective mUBQP instance used in the proof is illustrated in Fig. 1for n=3.In order to cope with NP-hard and intractable multiobjective combinatorial optimization problems, researchers have developed approximate algorithms that identify a Pareto set approximation having both good convergence and distribution properties [25,26]. To this end, metaheuristics in general, and evolutionary algorithms in particular, have received a growing interest since the late eighties [27].The single-objective UBQP problem is of high interest in practice, since many existing combinatorial optimization problems can be formalized in terms of UBQP [5]. As a consequence, multiobjective versions of such problems can potentially be defined in terms of mUBQP. However, to the best of our knowledge, the UBQP problem has never been explicitly defined in the multiobjective formulation given in Eq. (2). Existing multiobjective formulations of classical combinatorial optimization problems with binary variables include multiobjective linear assignment problems [24,28], multiobjective knapsack problems [29,30], multiobjective maxcut problems [31], or multiobjective set covering and partitioning problems [28], just to mention a few. Nevertheless, the objective functions of such formulations are linear, and not quadratic as in mUBQP. Still, they often contain additional constraints; typically the unimodularity of the constraint matrix for linear assignment, or the capacity constraint for knapsack. This means that many existing binary multiobjective combinatorial optimization problems can be formalized in terms of mUBQP by adapting and generalizing the techniques from [5] to the multiobjective case, whereas the opposite does not hold in general due to the quadratic nature of mUBQP. The mUBQP problem is also different from the multiobjective quadratic assignment problem (mQAP) [32,33], which seeks an assignment of n objects to n locations under multiple flow matrices. The solution representation is then usually based on a permutation for mQAP whereas it is based on a binary string for mUBQP.We propose to construct correlated mUBQP problem instances as follows. Each objective function is defined by means of a matrix Qk, k∈{1, …, m}. Based on the single-objective UBQP instances available in the OR-lib [34], non-zero matrix integer values are randomly generated according to a uniform distribution in [−100, +100]. As in the single-objective case, the density d gives the expected proportion of non-zero numbers in the matrix. In order to define matrices of a given density d, we setqijk=0for all k∈{1, …, m} at the same time, following a Bernoulli distribution of parameter d.Moreover, we define a correlation between the data contained in the m matrices Qk, k∈{1, …, m}. The positive (respectively negative) data correlation decreases (respectively increases) the degree of conflict between the objective function values. For simplicity, we use the same correlation between all pairs of objective functions, given by a correlation coefficient ρ>((−1)/(m−1)). The generation of correlated data follows a multivariate uniform distribution of dimension m[35]. In order to validate the behavior of the objective correlation coefficient experimentally, we conduct an empirical study for n=18 in order to enumerate the feasible set {0, 1}nexhaustively. Fig. 2reports the average value of the Spearman correlation coefficient over 30 different and independent instances for different combinations of ρ, m, and d. Clearly, the correlation coefficient ρ tunes the objective correlation with a high accuracy.To summarize, the four parameters used to define a mUBQP instance are (i) the problem size n, (ii) the matrix density d, (iii) the number of objective functions m, and (iv) the objective correlation coefficient ρ. The mUBQP problem instances used in the paper and an instance generator are available at the following URL:http://mocobench.sf.net/.In this section, we analyze the impact of the mUBQP problem instance features (in particular, d, m and ρ) on the number of Pareto optimal solutions. The Pareto set cardinality plays an important role on the problem complexity (in terms of intractability), and then on the behavior and the performance of solution approaches. Indeed, the higher the number of Pareto optimal solutions, the more computational resources required to identify a minimal complete Pareto set.We set n=18 in order to enumerate the feasible set {0, 1}nexhaustively. We report the average values over 30 different and independent mUBQP instances of same structure. Fig. 3gives the proportion of Pareto optimal solutions. Unsurprisingly, the matrix density d has a low influence on the results. However, the number of objective functions m and the objective correlation ρ both modify the proportion of Pareto optimal solutions to several orders of magnitude. Indeed, this proportion decreases from 10−4 for ρ=−0.9 to 10−5 for ρ=+0.9 for two- and three-objective mUBQP problem instances. As well, for a negative objective correlation ρ=−0.2, this proportion goes from 10−4 up to 10−1, whereas it goes from 10−5 up to 10−3 for a positive objective correlation ρ=+0.9, for m=2 and m=5, respectively. Fig. 4shows three examples of mUBQP problem instances represented in a two-objective space. When the objective correlation is negative, the objective functions are in conflict, and the Pareto front is large (left). When the objective correlation is zero, the image of the feasible set in the objective space can be embedded in a multidimensional ball (middle). Last, when the objective correlation is positive, there exist few solutions in the Pareto front (right).The hybrid metaheuristic proposed for the mUBQP problem is based on a memetic algorithm framework [36], which is known to be an effective approach for discrete optimization [37,38]. Our approach uses one of the best performing local search algorithm for single-objective UBQP as one of its main components [12,13].Memetic algorithms are hybrid metaheuristics combining an evolutionary algorithm and a local search algorithm. Multiobjective memetic algorithms [39] seek an approximation of the Pareto set (not only a subpart of it). A simple elitist multiobjective population-based evolutionary algorithm operates as the main metaheuristic, whereas an advanced single solution-based local search is used as an improvement operator in place of the mutation step. Keeping the exploration vs. exploitation trade-off in mind, the idea behind such an approach is that the evolutionary algorithm will offer more facilities for diversification, while the local search algorithm will provide more capabilities for intensification.The search space is composed of all binary vectors of size n. The size of the search space is then equal to 2n. The evaluation function is the canonical objective function given in Eq. (2). An unbounded archive of mutually non-dominated solutions found so far is maintained with respect to the Pareto dominance relation defined in Section 2.2. Throughout the search process, solutions are discarded as soon as they are detected to be equivalent to, or dominated by, at least one other solution from the archive. At each iteration, two parents are selected at random from the archive and recombined to produce a single offspring solution (Section 3.5). The offspring solution is further improved by means of a tabu search algorithm (Section 3.3). The evaluation function used by tabu search is based on a scalarizing technique of the initial objective function values (Section 3.2). The corresponding achievement scalarizing function is defined in such a way that the tabu search procedure focuses its search within the objective space area enclosed by the positions of parent solutions. Another crucial component of the HM algorithm appears at the initial phase (Section 3.4), where a computational effort is made in order to identify high-quality solutions for each individual objective function, independently of the remaining objective functions. The algorithm is iterated until a user-given stopping condition is satisfied. An outline of the hybrid metaheuristic (HM) is given in Algorithm 1. The main components of the HM algorithm are detailed below.Algorithm 1Pseudo-code of the hybrid metaheuristic (HM) for mUBQPInput:  matrix Q (dimension m×n×n)Output:  Pareto set approximation A1:initialize the archive A /* see Section 3.4 */2:repeat3:randomly select two individuals xi, xjfrom A4:x← recombine(xi, xj) /* see Section 3.5 */5:x★← tabu_search(x) /* see Section 3.3 */6:A← non-dominated solutions from (A∪{x★})7:until a stopping condition is satisfiedThe tabu search procedure, that will be presented later in the paper, is known to be well-performing for solving single-objective UBQP instances of different structures and sizes [12–16]. Of course, given that it manipulates a single solution only, a scalarization of the multiple objective functions is required due to the multiobjective nature of the mUBQP. The goal is to temporarily transform the mUBQP problem into a single-objective one so that the tabu search algorithm can be used in a straightforward way. Many general-purpose scalarizing functions have been proposed for multiobjective optimization [40], generally with the aim of incorporating preference information coming from a decision-maker. The matter is here different since we are interested in approximating the whole Pareto set. Hence, the parameters required by the scalarizing function are dynamically set according to the current state of the search process. This will be discussed in Section 3.5.In multiobjective memetic algorithms, the most popular scalarizing function is the weighted sum aggregation [39,41], where a weighting coefficient vector represents the relative importance of each objective function. However, this approach cannot identify a number of Pareto optimal solutions, whose corresponding non-dominated objective vectors are located in the interior of the convex hull of the feasible set in objective space [24,40]. Another example is the achievement scalarizing function, proposed by Wierzbicki [42]. This technique is based on a reference point. A reference point gives desirable or acceptable values for each objective function. These objective values are called aspiration levels and the resulting objective vector is called a reference point and can be defined either in the feasible or in the infeasible region of the objective space. One of the families of achievement scalarizing functions can be stated as follows. Let us recall that the maximization of the objective functions is assumed.(3)σ(zr,λ,ϵ)(x)=maxk∈{1,…,m}{λk(zkr−fk(x))}+ϵ∑k=1mλk(zkr−fk(x))where σ is a function from X toℝ, x∈X is a feasible solution,zr∈ℝmis a reference point,λ∈ℝmis a weighting coefficient vector, and ϵ is an arbitrary small positive number (0<ϵ≪1). We keep the ϵ parameter constant throughout the search process. The following achievement scalarizing optimization problem can be formalized.(4)minσ(zr,λ,ϵ)(x)subjecttox∈XInterestingly, two properties are ensured [43]:(i)ifx★=argminx∈Xσ(zr,λ,ϵ)(x), then x★ is a Pareto optimal solution;if x★ is a Pareto optimal solution, then there exists a functionσ(zr,λ,ϵ)such that x★ is a (global) optimum of Problem (4).The following tabu search algorithm, used as a subroutine of the HM, is reported to be one of the best-performing approaches for the single-objective UBQP problem [13]. In order to extend it to the multiobjective case, we use the achievement scalarizing function, so that the initial objective vector values are transformed into a single scalar value. Notice, however, that the evaluation function considered in the paper has a different structure than the classical evaluation function of single-objective UBQP. We describe the main principles of the tabu search below.The neighborhood structure is based on the 1-flip operator. Two feasible solutions are neighbors if they differ exactly on one variable. In other words, a given neighbor can be reached by changing the value of a binary variable to its complement from the current solution. The size of the 1-flip neighborhood structure is linear with the problem size n. As in the single-objective UBQP, each mUBQP objective function can be evaluated incrementally. We follow the fast incremental evaluation procedure proposed by Glover and Hao [47] to calculate the move gain of a given neighboring solution. For a given objective function, the whole set of neighbors can be evaluated in linear time. As a consequence, the objective values of all neighboring solutions are evaluated inO(m·n)in the multiobjective case. Once the objective values of a given neighboring solution have been (incrementally) evaluated, we compute its scalar fitness value with respect to Eq. (3).As a short-term memory, we maintain the tabu list as follows. Revisiting solutions is avoided within a certain number of iterations, called the tabu tenure. The tabu tenure of a given variable xiis denoted by tenure(i). Hence, variable xiwill not be flipped again for a number of tenure(i) iterations. Following Lü et al. [20], we set the tabu tenure of a given variable xiafter it has been flipped as follows.(5)tenure(i)=tt+rand(10)where tt is a user-given parameter and rand(10) gives a random integer value between 1 and 10. From the set of neighboring solutions produced by all non-tabu moves, we select the one with the best (smallest) fitness value according to Eq. (3). Indeed, let us recall at this point that the aim of the tabu search algorithm is to find a good approximate solution for Problem (4), for a given definition of zrand λ. However, all neighboring solutions are always evaluated, and a tabu move can still be selected if it produces a better solution than the current global best. This is called an aspiration criterion in tabu search. The stopping condition of the tabu search algorithm is met when no improvement has been performed within a given number of moves α. The parameter α is called the improvement cutoff. For more details on the tabu search algorithm for the single-objective UBQP, the reader is referred to Glover et al. [13,20].The goal of the initial phase is to identify good-quality solutions with respect to each individual objective function of the mUBQP. This set of solutions initializes the search process in order to ensure that the HM provides a good covering of the Pareto front. To this end, we define the following achievement scalarizing function parameter setting. We set the reference pointzr={z1max,…,zmmax}such thatzkmaxis higher than any possible fk-value. This (unfeasible) objective vector is an utopia point [24,40]. Now, let us consider a particular objective function k∈{1, …, m}. We set λk=1, and λl=0 for all l∈{1, …, m}\{k}.The tabu search algorithm, seeded with a random solution, is then considered within the corresponding achievement scalarizing function as an evaluation function. Those initial solutions have a high impact on the performance of the HM, particularly in terms of diversification. As a consequence, we perform γ independent restarts of the tabu search per objective function in order to increase the chance of getting high-performing solutions with respect to each individual objective function. This process is iterated for every objective function of the mUBQP problem instance under consideration.At each iteration of the HM algorithm, a single offspring solution is created by a recombination operator. First, we select two mutually non-dominated parent solutions at random from the current archive x(i), x(j)∈A such that x(i)≠x(j). Then, an offspring solution is created with uniform crossover. Common variables between both parents are thus assigned to the offspring solution, while the remaining ones are assigned at random. The offspring solution is further improved by means of the tabu search procedure presented in Section 3.3. We aim at obtaining a new solution in an unexplored region of the Pareto front by defining the parameters of the achievement scalarizing function properly. The procedure attempts to find a non-dominated point that “fills the gap” between the objective vectors associated with x(i)and x(j). The region of the objective space where the tabu search algorithm operates is then delimited by the position of parent solutions, given by the following definition of the achievement scalarizing function:(6)zkr=max{fk(x(i)),fk(x(j))}k∈{1,…,m}(7)λk=1|fk(x(i))−fk(x(j))|k∈{1,…,m}This procedure allows the HM to improve, at each iteration, a particular part of the Pareto front approximation, dynamically chosen with respect to the pair of parent solutions under selection. The overall variation procedure is illustrated in Fig. 5.This section presents an experimental analysis of the proposed approach on a broad range of mUBQP problem instances.

@&#CONCLUSIONS@&#
The contributions of the paper are threefold. First, the unconstrained binary quadratic programming (UBQP) problem has been extended to the multiobjective case (mUBQP) which involves an arbitrary number of UBQP objective functions to be maximized simultaneously over the same feasible solution set of binary strings. In the single-objective case, the UBQP problem is one of the most challenging problems from combinatorial optimization, and is known to enable the formulation of a large number of practical applications in many areas. The multiobjective UBQP problem introduced in this paper will allow more practical applications to be formulated and solved.Second, multiobjective UBQP problem instances and an instance generator have been made available at the following URL:http://mocobench.sf.net. These problem instances are characterized by a problem size, a matrix density, a number of objective functions, and a correlation coefficient between the objective values. In particular, the objective correlation can be tuned precisely, allowing one to study the impact of this feature on the size of the Pareto front, and on the performance of solution approaches. These instances are useful for performance assessment and comparison of new algorithms for the general mUBQP problem.Third, we have presented a hybrid evolutionary-tabu search algorithm for the multiobjective UBQP. The proposed approach integrates a state-of-the-art tabu search algorithm for the single-objective UBQP, with Pareto-based evolutionary optimization principles. Based on the achievement scalarizing function, the proposed algorithm is able to generate both supported and unsupported solutions, with the aim of finding a well-converged and well-diversified Pareto set approximation. We have showed that this hybrid metaheuristic obtains significantly better results than two conventional evolutionary multiobjective optimization techniques for large-size multiobjective UBQP problem instances of different structure and size.A better understanding of the main problem characteristics would allow us to improve the design of heuristic search algorithms by incorporating a deeper problem knowledge. To this end, we plan to study the correlation between the main problem features and the algorithm performance through fitness landscape analysis in multiobjective combinatorial optimization [35,51]. Last, we hope that the challenge proposed by multiobjective UBQP will gain the attention of other researchers. In particular, a stronger link is required between multiobjective UBQP formulations and existing combinatorial optimization problems like the multiobjective variants of assignment, covering, partitioning, packing and quadratic knapsack problems. This would enable the identification of a Pareto front approximation for many problems from multiobjective combinatorial optimization under a unified modeling, either as a stand-alone methodology, or to provide a fast computation of a lower bound set for improving the performance of exact approaches.