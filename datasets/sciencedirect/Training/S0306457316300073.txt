@&#MAIN-TITLE@&#
New query suggestion framework and algorithms: A case study for an educational search engine

@&#HIGHLIGHTS@&#
HightlightsQuery suggestion (QS) problem is reduced to “comparison of queries” problem.A modular and practical framework is suggested for development of QS algorithms.Breadth First Search graph traversal method is better for query-log traversing.Combining QS algorithms improves the performance.Suggested new QS algorithms achieved 66–90% performance increase.

@&#KEYPHRASES@&#
Query suggestion,Framework,Educational search engine,Query recommendation,

@&#ABSTRACT@&#
Query suggestion is generally an integrated part of web search engines. In this study, we first redefine and reduce the query suggestion problem as “comparison of queries”. We then propose a general modular framework for query suggestion algorithm development. We also develop new query suggestion algorithms which are used in our proposed framework, exploiting query, session and user features. As a case study, we use query logs of a real educational search engine that targets K-12 students in Turkey. We also exploit educational features (course, grade) in our query suggestion algorithms. We test our framework and algorithms over a set of queries by an experiment and demonstrate a 66–90% statistically significant increase in relevance of query suggestions compared to a baseline method.

@&#INTRODUCTION@&#
The number of Internet users in the world is estimated to be more than 2.89 billion, as of May 2014, which accounts for 42.3% of the human population (Internet Society, 2015). Advances in smartphone technology and network bandwidths also boosted Internet data traffic in the last few years. It has also enabled the very young population to access the Internet. People use search engines to find the relevant information in this immense environment. Large scale search engines try to cope with these demanding requirements coming from a very diverse population with differing cultures and ages. Recently, there has been interest in literature for analyzing search behavior of different user groups, especially children.The primary goal of a search engine is to retrieve relevant results of a query with high ranks. Even though this objective primarily depends on the search engine ranking algorithm, the quality of the submitted query is also important. To this end, query suggestion (recommendation) techniques help users to formulate or refine their queries. A search engine may provide suggestions while the user is typing the query (referred to in literature as “query auto-completion”) or after a query submission. This paper focuses on the latter type of query suggestion techniques. Earlier studies addressing this problem mainly focus on large scale search engines that target the public with very diverse information needs. On the other hand, vertical search engines index resources on a specific subject and respond to queries coming from a specific group of people. An educational search engine, to give an example of a vertical engine, targets students (and instructors) and covers course-related resources. Query suggestion techniques for such systems are not well investigated in literature before. It is important to check whether algorithms proposed for large scale search engines still apply for vertical search engines. Query suggestion is more important for K-12 educational search engines since children have difficulty in formulating queries (Babuscu & Ozcan, 2014).In this study, we first redefine and reduce the query suggestion problem as a series of query comparisons. We propose a general modular framework based on this definition. Our framework includes two major steps along with several minor steps. In the first major step, candidate queries for suggestion are selected. Next, these queries are sorted based on different query scoring algorithms exploiting various query, session and user features. Our framework is modular so that new query candidate selection and query scoring methods can easily be plugged in. It also enables several methods to be combined easily.We evaluate the performance of query suggestion techniques proposed for large scale search engines on an educational search engine and try to improve query suggestion. Even though vertical search engines have smaller numbers of users and click-through data, they generally have more extensive and specific features related to their users and their content. In the case of an educational search engine, age, grade, school and city of a student could be recorded as extra features. In addition, indexed resources may have specific properties such as course, related grade(s), content type (subject description, questions, animation/game, etc.), and related curriculum items. All these extra features could be exploited for more advanced ranking and query suggestion techniques. We propose new suggestion techniques based on some of these features and compare their effectiveness to former techniques in literature.Our main contributions in this work are listed as follows:•We redefine and reduce the “Query Suggestion (QS)” problem,We propose a modular, extendable query suggestion framework that enables new methods to be easily plugged in and may contain many QS algorithms.We evaluate the performance of a click-through data based QS technique proposed for general purpose search engines in literature, on a real educational search engine log.We propose new QS algorithms that exploit query features for general (query, session, user features) and educational search engines (course and grade features).We also propose hybrid algorithms that combine several QS techniques for higher effectiveness. These algorithms are integrated in the above mentioned framework.This paper is organized as follows: Section 2 gives information on the related works on query suggestion and briefly mentions studies focusing on child users. We then introduce how we redefine and reduce the query suggestion problem. Section 4 includes our query suggestion framework where the query suggestion problem is handled in a modular and pluggable architecture. In Section 5, we describe query scoring and comparison algorithms exploiting various features such as query, session, user and educational properties. In Section 6, we mention our experimental setup and discuss the results. Finally, we conclude the paper and mention future research directions.

@&#CONCLUSIONS@&#
