@&#MAIN-TITLE@&#
Models and solution procedures for the resource-constrained project scheduling problem with general temporal constraints and calendars

@&#HIGHLIGHTS@&#
We consider the RCPSP with general temporal constraints and break-calendars.A new and powerful time planning method is proposed.Three binary linear model formulations are presented.A priority-rule method and three different versions of a scatter search procedure are developed.We provide a test set and perform an extensive computational study.

@&#KEYPHRASES@&#
Resource-constrained project scheduling problem (RCPSP),Calendars,Minimum and maximum time lags,Binary linear model formulations,Scatter search,

@&#ABSTRACT@&#
In this paper, the resource-constrained project scheduling problem with general temporal constraints is extended by the concept of break-calendars in order to incorporate the possible absence of renewable resources. Three binary linear model formulations are presented that use either start-based or changeover-based or execution-based binary decision variables. In addition, a priority-rule method as well as three different versions of a scatter search procedure are proposed in order to solve the problem heuristically. All exact and heuristic solution procedures use a new and powerful time planning method, which identifies all time- and calendar-feasible start times for activities as well as all corresponding absolute time lags between activities. In a comprehensive performance analysis, small- and medium-scale instances are solved with CPLEX 12.6. Furthermore, large-scale instances of the problem are tackled with scatter search, where the results of the three versions are compared to each other and to the priority-rule method.

@&#INTRODUCTION@&#
Resource-constrained project scheduling is concerned with the assignment of execution time intervals to activities so that given temporal constraints between activities are satisfied, the prescribed resource capacities are not exceeded, and a given objective, e.g., the project duration, is minimized (see, e.g., Neumann, Schwindt, & Zimmermann, 2003b or Józefowska & Wȩglarz, 2006). Temporal constraints are usually given by simple precedence constraints (the problem is then abbreviated by RCPSP) or by general minimum and maximum time lags (RCPSP/max). Applications of resource-constrained project scheduling can be found, e.g.,•in make-to-order production, where resource-demanding operations, which need to be performed for the manufacturing of customer orders, have to be scheduled (Neumann & Schwindt, 1997),at software implementations, where resources have to be selected to perform a task, resources are generally multi-skilled, and the time required for completing a task depends on the number of assigned resources (Alba & Chicano, 2007), andat service centers, where tasks have to be scheduled and assigned to a multi-skilled workforce with heterogeneous efficiencies (Valls, Pérez, & Quintanilla, 2009).For projects with a short-term planning horizon, breaks like weekends or holidays have to be incorporated, where some of the renewable resources needed are not available. Particularly, the consideration of “break-calendars” (or “calendars”) is necessary for many operative RCPSP-applications in which persons (e.g., employees, teachers, or customers) are involved, i.e., regarding calendars may be useful in the above mentioned applications. In practice, different renewable resources generally have different break-calendars. For example, the employees’ working days per week vary depending on the type of job, the season, or the labor contract. A typical office employee works Monday to Friday, and a possible 4-weeks work plan for a nurse is 6–3–7–3–7–2 (work days and days off mentioned alternately). In contrast to persons, renewable resources like machines or equipment can be treated as always available at a company, since maintenance work can be modeled as separate activities that have to be performed in regular intervals. Thus, no breaks have to be considered in the respective calendars.For the treatment of weekends or public holidays, it is significant to distinguish between activities that can be interrupted during breaks as well as activities that must be performed without interruption. The first group contains, e.g., assembling, drilling, and cutting processes, or activities of the quality management that must be executed manually in order to maintain a preferred level of quality. The second group contains, e.g., heating, cooling, drying, and pouring processes, or training activities, where staff have to travel over long distances to reach off-site training locations. For some interruptible activities, a start-up phase must be used during which the activity has to be processed without suspending the execution. It is obvious that, e.g., management consultants should not start working at a company on a Friday morning. If their corresponding work plan contains a 5-day week, a start-up phase of two days ensures that a consulting phase only starts on a day between Monday to Thursday. Moreover, activities should only be paused during breaks to guarantee that employees are focused on a small number of activities and do not change frequently between different types of work. Hence, a general preemption of activities at all integer points in time (in addition to break start times) is not acceptable in order to reduce processing errors and guarantee high quality of intermediate and end-products (Coviello, Ichino, & Persico, 2010). Additionally, many machines require skilled staff to operate, so that complex activities can only be performed if both machines and employees are on hand. Since machines are usually blocked by, e.g., components or individual parts during breaks, they must stay engaged even if the personnel is not on site. In order to ensure that the machines are blocked as short as possible, an activity should only be interrupted for the duration of the longest break of the assigned staff. By only allowing interruptions of activities at breaks, an introductory training course (for safety, health, or environmental requirements) must only be considered once and can be included into the processing time of an activity.Typically, an activity requires several renewable resources for execution. Hence, an “activity calendar” can be obtained on the basis of all calendars of the associated resources. In addition to resources and activities, minimum and maximum time lags between activities may also depend on break-calendars. An example is the delivery of a spare part that has been processed at a plant and must be delivered to another plant for subsequent manufacturing processes. If the delivery can only be performed by a specific less-than-truckload carrier that needs three work days for transportation, then, the “absolute” delivery time may take five days when a weekend is included.Consequently, the consideration of break-calendars for resources, activities, and time lags, interruptible and non-interruptible activities, resources that are either engaged or released during breaks, and activity start-up phases is highly important and should not be ignored for operative RCPSP-applications. Therefore, the aim of the paper on hand is to incorporate all of the above mentioned features and to develop targeting models and solution procedures.The remainder of this paper is organized as follows: Section 2 presents related literature of resource-constrained project scheduling problems with general temporal and calendar constraints (RCPSP/max-cal). In Section 3, the proposed RCPSP/max-cal is formally described and an example is given to illustrate the construction of an associated activity-on-node network. Section 4 contains an enhanced approach for finding the set of feasible start times of all activities and all corresponding absolute time lags between activities. In Section 5, three different binary linear model formulations for the RCPSP/max-cal are presented. Section 6 is devoted to solution procedures in order to solve the problem heuristically. The binary models as well as the heuristic methods benefit from the time planning procedure significantly. The results of a comprehensive performance analysis are given in Section 7, where it is shown that many instances with 50 activities can only be solved to optimality if the time planning procedure is incorporated. Finally, conclusions are presented in Section 8.

@&#CONCLUSIONS@&#
In this paper, the resource-constrained project scheduling problem subject to general temporal as well as calendar constraints is treated. In practice, calendars have to be taken into account in order to incorporate that resources, like workers or tools, are not available during breaks, e.g., weekends or holidays. The problem is motivated by several real-life conditions that can be modeled through calendarization. After describing the problem formally, we presented a novel time planning procedure that finds the feasible start times of activities and the longest paths between start times of activities (absolute minimum time lags). The procedure is used in MIP-formulations and solution algorithms. In order to solve the RCPSP/max-cal, either exactly or heuristically, three binary linear model formulations, a priority-rule method, as well as three versions of a scatter search algorithm are presented.The results of our performance analysis show that many decision variables in MIP-models can be eliminated and run times can be reduced if the time planning procedure is executed in a preprocessing step. In particular, both the start-based and the changeover-based model perform very well; they are able to solve most of the hard instances with 50 activities andRS=0.1. The execution-based model is found to be of little value as alternative solution approach. In addition, we introduced a priority-rule method that essentially improves existing priority-rule methods for the RCPSP/max-cal. Existing methods are based on determining the earliest and latest start times for all activities not yet scheduled in each iteration. In contrast, our priority-rule method uses the longest path lengths between activities, which are determined in the time planning procedure, in order to update earliest and latest start times. The priority-rule method is extended to a multi-start procedure. Furthermore, three different versions of a scatter search algorithm are developed. Computational results reveal that scatter search is a good choice to solve the problem under consideration, since it finds optimal solutions for nearly all small instances (10 and 20 activities, respectively), it obtains good results in comparison to MIP-models, and it performs better than the priority-rule method.We believe that the recovery of the RCPSP/max-cal and the introduction of new problem instances can be a starting point for other researchers designing exact and heuristic solution procedures. The best known exact solution method for the RCPSP/max is based on lazy clause generation, which combines constraint programming and boolean satisfiability solving (Schutt, Feydy, Stuckey, & Wallace, 2013, 2015). Therefore, it seems to be promising to consider lazy clause generation in order to solve RCPSP/max-cal instances. Finally, the study of different objectives like resource leveling or resource investment in combination with calendarization is an interesting topic.