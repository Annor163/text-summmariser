@&#MAIN-TITLE@&#
A robust singular point detection algorithm

@&#HIGHLIGHTS@&#
The proposed algorithm can be used to detect singular points, viz. core and delta points, of fingerprints accurately, even if the images are of bad quality.It can be used to classify a fingerprint into one of the categories such as arch, tented arch, left loop, right loop, double loop or whorl pattern even in the absence of delta points.It has been tested on three available databases. Its classification accuracy is found to be more than 96%.

@&#KEYPHRASES@&#
Biometrics,Fingerprint classification,Singular points,Core,Delta,

@&#ABSTRACT@&#
This paper proposes an efficient algorithm to extract the singular points which can be used to classify the given fingerprint. It makes use of a novel algorithm which is a hybrid of orientation field, directional filtering and Poincare Index based algorithms to detect singular points, even when the fingerprint is of low quality or singular point is occluded. Locations of detected singular points are not much accurate and thus they are further refined. Also, some delta points which lie near to the border, may be missed out at the time of detection. Efforts are made to retrieve these missed points. The proposed algorithm also determines the direction of a singular point along with its type (either core or delta). It uses these detected singular points to classify accurately arch, tented arch, left loop, right loop, double loop and whorl type fingerprint patterns. It can handle efficiently the cases of missing delta points during fingerprint classification. The proposed algorithm has been tested on three publicly available databases. It reveals that the proposed algorithm exhibits better singular points detection and fingerprint classification performance in comparison to other well known algorithms.

@&#INTRODUCTION@&#
A fingerprint (FP) contains patterns of ridges and valleys that flow in a coherent manner. It is one of the most extensively studied and well accepted biometric traits because it satisfies various necessary characteristics of a suitable biometric trait like uniqueness, permanence, difficult to forge, etc. Besides ridge-valley flow, a FP also contains (i) minutiae which are randomly distributed local features; (ii) global features called as ‘singular points’ (SPs); and (iii) specific type of FP pattern [1]. Any SP can be categorized as either core or delta point which is defined as a concentrate region where the ridge curvature converges to a local maximum or local minimum respectively [2]. This paper proposes an efficient algorithm focused to extract accurately SPs and to detect the FP pattern.Accurate matching, correct classification, efficient indexing and enhancement are of paramount importance in a FP based biometric system [3]. Most of the times, these are difficult to achieve due to bad quality FPs [4]. Thus, accurate detection of SPs can play a crucial role in solving many problems like (i) indexing large FP database [5], (ii) smoothing OF by reconstruction [6], (iii) synthesizing FPs [7], (iv) alignment of FP which assists in global FP matching [8] and (v) classification of FPs [9]. Thus, reliable extraction of SP is an important problem to be considered.Extracted SPs are used for FP classification [9–11]. But such SP based classification systems may give erroneous classification results when (i) a SP is left out during acquisition; (ii) a SP is not accurately localized; or (iii) direction of a SP is incorrect. SP can be missed during acquisition when a FP is partially captured due to fixed area of FP acquisition sensor. These are mostly the case with delta points. Thus, unlike existing algorithms, it is better if FP classification can successfully work even in the absence of delta points. Missing of genuine SPs and generation of spurious SPs are the common phenomenon in low quality FP images. Such SPs are inevitably generated [12] due to (i) inappropriate interaction between environment and user which causes partial FP acquisition, (ii) user condition like cuts and bruises on fingertip, (iii) sensor's condition like small area and presence of latent prints, and (iv) occupation or age which can smoothen the ridge-valley structure. Even in good quality FP images, it is observed that SPs can be missed if two core points lie close to each other like in the case of whorl pattern or SPs can be spuriously detected like in the arch type pattern.Advantages of the proposed algorithm are manifold. The proposed algorithm can accurately detect the SPs even if the FP has low quality or SP is occluded. It reconstructs such areas using a model based algorithm. It detects low false generated minutiae and more genuine minutiae in a time efficient manner. Further, it gives highly accurate location and direction of a SP along with a SP type (core or delta). Moreover, it has proposed a hybrid SP extraction algorithm which recaptures the missed delta points present near FP borders. The proposed FP classification algorithm makes use of these extracted SPs for better performance. It reliably detects the arch pattern and even marks a reference point in such pattern. It can correctly distinguish between left/right loop type FPs even in the absence of delta points, which is usually the case when FP is captured in an unconstrained environment. Also, it can accurately distinguish between double loop and whorl pattern which is a challenging task in FP classification. The experiment results conducted on three publicly available databases, reveal that the proposed system exhibit better SP detection and FP classification performance than other well known systems.The paper is organized as follows. Next section discusses some of the algorithms which are used to design the proposed algorithm. The proposed algorithm has been presented in Section 3, which can be used to extract SPs and to classify FPs. Experimental results are analyzed in Section 4. Conclusions are given in the last section.This section discusses various algorithms for SP detection and FP classification that are used to design the proposed algorithm.SP extraction algorithms based on OF can be categorized as (i) Poincare Index (PIindex) based, (ii) directional partitioning based, (iii) template based, (iv) orientation curvature based algorithms, and (v) OF modeling based algorithms.An algorithm based on PIindex evaluation has the following advantages: (i) it is robust against image rotation, (ii) it gives highly accurate SPs location and (iii) it gives fixed values at each SP location, using which arch type pattern can easily be identified. PIindex value is calculated at each pixel along a closed path (i.e. a block). Let ϑ be such a pixel, surrounded by a block having nϑboundary pixels. Let(o1,o2,…,onϑ)be OF of these boundary pixels in a clockwise fashion. Then PIindex value at the central pixel ϑ, PI(ϑ), is given by(1)PI(ϑ)=∑i=1nϑ−1[f(oi+1−oi)]+f(o1−onϑ)where f is(2)f(x)=x,if|x|≤π/2π−x,ifx>π/2π+x,ifx<−π/2PI(ϑ) is equal to +π or −π at the core or delta point location respectively. Directional image can be used instead of OF for calculating PIindex [13,14].If PIndex is computed using small block-size, then SPs can be reliably located. But many spurious SPs can also be generated due to noise or bad quality. On the contrary, if larger block-size is used then, true SPs may be missed but it removes spurious SPs. Hence, there is a trade-off between true-miss and false-accept. Other limitations of such algorithms are that (i) these can generate false SP or miss genuine SPs for low quality FP images, (ii) direction of SPs is not estimated and (iii) these are time consuming [15].Two important properties [16] of PIindex are (i) if a FP image is captured completely then, it should have the same number of core and delta points, and (ii) PIindex value is independent with the integral paths till these paths are homotopic i.e., does not contain any new SP. These properties can be used to remove some limitations of PIindex based algorithms [17,16,18].Such algorithms clusters similar orientation, direction [19] or gradient [15]. Such clusters are separated by several boundaries (or transition lines[15]). Intersections of these transition lines give the points where the ridge curvatures attain local maxima/minima, i.e. SPs [2]. Estimates of orientation, direction or gradient may be spurious due to the bad quality, hole or minutiae, etc. thus, smoothing operations can be performed which can shift the location of SPs. Another important point to note is that if the number of clusters is increased, then all intersections may not be SPs, but at SP, there must be an intersection. Though these algorithms are computationally efficient, but they may fail to extract SPs when SPs lie close to each other like whorl pattern. Also, this type of algorithms cannot distinguish arch pattern.In template based algorithms [20–22], SP type filters (or templates) are convolved with the FP image to extract singularities. An advantage of such algorithms is that position and spatial orientation of a SP can simultaneously be extracted and this orientation estimate is highly accurate. But such algorithms do not have any defined value for SP. These algorithms use either a threshold or a global maxima to extract SPs. Disadvantage of a threshold based algorithm is that such a threshold which can detect multiple genuine SPs and can avoid spurious SPs, cannot be effectively determined. On the other hand, global maxima based SP detection can detect one core and delta point location. Also, in the absence of clearly defined value of SP, the arch type pattern cannot be determined.As areas near SPs have large orientation change, this leads to high curvature [23,24]. Curvature can be measured by various ways [25,26]. Disadvantages of such algorithms are that (i) good number of spurious SPs are generated, (ii) SP can be easily missed due to low quality, (iii) SP type and direction cannot be determined and (iv) it fails to separate arch type pattern as there is no fixed value for SP.If OF used to detect SP is erroneous due to low quality, then it results in a spurious SPs generation or missing of genuine SPs. Therefore, it is smoothed or modeled by using global structure before the detection of SP to remove local noise. Also, missing of genuine SPs is reduced as OFs are accurately interpolated in low quality areas using global constraints. OF modeling algorithms can be divided into two categories based on whether prior knowledge of SPs is required or not. First category which requires prior knowledge of SPs for modeling OF [27–29] and is not of much use in SP detection. Another category which does not require any prior knowledge of SPs for orientation modeling [6,16,30–33] is time-efficient and highly robust against spurious SPs. But OF modeled by it deviates from actual OF, especially near SPs. Thus, the extracted SPs may have poor localization.FP classification algorithms can be classified as:1.Syntactic based algorithms cluster similar elements [34] and assign a symbol to each cluster. These symbols build grammar for each FP class. For the given FP image, the grammar is obtained and a parsing strategy is used to find the most appropriate FP class. But some FP classes require complex symbol grammar.Rule-based algorithms rely on the heuristics and are mainly used with other features (like ridge line shape [35]) for better FP classification. Such algorithms give improper results if given FP is of bad quality or SPs are missed during FP acquisition.Structural algorithms build a hierarchical organization from low-level to higher-level features to classify FP. OF of the given FP image is clustered and these clusters are represented in the form of a graph (i.e., hierarchical organization) [36]. For classification, inexact graph matching technique is used for matching this graph with each class prototype graph. For accurate results, these algorithms require accurate clustering, which in turn need accurate OF.Hybrid algorithms can also be used to classify the FPs. Probabilistic neural network can be used with ridge tracing algorithm [9]. Similarly, rule-based algorithm can be used with ridge tracing and support vector machine [37].It is seen that FP classification is mainly dependent on OF estimation in one way or the other. As accurate OF estimation is not possible in low quality FP images, therefore FPs can be wrongly classified.This section proposes an efficient algorithm to extract SPs from a given FP image. It smoothen OF by OF modeling and a candidate set of SPs are extracted from it by applying modified Directional partitioning algorithm. This candidate set of SPs is validated by PIindex evaluation. This whole algorithm has the benefits of model based, directional partitioning based and PIindex based algorithms. That is, using the proposed algorithm, only genuine SPs are reliably extracted. Subsequently, a post-processing operation is performed to localize detected SPs more accurately and detect the missing delta points, if any. These detected SPs are used to classify the FPs. The flow diagram of the proposed algorithm is shown in Fig. 1.An image enhancement technique [38] is applied on the given FP, I. It extracts FP foreground blocks and enhances ridge-valley pattern using anisotropy measures and STFT analysis respectively. Multi-scale Gaussian filter based algorithm [17] is used to extract the OF θ from the enhanced image. Gradient vectors, coherence data and sinusoidal components are smoothed in it by using a Gaussian filter to remove local errors. Quality of I is estimated at each pixel by using symmetric filters [39]. It is required in subsequent steps for the extraction of missing delta points. Besides Q, symmetric filters also give core and delta filter responses, i.e.,Sˆ1andSˆ−1respectively.It is observed that OF θ is error prone near bad quality areas and if it is used for SP detection, then it generates a large number of spurious SPs. This can be visualized by using Fig. 2(1a)–(4a) which show θ for the FPs corresponding to Fig. 2(1)–(4) respectively. Thus, OF is first smoothed by using the OF modeling algorithm [6]. Modeled OF are constructed from the projection of actual OF onto the Fourier basis [6]. The number of Fourier basis are decided by the order N used to create the Fourier basis. Thus, N plays a crucial role in determining the effectiveness of OF modeling. If N is small then modeled OF is very different from the actual OF, especially near the areas consisting of large orientations changes (like areas near SPs). But for large value of N, abrupt changes arise due to bad quality, are also modeled. Experimentally, it is observed that order N=6 is sufficient to fit the θ with low residual error rate [6]. Letθ¯represent the modeled OF obtained from θ. To visualize modeled OFθ¯, consider Fig. 2(1b)–(4b) which showθ¯for the FP images corresponding to Fig. 2(1a)–(4a) respectively. Also, θ for the FP images are shown in Fig. 2(1a)–(4a). Therefore, it is clearly indicated from Fig. 2 that θ contains local noises which are removed by using modeled OFθ¯.This section proposes an efficient algorithm for extracting the SPs by using modeled OFθ¯. It consists of two major tasks. Initially, a candidate set of SPs is obtained by using proposed modified directional partitioning algorithm. Its SPs are validated by using a PIindex algorithm which has high localization ability and can remove spurious SPs obtained in arch type pattern.In the modified directional partitioning algorithm, transition lines are first detected for extracting a candidate set of SP. Clustering of modeled OFθ¯is used for detection. It does not require any preprocessing or multiple resolution analysis due to smooth mature ofθ¯. Thus, accurate SPs are located in less time computation. Let Z be the number of bins required for clustering. Then directional image DIwhich represents a unique number for each cluster is given by(3)DI=Z·θ¯πExperimentally, it is found that Z=8 is sufficient for the accurate results. Transistion line is detected from DIby using Algorithm 1. In Algorithm 1, binary image FLbinis formed by setting those pixels to 1 which have a change of cluster along X or Y direction. Therefore, FLbincontains 1 at the transition line location; otherwise it is 0. As intersections of transition lines are regarded as the SPs, these are determined by applying Harris-corner detector [40] on FLbin. All the intersections may not be SPs as can be observed in the arch type pattern thus, these are referred as a candidate set of SPs.Algorithm 1TransistionLineDI,length,breadthRequire: Size of Directional image DIis given by length and breadthEnsure: Binary image FLbincontain 1 at transition line otherwise 0.1:FLbin= zeros(length, breadth)2:fori=1 to length-1 do3:forj=1 to breadth-1 do4:ifDI(i, j)≠DI(i+1, j)ORDI(i, j)≠DI(i, j+1) then5:FLbin= 16:end if7:end for8:end for9:returnAlgorithm 2ValidationCandidateSet(θ¯,X,Y)Require: X and Y store x and y coordinates of candidate SPs whileθ¯is modeled OFEnsure: Arrays C and D store locations of core and delta points respectively1:a = b = 12:C = D = []   //Empty arrays.3:/* let |X| is number of elements in X*/4:fori=1 to |X| do5:Consider (X[i], Y[i]) and its 8-connected neighbors6:Calculate there PIindex value by usingθ¯at a block-size of 3×3.7:Pixel locations whose PIindex value is equal to π are appended in C8:While pixel locations whose PIindex value is equal to −π are appended in D9:end for10:returnExtracted candidate set of SPs is validated to extract genuine SPs by using Algorithm 2, which gives the location of genuine core or delta points in C and D arrays respectively. It is observed that a candidate SP can deviate from actual SP location by 1pixel and sometimes it is not a genuine SP, like in arch pattern. To accurately localize and validate a candidate SP, PIindex values are evaluated at a candidate SP pixel and its 8-connected neighboring pixels. If PIindex value at a pixel is π or −π then that pixel is marked as genuine core or delta point respectively. Use of PIindex guarantees that spurious SPs generated due to arch pattern are removed. PIindex values are evaluated by usingθ¯in a minimum possible block-size, i.e. 3×3. If PIndex is calculated in small block-size, then SPs can be reliably located but it can generate many spurious SPs in case of erroneous OF. Since it is applied on modeled OF, problem of spurious SPs generation is avoided. Besides accurate localization, use of minimum possible block-size also assures that maximum one SP can be detected corresponding to a candidate SP due to the smooth nature ofθ¯. If larger block-size is used, then SPs are detected at multiple locations corresponding to a candidate SP and these are not accurately localized, thus, it is avoided.Algorithm 3SingularPointDetection(θ¯,z)Require: Z is number of bins for clustering modeled OF,θ¯.Ensure: Arrays C and D contain core and delta points respectively1:DI=Z·θ¯π2:(length, breadth)=sizeof(DI)3:FLbin=TransistionLine(DI, length, breadth) //Refer Algorithm 14:Find candidate SPs by applying Harris Corner Detector on FLbin5:x and y coordinates of candidate SPs are stored in X and Y respectively.6:[C, D]=ValidationCandidateSet(X, Y) //Refer Algorithm 27:returnThe proposed genuine SPs extraction algorithm is explained in Algorithm 3 where genuine core or delta points are stored in arrays C and D respectively. It extracts SPs even if these SPs lie close to each other. As an example, refer Fig. 2(4b) which shows detected core and delta points in blue and green squares respectively, for the FP shown in Fig. 2(4). This is due to the use of the robust extraction of pixel-level OF using multi-scale Gaussian filter based algorithm. Further, it is observed that the use of modified directional partitioning before PIindex method helps to reduce the search space substantially, thereby reducing the computational cost. Examples of such SP detections are shown in Fig. 2(1b)–(4b).SP detection accuracy is further improved by using various post-processing operations. If a SP is extracted by using modeled OF (θ¯), then its location may be shifted from its actual position. Thus, a SP localization algorithm has been proposed. Also, delta points present near FP borders can be missed which are recaptured by using a hybrid SP extraction algorithm.Modeled OFθ¯is error prone near SPs; thus locations of SPs are refined by using actual OF θ. The proposed algorithm can detect SPs even if SPs lie in bad quality block. If θ is used to refine such SPs lying in bad quality blocks, then it results in spurious localization of SPs. To avoid such cases, if a SP has quality value less than some predefined threshold Qthreshold(experimentally chosen to be 0.1), then location of that SP is not considered for refinement. Otherwise, there is a need to refine its location.Algorithm 4FindBlockSizeCore(θ¯,f¯,x¯,y¯)Require: Modeled OFθ¯and maximum block-sizef¯Ensure: k is the adaptive block-size.1:k=2×f¯2:repeat3:Extract a block of size k×k centered at(x¯,y¯)4:Calculates PIindex value of the extracted block by usingθ¯.5:k =k26:until (PIvalue==π)7:k=2×k8:returnThe proposed algorithm uses Hill Climbing algorithm for refining SP location. It is based on the assumption that the deviation of SP localization in modeled OF from that of actual OF is not large. Let us consider that there is a core-type SP whose location needs to be refined and is labeled as C with the initial location given as(x¯,y¯). For refining it, a blockBˆof size k×k and center(x¯,y¯)are extracted from S1. In the proposed algorithm, value of k is adaptively chosen because:1.It is observed that in whorl type pattern, core points lie closed to each other. Hence, if a high value of k for a block is selected, it may result in loss of actual core point when two core points lie in a block.Similarly, if value of k is low, then the algorithm may take a large number of iterations to converge and may give spurious results due to less number of elements in a block for finding global maxima in core filter responseSˆ1.Algorithm 5RefineLocationCore(θ¯,S1,C,Q,Qthreshold,f¯)Require: Modeled OFθ¯, core-filter response S1, core-point locations C, quality map Q, threshold Qthresholdand maximum block-sizef¯Ensure: An array (C¯) where refined locations of core points are stored1:for i = 1 to sizeof(C) do2:Store the locations of C[i] in(xˆ,yˆ)3:ifQ(x¯,y¯)>Qthresholdthen4:repeat5:x¯=xˆandy¯=yˆ6:k =FindBlockSizeCore(θ¯,f¯,x¯,y¯)//Refer Algorithm 47:Extract the block from S1 which has size k×k and center(x¯,y¯)8:Detect global maxima of the block and store its location in(xˆ,yˆ)9:until(x¯==xˆANDy¯==yˆ)10:C¯[i]=(xˆ,yˆ)11:else12:C¯[i]=C[i]//For bad quality, locations are not modified.13:end if14:end for15:returnThis k is used to extract blockBˆ(of size k×k and center(x¯,y¯)) fromSˆ1which is used to refine(x¯,y¯). Let global maxima ofBˆbe(xˆ,yˆ)which gives the most probable location of core point (by template based algorithm [39]) insideBˆ. Hence, if(x¯,y¯)is different from(xˆ,yˆ)then it is refined by setting it to(xˆ,yˆ). This procedure is repeated till global maxima location and initial location coincide. Algorithm 5 is used to refine the locations of core points in C and to store these refined locations inC¯. Similarly location of delta points is modified.The proposed algorithm for refining SPs locations can accurately detect the locations of SPs even if SPs lie in bad quality regions. Also, by choosing the adaptive block-size, accurate locations of SPs can be found even if two SPs lie close to each other.Algorithm 6FindMissingDelta(S−1, γ, θ)Require: Delta-filter response S−1, actual OF θ and number of maxima to be used γEnsure: Array DeltaList which contains the locations of all missed delta points1:DeltaList = []2:Find the locations of top γ global maxima in S−13:Store these locations in ((x1, y1), (x2, y2)….(xγ, yγ))4:for i=1 to γdo5:Extract the block which has size 7×7 and center at (xi, yi).6:Calculate PIindex value of this block by using θ and store it in PIvalue7:ifPIvalue==−πthen8:append(DeltaList,L[i])9:end if10:end for11:returnUse of modeled OF in SP detection may result in missing of some genuine SPs (especially delta points) which are closed to the borders. Reasons for this are: (i) FP enhancement and segmentation, (ii) location of a SP may be shifted a lot in modeled OF such that it lies outside the foreground region, or (iii) the behavior of a SP is localized in a small area, hence such a SP is not accurately modeled. Such cases can be seen from Fig. 2(2b) and (4b) where delta points (in green color) are missed, when modeled OF is used for SP detection. Hence, missed delta points which lie in the foreground are recaptured. Initially, cases of missing delta points are determined. It can be noted that if a FP image is captured completely, then it should have the same number of core and delta points [16,18]. Therefore, if a FP has an unequal number of core and delta points, then it implies that either full FP is not captured, and/or some SPs are not detected. Hence, if an image has a number of core points greater than the number of delta points, then that image is further analyzed. For analysis, top γ global maxima near the borders of delta filter response S−1 are determined where γ is the difference between the total number of core and delta points. To validate these top γ maxima, PIindex value on these locations are calculated by using θ at a block-size of 7×7. If PIindex value at any of these maxima is −π then that point is marked as genuine delta. Algorithm 6 is used to recapture the missing delta points lying in the foreground and to store these in an array DeltaList. To perceive this, consider Fig. 2(2c) where missed delta point (on the left in Fig. 2(2b)) is retrieved.This section proposes an algorithm to classify a given FP which uses the number, location and direction of core points. Direction of each core point plays a crucial role in FP classification and is estimated by using a template matching algorithm. Let location of a core point be(x¯c,y¯c). Then the direction of core filter response S1 at the pixel(x¯c,y¯c)is referred as the direction of this core point. Separate cases are considered for FP classification, based on the number of extracted core points.If a FP image contains no core point, then it has arch pattern. In such cases, there is no core point which can be used as a reference point. Determining the reference point in arch pattern is very important [42,43], therefore the global maxima for core filter response, S1 is used as a reference point.If a FP image contains one core point, then it can be classified among left loop, right loop or tented arch pattern. Assume that(xc1,yc1)andθc1are the location and the direction of the extracted core point respectively. And there is a line l1 which passes through(xc1,yc1)and has direction given byθc1. There are two possibilities which are (1) there is one delta point or (2) there is no delta point. These cases are separately analyzed as:1.Possibility 1: Let(xd1,yd1)be the location of delta point. It is observed that tented arch patterns have vertical trend and they do not have any ridge re-curving between core and delta points [1]. Therefore, a distance measure, SD[44], is used for finding tented arch patterns. It gives minimum possible distance between delta point and line l1 which is oriented atθc1and passes through(xc1,yc1). It is given by(4)SD=|yd1−mxd1−c|1+m2wherem=tanθc1andc=yc1−mxc1. If SD is less than a threshold ThTA, then FP image has tented arch pattern. Since there should not be any re-curving ridge in tented arch pattern [1], so the threshold ThTAis set to a width of ridge-valley pattern, i.e.,f¯. If FP does not belong to the tented arch pattern, then it is checked for left or right loop. Assume that there is a line l2 which joins(xc1,yc1)and(xd1,yd1). Direction of this line l2 is given by(5)Θ=tan−1yc1−yd1xc1−xd1and angle between lines l1 and l2 is given by:(6)Δ=(θc1−Θ)mod2πIf Δ<π, then FP image consists of left loop; otherwise it is right loop. To comprehend these cases, refer Fig. 3which shows l1 (in blue line), SD (in green line), Δ (in yellow arc), core points (in red square) and delta points (in green square).Possibility 2: Delta points are frequently missed during FP capture. If FP classification is based on the existence of SP, then such cases are either left out [45] or generate spurious results. Both these cases can degrade FP classification accuracy, therefore an algorithm to effectively handle such cases is proposed in this possibility.Points in the transition lines have high orientation changes. One of these transition lines has the highest orientation change which is equal to or more than π. This happens due to change in OF from−π2toπ2. Let such a transition line exhibiting the orientation change of equal to or more than π be referred as Prominent line. Assumeθc1=π2and there is a delta point. Then it is observed that the line l1 (oriented atθc1and passes through(xc1,yc1)) divides the image into two sides, viz. left and right side of l1. It is observed that nearly all the points on the prominent line and delta point lie on the same side of l1. Hence, all points on the prominent line that lie in foreground region are used to detect the loop type, when delta point is absent in given FP. For prominent line detection,θc1should beπ2. Therefore,θ¯is modified using(7)θmodified(x,y)=θ¯(x,y)−θc1+π2at each pixel (x, y) ofθ¯. A foreground pixel (x, y) is referred as a point on prominent line if(8)|θmodified(x,y)−θmodified(x+1,y)|>πor,(9)|θmodified(x,y)−θmodified(x,y+1)|>πLet{(x¯1,y¯1),(x¯2,y¯2),…,(x¯k¯,y¯k¯)}representk¯prominent pixels. Ifk¯is less than a thresholdk¯ththen pattern present in FP image is marked as cannot determine. Thresholdk¯threpresents the minimum number of points that should be present on the prominent line for effective FP classification. Therefore, it should be large and is set to six times off¯(average width of a ridge-valley pair). Such a case can be seen in Fig. 4(a) depicting a cannot determine pattern due to less points on prominent line. While ifk¯is more than the thresholdk¯ththen FP is further analyzed for classification. For analysis, each point(x¯b,y¯b)on the prominent line is considered and a linel¯bis formed by joining(xc1,yc1)to(x¯b,y¯b). Direction ofl¯bis(10)Θ¯b=tan−1yc1−ybxc1−xbTherefore, angle between lines l1 and lbis given by(11)Δb=(θc1−Θ¯b)mod2πThese angles are evaluated for each point on the prominent line and are represented as(Δ1,Δ2,…,Δk¯). Evaluated angles are averaged as(12)Δ¯=(Δ1+Δ2+⋯+Δk¯)k¯By usingΔ¯, the pattern present in the given FP is estimated by(13)pattern=Rightloop,ifΔ¯−π<−THΔ¯Leftloop,ifΔ¯−π>THΔ¯cannotdetermine,otherwisewhere thresholdTHΔ¯separates left loop, right loop and cannot determine patterns, and is set tof¯(average width of a ridge-valley pair). Examples of the cases arise due to cannot determine patterns are shown in Fig. 4 where prominent lines and core-point directions are shown in red and green color on segmented FP image.If a FP image contains two core points, then either it has whorl or double loop (or twined loop) pattern. Our whorl class consists of central pocket loops and lateral pocket loops. Let(xc1,yc1)and(xc2,yc2)represent the locations of two core points, which are oriented at an angle ofθc1andθc2respectively. Assume that there is a linelˆ1which passes through(xc1,yc1)and is oriented at an angle of χ, where χ is given by(14)χ=θc1+(θc2+π)mod2π2Then distance measure SD is used to determine the existence of the pattern in the given image. In this case, SD (Eq. 4) is used which refers to the minimum possible distance between(xc2,yc2)and linelˆ1in this case. If SD is less than threshold Thdl, then input image has whorl pattern; otherwise it has a double loop pattern. In double loop, it is observed that at least three ridges pass between the two core points. Therefore, threshold Thdlis set to three times of an average width of a ridge-valley pair (f¯). An example of this case is given in Fig. 5which showlˆ1(in blue line), SD (in green line), core points (in red) and delta points (in green).

@&#CONCLUSIONS@&#
This paper has proposed SP detection and FP classification algorithms. Large number of false SPs can be generated due to spurious OF which are obtained near bad quality areas of fingerprints. Such SPs have been eliminated by using OF modeling. SPs have been accurately extracted from modeled OF in a time efficient manner by using a novel hybrid algorithm which consists of a modified directional partitioning and a PIindex algorithm. Locations of detected SPs have been further refined. Sometimes delta points lie closed to the borders and are missed. These delta points have been retrieved for better SP detection accuracy. Extracted SPs have been used for FP classifications. But delta points may be missed out during FP capture which can restrict the use of SPs in FP classification. Hence, a new rule based algorithm has been proposed which can classify the FP even in the absence of delta points. It has classified the FPs into following classes: arch, tented arch, left loop, right loop, double loop and whorl. Arch type FPs along with correctly localized reference point are accurately determined by it. It has correctly distinguished the left loop FPs from the right loop type FPs and double loop FPs from whorl type FPs which are challenging task in FP classification. It does not need any parameter tuning. The proposed algorithm has been tested on three publicly available databases, which are Biostar's; FVC2004 DB1 and DB2 databases. Experimental results have revealed that it performs better than the various existing algorithms in terms of SP extraction and FP classification.