@&#MAIN-TITLE@&#
Adaptive PSO for optimal LQR tracking control of 2 DoF laboratory helicopter

@&#HIGHLIGHTS@&#
LQR weight optimization problem is solved using adaptive particle swarm optimization (APSO) algorithm.The convergence speed and precision of conventional PSO is improved by introducing an adaptive inertia weight strategy based on the success rate of the particles.The performance of APSO tuned LQR is validated on a benchmark 2 DoF laboratory helicopter for trajectory tracking application.

@&#KEYPHRASES@&#
Optimal LQR,2 DoF helicopter,Adaptive PSO,Multiple input multiple output (MIMO),Trajectory tracking,Algebraic Riccati equation,

@&#ABSTRACT@&#
This paper deals with the attitude tracking control problem for a 2 DoF laboratory helicopter using optimal linear quadratic regulator (LQR). As the performance of the LQR controller greatly depends on the weighting matrices (Q and R), it is important to select them optimally. However, normally the weighting matrices are selected based on trial and error approach, which not only makes the controller design tedious but also time consuming. Hence, to address the weighting matrices selection problem of LQR, in this paper we propose an adaptive particle swarm optimization (APSO) method to obtain the elements of Q and R matrices. Moreover, to enhance the convergence speed and precision of the conventional PSO, an adaptive inertia weight factor (AIWF) is introduced in the velocity update equation of PSO. One of the key features of the AIWF is that unlike the standard PSO in which the inertia weight is kept constant throughout the optimization process, the weights are varied adaptively according to the success rate of the particles towards the optimum value. The proposed APSO based LQR control strategy is applied for pitch and yaw axes control of 2 Degrees of Freedom (DoF) laboratory helicopter workstation, which is a highly nonlinear and unstable system. Experimental results substantiate that the weights optimized using APSO, compared to PSO, result in not only reduced tracking error but also improved tracking response with reduced oscillations.

@&#INTRODUCTION@&#
Recently, considerable attention has been paid to the control design of helicopters due to their potential military and civil applications. The challenges in attitude and position controller design for helicopters originate from their particular characteristics namely nonlinearity, inter axis coupling and uncertainties. In the last two decades, many works have been reported in the area of control design for autonomous flying vehicles. Combining feed forward control actions and nested saturation feedback law to deal with the uncertainties in aerodynamic parameters, Marconi and Naldi [1] proposed a robust control scheme for lateral and longitudinal direction control of a small scale helicopter. Cai et al. [2], augmenting the control law using composite nonlinear feedback (CNF) technique, presented the modelling and control of yaw channel of UAV helicopter. To improve the command following performance of the system, they utilized system identification technique to obtain the accurate model of the system and employed CNF control technique to provide fast transient response with minimal overshoot in tracking a specific target. However, it is reported that due to the non-minimum phase property of the yaw channel of helicopter, the embedded controller has to be redesigned. To achieve desired performance and robustness under aggressive manoeuvres, Liu et al. [3] proposed a robust control scheme by synthesizing the LQR controller with the robust compensator for attitude control of 3 DoF laboratory helicopter. One of the distinguishing features of this work is that the performance of the system under aggressive missions has been validated on a benchmark Quanser helicopter. Kadmiry and Driankov [4] put forward a Fuzzy gain scheduler for altitude and attitude control of unmanned helicopter for stable and robust manoeuvrability. However, only the simulation results illustrating the tracking performance of the fuzzy controller are reported. Modelling a small scale helicopter as an underactuated 3 DoF Lagrangian system, Vilchis et al. [5], experimentally demonstrated the performance of nonlinear control strategy for altitude control. Using the rotation matrix, Raptis et al. [6] investigated the performance of backstepping controller to autonomously follow the predefined yaw and pitch trajectories. The interesting feature of their work is that for any reference trajectory, the control design guarantees that the helicopter does not overturn. Harnessing the robustness feature of sliding mode control, Huang et al. [7] investigated the performance of integral sliding mode technique on a vertical takeoff and landing aircraft and proved the asymptotic convergence of output tracking error. Bogdanov et al. [8], employing the state dependent Riccati equation (SDRE) approach for agile manoeuvring of unmanned helicopter, demonstrated the tracking performance of unmanned helicopter. They used the pseudo linear form of the state space model to capture the nonlinear dynamics of the system such that the control performance can be improved.In this paper, we use Quanser 2 DoF laboratory helicopter to investigate the tracking control performance of optimal LQR. A 2 DoF Helicopter is a typical multi input multi output (MIMO) nonlinear system with cross couplings and unmodeled dynamics. Hence, it is an ideal test bed to verify the effectiveness of various control schemes. The LQR, which constitutes a cornerstone of Linear Quadratic Guassian/Loop Transfer Recovery (LQG/LTR), is one of the fundamental problems in the optimal control. Due to their inherent robustness and stability properties, such as a gain margin of at least (−6, ∞) dB and a phase margin of (−60°, 60°) degree, LQR finds its applications in many of the engineering and scientific domains [9–11]. In the last two decade several works have been reported on the LQR namely, self adjusting LQR [12], switched LQR [13], hybrid LQR [14] and fuzzy LQR [15]. Moreover, LQR techniques have been successfully implemented for a large number of complex systems such as double inverted pendulum [16], fuel cell systems [17], vibration control system [18], electric vehicles [19], and aircraft [20].However, two main issues of the LQR problem have been the subject of investigation since the 1960s: the choice of Q and R weighting matrices, and the solutions of the Algebraic Riccati Equation (ARE). The two tasks are known to be strongly time dependent and on certain operational conditions. Even if all of the control strategies are optimal in nature, different values of Q and R will ultimately end up with a different system response, which indicates that the response is non optimal in true sense. Conventional optimization methods, such as the gradient search method, used for designing the state feedback controller are restricted to the eigen values of the linear system matrix that not only increases the difficulty but also consumes long time to find the global optimum solution [21]. Hence, evolutionary computation (EC) can be considered an alternative method to solve this type of optimization problem.In literature, plenty of works have been reported to solve the control optimization problems using EC techniques because they do not require explicit gradient information for optimization. An overview of application of evolutionary algorithms in control engineering is reported in [22]. Particle Swarm Optimization, introduced by Kennedy and Eberhart in 1995, is a population based metaheuristic search (MS) algorithm, which emulates the collaborative behaviour of bird flocking and fish schooling in searching for foods. Each individual in PSO (namely particles) indicates the potential solution of the optimization problem while the location of food source is the global optimum solution. In addition to searching for food independently and stochastically, each particle collaborates and shares information with each other to guarantee that all of them progress towards the optimal solution of the problem, which eventually leads to convergence of the optimization algorithm. In addition, unlike other heuristic optimization methods, PSO has a flexible and well-balanced mechanism to enhance the global and local exploration abilities. Since the introduction of PSO, many real world optimization problems have been solved using PSO because it is not largely affected by the size and nonlinearity of the problem. For instance, the stabilizing controller design for inverted pendulum is solved using PSO in [23]. In [24] the performances of GA and PSO for FACTS based controller design has been assessed and reported that both the convergence and time consumption of PSO are less than those of the GA for feedback controller design. However, the conventional PSO has two important undesirable dynamical properties that degrade its searching abilities. One of the most important problems is the premature convergence. Due to the rapid convergence and diversity loss of the swarm, the particles tend to be trapped in the local optima solution when solving multimodal tasks. The second problem is the ability of the PSO to balance between global exploration and local search exploitation. Overemphasize of the global exploration prevents the convergence speed of swarm, while too much search exploitation causes the premature convergence of swarm. These limitations have imposed constraints on the wider applications of the PSO to real life problems [25]. Hence, to better the convergence rate and speed of conventional PSO, we propose an adaptive PSO, whose inertia weight is varied adaptively according to the success rate of the particles. The key aspect of the APSO is that an adaptive inertia weight factor (AIWF), whose weights are varied adaptively according to the nearness of the particles towards the optimal solution, is introduced in the velocity update equation of conventional PSO to accelerate the convergence of the algorithm. To assess the effectiveness of the proposed control strategy, the tracking control performance of APSO based LQR is compared with that of the conventional PSO. Moreover, to evaluate the consistency and precision of the APSO algorithm various statistical measures, such as mean, standard deviation and range of fitness function, are computed and compared with those of the conventional PSO. The major contributions of this paper arei.The conventional LQR optimization problem is solved using the APSO algorithm and the control strategy is applied for tracking control of 2 DoF laboratory helicopter.An adaptive inertia weight strategy to improve the convergence speed and accuracy of the conventional PSO is introduced in the velocity update equation of conventional PSO. The increased speed of convergence and minimized fitness function of APSO prove that the use of AIWF significantly improves the performance of the conventional PSO.The rest of the paper is organized as follows. Section 2 presents the mathematical modelling of 2 DoF helicopter using Euler–Lagrangian energy based approach. Section 3 gives the problem formulation. Section 4 details the APSO based LQR controller design. Section 5 presents the experimental results of 2 DoF helicopter tracking control performance for APSO based LQR framework. Section 6 concludes the paper.The Quanser 2 DoF helicopter comprises a helicopter model mounted on a fixed base with two propellers which are driven by DC motors. The front propeller controls the elevation of the helicopter nose about the pitch axis, and the back propeller controls the side to side motions of the helicopter about the yaw axis. As can be seen in the free body diagram of 2 DoF helicopter shown in Fig. 1, the workstation has two degrees of freedom: a motion around the Z axis (yaw), represented by the angle ψ, and the rotation around the Y axis (pitch), represented by θ. The mathematical modelling of 2 DoF helicopter is obtained based on the following conventions.1.The helicopter is horizontal when the pitch angle θ=0.The pitch angle increases positively θ(t)>0 when the nose moves upwards and the body moves in counter clockwise direction.The yaw angle increases positively ψ(t)>0 when the body rotates in counter clockwise direction.Pitch increases θ>0 when the pitch thrust force is positive Fp>0.Yaw increases ψ>0 when the yaw thrust force is positive Fy>0.The two propeller motors are located at distances rpand ryfrom the centre to determine the centre of mass of the system. As the centre of mass of system is dislocated from the central axis, it is important to define its transformation matrix [26,27]. The kinematic diagram of the 2 DoF helicopter is illustrated in Fig. 2.Thus, the translation and rotation are defined as,Tθ: Rotation about pitchTψ: Rotation about yawTcm: Translation about centre of massThe above three transformation matrices can be represented as(1)Tψ=cos(−ψ)−sin(−ψ)00sin(−ψ)cos(−ψ)0000100001(2)Tθ=cos(−θ)0sin(−θ)00100−sin(−θ)0cos(−θ)00001(3)Tcm=100lcm010000100001Hence, the resultant transformation matrix of the system is,(4)To=TψTθTcm(5)To=cos(ψ)cos(θ)sin(ψ)−cos(ψ)sin(θ)lcmcos(ψ)cos(θ)−sin(ψ)cos(θ)cos(ψ)sin(ψ)sin(θ)−lcmsin(ψ)cos(θ)sin(θ)0cos(θ)lcmsin(θ)0001The non-linear equation of motion of the system is obtained using the Euler Lagrangian energy based approach. Consider the Lagrangian,(6)L=T−Vwhere T is the total kinetic energy and V is the total potential energy of the system. Potential energy V due to gravity is,(7)V=mheligsin(θ(t))lcmThe total kinetic energy of the system is the sum of three energies: two of rotation Tr,pdue to pitch and Tr,ydue to the yaw; and one energy of translation Tt, due to movement of centre of mass.(8)T=Tr,p+Tr,y+TtThe rotational energy is the kinetic energy related to an angular displacement, and it depends on the equivalent moment of inertia in the pitch Jeq_pand in the yaw axis Jeq_y. Therefore, the rotational kinetic energies of pitch and yaw axes are(9)Tr,p=12Jeq_pddtθ(t)2(10)Tr,y=12Jeq_yddtψ(t)2The translational kinetic energy, which depends on the mass and velocity of the centre of mass, is(11)Tt=12mheli−sin(ψ(t))ddtψ(t)cos(θ(t))lcm−cos(ψ(t))sin(θ(t))ddtθ(t)lcm2+−cos(ψ(t))ddtψ(t)cos(θ(t))lcm+sin(ψ(t))sin(θ(t))ddtθ(t)lcm2+cos(θ(t))ddtθ(t)lcm2To capture the nonlinear dynamics of the system, some of the terms in Eq. (11) are simplified and the reduced translation energy can be represented as(12)Tt=12mhelilcm2[θ˙2+ψ˙2cos2(θ)]Therefore, the resulting kinetic energy is(13)T=12Jeq_pddtθ(t)2+12Jeq_yddtψ(t)2+12mhelilcm2[θ˙2+ψ˙2cos2(θ)]Similarly, the equivalent inertia moments in pitch Jeq_pand yaw Jeq_yare(14)Jeq_p=Jm,p+Jbody,p+Jp+Jy(15)Jeq_y=Jm,y+Jbody,y+Jp+Jy+Jshaftwhere Jm,pand Jm,y are the moment of inertia of the rotor due to pitch and yaw axes, respectively, Jbody,pand Jbody,y are the moment of inertia of helicopter body about pitch axis and yaw axes, respectively, Jpand Jyare the moment of inertia of front motor assembly about pitch pivot and yaw pivot respectively. The moment of inertias can be represented as(16)Jbody,p=mbody,pLbody212(17)Jbody,y=mbody,yLbody212(18)Jshaft=mshaft(R12+R22)2(19)Jp=(mm,p+msupport,p)rp2(20)Jy=(mm,y+msupport,y)ry2To capture the dynamics of the system using the Lagrangian approach, the generalized co-ordinates (si) that describe the system behaviour must be determined. The Lagrangian functionL(si,s˙i,t)depends on the generalized co-ordinates (si), generalized velocity (s˙i) and time. Here, four generalized co-ordinates [s1, s2, s3, s4]Tequivalent to[θ,ψ,θ˙,ψ˙]Tare chosen for capturing the nonlinear dynamics of the system. As the Lagrangian variable is the difference between kinetic and potential energies, the respective Euler Lagrangian equation can be written as,(21)∂2∂t∂s1L−∂∂s1L=S1(22)∂2∂t∂s2L−∂∂s2L=S2where S1 and S2, the non-conservative forces corresponding to the generalized co-ordinates, are given by(23)S1=τp−Bpddtθ(t)(24)S2=τy−Byddtψ(t)The total torque acting on the pitch axis is(25)τp=kppVmp+kpyVmySimilarly the toque acting on the yaw axis is(26)τy=kyyVmy+kypVmpTherefore, S1 and S2 become(27)S1=kppVm_p+kpyVm_y−Bpddtθ(t)(28)S2=kyyVm_y+kypVm_p−Byddtψ(t)The thrust force constants kpp, kyy, kpy, and kypcan be determined from the torque constants and the electric resistance of the motor.(29)kpp=kf,prp(30)kyy=kf,yry(31)kpy=kt,yRm,y(32)kyp=kt,pRm,pFinally, by substituting the kinetic and potential energies in Lagrangian function given in Eq. (6), the differential equation of the 2 DoF helicopter system can be represented as(33)(Jeq,p+mhelilcm2)θ¨=kppVmp+kpyVmy−Bpθ˙−mhelilcm2sin(θ)cos(θ)ψ˙2−mheliglcmcos(θ)(34)(Jeq,y+mhelicos(θ)2lcm2)ψ¨=kyyVmy+kypVmp+2mhelilcm2θ˙sin(θ)cos(θ)ψ˙−Byψ˙To design a state feedback controller using LQR, the dynamics of the system should be represented in the form of a linear model [28]. Therefore, the nonlinear model of the system given in (33) and (34) is linearized around the origin by substituting θ=0, ψ=0,θ˙=0,ψ˙=0. The resultant linearized differential equation is(35)θ¨=kppVmpJeq_p+mhelilcm2+kpyVmyJeq_p+mhelilcm2−Bpθ˙+mheliglcmJeq_p+mhelilcm2(36)ψ¨=kypVmpJeq_y+mhelilcm2+kyyVmyJeq_y+mhelilcm2−Byψ˙Jeq_y+mhelilcm2Using the statesx=[θ,ψ,θ˙,ψ˙]Tand the inputs u=[Vmp, Vmy]T, the state space model of the plant can be represented as(37)θ˙ψ˙θ¨ψ¨=0010000100−BpJeq_p+mhelilcm20000−ByJeq_y+mhelilcm2θψθ˙ψ˙+0000kppJeq_p+mhelilcm2kpyJeq_p+mhelilcm2kypJeq_y+mhelilcm2kyyJeq_y+mhelilcm2VmpVmyAs there is a gravitational disturbance in the pitch control, two more integrators are required to reduce the pitch and yaw steady state errors. Hence, in addition to the pitch and yaw positions along with their respective velocities, we include the following two state variables α and γ to represent integral of pitch and yaw angles, respectively.(38)α=∫(θd−θ)dt(39)γ=∫(ψd−ψ)dtwhere θd and ψd are the desired pitch and yaw set points. Hence, the new state vector of the 2 DoF helicopter system is formulated asx=[θ,ψ,θ˙,ψ˙,α˙,γ˙]T. Therefore, the combined state model of the system can be described as(40)θ˙ψ˙θ¨ψ¨α˙γ˙=00100000010000−BpJeq_p+mhelilcm2000000−ByJeq_y+mhelilcm200000010000001θψθ˙ψ˙α˙γ˙+0000kppJeq_p+mhelilcm2kpyJeq_p+mhelilcm2kypJeq_y+mhelilcm2kyyJeq_y+mhelilcm20000VmpVmy(41)Y=100000010000θψθ˙ψ˙α˙γ˙The plant parameters of the 2 DoF helicopter system are given in Table 1. By substituting the plant parameters in Eqs. (40) and (41) the state space matrices of the system are obtained as(42)A=00100000010000−9.2751000000−3.495500000010000001B=00002.36670.07900.24100.79130000C=100000010000.Consider an LTI multivariable system(43)X˙(t)=AX(t)+Bu(t),t≥0,X(0)=X0(44)Y(t)=CX(t)+Du(t),t≥0where A∈Rn×n, B∈Rn×m, C∈Rp×n, D∈Rp×mare system matrix, input matrix, output matrix and feed forward matrix, respectively. X is the state vector, u is the control input vector, and Y is the output vector. The conventional LQR problem is to determine the control input u* which minimizes the following cost function.(45)J(u*)=∫0∞[XT(t)QX(t)+uT(t)Ru(t)]dtwhere Q=QTis a positive semi definite matrix that penalizes the departure of system states from the equilibrium, and R=RTis a positive definite matrix that penalizes the control input [29]. According to LQR theory, the optimal response can be obtained using the following full state feedback control law(46)u=−KX(t)The solution of the LQR problem, the optimal control gain K, can be obtained via the following Lagrange multiplier based optimization technique.(47)K=R−1BTPThe transformation matrix P can be determined by solving the following Algebraic Riccati Equation (ARE).(48)ATP+PA+Q−PBR−1BTP=0where P∈Rn×nis the solution of ARE. The weighting matrices Q and R are important components of an LQR optimization process. The compositions of Q and R elements have great influence on system performance [30]. The number of elements of Q and R matrices depends on the number of state variable and the number of input variable, respectively. If the weighting matrices are selected as diagonal matrices, the quadratic performance index is simply a weighted integral of the square of the states and inputs [31]. Conventionally, as the weighting matrices of LQR are tuned manually, it does not result in optimal response. Hence, to address the weight selection problem of LQR, a bio-inspired optimization algorithm, adaptive PSO, is incorporated in the LQR controller design framework to optimally select the Q and R matrices.In the last decade, several variants of PSO have been proposed to improve the performance of conventional PSO. All the proposed modifications are mainly to improve the exploration, exploitation or even both exploration and exploitation ability of the PSO. One of the modifications introduced in the PSO is the use of inertia weight parameter in the velocity update equation. The velocity of the current particle is influenced by the previous velocity which gives the necessary momentum for particles to travel across the search space. The impact of the previous velocity depends on the inertia weight factorw, which dictates the balance between global exploration and local search exploitation in PSO. The higher value of inertia weight focuses more on global exploration, while the smaller inertia weight concentrates highly on fine tuning the current search area. Therefore, proper control of the inertia weight is significant in finding the optimum solution. A comprehensive survey of the inertia weight schemes of PSO algorithms is given in [32], and a new adaptive inertia weight scheme based on success rate of the particles was proposed. In this paper, we extend the adaptive inertia weight scheme to solve the LQR optimization problem for tracking control applications.To implement an adaptive inertia weight strategy, it is important to evaluate the position of the swarm at each iteration. Hence, the percentage of success (PS) of particles is used to update the velocity adaptively. A high value of PS indicates that the particles have converged to the optimum value and the particles are slowly progressing towards the optimum, whereas a low value of PS implies that the particles are moving around the optimum value without much improvement. Therefore, the success count (SC) of the particle towards the optimum value is used to determine the PS value. If the fitness of the current iteration is less than that of the previous iteration the SC is set to 1, else it is set to zero. Hence, the SC is defined as(49)SCi=1f<fpbesti0f≥fpbestiUsing the SC, the PS is computed as(50)PS=∑i=1nSCinwhere n is the number of particles. The following adaptive inertia weight factor (AIWF) is employed to adaptively update the inertia weight according to the percentage of success of the particles.(51)w(t)=(wmax−wmin)PS+wminThe range of the inertia weight (wmin,wmax) is chosen to be [0,1]. As the value of PS lies in between 0 and 1, the range of inertia weight can be in any acceptable range. Table 2gives the pseudo code of adaptive PSO algorithm. In literature, mostly two stopping criteria are applied for single objective optimization [33]. One is based on the error measure and the other one is based on the number of function evaluations. In the first method, the optimum value should be known prior to the execution, whereas the second method is highly dependent on the fitness function. Moreover, no correlation can be visualized between an optimization problem and the required number of iterations. In this paper, the stopping criterion is chosen based on the number of iterations.The objective is to determine the elements of state weighting matrix Q of LQR, which is a 6×6 positive semi definite matrix, and the input weighting matrix R, which is a 2×2 positive definite matrix. To simplify the optimization problem and to make the cost function to a quadratic term, the weighting matrices Q and R are chosen as diagonal matrices. Therefore, the resultant cost function can be written as,(52)J=∫0∞(q1x12+q2x22+q3x32+q4x42+q5x52+q6x62+R1u12+R2u22)dtIn the above cost function, q1, q2, q3, q4, q5, and q6 are the weights of pitch, yaw, velocity of pitch, velocity of yaw, integral of pitch error and integral of yaw error, respectively. Similarly, R1 and R2 are the weights of two control inputs namely pitch motor voltage and yaw motor voltage. The six state variables of the 2 DoF helicopter systemx=[θ,ψ,θ˙,ψ˙,α˙,γ˙]Tare taken as the PSO particles, and the initial states of the 2 DoF helicopter system are chosen asx=[θ,ψ,θ˙,ψ˙,α˙,γ˙]T=[−40∘,0,0,0,0,0]T. With the initial values of the particles, PSO computes the corresponding global best of the particles, which is obtained by minimizing the fitness function. The convergence of the optimization algorithms towards the global optimal solution is characterized by the fitness function. Some of the commonly used fitness functions in the state feedback controller design are integral of the absolute error (IAE), integral of the square error (ISE) and integral of the time weighted absolute error (ITAE). In the present study, the following ISE is chosen as fitness function.(53)F=ISE=∫e2(t)dtThe problem of optimization is to find the state feedback controller gain matrixK=k11k12k13k14k15k16k21k22k23k24k25k26such that the fitness function of APSO given in (52) is minimized to yield the global best of the particles, which are initialized as weights of LQR. Moreover, the values of controller gain matrix are computed in such a way that the resultant cost function of LQR is minimized to obtain an optimal performance between amount of control input and speed of response of the system.Fig. 3shows the proposed controller strategy for pitch and yaw control of 2 DoF helicopter. The proposed controller strategy consists of an LQR controller along with the feed forward control scheme for simultaneously controlling the pitch and yaw angles. The feed forward controller provides an additional gain to compensate for the gravitational effect on pitch axis, and the LQR controller enables the system to track the reference trajectory. Two encoders measure the corresponding pitch and yaw angles. However, as the derivate of the pitch and angles result in more noise in the velocity component, a second order derivative filter is designed in the controller framework to estimate the corresponding pitch and yaw velocities. The transfer function of the second order derivative filter is(54)H(s)=ωcf2ss2+2δωcfs+ωcf2The estimation of pitch and yaw velocities should not only be noise free but fast enough to implement the control loop. Hence, the damping ratio of the filter (δ) is chosen to be 0.9 using logarithmic decrement method in such a way that the filter exhibits under damped response. Similarly, keeping in mind that the supply frequency is 50Hz, we set the cut off frequency of the filter to 314.15rad/s.Figs. 4 and 5show the components of the 2 DoF laboratory helicopter workstation, and the experimental setup respectively. The system consists of Quanser 2 DoF helicopter module, Q8 USB data acquisition board, two power amplifiers for driving the pitch and yaw motors. Two brushless DC motors with ±24V and ±15V control the pitch and yaw angles respectively. Both the pitch and yaw propellers consist of optical encoders to measure the angular positions with a resolution of 4096 counts/revolution for pitch and 8192 counts/revolution for yaw angle. The Q8 USB Hardware-in-the Loop (HIL) data acquisition board has 8 digital inputs and 8 pulse width modulated (PWM) digital outputs, and it is capable of reaching 4kHz sampling rate. In addition, the system contains two Volt-PAQ power amplifiers which provide a regulated ±30V at 3A, to amplify the control signal given to the pitch and yaw motors. The control algorithm implemented in SIMULINK communicates with the hardware using QUARC, which is similar to C like programming language.The proposed APSO based LQR tracking control algorithm is implemented in MATLAB 2013b. To assess the performance of the proposed controller framework, the tracking control of APSO tuned LQR is compared with that of the conventional PSO tuned LQR. Table 3shows the parameters of both conventional PSO and adaptive PSO algorithms. As the number of variables to be optimized in the LQR design is 8 (6 state variables and 2 input variables), the dimension of the particles is chosen as 8. Both the conventional PSO and adaptive PSO have the same number of iterations, particle size and cognitive acceleration except the inertia weight. In the conventional PSO, the inertia weight is set as constant value of 0.9, whereas in the APSO, the inertia weight is modified adaptively according to the Eq. (51). Based on the ISE fitness function, the optimization algorithms are executed for the specified number of iterations, and the global best of the particles, which are the weights of LQR, are obtained. Fig. 6shows the fitness function of both PSO and APSO algorithms. It can be noted that the fitness function of APSO converges faster than that of the conventional PSO. Moreover, PSO takes around 70 iterations to converge, whereas APSO converges in just 35 iterations. Similarly the minimized fitness function of APSO is 6.921×10−9 which is very much less than the corresponding PSO value of 6.593×10−5. These data substantiate that the introduction of AIWF in the velocity update equation of PSO significantly improves the convergence speed and accuracy of the algorithm.To assess the accuracy and consistency of the optimization algorithms, the algorithms are repeated for 15 trials and the statistical parameters are computed. An interesting factor which can be noted from Table 4, which gives the statistical parameters of both PSO and APSO algorithms, is that both the standard deviation and minimum value of fitness function optimized using APSO are far less than those of the conventional PSO, which proves that the APSO can result in better consistent performance.To highlight the convergence of the optimization algorithms, the surface plot of both PSO and APSO are illustrated in Fig. 7. Fig. 7(a) and (b) shows the surface plot of PSO before and after convergence. It can be noted from Fig. 7(c) and (d), which depict the surface plot APSO before and after optimization, that convergence of APSO is not only smoother but also faster than that of the PSO.The weighting matrices optimized using PSO and APSO are given in Table 5. Table 6gives the corresponding LQR controller gain for both the optimization methods.In order to compensate for the gravitation torque which act on the pitch angle, the controller gain of the feed forward controller (Kff) is experimentally set to be 1. To assess the trajectory tracking response of the controller framework, two test signals namely square and sinusoidal signals are given as an input and the tracking performance of pitch and yaw control are reported.To test the pitch control performance, a square trajectory of 10° with a frequency of 0.01Hz is given as a test signal while maintating the desired elevation angle at 0°. Fig. 8illustrates the tracking response of both PSO and APSO tuned LQR controllers. It can be observed that the APSO tuned LQR not only results in less oscillation but also tracks the trajectory better than the PSO tuned LQR. Fig. 9depicts the both pitch and yaw velocities obtained using the derivative filter. Fig. 10, which illustrates the control inputs given to pitch and yaw propellers, indicate that the pitch and yaw motor voltages do not reach the saturation value while generating a required control signal to accelerate the pitch and yaw propellors. Fig. 11shows the tracking error of both pitch and yaw angles. To quantify the deviation between the actual and desired trajectory, ISE of both the optimization algorithms are computed and given in Table 7. It can be noted that both the pitch and yaw tracking errors of APSO tuned LQR are less than those of the PSO tuned LQR. Furthermore, to highlight the improvement in the tracking control, the tracking error of both the optimization algorithms are illustrated in Fig. 12.A sine wave trajectory of 10° magnitude with a frequency of 0.02Hz is given as a test signal to assess the tracking performance for a continuously changing signal. Fig. 13shows the pitch and yaw control response of the optimization algorithms. APSO based LQR results in smooth tracking of the reference trajectory with reduced oscillations. Figs. 14 and 15depict the corresponding velocities, and control inputs respectively. Fig. 16shows the tracking error of sinusoidal trajectory. Table 8gives the ISE of optimization algorithms for sinusoidal trajectory. Fig. 17shows the tracking error comparison of both PSO and APSO algorithms for sinusoidal trajectory.

@&#CONCLUSIONS@&#
