@&#MAIN-TITLE@&#
Lightweight private proximity testing for geospatial social networks

@&#HIGHLIGHTS@&#
Our paper introduces a novel lightweight protocol for private proximity testing.The proposed protocol clearly outperforms current state of the art.We formally prove that the protocol is secure in the semi-honest model.We present experimental results in Python and C++ and compare it with its peers.We demonstrate an Android application that uses are protocol and proves its efficacy.

@&#KEYPHRASES@&#
Location privacy,Online social networks,Private equality testing,Geosocial networks,

@&#ABSTRACT@&#
The wide adoption of smart phones has enabled Online Social Networks (OSNs) to exploit the location awareness capabilities offering users better interaction and context aware content. While these features are very attractive, the publication of users’ location in an OSN exposes them to privacy hazards. Recently, various protocols have been proposed for private proximity testing, where users are able to check if their online friends are near, without disclosing their locations. However, the computation cost of the required cryptographic operations utilized in such protocols is not always efficient for mobile devices. In this paper we introduce a lightweight and secure proximity testing protocol, suitable for online mobile users. We show that our protocol is provably secure under the well-known factoring problem and we analyze its efficiency. Our results show that our approach outperforms other existing protocols, by significantly reducing the computational cost and making it practical for devices with limited resources. Finally, we demonstrate the applicability of our proposal in an actual OSN location-based, mobile application.

@&#INTRODUCTION@&#
Apart from being a modern trend in web applications, OSNs have totally reconstructed the way people interact and exchange information over the Internet [1]. OSNs allow mobile users to continuously interact with each other through mobile devices such as smart phones, tablets or smart watches. The amount and quality of exchanged information has made us rethink common information flow models. OSNs can be considered as critical information channels, since OSN users may exchange or publicly share a plethora of information. Based on the nature of the online application, this information may involve conversations with friends, user-oriented multimedia content (such as personal photos and videos), personal opinions, comments, habits, locations and user itinerary, to name some common examples. In addition, the users may also share personal information with the OSN providers, for example when registering to services. These novel information flows affect the role and the impact of individuals in such networks. In many cases the amount of personal and/or sensitive user-related information that is available to others, may enable other users or service providers to monetize this information and expose users to privacy-related threats. For example, an OSN may legitimately allow third parties to use such information, e.g. for targeted advertising, or allow them to mine anonymized graphs. Even if user data have been anonymized, it has been shown that re-identification algorithms may potentially de-anonymize user data and link them to particular users [2]. Unfortunately, many users share arbitrary information about their personal lives, greatly exposing themselves to privacy risks [3].The gradual exploitation of location sensors of smart devices has turned modern OSNs into location-aware applications. In fact some of them are becoming so dependent on the geospatial information that can be regarded as a separate category, the so-called geospacial social networks. Further to just adding location tags to multimedia content, many of them try to bring their users closer by displaying their proximity to others in terms of distance. This trend is very common in dating focused OSNs such as MoMo, Plenty of Fish, WeChat, to name a few, where users not only see how many people are available, but their distance (or an approximation) to them.Unfortunately, the location-awareness exposes OSN users to a number of risks [4–10]. In many cases these risks stem from poor implementations e.g. by displaying an estimation of the distance of a user from others. As it has been shown independently in [11,12] the provided obfuscation mechanisms can be trivially bypassed, exposing the exact location of the users. The exposure of a user’s location can disclose a lot of sensitive information. An adversary could, for instance, deduce the victim’s health condition (e.g. the victim is at a hospital/doctor), religious beliefs, (e.g. the victim is at a church/mosque), political beliefs (e.g. the victim is protesting at a demonstration), personal connections (e.g. two people are occasionally at the same place). Further to privacy exposure, the revelation of location can be used for cyber-bulling, cyber-stalking or even endanger their well-being. Unfortunately, users’ awareness regarding the dangers of publicly sharing their location information through “check-ins” to online applications is low. For example the PleaseRobeMe11http://pleaserobme.com.application demonstrates the easiness to aggregate such information from various online sources and to deduce sensitive information about users’ current location, or “recent empty homes”.Ideally, a privacy-aware proximity testing service in a buddy finder OSN application, receives the encrypted whereabouts from its subscribed users and notifies any two buddies (e.g., Alice and Bob) when they are in proximity: Alice and Bob should learn a minimum amount of information, e.g., whether they are in proximity, while the OSN provider or any other external entity should learn nothing. In synchronous proximity testing [13], which is very well-suited to OSN users equipped with mobile phones, Alice and Bob are concurrently online and run the steps of the proximity testing protocol in real-time.To address the risks of location disclosure in buddy-finder services, with no trust assumptions, a line of recent works for synchronous private proximity testing, use a decentralized approach in the public-key setting[13–17], where a two-party protocol is executed between any two friends that wish to check their proximity. The outcome of such protocol can be as small as a single bit of information, i.e., whether users are in the same vicinity. The most efficient approaches of the category employ, as their main building block, a two-party Private Equality Testing (PET) protocol between any two buddies, with private inputs representing geographic locations [13,15–17]Our contribution: In this paper we are concerned with synchronous private proximity testing through Private Equality Testing (PET) for low min-entropy location data. We propose a very efficient PET protocol that provides unconditional location privacy for the initiator of the protocol, while the privacy for the responder is guaranteed under the intractability of the factoring problem. Our primitive is specifically suited for low-min entropy data, such as encrypted locations of users, and thus could be used as a building block for a proximity-testing application in a buddy-finder OSN service. Our protocol is very efficient since for a protocol run, it requires only one public-key exponentiation per user. We experimentally compare our protocol against other PET protocols with similar security properties, using Sage and the well-known cryptographic library MIRACL. Our results show that our protocol outperforms its peers in computation time, making it practical for typical off-the-self mobile devices.22We consider devices capable to run smartphone versions of typical OSN applications; we do not require the processing capabilities of high-end, high-cost devices.Finally, we demonstrate the applicability of our proposal in an actual OSN location-based, mobile application.Organization of this work: In Section 2 we review related work on private proximity testing. In Section 3 we present our protocol, which is a PET protocol based on the factoring problem, while in Section 4 we formally prove the security properties of our scheme. In Section 5 we give experimental results concerning the efficiency of the proposed scheme. In Section 6 we provide an overview of a mobile application we have developed to test the applicability of our protocol. Finally, Section 7 summarizes the contributions of the paper and discusses ideas for future work.

@&#CONCLUSIONS@&#
