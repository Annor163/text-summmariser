@&#MAIN-TITLE@&#
Optimal sequence of container ships in a string

@&#HIGHLIGHTS@&#
Sequence of ships in a string affects the delay of containers.Model for calculating the performance of a given sequence.Theoretical bounds on the best and worst permutations of ships.Rules for identifying near-optimal sequences without demand information.Significant practical importance for container shipping lines.

@&#KEYPHRASES@&#
Logistics,Liner container shipping,Maritime transportation,Ship fleet deployment,Robust optimization,

@&#ABSTRACT@&#
Container ships in a string may not have the same capacity. Therefore, the sequence of ships affects the number of containers that are delayed at export ports due to demand uncertainty, for instance, “a large ship, followed by a small ship, then another large ship, and finally another small ship” is better than “a large ship, followed by another large ship, then a small ship, and finally another small ship”. We hence aim to determine the sequence of the ships in a string to minimize the delay of containers, without requiring the probability distribution functions for the future demand. We propose three rules to identify an optimal or near-optimal string. The rules have been proved to be effective based on extensive numerical experiments. A rough estimation indicates that over 6 million dollars/year could be saved for all liner services in the world by optimizing the sequences of ships.

@&#INTRODUCTION@&#
Liner shipping companies transport containerized cargoes on regularly scheduled services with fixed port rotations. The regular and reliable liner services make it possible for shippers (consigners or consignees) to arrange their production plans, manage their inventories, and arrange the delivery of final products (Wang, Meng, & Bell, 2013a). From shipping lines’ viewpoint, the capacities of the shipping services are fixed, at least in short terms. Hence, shipping lines try to attract as many cargoes as possible to fill up the slots on the ships.Uncertainties in container shipment demand are one of the major challenges for planning and operating liner services. At the tactical level, the services must be determined before the future demand is revealed (Ng, 2014). At the operational level, the number of containers available for loading in a week from a shipper may be different from what she has committed to (Wang, Meng, & Liu, 2013b). There are a number of reasons for this. For example, the shipper’s production line is down and not enough products are assembled; or the shipper just changes her mind due to the changes in business environment. Fig. 1 shows the number of containers transported between four pairs of ports in each week of a year on a trans-Pacific and an Asia-Europe service operated by an Asia-based global shipping line. Although the demand (number of containers available for loading) and the number of containers transported are different, this figure is still a strong evidence of the randomness of demand.To fill up ship slots, shipping lines adopt the strategy of overbooking (Ting & Tzeng, 2004). Similar to the airline industry, one rationale behind the practice of overbooking is the possible cancelations of reserved slots. Different from the airline industry, another rationale for shipping lines to overbook the capacities of the ships is that they can postpone the transportation of the containers. With very few exceptions, shipping lines almost never guarantee the date of delivery for containers (Fransoo & Lee, 2013). This makes it possible for shipping lines to accept more containers: if the number of containers available at a port is higher than the ship capacity, some of them will be transported in the next week. When the shipping market is down and hence shipping lines worry that they may not have enough demand in the next week, they tend to accept whatever shipping orders received. When shippers’ containers are stacked in the container yard of an export port because the ship that visits the port in that week is full, shippers will not be compensated explicitly. Nevertheless, shipping lines do incur intangible costs, e.g., loss of goodwill, because of the inferior services provided for the shippers. In addition, more yard space is required to storage the delayed containers (Zhen, Lee, & Chew, 2011). Moreover, when there are a large number of delayed containers from the previous week, the handling time at port is longer, which affects the berth allocation by port operators (Bierwirth & Meisel, 2010; Imai, Nishimura, & Papadimitriou, 2001; Jin, Lee, & Hu, 2015; Robenek, Umang, Bierlaire, & Ropke, 2014; Türkoğulları, Taşkın, Aras, & Altınel, 2014; Xu, Li, & Leung, 2012).Deploying larger ships will reduce the average delay of containers under uncertain demand. However, larger ships have higher operating and voyage costs. Another possible approach, which is almost costless, is to optimize the sequence of ships in the string. Suppose that six ships are deployed on a trans-Pacific service, the capacity of ships 1, 2, and 3 being 8, 000 twenty-foot equivalent units (TEUs) and the capacity of ships 4, 5, and 6 being 8, 200 TEUs. Since the demand is random and may exceed 8, 000 or even 8, 200 TEUs in some weeks, some containers that are available for loading in a week will have to wait for the ship that comes in the next week. Intuitively, the sequence of the string of ships 1 → 4 → 2 → 5 → 3 → 6 should outperform the string 1 → 2 → 3 → 4 → 5 → 6, as the capacity distribution of the former is more “uniform” and can thereby dissolve the now-and-then high demand more efficiently.In reality, although shipping lines seek to deploy ships of similar sizes on a route to provide uniform shipping services in each week, the ships in a string may not necessarily have the same capacity in terms of the number of TEU slots. For example, Maersk Line and MSC jointly operate an Asia-to-the-US West Coast service – Transpacific 2 (TP2) with the port rotation Kaohsiung, Hong Kong, Xiamen, Shanghai, Ningbo, Long Beach, and back to Kaohsiung again (Maersk, 2014). Six ships are deployed to provide a weekly service, see Table 1(Containership-Info, 2014; Schulte, 2014). We can see that only two ships (MSC RANIA and MSC HEIDI) are of the same size, and the difference between the capacities of two ships can be as large as(8530−6966)/6966≈22.5percent.We identify the following two reasons that explain the ship size difference in a string: (i) Even if the string of ships was homogeneous, one of them may be under maintenance or repair, and hence another ship that may be different from the ones in the string has to come as a replacement. (ii) The rotation time of the route that the old string of ships needs to serve is changed, and new ships must be added to the string or some ships from the string have to serve other routes. For instance, when a string of mega-ships is delivered to replace an existing string on an Asia-Europe service, the latter string may be redeployed to an intra-Asia service due to the cascading effect (Cariou & Cheaitou, 2012). Some ships in the string will no long be needed as the intra-Asia service is shorter than the Asia-Europe one. A second example is service redesign due to business considerations, e.g., the pending expansion of the Panama Canal will enable post-Panama ships to visit the East Coast of the US from Asia via the Pacific Ocean (IAME, 2014). A third example is slow-steaming for saving bunker costs, which requires the insertion of one or two ships to an existing string (Fagerholt, Laporte, & Norstad, 2010).This paper investigates how to determine the optimal sequence of ships in a string to minimize the expected number of delayed containers taking uncertain demand into consideration. We use the phrases “sequence of ships”, “string” and “permutation” interchangeably. The main challenge for the problem is that it is almost impossible to predict the probability distribution functions for the future demand (Zhen & Wang, 2015). In fact, even if we have the historical data on the demand, the data may be of limited value because the shipping environment changes rapidly. Therefore, a good string should be “robust” in that it is optimal or near-optimal for any random demand.The literature on container ship deployment all focuses on the selection of the sizes of ship for each string (Christiansen, Fagerholt, Nygreen, & Ronen, 2013; Meng, Wang, Andersson, & Thun, 2014). Ships are grouped into several types, and ships of the same type are assumed to be homogeneous. For instance, the capacity of a particular type of ship might be considered as the average capacity of the ships of the type. As a result, the sequence of the ships in a string does not affect the shipping operations because they are assumed to be of the same size. For instance, Meng and Wang (2010) developed a chanced constrained ship fleet deployment model that ensured at least a certain proportion of the demand must be fulfilled; Ng (2014) presented a robust optimization model for determining the deployment of ships to hedge against the worst-case scenario of demand. Our study could be considered as a further refinement of ship deployment after the conventional step that categorizes ships into types.The contribution of this paper is that (i) we address a practical research problem that is of significant importance for shipping lines; (ii) we develop a model for calculating the delay of containers given a sequence of ships, and derive bounds for the best and worst sequences; and (iii) we identify rules for choosing a good string that is optimal or near-optimal among all possible permutations, without requiring the probability distribution functions of the random demand. The chosen string by the rules is demonstrated to be near-optimal for very general distribution functions of the random demand based on extensive numerical experiments.The remainder of the paper is organized as follows. Section 2 describes the problem of determining the sequence of ships in a string. Section 3 presents a model for calculating the delay of containers given a sequence of ships. Section 4 proposes rules for choosing a good string that is optimal or near-optimal among all possible permutations. Section 5 reports the results of extensive numerical experiments for assessing the efficacy of the rules. Section 6 concludes.We consider the hit-haul leg of a long-haul liner service. The hit-haul leg is the leg on which the highest number of containers is carried. For instance, the leg after the last port of call in Asia in the hit-haul leg for trans-Pacific and Asia–Europe services, as the demand from Asia to the US/Europe is higher than that from the US/Europe to Asia. To simplify the exposition, we consider a liner service with only one export port (e.g., Shanghai) and one import port (e.g., Los Angeles), providing a weekly frequency, as most shipping services are weekly (Bell, Liu, Angeloudis, Fonzone, & Hosseinloo, 2011; Bell, Liu, Rioult, & Angeloudis, 2013; Wang, 2014; Wang & Meng, 2013).A string of V ships are deployed on the service. The container capacity of ship v is denoted by Ev(TEUs),v=1,2,…,V. Without loss of generality, we assume(1)0<E1≤E2≤⋯≤EV.Define the average capacity of the ships asE¯:=∑v=1VEvV. If the sequence of the ships in the string is 1 → 2 → ⋅⋅⋅ → V, then the capacity to transport containers is E1 in week 1, E2 in week 2, EVin week V, E1 in weekV+1(because ship 1 will visit the port in weekV+1again), E2 in weekV+2,and E2 in week11V+2.Suppose that there is no container waiting at the export port after it is visited by ship 1 in week11V+1. If, for instance, the demand in week11V+2,denoted byq11V+2,exceeds E2, thenq11V+2−E2TEUs have to wait at the export port for the next ship. Hence, when ship 3 arrives in week11V+3,there will beq11V+2−E2+q11V+3TEUs to transport. It is reasonable to presume that theq11V+2−E2TEUs from the last week have a higher priority to be loaded onto ship 3 than the newly generatedq11V+3TEUs. We further assume that a delayed container must be able to be loaded to the next ship, and otherwise the shipping line has to purchase ship slots from other companies to transport some containers. For instance, in week11V+2,ifq11V+2−E2>E3,then only E3 TEUs wait at the export port for ship 3, and the otherq11V+2−E2−E3TEUs are transported using the purchased slots. We call the containers transported using the purchased slots rejected containers. We assume that the penalty cost of a rejected TEU for the shipping line is equal to the delay cost ofc=5TEUs11Here we choosec=5based on subjective judgment. Note that the number of rejected containers is much smaller than the number of delayed containers. As a result, the value of c does not have a significant impact on the results, which is shown by the numerical results in Section 5.2.. In sum, a container is either transported by a ship without delay, or transported using purchased slots, or delayed by one week and transported by the ship that arrives in the next week.We focus on the average number of delayed and rejected containers over a sufficiently long time period. Hence, it does not matter how many containers are waiting at the export port at the beginning of the planning horizon. The problem is to determine the optimal sequence of the V ships in the string such that the average number of delayed and rejected containers (number of delayed ones plus c multiplied by the number of rejected ones) is minimal.Since the string of ships forms a loop, it makes no difference which ship is defined as the first one. Therefore, for instance, the following five permutations are equivalent whenV=5:1→3→4→5→2,3→4→5→2→1,4→5→2→1→3,5→2→1→3→4,2→1→3→4→5.To avoid repetitive calculations, without loss of generality, we require that the first ship in the string is the one with the capacity E1 (the smallest ship).We have mentioned in Section 1 that it is almost impossible to predict the probability distribution functions for the future demand. In this section, we assume nonetheless that the container shipment demand in each week is independent and identically distributed, and the probability distribution function is known. We make this assumption because we can then calculate the exact number of delayed and rejected containers for a given permutation. The results will provide us with helpful insights for choosing a good string.Suppose that the container shipment demand in each week is a random integer between 0 and N, and the probability that n TEUs are to be transported in a week is pn≥ 0,n=0,1,…,N. pnis a known parameter. As exactly one scenario will occur, we have∑n=0Npn=1. We assume that N > E1 as otherwise the problem is trivial. Define the expected demand in a week asq¯:=∑n=0Npnn. We further assumeq¯<E¯as otherwise the shipping line may consider whether a string of larger ships should be deployed.Since all of the strings can be evaluated using the same approach, we consider the string in which ships are in the sequence of increasing sizes according to Eq. (1), i.e., 1 → 2 → 3 → ⋅⋅⋅ → V. As we focus on the average number of delayed and rejected containers over a sufficiently long time period, we letpvkbe the probability that k TEUs are delayed when ship v leaves the export port,v=1,2,…,V,k=0,1,…,Ev+1,after a sufficiently long time. Note that throughout this paper, for better readability, when we talk about shipv=V+1andv=V+2,we mean ship 1 and 2, respectively. As mentioned above, at mostEv+1TEUs will wait at the export port when ship v departs because all delayed containers must be loaded onto the next ship. The average number of rejected containers can be calculated based on the probabilitiespvk.The probabilitiespvksatisfy the following relations:(2)pv+10=∑n=0min{Ev+1,N}pn∑k=0−n+Ev+1pvk,v=1,2,…,V,(3)pv+1k=∑n=kmin{k+Ev+1,N}pnpv−n+k+Ev+1,v=1,2,…,V,k=1,2,…,Ev+2−1,(4)pvEv+1=1−∑k=0Ev+1−1pvk,v=1,2,…,V.Eq. (2) calculate the probability that all containers are loaded to shipv+1when it leaves the export port. Eq. (3) calculate the probability that 1 toEv+2−1TEUs are delayed when shipv+1leaves the export port. Note that Eq. (2) are a bit more complex than Eq. (3) because the result that no container is delayed in a particular week has many more combinations of the number of delayed containers in the previous week and the demand in this week. Similarly, the cases in whichEv+1TEUs are delayed when ship v leaves the export port are also complex and their probabilities can be calculated using Eq. (4).The expected number of delayed containers after ship v leaves the export port, denoted by Dv, is:(5)Dv=∑k=1Ev+1pvkk,v=1,2,…,V.The expected number of containers rejected by shipv+1,denoted byRv+1,is:(6)Rv+1=∑n=Ev+2+1Npn∑k=max{0,1+Ev+1+Ev+2−n}Ev+1pvk(n+k−Ev+1−Ev+2),v=1,2,…,V.Eqs. (2)–(4) form a system ofV+∑v=1VEvlinear equations inV+∑v=1VEvunknownspvk,v=1,2,…,V,k=0,1,…,Ev+1. If both V and Evare small, the equation system can be solved using software such as Matlab, and thereby the average number of delayed and rejected containers can be calculated by Eqs. (5) and (6), respectively. If it is too time-consuming to solve the equation system, we can use Monte Carlo simulation to directly estimate the average numbers of delayed and rejected containers.To evaluate the permutation, we defineD¯=∑v=1VDvV,R¯=∑v=1VRvV,and define the cost of the permutation as(7)C¯=D¯+cR¯.A larger value ofC¯means a worse string.Example 1Consider a simple case with two ships:E1=1andE2=2. The demand is either 0 or 2, with probabilitiesp0=0.4andp2=0.6,respectively. Therefore, after ship one, it is possible that 0, 1 or 2 TEUs are delayed; and after ship two, 0 or 1 TEU may be delayed. Moreover, as the maximum demand in a week is 2, no container will be rejected after ship one leaves the export port; and it is possible that 1 TEU is rejected after ship two leaves the export port. The equation system (2)–(4) is:p10=0.4(p20+p21),p11=0.6p20,p20=0.4(p10+p11+p12)+0.6p10,p12=1−p10−p11,p21=1−p20.Solving the equation system manually, we obtain the results:p10=0.4,p11=0.384,p12=0.216,p20=0.64,p21=0.36,D1=1p11+2p12=0.816,D2=1p21=0.36,D¯=D1+D22=0.588,R1=0,R2=0.6p12×1=0.1296,R¯=R1+R22=0.0648,C¯=D¯+cR¯=0.588+5×0.0648=0.912.Consider a case with four ships:E1=900,E2=920,E3=980andE4=1200,with the average capacityE¯=1000. The demand in each week follows a truncated normal distribution with meanq¯=0.8E¯=800,coefficient of variation 0.2, between 0 and2q¯. We enumerate all of the permutations, and the results are shown in Table 2(the meaning of the last three columns will be explained in the next section). The string 1 → 4 → 2 → 3 has the lowest cost.Consider the ships deployed on the TP2 service in Table 1. Assume that the demand in each week follows a truncated normal distribution with meanq¯=7294(≈0.9E¯),coefficient of variation 0.2, between 0 and2q¯. We enumerate all of the permutations, and find that the cost of the existing string in Table 1 is 68.4. The best string is ANTON SCHULTE (6966) → NAVARINO (8530) → MSC RANIA (8402) → MSC TEXAS (8238) → MSC TORONTO (8089) → MSC HEIDI (8402), whose cost is 66.3. According to UNCTAD (2013), all over the world, a total of 155 million TEUs were transported in 2012. The optimization of the sequence of ships in a string would thus translate to a reduction of68.4−66.37,294×155×106≈4.46×104TEUs delayed by a week. Assuming an inventory cost of 20 dollars per TEU per day (Bell et al., 2013), the costs savings would be over 6 million dollars.We conduct an in-depth analysis into the effect of different permutations. We reiterate the assumptions: (i) E1 ≤ E2 ≤ ⋅⋅⋅ ≤ EVand 0 < E1 < EV; (ii)q¯<E¯; (iii) N > E1; and (iv) c > 2. The first three assumptions are solely aimed at avoiding trivial results rather than being restrictive. The fourth assumption is reasonable because a rejected container would at least wait for two weeks to be transported if it were to be transported by the ships in the string.We letC¯(Opt)andC¯(Worst)be the costs of the best and the worst permutations of the V heterogeneous ships, respectively. As a comparison, we useC¯(Homo)to represent the cost of a string of V homogeneous ships, each with capacityE¯. Let (1) → (2)⋅⋅⋅ → (V) be an arbitrary string. That is, (u) is the ship ID (with 1 being the smallest ship and V being the largest ship) of the u’th ship in the string,u=1,2,…,V. Moreover, we impose(1)=1to avoid symmetrical permutations. For instance, ifV=4,then(1)=1,(2)=4,(3)=2,(4)=3represents the string 1 → 4 → 2 → 3.Theorem 1The ratioC¯(Opt)C¯(Homo)may approach infinity for some problems.Suppose thatV=2,E1=1,andE2=M. Suppose further that there are two demand scenarios 1 and 2 with the same probability:q1=q2=0.5. In scenario 1 the demand is 1 TEU, and in scenario 2 the demand isϵ+1+M2TEUs, with M > 1 andϵa small positive number. Then there is only one permutation. We can calculate thatC¯(Opt)=0.5×ϵ+1+M2−12+c×0=2ϵ+M−18.SinceE¯=1+M2,it is easy to see thatlimϵ→0+C¯(Homo)=0.Aslimϵ→0+C¯(Opt)=M−18>0,the ratioC¯(Opt)C¯(Homo)may approach infinity.□We let ξ be the random variable representing the weekly demand,E(x)be the expectation of a random variable x, andy+:=max(0,y). Then,Theorem 2A lower bound onC¯(Opt)is given by(8)C¯(Opt)≥1V∑v=1VE(ξ−Ev)+.Moreover, the bound can be tight for some problems.Let (1)* → (2)* → ⋅⋅⋅ → (V)* be the optimal string. Assuming that there are no containers delayed from the previous week whenever a ship arrives at the export port, we obtain a valid lower bound:C¯(Opt)≥1V∑u=1VE[(ξ−E(u)*)++c(ξ−E(u)*−E(u+1)*)+]Sincec(ξ−E(u)*−E(u+1)*)+≥0,C¯(Opt)≥1V∑u=1VE(ξ−E(u)*)+=1V∑v=1VE(ξ−Ev)+.Suppose thatV=2,E1=ϵ,E2=2q¯,and the demand is fixed atq¯. ThenC¯(Opt)=q¯−ϵ2,E(ξ−E1)+=q¯−ϵ,E(ξ−E2)+=0,and hence the inequality in (8) is tight.□An upper bound onC¯(Worst)is given by(9)C¯(Worst)≤cq¯and for some problems no smaller upper bound exists.A container is either delayed by one week (and then loaded to the ship that comes in the next week), or rejected (incurring a cost of c). This proves the validity of the upper bound in Eq. (9).Suppose thatE1=E2=⋯=EV−1=ϵ,EV=Vq¯. Then there is only one permutation. Assuming that the demand is fixed atq¯,C¯(Worst)=[ϵ+c(q¯−2ϵ)]+(V−3)[ϵ+c(q¯−ϵ)]+q¯+0V.Sincelimϵ→0+limV→+∞C¯(Worst)=cq¯,no smaller upper bound exists.□The ratioC¯(Worst)C¯(Opt)can be as large as c for some problems.Suppose that V is an even number,E1=E2=⋯=EV2=ϵ,EV2+1=⋯=EV=2q¯,and the demand is fixed atq¯. Then the following string1→(V2+1)→2→(V2+2)⋯V2→Vhas a cost ofq¯−ϵ2. The string1→2→3⋯(V−1)→Vhas a cost ofC¯(1→2⋯→V)=[ϵ+c(q¯−2ϵ)]+(V2−2)[ϵ+c(q¯−ϵ)]+q¯+0V.By definition,C¯(Worst)C¯(Opt)≥C¯(1→2⋯→V)q¯−ϵ2Hence,C¯(Worst)C¯(Opt)≥limϵ→0+limV→+∞C¯(1→2⋯→V)q¯−ϵ2=c.□Theorem 1 indicates the importance of considering ship heterogeneity in a string. Theorem 2 provides a lower bound on the cost of the optimal permutation for a given set of ships and for known probability distribution of demand. Theorem 3 demonstrates that the cost of a string can be extremely high despite its average capacity is higher than the average demand. Theorem 4 highlights that significant cost savings could be gained by carefully choosing the sequence of the ships. Therefore, we need to design a method for choosing the sequence of the ships.As mentioned above, the demand distribution cannot be forecasted accurately. Moreover, the demand may change with time. Therefore, we have to identify a “robust” string that is capable of hedging against demand uncertainties. Fortunately, based on expert judgment and extensive tests, we identify three rules for finding such a string.Rule 1Choose a string that minimizes the absolute deviation of the sum of capacities of two consecutive ships, which is defined asA1=∑u=1V|E(u)+E(u+1)−2E¯|V.For instance, the value of A1 for the string 1 → 4 → 2 → 3 in Table 2 can be calculated asA1=|900+1200−2×1000|4+|1200+920−2×1000|4+|920+980−2×1000|4+|980+900−2×1000|4=110.We observe that it is quite often the case that several strings satisfy Rule 1, and not all of them are the best or even good. Therefore, we propose a second rule.Among all of the strings that satisfy Rule 1, choose a string that minimizes the square root of the squared deviation of the sum of capacities of two consecutive ships, which is defined asA2=∑u=1V(E(u)+E(u+1)−2E¯)2V.The value of A2 for the string 1 → 4 → 2 → 3 in Table 2 can be calculated as(A2)2=(900+1200−2×1000)24+(1200+920−2×1000)24+(920+980−2×1000)24+(980+900−2×1000)24=12,200,A2≈110.5.The values of A1 and A2 are the same for two strings with the reversed sequence of ships, for instance, 1 → 4 → 2 → 3 and 1 → 3 → 2 → 4. We find that the one that satisfies the following rule is better:Rule 3Among all of the strings that satisfy Rule 2, choose a string that minimizes the square root of the unidirectional squared difference of the capacities of two consecutive ships, which is defined asA3=∑v=1V[max(0,E(u)−E(u+1))]2V.The value of A3 for the string 1 → 4 → 2 → 3 in Table 2 can be calculated as(A3)2=[max(0,900−1200)]24+[max(0,1200−920)]24+[max(0,920−980)]24+[max(0,980−900)]24=21,200,A3≈145.6.If the number of ships V is small (e.g.,V=8means the number of possible permutations does not usually exceed7!=5040), it is practical to enumerate all the possible permutations, and calculate A1, A2, and A3 for each permutation to identify the one that satisfies Rule 3. For example, it can be seen that only the string 1 → 4 → 2 → 3 satisfies Rule 3 in Table 2. It happens that this string has the smallest number of delayed and rejected containers.In extreme cases, it may not be possible to enumerate all of the permutations. For instance, 72 ships are deployed on the Daily Maersk service (DailyMaersk, 2014). Consequently, the number of permutations may be as large as 71! ≈ 8.5 × 10101. To identify the string that satisfies the three rules, we have to resort to mathematical programming methods.The problem that minimizes A1 is a symmetric traveling salesman problem (TSP), in which each ship is a city to visit, the distances between city v and city v′ isdvv′A1=dv′vA1=|Ev+Ev′−2E¯|V,v,v′=1,2,…,V,v ≠ v′, and the tour starts from and ends at city 1. Define the set of arcs asA:={(v,v′)|v=1,2,…,V,v′=1,2,…,V,v≠v′}. Letxvv′be a binary variable which equals 1 if and only if ship v′ follows ship v in the string. Define yvas the number of ships between ship 1 (inclusive) and ship v (inclusive) in the string. The model for identifying a string that satisfies Rule 1 is(10)[Model-Rule1]min∑(v,v′)∈Advv′A1xvv′subject to:(11)∑v′=1,v′≠vVxvv′=1,v=1,2,…,V(12)∑v=1,v≠v′Vxvv′=1,v′=1,2,…,V(13)yv′≥yv+1−V(1−xvv′),v=1,2,…,V,v′=2,…,V,v′≠v(14)yv≥2,v=2,…,V(15)y1=1(16)xvv′∈{0,1},(v,v′)∈AThe objective function (10) minimizes the value of A1. Eqs. (11) and (12) are flow conservation equations. Eqs. (13)–(15) eliminate subtours. Eq. (16) definexvv′as binary variables.Minimizing A2 is equivalent to minimizing (A2)2, which is equal to∑v=1V(Ev+Ev+1−2E¯)2V. Hence, the problem that minimizes A2 is also similar to a symmetric TSP, in which each ship is a city to visit, the distances between city v and city v′ isdvv′A2=dv′vA2=(Ev+Ev+1−2E¯)2V,(v, v′) ∈ A. Letxvv′A1andyvv′A1be an optimal solution to [Model-Rule 1]. Using the same decision variablesxvv′andyvv′,the model for identifying a string that satisfies Rule 2 is(17)[Model-Rule2]min∑(v,v′)∈Advv′A2xvv′subject to:(18)∑(v,v′)∈Advv′A1xvv′=∑(v,v′)∈Advv′A1xvv′A1and Eqs. (11)–(16). Constraint (18) ensures that the value of A1 is minimized in [Model-Rule 2].Minimizing A3 is equivalent to minimizing (A3)2, which is equal to∑v=1V[max(0,Ev−Ev+1)]2V. Different from the above two problem, the problem that minimizes A3 is similar to an asymmetric TSP: the distance from city v to city v′ isdvv′A3=[max(0,Ev−Ev+1)]2V,(v, v′) ∈ A and generallydvv′A3≠dv′vA3. Letxvv′A2andyvv′A2be an optimal solution to [Model-Rule 2]. Using the same decision variablesxvv′andyvv′,the model for identifying a string that satisfies Rule 3 is(19)[Model-Rule3]min∑(v,v′)∈Advv′A3xvv′subject to:(20)∑(v,v′)∈Advv′A1xvv′=∑(v,v′)∈Advv′A1xvv′A2(21)∑(v,v′)∈Advv′A2xvv′=∑(v,v′)∈Advv′A2xvv′A2and Eqs. (11)–(16).The two models [Model-Rule 2] and [Model-Rule 3] are different from formulations for the TSP because of the additional cuts (18) and (20)–(21). As a result, we may not be able to take advantage of the state-of-the-art algorithms for solving the TSP to solve the two models. To overcome this deficiency, we propose an exact TSP formulation for identifying a string that satisfies Rule 3 using the concept of the “big-M” method. Let M be a large positive number. Consider the asymmetric TSP in [Model-Rule 3]. Define the distance from city v to city v′ asdvv′=M2dvv′A1+Mdvv′A2+dvv′A3,(v, v′) ∈ A. Using the same decision variablesxvv′andyvv′,the TSP formulation for identifying a string that satisfies Rule 3 is(22)[Model-Rule3(TSP)]min∑(v,v′)∈Advv′xvv′subject to Eqs. (11)–(16).We conduct extensive numerical experiments to evaluate the performance of the string found by Rule 3 withc=5. First, we randomly generateV=6ships, whose capacities are integers uniformly distributed between 9,500 and 10,500 TEUs. We then generate the random demand based on some probability distributions, including uniform, normal, triangle, and lognormal distributions. As shown in Table 3, we examine a total of 16 cases, where the column “Parameter” means the lower and upper bounds for uniform distributions; mean and variance for normal distributions; lower limit, peak location, and upper limits for triangular distribution; and mean and variance for lognormal distributions. Since the demand cannot be negative, in normal distributions we discard the realizations less than 0 or greater than two times the mean. Hence, the normal distributions are actually truncated normal distributions.For each case, we randomly generate 20 instances. The ship sizes in all of the16×20=320instances are different. For each instance, we enumerate all of the(6−1)!=120permutations. For each permutation, we evaluate its cost and calculate the values of A1, A2 and A3 defined in the three rules. We compare the performance of the string that satisfies Rule 3 with the optimal permutation. We define the gap between the string that satisfies Rule 3 and the optimal permutation as(23)C¯(thestringthatsatisfiesRule3)−C¯(theoptimalpermutation)C¯(theoptimalpermutation)×100%.We stress that in reality one does not know and cannot know which permutation is optimal before knowing the demand. Hence, the performance of the optimal permutation is a benchmark that cannot be achieved.The results are shown in Table 3. The column “#Optimal” is the number of instances out of 20 such that the string that satisfies Rule 3 is also the optimal one. The columns “Average Gap” and “Largest Gap” report the average gap of the 20 instances and the largest one, respectively, defined by Eq. (23). It can be seen that the string satisfying Rule 3 is highly robust: it is optimal in 149 out of the total 320 instances; the average gap is not greater than 0.3 percent, and the largest gap is less than 2 percent.The results in Table 4reports the tests for seven ships under the same settings as the ones for six ships. Again, the string satisfying Rule 3 is highly robust: it is optimal in 73 out of the total 320 instances; the average gap is not greater than 0.4 percent, and the largest gap is less than 2 percent.We further conducted 100 instances with eight randomly generated ships. The demand in a week has the same probability to follow uniform[0.85E¯,1.05E¯],normal(0.9E¯,(0.09E¯)2),triangle(0,0,1.6E¯),and lognormal(0.9E¯,(0.09E¯)2)distributions. The results show that in 34 instances, the string satisfying Rule 3 is also optimal; in 83 instances, the gap does not exceed 0.1 percent; and the largest gap among all of the instances is 0.4 percent.We choose the value of c to be 5 simply based on subjective judgment. In this section, we analyze the sensitivity of the results with the value of c. We consider six ships with four different distributions of demand. For each distribution, 20 random instances are generated. For each instance, the value of c is varied from 3, 5, 7, to 10. The results are shown in Table 5. It is clear that the value of c does not have a significant impact on the results. This is actually because the number of rejected containers is much smaller than the number of delayed containers. Hence, the solution obtained by the three rules is also robust with c.

@&#CONCLUSIONS@&#
We have addressed the problem of how to determine the sequence of ships in a string to minimize the delay of containers, without requiring the probability distribution functions for the future demand. This is a practical research problem that is of significant importance for shipping lines. We have proposed three rules to identify an optimal or near-optimal string. The rules have been proved effective based on extensive numerical experiments. A rough estimation indicates that over 6 million dollars/year could be saved for all liner services in the world by optimizing the sequences of ships.In this paper, the availability of the ships in the string is not incorporated (Wang, 2013). If the ships are newly delivered from shipyards, it is likely that they are not delivered at the same time. As a result, their sequence in the string cannot be arbitrarily determined. Therefore, one future research direction is to integrate the process of phasing-in and phasing-out of ships with the determination of their sequence in the string. Another possible research area is to examine how to determine the sequences of ships in several strings at the same time. This problem is more challenging because some ports are visited by more than one string and consequently the sequences of ships in different strings have to be coordinated.