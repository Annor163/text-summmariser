@&#MAIN-TITLE@&#
Generating knowledge in maintenance from Experience Feedback

@&#HIGHLIGHTS@&#
The databases related to maintenance activities are a potential source of knowledge.An ontology is used for modeling the information present in the experiences stored in the database.A rule mining algorithm extracts association rules from past experiences.Conceptual Graphs allow analyse the extracted knowledge.

@&#KEYPHRASES@&#
Experience Feedback,Maintenance,Computerized Maintenance Management System,Conceptual Graphs,Knowledge formalization,Association rules mining,

@&#ABSTRACT@&#
Knowledge is nowadays considered as a significant source of performance improvement, but may be difficult to identify, structure, analyse and reuse properly. A possible source of knowledge is in the data and information stored in various modules of industrial information systems, like CMMS (Computerized Maintenance Management Systems) for maintenance. In that context, the main objective of this paper is to propose a framework allowing to manage and generate knowledge from information on past experiences, in order to improve the decisions related to the maintenance activity. In that purpose, we suggest an original Experience Feedback process dedicated to maintenance, allowing to capitalize on past activities by (i) formalizing the domain knowledge and experiences using a visual knowledge representation formalism with logical foundation (Conceptual Graphs); (ii) extracting new knowledge thanks to association rules mining algorithms, using an innovative interactive approach; and (iii) interpreting and evaluating this new knowledge thanks to the reasoning operations of Conceptual Graphs. The suggested method is illustrated on a case study based on real data dealing with the maintenance of overhead cranes.

@&#INTRODUCTION@&#
An efficient maintenance is one of the key factors of industrial performance [75]. Various maintenance strategies have been developed in the last decades, including Preventive Maintenance [68], Predictive Maintenance [41], Reliability Centred Maintenance (RCM) [64] or Total Productive Maintenance (TPM) [69], and applied to different industrial domains. Nevertheless, the idea of individualized maintenance strategies, based on a specific knowledge in each company, has recently emerged with the emphasis on “knowledge-based enterprise”; indeed, the global economy is progressively shifting from a manufacturing based value system to a knowledge-based value system [19].Even if knowledge is the base of human activity, only a part of it (“explicit knowledge”) is easily accessible, can be stored in information systems and can be efficiently reused. Making explicit the “implicit knowledge” (sometimes called “tacit knowledge”) is the objective of Knowledge Engineering [56,77,83], recently object of an increased attention, especially from large companies. Human experts may directly formalize implicit knowledge in an explicit way, but it often requires a long and complex process [61]. Explicit knowledge may also be extracted (automatically or not) from information related to past experiences stored in the information system of the company: learning from experiences has therefore become a very active field [50] and is the main target of this work.Maintenance is known as a field where a great mass of data is daily collected [10]: this is due to the generalization of Computerized Maintenance Management Systems (CMMS) in large companies, making available a large amount of information provided by technicians after each maintenance intervention (e.g. date of intervention, concerned equipment, technicians name, type of failure, functional localisation, cause, actions performed, etc.). Nowadays, this information is mainly used for traceability purpose, but it could be processed in order to allow the extraction and formalization of hidden knowledge. This knowledge could potentially be useful to improve the maintenance of the production process, but its extraction can hardly be done manually [89]. Data mining techniques [44] may allow an automated or semi-automated extraction of knowledge from databases. Some experiments have already been conducted in the domain of maintenance: see for instance [60,74,90]. These studies show interesting results, but the use of the suggested methods usually requires a high level of expertise. In that context, we suggest an original approach for facilitating the use of an Experience Feedback process dedicated to maintenance, by using Conceptual Graphs [80] for structuring the experiences, expressing the requirements of the users, then analysing and evaluating the provided knowledge database.In that purpose, we first suggest to formalize the domain vocabulary and the past experiences included in a CMMS using the Conceptual Graphs formalism. We then describe a method for extracting, interpreting and evaluating meaningful knowledge based on association rules mining algorithms as an iterative and interactive process controlled by the human decision maker, who can express his requests on the type of knowledge produced, and validates the results of the knowledge extraction process.The rest of the article is organized as follows: Section 2 explores the state of the art on Experience Feedback process, industrial maintenance and knowledge-based maintenance systems. Section 3 suggests a model of Experience Feedback in maintenance, while Section 4 presents an illustrative example based on real data dealing with the maintenance of overhead cranes in the aeronautic industry.Knowledge management can be defined as the process of creating value from an organizations intangible assets; it combines notions from several different domains, such as organizational behavior, human resource management, artificial intelligence and information technology [52]. Nevertheless, it can be difficult for experts to describe from scratch a non-contextualized generic knowledge [45]. Therefore, techniques allowing to reuse knowledge contained in past experiences have recently been object of an increasing attention, especially Case-Based Reasoning (CBR) [1], which adapts the solution of an already solved problem for addressing a new one [51]. Nevertheless, the aim of CBR is not to generalize this knowledge by formalizing an implicit knowledge in an explicit way, which is one of the objectives of experience management techniques. Indeed, an experience may be considered as a specialization of knowledge, or as a singular instance (or form) of previous knowledge [85]. Knowledge and experience management both include steps of collection, modeling, storage, evaluation and maintenance [11]. Since it is often easier for operational actors to validate the expertise extracted from lived experiences than to directly structure knowledge, the management of past experiences has become a strategic need for enterprises [25]. Close to experience management, Experience Feedback (EF) can be defined as a structured approach for capitalization, processing and exploitation of knowledge derived from the analysis of positive and/or negative events [73]. Such EF process is consistent with the usual processing stages of experience management [11]: discover, capture and collect, store (capitalization), evaluate, adapt, transform experience into knowledge (processing), reuse and maintain (exploitation).In the context of maintenance, failures and incidents are part of a “negative EF” that aims at avoiding the repetition of similar errors and improving problem solving. We are therefore especially interested in two critical points of the EF process: experience-knowledge formalization and new knowledge discovery, analysed in next sections.An experience can be defined using different information slots, e.g. context (in which the event occurred), analysis and solution [42]. The EF process requires a deep reflection on the choice of a knowledge representation formalism in the EF database: this formalism should indeed facilitate the difficult step of identifying the knowledge contained in each experience [11], but a formal knowledge representation should also allow to carry out the reasoning, and may facilitate the explanation and the sharing of this knowledge [19]. As a consequence, we have firstly investigated knowledge representation formalisms that could be used to better structure the stored experiences. These formalisms are mainly:-Frames based systems[62], where concepts represent sets of objects with common properties;Semantic Networks[72], providing a graphical representation of human knowledge, expressed by semantic relations between concepts;Description Logics (DLs) [12] and Conceptual Graphs (CGs) [80], both coming from semantic networks and formalising knowledge using a first-order logic [47].A representation formalism should provide both expressiveness and a decidable inference process [58]. This is the case for CGs, allowing both representation and reasoning [80]. Moreover, this formalism is nowadays the only logic-based model that has a corresponding interpretation in graph theory [87]. As a consequence, this formalism has been chosen for the present study.A CG is composed of two types of nodes: concepts nodes (denoted by rectangles) representing entities, and relation nodes (denoted by ovals) representing relationships between these entities. The ordered set of concept types is denoted TC and called a “hierarchy of concept types”, while the set of relations is denoted TR and is represented by a “hierarchy of relation types” [16]. These hierarchies represent the ontological knowledge needed to formalize factual knowledge using CGs. Knowledge representation in CGs is entirely graphical and close to an expression in natural language, facilitating the interpretation by the user. Reasoning is based on graph operations, mainly relying on graph homomorphism. These operations act directly on the represented knowledge, without requiring a logical language. This avoids the problem of explaining subsumptions found in DLs [59]. CGs allow to express various types of knowledge: descriptions, patterns, inference rules and constraints [6] and to structure and contextualize knowledge through nested CGs. Moreover, CGs can be translated into other knowledge representation formalisms, such as semantic web languages [81] or Petri nets [82]. Finally, many links exist between CGs and DLs [22,70], which is the most common language in knowledge based applications.The context of this study requires to transform experiences stored in databases into new knowledge. This is the objective of Knowledge Discovery from Databases (KDD). KDD is “the nontrivial process of identifying valid, novel, potentially useful, and ultimately understandable patterns in data” [28]. Since the vast amount of data stored in databases has great potential as source of new knowledge [39], KDD has become essential in many industrial domains, including product and process design, materials planning, quality control, scheduling and maintenance. This process usually requires several steps, including data mining (DM) [44]. Data mining aims at discovering hidden knowledge (relationships or patterns) in large volumes of data [39]. It is generally considered as the main step in the KDD process, and consists in applying data analysis and discovery algorithms for generating knowledge [44]. DM systems are often classified according to the kind of database mined, the kind of knowledge mined, the kind of technique utilized and the application domain [37]. In an industrial context, DM is frequently partitioned according to the kind of knowledge to be mined [38]. One can distinguish between:-Descriptive DM[24,35], that focuses on the discovery of patterns (or models) in the data. Examples include summarization, clustering, association rules mining and sequence discovery.Predictive DM, focusing on predicting the behavior of a model, and determining the future values of variables from the information included in the databases [21].In descriptive DM, association rule mining is often considered as facilitating the understanding of knowledge by the user, since relationships with the form IF (antecedent) THEN (consequent) are often seen as close to human reasoning [46].Maintenance is an important function that supports the primary process of an organization [4]. According to European Standards [27], maintenance is defined as “the combination of all technical, administrative and managerial actions performed during the life cycle of an item intended to retain it in, or restore it to, a state in which it can perform the required function”. Following this definition, two main types of actions may be distinguished in maintenance: actions for retaining and actions for restoring a service, i.e. preventive and corrective maintenance operations. The classification presented by the European Standard for maintenance terminology [27] is shown in Fig. 1.This classification depends on the respective position in time of the maintenance activity and of the failure: an intervention before a failure is a preventive maintenance, carried out at predetermined intervals or when a specific need is identified (“on condition”), while an intervention after failure is a corrective maintenance activity, and can be immediate or postponed.Nowadays, the global performance of the companies depends to a large extent on their performance in maintenance, but the increasing complexity and level of automation of the industrial equipment make it difficult for the users to operate, diagnose and maintain it efficiently. Maintenance tasks are becoming more and more complex and diverse, involving not only activities on mechanical components, but also on electronic, hydraulic, electromechanical systems and software [4]. Managers, supervisors and operators consider that a lack of knowledge on the plant, equipment and process is the main limitation for implementing effective maintenance procedures [23]. Thus, it is important to provide decision support to the actors, based on complementary experience and knowledge, for performing the right maintenance action at the right time.It is now commonly considered that the knowledge gained during the maintenance activities could be reused to improve the next interventions [9]. In this context, and considering the difficulties for implementing strategies like TPM and RCM (see Section 1), organizations try to use their internal knowledge more efficiently [40].Several knowledge-based systems, usually based on expert knowledge, have been developed to support maintenance decisions, with objectives including design of strategies, scheduling of tasks or diagnosis of machines. A method for knowledge capitalization in maintenance, aiming at developing a decision support system (DSS) for the diagnosis and repair of an equipment by using past experiences, is for instance described in [74]. Detect, preserve, capitalize and actualize the strategic knowledge are its main steps, based on Case-Based Reasoning. The main difficulty of this method is that the used knowledge representation techniques do not have a reasoning mechanism. MAIC [71] is a knowledge-based DSS also using CBR for the maintenance of a chemical plant, based on an adaptation of past experiences, taking into consideration economic variables. EXPERT-MM [8] suggests maintenance strategies on the base of expert knowledge stored in a knowledge database. Chassiakos et al. [14] describes a knowledge-based system aiming at building the maintenance planning of a bridge.According to [21], only 8% of the studies on data mining application in manufacturing are related to the maintenance domain, including descriptive and predictive DM: this is consistent with [39], denoting that even if this domain was the first area of manufacturing taking advantage of data mining-based solutions, only a few reports on the use of data mining were found in maintenance applications. In Létourneau et al. [55], a DSS for predicting the failure of a component is described, based on data collected from sensors, with the goal to improve the preventive maintenance. Several data mining approaches are used, like decision trees, naive Bayesian networks, regressions and neural networks. In Shen et al. [78], the rough-set theory is applied to the diagnostic of faults and is used to extract rules predicting the occurrence of failures (predictive DM).In our context, some studies suggest to use association rules mining (descriptive DM) for improving the maintenance process. Others do not explicitly target such improvement, but provide results that may be useful in that purpose (see for instance [18,54,60,63]). The main characteristics of these studies are summarized in Table 1, namely the algorithm used for rule mining, the goal of the study, the application domain and the source of data.A first comment on Table 1 is that the Apriori algorithm [3], well known for its simplicity and efficiency, is often used. It can also be noticed that the objectives of these studies are often rather precise. This facilitates the interpretation/validation of the obtained rules, all based on the same itemsets (symptoms-causes for a data mining activity oriented on diagnosis for instance). As a consequence, few of these works are interested in getting all the possible types of rules that an algorithm may identify from a database, which is our objective. In this case, helping the user to understand the possible links between extracted rules of different types becomes of great interest. Supporting him not only in diagnostic activities but also in problem solving, database structuration, prognostic activities, etc. is also necessary.In the studies described in Table 1, the interaction with the users is not detailed, except in Mirabadi and Sharifian [63] where the use of the Generalized Rule Induction algorithm allows the user to specify how many rules she/he expects.In comparison with these studies, all dealing with association rules mining in maintenance, our approach has several original aspects:-the goal of the data mining activity is not to solve a specific problem (diagnosis for instance) but to explore all the links between itemsets identified by the rule extraction algorithm;since rules of different types will be mined, it may be beneficial to firstly show to the user the relationships between the different types of mined rules. One of our objectives is therefore to provide tools allowing the user to analyse the structure of the produced knowledge;for the same reason, it becomes interesting to provide the user with tools allowing to filter the set of rules according to different points of view or expectations; andfinally, interesting things may be learnt not only from the rules that are present, but also from the fact that expected rules are absent. We shall show that comparing present and absent rules may for instance help to identify problems in the way an experience is structured in the database, or to define more precisely the operating characteristics of the maintenance processes. To our knowledge, there is no work addressing this subject.Reaching these objectives may be easier if a specific formalism is chosen for modeling the extracted knowledge at a conceptual and operational level: we have chosen Conceptual Graphs in that purpose. Their use will necessitate to define first the domain vocabulary (so-called support or ontological knowledge). This representation formalism allows therefore to contextualize the different concepts or items contained in the extracted rules and to use reasoning mechanisms taking into account the specialization of each concept in the support.

@&#CONCLUSIONS@&#
