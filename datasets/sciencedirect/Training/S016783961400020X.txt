@&#MAIN-TITLE@&#
Bounding and estimating the Hausdorff distance between real space algebraic curves

@&#HIGHLIGHTS@&#
Bounds of the Hausdorff distance between two real space algebraic curves are provided.An estimation method for bound of the Hausdorff distance is designed.The method is checked to be accurate and fast through given examples.

@&#KEYPHRASES@&#
Hausdorff distance,Space curve,Projection,Implicit representation,Rational parametrization,

@&#ABSTRACT@&#
In this paper, given two real space algebraic curves, not necessarily bounded, whose Hausdorff distance is finite, we provide bounds of their distance. These bounds are related to the distance between the projections of the space curves onto a plane (say,z=0), and the distance between the z-coordinates of points in the original curves. Therefore, we provide a theoretical result that reduces the estimation and bounding of the Hausdorff distance of algebraic curves from the spatial to the planar case. Using these results we provide an estimation method for bounding the Hausdorff distance between two space curves and we check in applications that the method is accurate and fast.

@&#INTRODUCTION@&#
The Hausdorff distance has proven to be an appropriate tool for measuring the resemblance between two geometric objects, becoming in consequence a widely used tool in computer aided design, pattern matching and pattern recognition (see for instance Bai et al., 2011; Chen et al., 2010; Kim et al., 2010 and Patrikalakis and Maekawa, 2001). Several variants of the Hausdorff distance have been developed to match specific patterns of objects, in this paper, we study the computation of the Hausdorff distance between two real space algebraic curvesE1andE2. We briefly recall the notion of Hausdorff distance; for further details we refer to Aliprantis and Border (2006). In a metric space(X,d), for∅≠B⊂Xanda∈Xwe defined(a,B)=infb∈B{d(a,b)}. Moreover, forA,B⊂X∖∅we defineHd(A,B)=max{supa∈A{d(a,B)},supb∈B{d(b,A)}}.By conventionHd(∅,∅)=0and, for∅≠A⊂X,Hd(A,∅)=∞. The functionHdis called the Hausdorff distance induced by d. In our case, since we will be working in(C3,d)or(R3,d), d being the usual unitary or Euclidean distance, we simplify the notation writingH(A,B).The problem of computing the Hausdorff distance has proven not to be an easy one. We should note in the first place that there is no effective algorithm for the exact computation of the Hausdorff distance between algebraic varieties. Some recent works that approach special cases are Chen et al. (2010), Jüttler (2000) and Patrikalakis and Maekawa (2001). There exist theoretical results, as Lojasiewicz inequality for the compact case (see Ji et al., 1992), that relate by means of a constant the Hausdorff distance to the evaluation of the implicit equation(s) of one of the varieties at a parametrization of the other variety. However, this constant is hard to compute. Furthermore, if both varieties are given in implicit form, the computation of the Hausdorff distance is even harder. Also, for the compact case, there are techniques to approximate the distance into a fixed size frame (see Belogay et al., 1997), or by using biarcs (see Kim et al., 2010), or polylines (see Bai et al., 2011) as well as under the phenomenon where the point sets are given imprecisely (see Knauer et al., 2011). Additionally, for plane curves, in Jüttler (2000) it is shown how to bound the Hausdorff distance using foot-point distance. Altogether shows that bounding and estimating the Hausdorff distance is an active research area.Among all these different variants of the problem we, here, deal with the algebraic global case for space curves. That is, we are given two real space algebraic curves and we want to provide bounds of the distance of the two algebraic sets and not of certain parts (subsets) included within a bounded frame. Afterwards, these bounds can be used to obtain estimations of the Hausdorff distance in a chosen bounded frame. Having such bounds would be useful for measuring the performance of approximate parametrization and approximate implicitization methods, see Emiris et al. (2012), Pérez-Díaz et al. (2010), Rueda and Sendra (2012), Rueda et al. (2013), in other words to decide how much the input and output of such methods resemble each other. In Pérez-Díaz et al. (2010) we provided bounds for the Hausdorff distance between two algebraic plane curves and, in practice, we used estimations of these bounds in Rueda and Sendra (2012). In Rueda et al. (2013), we gave a method to estimate bounds ofsupP∈E1R{d(P,E2)}for space curves, considering the intersection of normal planes through regular points ofE1RwithE2, and conversely; the curves, although real, are considered over the field of complex numbers and the super-indexRmeans the real part of the curve.In this paper, considering planes orthogonal to a plane of projection (z=0), we will be able to relate bounds ofsupP∈E1R{d(P,E2)}with bounds for the distance between the real parts of the projected curves, as well as with bounds for the distance between the z-coordinates of points inE1RandE2. To derive this relation a Gröbner basis of the ideal ofE2w.r.t. the pure lexicographic order withz>x>yis a fundamental tool (see e.g. Cox et al., 1997 for further details on Gröbner bases). The relation between bounds of the space curves and bounds of the plane curves is the main contribution of this paper; see Theorem 3.5 and its corollaries. It allows the use of every method developed so far to estimate the Hausdorff distance between plane curves to achieve estimations of the distance for space curves. In this sense, more profit is obtained from existing techniques for estimating the Hausdorff distance in the plane, since they can be use for the same goal with space curves.In Section 2, we present a situation in which the Hausdorff distance between the real part of two algebraic curves is finite. Bounds for the distancesd(P,E2)andd(P,E2R),P∈E1are given in Section 3. In such situation, an estimation method for the supremum of the distances between points in a given curve and the other curve, is given in Section 4. Examples of application of such method are provided in Section 5 and conclusions are derived in Section 6.In this section we fix the notation that will be used throughout the paper. We consider a computable subfieldKof the fieldRof real numbers, as well as its algebraic closureF; in practice, we may think thatKis the fieldQof rational numbers. We denote byF2andF3the affine plane and the affine space overF, respectively. Similarly, we denote byP2(F)andP3(F)the projective plane and the projective space overF, respectively. Furthermore, ifA⊂F3(similarly ifA⊂F2) we denote byA⁎⊂F3its Zariski closure, and byAh⊂P3(F)the projective closure ofA⁎. We will consider(x,y,z)as affine coordinates and(x:y:z:w)as projective coordinates. Also, we denote byA∞the points at infinity ofA, that is, the intersection ofAhwith the projective plane (line in the planar case) of equationw=0.In addition, we will consider two irreducible real space curvesE1,E2⊂C3satisfying the following assumptions:A1.E1∞=E2∞,card(E1∞)=card(E2∞)=deg(E1)=deg(E2),E1,E2are not included in a plane of the formax+by=c; note that this is not a loss of generality.In addition to the assumptions above, we consider that the projection of eachEiover the planez=0is birational. Note that for almost all projections (see e.g. Fulton, 1989, p. 155), this holds and hence we can assume it w.l.o.g. We denote this projection map byπzito distinguish between the projection restricted toE1and toE2.We consider a Gröbner basisF={F0,F1,…,Fℓ1}⊂K[x,y,z]of the ideal ofE1and a Gröbner basisG={G0,G1,…,Gℓ2}⊂K[x,y,z]of the ideal ofE2, both bases w.r.t. the pure lexicographic order withz>x>y. LetF0be the smallest polynomial ofF, thenF0∈K[x,y]and it is an implicit representation of the projected curveπz1(E1)⁎; similarly withG0andπz2(E2)⁎. On the other hand, since we are assuming the projectionπzito be birational onEi, both Gröbner bases contain a linear polynomial in z. Say thatF1=f1(x,y)z−f2(x,y)and thatG1=g1(x,y)z−g2(x,y). Note that this implies that the inverse ofπz1:E1→πz1(E1)is(x,y,f2(x,y)/f1(x,y))←(x,y)and that the inverse ofπz2:E2→πz2(E2)is(x,y,g2(x,y)/g1(x,y))←(x,y).In the next, d denotes the usual unitary distance inC3,‖⋅‖denotes the associated norm to d, and|⋅|denotes the module in the fieldCof complex numbers.We are interested in bounding the Hausdorff distance betweenE1RandE2R, namelyH(E1R,E2R)=max{supQ∈E1R{d(Q,E2R)},supP∈E2R{d(P,E1R)}},where the distance between a pointP∈C3and a set∅≠A⊂C3is defined asd(P,A)=infQ∈A{d(P,Q)}.In Rueda et al. (2013), we gave a method to estimatesupP∈E1R{d(P,E2)}andsupP∈E1R{d(P,E2R)},assuming thatE1is rational, and considering the intersection, withE2, of normal planes through regular points ofE1R. In this paper, considering planes orthogonal to the plane of projection (z=0), we will be able to relate the given bounds with bounds for the distance betweenπz1(E1R)⁎∩R2andπz2(E2)⁎, as well as with bounds for the distance between the z-coordinates of points inE1RandE2.For this purpose, in the following, letP=(α,β,γ)be a point onE1. We search for an upper bound of(1)d(P,E2R)=inf{d(P,Q)|Q∈E2R}whose computation could be accessible. Let us consider the pencil of all orthogonal planes (inC3) to the planez=0, and passing through P (see Fig. 1). This pencil can be parametrized as:(2)L(h,P,k1,k2):=P+k1v(h)+k2v2,wherev2=(0,0,1)andv(h)is an arbitrary unitary vector in the projection plane, sayv(h):=(h2−1h2+1,2hh2+1,0),h∈C.Note thatv(h)provides all vectors of the unit circle, on the planez=0, with the exception of(1,0,0); see Section 6.3 in Sendra et al. (2007). Therefore,L(h,P,k1,k2)parametrizes all the planes in the pencil. Forh0∈C, letΠ(h0,P)be the complex plane given byL(h0,P,k1,k2); that is,k1,k2take values inC. Similarly, letΠR(h0,P)be the real plane given byL(h0,P,k1,k2)whereh0is taken real andk1,k2take values inR. We observe that(3)C3=⋃h0∈CΠ(h0,P),R3=⋃h0∈RΠR(h0,P).Let us see the first equality, the second is analogous. Clearly⋃h0∈CΠ(h0,P)⊂C3. Now, letP=(a,b,c)∈C3. If(a,b)=(α,β)then P is, indeed, in all the planes, so letv=(a−α,b−β)≠0¯. ThenP∈Π(h0,P), whereh0is such thatv(h0)=visb≠βandh0=0ifb=β, which proves the equality.In this situation, for everyh0∈C, we consider the polynomials inC[k1,k2]defined asDih0(P,k1,k2):=Gi(L(h0,P,k1,k2)),i=0,…,ℓ2.Definition 3.1We introduce the sets1.Kh0:={(k1,k2)∈C2|Dih0(P,k1,k2)=0,i=0,…,ℓ2}.Forh0∈R, letKh0R:=Kh0∩R2.Remark 3.2We observe that:1.Kh0consists in the parameter values generating the intersection points ofE2andΠ(h0,P). That isE2∩Π(h0,P)={L(h0,P,k1,k2)|(k1,k2)∈Kh0}.Moreover, because of assumptionA3in Section 2,Kh0≠∅.Using (3) one hasE2=E2∩C3=E2∩(⋃h0∈CΠ(h0,P))=⋃h0∈C{L(h0,P,k1,k2)|(k1,k2)∈Kh0}.Forh0∈R,Kh0Rconsists in the parameter values generating the real intersection points ofE2andΠ(h0,P). That isE2R∩Π(h0,P)={L(h0,P,k1,k2)|(k1,k2)∈Kh0R}.Moreover, sinceπz2(E2)is a real curve, one has that for infinitely manyh0∈Rit holds thatKh0R≠∅.Reasoning as above, one hasE2R=⋃h0∈R{L(h0,P,k1,k2)|(k1,k2)∈Kh0R}.Lemma 3.3It holds that1.d(P,E2)=inf⋃h0∈C{‖k1v(h0)+k2v2‖|(k1,k2)∈Kh0}.d(P,E2R)=inf⋃h0∈R{‖k1v(h0)+k2v2‖|(k1,k2)∈Kh0R}.It follows from the definition of distance of a point to a set, and Remark 3.2.  □For a given P, we consider values ofh0∈Rsuch that:•Kh0R≠∅(see Remark 3.2)The points inπz2(E2)∩Π(h0,P)are 1:1 invertible by the mapπz2:E2→πz2(E2).In this situation, it holds that (recall that, by Remark 3.2,Kh0≠∅and by constructionKh0R≠∅)d(P,E2)⩽min{‖k1v(h0)+k2v2‖|(k1,k2)∈Kh0}⩽min{|k1|+|k2||(k1,k2)∈Kh0)}and thatd(P,E2R)⩽min{|k1|+|k2||(k1,k2)∈Kh0R}.We observe that the polynomialD0h0does not depend onk2. So we write it asD0h0(P,k1). Letg(x,y):=g2(x,y)/g1(x,y)(see Section 2).L(h0,P,k1,k2)can be expressed as(a(k1),b(k1),γ+k2)whereaandbare linear polynomials ink1(see (2)). Then, by construction, the following univariate rational function inR(k1)is well definedg¯(h0,P,k1):=g(a(k1),b(k1)).The following lemma gives a characterization of the setsKh0andKh0Rusing onlyG0andG1.Lemma 3.4It holds that1.Kh0={(k1,g¯(h0,P,k1)−γ)|D0h0(P,k1)=0}.Kh0R={(k1,g¯(h0,P,k1)−γ)|D0h0(P,k1)=0,k1∈R}.We prove statement 1. A similar reasoning is valid for statement 2. Let Δ be the set on the r.h.s of the equality in statement 1. Let(k1,k2)∈Kh0. Then,Dih0(P,k1,k2)=0fori=0,…,ℓ2. In particularD0h0(P,k1)=0, andD1h0(P,k1,k2)=0. More precisely,D1h0(P,k1,k2)=G1(L(h0,P,k1,k2))=G1(a,b,γ+k2)=g1(a,b)(γ+k2)−g2(a,b)=0.That is,k2=g(a,b)−γ=g¯(h0,P,k1)−γ. Therefore,(k1,k2)∈Δ.Conversely, let(k1,k2)∈Δ. Then,k2=g¯(h0,P,k1)−γandD0h0(P,k1)=0. Let(a(k1),b(k1),γ+k2)=L(h0,P,k1,k2), then(a,b)∈πz2(E2). By construction ofh0,(a,b)is invertible viaπz2to(a,b,c⁎)=(πz2)−1(a,b)∈E2wherec⁎=g(a,b)=g¯(h0,P,k1)=k2+γ. Therefore,(a,b,γ+k2)=L(h0,P,k1,k2)∈E2, and henceGi(a,b,γ+k2)=Gi(L(h0,P,k1,k2))=Dih0(P,k1,k2)=0fori=0,…,ℓ2.So,(k1,k2)∈Kh0.  □Summarizing, we have proved the next result.Theorem 3.5LetP=(α,β,γ), and leth0∈Rbe such that(i)Kh0R≠∅,the points inπz2(E2)∩Π(h0,P)are 1:1 invertible by the mapπz2:E2→πz2(E2).d(P,E2)⩽min{|k1|+|g¯(P,k1)−γ||D0h0(P,k1)=0},d(P,E2R)⩽min{|k1|+|g¯(P,k1)−γ||D0h0(P,k1)=0,k1∈R}.Let us give a geometric interpretation of Theorem 3.5; see Fig. 2. We do it for statement 1; similarly for statement 2. First, observe that the solutions ofD0h0(P,k1)=0provide the values of the parameterk1reaching the intersection points of the line, passing through(α,β)=πz1(P)in the direction ofπz(v(h0)), and the plane curveπz2(E2)⁎. Say that Q is one of these intersection points, then|k1|=d((α,β),Q)and|g¯(h0,P,k1)−γ|is the difference (in module) between the z-coordinate of P and z-coordinate of(πz2)−1(Q).Applying the previous theorem one has the following results.Corollary 3.6LetE1R,E2Rbe bounded curves satisfying our general assumptions, thenH(E1R,E2R)⩽H(πz1(E1R),πz2(E2R))+max{|c1,1−c2,1|,|c1,2−c2,2|}whereEiRis included in the box[ai,1,ai,2]×[bi,1,bi,2]×[ci,1,ci,2].Corollary 3.7LetE1R,E2Rsatisfy our general assumptions, and letEiRbe included in the planez=hithenH(E1R,E2R)⩽H(πz1(E1R),πz2(E1R))+|h1−h2|.As, a simple illustration, consider the circlesC1given by{x2+y2=r12,z=h1}andC2given by{x2+y2=r22,z=h2}. Then,H(E1R,E2R)=(r2−r1)2+(h2−h1)2while our bound would be|r2−r1|+|h2−h1|.In this section we derive a new technique to estimate the Hausdorff distance betweenE1R,E2Rby means of estimating the bound given by the results developed in Section 3. Of course, the methods described below, at some step, need to use numerical approximations, and hence they provide approximations of the bound. For this purpose, we take a sample of points P onE1Rand for each of them, we compute an upper bound ofd(P,E2R). Then, by taking the maximum of these bounds we estimatesupP∈E1Rd(P,E2R).In order to estimatesupP∈E1Rd(P,E2R), similarly forsupP∈E2Rd(P,E1R), we present the following bounding strategy.Bounding strategy1.Compute a finite subsetAof points inE1R.For eachP:=(α,β,γ)∈A, taken0∈N, setMPas the empty set, and execute the next steps:(a)DetermineB¯={−1+2nn0|n=1,…,n0}⊂[−1,1].Determine the subsetBofB¯of those valuesh0such thatg1(α+k1h02−1h02+1,β+k12h0h02+1)≠0.Recall thatG1=g1(x,y)z−g2(x,y); see Section 2. IfB=∅go to Step 2 and take a biggern0∈N.For eachh0∈Bcompute(4)D0h0(P,k1)=G0(α+k1h02−1h02+1,β+k12h0h02+1)Recall that the projected curve is defined byG0(x,y)and note that (4) is a polynomial equation ink1.Compute the setR=⋃h0∈BRh0whereRh0is the set of all real roots ofD0h0(P,k1). IfR=∅go to Step 2 and take a biggern0∈N.ComputeH={|k1|+|γ−g2(α+k1h02−1h02+1,β+k12h0h02+1)g1(α+k1h02−1h02+1,β+k12h0h02+1)|wherek1∈R}Appendmin(H)toMP.SetMas⋃P∈AMPand RETURNmax(M).Let us comment on the steps above. In Step 1, one has to compute pointsP=(α,β,γ)onE1R. IfE1Ris not rational, these points can be computed by intersecting the plane curve defined byF0with lines defined overQto get(α,β); then γ isγ=f2(α,β)/f1(α,β), recall thatF1=f1(x,y)z+f2(x,y)as in Section 2. IfE1is rational, then one can always take a proper rational parametrization, with coefficients inK(see Sendra et al., 2007), of the plane curve to afterwards give rational values to the parameter. Of course, the non-rational case would need approximation methods and the points would not be really onE1R, while in the rational case, the points would be on the curve. Step 2 is, theoretically speaking, based on Theorem 3.5. Beside that, the most remarkable fact is that the set{(h2−1h2+1,2hh2+1)withh∈[−1,1]}is the west-half part of the unit circle. Therefore, for a sufficiently big partitionB¯of[−1,1]the lines passing through P, in the directions defined by the taken vectors in the circle, must intersect the real curveπz1(E1R)⁎.Of course, a crucial remark is how many points P are taken in Step 1 and how large the numbern0of directions is chosen in Step 2. Although we do not present a theoretical analysis relating the cardinality of the sample (number of points P and number of directionsn0) with the accuracy of the method, in Section 5 we see that the time of performance is fast enough to allows us to execute the estimation with big samples of points and large values forn0. In the examples in Section 5 one can see that forn0⩾64andcard(A)⩾128the estimation does not suffer significant changes (excluding the last experiment in Example 5.3 where the estimation still does no stabilizes withcard(A)=3620). Similarly, one may consider different methodologies to choose the points P in Step 1, namely: evenly or randomly distributed. In Section 5, we consider both techniques to run the experiments and one can check that similar results on speed and accuracy are achieved with both methodologies. See Section 5 for further details.Alternatively to our bounding strategy, one may use direct techniques, as for instance, givenP∈E1Roptimizing the distance function from P toE2R; this, ifE2Ris rational (sayQ(t)is a real rational parametrization ofE2) can be done optimizing the univariate rational function‖P−Q(t)‖2and, ifE2Ris not rational, optimizing the rational function‖P−(x,y,z)‖2under the conditions{G0(x,y)=0,G1(x,y,z)=0}(note thatG0,G1determineE2Ras set-complete intersection). Nevertheless, using these strategies also requires at some point the numerical approximation of the solution of algebraic systems, and hence they also provide estimations. We would like to emphasize that the bounding strategy we present can be used with curves given in both parametric and implicit form.In the following section, we illustrate these comments.In this section, we illustrate and discuss our ideas by means of some examples. The goal of this section is to analyze in practice how fast (to compute) and how accurate are the bounds given in Theorem 3.5. For this purpose, we will compare our estimation to those provided by alternative strategies given by the optimization techniques commented at the end of Section 4. We do not intend to compare the bounding strategy developed in Section 4 with other existing methods, and we observe that the bounds in Theorem 3.5, more than an alternative method, are a way of exploiting further the existing techniques for analyzing the Hausdorff distance in the plane.More precisely, throughout three examples we show the computation times as well as the estimation of the Hausdorff distance provided by each strategy. In the examples we are given real space algebraic curvesE1R,E2Rsatisfying the general hypotheses in Section 2, and we estimatesupP∈E1Rd(P,E2R). To run the estimations we take samples of points deterministically and randomly as explained below. From now onDℓandRℓdenote samples of ℓ points taken deterministically and randomly respectively. We consider the following strategies•Strategy-1. In this strategy, we assume thatE2is rational and that a rational real parametrizationP2(t)ofE2is given. Then, the strategy consists in minimizing the function‖P−P2(t)‖2. We distinguish two different ways of implementing the strategy, one taking the sample of points P evenly and the other taking them randomly. We use the following notation:•Dstrat1(P)means the use of strategy-1 with a point P onE1Rchosen deterministically andDstrat1(ℓ):=max{Dstrat1(P)|P∈Dℓ}.Rstrat1(P)means the use of strategy-1 with a point P onE1Rchosen randomly andRstrat1(ℓ):=max{Rstrat1(P)|P∈Rℓ}.Strategy-2. This is our bounding strategy, explained in Section 4. Here, besides the number of points P one also has to choose (see Step 2 of the general strategy) a numbern0of directions. We distinguish two different ways of implementing the strategy, one taking the sample of points P evenly and the other taking them randomly. We use the following notation:•Dstrat2(P,n0)means the use of strategy-2 with a point P onE1Rchosen deterministically, and takingn0directions in Step 2. In additionDstrat2(ℓ,n0):=max{Dstrat2(P,n0)|P∈Dℓ}.Rstrat2(P,n0)means the use of strategy-2 with a point P onE1Rchosen randomly, and takingn0directions in Step 2. In additionRstrat2(ℓ,n0):=max{Rstrat2(P,n0)|P∈Rℓ}.Strategy-3. In this strategy, we do assume thatE2is not rational. Then, the strategy consists in minimizing the function‖P−(x,y,z)‖2, under the conditionsG0(x,y,z)=G1(x,y,z)=0. We distinguish two different ways of implementing the strategy, one taking the sample points P evenly and the other taking them randomly. We use the following notation:•Dstrat3(P)means the use of strategy-3 with a point P onE1Rchosen deterministically andDstrat3(ℓ):=max{Dstrat3(P)|P∈Dℓ}.Rstrat3(P)means the use of strategy-3 with a point P onE1Rchosen randomly andRstrat3(ℓ):=max{Rstrat3(P)|P∈Rℓ}.We observe that the same computations can be done for points Q inE2Rand estimatingd(Q,E1R). Of course, in this case, if strategy-1 is used thenE1has to be rational, and if strategy-3 is used the conditions areF0(x,y,z)=F1(x,y,z)=0. We show these additional computations in Example 5.2 and in Example 5.3, where one of the two curves is not rational. We use the notationsDstrati−1andRstrati−1meaning that strategy-i is used to estimated(Q,E1R)instead ofd(P,E2R).In Section 4 we have seen how to compute the pointsP∈E1Rdepending on whether the curve is rational or not. Now, we describe how we proceed when the points are taken deterministically or randomly.Deterministic sample (rational case): We take parameter values of the form(−2)jas well as parameter values of the formα+1(−2)jwhere α are the real poles (if any) of the rational functions in the parametrization. In this way, we study the parametrization when the real parameter tends to ±∞ and when the parameter tends to the poles, and hence the points on the curve tend to infinity. In this manner we obtain a sampleDℓof points over the curve, takingj=1,…,ℓ.Random sample (rational case): We take parameter values of the formabwhere a is a random integer in the interval[−ℓ,ℓ]and b is a random integer in[1,ℓ], withℓ=2k. Each sample has ℓ points and we allow ℓ to go to infinity. The parameter values are randomly distributed over the interval[−ℓ,ℓ]. When substituting t in the parametrization by those values, we obtain a sampleRℓof points over the curve, although we cannot control their distribution over the curve.Random sample (non-rational case): We intersect the plane curve determined byF0(x,y)with p linesx=aband p linesy=ab, where a is a random integer in the interval[−p,p]and b is a random integer in[1,p]. In this manner, a sampleRℓof ℓ points(α,β,f2(α,β)/f1(α,β))over the curveE1Ris obtained, withF0(α,β)=0(see comments that follow the Bounding Strategy in Section 4). Observe that we usually get a sampleRℓwith more than 2p points. Although the same notation is used for random samples obtained in parametric or implicit form, they will be distinguished from the context or it will be specified.As far as possible we will take random samples of points to let the estimation freely find estimations close to the true distance. We also give priority to samples taken using a parametrization, since these are exact points over the curve, while the ones taken from an implicit representation are subject to numeric approximations. As we will see in Examples 5.2 and 5.3, to obtain samples using the parametrization, one is forced to use the deterministic approach, to make sure that the points taken are distributed over the whole curve and not concentrated around one single point. For these reasons we did not see the need to consider deterministic samples in the non-rational case.Configuration of the hardware and software environments: computations were carried out with Maple 17; in the optimization strategy 1 and to implement strategy 2, the basic Maple command realroot has been used, to compute the real roots of the univariate polynomials; this command provides symbolically separating intervals for the real roots with the length fixed by the user, then the real roots are taken as the central point of the isolating intervals. In strategy 3, the Maple command LagrangeMultipliers has been used to optimize the appropriate multivariate function. Actual computing times, running on a PC Intel Core i5-2467M CPU, 1.60 GHz and 4 GB of RAM, are given in seconds of CPU.Example 5.1Let us consider the real curvesE1andE2on the same surface4x4+4x2y2+y4+3x3+2xy2−y2=0(see Fig. 3), defined respectively byF={F0=4x4+4x2y2+y4+3x3+2xy2−y2,F1=z},G={G0=4x4+4x2y2+y4+3x3+2xy2−y2,G1=z−1−x−y}.We may check easily that assumptions in Section 2 hold. On the other hand, both curves are rational and can be, respectively, parametrized byP1(t)=(t2−1t4+1,2tt4+1,0),P2(t)=(t2−1t4+1,2tt4+1,t2−1t4+1+2tt4+1+1).We are going to compute estimations ofsupP∈E1Rd(P,E2R)using strategy 2. Now, considering a sampleRℓofℓ=10points inE1Rtaken randomly using the parametrizationP1(t), we maken0vary and computeRstrat2(10,n0),n0=2k,k=1,…,10.Letτ(P,n0)be the time in seconds taken to computeRstrat2(P,n0). The results obtained are shown in Table 1, including one column withT(n0), the maximum ofτ(P,n0),P∈R10, and columns with the meanμ(n0)and standard deviationσ(n0)of these times.As observed in Table 1, the value ofRstrat2(10,n0)stabilizes aftern0=64. To show more details about the estimations with sampleR10, Table 2contains each point P inR10together withRstrat2(P,64)and its computation timeτ(P,n0).Next, we fixn0=26and make ℓ vary computingRstrat2(ℓ,64),ℓ=2k,k=1,…,10.Letτ(P,ℓ)be the time in seconds taken to computeRstrat2(P,64). The results obtained are shown in Table 3, including one column withT(ℓ), the maximum ofτ(P,ℓ),P∈Rℓ, and columns with the meanμ(ℓ)and standard deviationσ(ℓ)of these times.Thus the estimation ofsupP∈E1Rd(P,E2R)given by strategy 2 is 1.4429. Let us now use Corollary 3.6. Clearly the distance between the projected curves is 0, and the maximum of the differences between z-coordinates of points inE1RandE2Ris 2. Therefore, the bound given by the corollary is 2. We can give an estimation of the one sided Hausdorff distancesupP∈E1Rd(P,E2R)computed with strategy-1 because we have a parametric representation of the curveE2. For instance,Rstrat1(210)=1.2505and the maximum of the computation times at each point ofR10isT1(210)=0.452. As expectedRstrat1(210)=1.2505⩽Rstrat2(210,26)=1.4429⩽2.Example 5.2In this example we see that the results obtained using our bounding strategy are more accurate than the ones obtained with strategies 1 and 3, when the size of the sample increases. In addition, the computation times of our method are reasonable even for larger choices ofn0. We consider the real curvesE1andE2(see Fig. 4) defined, respectively, by the Gröbner basesF={F0=y3−yx−x3,F1=xz−y2,F2=zy−y−x2,F3=z2−z−yx}G={G0=−9−x+13y+3x2−yx−6y2−x3+y3,G1=−3−z−x+4y+xz−y2,G2=3+zy−2y+2x−2z−x2,G3=−yx+2x+y−3z+z2},deg(E1)=deg(E2)=3andE1∞=E2∞={(1:1:1:0)}∪{(λ:−1:−λ:0)|λ2+λ+1=0}.Therefore, the general assumptions in Section 2 are satisfied. On the other hand, both curves are rational and can be parametrized, respectively, byP1(t)=(tt3−1,t2t3−1,t3t3−1),P2(t)=(t+t3−1t3−1,t2+2t3−2t3−1,2t3−1t3−1).Now, let us consider deterministic samples of points inEjR,j=1,2D2ℓj={Pj((−2)i)|i=1,…,ℓ}∪{Pj(1+1(−2)i)|i=1,…,ℓ}to apply the three strategies explained above to estimateD(P,E2R), withP∈D2ℓ1andD(P,E1R), withP∈D2ℓ2. Observe that when the value of the parameter t tends to ±∞ thenP1(t)approaches the point(0,0,1). Thus, to see a bigger part of the curve, the parameter t has to approach the polet=1of the parametrizationP1(t). Similar comments apply toP2(t).We start fixingℓ=10and maken0vary to computeDstrat2(20,n0),n0=2k,k=1,…,10.Letτ(P,n0)be the time in seconds taken to computeDstrat2(P,n0),P∈D201. The results obtained are shown in Table 4, including one column withT(n0), the maximum ofτ(P,n0),P∈D201, and columns with the meanμ(n0)and standard deviationσ(n0)of these times.As observed in Table 4, the value ofDstrat2(20,n0)stabilizes aftern0=16. The estimation obtained with strategies 1 and 3 areDstrat1(20)=Dstrat3(20)=1.6447. To show more details about the estimations with sampleD201, Table 5contains each point P inD201together withDstrat1(P),Dstrat2(P,16),Dstrat3(P)and its computation timeτi(P),i=1,2,3.Next, we fixn0=16and make ℓ vary computingDstrat1(2ℓ),Dstrat2(2ℓ,16),Dstrat3(2ℓ),ℓ=2k,k=1,…,10.Letτi(P,ℓ)be the time in seconds taken to computeDstratiat point P,i=1,2,3. The results obtained are shown in Table 6, including one column withTi(ℓ), the maximum ofτi(P,ℓ),P∈D2ℓ1.Observe that forℓ=32,64, the answers given byDstrat1(2ℓ)andDstrat3(2ℓ)are not accurate, while our bounding strategy continues giving reasonable answers. The problem with strategies 1 and 3 is due to the parameter t approaching the poles of the parametrization. The estimation ofsupP∈E1Rd(P,E2R)provided by our bounding strategy is thus 2.1293.We would like to compare the results obtained with estimations using random samples of points. We checked experimentally that taking a random sample of points inE1Rwas not appropriate in this case. We gave random values to the parameter t in a given interval and then evaluatedP1(t). The experiments show that the points obtained are approaching the point(0,0,1), the limit when t goes to ±∞, ofP1(t). Thus, the sample of points is not distributed over the whole curve. That is why in this case it is more appropriate to consider a random sample of points in the curveE1Rtaken in implicit formRℓ. We checked thatn0=16is reasonable choice, since strategy 2 returns the same answer even with larger values forn0. We apply the three strategies to estimateD(P,E2R), withP∈Rℓ, we computeRstrat1(ℓ),Rstrat2(ℓ,16),Rstrat3(ℓ)for a sample of pointsRℓtaken in implicit form. Results are shown in Table 7together withTi(ℓ),i=1,2,3the maximum ofτi(P,ℓ),P∈Rℓ, the time taken to computeRstratiat point P.Strategy 3 was not computed forℓ=128because it was more time consuming and as observed it always gave the same answer than strategy 1.The estimation ofsupP∈E1Rd(P,E2R)provided by strategy 2 with random samples (see Table 7), taken in implicit form, is thus 2.1327, which is close to the estimation 2.1293 we obtained with deterministic samples taken in parametric form (see Table 6).We finish this experiments by using strategies 1, 2 and 3 to estimatesupP∈E2Rd(P,E1R), with samples of points taken deterministicallyD2ℓ2. The next table containsDstrat1−1(2ℓ),Dstrat2−1(2ℓ,32),Dstrat3−1(2ℓ),ℓ=2k,k=1,…,10.Letτi(P,ℓ)be the time in seconds taken to computeDstrati−1at point P,i=1,2,3. The results obtained are shown in Table 8, including one column withTi(ℓ), the maximum ofτi(P,ℓ),P∈D2ℓ2.A similar behavior is observed between the estimations ofsupP∈E1Rd(P,E2R)given in Table 6 and the estimations ofsupP∈E2Rd(P,E1R)given in Table 8, both from deterministic samples taken in parametric form. The estimation ofsupP∈E2Rd(P,E1R)provided by strategy 2 is 1.3509. Thus the estimation of the Hausdorff distanceH(E1R,E2R)is2.1293=max{2.1293,1.3509}or 2.1327 if we consider the estimation given by the random samples used in Table 7.Example 5.3LetE1be the real affine space curve (see Fig. 5) defined by the polynomials{−2y+y2−5yz+4z+4z2+1+x100,−y−3yz+4z+4z2+1+x2}.A Gröbner basis of the ideal ofE1w.r.t. the pure lexicographic order withz>x>yisF={F0,F1,F2,F3}withF0=10000x4+5000x2y2−5000y4−200x3+50xy2+5000y3+x2,F1=100y−x−100y2+200yz+100x2,F2=−2x−100y2+yx+200x2−4zx+100y3−300yx2+400x2z,F3=200+100y−3x+800z−300y2+800z2+500x2.This curve is not rational, it was introduced in Rueda et al. (2013), Example 2.2. Applying the approximate parametrization algorithm presented in Rueda et al. (2013) (Algorithm-2) to the curveE1, withϵ=1100we obtain a rational curveE2given by the parametrizationQ(t)=(p1(t)q(t),p2(t)q(t),p3(t)q(t)),wherep1(t)=−293471074175−1307617817t+520474296700t2+76180777617817t3+454214835t4,p2(t)=−248071074175t−657617817t2+611274296700t3+76180127617817t4+1307617817,p3(t)=1107418593400t3−2099698593400t−657617817t2+76181427617817,q(t)=−2−t2+t4=(t2−2)(t2+1).It was verified in Rueda et al. (2013), Example 2.2, Part 1 thatdeg(E1)=4and thatE1∞={(1:±2:±2:0),(1:±−1:±−1:0)}.By construction, the outputE2of Algorithm-2, in Rueda et al. (2013) verifies thatE1∞=E2∞anddeg(E1)=deg(E2). Therefore assumptions in Section 2 hold.To estimate the Hausdorff distanceH(E1R,E2R)we will first estimatesupP∈E2Rd(P,E1R)using strategies 2 and 3, with deterministic samples of points taken using the parametrizationQ(t). Observe that strategy 1 cannot be used for this estimation sinceE1Ris not rational and that strategy 3 is using the conditionsF0(x,y,z)=F1(x,y,z)=0. Next, to estimatesupP∈E1Rd(P,E2R)we will use strategies 1, 2 and 3 with random samples of points overE1Rtaken in implicit form. In this case strategy 3 is using the conditionsG0(x,y,z)=G1(x,y,z)=0but we do not include the Gröbner basisGdue to the large size of the coefficients of the obtained polynomials.[I. Estimation ofsupP∈E2Rd(P,E1R)]As t is approaching ±∞, the parametrizationQ(t)approaches(0.0021,1,0). Thus, to see a bigger part of the curveE2R, we need to take values of the parameter t close to the poles ofQ(t), the roots oft2−2. That is way a deterministic sample of points taken using the parametrization is more appropriate in this case. Let us consider the deterministic sample of points in the rational curveE2RD3ℓ={Q((−2)i)|i=1,…,ℓ}∪Dℓ1∪Dℓ2withDℓ1andDℓ2points coming from sequences of real numbers approaching the real poles of the parametrizationQ(t), constructed as follows. For the real pole2ofq(t)(real root oft2−2) we consider a finite sequence of isolating intervals{Ji}i=1,…,ℓof length1/2(i+5), and we take the middle pointξi. ThenDℓ1={Q(ξi)|i=1,…,ℓ}. Similarly for−2we obtainDℓ2={Q(ζi)|i=1,…,ℓ}.We apply strategies 2 and 3 to estimateD(P,E1R), withP∈D3ℓ. We start fixingℓ=10and maken0vary to computeDstrat2−1(30,n0),n0=2k,k=1,…,10.Letτ(P,n0)be the time in seconds taken to computeDstrat2−1(P,n0),P∈D30. The results obtained are shown in Table 9, including one column withT(n0), the maximum ofτ(P,n0),P∈D30, and columns with the meanμ(n0)and standard deviationσ(n0)of these times.As observed in Table 9, regardless of the value ofn0we obtain the same values forDstrat2−1(30,n0). Thus we can take alwaysn0=2, which is less time consuming. To show more details about the estimations with sampleD30, Table 10contains each point P inD30together withDstrat2−1(P,2),Dstrat3−1(P)and its computation timeτi(P),i=2,3.As observed in Table 10, the first 10 points approach the limit when t goes to ±∞ ofQ(t). The remaining 20 points are spread over the curveE2Rand correspond to values of the parameter approaching the poles of the parametrization. The estimation returned by strategy 3 is extremely large. Fig. 6shows the computation time comparison, with strategy 2 being much faster.Next, we fixn0=2and make ℓ vary computingDstrat2−1(3ℓ,2),Dstrat3−1(3ℓ),ℓ=2k,k=1,…,5.Letτi(P,ℓ)be the time in seconds taken to computeDstrati−1at point P,i=2,3. The results obtained are shown in Table 11, including one column withTi(ℓ), the maximum ofτi(P,ℓ),P∈D3ℓ.Observe that in all cases, the answer given byDstrat3−1(3ℓ)is extremely high, while our bounding strategy gives reasonable answers. The problem with strategy 3 in this example is due to the parameter t approaching the poles of the parametrization. The estimation ofsupP∈E2Rd(P,E1R)result of these experiments is given by strategy 2 and equals 0.0020.[II. Estimation ofsupP∈E1Rd(P,E2R)]We consider now a random sample of pointsRℓin the curveE1R, taken in implicit form as explained above, and we use it to apply the three strategies to estimateD(P,E2R), withP∈Rℓ. For this purpose, we repeat the previous experiments in this new situation. According to the explanation to take a random sample in the non-rational case, we fixp=4and get a random sampleRℓofℓ=16points. Letτ(P,n0)be the time in seconds taken to computeRstrat2(P,n0),P∈R16. The results obtained are shown in Table 12, including one column withT(n0), the maximum ofτ(P,n0),P∈R16, and columns with the meanμ(n0)and standard deviationσ(n0)of these times.SinceRstrat2(16,n0)has the same value regardless of the value ofn0, we taken0=2and make ℓ vary. Table 13shows the computation ofRstrat1(ℓ),Rstrat2(ℓ,2),Rstrat3(ℓ),ℓ=2k,k=1,…,10together withTi(ℓ),i=1,2,3, and the number of lines p taken to computeRℓ, as explained before Example 5.1.SinceRstrat3(ℓ)is more time consuming and it always returns the same values asRstrat1(ℓ), we stopped computing its value afterp=64. The estimations returned by all the strategies are of the same magnitude and in this occasion, strategy 2 is usually faster. Fig. 7shows the comparison of times.The estimation ofsupP∈E1Rd(P,E2R), result of these experiments, given by strategy 2 equals 0.0227. Thus the estimation ofH(E1R,E2R)given by strategy 2 is0.0227=max{0.0020,0.0227}.

@&#CONCLUSIONS@&#
