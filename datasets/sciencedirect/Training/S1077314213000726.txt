@&#MAIN-TITLE@&#
Recursive non-rigid structure from motion with online learned shape prior

@&#HIGHLIGHTS@&#
A novel approach is proposed for recursive non-rigid structure from motion.An adaptive algorithm is employed for online update of shape prior.Data storage requirements are reduced by removing original data once the shape model is recursively updated.The algorithm is able to handle the measurements with missing data.The method is not overly sensitive with respect to missing data, missing frames and measurement noise.

@&#KEYPHRASES@&#
Structure from Motion,Sequential approach,Non-rigid structure,Missing data,Online learning,

@&#ABSTRACT@&#
Most existing approaches in structure from motion for deformable objects focus on non-incremental solutions utilizing batch type algorithms. All data is collected before shape and motion reconstruction take place. This methodology is inherently unsuitable for applications that require real-time learning. Ideally the online system is capable of incrementally learning and building accurate shapes using current measurement data and past reconstructed shapes. Estimation of 3D structure and camera position is done online. To rely only on the measurements up until that moment is still a challenging problem.In this paper, a novel approach is proposed for recursive recovery of non-rigid structures from image sequences captured by a single camera. The main novelty in the proposed method is an adaptive algorithm for construction of shape constraints imposing stability on the online reconstructed shapes. The proposed, adaptively learned constraints have two aspects: constraints imposed on the basis shapes, the basic “building blocks” from which shapes are reconstructed; as well as constraints imposed on the mixing coefficients in the form of their probability distribution. Constraints are updated when the current model no longer adequately represents new shapes. This is achieved by means of Incremental Principal Component Analysis (IPCA). The proposed technique is also capable to handle missing data. Results are presented for motion capture based data of articulated face and simple human full-body movement.

@&#INTRODUCTION@&#
The Structure from Motion (SfM) problem is to jointly reconstruct 3D deformable shapes and estimate the corresponding camera external parameters from a set of images, assuming camera internal parameters to be unknown. This technique has become an active area of research in computer vision, with applications in many different domains including augmented reality, autonomous navigation and medical imaging.A direct solution for recovery of both the motion and structure of the object is the classical algorithm of point based SfM with factorization. Tomasi and Kanade [31] first proposed a factorization algorithm based on the Singular Value Decomposition (SVD), which was used for reconstruction of a rigid object under an orthographic camera model. In this, the algorithm factorizes the measurement matrix into shape and rotation matrices under a rank constraint. Since then techniques for rigid shape recovery via point based SfM have achieved maturity over the following decades [11,19,30]. Subsequent work has focused on the factorization approach applied to multiple rigid objects [15] and articulated rigid objects [33]. In contrast to rigid objects, in real environments many objects deform over time, e.g. human body due to movement [2,14], face due to articulation [4,35] and other objects of interest [10]. This makes the problem difficult to solve because the shape of the object is varying from frame to frame. Therefore research has expanded into the Non-Rigid Structure from Motion (NRSfM).Most factorization based SfM techniques begin with the assumption of an affine camera model approximating the real projection with either weak perspective or paraperspective viewing conditions. NRSfM with perspective camera can be seen as an extension of the classical reconstruction under orthographic projection. Perspective reconstruction has been successfully applied where the object model can be assumed rigid: Sturm and Triggs [27] described a non-iterative factorization method for uncalibrated cameras. Han and Kanade [15] proposed an alternative method using bilinear projective factorization algorithm; this iteratively improves the depth information, eliminating need for calculation of fundamental matrices. An investigation of different camera models is presented in [16]. Using the full perspective camera model can indeed help obtain a correct 3D reconstruction of the object, but too many unknown variables leads to an under constrained problem. However in some cases perspective projection model is unnecessary if the size of the object is relatively small compared to the distance between camera centre and the object.To extend rigid SfM into the case of recovering 3D non-rigid objects [1], the seminal work of Bregler et al. [4] first described a low rank shape model for varying shapes. They factorize the 2D data matrix into shape coefficients, a camera motion matrix and 3D basis shapes using SVD, a method similar to that proposed in [31]. Following this shape model, factorization for articulated NRSfM was proposed in [25], but small inaccuracies in the affine values obtained from the initial affine decomposition greatly affect the subsequent estimation process. Xiao et al. [35] proposed a closed-form solution and demonstrated an ambiguity in orthonormality constraints, that using only orthonormality constraints is insufficient to provide unique solutions to estimated structures. They employ the traditional orthonormality constraints, but also introduce additional constraints to further determine shape basis, however this method does not cope well with noisy data. To overcome this, iterative optimization methods based on bundle adjustment were introduced in [34] as a last step of reconstruction, in order to improve the quality of estimation. Recent approaches have focused on solving problems related to the inherently large number of degrees of freedom, which together with motion degeneracy (very limited camera motion during data acquisition) may eventually result in worthless reconstructions. As a time-varying object usually cannot arbitrarily deform, the object can be represented in either shape space [32] or trajectory space [14,12] in order to reduce the dimensionality of the problem.Prior knowledge, using learning techniques of shape and motion may eliminate the ambiguity and can be used to improve accuracy of shape and motion recovery. Additional constraints such as prior scene information [16,36] can be learned in advance. Bartoli et al. [3] introduced a coarse-to-fine low rank shape model. They ordered the basis shapes, starting from a mean shape and iteratively added deformation modes. Recently Zhou et al. [38] proposed a method operating in the presence of nonlinear motion and non-Gaussian distribution using Markov chain Monte Carlo technique which is applied to minimize the residuals of the estimated shapes. An alternative approach of bundle adjustment demonstrated by Del Bue introduces object shape prior information [5]. This optimization approach may improve performance for both non-rigid and articulated SfM, obtaining reliable 3D reconstructions when an appropriate initial value is provided. This method especially overcomes the problems caused by strong degeneracy within the input image sequence. But in practice, when only constrained by minimization of the 2D re-projection error and a single basis shape, the optimization often converges to a local minimum, due to large number of variables requiring a high quality initial guess.Although tremendous progress has been made on SfM for both rigid and deformable shapes, the main limitation of most extant works is that they only refer to off-line (batch method) computations. The downside of batch methods is that the reconstruction can only start once all measurement data has been collected. To extend batch mode to the case of online (recursive) operation, Morita and Kanade [21] first presented a sequential factorization method, by considering the feature positions as a vector time series and updating only the first three eigenvectors instead of computation of singular value decomposition. Subsequent research for sequential shape and motion recovery has been developed by Mouragnon et al. [22] who demonstrated a generic and incremental method by minimizing an angular error between rays. Similarly, for the work in [9] the authors added a smoothing penalty on the camera trajectory, updating the structure accordingly as new views are added. Solutions to execute SfM in real-time can be classified as filter-based framework [26,7] or keyframe-based [18] optimization and have proven to be successful. These methods give motivation for real-time implementations, which nevertheless, have so far only dealt with rigid objects or static environment. As yet a limited number of works have been published covering online deformable structure recovery. Most recently Paladini et al. [24] have made progress in this, proposing a rank-growing system which updates the current shape model when the 2D re-projection error exceeds an expected value. This technique makes online NRSfM more tractable, but whilst the higher number of degrees of freedom may lead to smaller re-projection error, this can result in unrealistic reconstructed shapes, unrepresentative of the true object. The method does not address the self-occlusion problem either, where measurements are assumed to be complete, which is rarely valid.In this paper, an incremental approach is proposed to recursively reconstruct 3D deformable structures, such as articulated face, from 2D video sequences taken by an orthographic camera. The first contribution is to present an alternative multi-part cost function by superposition of specific constraints, for both basis shapes and its coefficients within the state-of-the-art batch-processing scheme. The advantage of this approach is that the proposed prior knowledge reduces likelihood of a nonlinear optimization procedure converging to a local minimum. Furthermore, the final results are not strongly dependent on the initial estimate used in the optimization process, ensuring the system does not require complex initialisation.The key contribution of this paper is exploitation of a methodology bridging the gap between current batch mode NRSfM and online NRSfM, which respectively process image frames recursively. A new method is proposed to update the model with regards to prior probability of the shape coefficients; this is motivated by incremental principal component analysis [23]. With each successive frame the new algorithm updates the parameters in 3D shape space to firstly estimate the current shape and camera pose, but also with the purpose of efficiently avoiding unrealistic shapes that may have smaller 2D error. To the best of our knowledge, such incremental approach has never been applied in the context of non-rigid shape reconstruction with missing data.This paper is an updated and expanded version of papers [28,29] with additional step in the algorithm solving the missing data problem and more comprehensive experiments in results section. A significant difference between this paper and the previous papers is that the new algorithm can efficiently handle the case of missing data in both batch and sequential mode. Missing data is a common problem when dealing with real video sequences. If the input data is incomplete, we predict the 2D coordinates of these points only based on the current measurement and learned eigenshapes. The remainder of this paper is organized as follows: Section 3 gives a short review of existing non-rigid factorization frameworks, including a mathematical representation of deformable object formulated as a linear combination of a set of basis shapes and an adjustable set of configuration weights representing the shapes at each time instant. This section also provides description of the reconstruction problem. Section 4 introduces the proposed shape model including the method to estimate the weights’ probability density function, together with the nonlinear optimization. Construction of the proposed recursive NRSfM algorithm, including incremental PCA, is given in Section 5. Section 6 describes an extension of NRSfM for the missing data problem. Finally Section 7 presents results obtained for data acquired from 3D motion capture system. The section also includes performance comparison of the proposed methods and couple of state-of-the-art NRSfM techniques.Given a point in the world coordinate system, denoted as sn=[xn,yn,zn]Tand transformed into mth image coordinate system through rotationRmand translation tm, its orthographic projection xmnonto mth image, is given by:(1)xmn=umnvmn=Rm|tm·sn1=rm1rm2rm3txmrm4rm5rm6tym·xnynzn1Twhere xmnrepresents the nth 3D point snprojected onto mth image; the orthographic camera matrixRmonly encodes the first two rows of rotation matrix with rotation constraintRmRmT=I. It is shown in [31] that when xmnare given with respect to the origin at the centre of gravity calculated for all projected points in the mth frame, tm=0.Considering a set of monocular 2D video sequences, tracking P feature points in F video frames, the 2F×P observation matrix can be expressed as:(2)W=x11⋯x1P⋮xmn⋮xF1⋯xFP=R1⋮RFs1⋯sP=MSwhere M is a stack of motion (rotation) matrices representing camera orientation for each frame and S represents all 3D feature points on reconstructed objects concatenated into a single matrix.To reconstruct a rigid object or a static scene, factorization is a long-standing and well-known algorithm. Kanatani and Sugaya provided comprehensive descriptions and complete derivation of this technique [17]. Given its simplicity this is widely exploited in many applications and also frequently used as first step in an optimization procedure designed to reconstruct time-varying shape structure.The general idea is to factorize observation matrix W into two components M and S. Decomposition of W with a straightforward SVD based factorization leads to the affine approximationM^andS^of the real camera motion and shape represented by M and S respectively.(3)SVD(W)=U2F×3Σ3×3V3×PT=Mˆ2F×3Sˆ3×P=(MˆH)(H-1Sˆ)=MSIn order to recover correct rotation and shape, a unique linear transformation H can be found enforcing the orthonormality of the rotations inM^.When compared with the rigid model, a non-rigid object contains a larger number of unknown variables and can be seen as a problem of estimating individual 3D structure for each frame. A large number of degrees of freedom makes the shape recovery a complicated task. Assuming that all the points detected in the image are represented with respect to their centre of gravity, the dynamic structure under orthographic projection can be represented as:(4)x11⋯x1P⋮xmn⋮xF1⋯xFP=R10⋱0RF-S1-⋮-SF-=MSDescribing the deformation using F independent shapes Sm=[sm1,…,smP], with smnrepresenting coordinates of the nth 3D feature point in frame m may entail more unknown variables than constraints. However, it is clear that motion is not random, feature points are highly correlated in time and space. Therefore, an object is unlikely to undergo completely arbitrarily deformation over time. Using basis shapes and basis trajectories are two major approaches to determine structure defined on a lower dimensional subspace.Using a shape model to represent the non-rigid structure is one way of reducing dimensionality of the problem. A linear combination of K basis shapes, Bd, could be used to mathematically represent a morphable 3D model represented in each frame.(5)Sm=α1B1+α2B2+,⋯,+αKBK=∑d=1KαdBdwhere basis shapes Bdare unknown but fixed, whilst deformation coefficients (weights) αdare adjustable over time. Fig. 1illustrates an example of deformable model. As shown symbolically in the figure, first basis shape provides a greater contribution than any other basis shape.The whole shape matrix S can be rearranged as:(6)S=-S1-⋮-SF-=α11⋯α1K⋮αmn⋮αF1⋯αFK-B1-⋮-BK-To deal with the case of non-rigid shapes under orthographic camera model, a low rank shape model has proved to be successful representation. The advantage of this approach is that it can tackle the problem without any prior information about the object or the scene, or without multiple views and 3D input. The core of this method is to express the measurement matrix as a trilinear product of three matrices: pose, basis models and time varying coefficients. Such that:(7)W=α11R1⋯α1KR1⋮⋱⋮αF1RF⋯αFKRF-B1-⋮-BK-=MBwhere motion M is a 2F×3K matrix which contains rotations Rmwith weighting factors and basis shapes B has size 3K×P, the rank of W must be at most 3K in the absence of noise. According to the closed-form solution [35] substitutingGd=HdHdT, the constraints are written as:(8)Mˆ2m-1GdMˆ2m-1T-Mˆ2mGdMˆ2mT=0,m=1:FMˆ2m-1GdMˆ2mT=0,m=1:FHdcan be determined by using SVD or other decomposition algorithm, once Gdhas been obtained.The limitation of this approach is that the motion matrix is nonlinear. When an inaccurate set of basis shapes have been chosen, it may not be possible to remove the affine ambiguity.As mentioned in previous section, the results obtained without using any prior information about shape and/or trajectory are sensitive to the level of noise present in the data and the algorithm initialisation. The greater number of degrees of freedom may lead to smaller re-projection error, but result in unrealistic reconstructed shapes. Appropriate prior shape information can help to augment the accuracy of motion and shape recovery. The key idea in our method is to use a learned shape space model.Our method departs somewhat from the linear combination of weighted shape basis model presented in the preceding section. We propose to use standard Principal Component Analysis (PCA) to impose constraints on the basis shapes.Principal Component Analysis is an effective statistical technique for dimensionality reduction. In the last two decades, it has been employed in a wide range of applications across many areas of computer vision. In this application the idea is to represent each of the shapes in the training dataset in a low dimensional shape space that reduces the large number of observed variables into a small number of principal components. Suppose a training dataset has N shapes and the set of points in ith shape are represented by Xi. The mean shape,X¯, of all the training dataset is given by:X¯=1N∑i=1NXiand eigenshapes Eiand eigenvalues γiare obtained from the covariance matrix, defined asC=1N∑i=1N(Xi-X¯)(Xi-X¯)TwhereXiis theithshape given in the Lexicographic format. Any of the shapes from the training dataset can be then approximated by:(9)Xi≅X¯+γiE=X¯+γi1…γiKE1⋮EKK is the number of dimensions after reducing the dimensionality, γidescribes the contribution of ith eigenshape and is calculated using the inner product between EiandXi-X¯.Inspired by the idea of PCA and following the deformable shape representation described in Eq. (6), our proposed shape model is given by:(10)Sm=μB0+αm1⋯αmKB1⋮BKThere are K+1 basis shapes, B0 as the first basis shape is similar to mean shapeX¯computed from all the faces in the training datasets. Therefore μ is a scaling factor for first basis shape which controls the overall size of the shape. The rest of the basis shapes, B1 to BKare forced to be close to the corresponding eigenshapes. The basis shapes are only encouraged to be close to the mean shape and eigenshapes instead of being forced to exactly match.By stacking the shapes Smfor each time instant, then projecting them onto the 2D images using orthographic projection model, Eq. (10) can be re-written in compact matrix form:(11)W=μ1R1B0⋮μFRFB0+α11R1⋯α1KR1⋮⋱⋮αF1RF⋯αFKRFB1⋮BKGiven that deformation is not random, with prior knowledge it is possible to restrict the estimated deformation of the object; assuming it is known how the weighting coefficients αmdare distributed in K dimensional space. If the prior is not applied to constrain the weights, it may lead the reconstructed shapes representing unfeasible deformations.To further constraint the reconstructed shapes, a prior probability on the values of the weighting coefficients is added to the model. The Parzen window density estimation in the eigenspace was used for this purpose.(12)p(α)=1N∑i=1N1h2ϕγi-αhwhere N is the number of shapes used to estimate the probability density function, and ϕ(·) is a kernel function. For the isotropic Gaussian kernel function the estimate of the density function is given by:(13)p(α)=1N∑i=1N12πσexp-‖γi-α‖22σ2The dimensionality of this function is defined by the number of eigenshapes used in the approximation. As an example shape coefficients probability distribution for 2D face shape space is shown in Fig. 2.As the information about shapes and weights probability distribution is learned in advance, the optimization process comes down to minimizing a cost function built as a superposition of four components.The first component of the cost function measures the re-projection error between the feature points detected in the observed images and corresponding projection of 3D points in the estimated shapes. The re-projection error is given by:(14)εre=∑m=1F‖wm-w̃m‖2withw̃m=Rm∑d=0KαmdBdAssuming that the reconstructed object is viewed by an orthographic camera, rotation matrix Rmrepresents orthographic camera matrix. The second component of the cost function enforces orthonormality of all Rmand is expressed as:(15)εrot=∑m=1FRmRmT-I2The prior on the shape basis given in Eq. (16) is included as the third component of the cost function:(16)εbs=‖B0-X¯‖2+∑d=1K‖Bd-Ed‖2Given that the reconstructed object is not part of the training dataset, we are much more concerned about recovering the 3D shapes rather than having accurate basis shapes.Last but not least, following from the discussion in Section 4.2, the fourth component of the cost function introduces constraints on the weighting coefficients. We restrict the search for optimal weights within the high probability region of the learned weights probability distribution by maximizing p(αm).The overall proposed cost function combines minimization of the re-projection error with efficient constraints for rotation matrices, shape basis, as well as weighting coefficients:(17)minRm,Bd,αm(εreRm,Bd,αm+φ1εrot(Rm)+φ2εbs(Bd)-φ3p(αm))where scalars φ1, φ2, φ3 are the designed parameters controlling importance of each constraint in the cost function. A nonlinear optimization based on bundle adjustment using Levenberg–Marquardt algorithm was applied to minimize this compound cost function. The adopted method is efficient and is able to converge to the correct solution even in cases where the initial point is far from the expected minimum.Rather than initialize the data using the method described in Section 3.2, the initialization is obtained using the generalized SVD (GSVD) [5] followed by orthonormal decomposition [6]. An initial shape is given by a rigid shape which is computed from measured data and prior shape model. To initialize rotation and weights, orthonormal decomposition is applied to decompose the remaining factors in the observation matrix.For the recursive NRSfM, the shape is divided into off-line and online components:St=Stoff+Ston. The off-line part is mainly used to indicate the static overall shape and the online part is responsible for representing the dynamic shape changes. The method described in the preceding section was used to estimate the off-line shape Stoff with the prior information about shapes and weights probability distribution learned in advance using standard PCA technique on a training database of co-registered shapes. The online (dynamic) shape Ston is modelled in a similar way as the off-line shape:(18)Ston=βt1⋯βtMB̃1⋮B∼MAs for the off-line model, the online shapes are represented by a linear combination of basis shapesB∼iweighted by the shape coefficients βi. The main difference between Stoff and Ston is the way in which the shape and coefficient constraints are calculated. Whereas constraints for the off-line shapes are calculated using standard PCA, the constraints for the online shapes are learned recursively using the incremental PCA (IPCA) method. Although standard PCA is allowed to optimize reconstruction of the training data by projecting the input data onto its principal axes, it is not suitable for online learning. It requires all the data in advance. Once each new sample arrives the PCA is performed for both original and new data again. The main advantage of incremental version of the PCA is that it enables estimation of the shape space based on partial observations. As an additional benefit the original data can be removed once the eigenspace is updated, therefore reducing the data storage requirements.A summary of the algorithm for recursive NRSfM is given in Algorithm 1. Initial shapes are estimated from the first N frames (20 frames in the case of experiments described in Section 7), these shapes are obtained via a nonlinear optimization with shape constraints, through integration of the prior information in the cost function following the method described in Section 4. For each new frame a local bundle adjustment is used over all frames in a sliding window of length l to optimize parameters for shape coefficients and basis shapes in order to reconstruct the current shape. Our approach for model updating is inspired by the work of Neto and Ulrich [23]. They perform online novelty detection by comparing the magnitude of a residual vector which defines the error between reconstruction of a projection and its original data with a predefined threshold rT. The model is updated only if the value exceeds the threshold or the magnitude of the two residual vectors between two reconstructed shapes is relatively large which implies that the current model is unlikely to be able to recover the deformation in the subsequently arriving frame. When all data has been updated in this stage, a re-estimation for the current frame ensures the model better fits the observation.Algorithm 1Outline of recursive NRSfM algorithmInput:Stream of 2D correspondence points.Output:3D deformable shapes St and camera motion Rt for each frame.1:Build matrix Wt∣t=Nwhere W is a 2N×P matrix.2:Using method described in Section 4 estimate:{R1,⋯,RN}, {α1,⋯,αN}, andB=B0T,⋯,BKTT.3:CalculateStoff=αtB;αt=αt,0,⋯,αt,K; t=1,…,N.4:For t=N+1, initialize model to mean shapeS¯t-1, eigenvectors Ut−1, and projected vector At−1 estimated via batch PCA for Soff.5:loop6:Input new frame ftwith 2D correspondence points.7:Build local measurement matrixWt=wt-l+1T,⋯,wtTT8:Using Levenberg–Marquardt algorithm solve:βˆ,B∼^,R^=argminβ,B∼,R(ε)where ε is given by Eq. (21),βˆ=[βˆ1,⋯,βˆl]B̃ˆ=[B̃ˆ1T,⋯,B̃ˆMT]T.9:Compute current shape:St=Soff+βˆlB∼^and rotation:Rt=Rˆl.10:Compute the projection of Ston the shape space:a=Ut-1T(St-S¯t-1)11:Compute the residual vectorrt=St-Ut-1a+S¯t-112:r>rTorrt-rt-1>0.113:Update the shape space and the corresponding shape vectors as defined in the Incremental PCA.14:Re-estimate the current frame by nonlinear optimization with new eigenvectors UtStand Rt15:end if16:Update mean shapeS¯t=S¯t-1(t-1)/t+St/t17:go to next frame, t←t+1.18:end loopThe optimization during recursive computation is based on local bundle adjustment incorporating the proposed additional constraints. The online basis shapesB∼are forced to be close to learned eigenvectors U, which are updated in each iteration. The constraint imposed on the basis shapes is given by:(19)εbs=∑d=1M‖B∼d-Ud‖2According to Eq. (12), the prior probability of the on-line shape coefficients β can be written as:(20)p(β)=1T∑i=1T12πσexp-‖Ai-β‖22σ2where Aiis the ith shape vector. An example of the weight probability distribution for the first two weights is shown in Fig. 3.The cost function is built as:(21)ε=∑t=f-l+1fwt-Soff+Rt∑d=1MβtdB∼d2+φ1∑t=f-l+1fRtRtT-I2+φ2εbs-φ3p(βt)Minimizing ε by the same method applied in Eq. (17).The two algorithms proposed above assume that the measurement matrix W is complete, with all the feature points detected in all the images. This is unlikely to happen in practice as some of the feature points will not be detected in all the images. This could be because of the feature point detection problems or because some parts of the 3D object may not be visible from all the camera positions. This means some of the entries in the measurement matrix W may be unknown. This section describes a simple but efficient method for solving NRSfM with missing data by recovering the missing entries in measurement W before reconstruction of 3D shapes and camera motion.If the input data is incomplete, instead of using more complex and time-consuming optimization process to estimate the missing values [13,8], we predict the 2D coordinates of these points only based on the current measurement and learned eigenshapes. Assuming the total P feature points are to be reconstructed, we can writeI=Π¯m+Π¯m∗, whereIis an identity matrix andΠ¯mis a P×P diagonal matrix:(22)Π¯m(n,n)=0,ifthepointnismissinginmimage1,ifthepointnpresentsinmimageAccording to Eq. (7), measurement matrix can be factorised into motion M and shape basis B matrices. The incomplete measurements, which contains only detected points in m frame. can be represented as:(23)wˆm=wmΠmand the missing measurements as:(24)wˆm∗=wmΠm∗where matrix ΠmandΠm∗are obtained fromΠ¯mandΠ¯m∗by removing all columns for which entries are all zeros, wmrepresents row 2m−1 and 2m of the matrix W. Substituting Eq. (23) into Eq. (7), the incomplete measurement can be written as:wˆm=MmBΠm.We first compute the motion matrix Mmin terms of the visible points and its corresponding eigenshapes in m frame,Mm=wˆm(EΠm)†, where (EΠm)† represents Moore–Penrose pseudoinverse of EΠm, with eigenshapes E used as basis shapes. Once the motion Mmis obtained, the missing values can be calculated aswˆm∗=MmEΠm∗. Thus the completed measurement matrix is:(25)wm=wˆmΠmT+wˆm∗Πm∗TIn the case of batch processing, the eigenshapes E are learned during off-line training and the whole measurement W is calculated before doing further reconstructions. In sequential mode, missing values in each frame have to be estimated when the new frame arrives. Note that the eigenshapes have been updated using incremental PCA, the eigenshapes used for calculating the missing values should consist of off-line eigenvectors E and online learned eigenvectors U.

@&#CONCLUSIONS@&#
We have presented a new approach to solve the recursive NRSfM problem and have demonstrated the accuracy and robustness of our method on a series of challenging situations. Our method successfully recovers shape and camera motion parameters as new frames arrive; additionally it allows for updates to the model, thus accounting for new shape variations as objects deform over the sequence. We have also developed several extensions to the algorithm for deformable object recovery, which include use of learned shape model and distribution of the weights in the cost function, thus improving performance of the optimization process. We believe our method is a suitable groundwork for later exploitation in real-time applications.However, the current approach relies on a linear subspace model to represent the deformations of the object of interest. This approach is applicable to a relatively simple non-rigid object, especially when the reconstructed object is based on only a small number of basis shapes. To address this deficiency, we are currently working on shapes constrained to a smooth manifold representing learned nonlinear shape variability. The planned approach should be more accurate and well-adapted to large deformation models which cannot be accurately represented by a linear subspace.