@&#MAIN-TITLE@&#
Efficient global penetration depth computation for articulated models

@&#HIGHLIGHTS@&#
Novelty: The first global PD approach for high-DOF articulated models.Generality: Handling hybrid joints and links represented using polygonal models.Conservativeness: Guaranteeing that the configuration realizing PD is penetration free.Efficiency: Taking about 0.03–3 ms per runtime PD query in our experiments.

@&#KEYPHRASES@&#
Configuration space,Articulated models,Penetration depth,Support vector machine,

@&#ABSTRACT@&#
We present an algorithm for computing the global penetration depth between an articulated model and an obstacle or between the distinctive links of an articulated model. In so doing, we use a formulation of penetration depth derived in configuration space. We first compute an approximation of the boundary of the obstacle regions using a support vector machine in a learning stage. Then, we employ a nearest neighbor search to perform a runtime query for penetration depth. The computational complexity of the runtime query depends on the number of support vectors, and its computational time varies from 0.03 to 3 milliseconds in our benchmarks. We can guarantee that the configuration realizing the penetration depth is penetration free, and the algorithm can handle general articulated models. We tested our algorithm in robot motion planning and grasping simulations using many high degree of freedom (DOF) articulated models. Our algorithm is the first to efficiently compute global penetration depth for high-DOF articulated models.

@&#INTRODUCTION@&#
Computing the magnitude of inter-penetration between two overlapping rigid/articulated objects is a fundamental problem in computational geometry. One metric that is widely used to measure the extent of inter-penetration is penetration depth (PD), which requires computing a minimum transformation (translation and rotation) to separate two overlapping objects. The resulting transformation motion can be used to compute the contact force for penalty-based methods, valid poses in grasping simulations, force/torque feedback in haptic rendering, sample generation in narrow passages for motion planning, etc.The exact computation for PD, particularly the so-called generalized PD that involves both translation and rotation  [1], can be reduced to arrangement computation in a high-dimensional configuration space that has high computational complexity. For instance, the combinatorial complexity of exact PD is as high asO(n12)[2] for two models withntriangles in three-dimensional space. As a result, all practical algorithms tend to compute an approximate solution. A wide variety of algorithms have been proposed in the literature for rigid models (e.g.  [3,4,2,5–8]). For articulated models, the resulting configuration spaces are high-dimensional non-Euclidean spaces. For instance, the configuration space for a stationary obstacle and a six degrees of freedom (DOFs) robot arm fixed on the ground, is a six-dimensional non-Euclidean space. If we allow the arm base to move in space, its configuration space becomes nine-dimensional and non-Euclidean. As the number of joints increases, the complexity of a configuration space can become very high. In particular, if self-collisions between distinctive links must be considered, the complexity can increase rapidly. These self-collisions may correspond to many small and isolated components in the high-dimensional configuration space. Due to its high complexity, it is challenging to produce an exact representation of a space with such high dimensionality. To the best of our knowledge, only one recent study  [9] has attempted to compute PD between articulated models, but its solution yielded only locally optimal PD.Main result: We present an efficient algorithm to approximate the global PD in high-dimensional spaces for articulated models. Built on the early framework proposed in  [8,10], we use a machine learning method to approximate the boundary of the obstacle regions in the configuration space for an articulated model and its surrounding obstacles. We generate a set of configuration samples to densely cover the boundary of obstacle regions. Given a query configuration for computing PD, the closest configuration can be found quickly using approximatek-nearest-neighbor search. The magnitude of PD can be computed using non-Euclidean distance metrics between the query configuration and the closest configuration. Compared with existing methods, our method has the following advantages:Novelty: Our algorithm is the first global PD approach for high-DOF articulated models.Generality: Our algorithm can handle hybrid joints and links represented using polygonal models.Conservativeness: Our algorithm can guarantee that the configuration realizing PD is penetration free. This feature is particularly important for enforcing non-penetration constraints in certain applications, such as dynamic simulation, motion planning, and grasping simulation.Efficiency: Our algorithm takes about 0.03–3 ms per runtime PD query on single core. The computational complexity of runtime query depends only on the number of support vectors used in learned obstacle regions.The rest of the paper is organized as follows. In Section  2, we provide a review of the related work on PD computation. In Section  3, we introduce the notation that we use in the paper and present the algorithm for approximating obstacle regions for articulated models. In Section  4, we describe our approach to compute PD by using approximate obstacle regions and a solution for computing conservative PD. Section  5 describes the implementation details and some basic experimental results. Section  6 highlights the results on complex scenarios.

@&#CONCLUSIONS@&#
