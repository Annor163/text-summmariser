@&#MAIN-TITLE@&#


@&#HIGHLIGHTS@&#
We propose an orientation estimation method based on edgels and M-estimation.Edgels are extracted with a grid mask that can compromise between speed and accuracy.Any camera model can be used, and errors are calculated on the original image space.The estimation starts with a random search and ends with a continuous optimization.The method uses quaternions, and all derivative calculations use closed formulas.

@&#KEYPHRASES@&#
Grid mask,Edgels,Orientation estimation,Omnidirectional vision,Monocular vision,Quaternions,

@&#ABSTRACT@&#
The estimation of camera orientation from image lines using the anthropic environment restriction is a well-known problem, but traditional methods to solve it depend on line extraction, a relatively complex procedure that is also incompatible with distorted images. We propose Corisco, a monocular orientation estimation method based on edgels instead of lines. Edgels are points sampled from image edges with their tangential directions, extracted in Corisco using a grid mask. The estimation aligns the measured edgel directions with the predicted directions calculated from the orientation, using a known camera model. Corisco uses the M-estimation technique to define an objective function that is optimized by two algorithms in sequence: RANSAC, which gives robustness and flexibility to Corisco, and FilterSQP, which performs a continuous optimization to refine the initial estimate, using closed formulas for the function derivatives. Corisco is the first edgel-based method able to analyze images with any camera model, and it also allows for a compromise between speed and accuracy, so that its performance can be tuned according to the application requirements. Our experiments demonstrate the effectiveness of Corisco with various camera models, and its performance surpasses similar edgel-based methods. The accuracy displayed a mean error below 2° for execution times above 8s in a conventional computer, and above 3° for less than 2s.

@&#INTRODUCTION@&#
This article describes Corisco, a monocular orientation estimation method. It explores the restriction of an anthropic environment, also called a Manhattan world, which means the environment must contain lines that are parallel to the axes of a natural reference frame, defined by three mutually orthogonal directions. The orientation estimated by Corisco is the three-dimensional rotation between this natural reference frame and the camera reference frame. This method can be used inside larger multiple-view systems for environment reconstruction and camera tracking [1,2], to provide initial estimates from individual images while also enforcing the anthropic environment restriction. Corisco can also be used in lightweight mobile and portable applications, for example, providing a heading reading for a mobile robot to drive along a corridor or street, thus dismissing a simultaneous position estimation or environment reconstruction.The problem of estimating orientation from the lines of a single image using the anthropic environment restriction is well known [3–7], but the dependence of the traditional methods on the extraction of lines from the images creates a number of limitations. Line extraction cannot be applied to images obtained with a camera model other than perspective projection, because in that case the environment lines are projected into curves on the images. Line extraction also constitutes a relatively difficult problem to be solved, involving the estimation of the parameters of an unknown number of entities, while orientation estimation by itself depends only on the estimation of the few parameters that model a three-dimensional rotation. It is possible to deal with image distortions by fitting curves to the image [8–10], but this only solves the problem of analyzing distorted images while further increasing the difficulty of the extraction of those geometrical entities.These limitations can be overcome by using edgels as the fundamental geometrical entity of the analysis. Edgels are points that are part of an image edge, either straight or curved, associated to the information of the tangential direction of the edge at that point. Edgels are easier to handle and more flexible than lines, and their use does not require the estimation of multiple intermediary numeric parameters. Edgels are closely related to the image gradient, and their extraction is based on edge detection techniques. Edgel-based orientation estimation methods [11–16] work by minimizing the angular errors between the measured directions of the extracted edgels and the directions predicted as a function of the orientation parameters. The method proposed here, Corisco, follows this same principle, but introduces many improvements.The objective of this research is to explore the potential of the edgel-based analysis to overcome the limitations of line-based approaches, thus creating a method that offers a good performance while being more simple, flexible, and robust. The main contributions of our research are in the following features, which make Corisco attractive for practical implementations:•Corisco directly analyzes images created with any camera model, including radial distortions and omnidirectional models.Corisco allows for a compromise between speed and accuracy, so its performance can be tuned according to the application requirements.Corisco does not depend on strong restrictions of the solution, such as that the orientation should be approximately upright.Corisco uses a direct implementation of a constrained non-linear continuous optimization algorithm, with simple expressions for the objective function and its derivatives.The possibility of working with different camera models using edgels was recognized in the past [14] but, to our knowledge, no previous research has effectively demonstrated this. Edgels have been used to estimate the radial distortion coefficient of a camera model, however using the plumb-line constraint. That research by Rosten [17] demonstrates the advantages of edgel-based techniques to deal with image distortions. Corisco differs from that proposal by estimating orientation and also working on the original space of the acquired image, which is more desirable because it usually improves the estimation accuracy [18], and also avoids the limitations of the perspective projection.Fig. 1illustrates the application of Corisco to estimate the orientation of an input image. Other necessary inputs are the parameters of the camera model, such as the focal length and projection center in the case of the perspective projection, and a few control parameters for the Corisco process. The output is the camera orientation relative to the natural reference frame, given by a set of parameters Ψ that model a three-dimensional rotation. Corisco works with quaternions, therefore the Ψ returned is a vector of four values restricted to |Ψ|=1. These values can be used to calculate a three-dimensional rotation matrix if necessary. The bottom left part of Fig. 1 displays the edgels extracted from the input image. These geometrical entities are obtained in the first analysis stage, and the input image is not used again after that. The bottom right part of Fig. 1 displays the input image overlaid with a set of triplets of line segments. These line segments indicate the three possible edgel directions predicted at each different point from the correct orientation, also using the camera model parameters. The estimation procedure seeks an orientation that causes the predicted directions to be aligned to the edgels.Section 2 reviews existing edgel-based orientation estimation methods, and discusses the estimation techniques on which they are based. Section 3 describes Corisco. Section 4 discusses the experiments conducted with Corisco, and Section 5 contains conclusions about the research and some ideas for future developments.This section reviews existing methods for edgel-based orientation estimation [12–16]. All of these methods, including Corisco, share a common process structure with the following processing blocks:•Data extraction and sub-sampling — This is the first analysis stage where a number of geometrical features are extracted from the image. The resulting dataset is the input to the second stage of the process, where the actual estimation is performed by an optimization procedure. This data is often sub-sampled in order to accelerate the process.Objective function calculation procedure — This is a procedure that depends on the extracted data, and also receives as argument the parameters of a hypothetical orientation. The output is the value of an objective function. During estimation, this calculation is performed many times for different orientation parameters.Optimization procedure — The optimization procedure constitutes the second processing stage. It interacts with the previous procedure, feeding hypothetical orientations and seeking to optimize its output value.The following subsections discuss each of these blocks, but before such discussion, some definitions are necessary.An edge is an entity with length but no width, such as a straight line or a curve. An edgel is a point sampled from an edge, associated with the tangential direction of the edge at that point. Edge detection is the binary classification of an image point as being part of an edge or not. The recognized points are called edge points. Edge detection should not be confused with edge extraction, which is usually based on an edge detection followed by an algorithm such as flood-fill [6,7,10,2], RANSAC [9,1,19], J-linkage [20], RUDR [21] or variations of the Hough transform [22,23]. These algorithms fit geometrical models to clustered edge points.Some authors use the name edgel for what we call edge points, but in the present article an edgel requires an associated direction. It is very easy to create an edgel extraction procedure based on an underlying edge detection. It should be noticed that none of the alternative edgel-based orientation estimation methods referred here used the term edgel to describe their observations; therefore, our discussion involves some reinterpretation of them.One example of edgel extraction that is not directly based on edge detection is the procedure employed by Eade and Drummond [24]. These authors use the term edgel in their article, but they call edgelet the geometrical entity that is being tracked in space. We do not make this distinction, and we simply call edgel any point with associated direction, even in three-dimensions.All edgel-based orientation estimation methods start with calculating the image gradient. The edgels in early methods [12–14] were directly obtained from the gradient at the locations of the image pixels. The method proposed by Coughlan and Yuille [11,12] did not employ any kind of sub-sampling, but later authors [13,14] used a random sub-sampling of the pixels in order to reduce the volume of data, and also to smooth the objective function. Schindler and Dellaert [14] also used a thresholding based on the magnitude of the gradient, in a first attempt to apply edge detection to this problem.Dennis et al. [15] applied edge detection using the relatively sophisticated method of Elder and Zucker [25], but no further sub-sampling was performed. A subpixel refinement of the location of the edge points was also employed in that method. This actually no longer constitutes just detection, but an extraction procedure that takes in consideration the position of the detected point and the local direction of the gradient.Werneck and Costa [16] introduced the sub-sampling by grid masking, but did not employ edge detection. Grid masking is deterministic, and similar to the tiling used by Deutscher et al. [13], resulting in a more homogeneous sampling than random techniques. Tiling is also employed by Eade and Drummond [24]. One important difference between grid masking and the procedure from Eade and Drummond [24] is that in that case edges may be ignored when they are located near the corners of a tile, so grid masking results in a more regular and reliable sampling.The sub-sampling by image lines and columns resulting from grid masking is more natural than just selecting random image pixels because edges have no area and, therefore, have a peculiar relationship with the image resolution. The fraction of image pixels that are edge points increases with the inverse of the resolution, and the grid mask deals directly with this phenomenon. This form of sub-sampling can also be easily integrated with edge detection, as adopted in Corisco and described in Section 3.All the previously proposed methods [12–16] are based on probabilistic techniques for parameter estimation. That means that an observation model must be defined, starting with the definition of probability density functions (PDF) for the observed quantities. The estimation is carried out by the optimization of an objective function that is defined from these individual functions, usually by defining a likelihood function for the set of observations. One important point in this problem is that the observations can be produced by lines in each of the three possible directions in the environment, defining three different classes. Because the classes of observations are not known, it is necessary to use an estimation technique such as the maximum a posteriori (MAP) [12,13] or the Expectation-Maximization (EM) [14,15].In most of the previous methods the observed quantities were both the magnitude |g| and direction ∠g of the image gradient at a set of points over the image. Early proposals [12,13] followed the idea that the edge detection should be integrated with the estimation process, as reflected in their objective functions. In more recent proposals [14,15] the analysis of |g| started sooner and separately, and the objective function became more clearly dependent on ∠g only.Different distributions have been used in these methods to model the observation of the gradient or edgel directions, including the boxcar function [12], triangular [13,16], Gaussian [14] and generalized Laplacian [15]. In the case of the Gaussian distribution with the EM technique proposed by Schindler and Dellaert [14], the resulting objective function was(1)FΨ=∑nNcnx∠gn−hxpnΨ2+cny∠gn−hypnΨ2+cnz∠gn−hzpnΨ2.the hkfunctions calculate the predicted direction of an edgel from class k at position pnfor the orientation Ψ. The cnkcoefficients are the probabilities of each observation belonging to class k=x, y or z. They are calculated in each E-step of the estimation procedure, also taking into account the probabilities of the observation not being an edge, and of being a non-aligned edge — these re-calculations of cnkfrom the EM technique make the process a little more complex than the outline at the beginning of this section. In Eq. (1) the use of the Gaussian model and the application of the logarithm function and the Jensen inequality result in an expression that is a simple weighted sum of squared differences. In the proposal of Denis et al. [15] the different PDF does not result in such a simple error function, and their calculation of the cnkcoefficients is also different because all the observations are assumed to be edge points.The optimization method employed by Coughlan and Yuille [11,12] was a simple and unsophisticated sweep through the parameter space. The orientation was parameterized using Euler angles, and the search was performed initially around the vertical axis, assuming an approximately upright camera. To speed the process up, a coarse-to-fine strategy was also employed. Deutscher et al. [13], on the other hand, employed stochastic search. The focal length was also estimated by that method, exploring the flexibility of this optimization technique.Schindler and Dellaert [14] employed a continuous optimization algorithm, the Levenberg–Marquardt algorithm, exploring their quadratic objective function. For the first derivatives these authors employed automatic differentiation. In the case of Denis et al. [15] the objective function was not quadratic, so the more general BFGS optimization algorithm was employed, with numeric differentiation for the derivatives.The latter two methods also rely on an initial brute force sweeping [12]. After the initial trials are tested the best hypotheses are refined by continuous optimization, and the best result selected. Schindler and Dellaert [14] note explicitly that their optimization presented great sensitivity to the initial estimates, and that a better and more general initialization procedure would be desirable. The method proposed by Werneck and Costa [16] also employs multiple initializations, and is based on the Powell optimization algorithm.

@&#CONCLUSIONS@&#
This article presented Corisco, an edgel-based orientation estimation method that extended previous works [12–16], and was also influenced by other edgel-based vision approaches [17,24]. Corisco starts with an edgel extraction procedure based on edge detection and a grid mask. The estimation happens by a minimization of an error function, defined using M-estimation, comparing the measured direction from the edgels to predicted directions calculated with a camera model. The proposed optimization process starts with the flexible and robust RANSAC algorithm, and finishes with a more accurate continuous optimization performed by FilterSQP. The objective function proposed is relatively simple, and allows for closed formulas for its derivatives in FilterSQP. The grid mask spacing Cgand the number of RANSAC iterations Crare two control parameters that can be used to regulate the compromise between speed and accuracy.Corisco managed to create a method that is simpler, more flexible and more robust than the alternatives. The experiments, conducted with a variety of camera models and reference orientation sources, also demonstrated its accuracy, flexibility and competitive performance. The experiments also validated the proposed mechanisms to compromise between speed and accuracy. In some cases a speedup of 10 times was achieved while causing little accuracy loss. Because Corisco has excellent performance, works with any camera model and allows tuning the process to achieve better performances, it encourages wider use of edgel-based orientation estimation techniques.This research also illustrates the benefits from investigating techniques such as M-estimation and non-linear optimization algorithms such as FilterSQP. We agree with Meer [40] in that investigating these techniques is important to the development of Computer Vision.Despite the good performance that Corisco achieves, it might prove interesting to investigate further enhancements of its optimization procedure, starting by replacing the proposed RANSAC implementation with alternative algorithms [33,21,41,20]. It should be particularly interesting to consider techniques that were successfully applied in line-based orientation estimation methods, such as J-linkage employed in the alternative method prominently featured in this article [7], and which exhibited a better execution time than the proposed method in one of the experiments. Another alternative is to employ recently proposed techniques such as the branch-and-bound procedure by Bazin et al. [42], or the Facility Location Problem techniques by Antunes and Barreto [43].It is also possible to investigate the application of other Robust Statistics techniques [31] and other error functions to this problem, replacing the choice of M-estimation and the Tukey bisquare function. And finally, it might be interesting to investigate alternative ways to extract the edgels [44,45,24] and to calculate the residues [46]. The interplay of the grid-masking procedure with image smoothing and down-scaling should also be better studied.One interesting way to extend Corisco might be to cluster the edgels into straight lines or curves, performing a line extraction along with the orientation estimation, possibly creating a feedback process similar to the one proposed by Ji and Fermüller [47]. The existence of estimation biases such as discussed in that article should also be studied.There are two immediate applications for Corisco under study right now. The first is to use it as a visual compass with data fusion techniques to enhance the localization of a robot estimated from odometry data. The other is to perform a preliminary orientation estimation with environment reconstruction systems [1,2,48]. Corisco can also be adapted to analyze plane normals extracted from 3D point clouds obtained by sensors such as laser rangers or structured light rigs.