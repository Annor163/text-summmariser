@&#MAIN-TITLE@&#
IntoNews: Online news retrieval using closed captions

@&#HIGHLIGHTS@&#
IntoNews is an Intonow app for matching web news with news broadcasted on TV.We present a framework that models the task as 2 separate sub-tasks: Find & retrieve.We design and publicly provide an evaluation testbed for the IntoNews problem.Quality evaluation has to trade-off 2 competing metrics: coverage and precision.

@&#KEYPHRASES@&#
Second screen,News retrieval,Continuous retrieval,IntoNow,IntoNews,

@&#ABSTRACT@&#
We present IntoNews, a system to match online news articles with spoken news from a television newscasts represented by closed captions. We formalize the news matching problem as two independent tasks: closed captions segmentation and news retrieval. The system segments closed captions by using a windowing scheme: sliding or tumbling window. Next, it uses each segment to build a query by extracting representative terms. The query is used to retrieve previously indexed news articles from a search engine. To detect when a new article should be surfaced, the system compares the set of retrieved articles with the previously retrieved one. The intuition is that if the difference between these sets is large enough, it is likely that the topic of the newscast currently on air has changed and a new article should be displayed to the user. In order to evaluate IntoNews, we build a test collection using data coming from a second screen application and a major online news aggregator. The dataset is manually segmented and annotated by expert assessors, and used as our ground truth. It is freely available for download through the Webscope program.1http://webscope.sandbox.yahoo.com.1Our evaluation is based on a set of novel time-relevance metrics that take into account three different aspects of the problem at hand: precision, timeliness and coverage. We compare our algorithms against the best method previously proposed in literature for this problem. Experiments show the trade-offs involved among precision, timeliness and coverage of the airing news. Our best method is four times more accurate than the baseline.

@&#INTRODUCTION@&#
Television has been the most important communication medium of the last century. However, in the last few years the Web has started to take over this role thanks to a wider offer of content and the possibility of interaction. Recently, a new breed of applications for mobiles and tablets has started appearing on the market, offering the so-called “second screen” experience. The goal of these applications is to enhance the TV-watching experience by providing additional content related to the program airing at the moment, thus bridging the TV and Web worlds. By allowing the audience to interact with the program on TV, second screen applications ultimately aim at increasing user engagement. These applications are the natural evolution of a widely recognized trend: between 75% and 85% of TV viewers use another device at the same time.2http://www.guardian.co.uk/technology/appsblog/2012/oct/29/social-tv-second-screen-research.2Second screen3http://www.intonow.com.3from Yahoo!is an example of a second screen application, and the focus of the current work. When second screen launched in 2011, users immediately acclaimed this application as a fun way of watching TV programs. The user experience for people watching TV program is greatly improved. For instance, while watching a football game on TV it can show statistics about the teams playing, or show the title of the song performed by a contestant in a talent show. Other services include forums, episode synopsis, real-time meme generator (CapIt), polls and much more. second screen aims at enhancing the experience of watching TV transforming it into a “large scale” social activity. The additional content provided by second screen is a mix of editorially curated and automatically selected one.From a research perspective, one of the most interesting and challenging use cases for these applications is related to news programs (newscasts). When a user is watching a newscast, they might want to delve deeper into the news airing at the moment. This work presents IntoNews, a system that finds an online news article that matches the piece of news discussed in the newscast currently airing on TV, and displays it to the user in real-time.The main problem underlying IntoNews is matching different data sources that speak about the same piece of news. On one side we have the text from online news articles. On the other, we obtain the content of the newscast currently airing from the streams of Closed Captions (cc) broadcasted along with it by television networks.The challenges in making IntoNews effective are multiple. The news article we surface to the user must match exactly the news currently airing. The problem is even more challenging given that the matching article has to be selected among the thousands published online every day. The language used on TV and in news articles has different characteristics. Furthermore, the cc tend to be noisy, lack proper capitalization and contain many typos and misspellings. Finally, and most importantly, news articles must be surfaced as soon as possible to be valuable to the user.We propose a solution based on techniques from the realm of information retrieval (IR). Fig. 1shows the conceptual schema of the components of our system and how they interact with each others. We decompose the main news matching task into two sub-tasks: find a good segmentation of the stream of cc, and retrieve relevant news for the segment as soon as possible. We model a newscast as a series of contiguous segments, each matching a single cohesive topic. The segmentation problem consists in finding the boundaries of these news segments in the stream of cc. The retrieval problem consists in formulating a query given a segment, and issuing the query to an underlying IR engine.While the user is watching the newscast, the system continuously processes the cc and tries to detect a segment boundary (“new story”). If a new segment is detected, it examines the incoming text until it has enough information to retrieve the news article from the IR engine. When enough information has been accumulated, the system submits the query to the IR engine, retrieves the results, and shows them to the user.There are differences between this problem and those faced by traditional IR systems. Users of a typical IR system issue queries to retrieve a set of top-k most relevant items from a collection. We can identify three distinct phases in a typical IR process: (i) the user formulating the query and issuing it, (ii) the IR system processing the query and retrieving the top-k items, and (iii) the user checking a subset of the resulting items to satisfy their information need.IntoNews differs in phases (i) and (iii). First, it does not require the user to formulate a query, rather the system “implicitly” formulates one for the user by using the content of the newscast airing on TV. In fact, formulating a query by observing only a continuous stream of text without any indication on topic boundaries, query keywords, important concepts or entities is a challenging task, which is fundamentally different from typical IR tasks.Second, the user sees a small number of results that are continuously changing as new cc arrive. Usually, IR quality assessment only evaluates the amount of relevant documents ranked at the top of the result list. However, IntoNews has to account for when a news item is displayed, as the system should surface a matching item before the newscast has changed topic. Therefore, we evaluate the quality of the system in terms of both relevance and timeliness.Given that in our setting timeliness directly impacts the relevance of results, we need to design a proper evaluation testbed. We build a ground truth dataset consisting of a day’s worth of cc from a news channel. We manually segment the dataset, associate each segment with a set of news items, and annotate the segments with relevance judgements. Furthermore, we propose a family of time-dependent metrics that evaluate the effectiveness of retrieval with respect to timeliness. These metrics discount the value of a relevant result with time, i.e., the sooner the more relevant. We experiment with four instances of the metric that use different decay factors.To the best of our knowledge the only attempt made so far to address the problem presented in this work is discussed by Henzinger, Chang, Milch, and Brin (2003) and it is summarized in Section 2. The best solution of Henzinger et al. is our baseline which we compare to in Section 6.Preliminary results of this work were previously presented by the same authors (Blanco, De Francisci Morales, & Silvestri, 2013). In this paper we provide a proper formalization of the problem, a novel technique to detect a change of topic in the stream of cc, extensive experimentation for the proposed methods, and a publicly-available dataset used as our testbed.The research contributions presented can be summarized as follows:•We investigate the task of matching online news articles to news airing on a newscast.We formalize the problem, and present a framework that models the task as two separate sub-tasks:(i) Find a topically-homogeneous segmentation of the stream of cc.(ii) Retrieve relevant news as soon as possible.We design an evaluation testbed for the problem that takes into account the timeliness of the solution.We provide the dataset used in our testbed to the research community to foster research on this topic.4Available upon request at http://webscope.sandbox.yahoo.com.4We discuss several options to solve the segmentation and retrieval problems and we conduct a thorough experimentation for assessing the performance of our solutions.The remainder of the paper is structured as follows. Section 2 reviews related literature. We formalize our problem and present a framework to address it in Section 3. Section 4 discusses our evaluation framework and we describe the ground truth dataset in Section 5. Section 6 presents our experimental results, while Section 7 presents our conclusions and future directions for research.

@&#CONCLUSIONS@&#
In this paper we tackled the task of matching articles from a repository of news to a stream of closed captions coming from a newscast. We defined and formalized the problem and proposed a range of solutions, mainly borrowing techniques from information retrieval. We performed extensive experiments by using editorially assembled ground truth out of real-world data. The best performing strategy for segmenting closed captioning data is to use a fixed-width sliding window. On the other hand the best strategy to decide whether to issue a query to retrieve news articles, was based on ejo (Entity Jaccard Overlap) between result sets. Evaluation of the final retrieval quality has to trade-off two competing metrics: coverage and precision. When the main goal is coverage, then the best strategy results to be a sliding window of 30s over the stream of cc text with a rjo topic change detection strategy when 40% overlap between new and old result set is detected, i.e., sw30-rjo0.4. In fact, this strategy has a high coverage (more than 98%) with a relatively low suggestion ratio (i.e., about 13.1 suggestions per chunk) and a high MAP score. If the goal is high precision, the best strategy is sw30-ejo0.2, which obtains a coverage of 0.135 with a very low suggestion ratio of 0.15 (i.e., approx. 87 times smaller) and a high quality in terms of linear MAP of 0.307. In all the experiments, we are able to improve consistently over the state-of-the-art baseline described in Henzinger et al. (2003). This behavior is consistent thorough all the time-dependent relevance metrics, which account for the timeliness of retrieved news items using different discount functions.