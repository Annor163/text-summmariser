@&#MAIN-TITLE@&#
Premium-penalty ant colony optimization and its application in slope stability analysis

@&#HIGHLIGHTS@&#
Using the premium-penalty strategy, premium-penalty ant colony optimization is proposed.The solutions to some TSPs by premium-penalty ant colony optimization are the smallest and best.Based on PPACO and Spencer method, a new method to analyze the stability of slope is proposed.The PPACO can obtain less safety factor and its critical slip surface with faster speed.

@&#KEYPHRASES@&#
Path search,PPACO,Slope stability analysis,Critical slip surface,

@&#ABSTRACT@&#
Ant colony optimization (ACO) is a very suitable path search algorithm, whose typical application is traveling salesman problem. However, as one heuristic algorithm, it has many shortcomings, such as slow convergent speed and low searching efficiency. To overcome these shortcomings, the premium-penalty strategy has been introduced, and the pheromone diversity of the good paths and the ordinary ones is increased to polarize pheromone density of all paths. Thus, premium-penalty ant colony optimization (PPACO) is proposed. And its good performance is verified by the applications to some typical traveling salesman problems. Its two important parameters are discussed too. Because location critical slip surface in slope stability analysis is a path search problem, it can be solved by the ACO very suitably. Therefore, based on PPACO and typical mature limit equilibrium analysis (Spencer method), a new method to analyze the slope stability is proposed. Through two typical examples, one simple slope and one complicated slope, the efficiency and effectiveness of the new algorithm are verified. The results show that, the new algorithm can always find the less safety factor and its critical slip surface in shorter time than many previous algorithms, and the new algorithm can be used in real engineering very well.

@&#INTRODUCTION@&#
Ant colony optimization (ACO) [1] is a population-based search method that was inspired by the foraging behavior of real ants. The most important characteristic of artificial ants is their ability to detect and deposit pheromone trails on the path, which is performed by natural ants, to guide their search. The typical problem to solve through the ACO is the traveling salesman problem. Thus, the ACO algorithm is an extremely suitable path search algorithm.The firstly proposed algorithm of the ACO is called ant system [2] by three Italy scholars in 1991, Dorigo, Colorni and Maniezzo. It is the original version of various ant algorithms as well. This algorithm has some merits such as strong robustness, distributed computation and the use of a constructive greedy heuristic. Therefore, it has received increasing attention from researchers, and been used to solve many difficult problems in optimization of discrete systems. However, as one heuristic algorithm, the ACO algorithm have many shortcomings, for example, long search time, slow convergent speed and low searching efficiency and cannot expand the hunting zone, etc. In view of these flaws, many scholars proposed the massive corrective methods of ACO to solve traveling salesman problem. Dorigo and Stützle [1] proposed an elitist ant system. Moreover, Dorigo and Gambardella [3] proposed the ant colony system. The rank-based ant system was proposed by Bullnheimer et al. [4]. The widely used max–min ant system was proposed by Stützle and Hoos [5]. And its improved model–novel max–min ant system was proposed by Zhang and Feng [6]. Mei et al. [7] proposed an adaptive dynamic ant system. Guo and Liu [8] proposed the moderate ant system. Another improved ant colony optimization algorithm was proposed by Hlaing and Khine [9]. Moreover, Dong et al. [10] proposed a cooperative genetic ant system. Tsutsui [11] proposed another algorithm, which is called cunning Ant System (c AS). Gong and Wang [12] proposed the Chaos Ant Colony Optimization.As mentioned before, the ACO algorithm was introduced by means of the proof-of-concept application to the traveling salesman problem. Since then, ACOs have been applied to many discrete optimization problems [13]. First, other than the traveling salesman problem, some classical problems were tackled. For example, the assignment problems and the scheduling problems all can be solved by the ACO algorithm. Moreover, the graph coloring problem, the maximum clique problem, and vehicle routing problems all can be solved well too. More recent applications include clustering problems, electrical engineering problems, or civil engineering problems [14].The key task in analyzing slope stability is determining its critical slip surface [15]. A circular critical slip surface is a special case of a non-circular critical slip surface, and therefore, determining the non-circular critical slip surface for a slope is extremely important [15]. However, the location of the non-circular critical slip surface is actually a single path search. The ACO algorithm, which can solve path searches extremely well, is a suitable method to locate the non-circular critical slip surface of a slope. Some researchers have studied in this field. For example, Kahatadeniya et al. [16] proposed a method to search for a non-circular critical slip surface using ACO. Cheng et al. [17] compared six heuristic global optimization methods, which included ACO, to determine the best method to locate the critical slip surface. Rezaeean et al. [18] and Gao [19,20] improved the traditional ACO and proposed their own methods to search non-circular critical slip surfaces. These preliminary studies exhibited good performance of the ACO algorithm to locate a non-circular critical slip surface. However, as a random search algorithm, the computational efficiency of ACO is low. Additionally, “pre-mature” is its another shortcoming. Particularly, when the slope is extremely complicated, the low efficiency will become the primary problem for the ACO algorithm.To overcome those shortcomings, the premium-penalty strategy has been introduced, and the pheromone diversity of the good paths and the ordinary ones is increased to polarize pheromone density of all paths. Thus premium-penalty ant colony optimization (PPACO) is proposed. To compare its results with the best known solutions and solutions by other algorithms, some typical traveling salesman problems are used. Moreover, its two important parameters are discussed by application for one typical traveling salesman problem. And then, based on the PPACO and typical mature limit equilibrium analysis (Spencer method), a new method to analyze the slope stability is proposed. At last, to demonstrate its applicability and to investigate the validity and effectiveness of the new method, two numerical slope examples with varying complexity are presented, and the obtained results are compared with that of the ACO and previous studies of literatures.In the ACO algorithm, the following marks are introduced: n is the number of search points, m is the number of the ants, dijis the length of the path between search points i and j, τijis the intensity of pheromone on edge (i, j).Firstly, the initialization phase occurs, where ants are randomly positioned at different search points, and pheromone values are initialized to τij(0) on all roads. The first element of each ant's tabu list is set as its starting search point. When an ant is at search point i, its probability to choose the next search point j is as the following equation [1]:(1)pijk=[τij]α[ηij]β∑s∈Nik[τis]α[ηis]β,ifj∈Nik0,otherwisewhereNikis the feasible neighborhood of ant k when at search point i, i.e., the set of search points that ant k has not visited yet (the probability of choosing a search point outsideNikis 0), α and β are two parameters that determine the relative influence of the pheromone trail and the heuristic information, and ηij=1/dijis a heuristic value that is available a priori.After all the ants have built their paths, their pheromones are updated on all edges according to the following equation [2]:(2)τij(t+1)=ρ⋅τij(t)+Δτij(t)where,(3)Δτij=∑k=1mΔτijk(4)Δτijk=QTk,ifantktravelsonedge(i,j)0,otherwisewhere, t is the iteration counter,ρ∈0,1is the parameter to regulate the reduction of τij, Δτijis the total increase of trail level on edge (i, j), m is the number of ants,Δτijkis the increase of trail level on edge (i, j) caused by ant k, Q is the quantity of pheromone laid by an ant per tour, Tkis the length of tour that ant k has found.By repeating all the aforementioned steps, the ant colony will converge to a single tour, and the length of the tour is the optimal solution.There are four main modifications in the PPACO algorithm, which are discussed as follows.First, before updating the pheromone trails, the ants are sorted increased by tour length, then the formerwants are selected to be awarded and the rest are chosen to be punished. Unfortunately, because of the over emphasize on some tours, this may lead to stagnation situation which all the ants follow the same tour. To counteract this effect, the second strategy is to limit the pheromone on all arcs to an intervalτmin,τmax[5]. Third, the pheromone values on all the arcs are initialized to τmax. The fourth, the pheromone values on all arcs are polarized [21]. In order to reduce this influence, the higher pheromone evaporation rate is applied to the new algorithm.For the PPACO algorithm, to each ant, tours are built by the following steps.(1)According to random criterion, a start search point at which the ant is positioned is randomly chosen.Biased by the pheromone and heuristic values, the tours are probabilistically constructed by iteratively adding search points which have not been visited yet, until end search points have been visited.Tours are completed while the ants move to the end search points.All the tours generated by m ants are sorted.After all ants have completed their tours and ranked, the pheromone on all arcs are updated according to the quality of the solutions.The flow chart of the PPACO algorithm is as in Fig. 1.As shown in Fig. 1, after initializing the parameters and the pheromone trails, the algorithm iterates through a main loop. In the loop, all of the ants’ tours are constructed and sorted, and then, the pheromone trails are updated due to the length of the tours the ants built.The details of the PPACO algorithm are as follows.(1)Parameters initializationBefore the iteration of the algorithm, all the parameters should be initialized. These parameters include, constants of algorithm α, β and Q, number of ants m, number of search points n, maximum number of iterations N, pheromone evaporation factor ρ, the number of ants chosen to be praisedw, pheromone initial values τ0, pheromone extent value τmin and τmax.Ants resettlementAccording to the random selection rule, all m ants are initially positioned to n search points.Tours constructionUsing the probabilistic rule, the next search point to be visited is selected. Until there are no more search points to be visited and then the ant moves to the end search point to complete its tour.After positioning ant k in search point i, the next search point j is chosen as Eq. (1).Tours evaluationAfter all m ants have constructed their tours, the length of the tours can be computed. After this, the ants are ranked according to the tour length.Pheromone updateAfter all ants have completed their tours and sorted, the pheromone values on all arcs are updated. Based on the basic thinking of the previous studies [21,22], the pheromone update operations are in the following way, first the values of pheromone on the arcs are reduced by the evaporation factor ρ,(5)τij←(1−ρ)⋅τijwhere,ρ∈0,1is evaporation rate.After pheromone evaporation has been applied to all arcs, the amount of pheromone Δτris added to the arcs according to the rank of the tour itself, which can be shown as follows,(6)τij=τij+∑r=1w(w−r+1)⋅Δτijrif(0<r≤w)τij+∑r=w+1m−Δτijr(m−w−r)if(w<r≤m)(7)τij=τmin,ifτij≤τminτmax,ifτij≥τmaxwhere,(8)Δτijr=Q/Tr,ifarc(i,j)belongstoTr0,otherwisewhere, τijis the pheromone on all arcs, r is the rank of an ant,wis the number of ants chosen to be praised,Δτijris the contribution to the pheromone on arc (i, j) by ant r after the iteration, its quantity is weighted according to the rank of the ant, m is number of the ants,Q is the quantity of pheromone deposited by an ant per tour, Tris the length of tour generated by ant r,τmin,τmaxis the interval of pheromone values.Termination conditionThe termination condition is that the difference of the shortest paths for neighboring iterations is less than 10e−5. Moreover, to avoid infinite iteration, the maximum number of iterations is given.In order to compare the results of the PPACO algorithm with the best known solutions, a number of traveling salesman problem instances are used. All these traveling salesman problems are available from the TSPLIB benchmark library on the website [23].From previous studies and testing, the parameters of the PPACO algorithm are as follows,α=1,β=5,ρ=0.8,Q=100,m=51,N=300,τ0=1,τmin=0.00001,τmax=20andw=35.Because the PPACO algorithm is the non-deterministic method, the average tour length of 50 trials starting from different initial cities are used in this study. The results are as shown in Table 1. It can be seen from Table 1, for all these selected traveling salesman problems, the solutions of the PPACO algorithm are far beyond the announced optimal solutions.For comparison, the computing results for some typical traveling salesman problems of the different ant colony algorithms in the literatures and our studies are all summarized in Table 2.As shown in Table 2, the results for most of the ant colony algorithms are larger than the announced optimal solutions except for the results using cooperative genetic ant systems, improved ant colony optimization, adaptive dynamic ant system and our studies. The results of cooperative genetic ant systems and improved ant colony optimization are all equal to the announced optimal solutions. However, the solutions by adaptive dynamic ant system and our studies are less than the announced optimal solutions. Therefore, the solutions obtained in this study are found to be the smallest and better than all others.To further analyze the random performance of the PPACO algorithm, the statistic results of 50 trials starting from different initial cities are shown in Table 3. From Table 3, most of the worst results of the PPACO algorithm are near the optimal solutions. And some are the same as the optimal solutions, such as the solutions for the st70, eil75 and rat195. However, there is one instance whose worst result is less than the optimal solution, which is the pr76. Moreover, most of the average results are near the best results. And the variable coefficients for all instances are little. Therefore, the randomness of the PPACO algorithm is not very large, in other words, the computing stability of the PPACO algorithm is satisfactory.There are two special parameters in the PPACO algorithm, which are discussed as follows. The configuration of the two parameters is shown too.The first unique and most important parameter in the PPACO is the number of ants chosen to be awarded,w. The role of the parameterwis as follows. Ifw=0, no ants are selected to be awarded, all the ants are punished. The pheromone values on the tours traveled by ants are reduced after the iteration. Thus, the search is hard to converge to a single tour. To the opposite, ifw=m, all the ants are chosen to be awarded. The pheromone values on the used tours and unused tours are polarized. This leads to premature of the search.By applying to the traveling salesman problem of eil51, the influence ofwis as shown in Fig. 2. From Fig. 2, it can conclude that the number of ants chosen to be awarded should be fixed in an intervalwmin,wmaxto gain optimal solutions. In the above experiment,wminis around m/2 andwmaxis around the number of ants m.The second influential parameter is ρ. Due to the premium and penalty strategy used in the PPACO algorithm, the pheromone values on all arcs are polarized. The parameter ρ is used to counteract this effect and it enables the ant colony to make better decision in future iteration. This parameter favors the exploration of different paths during the whole search process which makes the ants’ search diversification.By tackling the traveling salesman problem of eil51, the importance of ρ is shown in Fig. 3. As shown in Fig. 3, it's clearly that, as the evaporation rate decreases, the optimal tours found by the algorithm becomes worse.From the above experiments in the PPACO algorithm, the number of ants selected to be awardedwshould be around half of the ant number and the evaporation rate should be set to a higher value.For simple, effective computing, the following method is used to generate the slip surface and to search for the critical slip surface.Firstly, the maximum search zone for the slip surface is determined by the entrance position and exit position of the slip surface. The search zone is divided into a number of slips by several vertical lines, such as those shown in Fig. 4. Generally, the distances between the vertical lines are equal; however, the distance can be determined according to the scale of the problem, the accuracy requirements and the computational ability.Next, each vertical line is divided into a number of nodes. To compute simply, the distance between the nodes is also equal. The distance between the nodes is less than that between the vertical lines.Finally, based on several judgment criteria, starting from one point in the entrance region, the nodes that are more likely to pass by the slip surface are tracked using one vertical line and the other. Finally, an entire slip surface can be generated, such as curve AB shown in Fig. 4. Then, using an optimization method, the critical slip surface can be selected from those slip surfaces.Generally, the search method for the critical slip surface is as follows.The points at the slope surface in the entrance region and exit region are all pointed to the virtual points, Start and End, as shown in Fig. 5. The search for the critical slip surface begins at point Start and ends at point End. However, the distances between the entrance point to point Start and the exit point to point End cannot be analyzed by the mechanics method. This method is called a non-designated search for the critical slip surface, which belongs to the class of multi-stage incomplete sequential decision problems.To generate a reasonable slip surface and improve the search efficiency, several basic principles should be followed, such as the following.(1)The horizontal ordinate must be an increasing or decreasing sequence.The entrance point and exit point must be on the surface of the slope.The range of the horizontal ordinate is the horizontal border of the slope, and the vertical ordinate is restricted by the range of the slope surface to the bottom hard layer.The dip of the exit line should be between 0° and 45°.Generally, the slip surface should be concave, not convex or jagged, i.e., αi−1≤αi, where αiis the angle between the horizontal line and the slip surface whose order is i. Generally, these angles should be continuous, i.e., αi−αi−1≤Δα.Based on above method, the search process for the critical slip surface by the PPACO algorithm is as follows.(1)InitializationThe ants are randomly placed at points in the entrance region. The pheromones on all paths are initialized to a random value in the first cycle.Constructing the pathIn each cycle, ants move from point Start to point End, the nodes that the ants have passed will construct one path. After one cycle, all ants are randomly placed at points in the entrance region again.Pheromone updateThe pheromone on the path passed by an ant should be updated. The length of the path is the safety factor of the slip surface which is computed by Spencer method.The validity and effectiveness of the PPACO algorithm to locate the critical slip surface and the associated minimum safety factor are investigated by solving two typical slope stability problems. Their critical slip surface and associated minimum safety factor are determined by the PPACO algorithm. And the results are compared with those defined by the ACO algorithm and other methods used in previous studies.The first example is a simple homogeneous slope. The soil parameters are the following: the effective friction angle φ is 10, the coefficient of cohesion c is 19.6kPa and the unit weight γ is 16.66kN/m3. Fig. 6shows the geometry of the slope.The slope is divided by 20 vertical lines at a distance of 6m apart. The distance between the nodes on the vertical line is 1m. The subdivision sketch map of this slope is shown in Fig. 7.Based on testing and experience, the parameters of the PPACO are as follows:α=1,β=5,ρ=0.75,Q=100,m=50,N=300,τ0=1,τmin=0.00001,τmax=20andw=30.For comparison, the parameters of the ACO are taken to be the same as those of the PPACO. Thus, the parameters of the ACO are as follows:α=1,β=5,ρ=0.75,τ0=1,N=300,m=50andQ=100.The results from the ACO, PPACO, a variational method [20], software STABL-5M [24] and two improved genetic algorithms [25] are all summarized in Table 4. The associated critical slip surfaces are as shown in Fig. 8. Because the ACO and PPACO are all non-deterministic methods, the average values of 20 runs are used in this study.To compare the results of the limit equilibrium analysis and finite element method (FEM), the strength reduction method [26,27] based on the FEM software (ANSYS) is applied to analyze this slope too. The obtained result is also summarized in Table 4.Because the example is a simple homogeneous slope, the variational method can be taken as an accurate analytical method. Therefore, its results can be used as the standard optimum solution; the error of the other methods can be computed, which are also summarized in Table 4.It can be seen from Table 4, the solution by the PPACO is 1.045, which is almost the same as the optimum solution which is 1.040, and its relative error is only approximately 0.5%. The solution by the ACO is 1.055, whose relative error is approximately 1.44%. The solution by software STABL-5M is 1.1042, whose relative error is approximately 6.17%. The solution by modified complex genetic algorithm is 1.059, whose relative error is approximately 1.83%. While the solution by feasible direction genetic algorithm is 1.0609, whose relative error is approximately 2.01%. Moreover, the solution by the FEM is 1.0732, whose relative error is approximately 3.19%, which is only less than that of software STABL-5M. However, the result by the FEM is not very deferent from those of other limit equilibrium analysis method. Thus, the FEM can obtain the similar results for this simple slope with the limit equilibrium analysis method. From the above analysis, the solution by the PPACO in this study is found to be the smallest and better than all others.As shown in Fig. 8, the critical slip surfaces by the PPACO and ACO all agree with the optimum critical slip surface; however, the critical slip surface by the PPACO is closer to the optimum critical slip surface. Due to the shortcomings of the search method in the STABL-5M software, the critical slip surface determined by the STABL-5M software is inaccurate. The critical slip surfaces by two genetic algorithms [25] are all worse than the critical slip surfaces by two ACOs.To simply evaluate the computation speed of the PPACO and ACO, the required minimum number of iterations (MNI) to determine the critical slip surface is used. To exemplify the search process of the PPACO and verify its computation speed, the critical slip surface found after fiftieth iteration, seventy-fifth iteration, 100th iteration and 125th iteration are all shown in Fig. 9. As shown in Fig. 9, as the search continues, the critical slip surface gradually approaches the optimum critical slip surface as the number of iteration increases. The convergence speed is extremely fast, and the MNI is approximately 125.To further analyze the computing efficiency and effectiveness of the PPACO and ACO, the computing time and computing stability are all applied in this study. The computation is performed on a Intel(R) Core(TM) i5-4590 3.30GHz processors with 8.00GB RAM. In the 20 runs computation, the average computing time and minimum computing time are 132s and 78s, respectively for the PPACO algorithm. While the average computing time and minimum computing time are 195s and 102s, respectively for the ACO algorithm. Thus, the computing time of the PPACO is much less than that of the ACO. Moreover, in the 20 runs computation by the PPACO algorithm, the average computing result and minimum computing result are 1.045 and 1.044, respectively. While in the 20 runs computation by the ACO algorithm, the average computing result and minimum computing result are 1.055 and 1.047, respectively. Thus, the computing stability of the PPACO is also much less than that of the ACO. Therefore, the computing efficiency and effectiveness of the ACO algorithm all can be improved largely by the PPACO algorithm.This example is a famous test problem used by Association for Computer Aided Designs of Australia in 1989 [28]. This slope is a multilayered slope consisting of three layers of different materials, and the boundaries between the layers are not horizontal. The parameters of the three materials are as in Table 5. Fig. 10shows the geometry of this slope.Based on testing, this slope is divided by 26 vertical lines at a distance of 2m. The distance of the nodes on the vertical line is 0.4m.By testing and experience, the parameters of the PPACO algorithm are as follows:α=1,β=5,ρ=0.85,Q=100,m=60,N=1500,τ0=1,τmin=0.00001,τmax=20andw=40.The parameters of the ACO algorithm are as follows:α=1,β=5,ρ=0.85,τ0=1,N=1500,m=60andQ=100.The searched critical slip surfaces by the PPACO and by the ACO are as shown in Fig. 11. Moreover, the critical slip surface which is the optimum solution nowadays [24] is also shown in Fig. 11. It can be seen from Fig. 11, the three critical slip surfaces are similar, but the searched critical slip surface by the PPACO algorithm and the optimum critical slip surface nowadays [24] are closer.For the Spencer method is used in this study, some results by Spencer method for this example in the literatures are summarized in Table 6. To compare the results of the limit equilibrium analysis and the finite element method (FEM), the strength reduction method based on the FEM software (ANSYS) is also applied to analyze this slope. The obtained result is also summarized in Table 6. Because the ACO and PPACO are all non-deterministic methods, the average values of 20 runs are used too.As shown in Table 6, the safety factor obtained by Chen [24] is 1.344, which is the optimum solution for this example nowadays. Thus, the other solutions are all larger than this solution except for the solution by the PPACO algorithm, which is 1.340. In those solutions by the limit equilibrium analysis method, the largest one is 1.387 which is obtained by genetic algorithm [29]. And the solutions by leap-frog method [30] and by harmony search method [31] are the same, which are all 1.359. The solution by the ACO algorithm is 1.353. Moreover, for the deferent principles between the FEM and the limit equilibrium analysis method, the solution by the FEM which is 1.426 is the biggest in these seven solutions. However, the result by the FEM is not very deferent from those of the limit equilibrium analysis methods. Thus, the FEM also can obtain the similar results for this slope with the limit equilibrium analysis methods. Therefore, the solution by the PPACO algorithm in this study is found to be the smallest and better than all others.To describe the search convergence process of the PPACO algorithm, the critical slip surfaces found by 150th iteration, 300th iteration, 450th iteration and 600th iteration are all shown in Fig. 12. And to describe the search convergence process of the ACO algorithm, the critical slip surfaces found by 250th iteration, 500th iteration, 750th iteration and 1000th iteration are all shown in Fig. 13.As shown in Figs. 12 and 13, the determined critical slip surface gradually approaches the optimum critical slip surface as the number of iteration increases. However, the convergence speed by the PPACO is faster than that by the ACO. The MNI of the PPACO is approximately 660, while that of the ACO is approximately 1250. Therefore, the computation speed can be increased by approximately 89%. And then, the PPACO algorithm can solve this problem very well, and its computation speed is very fast.To further analyze the computing efficiency and effectiveness of the PPACO and ACO, the computing time and computing stability are all applied in this study too. The computation is also performed on a Intel(R) Core(TM) i5-4590 3.30GHz processors with 8.00GB RAM. In the 20 runs computation, the average computing time and minimum computing time are 752s and 715s, respectively for the PPACO. While the average computing time and minimum computing time are 1436s and 1285s, respectively for the ACO. Thus, the computing time of the PPACO is much less than that of the ACO. Moreover, in the 30 runs computation by the PPACO algorithm, the average computing result and minimum computing result are 1.34 and 1.334, respectively. While in the 30 runs computation by the ACO algorithm, the average computing result and minimum computing result are 1.353 and 1.342, respectively. Thus, the computing stability of the PPACO is also much less than that of the ACO. Therefore, the computing efficiency and effectiveness of the PPACO are all much better than those by the ACO.

@&#CONCLUSIONS@&#
The ACO algorithm is very suitable path search algorithm, whose typical application is traveling salesman problem. However, as one heuristic algorithm, it has many shortcomings, such as slow convergent speed and low searching efficiency. To overcome its shortcomings, the premium-penalty strategy has been introduced, and the pheromone diversity of the good paths and the ordinary ones is increased to polarize pheromone density of all paths. Thus, the PPACO algorithm is proposed.Using some typical traveling salesman problems, the results of the PPACO are compared with the best known solutions and the solutions in the previous studies. The comparisons have proved that, for all these selected traveling salesman problems, the solutions of the PPACO are far beyond the announced optimal solutions and are the smallest and better than those by all other ant colony algorithms. And then, the number of ants selected to be awardedwshould be around half of the ant number and the evaporation rate ρ should be set to a higher value.For search of critical slip surface in slope stability analysis is a path search, it can be solved by the ACO algorithm very suitably. Therefore, based on the PPACO and typical mature limit equilibrium analysis (Spencer method), a new method to analyze the stability of slope is proposed.By dividing the searching zone with grids, the problem of critical slip surface search can be transformed to grid nodes search which is a standard discrete optimization path search. The PPACO algorithm is one high efficiency and good effective method to solve discrete optimization path search.The applications of slope stability analysis prove that,(1)The safety factor obtained by the PPACO algorithm is almost the same as the optimum solution, and its error is less than that of the ACO. And also, the associated critical slip surface by the PPACO is agree with the optimum one, and it is more closer to the optimum one than that of the ACO.The searched critical slip surface gradually and quickly approaches to the optimum critical slip surface as the number of iteration increases. And the computation speed of the PPACO is faster than that of the ACO.The PPACO algorithm can obtain the less safety factor and its critical slip surface with faster speed.