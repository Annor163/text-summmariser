@&#MAIN-TITLE@&#
Linear genetic programming for shear strength prediction of reinforced concrete beams without stirrups

@&#HIGHLIGHTS@&#
We have introduced LGP algorithm for shear capacity modeling of RC beams without stirrups.An extensive experimental database including 1938 test results gathered from literature.A simplified LGP based formula is obtained for different kinds of concrete.Our results are better than the nine different code models.

@&#KEYPHRASES@&#
Shear strength,Reinforced concrete beam,Linear genetic programming,Design equation,

@&#ABSTRACT@&#
A new design equation is proposed for the prediction of shear strength of reinforced concrete (RC) beams without stirrups using an innovative linear genetic programming methodology. The shear strength was formulated in terms of several effective parameters such as shear span to depth ratio, concrete cylinder strength at date of testing, amount of longitudinal reinforcement, lever arm, and maximum specified size of coarse aggregate. A comprehensive database containing 1938 experimental test results for the RC beams was gathered from the literature to develop the model. The performance and validity of the model were further tested using several criteria. An efficient strategy was considered to guarantee the generalization of the proposed design equation. For more verification, sensitivity and parametric analysis were conducted. The results indicate that the derived model is an effective tool for the estimation of the shear capacity of members without stirrups (R=0.921). The prediction performance of the proposed model was found to be better than that of several existing buildings codes.

@&#INTRODUCTION@&#
Although several research programs have been conducted to predict the shear capacity of concrete (e.g. [1]), there is still no clear expression to predict the shear failure mechanisms of concrete elements. Most of the available shear design expressions have different forms and do not provide a consistent factor of safety against shear failure. Thus, the behavior of concrete beam has been extensively investigated during the last three decades. Numerous theoretical models have been established in recent years to investigate the interaction between several forces including axial, shear, bending, and torsion [2,3].Recently, application of machine learning has attracted much attention for solving structural engineering problems. The machine learning systems are powerful tools for design of computer programs. They automatically learn from experience and extract various discriminators [4]. Artificial neural networks (ANNs) are the most widely used branch of machine learning. There have been some researches focusing on the application of ANNs to the evaluation of the shear strength of reinforced concrete beams without reinforcement. Recently, Choi et al. [5] used another machine learning method, namely fuzzy logic (FL) for the modeling of the shear strength of slender reinforced concrete beams. Although ANNs and FL are successful in prediction, they are not usually able to produce practical prediction equations. Furthermore, for the ANN-based modeling, the structure of the network should be identified a priori. Besides, determination of the fuzzy rules in FL is a difficult task. These methods are mostly appropriate to be used as a part of a computer program [6]. Genetic programming (GP) [7] is a developing subarea of the machine learning techniques. GP is known as an extension genetic algorithm (GA) where the solutions are computer programs rather than fixed length binary strings [6]. Classical (standard) GP and its variants have been recently employed to derive greatly simplified formulations for structural engineering problems and especially concrete structures modeling (e.g. [8–10]). Linear genetic programming (LGP) [11] is a new subset of GP. LGP operates on computer programs that are represented as linear sequences of instructions of an imperative programming language [6]. In contrast with ANNs, GA and classical GP, application of LGP in the field of civil engineering is quite new and restricted to a few areas [6,12–16]. It is worth mentioning that classical GP and new variants of GP have been, respectively, used by Ashour et al. [17] and Gandomi et al. [18,19] to predict the load capacity of RC deep beams. Gandomi et al. [20] have applied LGP to the modeling of fibrous RC beams. Recently, Kara [21] employed GP for the prediction of the shear strength of FRP-reinforced concrete beams without stirrups upon a limited number of experimental test results. Moreover, Pérez et al. [22] applied GP to the optimal adjustment of EC-2 shear formulation for RC beams without web reinforcement.However, applications of the GP-based approaches to directly obtain a simple formula to predict the shear strength of RC beams are conspicuous by its absence. There are approaches which present simple formulation, but based on other advanced approaches [23]. The main purpose of this study is to utilize the LGP technique to build a simple predictive model for the shear strength of RC beams without stirrups. The shear strength was formulated in terms of shear span to depth ratio, concrete cylinder strength at date of testing, amount of longitudinal reinforcement, lever arm and maximum specified size of coarse aggregate. The predictions made by models were further compared with those provided by several well-known building codes.Machine learning is a branch of artificial intelligence essentially inspired from biological learning. The machine learning approach deals with the design of computer models that are able to automatically learn with experience [4,24]. The machine learning methods extract knowledge and complex patterns from machine readable data [4]. The major focus of the machine learning research is on data mining problems, difficult-to-program applications, and software applications customizing to the individual user's preferences [4,25].GP is a machine learning technique, inspired by biological evolution, to find computer programs that solve a problem. It uses the principle of Darwinian natural selection to evolve a program [26]. GP is a specialization of GA. The main difference between GP and GAs is the representation of the solution. GA creates a string of numbers that represent the solution. The GP solutions are computer programs [6]. GP works with population of individuals (computer programs) that are created randomly. The classical GP technique is also referred to as standard tree-based GP [6]. A population member in standard GP is a hierarchically structured tree comprising functions and terminals. In addition to traditional tree-based GP, there are other types of GP where programs are represented in different ways.LGP is a linear variant of GP. LGP is a subset of GP with a linear representation of individuals. The main characteristic of LGP in comparison with traditional tree-based GP is that expressions of a functional programming language (like LISP) are substituted by programs of an imperative language (like C/C++) [6,27]. Fig. 1presents a comparison of the program structures in LGP and tree-based GP. A linear genetic program can be seen as a data flow graph generated by multiple usage of register content. That is, on the functional level the evolved imperative structure denotes a special directed graph. In the tree-based GP, the data flow is more rigidly determined by the tree structure of the program [6,27].In the LGP system described here, an individual program is interpreted as a variable-length sequence of simple C instructions. The instruction set or function set of LGP consists of arithmetic operations, conditional branches, and function calls. The terminal set of the system is composed of variables and constants [6]. The instructions are restricted to operations that accept a minimum number of constants or memory variables, called registers, and assign the result to a destination register.Automatic Induction of Machine code by Genetic Programming (AIMGP) is a particular form of LGP. The programs evolved by AIMGP are stored as linear strings of native binary machine code and directly executed by the processor during fitness calculation. The absence of an interpreter and complex memory handling results in a significant speedup in the AIMGP execution compared to tree-based GP [6,11,27]. This machine-code-based LGP approach searches for the computer program and the constants at the same time. Here are the steps the machine-code-based LGP follows for a single run [11]:I.Initializing a population of randomly generated individuals (programs) and calculating their fitness values.Running a tournament. In this step four individuals are selected from the population randomly. They are compared and based on their fitness, two individuals are picked as the best adapted (less fitness value) and two as the worst adapted (more fitness value).Transforming the best adapted individuals (winner programs). After that, best adapted individuals are copied and transformed probabilistically as follows:•Parts of the best adapted individuals are exchanged with each other to create two new individuals (crossover); and/orEach of the tournament best adapted individuals is transformed randomly to create two new individuals (mutation).Replacing the worst adapted individuals (loser programs) in the tournament with the transformed adapted individuals. Elitist strategy is used, i.e., the best adapted of the tournament remain without change [6].Repeating steps two through four until termination or convergence conditions are satisfied.Crossover occurs between instruction blocks. Fig. 2demonstrates a two-point linear crossover used in LGP for recombining two tournament winners [20]. As it is seen, a segment of random position and arbitrary length is selected in each of the two parents and exchanged. If one of the two children would exceed the maximum length, crossover is aborted and restarted with exchanging equally sized segments [27]. The mutation operation occurs on a single instruction set. Inside instructions, mutation randomly replaces the instruction identifier (a variable or a constant) by equivalents from valid ranges. Comprehensive descriptions of the basic parameters used to direct a search for a linear genetic program can be found in [11,20].To develop the LGP model, the shear strength of RC beams without stirrups was considered to be a function of the following influencing parameters:(1)vu=ff′c,ad,ρ,Z,agwhere vu(MPa) is the shear strength (vu=Vu/(bwd)); Vu(kN) is the ultimate shear force; bw(mm) is the web width; d (mm) is the effective depth; Z is the mechanic arm (Z=0.9d); f′c(MPa) is the 28-day concrete compressive strength; a/d is the shear span to depth ratio; (%) is the amount of longitudinal reinforcement (ρ=A/bwd); A is the area of the longitudinal reinforcement; agis the maximum size of coarse aggregate (assumed as 3/4 in. (19mm)) if not presented [28].The effect of the above parameters on the shear strength of RC beams is well-understood [1,29,30]. Of the above parameters, the effect of aggregate size on shear strength of RC beams has been investigated for particular experimental campaigns [31,32], but there are few studies about its influence for a complete database [23]. Thus, this study has investigated the effect of this parameter by using the maximum size of coarse aggregate as an input of the model.A comprehensive database obtained from the literature was used for the model development. Collins et al. [28] gathered 1849 test results for the shear strength capacity of RC beam from 113 papers. In this research, the database presented by Collins et al. [28] was updated with 242 test results obtained from some other studies [33–47]. After removing the beams failed in flexural mode, 1938 test results were used for the modeling of the shear strength capacity of RC beams without stirrups. The statistical parameters of the geometrical and mechanical properties of the samples are presented in Table 1. From this table, it can be seen that the range of parameters are notably wide. For example, the range of compressive strength of concrete indicates that the database includes normal, high and very high strength concrete (NSC, HSC and VHSC). Therefore, the derived model can be reliably used for different cases.An essential challenge in machine learning generalization is overfitting. Overfitting usually occurs if the training process is running too generations or if the data set is not representative enough. In this case, although the training error may continue to decrease, the testing error increases rapidly [48]. In other words, a learning algorithm is called “overfit” if it has a good performance on the training data but a poor performance in predicting new unseen data. An efficient approach to prevent overfitting is to test the derived models on a validation set to find a better generalization [20,49]. This approach was used in this study for improving the generalization of the models. For this aim, the available data sets were randomly divided into learning, validation and testing subsets. The learning data were taken for training (genetic evolution). The validation data were used to specify the generalization capability of the models on data they did not train on (model selection). Thus, both of the learning and validation data were involved in the modeling process and were categorized into one group referred to as training data. The model with the best performance on both of the learning and validation data sets was finally selected as the outcomes of the runs. The testing data were further employed to measure the performance of the optimal model obtained by LGP on data that played no role in building the models [20]. To obtain a consistent data division, several combinations of the training and testing sets were considered. The selection was in a way that the maximum, minimum, mean and standard deviations of parameters were consistent in the training and testing data sets. Of the 1938 data sets, 85% of data vectors were taken for the training process (70% for learning and 15% for validation). The remaining 15% were used for the testing of the derived models. To visualize the distribution of the input and output variables, they are presented by frequency histograms in Fig. 3.The best model was chosen on the basis of a multi-objective strategy as follows [20]:•The simplicity of the model, although this was not a predominant factor.Providing the best fitness value on the learning data.Providing the best fitness value on a validation data.The first objective was controlled by the user through the parameter settings (e.g., initial and maximum program sizes). For the other objectives, the following objective function (OBJ) was constructed as a measure of how well the model predicted output agrees with the experimental results. The best LGP model was then deduced by minimizing of the following function:(2)OBJ=No.Le−No.VNo.TRMSEL+MAELRL2+2No.VNo.TgRMSEV+MAEVRV2where No.T, No.L, and No.Vare, respectively, the number of training (learning plus validation), learning and validation data. RMSE, MAE and R are, respectively, the root mean squared error, mean absolute error and correlation coefficient given in the form of following relationships:(3)RMSE=∑i=1n(hi2−ti2)n(4)MAE=∑i=1n|hi−ti|n(5)R=∑i=1n(hi−h¯i)(ti−t¯i)∑i=1n(hi−h¯i)2∑i=1n(ti−t¯i)2in which hiand tiare, respectively, the actual and calculated outputs for the ith output,h¯iandt¯iare the average of the actual and calculated outputs, respectively. n is the number of samples. It is well known that R alone is not a good indicator for predicting the accuracy of a model. This is because by equal shifting of the output values of a model, the R value does not change. The constructed objective function takes into account the changes of RMSE, MAE and R simultaneously. Lower RMSE and MAE and higher R values result in lowering OBJ; and hence indicate a more precise model. In addition, the above function takes the effects of different data divisions into account for the learning and validation data [20].The parameter selection affects the model generalization capability of LGP. Table 2presents the parameter settings for the LGP algorithm. The number of programs in the population that LGP will evolve is set by the population size. A run will take longer with a larger population size. The maximum number of tournaments sets the outer limit of the tournaments that will occur before the program terminates the run. The proper number of population and tournaments depends on the number of possible solutions and complexity of the problem. Mutation and crossover rates are the probabilities that an offspring will be subjected to mutation and crossover, respectively. The lengths of the evolved programs in runs were controlled by initial and maximum program size parameters. The initial program size parameter sets the size of the programs in the first population at the start of each run. The maximum program size parameter sets the maximum length of the other programs evolved during each run.In this study, several runs were conducted to come up with a parameterization of LGP that provided enough robustness and generalization. The LGP parameters were changed for different runs. Three levels were set for the population size and two levels were considered for the crossover and mutation rates. The success of the LGP algorithm usually increases with increasing the initial and maximum program size parameters. In this case, the complexity of the evolved functions increase and the speed of the algorithm decrease. These parameters are measured in bytes. The initial and maximum program sizes were respectively set to optimal values of 80 and 256 bytes as tradeoffs between the running time and the complexity of the evolved solutions. One level was considered for the other parameters based on some previously suggested values [6,13,20] and also after making several preliminary runs and observing the performance behavior.In the LGP, demes are semi-isolated subpopulations that evolution proceeds faster in them in comparison to a single population of equal size [11]. The number of demes presented in Table 2 is related to the way that the population of programs is divided. In this study, four basic arithmetic operators (+, −, ×, /) and basic mathematical functions (√) were utilized to get the optimum LGP model. There are 3×2×2=12 different combinations of the parameters. All of these combinations were tested and 10 replications for each combination were carried out. This makes 120 runs for each of the models. A fairly large number of tournaments were tested on each run to find models with minimum error. For each case, the program was run until there was no longer significant improvement in the performance of the models or the runs terminated automatically. Each run was observed while in progress for overfitting. In checking for overfitting, situations were checked in which the fitness of the samples for the training of LGP was negatively correlated with the fitness on the validation data sets. To evaluate the fitness of the evolved program, the average of the squared raw errors was used. For the runs showing signs of overfitting, the LGP parameters were progressively changed so as to reduce the computational power available to the LGP algorithm until observed overfitting was minimized. The resulting run was then accepted as the production run. The programs with the best performance on both of the learning and validation data sets were finally selected as the outcomes of each run. For the LGP-based analysis, the Discipulus software [50] was used which works on the basis of the AIMGP platform.The best LGP model for predicting the shear strength of RC beams was built using f′c, a/d, ρ, Z and ag. These parameters seem to be sufficient representatives of the geometrical parameters and mechanical properties of RC beams. The best LGP model obtained at the end of training in C++ is given in Table 3.The above program can be run in C++ environment. The obtained code may be linked to the optimizer and compiled or it may be called from the optimization routines [51]. To facilitate the use of the derived code, it was converted into a functional representation by successive replacements of variables starting with the last effective instruction [6,20]. The optimal LGP-based formulation the shear strength of RC beam without stirrups (vu) is as given below:(6)vu=2dad8a(3−ag)ρ+f′c3ρzThe OBJ value for the optima model was 1.50. The population size, crossover rate and maximum number of tournaments for the optimal run were equal to 500, 90% and 8315045, respectively. This run took 9min and 3s on a Pentium 4 personal computer with 3.00GHz of processor speed and 1 GB of memory. The number of the computer programs evolved and evaluated by the LGP algorithm during the conducted runs was equal to 310,150,002. Fig. 4illustrates the number of tournaments against the fitness function (squared error) values for the training phase. As it is seen, the prediction error notably decreases with increases of the tournaments up to about 6,000,000 and, then the error decrement rate declines for larger tournaments. A comparison of the predictions made by the LGP model and the experimental shear strength of RC beams for the entire database is shown in Fig. 5. The statistical values for the learning, validation and testing data sets are also shown in Table 4.For verification of the LGP-based prediction model, a parametric analysis was performed in this study. The parametric analysis investigates the response of the predicted shear strength from the LGP model to a set of hypothetical input data generated over the ranges of the minimum and maximum data used for the model training. The methodology is based on the change of only one input variable at a time while the other variables are kept constant at the average values of their entire data sets. A set of synthetic data for the single varied parameter is generated by increasing the value of this in increments. These inputs are presented to the prediction equation and the shear strength is calculated. This procedure is repeated using another variable until the model response is tested for all input variables. The robustness of the design equations is determined by examining how well the predicted shear strength values agree with the underlying physical behavior of the shear capacity of RC beams [20,52]. Fig. 6presents the tendency of the shear strength predictions to the variations of the main design parameters (reinforcement ratio, shear span to depth ratio and concrete compressive strength). These figures are plotted for different compressive strength ranges (f′c=30, 70 and 120MPa) for NSC, HSC and VHSC.As shown in Fig. 6, the shear strength of the concrete beam continuously increases due to increasing the longitudinal reinforcement and concrete reinforcement. From Fig. 6a, it can be observed from that the shear capacity decreases with increases in the shear span to depth ratio. As it is well-known, for a/d≈2.5, the failure mode is changed from shear comparison to diagonal tension. Fig. 6a shows that this mechanism has been captured by the proposed model. In general, the parametric analysis results are expected cases from a structural engineering viewpoint.Besides, the ratios of the predicted shear strength to experimental values with respect to all compressive strength values (NSC, HSC and VHSC) are shown in Fig. 7. As the scattering increases in the figure, the accuracy of the model decreases. It can be observed from this figure that the predictions obtained by the LGP model have good accuracy. As it is seen, the scattering decreases with increasing compressive strength.Smith [53] suggested the following criteria for judging performance of a model:•if a model gives |R|>0.8, a strong correlation exists between the predicted and measured values.if a model gives 0.2<|R|<0.8 a correlation exists between the predicted and measured values.if a model gives |R|<0.2, a weak correlation exists between the predicted and measured values.In all cases, the error values (e.g., MAE) should be at the minimum [54]. The model can therefore be judged as very good. Based on the results, the proposed LGP model with low RMSE and MAE, and high R values is able to predict the target values to an acceptable degree of accuracy. The performance of the models on the training and testing data suggests that it has both good predictive ability and generalization performance.The amount of data used for the calibration of the machine learning-based models is an important issue, as it bears heavily on the reliability of the final models. To cope with this issue, Frank and Todeschini [55] argue that the minimum ratio of the number of objects over the number of selected variables for model acceptability is 3. More, it is suggested that considering a higher ratio equal to 3 is safer [55]. In the present study, this ratio is much higher and is at least equal to 1938/5=387.6. Furthermore, new criteria recommended by Golbraikh and Tropsha [56] were checked for the external verification of the LGP models on the testing data sets. It is suggested that at least one slope of regression lines (k or k′) through the origin should be close to 1. Furthermore, the performance indexes of m and n should be lower than 0.1. Recently, Roy and Roy [57] introduced a confirm indicator of the external predictability of models (Rm). For Rm>0.5, the condition is satisfied. Either the squared correlation coefficient (through the origin) between predicted and experimental values (Ro2), or the coefficient between experimental and predicted values (Ro′2) should be close to 1. The considered validation criteria and the relevant results obtained by the proposed model are presented in Table 5. As it is seen, the derived model satisfies the required conditions. The validation phase ensures the proposed model is strongly valid, has the prediction power and is not chance correlations.A comparative study was conducted to benchmark the proposed LGP model against several codes of practice including ACI 446 [58], ACI 318 [59], ASCE-ACI 445 [60], CEB-FIB [61], CSA [62], EC-2 [63], NZS [64] and ICC [65]. In order to evaluate the capabilities of the models, the RMSE, MAE and R performance measures were used. The prediction performance of different models on for entire database is summarized in Table 6. Besides, Fig. 8visualizes the histogram plots of the ratio of the experimental to predicted shear strength values for the entire database. More, this figure shows the values of mean (Ave) of the ratios of the experimental to predicted shear strength values. It can be observed from Table 6 and Fig. 8 that the LGP-based design equation has provided significantly better results than the other models. In addition to its reasonable accuracy, the LGP model is remarkably simple and can be used for design practice via hand calculations. However, the LGP technique used in this research is based on the data alone to determine the structure and parameters of the model. Thus, the derived model is considered to be mostly valid for use in preliminary design stages and should cautiously be used for final decision-making. For more reliability, the results of the LGP-based analyses are suggested to be compared with those obtained using deterministic methods.

@&#CONCLUSIONS@&#
The LGP technique was utilized to formulate the strength capacity of RC beams. A reliable database from the literature was used for developing the model. The proposed design equation gives reliable estimations of the strength capacity of RC beams without stirrups. The validity of the model was tested for a part of test results beyond the training data domain. Furthermore, the derived prediction model efficiently satisfies the conditions of different criteria considered for its external validation. The LGP model produces better outcomes than the existing building codes, i.e., ACI 446, ACI 318, ASCE-ACI 445, CEB-FIB, CSA, DIN 1045 [66], EC 2, NZ, and ICC. The results of the sensitivity and parametric analyses indicate that the proposed design equation is capable of capturing the underlying physical behavior of the strength of RC beams. The derived design equation is an easy-to-use tool for practical pre-design purposes because of its remarkable simplicity. The results of the LGP analysis provide a transparent program, in this case C++ codes, for further use in the strength capacity prediction, as well as optimization purposes.