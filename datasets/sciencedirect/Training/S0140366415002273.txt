@&#MAIN-TITLE@&#
Location privacy without mutual trust: The spatial Bloom filter

@&#HIGHLIGHTS@&#
We define a new data structure for location privacy based on bloom filters.We provide two privacy preserving protocols for location-aware services.We prove the security of the protocols and we analyze their efficiency.We provide a thorough evaluation of the data structure and we simulate the protocols.

@&#KEYPHRASES@&#
Location privacy,Bloom filters,Secure multi-party computation,

@&#ABSTRACT@&#
Location-aware applications are one of the biggest innovations brought by the smartphone era, and are effectively changing our everyday lives. But we are only starting to grasp the privacy risks associated with constant tracking of our whereabouts. In order to continue using location-based services in the future without compromising our privacy and security, we need new, privacy-friendly applications and protocols. In this paper, we propose a new compact data structure based on Bloom filters, designed to store location information. The spatial Bloom filter (SBF), as we call it, is designed with privacy in mind, and we prove it by presenting two private positioning protocols based on the new primitive. The protocols keep the user’s exact position private, but allow the provider of the service to learn when the user is close to specific points of interest, or inside predefined areas. At the same time, the points and areas of interest remain oblivious to the user. The two proposed protocols are aimed at different scenarios: a two-party setting, in which communication happens directly between the user and the service provider, and a three-party setting, in which the service provider outsources to a third party the communication with the user. A detailed evaluation of the efficiency and security of our solution shows that privacy can be achieved with minimal computational and communication overhead. The potential of spatial Bloom filters in terms of generality, security and compactness makes them ready for deployment, and may open the way for privacy preserving location-aware applications.

@&#INTRODUCTION@&#
Positioning systems are becoming more precise and more portable, and can now be easily embedded into smartphones and other personal devices. The combination of different positioning sources, such as signal strength for cellular phones, the visibility of wireless networks and more traditional satellite-based sources means that an address level precision can now be achieved even in low-cost and low-power devices. Satellite navigation and positioning systems are also seeing renewed interest, after years of stagnation: the deployment of a new global systems, Galileo, is currently being sponsored by the European Union, while regional systems such as the Chinese BeiDou (covering most of Asia), or the projected IRNSS in India are promising an even bigger increase in precision and capabilities.The ability to know one’s position with a certain degree of precision opened the way to the so-called location-aware applications, where users request personalized services based on their geographic position. Location-aware applications and services are now ubiquitous: from cell phone apps to intelligent car navigation systems, they are an integral part of our everyday life. In order to perform their task, location-aware applications usually require the user to disclose her exact position, in order to receive content and information relevant to the user’s location. Examples of such location-aware services are local advertising, traffic or weather information, or suggestions about points of interest (PoI) in the user’s surroundings [6]. Even existing services are now improved by the addition of location-based data: notable examples are social networks [18] or retail distribution [11].The ability to track a user’s position raises however deep privacy concerns, due to the sensitive nature of location information. In fact, a number of potentially sensitive professional and personal information about an individual can be inferred knowing only her presence at specific places and times [1,4]. Sensitive information such as religious beliefs, sexual preferences or health conditions can be inferred by looking at the mobility trace of an individual, when he attends service at a church or a mosque, visits specific establishments or the practice of a specialized doctor. Even anonymized position data sets (not containing name, phone number or other obvious references to the person) do not prevent precise identification of the user: in fact, just four mobility traces may be enough to identify her. The more users disclose their data, the more providers are able to profile them in an accurate way. This is for instance the case discussed by Wicker in [45], where a marketing company database model is used in conjunction with anonymous mobile phone location traces. While we have become so used to smartphones and location-aware services that it would be very hard for a lot of us to give up on them, it is also reasonable to predict that in the coming years users will demand better privacy safeguards for their information with respect to the service provider [40], and more specifically for location information [24,46]. The real challenge is therefore how to protect the user’s privacy without losing the ability to deliver services based on her location [35].A common application scenario of location-based services requires the service provider to learn when the user is close to some sensitive or interesting locations. This is the case, for instance, of “around-me” applications or security and military systems [6]. In this case, the location of the user should be kept private for as long as she is far from one of the areas of interest, and get disclosed to the service provider only when she enters one such area. A similar problem, known as private proximity testing has been studied in privacy research literature: Alice can test if she is close to Bob without either party revealing any other information about their location [30]. Narayanan et al. proposed a solution based on location tags (features of the physical environment) and relying on Facebook for the exchange of public keys [30]. Their protocol was later improved in efficiency by Saldamli et al. [36]. Location tags and proximity tests are also used in [19], as a way of providing local authentication, while [47] presents a secure handshake for communication between the two actors in proximity. The security of the basic proximity testing protocol has been further improved in [31]. In [43], Tonicelli et al. propose a solution for proximity testing based on pre-distributed data, secure in the Universal Composability framework. Finally, the problem of checking the proximity in a specific time is addressed in [42].In this paper we do not focus on proximity testing, but on a broader and more general problem: testing in a private manner whether a user is within one of a set of areas of arbitrary size and shape. By solving this problem and applying an intelligent conformation of areas, we can also solve the proximity testing problem (for one or multiple points simultaneously), and we are actually able to identify with some precision the distance of the user from the point of interest. Given the conceptual similarity of our problem with membership testing in sets, we base our solution on a novel modification of Bloom filters (BF). Bloom filters are a compact data structure that allows to compute whether an element is a member of the set the filter has been built upon, without knowledge of the set itself [2]. Bloom filters have already been used in privacy-preservation protocols, and they are particularly suited to be used in conjunction with the homomorphic properties of certain public key encryption schemes [21].In this paper we propose a modification of Bloom filters aimed at managing location information, and we present two private positioning protocols for privacy-preserving location-aware applications. Although a preliminary version of the data structure was presented by Palmieri et al. in [34] (which forms the basis of the current work), in this paper we analyze the security and efficiency properties of the structure, and we provide a much greater insight on the usefulness of the construction to actual application scenarios, also by means of practical, real-world examples based on a test implementation.The novel variant of Bloom filters we introduce, which we call spatial Bloom filter (SBF), is specifically designed to deal with location information. In particular, SBF combines multiple superimposed Bloom filters, in conjunction with an ad-hoc spatial representation, to provide a compact data structure for geographical information. Similarly to the classic Bloom filters, SBFs are also well suited to be used in privacy preserving applications, and we show this by presenting two protocols for private positioning. The protocols allow secure computation of location-aware information, while keeping the position of the user private: the only information disclosed to the provider is the user’s vicinity to specific points of interest or his presence within predefined areas. At the same time, the areas of interest are not disclosed to the user. Therefore, in both settings we do not assume any trust between the parties. The first protocol is based on a two-party setting, where communication happens directly between the user of a location-based service and the service provider. A more complex scenario is defined in the second protocol, that involves a three-party setting in which the service provider outsources to a third party the communication with the user. Both protocols achieve secure multi-party computation, where all parties have an interest in communicating, but want to keep their information private. In some cases, the privacy of the service provider can in fact be as important as that of the user: military and government applications are just the most immediate examples.Following the definition of the spatial bloom filter and of the private-positioning protocols, we discuss the security and the computational cost of the proposed schemes, as well the probabilistic and storage properties of the SBF. In order to prove the readiness of the solution for actual deployment, we present the results of a prototype implementation of the filter creation and query routines. We base our tests on the geographic data of two real geographical regions: the metropolitan area of the city of Brussels, and Belgium. For both cases, we estimate optimal sizes for the filter and values for other important parameters.Location privacy is a fundamental problem of the current age, where ubiquitous computing and unified communications are prevalent. The proposed solution is a solid step in the direction of more privacy-friendly services, and may enable privacy in both existing and future applications.

@&#CONCLUSIONS@&#
In this paper we present a novel privacy-preserving primitive, the spatial Bloom filter (SBF). Based on the classical Bloom filter, the SBF extends it by allowing multiple different sets to be encoded in a single filter. Spatial Bloom filters are particularly suited to store location information, when such information is represented in a set-based format: in order to show this, we provide a spatial representation system for geographic areas, which allows us to encode positioning information (such as the one produced by GPS devices) into an SBF.A main characteristic of spatial Bloom filters is to allow privacy-preserving location queries. In particular, we can encode into an SBF a list of sensitive areas and points located in a geographic region of arbitrary size. In many applications, such as law enforcement surveillance, military tracking or even location-based advertising, a service provider is interested in detecting the presence of a user within predetermined areas of interest, or his proximity to points of interest. In order to avoid constant tracking, however, the provider should be notified only when the current location of a user lies within those areas, and not otherwise. At the same time, the provider might have an interest in keeping the location of these sensitive areas hidden from the users (imagine, for instance, a tracking system for convicts sentenced to house arrest, or the surveillance of military bases). This is a typical secure multi-party computation problem: different players want to compute cooperatively the result of a function, but without disclosing their inputs to each other. Thanks to the properties of spatial Bloom filters, we can build a private location protocol that solves this problem.In this paper we propose two privacy-preserving protocols for location-based services based on spatial Bloom filters. The protocols use the homomorphic properties of a public key encryption scheme (such as Paillier’s cryptosystem) in order to guarantee both user’s and provider’s privacy: the provider only learns in which (predefined) area the user is, but not his exact position, and only if the user is within those areas; the user learns nothing. In the first protocol, the user communicates directly with the service provider. The second protocol, instead, provides an alternative for users unable to perform complex computational tasks (this might be the case, for instance, of embedded devices with limited capabilities). In the latter protocol most of the computation is outsourced to a third party, but without assuming any trust. In the paper we prove the security of both protocols, and we show the results of a test implementation, which allows us to establish the security margins of the construction. The results highlight the flexibility of spatial Bloom filters: we can in fact satisfy any desired privacy bound by calibrating the parameters of the filter, as shown in Figs. 5 and 7. We test the implementation using two real geographic areas: the city of Brussels, and Belgium. In the first case, the size of the filter can be as small as a few KB’s, while the whole Belgium can be covered with just a few MB’s. This results open the way to actual implementation of privacy-preserving protocols in location-aware applications, and address for the first time the problem of location privacy in the secure multi-party computation setting.Finally, in the discussion of the bounds to the density of spatial Bloom filters we pointed out that, in some limited and specific cases, the most sensitive areas in the filter may not hold the smallest false positives probability when the filter is exceedingly dense. We suggest a study of this phenomenon as future work, investigating the mathematical properties of the SBF primitive and focusing on the study of the number of hashes, the dimension of the filter, the number of areas and, in general, on SBF tuning and optimization.