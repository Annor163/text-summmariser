@&#MAIN-TITLE@&#
On the core of cost-revenue games: Minimum cost spanning tree games with revenues

@&#HIGHLIGHTS@&#
We study the core of cost-revenue games.A cost-revenue games has nonempty core if its dual game has a large core.Minimum cost spanning tree games with revenues may have an empty core.Minimum cost spanning tree games with revenues with low–high costs have nonempty cores.

@&#KEYPHRASES@&#
Game theory,Cost-revenue allocation problem,Cooperative game,Core,Minimum cost spanning tree problem,

@&#ABSTRACT@&#
In this paper, we analyze cost sharing problems arising from a general service by explicitly taking into account the generated revenues. To this cost-revenue sharing problem, we associate a cooperative game with transferable utility, called cost-revenue game. By considering cooperation among the agents using the general service, the value of a coalition is defined as the maximum net revenues that the coalition may obtain by means of cooperation. As a result, a coalition may profit from not allowing all its members to get the service that generates the revenues. We focus on the study of the core of cost-revenue games. Under the assumption that cooperation among the members of the grand coalition grants the use of the service under consideration to all its members, it is shown that a cost-revenue game has a nonempty core for any vector of revenues if, and only if, the dual game of the cost game has a large core. Using this result, we investigate minimum cost spanning tree games with revenues. We show that if every connection cost can take only two values (low or high cost), then, the corresponding minimum cost spanning tree game with revenues has a nonempty core. Furthermore, we provide an example of a minimum cost spanning tree game with revenues with an empty core where every connection cost can take only one of three values (low, medium, or high cost).

@&#INTRODUCTION@&#
In this paper, we study cost sharing problems arising from a general service by explicitly taking into account the revenues generated by this service. In addition, we apply our findings to minimum cost spanning tree (mcst) problems with revenues.The study of cost sharing problems combined with revenues has been considered in the literature before. Littlechild and Owen (1976) initiated this stream of literature within the framework of airport problems, where they provide an algorithm to compute the nucleolus of airport games. Brânzei, Iñarra, Tijs, and Zarzuelo (2006) is a recent follow-up to Littlechild and Owen (1976). Suijs, Borm, Hamers, Quant, and Koster (2005) analyze the allocation of costs and revenues within a public network communication structure within the context of cooperative games with transferable utility. Meertens and Potters (2006) provide an algorithm to compute the nucleolus of fixed tree games with revenues. Estévez-Fernández, Borm, Meertens, and Reijnierse (2009) focus on the analysis of the core of routing games with revenues.Here, we consider the situation in which a group of agents may cooperate to reduce the (possibly nonlinear) costs associated with the performance of a service. Each agent has some fixed revenue from the performance of the service. The question is how to share the net revenues obtained from cooperation among the agents. To solve this allocation problem, we use cooperative game theoretic techniques. By considering cooperation among the agents, we define a cost-revenue game where the value of a coalition is defined as the maximum net revenues that the coalition can obtain by means of cooperation. Note that with this definition, a coalition may profit from not allowing all its members to get the service that generates the revenues. In order to provide an allocation of the cost-revenue sharing problem at hand, we focus on the core of the cost-revenue game. The core of a game is the set of allocations of the total net revenues obtained by the cooperation of all agents that are stable in the sense that no group of agents has an incentive to deviate. In this paper, we characterize the class of cost-revenue games with a nonempty core under the assumption that cooperation among the members of the grand coalition grants the use of the service under consideration to all its members. It turns out that a cost-revenue game has a nonempty core for any vector of revenues that guarantees full service to all members of the grand coalition if, and only if, the dual game of the corresponding cost game has a large core.We apply the general results found for cost-revenue games to the study of mcst allocation problems with revenues. In an mcst allocation problem, a group of customers needs to be connected to a common information source; the customer needs a physical connection to the source (for instance, the cable for TV transmission) and this connection may be done either directly, or indirectly through other costumers. The cheapest way to connect all customers to the source is through a spanning tree that can be constructed by means of cooperation among the customers. The mcst allocation problem is, then, how to share the connection costs among the agents. Claus and Kleitman (1973) introduced this problem, which has been extensively analyzed in the literature. Granot and Huberman (1981) define mcst games and show that mcst games have a nonempty core. Granot and Huberman (1984) define allocation rules for mcst allocation problems which lead to elements of the core of the corresponding mcst games and show that, for some instances, some of these rules lead to the nucleolus of the associated game. Granot and Maschler (1998) generalize mcst games by studying spanning network games. In a spanning network situation, costs are associated to both edges and vertices and the costs may be negative (reflecting rewards). They provide sufficient conditions for non-emptiness of the core of spanning network games and characterize the set of essential coalitions. Besides, they study the computational complexity of the core and the nucleolus of this class of games, and the decomposition of the core and the nucleolus for some special cases. Kuipers, Solymosi, and Aarts (2000) provide a method to compute the nucleolus of an mcst game in polynomial time. Norde, Moretti, and Tijs (2004) show that mcst games posses population monotonic allocation schemes and provide an algorithm to find such a scheme. Tijs, Brânzei, Moretti, and Norde (2006) analyze a class of rules for mcst problems that are cost monotonic and induce monotonic allocation schemes. For a more extensive overview on the literature of mcst games, we refer to Moretti (2008). When the revenues obtained by the customers by being connected to the source are taking into account, we face an mcst allocation problem with revenues. In this paper, we define mcst games with revenues and we provide an example of an mcst game with revenues where it is profitable that all members of the grand coalition connect to the source and whose core is empty. In this example, the connection costs between two distinct players can only take one of three values: high, medium, or low cost. We show that if the connection costs can only take one of two values (high or low cost), then, the associated mcst game with revenues has a nonempty core under the assumption that it is profitable for the grand coalition to have all its members connected to the source.The remainder of the paper is organized as follows. Section 2 provides the basic definitions and terminology of graph theory and cooperative games used in this paper. In Section 3, we analyze cost-revenue games. Section 4 analyzes mcst games with revenues. We conclude with some further remarks in Section 5.A graphΓis a tuple(V,E)in which V is the finite set of nodes and E is the set of edges. A subgraph(V′,E′)ofΓis a graph withV′⊆VandE′={{v,w}∈E:v,w∈V′}; we denoteΓ|V′=(V′,E′).A path from node v tow,path(v,w), is a sequence of nodesv0,v1,…,vpwithv0=v,vp=wand, for eachl∈{0,…,p-1},{vl,vl+1}∈E. We denote byV(path(v,w))the set of nodes ofpath(v,w)and byE(path(v,w))the set of edges ofpath(v,w). Formally,V(path(v,w))={v0,v1,…,vp}andE(path(v,w))={{v0,v1},…,{vp-1,vp}}. A pathv0,…,vpis called simple if all nodes are distinct. A cycle,κ, is a sequence of nodesv0,v1,…,vpwithv0=vp,p⩾3,v0,v1,…,vp-1distinct nodes and, for eachl∈{0,…,p-1},{vl,vl+1}∈E. We denote byV(κ)the set of nodes ofκand byE(κ)the set of edges ofκ. Formally,V(κ)={v0,v1,…,vp-1}andE(κ)={{v0,v1},…,{vp-1,vp}}. Given a graphΓ, we denote byC(Γ)the set of cycles ofΓ.A subsetV′of V is called connected if, for everyv,w∈V′, there is a path from v to w using only nodes ofV′; we denote byC(Γ)the set of all connected subsets of V, formally,C(Γ)={V′⊆V:V′isconnected}. A subset U of V is called maximally connected or a component if U is connected and, for anyw∈V⧹U,U∪{w}is not connected. GivenV′⊆V, we denote byV|Γ′the set of components ofV′with respect toΓ.A graphΓ=(V,E)is a forest if it has no cycles and it is a tree if it is a connected forest. A rooted tree with rootv0∈Vis a tree where nodev0is singled out.A cooperative (transferable utility) game in characteristic function form is an ordered pair(N,v)where N is a finite set of players andv:2N→Ris the characteristic function satisfyingv(∅)=0. In general,v(S)represents the joint payoff that this coalition can obtain when its members decide to cooperate and is called the value of coalition S. A cooperative game can reflect costs or rewards. A game reflecting costs is denoted by a mapping c, while a game reflecting rewards is denoted by a mapping v. The following properties and definitions apply to games reflecting rewards.The central question within a cooperative framework is how to share among the players the revenuesv(N)that are obtained by means of cooperation. One of the most studied solution concepts in cooperative game theory is the core of a game, first introduced in Gillies (1953). The core of a game(N,v),Core(v), is the set of efficient allocations ofv(N)(exactlyv(N)is shared among the players) that are coalitionally rational (to which no coalition can reasonably object). Formally,1Here and further, for any vectorx∈RN, we denotex(S)≔∑i∈Sxi.1Core(v)=x∈RN:x(N)=v(N),x(S)⩾v(S)forallS⊂N.The upper core of a game(N,v),U(v), is the set of not necessarily efficient allocations that are coalitionally rational. Formally,U(v)=x∈RN:x(S)⩾v(S)forallS⊆N.Largeness of the core was first introduced in Sharkey (1982). The core of(N,v)is said to be large if, for everyx∈U(v), there is ay∈Core(v)withyi⩽xifor eachi∈N. The class of games with a large core has been characterized in Estévez-Fernández (2012) by means of minimal cover inequalities. Given a finite set N, a collectionC⊂2N⧹{∅,N}is called a minimal cover of N if the following two conditions are satisfied:(i)∪S∈CS=N;∪S∈C⧹{S′}S≠Nfor everyS′∈C.By condition (i), it follows thatCcovers N and by condition (ii), we have that no element ofCis superfluous. We denote byMC(N)the set of minimal covers of N. LetP(N)denote the set of partitions of N. Note thatP(N)⧹{{N}}⊆MC(N).Given a finite set N andC∈MC(N), for everyi∈N, we denote byξ(C,i)the number of times that i is “extra covered” inC; formally,ξ(C,i)=|{S∈C:i∈S}|-1. We denote byE(C)the set of elements of N that are “extra covered” byC; formally,E(C)={i∈N:ξ(C,i)>0}.GivenC∈MC(N)withE(C)≠∅, a vectorμ∈R+2E(C)⧹{∅}is said to be a vector of minimal cover balanced weights (mc-balanced vector) forCif(2.1)∑S∈2E(C)⧹{∅}μSeS=∑i∈E(C)ξ(C,i)e{i}witheR∈RNdefined byeiR=1ifi∈RandeiR=0ifi∉Rfor everyR∈2N⧹{∅}. We denote byM(C)the set of mc-balanced vectors forC. Trivially,M(C)≠∅ifE(C)≠∅. It follows that(2.2)∑S∈CeS=eN+∑S∈2E(C)⧹{∅}μSeSfor everyμ∈M(C). Note that ifE(C)=∅, then,Cis a non-trivial partition of N and∑S∈CeS=eN. Given a game(N,v)and a minimal coverC∈MC(N), the minimal cover inequality associated withCis(2.3)∑S∈Cv(S)⩽v(N)+maxμ∈M(C)∑S∈2E(C)⧹{∅}μSv(S).Theorem 2.1Estévez-Fernández, 2012A game(N,v)has a large core if, and only if, all minimal cover inequalities are satisfied.Macula (1995) provides the number of minimal covers of a setNwith|N|=n, which is∑k=2n1k!∑m=kαk2k-k-1m-km!S(n,m)whereαk=min{n,2k-1}andS(n,m)is the Stirling number of the second kind, which is given byS(n,m)=1m!∑l=1m(-1)m-lmlln. However, in some situations, analyzing largeness of the core of a game may be easier. Let(N,v)be a game, a coalitionS⊆Nis called essential if, for every non-trivial partition〈S1,…,St〉ofS,v(S)>∑l=1tv(Sl). We denote byEss(v)the set of essential coalitions of(N,v). Notice that only essential coalitions are needed for the description of both the core and the upper core of a game. Therefore, following the comments in the Final Remarks of Estévez-Fernández (2012), we can rewrite Theorem 2.1 as follows:A game(N,v)has a large core if, and only if,∑S∈Cv(S)⩽v(N)+maxμ∈M(C)∑S∈2E(C)⧹{∅}μSv(S)for everyC∈MC(N)such thatC⊆Ess(v).A game(N,v)is said to be exact (Schmeidler, 1972) if, for everyS⊂N, there existsx∈Core(v)such thatx(S)=v(S).Given a forestΓ=(N,E), the game(N,v)is said to be forest-essential with respect to2In fact, a forest-essential game with respect toΓis a game with the total dependency property (see Kuipers et al. (2000)) and where the grand coalition is stable (see Derks & Kuipers (1997)).2Γifv(N)=max〈S1,…,St〉∈P(N)∑l=1tv(Sl)and all essential coalitions are connected with respect toΓ, (Ess(v)⊆C(Γ)). IfΓis a tree, we say that(N,v)is tree-essential with respect toΓ.Let(N,c)be a cost game. The anti core of(N,c),ACore(c), is the set of efficient allocations ofc(N)to which no coalition can reasonably object. Formally,ACore(c)=x∈RN:x(N)=c(N),x(S)⩽c(S)forallS⊂N.The lower core of a cost game(N,c),L(v), is the set of not necessarily efficient allocations that are coalitionally rational. Formally,L(c)=x∈RN:x(S)⩽c(S)forallS⊆N.Following the definition of largeness of the core for reward games, we say that the cost game(N,c)has a large anti core if, for anyx∈L(c), there is ay∈ACore(c)withxi⩽yifor eachi∈N.The dual game of(N,c),(N,c∗), is defined, for everyS⊆N, byc∗(S)=c(N)-c(N⧹S).It is easily seen thatACore(c)=Core(c∗).In this section, we analyze situations in which a group of agents cooperate in order to obtain a higher joint revenue. Each time a coalition decides to cooperate, an additive reward is obtained and a (possibly nonadditive) cost is generated. The problem at hand is how to share the net revenue that is obtained by the grand coalition among the agents. We define cost-revenue games and concentrate on the study of their cores. It turns out that a cost-revenue game has a nonempty core for any vector of revenues that provides maximal cooperation if, and only if, the dual game of the cost game has a large core.Let(N,c)be a cost game. Consider the case in which, next to the costs that a coalition must confront, the coalition also obtains revenues when it decides to cooperate. Letb∈R+Nbe the vector of revenues, wherebiis the revenue that player i generates if i gets the service under consideration. Then, the total revenue that a coalitionS⊆Ncan obtain by cooperation isπb(S)=b(S)-c(S).Notice that, due to the revenue structure of the game, it may be more profitable for coalition S not to form as a whole. Given a cost game(N,c)and a vector of revenuesb∈R+N, we define the cost-revenue game,(N,vb), for everyS⊆N, byvb(S)=maxR⊆Sπb(R).The following example illustrates the computation of cost-revenues games and shows that full participation of the grand coalition (vb(N)=πb(N)) is relevant in order to have non-emptiness of the core of the corresponding cost-revenue game. In order to exclude situations like this example we will introduce later on Assumption 3.1.Example 3.1Consider the six players cost game(N,c)with characteristic function defined byif|S|=1,c(S)=2ifS⊂{1,2,3},1otherwise;if|S|=2,c(S)=4ifS⊂{1,2,3},3ifS∈{{1,6},{2,5},{3,4}},2otherwise;if|S|=3,c(S)=6ifS={1,2,3},4ifS∈{{1,2,5},{1,2,6},{1,3,4},{1,3,6},{2,3,4},{2,3,5}},3otherwise;if|S|=4,c(S)=5ifS∈{{1,2,3,4},{1,2,3,5},{1,2,3,6}},4otherwise;if|S|=5,c(S)=5;ifS=N,c(S)=6.Letb=(2,2,2,0,0,0). The corresponding cost-revenue-game is given byvb(S)=1if{1,2,4}⊆S,or{1,3,5}⊆S,or{2,3,6}⊆S,0otherwise.Note thatvb(N)=1>0=b(N)-c(N). Below, we explain how to compute the value of coalition{1,2,4}.vb({1,2,4})=max{πb({∅}),πb({1}),πb({2}),πb({4}),πb({1,2}),πb({1,4}),πb({2,4}),πb({1,2,4})}=max{0,2-2,2-2,0-1,4-4,2-2,2-2,4-3}=max{0,0,0,-1,0,0,0,1}=1.Note that(N,c)has a nonempty anti core since(1,1,1,1,1,1)∈ACore(c). However,(N,vb)has an empty core. To show this, suppose thatx∈Core(vb), then,1⩽x1+x2+x4,1⩽x1+x3+x5,1⩽x2+x3+x6,0⩽x4+x5+x6. By adding all these equations, we obtain3⩽2x(N)=2vb(N)=2, establishing a contradiction. Here, the first equality follows fromx∈Core(vb).As we have seen in the example above, when not all members of the grand coalition get the service that generates the revenues, the core of the cost-revenue game may be empty. For that reason, we assume3This assumption is however not mandatory for having a nonempty core. Think of a situation withvb(N)=0.3from here that it is profitable to form the grand coalition.Assumption 3.1(3.1)vb(N)=πb(N)=b(N)-c(N).Taking into account thatπb(N)=maxR⊆N{b(R)-c(R)}, it follows that Assumption 3.1 is equivalent to(3.2)b(S)⩾c∗(S)foreveryS⊆N.This is becausevb(N)=b(N)-c(N)is equivalent tob(N)-c(N)⩾b(R)-c(R)for everyR⊂N, which, takingR=N⧹S, reduces to Eq. (3.2).Assumption 3.1 may seem somehow restrictive. It ensures that the grand coalition will effectively form without leaving any player behind. The following example shows that non-emptiness of the anti core of the cost game is not sufficient to have non-emptiness of the core of the corresponding cost-revenue game, even when the cost game is exact.4Similarly as in (reward) games, a cost game is exact if, for everyS⊂N, there is anx∈ACore(c)such thatx(S)=c(S).4Therefore, revenues have a real impact in the structure of the core of cost-revenue games. It further shows why the gamevbof Example 3.2 has an empty core; there are no elements ofAcore(c)that are dominated by b.Consider the five players exact cost game(N,c)with5Byconvwe refer to the convex hull.5ACore(c)=conv{(0,0,1,2,0),(1,1,0,0,1)}, and letb=(1,1,1,1,0). In Table 1, we provide the coalitional values of(N,c),(N,c∗),(N,b)and(N,vb).Note thatb(S)⩾c∗(S)for everyS⊆N. However,(N,vb)has an empty core. To show this, suppose thatx∈Core(vb), then,1⩽x1+x2+x3+x4,1⩽x1+x2+x3+x5,1⩽x1+x2+x4+x5,1⩽x1+x3+x4+x5,1⩽x2+x3+x4+x5. By adding all these equations, we obtain5⩽4x(N)=4vb(N)=4, establishing a contradiction. Here, the first equality follows fromx∈Core(vb).The first result of this section states that if the core of a cost-revenue game is nonempty, then, its core can be expressed in terms of the vector of revenues and the anti core of the cost game.Lemma 3.1Let(N,c)be a cost game, letb∈R+Nbe a vector of revenues satisfyingAssumption 3.1, and let(N,vb)be the corresponding cost-revenue game. Then,Core(vb)=b-y:y∈ACore(c)withy⩽b.We first show “⊆”. IfCore(vb)=∅, we are done. Letx∈Core(vb)and lety=b-x, we have to show that (i)y∈ACore(c)and (ii)y⩽b.(i)LetS⊂N. We haveb(S)-c(S)⩽maxR⊆Sb(R)-c(R)=vb(S)⩽x(S),where the last inequality follows becausex∈Core(vb). Therefore,(3.3)y(S)=b(S)-x(S)⩽c(S).Furthermore,b(N)-c(N)=vb(N)=x(N),where the first equality follows by Assumption 3.1 and the second one becausex∈Core(vb). This gives(3.4)y(N)=b(N)-x(N)=c(N).By Eqs. (3.3) and (3.4), we have thaty∈ACore(c).Core elements are in particular imputations, so for everyi∈N,xi⩾vb({i})⩾0and, therefore,yi=bi-xi⩽bifor everyi∈N.Next, we show “⊇”. If there does not exist ay∈ACore(c)satisfyingy⩽b, then, we are done. Letx=b-ywithy∈ACore(c)andy⩽b. We have(3.5)x(N)=b(N)-y(N)=b(N)-c(N)=vb(N),where the second equality follows fromy∈ACore(c)and the third one is a direct consequence of Assumption 3.1. Furthermore, for everyS⊂N, letRS⊆Sbe such thatvb(S)=πb(RS)=b(RS)-c(RS). We have that(3.6)x(S)⩾x(RS)=b(RS)-y(RS)⩾b(RS)-c(RS)=vb(S),where the first inequality is a direct consequence ofx=b-y⩾0andRS⊆S, and the second inequality follows byy∈ACore(c). Eqs. (3.5) and (3.6) imply thatx∈Core(vb). □The following result characterizes the class of cost games in which, for any vector of revenues satisfying Assumption 3.1, it follows that the corresponding cost-revenue game has a nonempty core.Theorem 3.2Let(N,c)be a cost game. Then,(N,vb)has a nonempty core for anyb∈R+NsatisfyingAssumption 3.1if, and only if,(N,c∗)has a large core.We first show the “if” part. Let(N,c∗)have a large core. We have to show that(N,vb)has a nonempty core for anyb∈R+Nsatisfying Assumption 3.1. Such a b satisfiesb(S)⩾c∗(S)for everyS⊆Nand, therefore,b∈U(c∗). By largeness of the core of(N,c∗), there is ayb∈Core(c∗)=ACore(c)withb⩾yb. By Lemma 3.1, it follows thatb-yb∈Core(vb).In order to show the “only if” part, let(N,c)be such that(N,vb)has a nonempty core for everyb∈R+Nsatisfying Assumption 3.1. We have to show that(N,c∗)has a large core. Letb∈U(c∗). Then, b satisfies Assumption 3.1 sinceb(S)⩾c∗(S)for everyS⊆N. Choose anyx∈Core(vb). First, we have thatb⩾b-xsincex⩾0by non-negativity of(N,vb); second,b-x∈ACore(c)=Core(c∗)by Lemma 3.1. Therefore,(N,c∗)has a large core. □The following example illustrates that largeness of the core of(N,c∗)and largeness of the anti core of(N,c)can be unrelated.Example 3.3Consider the cost game(N,c)given in Table 2.It can be easily seen thatCore(c∗)=ACore(c)={(1,1,1,1)}. Since, for anyx∈U(c∗),xi⩾1for everyi∈N, the core of(N,c∗)is large. On the other hand, it can be checked thatx=(1,1.1,0.9,0.9)∈L(c). Therefore, the anti core of(N,c)is not large sincex2=1.1>1=y2withy=(1,1,1,1)and, hence, there is noy∈ACore(c)={(1,1,1,1)}withxi⩽yifor everyi∈N.In this section, we study minimum cost spanning tree (mcst) games with revenues. First, we provide an example of an mcst game with revenues that has an empty core. In this example, the connection cost between two different villages can only take one out of three possible values (low, medium, and high cost). Therefore, the arising question is whether we can find an mcst game with revenues with an empty core in which the connection cost between two different villages can only take one of, at most, two possible values (low and high cost). We call such games 2-mcst games with revenues. Second, we answer this question by showing that, under Assumption 3.1, every 2-mcst game with revenues has a nonempty core.LetN={1,2,…,n}denote the set of villages that have to be connected to a source. LetN0=N∪{0}, where 0 denotes the source. LetC=(cij)be anN0×N0-matrix, wherecij⩾0, for everyi,j∈N0, represents the costs to go from village i to village j. Since the cost matrix is nonnegative, it turns out that the graph that connects all villages to the source with a minimum cost is a tree. Throughout this article we assume that:(i)cii=0foralli∈N0,(ii)cij=cjiforalli,j∈N0(symmetry).The network(N0,C)is usually represented by the complete graph onN0with costscijon the edge between nodes i and j.Given a network(N0,C)and a subsetS⊆N, we denoteS0≔S∪{0}. A tree(V,E)is called a spanning tree of S ifV=S0. LetT(S)denote the set of all spanning trees of S and, forΓ=(S0,E)∈T(S), letc(Γ,S)denote the cost associated with the tree, formally,c(Γ,S)=∑{i,j}∈Ecij.By associating each village in N with a player, an mcst game,(N,c), is defined, for everyS⊆N, byc(S)≔minΓ∈T(S)c(Γ,S).We add revenues to the situation by assuming that if villagei∈Nis connected to the source, a revenuebi⩾0is obtained. An mcst problem with revenues is denoted by a tuple(N0,C,b)and the corresponding mcst game with revenues by(N,vb). Note that, under Assumption 3.1, we havevb(N)=b(N)-c(N).Example 4.1Consider the mcst problem with revenues represented in Fig. 1, in which the numbers at the edges represent the connection costs and the boldfaced numbers at the nodes represent the revenues.The value of coalition{1,2}is computed as follows:vb({1,2})=max0,b1-c({1}),b2-c({2}),b1+b2-c({1,2})=max0,6-5,2-10,6+2-10=max0,1,-8,-2=1.The associated mcst game with revenues is given in Table 3.It can be checked thatCore(vb)=conv{(3,0,4),(1,2,4),(1,0,6)}.In general, mcst games with revenues satisfying Assumption 3.1 can have an empty core as the following example illustrates.Example 4.2Consider the mcst network(N0,C)withN={1,2,3,4,5,6,7}and cost matrix defined bycij=0ifi=j,3if{i,j}∈{{0,1},{1,2},{1,3},{1,4},{2,7},{3,6},{4,5}},4if{i,j}∈{{0,2},{0,3},{0,4},{2,5},{3,7},{4,6}},5otherwise.Note that(N,c∗)does not have a large core by considering the minimal coverC={{1,2,4,5},{1,2,3,7},{1,3,4,6}}. Sincec∗({1,2,4,5})=c∗({1,2,3,7})=c∗({1,3,4,6})=10,c∗(N)=21, the inequalityc∗({1,2,4,5})+c∗({1,2,3,7})+c∗({1,3,4,6})=30>21+8=c∗(N)+maxμ∈M(C)∑S∈2E(C)⧹{∅}μSc∗(S),shows the non-largeness of the core ofc∗. As an optimal solution to the involved maximization problem above, the vectorμˆcan be chosen to be defined byμˆS=1ifS∈{{1,2,3},{1,4}}andμˆS=0otherwise. It can be checked thatb=(1,2,2,2,5,5,5)satisfies Assumption 3.1 and(N,vb)has an empty core sincevb({4})=vb({1,2})=vb({1,3})=0,vb({2,5,7})=vb({3,6,7})=vb({4,5,6})=vb(N)=1and, therefore, ifx∈Core(vb), then,0⩽x4,0⩽x1+x2,0⩽x1+x3,1⩽x2+x5+x7,1⩽x3+x6+x7,1⩽x4+x5+x6and∑i=17xi=1. By adding the inequalities, we obtain3⩽2∑i=17xi=2, establishing a contradiction.Every connection cost in the mcst network of Example 4.2 can take one of three given values:3,4, or 5. We now will analyze the case in which connection costs between two different villages in an mcst network can take, at most, two values: low and high cost. It will turn out that, under Assumption 3.1, the corresponding mcst game with revenues always has a nonempty core. We refer to this type of mcst network as a 2-mcst network. Formally,(N0,C)is a 2-mcst network if, for everyi,j∈N0,i≠j,cij∈{k1,k2}with0⩽k1⩽k2.We will show non-emptiness of the core of 2-mcst games with revenues under Assumption 3.1. Their duals will play a crucial role. Therefore, we first provide some results on the dual game of a 2-mcst game. The first result states that the dual game of an mcst game is tree-essential with respect to any optimal treeΓ^for the grand coalition. It is based on results from Kuipers (1994) (see Theorem 4.4 in Kuipers (1994) and comments below) and the proof is, therefore, omitted.Theorem 4.1Kuipers, 1994Let(N0,C)be an mcst network and let(N,c)be the associated mcst game. LetΓ^be an optimal mcst for N. Then, the associated dual game(N,c∗)is forest-essential with respect toΓ^|N.In order to describe the collection of essential coalitions with respect to(N,c∗), we introduce some extra notation. Given a 2-mcst network(N0,C), we define thek1-graphΓk1byN0,Ek1, whereEk1={i,j}⊂N0:cij=k1.LetFk1⊆Ek1be the set of edges that belong to any mcst for N, i.e.,Fk1=Ek1ifΓk1isaforest,Ek1⧹∪κ∈C(Γk1)E(κ)ifΓk1isnotaforest.With minor abuse of language, we write essential coalition when we refer to an essential coalition with respect to(N,c∗). By Theorem 4.1, all essential coalitions are connected in every mcst for N. SinceFk1is contained in any mcst for N, every connected coalition inFk1is also connected in any mcst for N. We will now analyze those coalitions that are connected in every mcst for N and that have a nonempty intersection with∪κ∈C(Γk1)V(κ).Lemma 4.2Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j, and letS⊆NwithS∈C(Γk1). If there existsκ∈C(Γk1)with1<|S∩V(κ)|<|V(κ)|, then,S∉C(Γ^|N)for at least one mcstΓ^for N.Letκ∈C(Γk1)with1<|S∩V(κ)|<|V(κ)|. Leti,j∈S∩V(κ)and letl∈V(κ)⧹S. Then, there are two disjoint paths inκconnecting i and j, one of them visiting l. Fix an edge e on the path that does not visit l. Using Kruskal’s algorithm, we can find an mcstΓ^containing all edges ofκwith the exception of e. The only path connecting i and j that uses only edges inE(Γ^)visits village l. Therefore, S is not connected inΓ^. □As an immediate consequence of Theorem 4.1 and Lemma 4.2, we have the following corollary: if an essential coalition has a nonempty intersection with the set of nodes of a cycle of thek1-graph, then, the intersection is either a singleton, or the set of nodes of the cycle.Corollary 4.3Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j, let(N,c)be the associated 2-mcst game, and letS∈Ess(c∗). If there existsκ∈C(Γk1)withS∩V(κ)≠∅, then, eitherS∩V(κ)=V(κ), orS∩V(κ)={i}for somei∈S.Given a 2-mcst network(N0,C)withk1-graphΓk1and 2-mcst game(N,c), as a result of Corollary 4.3, we have that if two cyclesκ1,κ2∈C(Γk1)share two nodes, then, an essential coalition, S, of the dual game satisfies that either|S∩(V(κ1)∪V(κ2))|⩽1, orV(κ1)∪V(κ2)⊆S. Following this, we define an equivalence relation in order to describe the set of essential coalitions of the dual game of a 2-mcst game.LetΓ=(N0,E)be a graph and letκ1,κ2∈C(Γ). We say thatκ1andκ2are related,κ1Rκ2, if|V(κ1)∩V(κ2)|⩾2. The binary relation R is reflexive and symmetric, but does not need to be transitive. Therefore, we consider the transitive closure ofR,R+, which is an equivalence relation. We denote by[κ]the equivalence class ofκ∈C(Γ)with respect toR+and by[C(Γ)]the set of equivalence classes inΓ, so[C(Γ)]={[κ]:κ∈C(Γ)}. Givenκ∈C(Γ), we denoteV([κ])=∪κ̃∈[κ]V(κ̃)andE([κ])=∪κ̃∈[κ]E(κ̃).Let(N0,C)be a 2-mcst network. We defineE(N0,C)byE(N0,C)=S∈C(Γk1):S∩V([κ])∈0,1,V([κ])forevery[κ]∈[C(Γk1)].The following result is a direct consequence of Theorem 4.1 and Corollary 4.3 and the proof is, therefore, omitted.Corollary 4.4Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j, and let(N,c)be the associated 2-mcst game. Then,Ess(c∗)⊆E(N0,C).Another crucial result states that if two essential coalitions have a nonempty intersection, then, the sum of their dual values equals the sum of the dual values of their union and intersection. Due to the technicality of the proof, it is postponed to Appendix A.Lemma 4.5Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j, and let(N,c)be the associated 2-mcst game. Then,c∗(T1)+c∗(T2)=c∗(T1∩T2)+c∗(T1∪T2)for everyT1,T2∈E(N0,C)withT1∩T2≠∅.We can finally provide the main result of this Section.Theorem 4.6Every 2-mcst game with revenues satisfyingAssumption 3.1has a nonempty core.Let(N0,C)be a 2-mcst network and let(N,c)be the associated 2-mcst game. Letb∈R+Nbe a vector of revenues satisfying Assumption 3.1. By Theorem 3.2, it suffices to show that(N,c∗)has a large core. By Theorem 2.1, we have to show that, for allC∈MC(N),∑T∈Cc∗(T)⩽c∗(N)+maxμ∈M(C)∑T∈2E(C)⧹{∅}μTc∗(T).As already mentioned in Section 2, we can restrict our analysis to minimal covers whose elements are essential coalitions of(N,c∗). Therefore, fixC∈MC(N)such thatT∈Ess(c∗)for everyT∈C. By Corollary 4.4,T∈E(N0,C)for everyT∈C. LetC={T1,…,Tl1,…,Tlr-1,…,Tlr}be ordered as follows:T1∩T2≠∅,…,∪l=1l1-1Tl∩Tl1≠∅,∪l=1l1Tl∩∪l=l1+1lrTl=∅and for everys∈{2,…,r},Tls-1+1∩Tls-1+2≠∅,…,∪l=ls-1+1ls-1Tl∩Tls≠∅and∪l=ls-1+1lsTl∩∪l=ls+1lrTl=∅(see Fig. 2). Note that∪l=1l1Tl,…,∪l=lr-1+1lrTlis a partition of N. We have∑l=1lrc∗(Tl)=∑l=1l1c∗(Tl)+∑l=l1+1l2c∗(Tl)+⋯+∑l=lr-1+1lrc∗(Tl)=c∗∪l=1l1Tl+∑l=1l1-1c∗∪l¯=1lTl¯∩Tl+1+⋯+c∗∪l=lr-1+1lrTl+∑l=lr-1+1lr-1c∗∪l¯=lr-1+1lTl¯∩Tl+1=∑s=1rc∗∪l=ls-1+1lsTl+∑s=1r∑l=ls-1+1ls-1c∗∪l¯=ls-1+1lTl¯∩Tl+1⩽c∗(N)+∑s=1r∑l=ls-1+1ls-1c∗∪l¯=ls-1+1lTl¯∩Tl+1⩽c∗(N)+maxμ∈M(C)∑T∈2E(C)⧹{∅}μTc∗(T),in which the second equality is a consequence of successively applying Lemma 4.5 and the first inequality is valid because∪l=1l1Tl,…,∪l=lr-1+1lrTlis a partition of N and(N,c∗)is forest-essential with respect to any mcstΓfor N by Theorem 4.1. Finally, the last inequality follows becauseμdefined byμT=1for everyT=∪l¯=ls-1+1lTl¯∩Tl+1withs∈{1,…,r}andl∈{ls-1+1,…,ls-1}andμT=0otherwise, is an mc-balanced vector forC. □It remains an open and very interesting question whether it is possible to verify Assumption 3.1 for an mcst game with revenues in polynomial time. To conclude this Section, note that the cost game in Example 3.1 is a 2-mcst game withk1=1,k2=2, and C defined bycij=1if{i,j}∈{{0,4},{0,5},{0,6},{1,4},{1,5},{2,4},{2,6},{3,5},{3,6}}andcij=2otherwise. Therefore, Assumption 3.1 is, indeed, necessary in Theorem 4.6.Littlechild and Owen (1976) were the first to analyze cost problems arising from a general service facility by taking into account the revenues that the service generates. They restricted their study to the framework of airport problems, with a more recent follow up by Brânzei et al. (2006). Meertens and Potters (2006) consider fixed tree games with revenues. In both settings, the underlying cost game is concave6A cost game(N,c)is concave if, for everyi∈Nand everyS⊂T⊆N⧹{i},c(S∪{i})-c(S)⩾c(T∪{i})-c(T).6and, therefore, its dual game is convex7A game(N,v)is convex if, for everyi∈Nand everyS⊂T⊆N⧹{i},v(S∪{i})-v(S)⩽v(T∪{i})-v(T).7and has a large core (see Sharkey, 1982).Granot and Maschler (1998) consider spanning network situations. These situations generalize mcst situations in the sense that they allow for ‘Steiner-points’ (vertices at which no players are resided), costs can be negative and can be located at vertices, and coalitions are allowed to use arcs and vertices not adjacent to their residences (making the associated game monotone). Unlike in our setting, a coalition must connect each of its members to the root. They provide conditions under which the core of the associated game is nonempty (Theorem 4.13 in their paper). Their condition that the grand coalition connects all vertices to the root is similar to our Assumption 3.1, however their assumption that each edge (including its end point) used by the grand coalition has nonnegative costs quite differs from our situation. The nature of our model implies that each branch of an optimal tree has nonnegative benefits. This makes both approaches difficult to compare.Estévez-Fernández et al. (2009) consider routing games with revenues. Routing games are well-known and broadly studied in the literature. A routing game is similar to a traveling salesman game (see Potters, Curiel, & Tijs, 1992), except that a proper coalition cannot choose the order of the visits of the salesman, but must use the order induced by an optimal order to visit all cities. Estévez-Fernández et al. (2009) show that routing games with revenues have a nonempty core under the assumption that cooperation among the members of the grand coalition grants that the optimal tour will go through all cities. Example 5.1 illustrates that the dual game of a routing game does not always have a large core. This might seem in contradiction with Theorem 3.2 in this article. In Example 5.1, we provide an explanation for this phenomenon.Example 5.1Consider the routing problem with revenues(N0,C,b)withN={1,2,3,4,5},,b=(10,10,10.5,10,10), and optimal tourπˆ:0-1-2-3-4-5-0. In Table 4, we provide the coalitional values of the routing game(N,cπˆ), the corresponding dual game(N,cπˆ∗),(N,b)and(N,vπˆb).Note thatb(S)⩾cπˆ∗(S)for everyS⊆N. Still,(N,vπˆb)has an empty core. To show this, suppose thatx∈Core(vπˆb); then,15⩽x1+x4,8⩽x2, and0⩽x3+x5. By adding all these equations we obtain23⩽∑i=15xi=vπˆb(N)=22.5establishing a contradiction. Therefore,Core(vπˆb)=∅, and, consequently,(N,cπˆ∗)does not have a large core.Hence, Assumption 3.1 is insufficient to ensure non-emptiness of the core for routing games with revenues. Estévez-Fernández et al. (2009) show that non-emptiness of the core is guaranteed if in the corresponding traveling salesman problem with revenues, it is optimal for N to visit all cities and to visit them in increasing order. This boils down tob(S)⩾cts∗(S)for everyS⊆N, where(N,cts)denotes the traveling salesman game corresponding to distance matrix C. In Table 5, we provide the coalitional values of the traveling salesman game(N,cts), the corresponding dual gameN,cts∗, and(N,b). Note that without a prescribed order it is more profitable to only visit cities{1,2,3,4}(in order 0–2–1–4–3–0) than to visit all cities in N. Besides, note that b is not an element of the upper core of(N,cts∗)sinceb3=10.5<11=cts∗({3})andb5=10<12=cts∗({5}).Note that Example 5.1 illustrates that Assumption 3.1 is not a mandatory condition for non-emptiness of the core of cost games with revenues.In this appendix, we show the proof of Lemma 4.5 in Section 4. Before giving the proof, we provide three auxiliary lemmas.Lemma A.1Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j, and let(N,c)be the corresponding 2-mcst game. Then,c∗(T)=|T|k1-(k2-k1)∑i∈Tj∈N0⧹T:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T={i}-1for everyT∈E(N0,C).By the definition ofE(N0,C),T∈C(Γk1). LetU∈N0|Γk1be the component ofΓk1withT⊆U. We havec∗(T)=c(N)-c(N⧹T)=k1|N|-k1|N0|Γk1|-1+k2|N0|Γk1|-1-k1N⧹T-k1(|(N0⧹T)|Γk1|-1)+k2(|(N0⧹T)|Γk1|-1)=k1|T|-(k2-k1)|(N0⧹T)|Γk1|-|N0|Γk1|=k1|T|-(k2-k1)|(U⧹T)|Γk1|-1=k1|T|-(k2-k1)∑i∈Tj∈U⧹T:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T={i}-1=k1|T|-(k2-k1)∑i∈Tj∈N0⧹T:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T={i}-1,in which the fourth equality is a direct consequence ofT⊆UwithU∈N0|Γk1; the fifth equality follows because the elements of(U⧹T)|Γk1are those components that we obtain when the edges between T andU⧹Tare broken; the final equality is a direct consequence ofT⊆Uand{i,j}⊆Ufor every{i,j}∈Ek1withi∈T. □Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j. For any disjoint pairT1,T2∈E(N0,C)of essential coalitions we have(i)If|V([κ])∩T1|=|V([κ])∩T2|=1for some[κ]∈[C(Γk1)], then,V([κ])∩T1=V([κ])∩T2;T1∪T2,T1∩T2∈E(N0,C).(i)On the contrary, suppose thatV([κ])∩T1={i1}andV([κ])∩T2={i2}withi1≠i2. Since|V([κ])∩T1|=1and|V([κ])∩T2|=1, we havei1∈T1⧹T2andi2∈T2⧹T1. SinceV([κ])∈C(Γk1), there exists a path connectingi1andi2,path(i1,i2), using only edges inE([κ]).Letj∈T1∩T2; by connectivity ofT1, there exists a path,path(i1,j), connectingi1and j inΓk1using nodes ofT1. Because|V([κ])∩T1|=1, no edge ofpath(i1,j)belongs toE([κ]). Analogously, there exists a path,path(j,i2), connecting j andi2inΓk1using nodes ofT2and such that no edge in the path belongs toE([κ]). Combiningpath(i1,j)andpath(j,i2), we can construct a path connectingi1andi2,path(i1,i2)∗, without using any edge inE([κ]). Combining the pathspath(i1,i2)andpath(i1,i2)∗, there exists a cycleκ¯∈C(Γk1)withi1,i2∈V([κ¯])and[κ]≠[κ¯]. This establishes a contradiction sincei1,i2∈V([κ])and, therefore,[κ]=[κ¯].First, note thatT1∪T2∈C(Γk1)sinceT1,T2∈C(Γk1)withT1∩T2≠∅. Moreover, for every[κ]∈[C(Γk1)], we have thata.ifV([κ])⊆T1(analogously,V([κ])⊆T2), then,V([κ])⊆T1∪T2;ifV([κ])∩T1={i}for somei∈T1and|V([κ])∩T2|=1(analogously,V([κ])∩T2={i}for somei∈T2and|V([κ])∩T1|=1), then,V([κ])∩T2={i}by (i) of this lemma andV([κ])∩(T1∪T2)={i};ifV([κ])∩T1={i}for somei∈T1andV([κ])∩T2=∅(analogously,V([κ])∩T2={i}for somei∈T2andV([κ])∩T1=∅), then,V([κ])∩(T1∪T2)={i};ifV([κ])∩T1=∅andV([κ])∩T2=∅, then,V([κ])∩(T1∪T2)=∅.Therefore,T1∪T2∈E(N0,C).Second, note that the intersection of two connected sets is connected and, therefore,T1∩T2∈C(Γk1). Moreover, for every[κ]∈[C(Γk1)], we haveifV([κ])∩T1=∅(analogously,V([κ])∩T2=∅), then,V([κ])∩(T1∩T2)=∅;ifV([κ])∩T1={i}for somei∈T1and|V([κ])∩T2|=1(analogously,V([κ])∩T2={i}for somei∈T2and|V([κ])∩T1|=1), then,V([κ])∩T2={i}by (i) of this lemma andV([κ])∩(T1∩T2)={i};ifV([κ])∩T1={i}for somei∈T1andV([κ])⊆T2(analogously,V([κ])∩T2={i}for somei∈T2andV([κ])⊆T1), then,V([κ])∩(T1∩T2)={i};ifV([κ])⊆T1andV([κ])⊆T2, then,V([κ])⊆T1∩T2.Therefore,T1∩T2∈E(N0,C).□Let(N0,C)be a 2-mcst network withcij∈{k1,k2},0⩽k1⩽k2, for everyi,j∈N0withi≠j, and letT1,T2∈E(N0,C)withT1∩T2≠∅. Then,(i)∑i∈T1⧹T2|{j∈T2⧹T1:{i,j}∈Fk1}|+∑i∈T2⧹T1|{j∈T1⧹T2:{i,j}∈Fk1}|=0;∑i∈T1|{j∈N0⧹T1:{i,j}∈Fk1}|+∑i∈T2|{j∈N0⧹T2:{i,j}∈Fk1}|=∑i∈T1∪T2|{j∈N0⧹(T1∪T2):{i,j}∈Fk1}|+∑i∈T1∩T2|{j∈N0⧹(T1∩T2):{i,j}∈Fk1}|;∑i∈T1[κ]∈[C(Γk1)]:V([κ])∩T1={i}+∑i∈T2[κ]∈[C(Γk1)]:V([κ])∩T2={i}=∑i∈T1∪T2[κ]∈[C(Γk1)]:V([κ])∩(T1∪T2)={i}+∑i∈T1∩T2[κ]∈[C(Γk1)]:V([κ])∩(T1∩T2)={i}.First, note thatT1∪T2,T1∩T2∈E(N0,C)by Lemma A.2 (ii).(i)On the contrary, suppose that∑i∈T1⧹T2|{j∈T2⧹T1:{i,j}∈Fk1}|+∑i∈T2⧹T1|{j∈T1⧹T2:{i,j}∈Fk1}|≠0.Then, there existi1∈T1⧹T2andi2∈T2⧹T1with{i1,i2}∈Fk1. By definition ofFk1,{i1,i2}∉∪κ∈C(Γk1)E(κ). Letj∈T1∩T2; by connectivity ofT1, there exists a path,path(i1,j), connectingi1and j inΓk1using nodes ofT1. Analogously, there exists a path,path(j,i2), connecting j andi2inΓk1using nodes ofT2. By concatenatingpath(i1,j)andpath(j,i2), we construct a path,path(i1,i2), connectingi1andi2without using edge{i1,i2}. As a result, there exists a cycleκ∈C(Γk1)with{i1,i2}∈E(κ), establishing a contradiction.∑i∈T1j∈N0⧹T1:{i,j}∈Fk1+∑i∈T2j∈N0⧹T2:{i,j}∈Fk1=∑i∈T1⧹T2j∈N0⧹T1:{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹T1:{i,j}∈Fk1+∑i∈T2⧹T1j∈N0⧹T2:{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹T2:{i,j}∈Fk1=∑i∈T1⧹T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+j∈T2⧹T1:{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+j∈T2⧹T1:{i,j}∈Fk1+∑i∈T2⧹T1j∈N0⧹(T1∪T2):{i,j}∈Fk1+j∈T1⧹T2:{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+j∈T1⧹T2:{i,j}∈Fk1=∑i∈T1∪T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+∑i∈T1⧹T2j∈T2⧹T1:{i,j}∈Fk1+∑i∈T1∩T2j∈T2⧹T1:{i,j}∈Fk1+∑i∈T2⧹T1j∈T1⧹T2:{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+j∈T1⧹T2:{i,j}∈Fk1=∑i∈T1∪T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+∑i∈T1∩T2j∈T2⧹T1:{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+j∈T1⧹T2:{i,j}∈Fk1=∑i∈T1∪T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+∑i∈T1∩T2j∈N0⧹(T1∩T2):{i,j}∈Fk1,in which the first equality follows fromT1=(T1⧹T2)∪(T1∩T2)andT2=(T2⧹T1)∪(T1∩T2). The second equality is a direct consequence ofN0⧹T1=(N0⧹(T1∪T2))∪(T2⧹T1)andN0⧹T2=(N0⧹(T1∪T2))∪(T1⧹T2). The third equality follows sinceT1∪T2=(T1⧹T2)∪(T2⧹T1)∪(T1∩T2). The fourth equality is a consequence of (i) of this Lemma. The fifth equality follows becauseN0⧹(T1∩T2)=(T2⧹T1)∪(N0⧹(T1∪T2))∪(T1⧹T2).By definition ofE(N0,C), ifR∈E(N0,C)and[κ]∈[C(Γk1)]withV([κ])∩R≠∅, then, eitherV([κ])∩R=V([κ]), orV([κ])∩R={i}for somei∈R. As a result,∑i∈R|[κ]∈[C(Γk1)]:V([κ])∩R={i}|=|[κ]∈[C(Γk1)]:|V([κ])∩R|=1|.ForR⊆N, we denote[C(Γk1)](R)=[κ]∈[C(Γk1)]:|V([κ])∩R|=1. Next, we compare the sets[C(Γk1)](T1)and[C(Γk1)](T2)and the sets[C(Γk1)](T1∪T2)and[C(Γk1)](T1∩T2). For this, we distinguish several cases:a.[κ]∈[C(Γk1)](T1)and[κ]∈[C(Γk1)](T2). By Lemma A.2 (i),V([κ])∩T1=V([κ])∩T2={i}for somei∈T1∩T2implyingV([κ])∩(T1∪T2)={i}andV([κ])∩(T1∩T2)={i}. Therefore,[κ]∈[C(Γk1)](T1∪T2)and[κ]∈[C(Γk1)](T1∩T2).[κ]∈[C(Γk1)](T1)and[κ]∉[C(Γk1)](T2). In this case, we have to distinguish between two new cases:V([κ])∩T2=∅andV([κ])∩T2=V([κ]).b.1.V([κ])∩T2=∅. In this case,[κ]∈[C(Γk1)](T1∪T2)and[κ]∉[C(Γk1)](T1∩T2).V([κ])∩T2=V([κ]). In this case,[κ]∉[C(Γk1)](T1∪T2)and[κ]∈[C(Γk1)](T1∩T2).[κ]∉[C(Γk1)](T1)and[κ]∈[C(Γk1)](T2). Again we distinguish between two new cases:V([κ])∩T1=∅andV([κ])∩T1=V([κ]).c.1.V([κ])∩T1=∅. In this case,[κ]∈[C(Γk1)](T1∪T2)and[κ]∉[C(Γk1)](T1∩T2).V([κ])∩T1=V([κ]). In this case,[κ]∉[C(Γk1)](T1∪T2)and[κ]∈[C(Γk1)](T1∩T2).[κ]∉[C(Γk1)](T1)and[κ]∉[C(Γk1)](T2). In this case,[κ]∉[C(Γk1)](T1∪T2)and[κ]∉[C(Γk1)](T1∩T2).Following these cases, we have|[C(Γk1)](T1)|+|[C(Γk1)](T2)|=|[C(Γk1)](T1∪T2)|+|[C(Γk1)](T1∩T2)|and, therefore,∑i∈T1[κ]∈[C(Γk1)]:V([κ])∩T1={i}+∑i∈T2[κ]∈[C(Γk1)]:V([κ])∩T2={i}=[κ]∈[C(Γk1)]:|V([κ])∩T1|=1+[κ]∈[C(Γk1)]:|V([κ])∩T2|=1=[κ]∈[C(Γk1)]:|V([κ])∩(T1∪T2)|=1+[κ]∈[C(Γk1)]:|V([κ])∩(T1∩T2)|=1=∑i∈T1∪T2[κ]∈[C(Γk1)]:V([κ])∩(T1∪T2)={i}+∑i∈T1∩T2[κ]∈[C(Γk1)]:V([κ])∩(T1∩T2)={i}.□By Lemma A.2 (ii), we have thatT1∪T2,T1∩T2∈E(N0,C). This givesc∗(T1)+c∗(T2)=k1|T1|-(k2-k1)∑i∈T1j∈N0⧹T1:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T1={i}-1+k1|T2|-(k2-k1)∑i∈T2j∈N0⧹T2:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T2={i}-1=k1(|T1|+|T2|)-(k2-k1)∑i∈T1j∈N0⧹T1:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T1={i}-1-(k2-k1)∑i∈T2j∈N0⧹T2:{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩T2={i}-1=k1|T1∪T2|-(k2-k1)∑i∈T1∪T2j∈N0⧹(T1∪T2):{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩(T1∪T2)={i}-1+k1|T1∩T2|-(k2-k1)∑i∈T1∩T2j∈N0⧹(T1∩T2):{i,j}∈Fk1+[κ]∈[C(Γk1)]:V([κ])∩(T1∩T2)={i}-1=c∗(T1∪T2)+c∗(T1∩T2),in which the first and last equalities follow from Lemma A.1 and the third equality is a direct consequence of Lemma A.3 (ii) and (iii). □

@&#CONCLUSIONS@&#
