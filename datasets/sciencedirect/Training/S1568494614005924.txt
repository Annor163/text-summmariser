@&#MAIN-TITLE@&#
Novel metaheuristic hybrid spiral-dynamic bacteria-chemotaxis algorithms for global optimisation

@&#HIGHLIGHTS@&#
Hybrid schemes synergising SDA and chemotactic of BFA have been proposed.A swim strategy has been introduced to enhance the search strategy of SDA.The reproduction, elimination and dispersal phases of the BFA have been excluded.The proposed algorithms statistically outperformed the original SDA and BFA.The hybrid schemes presented better result for position tracking of the flexible manipulator.

@&#KEYPHRASES@&#
Spiral dynamics,Bacteria chemotaxis,PD-like control,Fuzzy logic control,Flexible manipulator system,

@&#ABSTRACT@&#
This paper presents hybrid spiral-dynamic bacteria-chemotaxis algorithms for global optimisation and their application to control of a flexible manipulator system. Spiral dynamic algorithm (SDA) has faster convergence speed and good exploitation strategy. However, the incorporation of constant radius and angular displacement in its spiral model causes the exploration strategy to be less effective hence resulting in low accurate solution. Bacteria chemotaxis on the other hand, is the most prominent strategy in bacterial foraging algorithm. However, the incorporation of a constant step-size for the bacteria movement affects the algorithm performance. Defining a large step-size results in faster convergence speed but produces low accuracy while defining a small step-size gives high accuracy but produces slower convergence speed. The hybrid algorithms proposed in this paper synergise SDA and bacteria chemotaxis and thus introduce more effective exploration strategy leading to higher accuracy, faster convergence speed and low computation time. The proposed algorithms are tested with several benchmark functions and statistically analysed via nonparametric Friedman and Wilcoxon signed rank tests as well as parametric t-test in comparison to their predecessor algorithms. Moreover, they are used to optimise hybrid Proportional-Derivative-like fuzzy-logic controller for position tracking of a flexible manipulator system. The results show that the proposed algorithms significantly improve both convergence speed as well as fitness accuracy and result in better system response in controlling the flexible manipulator.

@&#INTRODUCTION@&#
Metaheuristic algorithms are currently gaining popularity among researchers worldwide due to their effectiveness in finding optimum solution and reliability in solving real world problems. They are widely employed to solve various complex problems in science and engineering [1], medicine [2], finance [3], management [4], etc. Metaheuristic algorithms are normally have the following four basic characteristics. First, they are inspired by natural phenomena in the universe such as biological-inspired or nature-inspired. Second, they include a stochastic approach where an optimum solution is not known and it is randomly searched in a feasible area. Third, they are free of gradient or do not use derivative term in finding solution and finally, they involve several parameters to be defined at the initial stage in order to function properly [5]. Examples of well known metaheuristic algorithms inspired from biological phenomena are bacterial foraging algorithm (BFA) [6], particle swarm optimisation (PSO) [7], genetic algorithm (GA) [8], ant colony (ACO) [9] and bee colony [10]. On the other hand, examples of metaheuristic algorithms inspired from natural phenomena other than living organisms are simulated annealing (SA) [11], tabu search (TS) [12], spiral dynamic algorithm (SDA) [13], harmony search [14] and central force optimisation [15]. Selection of user defined parameters at the intialisation is a challenging task and it affects the performance of the algorithm very much. A study on parameter variation on the performance of metaheuristic algorithm has been presented in [79]. Some researchers utilised mathematical formulation [16,21] while some other researchers adopted intelligent approaches such as fuzzy logic [75–77] to adaptively vary the parameters based on certain variables or conditions. Another important factor that determines the successful application of metaheuristic algorithms in solving problems is a balance between exploration and exploitation strategies. The exploration is a technique of the algorithm to search an optimum solution thoroughly and diversely within a search area while exloitation is the ability to intensify the search operation within a more promising and feasible region. Both exploration and exploitaion can also be referred to as diversification and intensification strategies. A metaheuristic algorithm in general implements swarm searching behaviour in its operation. In order to improve the performance in terms of processing time for the whole search operation, in real-time applications, some researchers have utilised parallel computing architecture such as graphic processing unit. Unlike standard central processing unit, here the motion of each search agent to find an optimal solution is done in a parallel manner. Some of the metaheuristic algorithms that have successfully been implemented on parallel computing architectures include GA, PSO, differential evolution (DE) and SA [80,81]. In this work, two metaheuristic algorithms namely BFA and SDA, their development, modification and application to solve engineering problems are selected as the main subject in this paper.SDA is a nature-inspired optimisation algorithm introduced by Tamura and Yasuda [13]. SDA appears to have good potential for further development due to its simplicity, fast convergence and low computation time. The strategy in this algorithm is generally based on spiral phenomena in nature such as spiral of galaxy, hurricane, tornado and nautilus shell. The most important feature of SDA is a spiral model that determines the shape and charateristic of the spiral. The advantage of having spiral strategy in metaheuristic algorithms is that it comprises both diversification and intensification phases. Diversification can be found at the initial stage or at the outermost layer of the spiral where the search point moves away from the original location towards the centre of the spiral with a large step size. Intensification occurs at the inner layer of the spiral where the search point moves with smaller step size towards the final point. It is interesting to point out that the spiral model has a dynamic step size in its motion starting with larger step size and getting smaller when it approaches the final point, which is located at the centre of the spiral. During the diversification phase, the search point has the opportunity to explore optimum solution with large distance while intensification takes place, it then exploits the solution optimally within a more confined, remote and promising area that could not be reached during the diversification phase. Combination of these two strategies will possibly allow an algorithm to search the area thoroughly and effectively. Although, SDA has covered both diversification and intensification phases, many publications in the literature have found that the exploration strategy of SDA still can be further improved to avoid the algorithm from getting trapped into local optima solutions.SDA is a relative new algorithm and there are very few works found in the literature about the development and application of this algorithm to solve real world problems [16] has conducted a study to vary the spiral model radius and angular displacement with respect to individual point fitness cost at every iteration. The authors have proposed adaptive mathematical formulations based on linear, quadratic and exponential funcions as well as adaptive intelligent method based on fuzzy logic inference. The proposed algorithms have been tested with several unimodal and multimodal standard benchmark functions. The authors have proposed other versions of adaptive SDA where instead of incorporating only fitness cost into the adaptive equation, the best fitness cost of the current iteration is also included [17]. The adaptive algorithms have been applied to optimisation of dynamic model of flexible manipulator system and the results show that the algorithms successfully avoid local optima [18] has proposed hybrid spiral-dynamic BFA (HSDBF) to optimise PD control for position tracking control of flexible manipulator system. The authors placed bacteria-chemotaxis phase prior to hybrid spiral dynamic algorithm to enhance the exploration strategy and to avoid the original algorithm from being trapped into local optima. The tumble and swim actions for the bacteria during the chemotaxis phase were made in spiral motion rather than random. This algorithm however was employed to solve low dimension problems but unable to solve high dimension problems due to incorporation of spiral approach for its tumble [19] has proposed hybrid spiral–bacteria foraging algorithm (HSBFA) and hybrid bacteria-chemotaxis spiral-dynamic algorithm (HBCSD). In HSBFA, the authors incorporated the spiral model into chemotaxis phase of BFA to assist the exploration strategy of BFA, where the bacteria motion is guided towards global best position at every iteration. The algorithm has produced faster convergence speed and better fitness accuracy. However, incorporating the spiral model into BFA has increased the total computation cost needed to complete the whole search operation. As a result, the authors proposed another algorithm namely HCSA, which replaced the reproduction, elimination and dispersal phases of BFA with the presence of spiral model in the chemotaxis phase aiming to reduce the total computational time but maintaining the performances. In HBCSD, the authors placed bacteria-chemotaxis in the first part to cover the exploration strategy while the SDA was placed in the second to cover the exploitation strategy. In HBCSD the bacteria move in random motion as the original BFA for the tumble action. The proposed algorithms were employed to optimise high order dynamic model of flexible systems. HSDBF in [18] and HBCSD in [19] have collaborative type structure where the combination of the chemotaxis phase and SDA is in series and the combined features are executed one after another in a seqential order. A summary of related works on adaptive and hybrid types based on SDA is shown in Table 1.BFA on the other hand, is a well known bio-inspired optimisation algorithm introduced by Passino [6]. It is developed based on unique strategy of Escherichia Coli (E. coli) bacteria in exploring food or nutrient during the whole of their life cycle within lower-intestine or warm-blooded organisms for their survival [20]. Three important phases of E. coli bacteria strategy which form a BFA are chemotaxis, reproduction, and elimination and dispersal. These three phases are placed sequentially after one another. The chemotaxis phase is the first phase of BFA and it is the most prominent stage in BFA. Here, bacteria move in tumble and swim actions continuously. Tumble is where the bacteria move randomly one step ahead aroud their original position, trying to find a better location than the current one. If the new location of bacteria has more food or nutrient, then they continuously swim a few more steps in the same direction as tumble. On the contrary, if the new location has less food source than the current one, then the bacteria perform another tumble action looking for a new and better position. Depending on the amount of food source at this new location, the bacteria again swim in the same direction as tumble or perform another tumble action. This process is continuously repeated during the chemotaxis phase. The reproduction phase comes after the chemotaxis where at this stage, the population of bacteria is classified into two groups based on their health condition. Here, the healthier group is duplicated to preserve the best and important features of their predecessor. In terms of the optimisation algorithm point of view, the bacteria population is sorted in ascending order based on their fitness cost. The fittest bacterium is the one that has the least fitness cost. The first half of the bacteria population is considered as healthier compared to the remaining half of the bacteria population and they are copied exactly the same as the original population. Duplicating healthier group of bacteria increases the total number of bacteria in the population. From the algorithmic point of view, this leads to unfavour situation where it can increase the total computation cost of the algorithm. In order to keep the size of population the same as the original population, the less healthy bacteria are eliminated. This ensures that only the best and fittest bacteria remain in the population. The final step is to relocate or redistribute the whole fittest bacteria population within the feasible search area randomly. This is to give the opportunity for the bacteria to be placed closer to the global optimum solution in a faster way.Since the introduction of BFA, a lot of modifications have been proposed by researchers worldwide to improve its performance. Moreover, there are various publications about the successful application of BFA to solve real world problems. These developments and successful application of BFA to solve real world problems have increased the popularity of BFA within the optimisation algorithm community. The modification of BFA can be divided into two main groups. The first group is the introduction of adaptive formulation to vary bacteria step size with respect to fitness cost or index of iteration. The second group is hybrid approach where the BFA is synergised with other metaheuristic algorithms.Introduction of a powerful adaptive formulation into chemotaxis phase to change the bacteria step size can significantly improve BFA performance without increasing the complexity of the original BFA structure [21] has conducted a comprehensive study investigating the convergence, stability and oscillation behaviour of BFA near the global optimum point. They have established a linear relationship between step size and deviation of individual bacterium from global best position. The algorithm has been tested with ten benchmark functions and applied to parameter estimation of frequency-modulated sound wave [22] employed adaptive BFA to optimise forecasting model for prediction of various stock market indices. They have formulated a linear adaptive equation to vary bacteria step size based on the individual fitness cost without taking into account the global fitness cost in that particular iteration. Similar type of formulation was adopted by [23] to solve automatic circle detection problem for a digital image [24] used delta modulation to change the bacteria step size where the deviation between actual and modulated signal is integrated and fed into a voltage regulator. The algorithm was employed to optimise parameters of a linear antenna array problem [25] has proposed nonlinear adaptive formulation to change the step size based on the index and total number of chemotaxis. The algorithm was applied to solve economic dispatch problem with consideration to power losses and valve-point effects [26] formulated an adaptive strategy for changing the step size with respect to the best fitness cost and current iteration number. The algorithm was tested with several standard benchmark functions. Another adaptive strategy was formulated by [27] where fitness cost and sine function were incorporated into the equation. The algorithm was used to optimise fuzzy entropy for segmentation of grey images [28] proposed nonlinear adaptive formula based on exponential function in terms of current and maximum number of iterations. A certain range within [Cmin, Cmax] for bacteria step size was introduced as they approach to the final search location. The algorithm was validated with various sets of parameters on two standard benchmark functions. Another strategy to vary the bacteria step size can be made based on intelligent approach [29] has adaptively varied the bacteria step length through Takagi-Sugeno fuzzy logic approach based on minimum value of fitness cost. The algorithm was applied to estimate harmonic component of power system waveforms [30] has proposed fuzzy adaptive BFA to optimise congestion management for a power generator. The authors have defined a total number of 52 fuzzy rules where the input and output for the fuzzy system were the production cost and the change of step size respectively [31] have utilised the Mamdani-type fuzzy rule to vary bacteria step size based on absolute value of cost function. The algorithm was tested with several benchmark functions and showed better performance compared to the original BFA. A summary of related works on adaptive types based on BFA is shown in Table 2.The synergy of BFA and PSO is the most commonly found hybrid BFA in the literature [32–36] utilised chemotaxis strategy in BFA to serve as local search method while the velocity and position update equations in PSO were employed to act as global search method [37] introduced a simplified version of BFA employing bacterial chemotaxis strategy and PSO velocity update equation to solve parameter identification problem of a heavy oil thermal cracking model. Reproduction and elimination stages were omitted to reduce computational time [38–40] introduced hybrid GA-BF algorithm by applying varying bacterial chemotaxis step size in BFA while employing modified mutation and crossover operation in GA [41] developed cooperative BF-TS by combining adaptive BFA (ABFA) and adaptive tabu search (ATS). With limited exploration capability of ATS in the search space and complexity of ABFA, to provide suitable exploration at the early stage, the chemotaxis strategy of ABFA is incorporated into ATS. On the other hand [42], used hybrid ABFA and ATS called BTSO, to analyse Lyapunov's stability of linear and nonlinear systems [43] proposed an intelligent biogeography-based optimisation (BBO) where a BFA is combined with BBO. In the algorithm, to determine a valid migration of an individual from one place to another, chemotaxis behaviour of bacteria is adopted into BBO migration process. This ensures the island that receives the migrated solution and preserves its fitness level by only accepting individuals that contribute to a better fitness value [44] introduced a hybrid algorithm namely BPSO-DE by synergising BFA, PSO, and DE to solve dynamic economic dispatch problem with valve-points effect. PSO-DE features contain evolutionary operators and velocity update equation, and are used to perform exploration search over the entire search space while bacterial chemotaxis strategy with adaptive step-size in BFA is used to perform local search to enhance exploitation [45] introduced a chemotaxis differential evolution where a BFA is hybridised with DE algorithm. In the algorithm, the mutation process in DE is combined with the chemotaxis strategy of bacteria. A summary of related works on hybrid type based on BFA is shown in Table 3.Flexible robot manipulators are used in the manufacturing industry as tools in the production process. Unlike a rigid manipulator, a flexible manipulator is lighter in weight, has smaller actuator, faster response, consumes less power, is less expensive, operates cost-efficiently, has higher payload to robot weight ratio and offers more safety to the user [46,47]. A single-link flexible manipulator is considered in this work. This is a single-input multi-output system comprising rigid and flexible dynamics. An electromechanical actuator at the hub of the system produces rotational motion of the manipulator, and fast motion-induced vibration propagates along the flexible beam to the payload at the end-point of the beam. The control strategy for the flexible manipulator system can be realised through conventional control [48,49] or intelligent control [50–53] approaches. Fuzzy logic control (FLC) is one type of intelligent control approaches that increasingly attracts interest of researchers. The nonlinear control laws of FLC are more robust compared to conventional feedback control when dealing with unprecision and uncertainty of the controlled system. A more promising intelligent control approach to handle higher degree of uncertainty and information deficiency is through utilisation of interval type-2 fuzzy logic [61]. It is an extended and improved version of a classical type fuzzy logic. Interval type-2 fuzzy logic has been extensively used to solve complex problems in various applications [68] has reported that it has been applied in the area of pattern recognition [69], system identification [70], theory [71], prediction [72] and classification [73]. In the area of control design, it has been extensively applied in a noisy and changing environment [62–65]. The drawback of FLC is the need for human expert to formulate linguistic description of fuzzy rules before they can be converted into a control signal to control a system. Moreover, training of such system is relatively complex due to large number of tuning parameters [78]. However, this limitation can be solved by applying an optimisation algorithm as a tuning tool, and this can lead to better performance than classical fuzzy tuning approach. In [66], the authors revealed that GA, PSO and ACO were the commonly used algorithms to optimise interval type-2 fuzzy in the area of intelligent control. However, the application of GA has been significantly reduced [67] used a chemical optimisation algorithm to optimise interval type-2 fuzzy for the application of autonomous mobile robots. The authors pointed out that the interval type-2 FLC performed better than classical FLC in the presence of higher degree of uncertainty [74] applied PSO and GA to optimise membership functions of interval type-2 FLC for a real-time application to control speed of a DC motor based on FPGA. The authors concluded that PSO outperformed GA in terms of accuracy and resulted in faster runtime. Another promising control approach for controlling a flexible system is feedforward input command shaping introduced by [54]. It is a common approach to suppress vibration of a flexible system where it cancels resonance poles of a system by convolving a desired command with a sequence of impulses. However, through conventional design approach for the input command shaping, information about the system characteristics such as resonance frequencies and corresponding damping ratios must be known prior to controller design [55]. This limitation can be overcome efficiently if an optimisation algorithm is employed in the design where it can produce optimum solution even if no prior knowledge about the system is known. In the application part of this paper, the SDA, BFA and the proposed optimisation algorithms are employed to design and optimise a hybrid PD-like FLC for position tracking of a single-link flexible robot manipulator.This paper is an extended study of previously published work at a conference, where the hybrid spiral-dynamics bacteria-chemotaxis algorithms were introduced [56,57]. The proposed algorithms offer different strategies compared to the existing hybrid type presented in the literature as shown in Table 1. First, it is an integrative type algorithm where the chemotaxis phase of BFA is integrated into SDA. Unlike the collaborative type structure as proposed by [18,19], the combined features of integrative type struture are executed in a parallel manner. Both chemotactic strategy and SDA are executed at the same time to balance the exploration and exploitation. In the strategy, SDA is the main and host algorithm where it provides platform for the chemotaxis phase of BFA. Second, the reproduction, elimination and dispersal phases of BFA are excluded so that the simple structure of SDA can be retained to achieve fast convergence speed and reduced computation time. It is different than the HSBFA in [19], which only adopted spiral equation into the chemotaxis phase of BFA and executed BFA as a whole algorithm, requiring more processing time than the original BFA. The proposed algorithms have simpler structure and shorter execution time than the original BFA. Third, the spiral radius and angle of the spiral model is determined based on fitness cost of each bacterium. It offers more dynamic step size compared to the original SDA.The development of the proposed algorithms has been motivated by the following issues. BFA provides good exploration strategy due to the chemotaxis approach but suffers from oscillation towards the end of its search process if large step size is used. It offers fast convergence speed but low accurate solution. On the contrary, for a small step size, it offers good exploitation and better accuracy but with slow convergence. There is unbalanced combination between the exploration and exploitation, and this makes the algorithm unable to produce both accuracy and faster convergence speed at the same time. Moreover, the total computation time for the algorithm to complete the whole search operation is relatively high due to its complex structure. This situation is not favoured especially when it is adopted for solving a complex real world problem, implementation on a real-time application such as on-line tuning of controller parameters or dynamic modelling of a real physical system. In such situations, it requires high speed computing machine, which is very costly. On the other hand, SDA provides better stability when approaching the optimum point due to dynamic spiral step in its trajectory motion, has faster convergence speed and reduced computation time due to a relatively simple structure. However, it may potentially cause the search agents to get trapped into local optima due to insufficient exploration strategy throughout the search space and deterministic approach of the spiral trajectory thus offers low accurate solution at the end. The objectives of the proposed algorithms are to improve the performance of the original BFA and SDA in terms of both convergence speed and fitness accuracy as well as to reduce the complexity of the original BFA structure for shorter computation time.Statistical analyses of the proposed algorithms tested on various multi-modal, unimodal and different landscapes of benchmark functions are presented in the paper. The performance of the proposed algorithms on the benchmark functions is compared with the predecessor algorithms through non-parametric Friedman and Wilcoxon signed rank tests and parametric t-test analysis. Moreover, the paper presents an application of the hybrid schemes in optimising a hybrid intelligent control technique for a laboratory-scale flexible manipulator system. Classical type FLC is applied in this work rather than interval type-2 FLC since no payload is considered and the presence of relatively lower degree of uncertainty for controlling the hub angle position of the flexible manipulator system. It also provides a challenging and complex platform with fewer tuning parameters and faster computing time to assess the performance of the proposed algorithms in comparison to their predecessor algorithms.The rest of the paper is organised as follows. Detailed description of the proposed algorithms is presented in Section 2. Section 3 discusses the implementation and associated results of the proposed algorithms on a set of benchmark functions. Section 4 presents a description of the single-link flexible robot manipulator, the method used to design hybrid PD-like FLC for hub-angle position tracking and the corresponding results. The conclusions drawn from the work presented in the paper are given in Section 5.This section describes the proposed hybrid spiral-dynamic bacteria-chemotaxis (HSDBC) algorithms. The HSDBC is a combination of bacterial chemotaxis strategy used in BFA and SDA. It preserves the strengths and eliminates the weaknesses of both SDA and BFA algorithms. The HSDBC algorithm is divided into two types based on the swimming strategy of bacteria. In the first type namely HSDBC-S, bacteria swim through spiral approach while in the second type namely HSDBC-R the bacteria adopt a random approach.The parameters and description used in n-dimensional HSDBC optimisation algorithm are presented in Table 4. Step-by-step description of the algorithms is presented in Fig. 1. To get a clearer picture, the HSDBC-S and HSDBC-R flowcharts are shown in Fig. 2(a) and (b) respectively. In the proposed hybrid approach, bacterial chemotaxis strategy is employed in step 2 to balance and enhance exploration and exploitation of the search space.The bacteria move from low nutrient location towards higher nutrient location, placed at the centre of a spiral. The most important factor of HSDBC-S algorithm is the respective diversification and intensification at the early phase and later phase of the spiral motion. In the diversification phase, bacteria are located at low nutrient location and move with larger step size thus producing faster convergence. On the other hand, in the intensification phase, bacteria are approaching rich nutrient location and move with smaller step size hence eliminating oscillation around the optimum point. However, to avoid the bacteria from getting trapped into local optima points, swim action is adopted in step 2(ii), Fig. 1. Bacteria continuously swim in spiral form towards optimum point if the next location has higher nutrient value compared to the previous location until the maximum number of swims is reached. In the swim action, the spiral radius value is not necessarily the same as in tumble. Giving larger or smaller radius enhances the exploration and exploitation strategy of the bacteria respectively. More importantly, the exploration and exploitation are kept alternated during the search operation. Instead of having constant radius or constantly varying step size, another spiral radius value or adaptive spiral radius is adopted in the swim action. It may introduce variation in the spiral radius itself and step size of the bacteria for the whole search operation. Moreover, through the adaptive approach, the determination of the spiral radius for swim is based on the fitness cost of each bacterium. This in turn gives more chances for the bacteria to move within the feasible space hence resulting in more accurate solution. Beside, the variations of the spiral radius through the adaptive approach can control the convergence speed of the algorithm. The convergence speed may also be improved if the average size of spiral radius is employed in the swim action. Furthermore, incorporating only chemotaxis part of bacteria and adopting adaptive radius, the simple structure of SDA can be retained.Instead of swimming in spiral manner where a deterministic approach is adopted, in HSDBC-R the bacteria swim in random direction, within 360° around their current position giving more flexibility to the bacteria in finding better path. Here, a combination of deterministic and random approaches is adopted during the tumble and swim respectively. Combination of these two approaches will complement each other where in the spiral approach, the trajectory of the bacteria is predetermined by the radius and the angle while in the random approach, the bacteria move freely in any direction. In terms of step size, the deterministic approach provides dynamic step size, which may balance the constant step size in the random approach. Moreover, in the tumble phase, the bacteria are guided by global best position, and this can speed up the convergence while in the swim phase, the bacteria move individually and independent to any other positions. A constant step size is adopted for the swim action as shown in step 2(ii)(c) of Fig. 1. Since the SDA has problem with local optima due to insufficient exploration, defining a large step size in the swim action can help the algorithm to explore more efficiently. Defining small step size helps the algorithm to improve the exploitation part. Instead of having the exploitation at the end of search operation only, here, additional exploitation in the swim with random trajectory is included, and it alternates repetitively with the exploration part in the tumble action. The HSDBC-R flowchart is depicted in Fig. 2(b). Notice that, after the bacteria move one-step ahead using the spiral model, they perform random tumble and swim actions without referring to the global best position. Moreover, an additional step is incorporated into the chemotaxis phase through the introduction of fbest and xbest. This is to ensure that the best solution and best fitness are always preserved when the bacteria move from one location to another when performing tumble and swim actions. In addition, it eliminates the oscillation problem in the algorithm convergence.This section presents an extensive study on the performance of the proposed hybrid algorithms in comparison to the original SDA and BFA with several well-known benchmark functions.Eight well-known benchmark functions with different fitness landscapes, dimensions and complexities are used in this work. The mathematical representations and descriptions of the benchmark functions are shown in Table 5[21]. The functions f1–f6 have the global optimum value of zero while the functions f7 and f8 have the global optimum values of 3 and −1.0316 respectively. All the functions used in the test are continuous and differentiable.The main aim of the benchmark functions test is to acquire statistical data which can be used to compare the performances of the proposed algorithms with those of the original algorithms. The tests focus mainly on these performance metrics: (1) The fitness accuracy achieved by the algorithm at the last fitness evaluation (FE) which may also be considered as the closeness of the solution to the global optimum point. (2) The speed of the algorithm to converge to the global optimum point in terms of the number of FEs. (3) The frequency of the final solution to reach the global optimum point. In this work, the dimensions for both f4 and f5 are defined as 2 while dimensions 15, 30, 45 and 60 are tested for functions f1–f3 and functions f6–f8.In these tests, 30 independant runs were executed for each algorithm under study and, the mean and standard deviation values were generated. Moreover, the best and the worst values achieved by each algorithm are also presented as these can show the closeness of the final solution to the theoretical global optima. The number of total iterations for each algorithm is defined based on the total number of FEs which is set the same for all algorithms. Here, the maximum number of FEs is set to 80,000. The performances of the proposed algorithms and the original algorithms in terms of fitness accuracy or significant improvement are compared by conductiong Friedman and Wilcoxon tests and t-test on the best mean values achieved by the proposed algorithms and the BFA or SDA. The alpha value of 5% degree of significance is defined for all tests giving 95% confidence interval for the generated results. Following the work of [58], symmetrical initilisation method is used for all the problems. The initial parameter used in the test for the BFA, SDA, HSDBC-R and HSDBC-S are presented in Table 6. The initial parameter values for the proposed hybrid algorithms were selected heuristically while the parameters for the BFA were adopted from [6,32] and the SDA parameters were adopted from [13].The analytical results for the benchmark functions tests representing the mean, standard deviation (SD), best and worst accuracy are presented in Table 7. The best mean among the algorithms is highlighted in bold font, while the best mean between the SDA and BFA is italicised. Notice that, both the proposed hybrid algorithms achieved better performance compared to the SDA and BFA for all benchmark functions. Except only for the 15 dimensions Rosenbrock function, the BFA achieved the best mean among the algorithms. Comparing the proposed hybrid algorithms, it is noted that HSDBC-S dominated the best mean result. The HSDBC-R had better mean than HSDBC-S for lower order 15 and 30 dimensions Rastrigin function. Comparing the original algorithms, it can be seen that SDA dominated the best mean result especially for functions f1, f3, f4, f5, and f6. BFA achieved better mean for functions f2, f7 and f8 compared to SDA. On the other hand, for the SD, the proposed HSDBC-S dominated the results especially for functions f2, f3, f5, f7 and f8. BFA dominated the SD result for functions f1 and f6 while the HSDBC-R had better SD for function f4. The best accuracy is the best value achieved by the algorithms to the targeted global optima location within 80,000 FEs. It is noted that HSDBC-S dominated the best accuracy for functions f2, f3, f6, f7 and f8. Both the proposed hybrid algorithms shared the domination for the function f1 while for functions f4 and f5, HSDBC-R, HSDBC-S and SDA shared the best performance. Overall, for the results presented in Table 7, HSDBC-S showed the best performance compared to all other algorithms.The performances of the four algorithms in terms of fitness accuracy were tested through nonparametric Frieman test and Wilcoxon signed rank test and the result is presented in Table 8. Friedman test is used to rank the performance of three or more algorithms while the Wilcoxon signed rank test is used to compare the performance between two algorithms. The algorithm with lower rank in the Friedman test is considered as the algorithm with the highest accuracy achievement. In both tests, the algorithms are considered to have an equal performance if the two-tailed, p value is equal to or more than 0.05 with 5% degree-of-significance. Notice that, based on Friedman test, HSDBC-S achieved the lowest ranking followed by HSDBC-R, SDA and BFA. In other words, HSDBC-S was the best algorithm in terms of accuracy achievement. Based on Wilcoxon signed rank test, it is noted that the p value of SDA-BFA was bigger than 0.05, which means that the difference between BFA and SDA in terms of accuracy achievement was not significant and thus had equal performance. Wilcoxon test result for other than SDA-BFA showed that the p value was less than 0.05. This, with reference to the Friedman test and p value of Wilcoxon test, means that both HSDBC-R and HSDBC-S ouperformed BFA and SDA with significant improvement. The results also show that HSDBC-S had better performance than HSDBC-R with significant difference.The significant difference between the best mean of the proposed algorithms (bold font) and the best mean of the original algorithms (italicised) from Table 7 were evaluated through t-test approach. The overall result for the t-test representing the standard error, t-value, 95% confidence interval and two-tailed, p value are shown in Table 9. As the degree of significace is 5% and degrees-of-freedom (DOF) is 58, if the two-tailed value is equal to or less than 0.05, then the mean difference is said to be significant. In other words, the result of the proposed algorithm was improved significantly compared to the standard algorithm. With reference to the result in Table 7, the BFA has achieved the best mean for 15 dimensions function f8. However, the result of the t-test has shown that it has two-tailed value 0.1803, greater than 0.05, which may be interpreted as equal performance to HSDBC-S. Besides, for functions f4 and f5, the t-test has shown the two-tailed values above 0.05; these were 0.1232 and 0.2347 respectively. This result is aligned with the result shown in Table 7. The rest of the results show that the two-tailed value was less than 5% degree of significance, which concludes that the performance difference of the proposed hybrid algorithms to the original algorithms is statistically significant and better. Notice that both functions f4 and f5 have low dimension of 2 and SDA performed very well giving equal performance to the hybrid schemes. However, for higher order dimensions on other functions, the performance of SDA remarkably reduced and might not be suitable to use as an efficient tool especially for solving real world problems.The performance of the algorithms on the benchmark functions test in terms of convergence speed might be observed via graphical approach. The convergence plots comparing all algorithms for 30 dimension functions f1–f3, f6–f8 and 2 dimension functions f4 and f5 are depicted in Fig. 3. It is noted that SDA had the fastest speed but for 30 dimension problems it got trapped into the local optima position. The BFA on the other hand, had the slowest speed among other algorithms; hence for 80,000 fitness iterations it was unable to reach the global optimum point satisfactorily. On the contrary, using the proposed hybrid schemes, the search points settled down to a location nearer to the global optima solution thus giving better fitness accuracy, and the convergence speed was relatively slower compared to SDA but much better than BFA.This is a comparative test between the proposed hybrid algorithms and original algorithms to solve a real world problem in the engineering field.A schematic representation of the single-link flexible robot manipulator is shown in Fig. 4. The physical characteristics of the beam such as length, l width, w and thickness, h are defined as 960mm, 19.008mm and 3.2004mm respectively. The Young modulus, E=71×109, the second moment of inertia Ib=0.04862kgm2, mass density/volume, ρ=2710kgm−3 and hub inertia Ih=5.86×10−4kgm2 are further specifications of the system.The single-link flexible robot manipulator arm developed by [59,60] is used in this work and its schematic diagram is shown in Fig. 5. The system consists of a single flexible link made of aluminium beam and attached to an electromechanical motor. A U9M4AT type printed circuit board with bi-directional drive amplifier is used to rotate the motor shaft in both counterclockwise and clockwise directions. As there are three outputs of interest to be gauged from the system, three different sensor units are attached to the body of system. An accelerometer is placed at the tip of the beam and used to measure the end-point acceleration while an encoder with a resolution of 2048pulses/revolution and a tachometer are attached to motor shaft and used to measure hub-angle and hub-velocity respectively. Moreover, a personal computer (PC) embedded with Pentium Celeron 500MHz processor is connected with PCL818G interfacing unit to the flexible robot manipulator arm. Matlab/Simulink software installed in the PC is used as a tool for controlling and manipulation of the system.In general, there are one input and three output responses to be observed. Here, a random signal input is applied to the system and represented as electrical motor torque. The measured output responses of the system are hub-angle, hub-velocity and end-point acceleration. However, the hub-angle and end-point acceleration are the output responses of interest especially when dealing with controller design. In a real world application, the capability of the controller in dealing with position tracking problem of hub-angle and suppression of vibration at the end-point are mainly of concern. The flexible robot manipulator used in this study has three dominant resonance modes within the range [0–100]Hz as shown in Fig. 6. Motion-induced vibration in the manipulator response appears and is dominated by the three resonance frequencies noted in Fig. 6, while the system is in operation without vibration control.In this work, PD-like FLC is implemented to track the hub angle position for a desired bang-bang input. The block diagram of PD-like FLC for a flexible system is depicted in Fig. 7[50]. Hub angle response is fed back and compared with the desired input. The difference between the actual and desired hub angle response is multiplied by a constant k1 representing proportional value and scaling factor for fuzzy input 1. The hub velocity representing derivative of the hub angle is taken directly from the system and multiplied by a constant k2 which is a derivative value or scaling factor for fuzzy input 2. Both of the outputs of the k1 and k2 are then injected into the input of the FLC. The output of the controller is then multiplied by another constant k3 or scaling factor for fuzzy output before it passes as an input torque into the flexible robot manipulator. Considering processing time and the performance of the FLC, five triangular type membership functions or fuzzy sets are defined for both fuzzy inputs and fuzzy output giving 25 fuzzy rules in total. The membership functions for both inputs and output are uniformly distributed on the universe of discourse within a range of [−1,1] as shown in Fig. 8. The Mamdani-type with centre of area defuzzification method is used due to its intuitiveness, widespread acceptance and suitability in dealing with human reasoning [31]. Besides, min type operator for implication and max type operator for aggregation are used in the scheme. Another important feature of fuzzy logic scheme is linguistic rule that comprises IF-THEN statements to establish relationship between antecedent and consequent. The general form of fuzzy logic linguistic rule for FLC is defined as:(1)IFεAANDυisBTHENτisCwhere A, B and C are linguistic values defined by fuzzy sets {negative big, negative small, zero, positive small, positive big}, represented by {NB, NS, Z, PS, PB}. The ɛ, υ and τ are the hub angle error, hub velocity and input torque to the flexible system respectively. The ‘IF ɛ is A AND υ is B’ is known as antecedent while τisC is known as consequent.The application of an optimisation algorithm as a tuning tool makes the design of PD-like FLC more efficient. Unlike conventional tuning methods, here the parameters k1, k2 and k3, the generation of rule base and the nonlinear mapping between the inputs and output are automatically determined and optimised by the optimisation algorithms.In the controller optimisation, a total of 103 variables are defined. The first 75 variables represent the fuzzy sets for hub angle error, hub velocity and fuzzy output. The next 25 variables represent the fuzzy weight for each fuzzy rule. The last three variables in the first part are for scaling factors k1, k2 and k3. In order to optimise the rule base, the linguistic variables of fuzzy set {NB NS Z PS PB} need to be transformed into numerical values as {1 2 3 4 5} repectively. Therefore, a range of [1,5] is defined for the first 75 variables while a range [0,1] is defined for the fuzzy weight. All the fractional numbers representing the fuzzy set are rounded to the nearest integer number. The ‘0′ value for the fuzzy weight means that the rule is ignored while the fuzzy weight with value ‘1′ means that the rule is fully used in generating the fuzzy output. This is a method of weighting a rule relative to other rules. The error function for tracking the hub angle used here is a mean of absolute error which is formulated as:(2)J=1N∑i=1N(|θact(i)−θdes(i)|)where N is the number of data points, θact(i)−θdes(i) is the error between the actual and desired signal. The initial parameter values for BFA, SDA, HSDBC-R and HSDBC-S used to optimise the controller for tracking hub angle position are shown in Table 10. The parameter values for the algorithms were heuristically tuned for optimal performance.Table 11and Fig. 9show the gain value and fuzzy surface of the optimised PD-like FLC respectively. It is noted that the output torque obtained with the proposed schemes was higher compared to the original algorithms. This may affect the rise time and percentage overshoot of the hub angle response. The fuzzy rule of the optimised PD-like FLC is shown in Table 12. Notice that for the SDA-based rules, there is redundancy between rules 3 and 8 with the same weight. Rules 14, 18 and 19 also resulted the same linguistic scheme, but they had different weights. In this case, the rule with the highest weight (rule 18) is considered while all other rules with lower weights (rules 14 and 19) are ignored. Therefore, there are only 22 effective rules for the SDA-based FLC. For BFA-based FLC, rules 15 and 24 shared the same linguistic scheme but with different weights hence the effective number of rules were 24. For HSDBC-R-based FLC, rules 3 and 10, rules 14 and 24, and rules 17 and 25 shared the same linguistic scheme with different weights, thus giving 22 effective rules in total. The HSDBC-S-based FLC had 21 effective rules and it had the most redundancy with different weights compared to others. As shown in Table 12(d), rules 1 and 20, rules 3 and 12, rules 11 and 15, rules 24 and 25 shared the same linguistic schemes but with different weights.The results for the optimisation of the PD-like FLC for tracking hub angle position are shown in Fig. 10. Fig. 10(a) shows that the hybrid algorithms achieved better accuracy compared to the original algorithms. Notice that, the SDA and HSDBC-S had the fastest speed at the very early iteration. However, SDA got trapped at local optimum with fitness accuracy of 2.049 when it reached iteration 50. The BFA showed the worst performance among all other algorithms in terms of convergence speed. The graph shows that, at the early iterations, it was hardly converging to a better fitness location. It converged to fitness value of 2.315 and intercepted SDA at iterations 632 and 633 respectively. It achieved the best fitness value of 1.727 at iteration 700 and was unable to converge further until the end of the search operation. The HSDBC-R achieved the best accuracy of 1.560 followed by HSDBC-S which achieved the second best fitness accuracy of 1.609. HSDBC-R showed slower convergence at the early stage of the search, but it successfully intercepted SDA, BFA and HSDBC-S at iterations 81, 77 and 145 respectively. For a clearer visual representation, the best fitness cost achieved by the BFA, SDA, HSDBCS and HSDBCR is summarised in the bar chart shown in Fig. 11.The optimised hub angle position is shown in Fig. 10(b) and (c) while its numerical result is shown in Table 13with the best value highlighted in bold font. The result shows that HSDBC-R had the shortest rise time followed by BFA, HSDBC-S and SDA. The position optimised by BFA and HSDBC-R presented the highest and lowest overshoot respectively. On the contrary, the result optimised by HSDBC-R and BFA presented the highest and lowest undershoot respectively. In terms of settling time, HSDBC-S performed the best, followed by BFA, HSDBC-R and SDA. For the steady-state error, both hybrid schemes resulted in smaller offset from the desired position where HSDBC-R had the smallest error of 0.01 while HSDBC-S had the second smallest error with the offset value of 0.04. A comparison of overall performance for the time–domain response of the hub-angle position is presented in bar chart form in Fig. 12. Overall, for optimisation of PD-like FLC for tracking hub-angle position, the result has shown that the proposed hybrid algorithms outperformed both the predecessor algorithms.

@&#CONCLUSIONS@&#
