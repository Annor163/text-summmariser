@&#MAIN-TITLE@&#
Taxonomy of batch queueing models in manufacturing systems

@&#HIGHLIGHTS@&#
We give comprehensive classifications for batch queueing models in manufacturing systems.Eight types of batch models have been identified.We propose new batch queue models based on the classification.The newly proposed models give reliable evaluation of system performance in heavy traffic.

@&#KEYPHRASES@&#
Productivity and competitiveness,Queueing,Manufacturing,Batching,

@&#ABSTRACT@&#
Batching plays an important role in performance evaluation of manufacturing systems. Three types of batching are commonly seen: transfer batches, parallel batches and serial batches. To model the batching behavior correctly, a comprehensive classification of batching is proposed. Eight types of batching behavior are classified and corresponding queueing models are given. The newly proposed models are validated by simulation.

@&#INTRODUCTION@&#
Batching is commonly seen in manufacturing systems, such as pharmaceutical plants or semiconductor wafer fabrication facilities (fabs). Modeling batching behavior correctly is crucial to the performance evaluation, and thus to the productivity and competitiveness of a manufacturing system. There are mainly two types of batches, process batches and transfer batches. A process batch can be further classified as a serial batch or a parallel batch. A process batch is defined as a pre-determined group of jobs processed in a certain period of time without being interrupted by other product groups. The job group has no specific composition and can be composed of a single product or multiple products, as long as the jobs use the same recipe (i.e., a parallel batch) or do not induce setup (i.e., a serial batch).We name a process batch as serial if products are processed one by one consecutively without being interrupted by other product groups. According to Hopp and Spearman (1996), the serial batch size is “the number of jobs of a common family processed before the workstation is changed over to another family.” A serial batch can be composed of a single product or multiple products, as long as the products do not induce setups. A setup induced by a serial batch is called a product-induced setup. It generally occurs when jobs with different recipes are loaded on a machine, and some preparations are needed to set up the recipe. Larger serial batch size reduces setup frequency, but is potentially disadvantageous considering job due dates, since urgent jobs with different recipes may be processed after normal jobs with the same recipe as the current processing jobs.We name a process batch as parallel if all jobs are processed together at the same time. Furnaces and ovens are typical examples of parallel batches. The parallel batch size is usually determined by the physical capacity of a machine, but it could also be determined by the process constraints. For example, the common physical capacity of a furnace in a 300mm semiconductor fab is four lots. However, the parallel batch size of a furnace is sometimes reduced to three due to process quality concerns. A parallel batch can be composed of a single product or multiple products, as long as the products use the same recipe at the batching machine.In literature, the parallel batch size sometimes is denoted by the pair (a,b), where a is the minimal batch size and b is the maximum batch size. A machine cannot process a batch unless there are at least a jobs in one batch, and the batch cannot contain more than b jobs. However, the batching rules can be even more complex in practice. For example, a machine can process a batch when there are at least a jobs in the batch, and the next job will not arrive within x minutes. Otherwise, the machine has to wait until b jobs are batched. Since it involves non-renewal arrival processes, the exact analysis is intricate. To serve the purpose of classification, in this paper we simply focus on the cases where a equals b.In addition to process batches, transfer batches are also commonly seen in production lines. The transfer batch size is “the number of parts that accumulate before being transferred to the next station” (Hopp & Spearman, 1996). In general, transfer batches are caused by mismatch between transfer units and process units. Therefore, the definition of transfer batch is highly dependent on the process unit of destination machine. If the process of a machine is lot-based, the transfer batch size is the number of lots. If the process of a machine is wafer-based, the transfer batch size is the number of wafers. For example, if each lot consists of 24 wafers, when lots arrive one by one at a wafer-based chemical vapor deposition tool, the transfer batch size is 24 (wafers). However, since the process of a wet bench is lot-based, if lots arrive one by one, here the transfer batch size is one for a wet bench. Since the transfer unit in a semiconductor fab is “lot” in general, all wafer-based process machines see transfer batches with wafer-based sizes. The relationship among different types of batching is illustrated in Fig. 1.Because batching process is a potential cause of long queue times, modeling batch processing correctly is critical in evaluating the performance of manufacturing systems. However, since there are parallel, serial and transfer batches, the analysis can be complicated. Different combinations of the batching behavior can lead to different queueing models. To approximate system performance accurately, choosing the right model should be the first step before proceeding to further analyses. A comprehensive taxonomy of batching is crucial. We hope this paper can be treated as a guidance of modeling batching behavior for both researchers and practitioners. By identifying the queueing models appropriate for different types of batching, the proper queueing model can be used in various situations.In this paper, we assume all parallel batches have constant batch sizes. Based on the interruption classification suggested by Wu, McGinnis, and Zwart (2011b), all interruptions are assumed to be run-based and no time-based interruption exists. In the following, an overview of the related literature is given in Section 2. In Section 3, a comprehensive classification of batching behavior is proposed. The corresponding queueing models are given in Section 4. Simulation results are given in Section 5. Conclusion is given in Section 6.

@&#CONCLUSIONS@&#
