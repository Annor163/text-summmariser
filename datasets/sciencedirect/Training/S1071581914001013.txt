@&#MAIN-TITLE@&#
Overcoming the pitfalls of ontology authoring: Strategies and implications for tool design

@&#HIGHLIGHTS@&#
Fifteen ontology experts are interviewed about their authoring tasks.Different building styles may generate tensions.The problems that ontology authors encounter are identified.The employed strategies inform design recommendations for tools.

@&#KEYPHRASES@&#
Ontologies,Semantic web,Authoring tools,

@&#ABSTRACT@&#
The process of authoring ontologies appears to be fragmented across several tools and workarounds, and there exists no well accepted framework for common authoring tasks such as exploring ontologies, comparing versions, debugging, and testing. This lack of an adequate and seamless tool chain potentially hinders the broad uptake of ontologies, especially OWL, as a knowledge representation formalism. We start to address this situation by presenting insights from an interview-based study with 15 ontology experts. We uncover the tensions that may emerge between ontology authors including antagonistic ontology building styles (definition-driven vs. manually crafted hierarchies). We identify the problems reported by the ontology authors and the strategies they employ to solve them. These data are mapped to a set of key design recommendations, which should inform and guide future efforts for improving ontology authoring tool support, thus opening up ontology authoring to a new generation of users. We discuss future research avenues in light of these results.

@&#INTRODUCTION@&#
The use of ontologies for capturing the knowledge of a domain of interest has grown significantly, with areas such as bioinformatics and healthcare modelling and sharing information in ontologies of varying size and complexity. One of the central ideas of the Semantic Web is that of sharing, linking, and reusing data from multiple sources; as a consequence, the availability of (high quality) semantically described data sources and thus the uptake of Semantic Web technologies are important, not only to the success of the Semantic Web, but also to applications in which rich domain descriptions can play a role.Considering the inherent complexity of a knowledge representation formalism such as OWL, convincing domain experts, and thus, potential ontology authors, of the usefulness and benefits of using ontologies is one of the major barriers to broader ontology adoption (Hepp, 2007). The following excerpt, which was extracted from the interviews that inform the study presented here, is a clear example of the current situation:“A domain expert has to be totally convinced that ontologies are the right way of modelling knowledge in a domain, and then has to consistently work for a period of time in order to be self-sufficient. In the initial stages, when they start doing the modelling, you need a knowledge engineer to hold their hand […] the moment the knowledge engineer disappears they will not carry on with it because it׳s much easier to get in databases or Excel than to do all this.” (Participant 13)There are several factors that may prevent the uptake of ontologies including the cognitive complexity of ontology languages such as OWL (Horridge et al., 2011), the step learning curve of these languages (Warren et al., 2014) or the required minimum expertise to model very specific domains (Randall et al., 2011). One of the key factors, in addition to the ones mentioned, that contribute towards the acceptance of a new technology is the availability of adequate tool support that allows both novice and expert users to create high quality artefacts that meet their functional requirements. While ontology authoring tools have seen many improvements over recent years, most notably demonstrated by the popularity of Protégé as an integrated ontology development tool (Cardoso, 2007), we still lack a good understanding of the effectiveness of existing tools, or what kind of tool support ontology authors need to successfully create, explore, reuse, refactor, and debug ontologies. The quote above is indicative of the complexity of the ontology authoring process, and how typical ontology engineering tools are unsuccessful in making the process of authoring ontologies easier and more accessible; a shortfall which affects not only the uptake of ontology by new users, but also the quality of artefacts created by existing ontology engineers.In order to gain insights about the problems encountered in the authoring process we carry out an interview study with 15 ontology authors. We deliberately target ontology experts for two reasons: firstly, their understanding of problems is more comprehensive and richer; and secondly, they employ sophisticated authoring strategies that may be indicative of latent problems of tools. With the help of a qualitative analysis software tool, transcribed interviews were thematically analysed in an open coding fashion. A codebook of themes was agreed among the authors and an analysis of reliability was conducted to discard any source of bias (see the study in Section 3). The identified problems and strategies may not be representative of the whole spectrum of ontology authors though: novices may struggle with additional problems to the ones we identify; also, the participants were mostly drawn from life sciences and thus, some of the problems might be domain specific. We argue that emergent design recommendations will also entail benefits for novices and across disciplines as there are commonalities—of a different magnitude—between the problems faced by different types of users. For instance, the cognitive complexity of OWL is challenging for all users even if it is a more severe barrier for non-experts.We believe that, in order to improve the experience of ontology authors, it does not suffice to only analyse their interaction with ontology engineering tools; instead, we need a more holistic view of the ontology authoring process and lifecycle. In Section 4.1 we first focus on the different approaches that exist to authoring ontologies, including the different ontology building styles (what we here call ‘definition-driven’ ontology development vs. manually crafted hierarchies). We then need to gain a clear picture of the problems ontology authors encounter when developing ontologies, common tasks with which they struggle, and the tools and strategies they employ to overcome such problems (see Section 4.2). As a result, the contributions of this study are the following:•We raise awareness about the latent tensions about ontology building styles in Section 5.1. While we do not take a stance in whether having a common understanding and strategy is right or not, having this awareness may help to remove frictions in teams.By mapping the problems and strategies to design insights, we suggest how the next generation of authoring tools could cater for the needs of broader audiences (see Section 5.2).In Section 5.3 we enumerate a set of operable design recommendations that emerge from the acquired insights.We evaluate state-of-the-art authoring tools against the design recommendations (see Section 5.4).While some of our findings confirm existing assumptions about the ontology engineering process, such as the lack of tools for helpful exploration and visualisation of ontologies, others are more surprising. Amongst others, both preventing errors and debugging erroneous ontologies are still considered to be challenging tasks when constructing ontologies, while support for judging the quality of ontologies in the context of their functional requirements, in the spirit of unit tests in traditional software engineering, is not widespread. Furthermore, as reasoning is used frequently to check the correctness of ontologies, on-the-fly reasoning capabilities seem to become increasingly relevant.

@&#CONCLUSIONS@&#
