@&#MAIN-TITLE@&#
Modeling and optimization for the joint replenishment and delivery problem with heterogeneous items

@&#HIGHLIGHTS@&#
Constructing a joint replenishment and delivery model with heterogeneous items firstly.Adaptive hybrid DE algorithm is utilized to find an optimal solution.AHDE is more stable and robust in solving this complex problem.

@&#KEYPHRASES@&#
Joint replenishment,Delivery,Heterogeneous items,Adaptive hybrid differential evolution,Genetic algorithm,

@&#ABSTRACT@&#
In the real world, some heterogeneous items are prohibited from being transported together or penalty cost occurs when transporting them together. This paper firstly proposes the joint replenishment and delivery (JRD) model where a warehouse procures multi heterogeneous items from suppliers and deliveries them to retailers. The problem is to determine the grouping decision and when and how many to order and delivery to the warehouse and retailers such that the total costs are minimized. However, due to the JRD’s difficult mathematical properties, simple and effective solutions for this problem have eluded researchers. To find an optimal solution, an adaptive hybrid differential evolution (AHDE) algorithm is designed. Results of contrastive numerical examples show that AHDE outperforms genetic algorithm. The effectiveness of AHDE is further verified by randomly generated problems. The findings show that AHDE is more stable and robust in handling this complex problem.

@&#INTRODUCTION@&#
The joint replenishment problem (JRP) has been heavily studied since the early work of Shu [23]. There are several reasons to group items into the same order from a supplier when making replenishment decisions. Firstly, a quantity discount may be offered by the supplier if the order amount is greater than a certain quantity. Secondly, in case of high fixed cost of placing a replenishment order, gathering several items on a single order to reduce the total of these fixed ordering costs. The existing literature of the JRP can be divided into two categories: (a) JRPs under constant demand and special approaches to the JRP including meta-heuristics. (b) JRPs under dynamic and/or stochastic. Extensive literature review is available in Khouja and Goyal [13]. This review indicatesthat while research on the basic JRPs may have slowed down, there is much interest in new JRPs with relaxed assumptions. Furthermore, recent research has focused on finding faster algorithms to classic JRPs rather than on improving the solution quality [13].Supply chain management receives a great deal of attention in the business community [8,26,27,33,35]. Global purchasing is already common for most companies, and many companies have realized that considerable cost savings can be achieved by a joint replenishment and delivery scheduling (JRD) policy. But the literature on the JRD in the supply chain is relatively scarce. (a) The first kind of JRD is a two-level structure. Qu et al. [22] proposed a heuristic decomposition method to solve an integrated inventory–transportation problem. Sindhuchao et al. [24] studied the integrated inventory and transportation decisions under constant demand with limited vehicle capacity in an inbound commodity collection system. Kang and Kim [11] proposed a model for integrated replenishment and delivery planning in a two-level supply chain consisting of a supplier and a retailer with compound Poisson demands. Wang et al. [28] considered a two-level JRD consisting of a central warehouse (where all stocks were kept) and several geographically dispersed suppliers with stochastic demand and proposed a hybrid differential evolution algorithm to solve this NP-hard problem. (b) Another is the three-level structure consisting of the supplier, the warehouse, and the retailers. Ganeshan [7] presented a near-optimal (s, Q) inventory policy for a production/distribution network with multiple-retailer, one-warehouse, and multiple-supplier. A JRD model using stationary policy of the multi supplier, one warehouse and multi retailers system was studied by Cha et al. [4]. Further, Moon et al. [17] studied the JRD under a quasi-stationary policy. Cha and Park [5] solved the JRD involving multiple suppliers offer different quantity discounts. Wang et al. [29] studied a three-level JRD problem under fuzzy environment. A common limitation in all the JRD models is that they all assumed that the items are independent both in ordering and delivering, and all items can be transported together without any additional costs.However, in the real world, some heterogeneous items are prohibited from being transported together, such as rubber products and chemical products. Other examples exist in which penalty cost occurs when transporting heterogeneous items together. Considering the case of ordering food items, when a store needs to replenish both canned items and refrigerated goods, these items are usually shipped separately. If the canned items are shipped with the refrigerated goods in the same truck, the replenishment cost of the canned items increases for sharing the higher cost of refrigeration equipment. Goyal [9], Chen and Chen [6] regarded that the major ordering cost can be identified as the transport cost. Thus the additional cost of transferring can be included in the ordering cost. In order to avoid confusion, Olsen [20] called it penalty cost and proposed an evolutionary algorithm (EA) to handle this JRP. To provide reliable direction for this inevitable JRD decision-making problem, the penalty cost in JRD model that occurs when transporting heterogeneous items together is firstly studied.Due to the JRD’s difficult mathematical properties, effective solution procedures have eluded researchers. JRPs and JRDs have been proved to be an NP-hard problem and it is rather hard to find an efficient and effective algorithm [3,28]. Current approaches include iterative algorithms, genetic algorithm [4], and differential evolution algorithm [28,30,31]. However, the problem becomes much more complex than traditional JRPs and JRDs when considering heterogeneous items. To save costs, the items have large penalty cost in the same order should not be replenished together. That is to say, there is a grouping decision to avoid placing the items with bigger additional cost in the same group. When place n items into three groups, there are 3n−1 ways, the time it takes to find an optimal solution grows exponentially with n. It is rather hard to solve this JRD problem effectively by traditional approaches. Firstly, available heuristics are too problem-specific and rather difficult to design. There exists no versatility approaches. Secondly, the enumeration is inefficient. It may take years to find a solution for large problem size. Thirdly, classic genetic algorithms (GAs) have been adopted to solve the JRP/JRD, and the results illustrate that GAs are comparable suitable approaches [14,10,1]. However, GAs display some inherent shortages leading to stagnation and prematurity in some situations [32]. Due to its complex evolution operation, the calculate cost increases exponentially with the scale of the problem. So, it is necessary to find a new algorithm to deal with the JRD with heterogeneous items more accurately.As a stochastic and parallel searched algorithm, a novel algorithm called differential evolution algorithm (DE) was proposed by Storn and Price [25] for the optimization of complex continuous non-linear function. Due to its simple structure, easy implementation, quick convergence, and robustness, the DE has been turned out to be one of the best evolutionary algorithms in a variety of fields [12,34,21,32,33]. For the similar JRP with penalty cost, Wang et al. [31] designed a DE for the JRP with interdependent ordering costs based on the model of Olsen [20]. Results of numerical examples showed DE was more effective and faster than GA in most situations. However, the performance of DE should be further studied for the JRD with heterogeneous items.The aim of this paper is to develop a new JRD model with heterogeneous items based on the work of Cha et al. [4] for the first time. The differences from Cha et al. [4] are: (a) the items can be delivered jointly and (b) the penalty cost is considered both in procuring and delivering process. Moreover, an adaptive hybrid DE (AHDE) is proposed to handle this NP-hard problem. Results of contrastive examples and randomly generated problems show that AHDE is more stable and robust in solving this complex problem. The goal of this JRD policy is to determine the basic replenishment cycle time of each group, as well as the replenishment and delivery frequencies of items to minimize total system cost.The rest of this paper is organized as follows. Section 2 proposes the mathematical model. In Section 3, an AHDE is proposed to solve the problem. Section 4 contains parameters testing and numerical examples to analyze the effectiveness of the AHDE. In Section 5, the results are discussed and directions for future research are provided.A JRD problem with multi heterogeneous items which consisting of a warehouse, n suppliers, and n retailers is considered. The warehouse purchases multi items from upstream suppliers to satisfy the downstream retailers’ demands. Each retailer sells one product while other retails cannot sell the same product. All demands must be satisfied without shortages. The heterogeneous items can be transported together with a possible added penalty cost. The objective is to find a policy to minimize overall system cost. The policy is to decide which items should be placed in the same group, and how many and when the warehouse to order and delivery to satisfy the demand. The JRD problem has received considerable attention from researchers [4,7,15,17,29]. For the JRD in this study, the similar assumptions following [4,15] are as follows:•Demand rates and costs are known and constant.Shortages are not allowed.Replenishment lead time is constant.Item i is sold and stored only by retailer i.Other hypotheses are as follows:•Each item only belongs to one group while other groups cannot contain it.The capacity of transportation is unlimited.Locations of retailers are centralized.All items are assumed can be stored at the warehouse. The warehouse replenishes item i that belongs to group m at every integer multiple (ki,m) of the basic cycle time (Tm) and delivers it to retailer i. Fig. 1gives a simple description about our model (n=4, M=2).The notations used are as follows:•i, j: index of item, 1⩽i,j⩽n;n: number of items;m: index of group, 1⩽m⩽M;M: maximum number of groups;Di: demand rate of item i;Sw: warehouse’s major ordering cost;siw: warehouse’s minor ordering cost of item i;hiw: warehouse’s inventory holding cost of item i per unit per unit time;Pij: the penalty cost while ordering item i and item j at the same time, i≠j;siR: warehouse’s outbound transportation cost of item i;hiR: retailer’s inventory holding cost of item i per unit per unit time;Tm: basic cycle time of group m(decision variable);ki,m: ordering cycle time of item i in group m, integer number (decision variable);fi,m: integer number that decides the outbound schedule of item i in group m(decision variable).The total cost is composed of ordering costs, inventory holding costs and delivery costs. In this section, the structure of costs is analyzed from different aspect (warehouse, retailer).For the classic JRP, replenishment costs include ordering costs and inventory holding costs. Since heterogeneous items are transported together, it is inevitably that additional cost (penalty cost) is added in the minor ordering cost.(a)The total ordering cost of group m is:CS,m=SwTm+∑isiwki,mTm=1TmSw+∑isiw/ki,mAverage inventory holding cost of group mIn group m, the replenishment cycle of item i is Ti,m=ki,mTm. Therefore, the ordering quantity of item i can be identified from the expression Qi,m=ki,mTmDi. The delivering quantity of item i is qi,m=ki,mTmDi/fi. Fig. 2shows the inventory level of the warehouse.The average inventory holding cost of group m in the warehouse is expressed as:CH,mw=∑i(Qi,m-qi,m)hiw2=∑ifi,m-1ki,mTmDihiw2fi,m.(c)Penalty costPenalty cost Pijoccurs while item i and item j are in the same group and are ordered at the same time. Since the replenishment cycle of item i and item j is Ti,m=ki,mTmand Tj,m=kj,mTmrespectively, the interval for item i and item j in the same order is lcm(ki,m,kj,m)Tm, where lcm(a,b) is the least common multiple of a and b (similarly hereinafter). The average penalty cost in replenishment is:CP,mr=1Tm∑i,jPijlcm(ki,m,kj,m).Since the retailers’ locations are centralized, the delivery routing can be ignored. Similar to replenishment process, some items in the same group lead to increased delivery cost. So besides the regular outbound cost, a penalty cost is also added to the delivery cost.(a)The average regular outbound cost is:Co,m=∑ifi,msiR/ki,mTm.Penalty costFor item i, the ordering quantity must meet the demand in every ki,mTminterval. Since fi,mis the outbound frequency of item i, it is delivered to the retailer every ki,mTm/fi,minterval. Thus, item i and item j are delivered simultaneously every lcm(ki,mfj,m,kj,mfi,m)Tm/fi,mfj,minterval. So the average penalty cost in delivery is:CP,md=1Tm∑i,jfi,mfj,mPijlcm(ki,mfj,m,kj,mfi,m).The quantity of item i for retailer i received from warehouse is qi,m=ki,mTmDi/fiin every ki,mTm/fi,minterval. Fig. 3gives the inventory level of retailer i.So, the average inventory holding cost in retailer i can be obtained by the following expression:CH,mR=∑iki,mTmDihiR/2fi,m.Based on the discussion above, the total cost of group m can be obtained as:TCm=CS,m+CH,mw+CP,mr+Co,m+CP,md+CH,mR=SwTm+∑isiwki,mTm+∑i(fi,m-1)ki,mTmDihiw2fi,m+1Tm∑i,jPijlcm(ki,m,kj,m)+∑ifi,msiRki,mTm+1Tm∑i,jfi,mfj,mPijlcm(ki,mfj,m,kj,mfi,m)+∑iki,mTmDihiR2fi,m=1TmSw+∑isiw+fi,msiRki,m+∑i,jPijlcm(ki,m,kj,m)+∑i,jfi,mfj,mPijlcm(ki,mfj,m,kj,mfi,m)+Tm2∑iki,mDihiw+hiR-hiwfi,m.For simplicity, denote that:A=Sw+∑isiw+fi,msiRki,m+∑i,jPijlcm(ki,m,kj,m)+∑i,jfi,mfj,mPijlcm(ki,mfj,m,kj,mfi,m);B=∑iki,mDihiw+hiR-hiwfi,m.Thus, TCmcan be rewritten as:(1)TCm=ATm+BTm2.The objective is:(2)MinTC=Min∑m=1MTCm=∑m=1MMin(TCm)The problem is to select the Tm, ki,m, and fi,mto minimize TC. For a given set of ki,m, and fi,m,the optimal basic cycle of group m can be easily obtained from the first order derivative of TCm.(3)Tm∗=2A/BBy substitutingTm∗in Eq. (1), the minimum cost of group m can be reformulated as:(4)TCm∗=2·A·BSo, for the given set of ki,mand fi,m,the optimal objective value TC* can be obtained by the following equation:(5)TC∗=∑m=1MTCm∗.Although DE has been demonstrated to be an effective and robust approach by applying in the optimization of some well-know non-linear, non-differentiable and non-convex functions [2], it’s also likely to be premature due to its one-to-one selection mechanism. Moreover, the values of mutation factor F and crossover factor CR have impacts on the performance. In order to obtain a more stable and effective algorithm, an AHDE is proposed. There are two modifications of AHDE to improve the algorithm’s performance: (1) the mutation factor F is different from original DE which can be adjusted with the iteration number to meet different search granularity in the evolution stage and (2) the selection operation adopts the advantages of truncation selection in GA to overcome the shortage of one-to-one competing of original DE. The notations about AHDE are shown in Table 1.Three main operations of AHDE are described as follows.The mutated vector is obtained according to the following equation:(6)vtG+1=xr1G+F*xr2G-xr3Gr1≠r2≠r3≠t;r1,r2,r3,t∈[1,2,…,Np]Unlike the constant F in typical DE, Eq. (7) is used to create F which decreases gradually with the evolutionary generation of AHDE. The big value in initial stage can rapidly explore possible solution space; the small value in later stage can exploit the optimal solution in explored solution space.(7)F=Fmin+(Fmax-Fmin)∗e1-GenMGenM-G+1where Fminis the minimum F; Fmaxis the maximum F.The crossover operation mixes the mutated vectors and the target vectors to increase the diversity of the parameter vector. The trial vector can be generated as:(8)utG+1=ut1G+1,ut2G+1,…,utNdG+1utlG+1=vtlG+1ifrand(l)⩽CRorl=randn(t)xtlGotherwisewherel∈[1,2,…,Nd],rand(l)∈[0,1]is a randomly generated number with uniform distributed;randn(t)∈[1,2,…,Nd]is a randomly selected integer to ensure that the trial vector gets at least one gene from mutated vector [16].Considering the one-to-one competing scheme may obsolete the superior individual exclusively, the advantage of GA in selection is utilized. The modified selection scheme is: generate a new populationx1G,x2G,…,xNpG,u1G+1,u2G+1,…,uNpG+1by combining the population{x1G,x2G,…,xNpG}andu1G+1,u2G+1,…,uNpG+1; compute the fitness value of the new population; sort the fitness value obtained; select half individuals those fitness value at the front as the next generation populationx1G+1,x2G+1,…,xNpG+1.Fig. 4shows the flow of AHDE-based procedure for the proposed JRD problem.Before initialization, the structure of chromosome and mapping scheme must be confirmed firstly. There are three parts included in the chromosome, the first part is the grouping information of items; the second part is the replenishment cycle of items; the third part is the delivery frequency of items. Thus the length of chromosome is three times of the number of items. Fig. 5is a decoded chromosome of six items.The interpretation of the decoded chromosome is as follows: (a) Replenishment process. items 1, 4 belongs to group 1 which is ordered on a fixed cycle time T1 with item 1 ordered every second cycle and item 4 ordered every cycle; items 2, 3, 6 belongs to group 2 which is ordered on a fixed cycle time T2 with items 2, 6 ordered every second cycle and item 3 ordered every third cycle; item 5 belongs to group 3 which is ordered on a fixed cycle time T3 with item 5 ordered every cycle. (b) Delivery process: item 1 is delivered once during 2 T1,item 2 is delivered three times during 2 T2,and so on.The values of initial individual are generated between 0 and 1 randomly, and then are mapped in practical solution (see Fig. 5) through decoding scheme. The formulation of decoding is as follow:(9)xt,l0=roundxlL+gene(l)∗(xlU-xlL)l=1,2,…,Nd;xlL<xl<xlUwhere gene(l) is the value of the l th gene in individual t.xlL,xlUis the lower, and upper bound of xl.The bound of decision variables directly affects the search space. In order to ensure the search efficiency and find the optimal solution, the lower and upper bound of decision variables should be confirmed reasonably. It’s obviously the lower bounds of gi,ki,mand fi,mare 1s. However it’s difficult to find their upper bounds by mathematical method due to the model’s complexity. So, the upper bounds of ki,mand fi,mare directly set to 20 which is more than five times of the optimum value in Cha et al. [4] to ensure the optimal solution is not escaped. This way to confirm the upper bound for the similar problem is also adopted in Wang et al. [32]. Olsen [20] indicated that the maximum group depends on the number of items and the reference range of grouping is [5,8] when the number of items is [10,50].The following example demonstrates the main operations of AHDE by considering three items.Sequences of tth target vector, i.e. tth individual, are as follow.0.9500.2310.6070.4860.8910.7620.4570.0190.821Then, three integer numbers r1, r2, and r3 between 1 and Np,which are different from each other and different from t, are generated randomly. According to the position in the population, three individuals are chosen:Sequences ofpopr1:0.9220.7380.1760.4060.9360.9170.4100.8940.058Sequences ofpopr2:0.3530.8130.0100.1390.2030.1990.6030.2720.199Sequences ofpopr3:0.0150.7470.4450.9320.4660.4190.8460.5250.203For F=0.6, the mutated vector popvis gained according to Eq. (6).1.1250.778−0.085−0.0700.7780.7850.2650.7420.056Since the values of individuals before decoding is between 0 and 1, the values of gene(1), gene(3), and gene(4) exceed the ranges. They are substituted by the numbers randomly generated from [0,1]. So the sequences of adjusted popvis:0.6720.7780.8380.0200.7780.7850.2650.7420.056For each dimension, the sequence of nine randomly generated numbers is:0.6810.3790.8310.5020.7090.4280.3040.1890.193Simultaneously, randn(t) is randomly generated and equal to 5. If CR=0.6, the trial vector popucan be obtained according to Eq. (8) as follows:0.9500.7780.6070.0200.7780.7850.2650.7420.056In this operation, the integrated population{popt,popu}need be evaluated by calculating their fitness (i.e. the total cost) and select the next generation population from them. The details about the operation are as follows:(a)Decoding chromosomeSince there are only three products, the maximum group is set as 2, the upper bound of another two decision variables is 20. The first step of selection is decoding the chromosome using Eq. (9) as follows:Sequences of decoded popt:21210181510117Sequences of decoded popu:222116166152(b)Calculate objective functionFor a decoded individual,Tm∗can be obtained by Eq. (3). Then,TCm∗can be calculated by Eq. (4). Finally, the objective value∑TCm∗can be obtained.(c)Select the next generation populationTop 50% individuals with better performances from integrated population are selected as the next generation population. Simultaneously, the current best individual is saved.Two numeric examples are used for testing the effectiveness of AHDE. Firstly, we suppose that penalty cost Pij=0 and the other data are the same with Cha et al. [4]; then the performance of AHDE is tested in the case of real-world (Pij>0). According to the analysis of Section 3.2.2, the bound of decision variables ki,mand fi,mis both set to [1,20]. The upper bound of group identification gi,which is related to the number of items, is set to be 3 for 6 items; and it is set to 5 for 10 and 15 items.Actually, it is a contrastive numeric example with [4]. The data are shown in Table 2.To test the performances of different approaches, results of AHDE were compared with DE and GA for the following reasons:(a)A DE-based algorithm had been successfully used to solve a similar JRD problem in Wang et al. [28], results show it is effective and efficient. So, the DE may still be useful for the JRD with heterogeneous items. That is to say, DE can be a good benchmark for verifying the performance of improved AHDE.GA is also a good candidate for finding good solutions for the similar JRD. Moreover, results in [4] show that the performance of GA is extremely good as compared with the best solution of each problem (the maximum error found is 0.3660% and the average error found is only 0.0268%). In fact, GA is the best evolutionary algorithm except DE-based solutions for the similar JRD problem. Therefore, GA is also a good choice for finding good solutions for the proposed JRD.

@&#CONCLUSIONS@&#
