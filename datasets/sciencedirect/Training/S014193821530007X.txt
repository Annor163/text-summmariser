@&#MAIN-TITLE@&#
Design and evolution of web-based screen management middleware for interactive multipurpose public displays

@&#HIGHLIGHTS@&#
Web-based toolkit for multipurpose public displays and multi-device interfaces.Spatiotemporal multiplexing of digital signage with interactive applications.Finite state machine for realizing stateful interaction models.Evolution of the toolkit in 5-years long deployment of displays in a city center.

@&#KEYPHRASES@&#
Screen real estate management,User interface toolkits,Middleware,

@&#ABSTRACT@&#
We present the iterative design and evolution of a web-based screen management middleware developed for a network of interactive multipurpose public displays deployed in a city center since 2009. The middleware provides three principal user interface abstractions to content producers, application developers and display owners: the classical passive digital signage, a portal of interactive applications and a finite state machine based interaction model description. With these abstractions passive and interactive content can be spatiotemporally multiplexed onto the screen according to the given interaction model. We reflect on the evolution of the application development process and the real world usage of the middleware. We conclude with a discussion on our impressions on the web as an application development platform and the presented screen management middleware for interactive multipurpose public displays.

@&#INTRODUCTION@&#
The prices of large digital screens have been constantly decreasing which has allowed public displays to conquer city centers, highways, airport terminals and commercial centers [1]. The primary use of these displays has been advertising and information distribution, which are commonly referred to as digital signage. These displays typically show a relatively static playlist of video and images and are completely audience agnostic without any interaction capabilities. These displays are expected to become increasingly interactive as the quality and affordability of interaction technologies improve. As the investment for interactive technologies becomes feasible, the question is how to make the best use of them.The act of using large displays is qualitatively different from personal computers [2]. In addition to different form factors, large displays are typically situated in particular context and shared between users. One distinction is whether a display is interactive or not. Interactive displays have to support interaction and the underlying interaction model, which dictates how inputs are mapped to outputs. Another distinction can be made on the displays’ purpose, i.e. whether it provides a single application or multiple applications. Interactive multipurpose public displays (later MPDs) [3] differ greatly from non-interactive displays and single-purpose displays what comes to managing content and applications on the displays. Designing the screen management application programming interface (later API) defining the basic application container abstractions and controlling the user interface elements, i.e. controlling the screen real estate, is likely more challenging for multipurpose displays whereas many single purpose display systems do not have any screen management functionality at all. Davies et al. [4] provide a comprehensive review of current public display literature. They argue that the mainstream of public displays is dominated by four different applications: advertising, information boards, signage, and art and entertainment. These displays typically enhance the traditional static signage systems and are designed solely for one particular purpose. Making displays multipurpose can serve many goals. Obviously, there is the research motivation to allow different use cases to emerge freely. MPDs can also yield to a better cost-benefit ratio as a display can serve multiple purposes, which is especially beneficial in expensive installations. MPDs also allow supporting the needs of a more diverse group of stakeholders.In contrast to popular window systems in personal computers, the designers of MPDs should not rely on users to manage the user interface elements themselves. MPDs located in public places can be used by anyone, and therefore they need to be designed for first-time use [5]. While some people may become experienced users of MPDs over time, it does not negate the fact that even years after the introduction of the MPDs completely new people will find the displays and use them for the first time. Therefore, we should not assume potential users to have a prior knowledge of the content and interaction capabilities of MPDs. This is particularly true for the walk up and use type of displays [6], a typical category of MPDs, which invite spontaneous and short lived interactions [3]. Combined with the often too coarse input technologies of large displays, such interactions call for system-driven layout management instead of user-driven layout management.We contribute to the realization of MPDs by presenting the incremental design and evolution of the web-based screen management middleware for the UBI-hotspots, a network of interactive multipurpose public displays deployed around Oulu, Finland, since 2009. The middleware engages temporal and spatial multiplexing of content and a stage-based interaction model to realize a hybrid of scheduler based and interaction model based screen management. The middleware provides three principal user interface abstractions to content producers, application developers and display owners: a classical passive digital signage application dubbed the UBI-channel, a portal of interactive applications dubbed the UBI-portal and a finite state machine based description language for encoding interaction models with layout information. With these abstractions, passive and interactive contents are spatiotemporally multiplexed on the screen according to the given interaction model. We have previously published the three incremental versions of the screen management middleware in [7–9]. The novel contribution of this paper is the evolution of the middleware and application development process, together with a reflection on the real world usage of the middleware, and a thorough discussion on our impressions on the web as an application development platform and the presented screen management middleware for interactive MPDs.

@&#CONCLUSIONS@&#
