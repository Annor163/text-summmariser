@&#MAIN-TITLE@&#
Euclidean upgrading from segment lengths: DLT-like algorithm and its variants

@&#HIGHLIGHTS@&#
A DLT-like algorithm for Euclidean upgrading from segment lengths is proposed.The constraint equation is parameterized in a simple way.The plane at infinity is directly extracted from the intermediate results.This algorithm has higher accuracy than the existing linear algorithms.Weighting and nonlinear refinement further improve the accuracy.

@&#KEYPHRASES@&#
DLT-like algorithm,Euclidean upgrading,Multi-camera calibration,Segment lengths,Weighted DLT-like algorithm,

@&#ABSTRACT@&#
In this paper, how to calibrate a fixed multi-camera system and simultaneously achieve a Euclidean reconstruction from a set of segments is addressed. It is well known that only a projective reconstruction could be achieved without any prior information. Here, the known segment lengths are exploited to upgrade the projective reconstruction to a Euclidean reconstruction and simultaneously calibrate the intrinsic and extrinsic camera parameters. At first, a DLT(Direct Linear Transformation)-like algorithm for the Euclidean upgrading from segment lengths is derived in a very simple way. Although the intermediate results in the DLT-like algorithm are essentially equivalent to the quadric of segments (QoS), the DLT-like algorithm is of higher accuracy than the existing linear algorithms derived from the QoS because of a more accurate way to extract the plane at infinity from the intermediate results. Then, to further improve the accuracy of Euclidean upgrading, two weighted DLT-like algorithms are presented by weighting the linear constraint equations in the original DLT-like algorithm. Finally, using the results of these linear algorithms as the initial values, a new weighted nonlinear algorithm for Euclidean upgrading is explored to recover the Euclidean structure more accurately. Extensive experimental results on both the synthetic data and the real image data demonstrate the effectiveness of our proposed algorithms in Euclidean upgrading and multi-camera calibration.

@&#INTRODUCTION@&#
With an uncalibrated multi-camera system, a projective reconstruction of the 3D points in the common field of view is possible to be obtained from the correspondence between their projections. Rectifying this projective reconstruction to a Euclidean reconstruction, i.e. performing Euclidean upgrading, is equivalent to calibrating the intrinsic and extrinsic parameters of the cameras. In literature, camera calibration methods can be divided into two categories: self-calibration and reference-object-based calibration. The self-calibration methods do not use any geometry information about the scene and they usually require some sort of constraints on the intrinsic parameters [1–6], or constraints on the motion of cameras [7–9]. The reference-object-based methods are mainly based on some calibration objects of known size, such as 3D calibration object [10,11], 2D calibration object [12,13], and 1D calibration object [14–17]. Compared with the self-calibration methods, the reference-object-based methods can provide higher calibration accuracy due to the use of Euclidean knowledge.In the case of calibrating multi-camera systems [18,19], both 3D calibration objects and 2D calibration objects are prone to be self-occluded so that the marker points on them cannot be observed by all the referred cameras simultaneously, whereas 1D calibration objects are immune to self-occlusion. In [14,16,17], the 1D objects contain at least three marker points in order to calibrate one or more cameras, where the marker points are required to be exactly collinear and the distances between these marker points need to be measured with high precision. Liebowitz and Carlsson [20] proposed a method to recover the Euclidean structure from an affinely distorted space by the knowledge of segment lengths. This method can be used to calibrate multiple affine cameras with a segment undergoing general motions. This calibration object, a segment with two end points, is more flexible than the conventional 1D objects, since only the distance between the two end points needs to be known, and the collinearity requirement is not involved anymore. Moreover, even without the knowledge about the segment length, a Euclidean reconstruction can still be obtained despite that its global scale is undetermined.Can the Euclidean structure be recovered from a projectively distorted space from the knowledge of segment lengths? Ronda and Valdés [21] gave this question an affirmative answer and proposed three algorithms based on the quadric of segments (QoS) defined in a higher-dimensional space by a set of segments of fixed length. These algorithms based on the QoS need to solve a set of homogeneous linear equations in 55 variables, and thus require at least 54 segments in the projective space. The work of Ronda and Valdés [21] is very interesting but involves some very complex mathematics. The main contributions of them are that the relation of the QoS with the standard geometry associated to the Euclidean structure of space is given and the explicit formulae are derived to obtain the dual absolute quadric and the absolute quadratic complex from the QoS.In this paper, we find that for the Euclidean upgrading from segment lengths, it is not necessary to use such complex mathematics as in [21], or in other words, a DLT (Direct Linear Transformation)-like algorithm can be derived in a very simple way. The derived algorithm consists of two main steps: First, a set of 4-order polynomial equations on the plane at infinity and the image of the absolute conic (IAC) are introduced from a given projective reconstruction of the scene consisting of segments with known lengths. Then, these 4-order polynomial equations are transformed into a set of inhomogeneous linear equations in 54 variables by a simple linearization technique, from which the least squares solution to the 54 variables can be computed in a linear way. Although the intermediate results in the DLT-like algorithm are essentially equivalent to the QoS, the DLT-like algorithm extracts the plane at infinity more accurately than the existing linear algorithms derived from the QoS and thus has higher accuracy in Euclidean upgrading. In addition, considering that the constraint equations in the above DLT-like algorithm have different reliabilities due to the measurement errors, we design two strategies to assign weights on these constraint equations, resulting in two weighted DLT-like algorithms. At last, a new weighted nonlinear algorithm for Euclidean upgrading is explored to refine the obtained results by these linear algorithms.The rest of this paper is organized as follows. In Section 2 we describe the notations and related work. Section 3 presents a DLT-like algorithm for Euclidean upgrading from segment lengths and discusses the relationship between the DLT-like algorithm and existing algorithms. Then, two weighted DLT-like algorithms are proposed in Section 4. Section 5 introduces a weighted nonlinear algorithm to refine the results by these linear algorithms. The experimental results are reported in Section 6, followed by some concluding marks in Section 7.Here, the homogeneous coordinates of a space point are denoted by X=[x1,x2,x3,1]T, and the corresponding inhomogeneous coordinates are denoted byX˜=x1x2x3T. A segment is determined by its two end points {X,Y}. Given the images of m (m≥4) segments in general position under n (n≥2) views, the projective camera matrices and the projective reconstruction of the segments can be obtained from the correspondences between the images of the 2m end points [5], which are related to the real Euclidean structure by a 4×4 transformation matrix. The projective camera matrices of the n views are denoted by Pj(1≤j≤n), and the projective reconstruction of the end points of segments {Xi,Yi} (1≤i≤m) are denoted byXpi=X˜piT1TandYpi=Y˜piT1T.Ronda and Valdés [21] proposed three algorithms for Euclidean upgrading with a set of segments of known lengths. These algorithms are designed based on the quadric of segments (QoS): For segments {X,Y}, let σ(X,Y) be a 10-vector composed of the elements of the symmetric matrix (XYT+YXT). Then, for all the segments of fixed length d, σ(X,Y) lie on a quadric called the QoS of length d. The QoS can be written asC1+d22C2, where the dimensions of the linear spaces spanned by C1 and C2 are respectively 20 and 35. Given a segment {Xi,Yi} of length di, the constraint equation on C1 and C2 is obtained as(1)σTXpiYpiC1+di22C2σXpiYpi=0.Given at least 54 segments of known lengths, C1 and C2 can be determined uniquely. Then, C1 and C2 are used respectively to extract the Euclidean structure in the following three algorithms (C1S, C1A, and C2A):C1 in Eq. (1) determines the real structure up to a Euclidean transformation with an unknown scale. An explicit formula to derive the absolute quadratic complex from C1 is given in [21], where the absolute quadratic complex is the quadric in terms of the Plücker coordinates of the lines which intersect the absolute conic [6]. A rectifying matrix is then extracted from the absolute quadratic complex to recover a Euclidean reconstruction [6], where the scale ambiguity can be determined by changing the overall scale of the structure such that the length constraints are satisfied. This algorithm is called C1S.The scale ambiguity of the Euclidean reconstruction can also be reduced with the affine adjustment algorithm [20]. Here, an affine transformation matrix is computed linearly to minimize the total reconstruction error of segment lengths. The algorithm C1S followed by the affine adjustment step is called C1A. And the experimental results in [21] show that the affine adjustment step can improve the accuracy of Euclidean upgrading.C2 in Eq. (1) encodes the information of the plane at infinity. In the implementation of the algorithm C2A in [21], the plane at infinity is computed as the polar plane of the center of a sphere with respect to the sphere. For a given space point Y, the sphere AYwith center Y and radius infinity is extracted from C2 throughAYij=σTeiYC2σejY,where (AY)ijis the element in the i-th row and the j-th column of AY, and eiis the i-th column of the 4×4 identity matrix. And then the plane at infinity is obtained as the polar plane of Y with respect to AY, i.e.(2)π∞=AYY.When C2 is not accurate due to the error in the projective reconstruction of the segments, the result of Eq. (2) is dependent on the choice of Y. Therefore, multiple values of Y are used to compute a matrix which is composed of multiple estimations of the plane at infinity and then a final result is obtained by the SVD of this matrix. Next, a rectifying matrix is constructed from the plane at infinity to transform the projective reconstruction to an affine reconstruction. At last, the affine adjustment [20] is performed to refine the affine reconstruction to a Euclidean reconstruction.A simpler way to directly extract the plane at infinity from C2 was also given in [21]. In this simpler way, the plane at infinity is computed as(3)π∞=σTe1eαC2σeβeγ⋮σTe4eαC2σeβeγ,where α, β, and γ represent three arbitrary numbers in {1,2,3,4}. When the projective reconstruction of the segments is influenced by noise, the estimation of C2 in Eq. (1) does not satisfy its internal constraints and the accuracy of the computed π∞ in Eq. (3) is dependent on the choices of α, β, and γ. The influence of the choices of α, β, and γ was not tested in [21], and we will give some analyses in the later part of this paper.This section proposes a DLT-like algorithm for Euclidean upgrading from segment lengths, and discusses the relationship between the DLT-like algorithm and the existing linear algorithms derived from the QoS.Given a projective reconstruction of the segments and the corresponding projective camera matrices, we can always choose a projective coordinate system such that the first projective camera projection matrix has the canonical form P1=(I|0). Let π∞=(nT,1)T be the coordinates of the plane at infinity in this projective space and Kj(1≤j≤n) the intrinsic matrix of the j-th view. Then, according to the theory of stratified reconstruction [5], the Euclidean camera projection matrices of the n views and the Euclidean reconstruction {Xei,Yei} of the segments {Xi,Yi} can be expressed respectively as(4)Pej∼PjsK10−snTK11,1≤j≤n,(5)Xei∼sK1−10nT1Xpi,X˜ei=sK1−1X˜pi1+nTX˜pi,1≤i≤m,(6)Yei∼sK1−10nT1Ypi,Y˜ei=sK1−1Y˜pi1+nTY˜pi,1≤i≤m,where “∼” denotes equality up to an unknown scalar multiplication, and s is the overall scale.SinceX˜eiY˜eiis the Euclidean reconstruction of the segments {Xi,Yi} of length di, the following equation holds(7)X˜ei−Y˜eiTX˜ei−Y˜ei=di2.Denote ω=(sK1)−T(sK1)−1 as the image of the absolute conic under the first view. Substituting Eqs. (5) and (6) into Eq. (7), a constraint equation on (n,ω) is obtained as(8)X˜pi1+nTX˜pi−Y˜pi1+nTY˜piTωX˜pi1+nTX˜pi−Y˜pi1+nTY˜pi=di2.Eq. (8) can be rewritten as(9)1+nTY˜piX˜pi−1+nTX˜piY˜piTω1+nTY˜piX˜pi−1+nTX˜piY˜pi=di21+nTX˜pi21+nTY˜pi2.This is a 4-order polynomial equation in 9 variables (3 variables in n and 6 different variables in the symmetric matrix ω). Given a projective reconstruction of 9 segments, a nonlinear solution to the Euclidean upgrading can be obtained from Eq. (9) in theory. However, it is very difficult in practice to solve such a set of 4-order polynomial equations in 9 variables. In order to obtain a linear solution of (n,ω), a linearization of Eq. (9) will be derived in the next subsection.For n=[n1,n2,n3]T, its anti-symmetric matrix is defined asn×=0−n3n2n30−n1−n2n10.Define a 6×6 matrix Λ and a 6-dimensional vectorpX˜piY˜pias(10)Λ=ωωn×Tn×ωn×Tωn×,pX˜piY˜pi=Y˜pi−X˜piX˜pi×Y˜pi,then, the left hand side of Eq. (9) is rewritten as(11)1+nTY˜piX˜pi−1+nTX˜piY˜piTω1+nTY˜piX˜pi−1+nTX˜piY˜pi=X˜pi−Y˜pi+nTY˜piX˜pi−nTX˜piY˜piTωX˜pi−Y˜pi+nTY˜piX˜pi−nTX˜piY˜pi=X˜pi−Y˜pi+n×X˜pi×Y˜piTωX˜pi−Y˜pi+n×X˜pi×Y˜pi=pTX˜piY˜piΛpX˜piY˜pi.For a=(a1,a2,a3)T, define vector q(a) asqa=a12,a22,a32,2a1a2,2a1a3,2a2a3,2a1,2a2,2a3,1T.The symmetric matrix Γ=q(n)qT(n) is given by(12)Then, the right hand side of Eq. (9) becomes(13)di21+nTX˜pi21+nTY˜pi2=di2qTX˜piΓqY˜pi.According to Eqs. (11) and (13), Eq. (9) can be rewritten as(14)pTX˜piY˜piΛpX˜piY˜pi−di2qTX˜piΓqY˜pi=0.The 6×6 symmetric matrix Λ contains 21 different elements. Let Λi,jbe the element in the i-th row and the j-th column of Λ. It is noted that ω[n]×T (i.e. the upper right 3×3 sub-matrix of Λ) has zero trace, which means Λ3,6 is equal to −Λ1,4−Λ2,5. Therefore, Λ can be linearly represented by the following 20 elements:(15)λ=Λ1,1…Λ16Λ22…Λ26Λ33…Λ35Λ44…Λ46Λ55Λ56Λ66T.There are 34 different monomials n1in2jn3k(1≤i+j+k≤4) in Γ, and all these monomials can form the following vector when sorted in the graded lexicographic order:(16)γ=n14,n13n2,n13n3,n12n22,n12n2n3,n12n32,n1n23,n1n22n3,n1n2n32,n1n33,n24,n23n3,n22n32,n2n33,n34,n13,n12n2,n12n3,n1n22,n1n2n3,n1n32,n23,n22n3,n2n32,n33,n12,n1n2,n1n3,n22,n2n3,n32,n1,n2,n3T.LetcλX˜piY˜piandcγX˜piY˜pibe the coefficient vectors of λ and γ in Eq. (14), and then the following linear equation in 54 variables (20 variables in λ and 34 variables in γ) is obtained from Eq. (14):(17)cλX˜piY˜picγX˜piY˜piλγ=di2.Based on the derivations in Sections 3.1 and 3.2, the DLT-like algorithm (abbreviated as DLT-like) for Euclidean upgrading from segment lengths is performed as follows: From the projective reconstructionX˜piY˜piof a set of segments of length di, a set of linear equations is established by Eq. (17):(18)cλX˜p1Y˜p1cγX˜p1Y˜p1⋮⋮cλX˜pmY˜pmcγX˜pmY˜pmλγ=d12⋮dm2.Denote the coefficient matrix and the constant vector in Eq. (18) as C and d respectively, and then the least squares solution to Eq. (18) isλγ=C+d.where C+ denotes the pseudo-inverse of C.According to Eq. (16), the last three elements of γ=(γ1,γ2, …,γ34)T determine the normal vector of the plane at infinity:(19)n=γ32γ33γ34T.And according to Eqs. (16) and (30), the IAC is extracted from λ=(λ1,λ2, …,λ20)T byω=λ1λ2λ3λ2λ7λ8λ3λ8λ12.Then, the intrinsic matrix K1 and the overall scale s are determined by the Cholesky decomposition of ω−1=s2K1K1T.After computing (n, sK1), the Euclidean camera projection matrices and the Euclidean reconstruction of the segments are obtained according to Eqs. (4), (5), and (6). The affine adjustment algorithm [20] is then performed to refine the obtained Euclidean structure and the camera projection matrices. Finally, the intrinsic matrices and extrinsic parameters (Kj,Rj,Cj) (1≤j≤n) are obtained from the decompositions of Pejin the form of Pej∼KjRj[I−Cj].It is noted that the coefficient matrix C in Eq. (18) is quartic in the coordinates of the end points and the large condition number of C may cause instability of the DLT-like algorithm [22]. Therefore, the end points need to be normalized to improve the stability. Similarly, the normalization step is also necessary to Ronda and Valdés's linear algorithms derived from the QoS [21]. A matter of concern is that some end points in the projective reconstruction of the segments may be near infinity and then the computation of the normalization matrix will be dominated by the influence of those points. A solution to this problem is to first transform the projective reconstruction to a quasi-affine reconstruction [5] and then construct the normalization matrix. This two-step transformation has another benefit. Because the resulting space points are not split across the plane at infinity [5] and the centroid of these points is at the origin of the coordinate frame [22], the plane at infinity will not pass through the origin. It is clear that the last coordinate of the plane at infinity will not be zero and therefore parametrizing the plane at infinity as π∞=(n1,n2,n3,1)T will not cause instability.The DLT-like algorithm and the existing linear algorithms (C1S, C1A, and C2A) in [21] are all derived from the knowledge of segment lengths, and they all require at least 54 segments. Indeed, DLT-like is closely related to these linear algorithms.As mentioned in [21], the constraint equation on the QoS in Eq. (1) can be rewritten as(20)Xpi∧YpiTΣXpi∧Ypi+di22σTXpiYpiC2σXpiYpi=0,where (Xpi∧Ypi) is the Plücker coordinates of the line containing the segment {Xpi,Ypi} and Σ is the 6×6 matrix representing the absolute quadratic complex [6]. The relationship between the involved vectors and matrices in Eqs. (14) and (20) is summarized as below:1.According to the representation of the Plücker coordinates by Stan Birchfield [23],pX˜piY˜piin Eq. (10) are exactly the Plücker coordinates (Xpi∧Ypi) of the line passing throughX˜piandY˜pi. Besides, by writing Λ and Σ in terms of the elements of n and ω with the help of symbolic computation software, it is observed that Λ is the absolute quadratic complex Σ when the Plücker coordinates are defined as in Eq. (10). Therefore, it is obvious that(21)pTX˜piY˜piΛpX˜piY˜pi∼Xpi∧YpiTΣXpi∧Ypi.As seen from Eq. (21), the first term in Eq. (14) is equivalent to the first term in Eq. (20) up to a scale factor.It is easy to verify that(22)qX˜pi=H2σXpiXpi,qY˜pi=H2σYpiYpi,whereH2=1000000000010000000000100000000000000001000100000000001000000000001000000001000000000001000000000010.After writing Γ and C2 in terms of the elements of n, we can verify that Γ can be obtained by reordering the elements of C2 as(23)Γ∼H2−TC2H2−1,According to Eqs. (22), (23), and σT(Xpi,Xpi)C2σ(Ypi,Ypi)=σT(Xpi,Ypi)C2σ(Xpi,Ypi), it is obvious that the second term in Eq. (14) is equivalent to the second term in Eq. (20) up to a scale factor,(24)qTX˜piΓqY˜pi∼σTXpiYpiC2σXpiYpi.From the results in Eqs. (21) and (24), we can see that Eq. (14) is equivalent to Eq. (20) up to a scale factor. In addition, since Eq. (20) is equivalent to Eq. (1), we see that Eq. (14) and Eq. (1) are also equivalent up to a scale factor. Actually, our DLT-like algorithm and the linear algorithms in [21] use different parametrization strategies to represent the same constraint equations. According to the proof in [21], C1 and C2 can be uniquely determined from enough number of segments, and therefore Λ and Γ in the DLT-like algorithm can be uniquely determined as well. Since the parametrizations of Eqs. (14) and (20) are related by a linear transformation, the computation results of (Λ,Γ) and (Σ,C2) will have the same first-order error propagation model [24]. Besides, data normalization on the end points can reduce the second-order and higher-order error terms. Therefore, these intermediate results will have similar accuracy.It is worth pointing out that in spite of the mathematical equivalence between the constraint equations of the DLT-like algorithm and the existing linear algorithms in [21], the accuracies of Euclidean upgrading in these linear algorithms are different as shown in the experiments in Section 6 mainly because their strategies to extract (n,ω) from the intermediate results are different. Furthermore, since DLT-like, C1A, and C2A all use affine adjustment as the last step of Euclidean upgrading and the results of affine adjustment are dependent only on the estimations of n, the different accuracies among these three linear algorithms are mainly caused by their different estimations of n.The computation result in Eq. (3) is a 4-dimensional vector composed of four elements of C2, where the positions of these four elements are dependent on the choices of α, β, and γ. Besides, we find that when α, β, and γ are all equal to 4, the positions of these four elements in C2 will correspond to the positions of (n1,n2,n3,1) in Γ by the relationship in Eq. (23), and therefore this strategy to extract π∞ from C2 will be equivalent to our strategy to extract n from Γ in Eq. (19). As a result, the DLT-like algorithm has the same first-order error propagation model as the linear algorithm that extracts the plane at infinity from C2 by (3) with α=4, β=4, and γ=4. However, the implementation of the DLT-like algorithm is easier and the parametrization in the DLT-like algorithm is more direct to show the relation between (n,ω) and the intermediate matrices.If the plane at infinity is extracted from C2 using Eq. (3) with other choices of α, β, and γ, the estimation of the plane at infinity may be unstable. When at least one element of n is zero, if we choose the values of α, β, and γ such that nαnβnγis zero, then it is easy to verify that the estimation of the plane at infinity by Eq. (3) with noise-free C2 will be a 4-dimensional zero vector (0,0,0,0)T. As a result, n cannot be recovered by computing the inhomogeneous coordinates of this 4-dimensional zero vector, and therefore a degeneracy occurs. It is unavoidable that the computation result of C2 is influenced by noise in practice, and thus a 4-dimensional nonzero vector will be obtained by Eq. (3) with inaccurate C2. The estimation of n recovered by computing the inhomogeneous coordinates of this 4-dimensional nonzero vector is only determined by random noise, and therefore is a wrong estimation. After the original projective reconstruction is transformed to quasi-affine and then normalized, the magnitudes of the elements of n are usually small. When at least one element of n is close to zero, recovering n by computing the inhomogeneous coordinates of the result of Eq. (3) is close to a degeneracy for the referred choices of α, β, and γ, and therefore the resulting estimation of n has high sensitivity to noise.The DLT-like algorithm is a least squares algorithm, where the cost function is the sum of squared residuals. This cost function is not statistically meaningful [5], and the different reliabilities of the constraint equations in the DLT-like algorithm are not taken into account. To further improve the accuracy of the DLT-like algorithm, we assign each constraint equation with a weight which reflects its reliability to some extent.It is obvious that the accuracies of the end pointsX˜piY˜pi(i=1, 2, …, m) have an important influence on the reliabilities of the constraint equations in Eq. (18). The more accurate the end pointsX˜piY˜piare, the more reliably the corresponding constraint equation is used for Euclidean upgrading. Therefore, a natural idea to design weights on these constraint equations is to make use of the different accuracies ofX˜piY˜pi. Unfortunately, the true errors ofX˜piY˜picannot be known except in the case of synthetic data experiments. However, the covariance matrices of the end points can be used to represent their uncertainties. Thus, we design the weights on these constraint equations based on the covariance matrices ofX˜piandY˜pi. Here, their covariance matricesVX˜piandVY˜piare computed using the first-order error propagation method [25,5], where the noise on the image points is supposed to be independent, identically distributed, and isotropic Gaussian. After computing the covariance matrices of the end points, we propose two methods to compute the weights on the constraint equations with and without a given initial value of (n,ω) respectively, resulting in two weighted DLT-like algorithms.Suppose we already have an initial value of (n,ω) (e.g. the result calculated by the DLT-like algorithm), and then we weight the constraint equations in the DLT-like algorithm in a similar way to the well-known “iterative weighted least squares” [26], where the weights on the constraint equations are computed as the inverses of the standard derivations of their residuals.According to Eqs. (14) and (17), the residual of the i-th constraint equation in Eq. (18) can be rewritten asϵi=pTX˜piY˜piΣpX˜piY˜pi−di2qTX˜piΓqY˜pi.Then, the Jacobians of ϵiwith respect toX˜piandY˜piare given by∂ϵi∂X˜pi=2pTX˜piY˜piΣ∂pX˜piY˜pi∂X˜pi−di2qTY˜piΓ∂qX˜pi∂X˜pi,∂ϵi∂Y˜pi=2pTX˜piY˜piΣ∂pX˜piY˜pi∂Y˜pi−di2qTX˜piΓ∂qY˜pi∂Y˜pi,where Λ and Γ are computed with the initial value of (n,ω), and the Jacobians ofpX˜piY˜pi,qX˜pi, andqY˜piare∂pX˜piY˜pi∂X˜pi=−Y˜pi×I,∂pX˜piY˜pi∂Y˜pi=X˜pi×−I,∂qX˜pi∂X˜pi=22x100x2x30100002x20x10x30100002x30x1x20010T,∂qY˜pi∂Y˜pi=22y100y2y30100002y20y10y30100002y30y1y20010T.Then, the weight on ϵiis computed as(25)wi=1stdϵi=1∂ϵi∂X˜piVX˜pi∂ϵi∂X˜piT+∂ϵi∂Y˜piVY˜pi∂ϵi∂Y˜piTand the weighted DLT-like algorithm is given by(26)WCλγ=Wd,where W=diag(w1,w2, …,wm), and the computations of C and d are the same as in Eq. (18). The least squares solution to Eq. (26) isλγ=WC+Wd.After computing the weights on the linear equations in the DLT-like algorithm, a set of weighted linear equations can be constructed and solved. To reduce the computational complexity, the weights in our algorithm are not recomputed and thus the set of weighted linear equations is solved only once. The Euclidean reconstruction is then obtained in the same manner as the DLT-like algorithm, and affine adjustment is also performed as the last step. The above weighted DLT-like algorithm is named as WDLT-Like1.To avoid the requirement of an initial value of (n,ω) in the computation of weights in Eq. (25), some approximation must be made to replace the Jacobians of ϵiwith respect toX˜piandY˜pi. Without any prior information about (n,ω), it is intuitive to treat the six unknown variables in the Jacobians of ϵiequally. We assume that the typical values of∂ϵi/∂Y˜piand∂ϵi/∂Y˜piare both (1,1,1) multiplied by an unknown and unimportant factor. Define e as the 3-dimensional vector of ones, e=(1,1,1)T. Then, an approximation of Eq. (25) is given by(27)wi=1eTVX˜pie+eTVY˜pie.It is noted that the expression (Eq. (25)) is invariant under affine transformations on the projective reconstruction but Eq. (27) is not invariant even under orthogonal transformations. Therefore, the expression for the weights is not satisfactory and some further modifications are necessary. Since the covariance matricesVX˜piandVY˜piare positively definite, their elements with the largest magnitude are on the diagonal. We approximate them with their diagonal matrices, and theneTVX˜pieandeTVY˜pieare approximated with the traces ofVX˜piandVY˜pi. The new approximation of Eq. (25) is given by(28)wi=1traceVX˜pi+traceVY˜pi.It is easy to check that this expression is invariant under orthogonal transformations. This way of computing weights depends only on the covariance matrices of the reconstructed end points, and it is easier to compute than Eq. (25). After computing the weights using Eq. (28), a set of weighted linear equations can be constructed and then solved in a similar manner to the implementation in WDLT-Like1. And this new weighted DLT-like algorithm is named as WDLT-Like2.RemarkIt is noted that compared with WDLT-Like1, the computation of weights in WDLT-Like2 has lower computational cost and the initial value of (n,ω) is not needed in WDLT-Like2. However, WDLT-Like2 has a little lower accuracy as shown in our experimental results in Section 6.As discussed in Section 3.1, the minimal number of segments required to recover the Euclidean structure by solving polynomial equations is 9 in theory, but the linear algorithms (C1A, C2A, DLT-like, WDLT-Like1, and WDLT-Like2) require at least 54 segments. In these linear algorithms, severe over-parametrizations are introduced to linearly represent C1, C2, Λ, and Γ. To avoid over-parametrization reducing the accuracy of Euclidean upgrading, we introduce a nonlinear optimization step (abbreviated as OS) to reinforce the length constraints, where the cost function to be minimized is the total squared residuals of the lengths of the reconstructed segments,(29)fn,sK1=∑i=1mϵi2=∑i=1msK1−1X˜pi1+nTX˜pi−sK1−1Y˜pi1+nTY˜pi−di2.The cost function (Eq. (29)) can be minimized by the Levenberg–Marquardt algorithm [5], and the initial value of (n, sK1) needed to start the iterative minimization is provided by a linear algorithm.As discussed in Section 4, the reliabilities of the linear equations in the DLT-like algorithm are different. Similarly, the reconstruction residuals ϵi(1≤i≤m) in Eq. (29) also have different reliabilities. Therefore, to further improve the accuracy of the basic optimization step, we assign different weights to the residuals ϵi, resulting in a weighted optimization step (abbreviated as WOS) where the form of the cost function is(30)fn,sK1=∑i=1mwiϵi2=∑i=1mwisK1−1X˜pi1+nTX˜pi−sK1−1Y˜pi1+nTY˜pi−di2.Since it is necessary to give beforehand an initial value to start an iterative optimization procedure, the weights wi(1≤i≤m) in Eq. (30) are computed with this initial value of (n, sK1) in the same manner as WDLT-Like1. Here, the weight on residual ϵiis computed aswi=1stdϵi=1∂ϵi∂X˜piVX˜pi∂ϵi∂X˜piT+∂ϵi∂Y˜piVY˜pi∂ϵi∂Y˜piT,where the Jacobians of ϵiwith respect toX˜piandY˜piare∂ϵi∂X˜pi=1diX˜pi1+nTX˜pi−Y˜pi1+nTY˜piTω1+nTX˜piI−X˜pinT1+nTX˜pi2,∂ϵi∂Y˜pi=1diX˜pi1+nTX˜pi−Y˜pi1+nTY˜piTω−1+nTY˜piI+Y˜pinT1+nTY˜pi2.The weighted cost function in Eq. (30) can be minimized in the same way as in the basic optimization step. Then, the Euclidean structure is recovered with the obtained estimation of (n, sK1). Similar to WDLT-Like1, the weights in the weighted optimization step are not recomputed with the refined result of (n, sK1) to reduce computational complexity.

@&#CONCLUSIONS@&#
