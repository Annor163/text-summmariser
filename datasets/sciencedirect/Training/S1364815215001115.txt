@&#MAIN-TITLE@&#
Open source software for visualization and quality control of continuous hydrologic and water quality sensor data

@&#HIGHLIGHTS@&#
We developed a workflow for scripting of time series data quality control.ODM Tools automatically scripts manual quality control data edits in Python.ODM Tools preserves provenance of quality control edits.ODM Tools is open source and cross platform compatible.ODM Tools demonstrates options for desktop application development and deployment using Python.

@&#KEYPHRASES@&#
Data management,Open source software,Sensor data,Python,Hydrologic observations,Quality control,

@&#ABSTRACT@&#
It is common for in situ hydrologic and water quality data to be collected at high frequencies and for extended durations. These data streams, which may also be collected across many monitoring sites require infrastructure for data storage and management. The Observations Data Model (ODM), which is part of the Consortium of Universities for the Advancement of Hydrologic Science, Inc. (CUAHSI) Hydrologic Information System (HIS), was developed as a standard data model in which to organize, store, and describe point observations data. In this paper we describe ODM Tools Python, an open source software application that allows users to query and export, visualize, and perform quality control post processing on time series of environmental observations data stored in an ODM database using automated Python scripting that records the corrections and adjustments made to data series in the quality control process and ensures data editing steps are traceable and reproducible.ODM Tools PythonJeffery S. Horsburgh, Stephanie L. Reeder, Amber Spackman Jones, Jacob Meline, and James Pattonjeff.horsburgh@usu.edu2014A personal computerMicrosoft Windows, Mac OSX, or Linux operating systemAll source code, installers, example ODM databases, and documentation for the ODM Tools Python software application can be accessed at https://github.com/UCHIC/ODMToolsPython.Free. Software and source code are released under the New Berkeley Software Distribution (BSD) License, which allows for liberal reuse of the software and code.

@&#INTRODUCTION@&#
Environmental monitoring with in situ environmental sensors presents many challenges for data management, particularly for large-scale networks consisting of multiple sites, sensors, and personnel. Over the past decade, there has been a drastic increase in the use of automated data collection in scientific research. The high frequency, extended duration, and spatial distribution of data collection efforts require cyberinfrastructure to support and facilitate research using sensor data streams. Researchers and practitioners need tools for data import and storage as well as data access and management. In addition to addressing the challenges presented by managing the sheer quantity of data, monitoring network managers need practices to ensure high data quality, including standard procedures and software tools for data post processing and quality control.In this paper we describe a workflow for scripted quality control editing of continuous, in situ time series datasets and the architecture and functionality of an open source software tool called ODM Tools Python that implements this workflow. ODM Tools Python enables users to query and export, visualize, and edit time series observations stored in an Observations Data Model (ODM) database (Horsburgh et al., 2008). ODM was developed as a standard data model in which to organize, store, and describe point observations (e.g., observations made at fixed point monitoring sites such as streamflow, water quality, and weather monitoring stations) with sufficient metadata for observations to be unambiguously interpreted by multiple users. ODM is implemented in relational database software to permit flexibility in querying and data retrieval. ODM Tools Python is a modernized and advanced version of the original ODM Tools software, which, along with ODM, was developed as part of the HydroServer software stack (Horsburgh et al., 2010) within the Consortium of Universities for the Advancement of Hydrologic Science, Inc. (CUAHSI) Hydrologic Information System (HIS) (Horsburgh et al., 2009; Tarboton et al., 2009).Previous versions of ODM Tools (Horsburgh et al., 2011) were developed in Microsoft Visual Studio .NET and only supported ODM databases implemented in Microsoft SQL Server, limiting deployment to Microsoft Windows-based computers. Functionality consisted of exporting data series and associated metadata, plotting and summary of single data series, generation of derivative data series, and editing data series using a set of simple tools implemented within the ODM Tools graphical user interface (GUI). However, there were no capabilities for recording or storing the sequence of edits made to a data series in the quality control process. Furthermore, there were not adequate capabilities to support the full quality control workflow, especially for long time series that were difficult to process in a single editing session or time series continually being updated as new data were collected. These were major limitations that affected the usefulness of ODM Tools where recording the provenance of data edits was desired or required. Irrespective of the tool being used to perform quality control, it remains common for some scientists to perform these steps at the same time as data visualization and analysis without preserving the provenance of the quality control process in a way that it is accessible to others or for future reference. We sought to address this deficiency with the software described in this paper.The new, Python-based version of ODM Tools described here adds a modernized GUI with dockable components, multiple platform support (Windows, Linux, and Mac), support for multiple relational database management systems (RDBMS) (Microsoft SQL Server, PostgreSQL, and MySQL), enhanced plotting and visualization, and automated scripting of quality control edits performed on data series through an integrated Python script editor and console. Additional improvements include enhanced queries for data selection and export, interactive data selection directly on a time series plot, additional options for how edits to data series are versioned and saved, and the ability to plot multiple data series simultaneously with various plot types. The contribution of this paper is in the description the quality control editing workflow for continuous sensor data streams and in the architecture of the ODM Tools Python software that implements the workflow and enables the features listed above. We anticipate that the functionality that we have developed in ODM Tools Python will be widely applicable to managers of continuous sensor data and that the architecture, software development approach, and deployment approach that we have used for the ODM Tools Python software will be informative for researchers developing similar tools.In Section 2 we provide further background on quality control for hydrologic and water quality sensor data streams and associated challenges. Section 3 describes our workflow for supporting the quality control editing process. Section 4 describes our approach to address these challenges and the architecture and software implementation for ODM Tools Python. Section 5 describes the deployment approach we selected for the ODM Tools Python software, and Section 6 provides an example of using ODM Tools Python for quality control editing and post processing of a continuous water quality time series. Finally, we conclude with a summary of the research results.

@&#CONCLUSIONS@&#
