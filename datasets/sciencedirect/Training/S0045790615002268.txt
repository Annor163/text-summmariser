@&#MAIN-TITLE@&#
Consistency maintenance of compound operations in real-time collaborative environments

@&#HIGHLIGHTS@&#
We append two history buffers to maintain the relationships between original operations and decomposed ones.Combined with AST method, the “Retrace-Undo-VT-Redo-Retrace” strategy is adopted to realize the consistency maintenance of compound operations.Based on multi-version strategy, the Undo/Redo algorithms are proposed with case analyses to verify the effectiveness.

@&#KEYPHRASES@&#
Real-time collaboration,Address space transformation,Consistency maintenance,Compound operation,Undo/Redo,

@&#ABSTRACT@&#
In real-time collaborative environments, address space transformation strategy can be used to achieve consistency maintenance of shared documents. However, as for the execution of compound operations, they are firstly decomposed into primitive operations, the relationships between the referencing objects and referenced objects are lost during the decomposition process. Besides, the Undo operations in this environment are targeted at compound operations, but not decomposed basic ones. However, the traditional algorithms take primitive operation as the manipulation unit, thus leading to semantic inconsistencies of compound Undo operations. This paper appends two history buffers to maintain the relationships between the original operations and the decomposed ones and introduces “Retrace-Undo-VT-Redo-Retrace” strategy to realize the consistency maintenance of compound operations. Also, this paper introduces the version-decomposition strategy, describes the main algorithms of the compound Undo operations and analyses the validity of the strategy. Case analysis is given to show the effectiveness of the strategy.

@&#INTRODUCTION@&#
In parallel computing systems, a task is decomposed into multiple subtasks which are allowed to be carried out simultaneously, and parallel computing has been applied to different fields. Within the parallel collaborative design field, collaborative groupware systems support the concurrent editing of people who are geographically dispersed all over the world. In order to achieve high responsiveness and unlimited collaboration, replicated architecture is adopted widely [1,2]. In this architecture, local operations are executed immediately while remote operations are required to execute inclusion transformation (IT) or exclusion transformation (ET) to include or exclude the execution effects of other concurrent operations (that is the Operation Transformation strategy, abbr. as OT) [1,2,23–25], or remote operations are executed under the retraced document status (that is the Address Space Transformation strategy, abbr. as AST) [3,26]. Many issues in this research field have attracted the focus of the researchers and practitioners, such as consistency maintenance [1–4], Undo/Redo [5,6,27], conflict resolution [7,8,28–30], and intention preservation [1–4]. There are some prototype systems in both text editor field (such as CoWord [9] and CoPowerpoint [10]), multimedia field (such as CoFlash [31] and computer-aided design field (such as CoAutoCAD [11] and CoMaya [12]). These systems provide Insert, Delete, Update and Undo/Redo operations which are targeted at basic objects.However, not all objects in the collaborative design environment are basic ones and not all operations in this field are Insert, Delete, Update or Undo/Redo operations. In fact, the operations in the collaborative design environment can be categorized according to two factors: the number of the target objects and the reference attribute of the operations (see Table 1). In Table 1, the SO-SO Ops are also called primitive or atomic ones. And only these operations can be tackled directly by the traditional consistency maintenance algorithms (such as OT and AST). Compound operations refer to the operations, which need to be decomposed into one or several primitive operations before execution [13,14]. MO-SO, SO-RO, and MO-RO belong to compound operations. During the decomposition and broadcasting process of the compound operations, the relationship between the decomposed operations and the original operation is lost, which leads to the independent execution of these operations. And in execution process, the dependency relationship between the target object and the reference object is lost, thus resulting in the intention violation of the compound operations.Take Fig. 1 as an example. Two designers are responsible for the design of a building’s outline. One designer completes the outline design of one window. Another designer releases Mirror operation to create a symmetric window. However, during the release process of the Mirror operation, if the first designer releases an Update operation to change the window’s height, due to the lack of semantic consistency maintenance, the two windows with different height attribute will be obtained (see Fig. 1(b)), which violates the semantic intention of the Mirror operation for the two designers.When users press the Undo or Redo button through the interface, only the last executed operation (locally or globally according to the different undo schema [6]) will be selected as the target operation (see Fig. 2), which destroys the user’s semantic intention. Moreover, as for the reference operations, since the execution effect has been reflected in its constraint following operations by virtual transformation (VT) function [13], the Undo operation of that operation cannot be executed without removing its effect on its constraint following operations (see Fig. 3). Thus, strategies must be designed to solve these problems from the perspective of multiple objects and reference operations. Note that Obj1 denotes the whole annulus, Obj3 denotes the outer circle and Obj4 is the inner circle in Figs. 2 and 3 below.Our research group has proposed to use CLAF (Check-Last-Avoid-Future) strategy to maintain the semantic consistency of the step-wise operations [13]. In fact, compound operations include not only step-wise operations (which need N steps to be completed, where N⩾2), but also some single-step operations (which need to reference other objects to get the parameters of itself). The paper focuses on the semantic consistency maintenance of the compound operations as well as the compound Redo/Redo operations based on AST strategy. The paper introduces to add Original Op HB and Local-exe Op HB to the AST framework to maintain the relationship between the reference operations, modifies the operation generation process of the local site and the operation reception process of the remote sites to maintain the relationship during the broadcasting process, introduces “Retrace-Undo-VT-Redo-Retrace” to “Mark & Retrace” process of the AST strategy to realize the consistency maintenance of the compound operations. Besides, the paper analyses the deficiencies of the resolution process of the Undo/Redo operations with the traditional Undo/Redo schema, discusses the pre-condition of the Undo/Redo operations, gives new definition for the conflict operations between Undo/Redo operations and other operations, devises conflict resolution strategy based on multi-version decomposition strategy, describes the work flow of compound Undo/Redo operations both in the local sites and the remote sites, and details the main algorithms.The rest of the paper is organized as follows. Section 2 describes the related works. In Section 3, the AST strategy and concepts of basic operations are introduced. Section 4 describes the consistency maintenance algorithm of the compound operations based on AST. In Section 5, we analyze the consistency maintenance of the compound Undo/Redo operations. Section 6 discusses the algorithm’s validity. Finally, the paper is concluded with summarizing our main contributions and discussing future work.

@&#CONCLUSIONS@&#
