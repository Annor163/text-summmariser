@&#MAIN-TITLE@&#
The design of simple subcontracting rules for make-to-order shops: An assessment by simulation

@&#HIGHLIGHTS@&#
Evaluates subcontracting rule performance in an assembly job shop by simulation.Existing rules are refined to improve their applicability to multi-station shops.The design of new rules is based on Workload Control theory.The new rules smooth the direct load queuing in front of a work center.This allows performance to be significantly improved compared to existing rules.

@&#KEYPHRASES@&#
Production,Subcontracting,Make-to-order,Workload Control,Job shop,

@&#ABSTRACT@&#
Subcontracting can be an important means of overcoming capacity shortages and of workload balancing, especially in make-to-order companies characterized by high variety, high demand variation and a job shop configuration. But there is a lack of simple, yet powerful subcontracting rules suitable for such contexts. The few existing rules were developed for single work center shops and neglect the actual subcontracting lead time, meaning some subcontracted jobs are destined to become tardy. This study uses Workload Control theory on matching required and available capacity over time to propose four new rules that address these shortcomings. The new rules are compared against four existing rules using an assembly job shop simulation model where the final, assembled product consists of several sub-assemblies that either flow through an internal job shop or are subcontracted. The best new rules stabilize the direct load queuing in front of a work center and significantly improve performance compared to the existing rules. For example, when the workload exceeds capacity by 10%, a 50% reduction in percentage tardy can be achieved. By examining how the workload behaves over time, we reveal that improvements come from selectively subcontracting the sub-assemblies that would otherwise cause overloads, thereby cutting off peaks in the workload.

@&#INTRODUCTION@&#
Workload balancing is a key concept for managing the performance of make-to-order companies, which often suffer from large workload fluctuations (Thürer et al., 2014). Two established approaches for maintaining a balanced workload are: (i) holding inventory, meaning capacity usage is fairly constant and demand peaks are satisfied from stock and (ii) dynamic pricing and promotions, thus manipulating demand to fit capacity. But there is also a third option – subcontracting during overload periods (Kamien & Li, 1990). Given the high degree of customization common in make-to-order companies, this may even be a more suitable approach than (i) and (ii) above. This study outlines four new subcontracting rules for a high-variety make-to-order environment to cope with periods where requirements exceed available capacity. The focus is on simple rules applicable to managers of small and medium-sized shops – which often produce on a make-to-order basis (e.g. Stevenson, Hendry, & Kingsman, 2005) – to determine which jobs to subcontract and which to process internally.While much recent research has focused on subcontracting (e.g. Chen & Li, 2008; Chung & Choi, 2013; Lee & Choi, 2011; Lee & Sung, 2008a, 2008b; Qi, 2011), most of this has assumed a static scheduling problem and/or deterministic demand. This limits the applicability of the work to dynamic production environments with stochastic demand – like high-variety make-to-order companies. To the best of our knowledge, the only study on simple subcontracting rules for make-to-order companies was presented by Bertrand and Sridharan (2001). The authors introduced four rules to guide the subcontracting decision and used discrete event simulation to evaluate their impact in a single work center shop. Bertrand and Sridharan’s (2001) results showed that subcontracting rules can lead to significant performance improvements, especially when the current shop floor workload is considered. The paper represents an important starting point for further work, but – as is often the case when exploring a new field – the authors focused on the mathematical tractability of their work at the expense of practicality. Hence, their rules have two key shortcomings: (i) they were developed for a single work center shop – in practice, multiple work centers usually exist and (ii) they do not consider the actual subcontracting lead time – i.e. whether a job actually can meet its due date – resulting in jobs being subcontracted that will inevitably become tardy. It follows that there is a need to extend Bertrand and Sridharan’s (2001) study by developing and testing subcontracting rules that: (i) are suitable for shops with multiple work centers and both high routing and high processing time variability and (ii) ensure only jobs that can realistically meet their due date if subcontracted are selected.In response, this study outlines four new rules that draw on Workload Control theory (e.g. Fredendall, Ojha, & Patterson, 2010; Thürer, Stevenson, Silva, Land, & Fredendall, 2012; Thürer et al., 2014) and compares them against Bertrand and Sridharan’s (2001) rules using an assembly job shop simulation model. Workload Control is a production planning and control concept for small and medium-sized make-to-order shops (Hendry & Kingsman, 1989; Zäpfel & Missbauer, 1993; Stevenson et al., 2005) that matches required and available capacity over time, molding the workload into a shape that can be produced profitably and on time (Kingsman, Tatsiopoulos, & Hendry, 1989; Kingsman, 2000). This balances the workload across work centers and over time, and means Workload Control is especially suitable as a theoretical backdrop to new subcontracting rules. The study also contributes to Workload Control theory: although the Workload Control literature recognizes subcontracting as an important output control mechanism, along with overtime and reallocating operators from under-loaded to overloaded work centers (e.g. Kingsman & Hendry, 2002), it lacks explicit theory on the subcontracting decision, as recently noted by Hendry, Huang, and Stevenson (2013) when implementing the Workload Control concept in practice.The literature on subcontracting (and outsourcing) is vast. This section reviews work from a stream of this literature that has some relevance to our study.Back in the 1990s, Webster, Alder, and Muhlemann (1997) highlighted the lack of research on subcontracting and related issues in manufacturing. Since then, there has been growing interest, especially in the scheduling literature. For example, Lee, Jeong, and Moon (2002) developed an advanced planning and scheduling model with subcontracting options for an assembly job shop that aimed to minimize the make-span subject to a due date constraint for the sub-assembly job shop. Chung, Lee, Shin, and Park (2005) developed an algorithm for the job shop scheduling problem that decreased tardiness by either rescheduling or subcontracting operations at bottleneck resources, while Merzifonluoglu, Geunes, and Romeijn (2007) provided profit-maximizing production planning models for determining the optimal demand and internal production capacity levels when subcontracting and overtime options are available. Meanwhile, Chen and Li (2008) studied a model with parallel machines in which a manufacturer receives a set of customer orders and has to decide which to process and which to subcontract. The model also provided a production schedule for internally produced jobs that minimizes the sum of the production and subcontracting costs.In addition, Lee and Sung (2008a, 2008b) considered a single-machine scheduling problem where a set of orders must either be allocated to a single machine or be undertaken externally, while Bichescu, Fry, and Polak (2009) used harmonic analysis to create a portfolio of recurrent in-sourcing and outsourcing contracts to balance the workload. Qi (2011) later studied the production scheduling problem for a two-stage flow shop with subcontracting options, while Lee and Choi (2011) and Chung and Choi (2013) looked to minimize the sum of the make-span and total outsourcing (or subcontracting) costs: Lee and Choi (2011) for a two-stage production system with half-finished goods; and Chung and Choi (2013) for a two-machine ordered flow shop problem.While such papers make a valuable contribution – and some, e.g. Lee et al. (2002), are actually in the context of a complex assembly job shop – they assume the scheduling problem is static (not dynamic) and that demand is deterministic. This limits the applicability of the work to the complex production environments typically found in make-to-order shops in practice. To the best of our knowledge, the only study to date on simple subcontracting rules to guide decisions regarding which jobs to subcontract and which to process internally that is relevant to high-variety environments with stochastic demand was presented by Bertrand and Sridharan (2001). It is therefore this particular study that will be used as a starting point for the (re)design of simple subcontracting rules for make-to order shops. The study will be discussed next.Four rules were introduced by Bertrand and Sridharan (2001) as follows:•Subcontracting Rule 1: The subcontracting decision is taken immediately upon the arrival of a job. If the total remaining slack time of job j (i.e. job j’s due date (dj) minus the current time t) is shorter than a predetermined critical lead time (LC), it is processed internally and released to the internal shop. Otherwise, i.e. if dj−t⩾LC, the job is subcontracted.Subcontracting Rule 2: The subcontracting decision is taken at periodic time intervals of length T. Jobs await the subcontracting decision in a pre-shop pool. First, a maximum number of jobs (m) is determined for the internal shop. At the beginning of each period, all jobs in the pool are sequenced according to the Earliest Due Date (EDD) rule. Then, starting with the first job in the sequence, jobs are selected for internal processing and released into the internal shop as long as the number of selected jobs⩽m. Any remaining jobs are then subcontracted.Subcontracting Rule 3: This rule is similar to Rule 2 but incorporates feedback on the current work-in-process on the shop floor. First, a workload norm (N) or specific upper workload limit is determined for the internal shop. At the beginning of each period, all jobs in the pre-shop pool are sequenced according to the EDD rule. Then, starting with the first job in the sequence, jobs are selected for internal processing and released to the internal shop as long as the aggregate of the selected workload and the current remaining workload on the shop floor⩽N. As with Rule 2, any remaining jobs are then subcontracted.Subcontracting Rule 4: This rule is similar to Rule 3 except that only those jobs that did not fit the norm for which the total remaining slack time is less than or equal to the expected subcontracting lead timeLjSplus the period until the next subcontracting decision, i.e.dj-t⩽LjS+T, are subcontracted. The remaining jobs wait in the pre-shop pool for the next subcontracting decision.Bertrand and Sridharan (2001) examined the performance of their four rules using simulation. They found Rule 3 and Rule 4 to be the best-performing options, underlining the importance of feedback information on the current workload for making subcontracting decisions. But, despite the important contribution of their paper, Bertrand and Sridharan’s (2001) rules suffer from two weaknesses:(1)Only the shop floor workload, i.e. the workload of the shop floor as a whole, is considered. Hence, workload fluctuations across work centers and over time are ignored. While this had no impact in their study – where the shop floor consisted of only one work center – multiple work centers with fluctuating workloads are typical of make-to-order shops with high routing and processing time variability.The rules completely neglect the subcontracting lead time, i.e. whether a job can actually meet its due date. Hence, a job for whicht+LjS>djmay be subcontracted, resulting in jobs being subcontracted that are destined to become tardy.Refinements to overcome both weaknesses will be discussed in the next section, where new rules for subcontracting in high-variety make-to-order environments are outlined.First, two new rules that consider the workload across work centers and over time are presented in Section 3.1 to address criticism (1) above. Then, second, Section 3.2 addresses criticism (2) and further enhances the two new rules to also consider the feasibility of subcontracting.We will use Workload Control theory on the composition of workloads and the use of direct load buffers (e.g. Fredendall et al., 2010; Thürer, Stevenson, Silva, Land, et al., 2012; Thürer et al., 2014) to develop new rules that allow the shop workload to be controlled across work centers and over time, thereby addressing criticism (1) above. In Workload Control theory, the workload of a work center is typically divided into: (a) the direct (or imminent) load, i.e. the workload currently queuing at a particular work center; and, (b) the indirect load, i.e. the workload still upstream of a work center and yet to arrive (Land & Gaalman, 1998). The direct load functions as a buffer, ensuring the swift and even flow of work through the shop. To be most effective, the direct load should be maintained at a low, stable level (Thürer, Stevenson, Silva, Land, et al., 2012).Similarly, a subcontracting rule should function to create a low and stable direct load in front of each work center – when direct loads increase too much, work can be subcontracted. However, simply extending Rule 3 above, for example, based on the direct load only would neglect the contribution of the indirect load, which can represent the majority of the total workload of a job – particularly when jobs have long routings. On the other hand, aggregating the direct and indirect loads would neglect the timing dimension, i.e. when an order will actually arrive at a work center and contribute to the direct load. Hence, considering an aggregate workload when making subcontracting decisions could result in jobs being subcontracted because a work center has a high indirect load while the direct load currently queuing is zero and the work center is idle (Land & Gaalman, 1998).In light of the above, two approaches from the Workload Control literature seem appropriate for guiding the subcontracting decision: (i) using a corrected measure of the aggregate load for each work center (see, e.g. Oosterman, Land, & Gaalman, 2000) and (ii) using a time-phased cumulative workload for each work center, i.e. looking at the workload over time in combination with forward finite loading (see, e.g. Bertrand, 1983a, 1983b; Thürer, Huang, Stevenson, Silva, & Godinho Filho, 2012; Thürer, Stevenson, Silva, & Huang, 2012). Both approaches will be introduced and a rule based on each designed in Sections 3.1.1 and 3.1.2, respectively.Under an aggregate measure of the workload – as criticized above – the processing times of each operation in the routing of a job contribute to the workload of the respective work center(s) from confirmation until operation completion. Since the aggregate load represents all work on the shop floor on its way to a work center (queuing and upstream), a work center positioned further downstream will need a higher aggregate load – even when this work center position is temporary due to the specific set of orders on the shop floor. According to the corrected aggregate workload method, the load contribution is converted (or corrected) by dividing the processing time by the position of the work center in the routing of an order. In other words, for the first work center, we consider a 100% operation processing time contribution, but only 50% for the second, 33.33% for the third, etc. As each order contributes to all loads from the moment it enters the shop floor, this method compensates for the fact that an order will only be part of the direct load of the second work center, for example, for around 50% of the time that it contributes. Oosterman et al. (2000) showed how controlling the corrected aggregate load stabilizes the direct load buffer currently queuing at a particular work center.The resulting subcontracting rule can be summarized as follows:•Subcontracting Rule 5: At the beginning of each period, all jobs in the pool are sequenced according to the EDD rule. Then, starting with the first job in the EDD sequence, each job is considered for internal processing once. If job j’s processing time at the ith operation in its routing pij– corrected for operation number i – together with the current corrected workload at work center s corresponding to operation iWtSCfits within the workload norm at this work center (Ns), that ispiji+WtSC⩽NS∀i∈Rjwith Rjbeing the ordered set of operations in the routing of job j, then the job is selected to be processed internally, released to the shop and its load contribution is included in the corrected aggregate load measure, that isWtSC:=WtSC+piji∀i∈RjOtherwise, the job is subcontracted.Forward finite loading can be used (e.g. Bertrand, 1983a, 1983b; Thürer, Stevenson, Silva, & Huang, 2012; Thürer, Huang, et al., 2012) to create a balanced time-phased cumulative workload. Under forward finite loading, an estimate of the operation due dates (dij) is determined by Eq. (1). The dynamic flow time allowance factor α – based on the time-phased cumulative workload (WtS) and capacity (CtS) at work center s performing the operation – is used to account for the estimated operation waiting time of a job before being processed at each work center. The current time represents d0j.(1)dij=dij-1+pij+αTo determine the flow time allowance factor α, first, the actual cumulative workload and capacity in each time bucket are determined for each work center. Then, starting with the first work center in the routing of the job:(1)If the time bucket into which the operation due date falls has enough free capacity to include the workload of the job at this work center – that is WtS+pij⩽CtS⋅uS, with uSequal to the utilization rate – then the operation is scheduled into the time bucket and the operation due date is given by the end of that time bucket.If no or insufficient capacity is available, the next time bucket is considered until a time bucket is reached into which the (full) workload contribution can be successfully loaded.This is repeated at the next work center in the job’s routing until all operation due dates have been determined, with the last operation due date becoming the expected completion date of the order. This operation completion date – which reflects the current workload and capacity on the shop floor – is used to guide the subcontracting decision and control the time-phased cumulative workload as follows:•Subcontracting Rule 6: At the beginning of each period, all jobs in the pre-shop pool are sequenced according to the EDD rule. Then, starting with the first job in the sequence, each job is considered once. An estimate of the completion datetjCis determined using the forward finite loading procedure. IftjC⩽dj-b, where b is a constant, then the job is processed internally: it is released to the internal shop and its load contribution is included in the respective time buckets of the time-phased cumulative workload measure. Otherwise, the job is subcontracted.While the two rules introduced above allow the direct workload across work centers and over time to be controlled – molding the internal workload into a shape that can be produced on time – they neglect the actual subcontracting lead time, i.e. whether or not the subcontracted job can be processed in time (see criticism (2) above). Therefore, rather than considering all jobs, the subcontracting rule should only consider jobs that can actually be subcontracted, i.e. jobs for whicht+LjS⩽dj. Therefore, Rule 5 and Rule 6 are refined into Rule 7 and Rule 8, respectively as follows:•Subcontracting Rule 7: Jobs are divided into two classes: jobs that have to be processed internally, i.e. wheret+LjS>dj; and, jobs that can be subcontracted. First, all jobs that have to be processed internally are released to the internal shop and their load contribution is included in the corrected aggregate load measure (irrespective of whether they fit within the workload norm or not). Then, the class of jobs that can be subcontracted is considered in accordance with Rule 5 above.Subcontracting Rule 8: Jobs are divided into two classes: jobs that have to be processed internally and those that can be subcontracted. First, the jobs that have to be processed internally are sequenced according to the EDD rule. Starting with the first job in the EDD sequence: an estimate of the completion date is determined through forward finite loading, the job is selected to be processed internally, it is released to the internal shop, and its load contribution is included in the respective time buckets. Then, once all these jobs have been selected for internal processing, the class of jobs that can be subcontracted is considered in accordance with Rule 6 above.This research asks: Can simple subcontracting rules that are suitable for make-to-order shops in practice be (re)designed to enhance performance and applicability? The previous two sections reviewed existing subcontracting rules and outlined refinements to overcome their two main weaknesses using Workload Control theory. These refinements should improve rule performance and applicability to make-to-order shops in practice. Discrete event simulation is next used to evaluate the performance impact of the original four subcontracting rules from Bertrand and Sridharan (2001) plus the four new rules, all summarized in Table 1.An assembly job shop has been chosen as the basis of our simulation model and as a generalization of assembly shop structures commonly found in high-variety make-to-order companies in practice (e.g. Portioli-Staudacher, 2000; Lee et al., 2002; Silva, Roque, & Almeida, 2006; Stevenson & Silva, 2008; Stevenson, Huang, Hendry, & Soepenberg, 2011). In an assembly job shop, the final product (or assembly order) is made up of several sub-assemblies that either flow through the (internal) job shop or are subcontracted, before being assembled into the final product. This adds to the complexity of the subcontracting decision as the delivery performance of the assembly order is dependent on both the internally processed and externally processed (or subcontracted) sub-assemblies. The assembly job shop is a production environment where the subcontracting of sub-assemblies is widely reported. For example, in their case study of a mold producer, Silva et al. (2006) noted that as many as 85% of sub-assemblies may be subcontracted to local firms to alleviate capacity shortages. Similarly, Stevenson et al. (2011) reported that 14 of 41 small and medium-sized enterprises studied frequently subcontract to resolve capacity problems.The assembly job shop model has been implemented in Python© using the SimPy© module by extending the pure job shop model used by Melnyk and Ragatz (1989). The number of sub-assemblies per assembly order varies uniformly between one and six, as does the number of operations in the routing of a sub-assembly. Each individual sub-assembly can either be produced internally in the sub-assembly job shop or subcontracted. Which sub-assemblies will be processed internally and which will be subcontracted is determined by the subcontracting rule being applied (Rules 1–8).The sub-assembly job shop contains six work centers, where each is a single and unique capacity resource. All work centers have an equal probability of being visited and a particular work center is required at most once in the routing of a sub-assembly. As in Bertrand and Sridharan (2001), it is assumed that the subcontractor has infinite capacity and is always available. This is usually a reasonable assumption in practice, e.g. when several competing companies provide subcontractor services (see, e.g. Silva et al., 2006). Sub-assemblies leaving the internal job shop or the subcontractor go to an assembly work center to await other sub-assemblies that make up the final assembly order. When all sub-assemblies have arrived, the assembly order is complete and the sub-assemblies leave the simulation together as an assembled product. As in Lu et al. (2011) and Thürer, Stevenson, Silva, and Huang (2012), Thürer, Huang, et al. (2012), the assembly time is considered negligible to avoid distracting the focus of the study away from assembly orders to convergent bottlenecks.Operation processing times follow a truncated 2-Erlang distribution with a truncated mean of 1 time unit and a maximum of 4 time units; 2-Erlang distributed processing times were found to better reflect the situation in real-life job shops than, for example, exponential distributed processing times (Oosterman et al., 2000). Due dates are set exogenously by adding a random allowance factor, uniformly distributed between 50 and 80 time units, to the assembly order entry time. These values were set arbitrarily to achieve the best contrast in performance across rules. All sub-assemblies have the same due date as the final assembly order. These settings are similar to those applied, e.g. in Thürer, Stevenson, Silva, and Huang (2012) and Thürer, Huang, et al. (2012).Three levels of capacity shortage (given by the required capacity minus the available capacity) are modeled: low (0%, i.e. ‘just enough’ capacity), medium (5% capacity shortage), and high (10% capacity shortage). The inter-arrival time of orders follows an exponential distribution with a mean of 2.042, 1.944 and 1.856 which – based on the average number of work centers in the routing of a sub-assembly – deliberately results in a capacity shortage of 0%, 5% and 10%, respectively. Finally, Table 2summarizes the simulated shop and job characteristics.As with information regarding shop floor routing and processing times, it is assumed that the subcontracting lead timeLjSis known. This is given by the number of operations in the routing of a sub-assembly multiplied by an expected subcontractor operation throughput time that has been arbitrarily set to 12 time units. Thus, we assume that the subcontractor operation throughput time is larger than the expected internal operation throughput time, as is typically observed in practice (Bertrand & Sridharan, 2001).The target utilization for the internal sub-assembly job shop determines the quantity of work that has to be subcontracted. Bertrand and Sridharan (2001) considered 5 levels of target utilization: 80%, 85%, 90%, 95% and 99%. But they also reported no significant performance differences for a target utilization level below 90%, while a target utilization level of 99% did not allow stable results to be obtained in our more complex assembly job shop. Therefore, only two levels of target utilization are considered in our experiments: 90% and 95%. Note that utilization levels close to these two values are typically considered in job shop simulation research (e.g. Land & Gaalman, 1998; Fredendall et al., 2010; Thürer, Stevenson, Silva, & Huang, 2012). All of the subcontracting rules discussed in Section 2 and summarized in Table 1 are considered in this study. The parameters for the eight rules – as summarized in Table 3– have been set via preliminarily simulation experiments to result in the desired target utilization levels. For rules that take the subcontracting decision periodically, the time interval has been set arbitrarily to 5 time units. Finally, for rules using forward finite loading (Rule 6 and Rule 8), the time bucket has been set to 1 time unit (as in Thürer et al., 2014).Two dispatching rules are considered in this study. Dispatching either follows: (i) Operation Due Dates (ODDs), i.e. the sub-assembly queuing in front of a work center with the earliest operation due date is processed first or (ii) Shortest Processing Times (SPTs), i.e. the sub-assembly queuing in front of a work center with the shortest processing time is processed first. The ODD rule was chosen due to its good tardiness performance in previous research on assembly job shops (see, e.g. Thürer, Huang, et al., 2012). Meanwhile, the SPT rule was chosen due to its potential for minimizing lead times and, therefore, average lateness. For Rule 6 and Rule 8, operation due dates are determined as part of the subcontracting rule; for all other subcontracting rules, operation due dates are determined in accordance with Eq. (2) below.(2)dij=t+i·(dj-t)nj∀i∈Rjnj=number of operations in the routing of job jThe experimental factors are summarized in Table 4. A full factorial design has been used with 96 cells, where each cell was replicated 100 times. Results were collected over 10,000 time units following a warm-up period of 3,000 time units. These parameters allowed us to obtain stable results while keeping the simulation run time to a reasonable level.As in Bertrand and Sridharan (2001), our objective is to develop subcontracting rules that minimize tardiness subject to a target utilization. This is motivated by the fact that although the underlying concern of a firm may be cost, it is important to recognize that cost structures are firm-specific; hence, it is extremely difficult to objectively evaluate the performance of subcontracting rules based on cost. The two principal performance measures used to evaluate the performance of the eight subcontracting rules are therefore:•The percentage of tardy assembly orders, i.e. the percentage of assembly orders completed after the due date; andThe average lead time of assembly orders, i.e. the assembly order completion date minus the order entry date.These measures reflect the performance of internally processed and subcontracted subassemblies, and thus the subcontracting decision, as all sub-assemblies have to be completed on time if the final, assembled order is to be delivered on time. To aid further analysis, we also consider: (i) the percentage of tardy internally processed sub-assemblies and (ii) the percentage tardy, the average routing length, and the average operation processing time of subcontracted sub-assemblies.

@&#CONCLUSIONS@&#
