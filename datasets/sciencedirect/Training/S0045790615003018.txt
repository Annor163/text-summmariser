@&#MAIN-TITLE@&#
Applying episode mining and pruning to identify malicious online attacks

@&#HIGHLIGHTS@&#
All on-line attempts to access a honeypot can be regarded as attacks.A honeypot’s logs can be very large, which an administrator will be unable to handle.We apply serial episode mining and two-round pruning to identify suspected attack.The experiments conducted in this paper focus on port 445 for the SMB protocol.

@&#KEYPHRASES@&#
Honeypot system,Episode,Episode mining,Episode pruning,Server Message Block (SMB),

@&#ABSTRACT@&#
A honeypot system can be deployed to decoy and record malicious intrusions over the Internet. However, events logged by a honeypot can rapidly accumulate an enormous amount of data, which an administrator will be unable to handle. The proposed system combines episode mining and pruning, and allows an administrator to identify suspected intrusions, and thus focus his energy on addressing them, instead of reading enormous amounts of raw data. An attack episode is composed of a series of events, and represents an Internet intrusion as a series of relevant events occurring to a victim host in a specific sequence. Due to the variety of internet attacks, this paper focuses on discovering attack episodes for the Server Message Block (SMB) protocol, which provides Microsoft Windows Network services. Experiments show that the proposed approach can locate suspicious episodes that are very likely novel attacks, from an immense amount of logged data.

@&#INTRODUCTION@&#
According to a report by Kaspersky Lab [1], among the 20 ports most commonly used for internet attacks, TCP port 445 is the most popular, accounting for 32.28% of all internet attacks, as shown in Fig. 1. TCP port 445 is assigned by the Internet Assigned Numbers Authority (IANA) for the Server Message Block (SMB) protocol [2], which is used by Windows versions for file and printer sharing. In the same report, port 80, used by HTTP connections, is ranked as the fourth most commonly used; most malicious port 80 connections are caused by spammers looking for open proxies. This paper therefore focuses on helping administrators identify Internet attacks against the SMB protocol through TCP port 445. This study applies an approach based on episode mining and pruning to help administrators identify Internet attacks from the log files of a honeypot system. Internet attacks caused by computer worms at port 445 are addressed in this paper. A computer worm is a typical Internet attack that can rapidly pervade a computer without user intervention.To date, a great deal of research has been devoted to identifying unknown attacks. Hubballi et al. [3] proposed a multi-layer concept of n-gram for payload-based anomaly network intrusion detection. The authors aimed to determine whether an individual packet was abnormal by checking the n-grams of the payload of the packet. Each byte in the payload is an item, so the payload can be regarded as a sequence of items. The value of n is the number of elements paired together in a defined order. For example, assuming the sequence to be a, b, c, d, e, f, …, if n=2 then the subsequences of 2 are (a, b), (b, c), (c, d), (d, e), (e, f), and so on. The authors considered the value of n from 1 to 8. In the multi-layer system, each layer works as an independent anomaly-detection system. A packet is considered normal after passing through all the layers. A packet is considered anomalous if at any layer it is declared as anomalous. The same authors later [4] extended their n-grams concept to determine whether a program was normal. In [4], system calls of a program are the items in a sequence. A system call is a routine that user programs call to receive the service of the operating system. However under abnormal conditions, i.e. when an attacker tries to abuse service privileges, the program takes code paths that have not been seen before, and this generates system call sequences that differ from the sequences generated under normal conditions. Both of the above papers [3,4] had good results according to their experiments. However, the main goal of this paper is to identify a significant suspect episode (a series of network events making up an episode) that may be an unknown network attack, unlike an individual packet in [3], or a malicious program in [4]. Moreover, the approach adopted in this paper is episode mining and pruning, while the idea behind [3,4] is n-gram based on frequency.Mannila et al. [5] proposed the WINEPI and MINEPI algorithms for discovering serial episodes defined by minimal occurrence of subsequence. Their source codes can be found in the forum [6]. Since then, the algorithms have been applied to various fields [7,8], including network intrusion detection [9–15]. Lee et al. [10] modified Mannila et al.’s algorithms to use two types of attributes, called axis and reference, as forms of item constraints, which limited computing to relevant patterns, i.e. episodes. In addition, Lee et al. used an iterative level-wise approximate mining procedure to uncover low frequency, but important, episodes. Luo and Bridges [11] applied fuzzy logic to episode mining, so that flexible frequent episodes could be obtained, which helped to improve the performance of network intrusion detection systems. Luo et al. [12] modified this method so that the system could be applied in near real-time detection. Qin et al. [13] proposed a new Internet tracing technique, which generates frequent episode rules that characterize Internet traffic events. These episode rules are used to distinguish anomalous sequences of TCP, UDP and ICMP connections from normal traffic episodes. In addition, fundamental pruning techniques were introduced to reduce the rule search space by 70%.Hwang et al. [9] designed a system combining signature-based detection and anomaly detection. The basic idea proposed is running SNORT [16] to rule out known attacks, and then to identify anomalous attacks by the so-called anomaly detection system (ADS). In the ADS design, the authors used attack-free traffic to build a normal profile by rule-mining techniques in the training phase. Later, in the detecting phase, ADS compares the rules, by mining from undetermined network traffic, with the predefined normal profile. If the matching score is less than a given threshold, the ADS reports that an anomaly or a novel attack has occurred, and adds the features of the newly identified attack to the SNORT database to extend its ability. However, some issues emerged as follows. First, many anomalous intrusion detections [3,4,9] needed a dataset with all instances pre-classified for training, and most of them used the DARPA dataset [17] which was released in 1999, for experiments. In reality, however, network traffic can vary significantly between networks. It is difficult to have such a fully and completely pre-classified dataset for training, or it may be hard to create a normal profile from attack-free network traffic unless the network is extremely simple. Second, once a threshold is involved in making a decision, false alarms occur. In addition, the so-called normal profile and threshold value will definitely vary from network to network.Therefore, instead of building a normal profile from attack-free traffic, this study intends to actively help the administrator identify attack episodes from honeypot logs, which are supposed to contain known and unknown attacks. Honeypots can only straightforwardly and individually record all network events in detail, and are unable to analyze the relations between events. Since the logs of a honeypot can be augmented very rapidly, the proposed system in this paper can extract likely unknown attack episodes to help the administrator focus only on these episodes, and then decide if they are attack episodes. Once a suspected episode has been determined as an attack by the administrator, the episode will be put into a database so that the unknown attack becomes known and will not require administrator attention the next time it occurs.In this paper, a honeypot system called KFSensor [18] was installed to record all network events, and the network service SMB protocol using port 445 was considered as an example to demonstrate the performance of the proposed system. With the system, the administrator will only have to focus on likely unknown attack episodes against the SMB protocol instead of checking the huge amount of raw data in the logs. A preliminary view of this study can be found in [15]. The remainder of the paper is arranged as follows. Some background, including a type of episode mining and the SMP protocol for Windows Network services is introduced in Section 2. The proposed system is presented in Section 3. Experiment results are given in Section 4 and a conclusion is offered in Section 5.

@&#CONCLUSIONS@&#
