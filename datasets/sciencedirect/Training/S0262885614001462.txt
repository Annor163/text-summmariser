@&#MAIN-TITLE@&#
A local approach for 3D object recognition through a set of size functions

@&#HIGHLIGHTS@&#
The 3D object is split into 18 portions according to its principal axes.Each portion is represented by a size function.A well suited similarity measure is used to compare between the 3D objects.

@&#KEYPHRASES@&#
3D model description,Object recognition,Object categorization,Shape classification,

@&#ABSTRACT@&#
In this paper, a local approach for 3D object recognition is presented. It is based on the topological invariants provided by the critical points of the 3D object. The critical points and the links between them are represented by a set of size functions obtained after splitting the 3D object into portions. A suitable similarity measure is used to compare the sets of size functions associated with the 3D objects. In order to validate our approach's recognition performance, we used different collections of 3D objects. The obtained scores are favourably comparable to the related work.

@&#INTRODUCTION@&#
The recognition of 3D objects has been widely studied during the last decade [29,30]. Its applications are various, including medical imaging [31,32], virtual reality [33], face detection [34,35], cultural heritage [36], and quality control [37]. The principle is to recognize 3D objects based on their shape properties extracted by the mean of a shape descriptor. The recognition process has three major steps. The first step is the computation of descriptors, which can be global [1], local [2], structural [11,12,53], transform-based [6,59], or view-based [7,52]. The second step is the similarity measure which can be distance-based [17], probability-based [18], or graph-based [48]. A decision-making process is performed in the third step in order to classify the 3D objects according to the similarity measure used, and it can be hard [29,30], or soft [30,50].In our work, we chose to take advantage of the topological invariants provided by the critical points of the 3D object and the link between them. In fact, the critical points and the links between them provide the topological changes of the 3D object through a function defined on it. The topological changes have been previously used for 2D and 3D object recognition [8–12,16,54]. The main idea behind the definition of the size function consists in encoding quantitatively these topological changes. In fact, it relies on a real continuous function defined on the shape called measure function [11], which is chosen to capture some specific features of the 3D object [10].This paper is organized as follows: in Section 2, the related work is presented and discussed. Our proposed method is detailed in Section 3. The pre-processing stage of the 3D objects is detailed in Section 4. The interpretation of the obtained results using the proposed method and some well-known methods is presented in Section 5. Finally, conclusions and future work are presented in Section 6.

@&#CONCLUSIONS@&#
In this paper, we developed a new local approach which describes the 3D object by a set of 18 size functions. The main idea of our method is the local usage of the topological invariants provided by the critical points to describe the 3D object. For that purpose, the 3D object is split into 18 portions, to represent each one of them by a size function resulting from a measure function, which captures the concavity and the convexity features of the portion. At first, the method was validated by using the 3D object collection of McGill of 457 models. The obtained scores outperform the related work. Afterwards, the method was validated by using an extended 3D object collection of 2902 models. The obtained scores are favourably comparable to the related work. However, our method is more computation time-consuming than the other approaches, because it requires a normalization stage, the splitting of the 3D object into 18 portions, and the description of each portion by a size function splitting the targeted 3D object into 18. To overcome this limitation, we are planning to parallelize the size function's computation on GPU in order to accelerate the computation time of our method.