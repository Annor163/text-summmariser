@&#MAIN-TITLE@&#
A hybrid fuzzy-GA algorithm for the integrated machine allocation problem with fuzzy demands

@&#HIGHLIGHTS@&#
A new hybrid algorithm method for facility location is improved.Fuzzy demand for location problem is considered.A genetic algorithm and a fuzzy simulation approach are applied for solving the problem.The efficiency and the effectiveness of the hybrid algorithm in examined using numerical examples.

@&#KEYPHRASES@&#
Fuzzy programming,Hybrid algorithm,Genetic algorithm,

@&#ABSTRACT@&#
The integrated machine allocation and facility layout problem (IMALP) is a branch of the general facility layout problem in which, besides selecting machine locations, the processing route of each product is determined. Most research in this area suppose that the flow of material is certain and exact, which is an unrealistic assumption in today's dynamic and uncertain business environment. Therefore, in this paper the demand volume has been assumed as fuzzy numbers with different membership functions. To solve this problem, the deterministic model is first integrated with a fuzzy implication via the expected value model, and thereafter an intelligent hybrid algorithm, including a genetic algorithm and a fuzzy simulation approach has been applied. Finally, the efficiency of the proposed algorithm is evaluated with a set of numerical examples. The results show the effectiveness of the hybrid algorithm in finding the IMALP solutions.

@&#INTRODUCTION@&#
In the domain of supply chain management two complementary issues may be considered for most manufacturing systems: facility layout and facility location. The facility location problem deals with the optimization of manufacturing facilities, e.g. machines and departments, in the shop floor, and has been an attraction for researches for many years. Even though the contexts in which these models are situated may differ, their main features are similar in all cases [1]. The general objective may be defined as serving a set of nodes (customers) by creating/using a set of access points (facilities) which provide high efficiency and incur minimum costs. By reviewing 38 papers in this field, facility location problems may be classified into many distinguished categories as presented in Table 1. Other classifications are also stated in ReVelle and Nickel [1,3].The material handling process consists of the movement of parts, supplies, work-in-process parts, spares, tools and other equipment supplies between machines/workstations and storage locations [6]. Due to the variety of considerations found in the articles, researchers do not agree on a common and exact definition of layout problems [4]. Koopmans and Beckmann [8] were of the first researchers who defined the facility layout problem as a common issue in industrial environments. They introduced a basic formulation, which determined the relative locations of facilities to minimize the total materials flow. After their research, a lot of studies have been carried out in the discussed area, as mentioned in the review articles of Heragu and Kusiak [9], Meller and Gau [10] and Drira et al. [7].Discrete facility location problems are generally modeled by mixed integer programming techniques and models, which present high complexity and are considered as NP-hard. The difference of the facility location problem and the facility layout problem may be distinguished by the former being regarded as a strategic decision while the latter is more operational [2]. A facility layout is the arrangement of all needs for the production of goods or the delivery of services [4]. Facility layout problems deal with the position of manufacturing machines, stores, and manpower inside a firm. Facility layout problems have attracted the attention of many researchers as they can considerably reduce the operational cost (i.e. material handling costs) and yet increase the flexibility of the manufacturing system [2]. A good placement of facilities contributes to the overall efficiency of operations and can reduce up to 50% of the total operating expenses [5]. The most commonly considered criterion in developing a facility layout arrangement is the minimization of total material handling distance/cost.Shayan and Chittilappilly [11] defined the layout problem as an optimization model that tries to increase the overall layout efficiency while considering facility and material handling system relations. Chiang et al. [12] studied the impact of workflow interference considerations on the facility layout analyses and presented linear and nonlinear integer programming formulations of the problem. It is noteworthy that in their proposed objective function both material flow and distance criteria were considered. Solimanpour and Jafari [13] studied a variation of the distributed facility layout problem proposed in Urban et al. [14] and presented a new mixed integer nonlinear (MINLP) model. They proposed a novel branch-and-bound algorithm to optimally solve the model in small to medium problems, and developed heuristic methods to solve large problem instances. Ioannou [15] presented an integer programming formulation that integrates decisions concerning the layout of the resource groups on the shop floor with the design of the material handling system. Ioannou's model reflects critical practical concerns, including the capacity of the material flow network and of the handling transporters, as well as the tradeoff between fixed (construction and acquisition) and variable (operational) costs. For realistic industrial adjustments he decomposed the global model into standard optimization problems and solved by an integrated solution method, guided by a simulated annealing scheme. Jaramillo and McKendall [16] proposed a new formulation by employing an innovative heuristic tabu search method and mimetic algorithm for the IMALP problem. In addition, a test dataset was used to evaluate the performances of the TS heuristic using the different construction algorithms. The results showed that mimetic algorithm gives better solutions than the heuristic tabu search method, according to the two criteria of timing and quality of the answers.Metaheuristic algorithms are among the modern approaches and have gradually attracted more attention in recent years. Many researchers have applied these algorithms to solve the facility layout and location models. For example, Komarudin and Wong [17] proposed the ant colony algorithm to solve the unequal area facility layout design (UA-FLP). Their proposed method uses slicing tree representation to easily represent the problems without restricting the solution space in a great degree. They tested the efficiency of their proposed algorithm by using several case problems with different sizes and settings. Overall, the proposed algorithm showed encouraging results in solving UA-FLPs. The use of genetic algorithm in the facility layout problem is abundant [18–20]. For example, Lee et al. proposed an improved genetic algorithm to find solutions for multi-floor facility layouts having inner structure walls and passages [21].Although the field of facility location is active from the research point of view, when it comes to applications, there appears to be a significant deficit, when compared to other similar fields [22]. To this end, many concepts, tools and techniques of artificial intelligence such as the fuzzy logic are be used to improve the implementation of numerous models in operations research [23]. Generally in many conditions, including practical conditions, the amount of the parameters is not exactly specified [24]. To deal with such problems, researchers use uncertain approaches for designing layouts. Aiello and Enea argued that the product market demands are uncertain data that may be defined as fuzzy numbers. They minimized the total material handling cost, along a single row configuration, under the constraints that the capacity of production for each department is limited. To solve a single row layout problem, they split the fuzzy demands in α-cuts and determine the α-level fuzzy cost for each possible layout [25]. Hosseini Nasab et al. considered the dynamic facility layout problem with fuzzy demands in the presence of departments with the same area. They proposed a hybrid intelligent algorithm consisting of genetic algorithm and fuzzy simulation technique to solve the model [26].As mentioned above, most researchers in the field of machine allocation and facility layout problem, suppose that the flow of material is certain and exact, which is an unrealistic assumption in today's dynamic and uncertain business environment. This paper contributes to the literature the realization of fuzzy demand with different membership functions. Considering that even the deterministic allocation and facility layout problem, excluding fuzzy demand, is NP-hard when the number of variables is sizable, an intelligent hybrid algorithm, including a genetic algorithm and a fuzzy simulation approach has been utilized.The remaining of this paper is organized as follows. Section ‘Problem definition and formulation’ concisely states the initial mixed integer linear model to formulate the facility location problem considering multiple products, alternative processing routes and exact demand volumes. Section ‘Fuzzy programming and the expected value model’ explains the fuzzy programming and expected value model. A hybrid fuzzy-GA algorithm is thereafter proposed in Section ‘Proposed hybrid evolutionary algorithm’ to solve the attempted problem. In Section ‘Numerical example’, the performance of the proposed algorithm is evaluated based on numerical examples of Ref. [4]. To validate the proposed method 10 test problems are given in Section ‘Validation’ and finally, the paper is concluded in Section ‘Conclusion’.Consider a manufacturing system which produces P different kinds of products by using M independent machines. Each product has a number of predefined routes which can be used for the manufacturing process. Note that different Processing routes can lead to the formation of heterogonous from/to matrices of material flow. Consequentially, different transportation matrices between locations are formed. Machines must be located in predefined locations so the distance between two locations is known.The problem is to select the processing route of each product and to determine the location of each machine in a way that the total distance traveled by products is minimized. We use the following notation in Section 2.1 along the lines of Solimanpur and Kamran [4] to describe the model.In order to formulate the integrated model, the following parameters and variables are introduced (Table 2).The objective function is to minimize the total distance traveled between departments to process the products. The model is formulated as below:(1)Min∑m=1M∑m′=1,m′≠mM∑l=1L∑l′=1,l′≠lL∑p=1P∑i=1Ipzmm′ll′ip×amm′pi×Dp×dll′s.t.(2)∑l=1Lxml=1∀m=1,…,MConstraint (2) ensures that each machine is only allocated to one location.(3)∑m=1Mxml≤1∀l=1,…,LEq. (3) states that in each location, at most one machine is located. It should be noted that an equality constraint may be used (instead of the inequality presented here) only when L=M.(4)∑m=1Myip=1∀p=1,…,PEq. (4) enforces that one and only one processing route is to be used for the production of each product.(5)xml+xm′l′+yip−2≤zmm′ll′ip∀m,m′≠m,l,l′≠l,i,p(6)zmm′ll′ip=xml×xm′l′×yip∀m,m′≠m,l,l′≠l,i,p(7)xml∈{0,1}∀m,l(8)yip∈{0,1}∀i,p(9)zmm′ll′ip≥0∀m,m′≠m,l,l′≠lzmm′ll′ipis an interior variable which is defined to converge the model to linear and may be calculated by Eq. (6). The multiplication of variables inside the objective function causes the model to be nonlinear, which is dealt with by the substitution of Eq. (5). Note that there is no need to employ Eq. (6) inside the model, and this equation is only proposed to provide further explanations for Eq. (5). Finally, constrains (7)–(9), in a binary and positive order, ensure the decision variables.It is necessary to note that variablezmm′ll′ipis in fact a binary variable, but, regarding the content of the model, it can be considered as a continuous and positive variable (Eq. (9)). As mentioned in the introduction, the amounts of the parameters in many conditions (including practical conditions) may not be exactly specified [24]. In dealing with such problems, researchers use two approaches: stochastic or fuzzy programming. Fuzzy logic and probability are different ways of expressing uncertainty. While both fuzzy logic and probability theory can be used to represent subjective belief, fuzzy set theory uses the concept of fuzzy set membership (i.e., how much a variable is in a set), and probability theory uses the concept of subjective probability (i.e., how probable do I think that a variable is in a set). While this distinction is mostly philosophical, the fuzzy-logic-derived possibility measure is inherently different from the probability measure, hence they are not directly equivalent.In the stochastic programming approach, it is assumed that the amount of demand for a product can be forecasted by using previous information. Therefore, by defining the amount of demand with random variables the problem may be solved. Examples of such application may be sited in the work of Tavakkoli-Moghaddam et al. [28] and Román et al. [29]. Although stochastic models are employed in many practical situations, they are not considered efficient in some situations, i.e. where a wide range of variations exist [26]. Also the lack of data may present problems in assigning a specific probability distribution to the model. Therefore, in such conditions it would be more appropriate to use a fuzzy concept and fuzzy programming to deal with the uncertain concept of the data [27].In general, the fuzzy approaches used for this problem are divided into two main categories: (1) approaches which define the relations between departments by verbal variables [31], and (2) approaches which regard the flow of information as fuzzy numbers [25]. The problem discussed in this paper falls into the second category.Fuzzy programming is based on the “credibility theory”. This theory is one of the most important parts of the “Fuzzy theory” which is itself similar to the “Probability theory”. However, the difference between these theories arises in the credibility theory. The possibility of occurrence, besides depending on its statistical information, also depends on the reasonable possibility of its occurrence. In this paper, the term occurrence chance of a fuzzy event is referred to as the credibility of a fuzzy occurrence. In the following section we will state some preliminaries about the properties and results on fuzzy variables that is required for the remainder of this paper.There are generally 3 modeling approaches in fuzzy programming: the expected value model (EVM), the chance constrains programming (CCP) and the chance dependent programming (CDP). The goal of EVM is to optimize the expected value of the objective function. The essential idea of chance constraint programming is to optimize some critical values with a given confidence level, subject to some chance constraint expected value models. The main idea of the DCP model is to find a solution in which the chance (or probability) of the occurrence is optimized.The problem discussed in this paper has been formulated based on the EVM method. The framework of EVM was first introduced by Liu and Liu [31] in 2003, based on the expected value model in probability programming. The integrated facility layout model, when the material flow data is fuzzy and based on EVM, would be formulized as below:(10)MinE[C(X,ξ)]=∫0∞Cr{C(X,ξ)≥r}dr−∫−∞0Cr{C(X,ξ)≤r}drwhere Cr is credibility measure(11)s.t.∑l=1Lxml=1∀m=1,…,M(12)∑m=1Mxml≤1∀l=1,…,L(13)∑i=1Ipyip=1∀p=1,…,P(14)xml+xm′l′+yip−2≤zmm′ll′ip∀m,m′≠m,l,l′≠l,i,p(15)zmm′ll′ip=xml×xm′l′×yip∀m,m′≠m,l,l′≠l,i,p(16)xml∈{0,1}∀m,l(17)yip∈{0,1}∀i,p(18)zmm′ll′ip≥0∀m,m′≠m,l,l′≠lwhere E[C(X, ξ)] shows the expected value of the objective function for facility layout X and set ξ={ξp|1≤p≤P} is the fuzzy demand volumes. Certain models of integrated facility layout problems are known to be NP-hard problems [4]. It should be noted that considering fuzzy data amounts for demand does increase the complexity of the problem, and may consequently make the exact optimization methods to become very difficult and sometimes impossible. Therefore, in the next section, a hybrid meta-heuristic algorithm is introduced to solve the developed model.In this paper, a genetic algorithm (to find the solutions) is combined with a fuzzy simulation technique (to estimate fuzzy objective function values) to solve the aforementioned model. Calculating the fitness function of chromosomes in GA needs the estimation of the fuzzy objective function. The classical estimation approaches of fuzzy numbers consist of first converting the fuzzy function to a certain function, and thereafter calculating the function's value. However, these methods are only applicable in specific and simple problems [26]. Therefore in this article, like any other paper which deals with fuzzy programming, a fuzzy simulation algorithm has been used to estimate the value of the fuzzy objective function. Fig. 1shows the hybrid intelligent algorithm and the relationship between the genetic algorithm and fuzzy simulation technique in a schematic way. As we can see, in different iterations of the genetic algorithm, whenever we needed to calculate the fitness value of chromosomes, a fuzzy simulation approach has been employed. The functional mechanism of the proposed GA is similar to that of the GA in Ref. [4], whose details have been omitted for brevity. An interested reader may consult the referenced article where more supplementary explanations are presented.Fuzzy simulation is one of the most well-known methods in approximating the value of fuzzy objective functions. This method is an applicable form of the Monte-Carlo simulation which was introduced for the first time by Liu and Iwamura [33,35], and was successfully applied by Liu [32,36] to solve fuzzy optimization problems. Furthermore, Liu [37] proved the convergence of fuzzy simulation and showed its efficiency in approximating the exact value of functions. In the following parts, the steps of the fuzzy simulation technique in estimating the expected value of the objective function for the distributed facility layout problem are introduced.1.Produce random variables on the condition thatμp(wpj)≥ε.wpjis the jth selected random variable from the fuzzy number ɛp(production volume of p). ɛ is a very small positive real number and μpis the membership function of the fuzzy number ɛp. The interval change of j is from 1 to NS1 in which NS1 is the number of the simulation process iterations.For each j there would be a complete set of certain numbers, which are presented as wj, showing the amount of demand. The total cost is calculated by substituting wjwith Dpin Eq. (1).(19)(wj={wpj|1≤p≤P})Set ɛ as zero and go to step 4 (ɛ=0).Set ‘a’ and ‘b’ as the minimum and maximum value of the total cost, respectively.a=min1≤j≤NS1{C(X,wj)},b=max1≤j≤NS1{C(X,wj)}Produce r random numbers in interval (a, b) and calculate the amount of Cr{C(X, ξ)≥r} regarding Eq. (20).(20)Cr{C(X,ξ)≥r}=12max1≤j≤NS1min1≤i≤Nμp(wpj)|C(X,wj)≥r+1−max1≤j≤NS1min1≤i≤Nμp(wpj)|C(X,wj)<rSet E+Cr{C(X, ξ)≥r}→E.Repeat the 5th and 6th step of the algorithm iterations in order to calculate the expected value (NS2 times) then go to step 8.Calculate the expected value of the cost by using the Eq. (21).(21)E[C(X,ξ)]=a∨0+b∧0+(E×(b−a))NS2Consider a manufacturing system with 4 different kinds of products. The number of machines (M) is 5 which should be located in 5 discrete candidate locations (L). Table 3shows the available processing routes to process the items.The amount of demand is uncertain and stated in fuzzy numbers. We considered triangular fuzzy numbers for P1 and P3, normal for P2 and bell shaped for P4. Complementary data of demands is provided in Table 4.The distance matrix between candidate locations is as follows:06174106085111780142451401310112133The proposed algorithm was coded in MATLAB R2010a and solved in a PC with 2.22GHZ Intel processor and 4GB of RAM. The parameters of the proposed algorithm were considered as: population size T×N, crossover rate 0.6, mutation rate 0.2, stopping criteria as 20 iterations without any improvement, or producing 100 generations. Parameters NS1 and NS2 of the fuzzy simulation are respectively 3000 and 1000 iterations. Solving the model led to the following optimal chromosome:134251221After decoding this chromosome, it is concluded that machines nos. 1, 3, 4, 2 and 5 should be respectively located in candidate locations 1–5, and that to produce products nos. 1–4, the process routes nos. 1, 2, 2 and 1 should be used respectively. The convergence trend of the objective function toward the optimal solution value in different iterations of the algorithm is presented in Fig. 2. The optimal amount of the objective function in this case was 851,700.It should be noted that to evaluate the efficiency of the proposed algorithm, the data of five numerical examples of the reference article were used, and the fuzzy numbers of demand were defined in a way that their mean would correspond with the proposed certain numbers. The results were expected to be similar to the numerical results in Ref. [4] which happened to be the case because the proposed fuzzy model tends to minimize the mean of the expected value.In this section we present the computational results of the proposed hybrid algorithm applied to 10 test problems. The proposed algorithm was programmed using the C++ programming language, and the set of the test problems were solved on the same PC previously mentioned in this section. The problems were solved with different combinations of machines and products as shown in Table 5. The performance of the proposed algorithm is compared with the result obtained for each problem using Lingo 8.0. LINDO Systems has been a leader in providing fast, easy to use tools for mathematical optimization [38]. LINDO Systems has recently introduced Lingo 8.0 which is a comprehensive tool designed to make building and solving linear, nonlinear (convex and non-convex/global), quadratic, quadratically constrained, second order cone, stochastic, and Integer optimization models faster, easier and more efficient. Lingo provides a completely integrated package that includes a powerful language for expressing optimization models, a full featured environment for building and editing problems, and a set of fast built-in solvers. This software includes:•A global solver to confirm that the solution found is the global optimum,The global solver will search until the global optimum is confirmed.Find faster solutions using the dual solverThe improved dual simplex solver in Lingo 8.0 delivers substantially better performance.Linearize models automaticallyThe new linearization capabilities in Lingo can dramatically improve performance on models with common non-smooth functions.Solve Quadratic and quadratically constrained modelsLingo can solve models in which the objective function and/or some constraints include quadratic terms.To shorten the paper, the raw data; processing routes, fuzzy demands, distance matrix between machines of the test problems are excluded from the paper. The results of both the genetic algorithm and Lingo 8.0 for all problems are compared in Table 6. Due to the probabilistic nature of the computation process in the proposed method, each problem has been solved 10 times. The best objective function value obtained in each run of the proposed method is also shown in Table 6. The Lingo Software has solved the tested problems by the branch-and-bound technique to determine the optimum solution of each problem. As seen in Table 6, the proposed method has obtained the optimum solution of Examples 1, 2, 4, and 7 in a significantly lesser computation time. Also the Lingo 8.0 software couldn’t obtain the solution of Example 8, 9 and 10 after about 7 days of computation. Interestingly, the proposed method has resulted in the objective function value of 637,092, 306,524 and 997,406 within 8.00, 12.31, 22.90min, respectively.To have a solid comparative analysis regarding the efficiency of the proposed approach, particle swarm optimization (PSO), ant colony optimization (ACO) and simulated annealing (SA) are used for 20 test problems with different number of products, processing routes, fuzzy demand volumes and number of machines, as shown in Table A.1 in the appendix.In order to start the search, the first step is to set the control parameters for each heuristic algorithm. The efficiency of heuristic algorithm usually depends on the choice of these parameters. To determine the proper parameters, extensive experiments were implemented with different sets of parameters in the literature. In this paper, we have used the approach introduced in Behroozi [40] for PSO algorithm. Based on this approach, the following values are proposed for the PSO parameters in this paper.P=40,C1=2.1,C2=2.1,Wmin=0.5,Wmax=1,W=0.2The parameter settings for SA algorithm involve determining the initial temperature (the probability that in the neighborhood search, an inferior solution will be accepted), the rate at which the temperature decreases (the decrease in the acceptance probability of an inferior solution), and the number of iterations. In this paper, these parameters are chosen based on Baykasoglu and Gindy [39] which are:Tin=3,899,145,Pc=0.95,Pf=1×10−15,α=0.998,elmax=5000Parameter tuning for ant colony optimization are discussed by Wong [41]. Balancing between intensification and diversification in the search space is an important factor to intelligently improve solutions and avoid premature convergence. Balancing intensification and diversification can be gained by controlling the ACO parameters value. In this paper the parameters value for ACO algorithm are considered as:M=10,α=1,β=2,λ=1,ρ=0.1,q0=0.75The definition of main parameters used for each heuristics algorithm is shown in Table A.2 in the appendix.Each test problem was conducted 10 times for all heuristics including the proposed method. The cost of objective function of each individual algorithm and the cost gap of SA, PSO, ACO and the proposed method is calculated which are shown in Table 7. A comparison of the proposed method with other heuristics, shows that SA performs better for 6 test problems; 5, 6, 11, 12, 15 and 18, PSO performs better for test problems 8, 9, 11 and 13, and ACO, performs better for test problems 3, 8, 10, 16, and 17, In other words, the propose method performs 70% (14/20, 14 test problems out of 20), 80% (16/20), and 80% (16/20) better than ACO, PSO and SA respectively. So, the proposed method is superior of all examined heuristics.As mentioned in Section ‘Introduction’, the integrated machine allocation and facility layout problem is NP-hard and needs sizable computational time, so the solving time of the proposed method and the time gap with SA, PSO and ACO for 20 test problems are compared in Table 8. In comparison with SA, the proposed method solved all test problems in lesser times except for the test problem 17 that was solved 0.01s faster by SA. In comparison with PSO, only the test problem 17 was – solved 0.01s quicker than the proposed method and finally, the test problem 6 was solved by ACO in 0.02s quicker than the proposed method. As it is clear from Table 8, the proposed method performs significantly faster than other heuristics, especially when the number of products and machines increases (test problem 13 with 20 products and 20 machines). So, the proposed method is superior of all examined heuristics.As discussed above, the proposed method has attained the best solutions for the cost of objective function and the computational time for the most of test problems examined and also it is able to solve the problems that are not solvable in a reasonable time with exact methods such as Lingo. To prove the usefulness of the proposed method, Wilcoxon Two Sample Test with the confident level of 95%, performed for the mean cost of objective function of each individual algorithms and the proposed method. The obtained results 0.9784, 0.9246 and 0.9784 for the P value of SA, PSO, ACO and the Proposed method respectively, show that there are no significant different among the average cost of all objective functions, that was a desirable finding, because it indicates that the proposed method performs fine such as other heuristics. But the same statistical tests between the average time consumed for solving the 20 test problems with each individual algorithms and the proposed method show that with the P values 0.03605, 0.0239 and 0.02227 for SA, PSO, ACO, respectively, there are significant different between the solving time of the proposed method and other heuristics that is was another desirable finding.

@&#CONCLUSIONS@&#
