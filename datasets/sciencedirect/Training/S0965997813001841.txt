@&#MAIN-TITLE@&#
Cloud service access control system based on ontologies

@&#HIGHLIGHTS@&#
The proposed system supports cloud features: payment status and service level.The system uses rules and ontologies to detect policy conflicts and block accesses.The system architecture and database design are proposed.A case study shows how the system detects conflicts and denies illegal accesses.In the evaluation result, the proposed system has less concept explosion than RBAC.

@&#KEYPHRASES@&#
Cloud service,Access control,Ontology,Conflict detection,Payment status,Service level,

@&#ABSTRACT@&#
Cloud service is a new and distinctive business model for service providers. Access control is an emerging and challenging issue in supporting cloud service business. This work proposes a new access control mechanism called cloud service access control (CSAC). The CSAC mechanism considers payment status and service level as the two essential characteristics of cloud service. Ontology is a theoretical foundation for the CSAC mechanism. Inconsistent access control policies are detected by a set of proposed policy conflict analysis rules. Inappropriate user accesses are inhibited by access control policies according the proposed access denying rules. System architecture is designed to support the CSAC mechanism. A case study is provided to demonstrate how CSAC works. Finally, an evaluation is conducted to measure the concept explosion issue in CSAC.

@&#INTRODUCTION@&#
Cloud computing is a model that servers can dynamically provisioned and configured to deliver services in a scalable and low-management-effort manner [12,1]. Many users are increasing realizing that they can use cloud services to gain applications and resources rapidly, flexibly, and cheaply [16]. In cloud, service providers usually do not know their users in advance. It is difficult to assign users to roles in access control policies [17]. Therefore proposing a new access control mechanism for the new context of cloud computing is an important theoretical and practical issue.Cloud can be classified in fourfold: private, public, community, and hybrid clouds. In private cloud, an organization provides its own cloud services for its internal users [10,16]. Public cloud means that a cloud services provider offers access for external and public users who are typically billed on a pay-as-you-use basis [10]. Hybrid cloud is a mixture of public and private clouds. Finally, community cloud is provisioned for exclusive use by a specific community constituted by a group of organizations that have shared concerns [11].Cloud service business usually needs to consider two elements: payment status and Service Level Agreement. Payment status can be defined as a stage of payment process in cloud providers’ accounting records. In practice, cloud computing access control models usually considers service accounting records of cloud computing providers [17]. Cloud computing often utilizes the pay-per-use strategy to charge service fees. Pay-per-use means cloud resource charges are based on the quantity used [3]. The above discussion indicates that payment status for service fees is important for cloud access control. Service Level Agreement (SLA for short) is a part of service contract that defines the level of service and controls the use of computing resources [17]. In general, cloud computing service providers define SLA as guarantee about expected service level that the enterprise has committed to provide [3]. And SLA should be considered in cloud computing access control models [17].RBAC (Role-Based Access Control) is a widespread used mechanism in business. The RBAC model uses application-specific and organizational role structure to control objects’ accesses in organizational-wide applications [4]. Considering the attributes, other than role and object, that affect users’ permission causes concept explosion and limits RBAC’s strengths. The concept explosion is twofold: role explosion and object explosion. Role explosion means that the number of roles can easily explode [4]. Role explosion occurs when users’ and context-specific attributes, such as payment status, affects users’ permissions. The idea of object explosion defined in this work means the number of resources can easily explode. Object explosion occurs when resources’ attributes, such as service level, are considered in access control mechanisms.Conflicts are inevitable in access control policies. Here is a conflict example about multiple roles for the same person. In this example, policy A is: role X in company Y can not use resource Z in Cloud C. And policy B is: role I in community J can use resource Z in Cloud C. Therefore policy A contradicts policy B when person W plays both role X and role I.To handle the cloud service business requirements and reduce concept explosion in cloud service, this work is based on and extend RBAC to proposes the cloud service access control (CSAC) system to automatically support for access control policy analysis and execution in cloud services. The CSAC system is designed to support the CASC method. The CSAC method is comprised of a process, policy and requirement metadata, and rules. The process describes the steps of CSAC method. The policy and requirement metadata reveals what information should be considered in access control policy and user requirement specification. The rules are used to analyze policy conflict and deny inappropriate accesses.Ontology is the theoretical foundation of the CSAC system. Ontology is a shared and explicit conceptualization to represent a domain knowledge structure [5]. The ontology is an appropriate methodology to accomplish a common consensus of communication and to facilitate knowledge management [2]. In the CSAC system, ontology can provide necessary semantic information to execute policy conflict analysis and access denying rules.The CSAC system is comprised of seven modules: access grant and denying, resource usage monitor, payment status monitor, policy specification, policy conflict detector, conflict resolver, and ontology management. Access grant and denying module executes access control policies and access denying rules to decide which access is allowed or not. Resource usage monitor module measures how many resources are used, such as used storage size. Payment status monitor indicates that each user’s accounting record about paying bills. The cloud administrator uses policy specification module to specify access control policies. Policy conflict detector module uses policy conflict rules and ontologies to automatically analyze inconsistencies between policies. The cloud administrator uses conflict resolver module to prioritize inconsistent policies to resolve conflicts. Finally, ontology management module is used to add, modify, and delete concepts and relationships.This paper is organized as follows. Section 2 discusses related works about access control mechanisms. Section 3 proposes the CSAC method which is constituted of the process, metadata, and rules. Section 4 proposes the CSAC system architecture and database design. Section 5 provides a case study to demonstrate how the CSAC method works. Section 6 evaluates the concept explosion situation in CSAC and RBAC. The final conclusion section includes research contributions and further works.

@&#CONCLUSIONS@&#
