@&#MAIN-TITLE@&#
Surface-based rigid registration using a global optimization algorithm for assessment of MRI knee cartilage thickness changes

@&#HIGHLIGHTS@&#
An approach for globally solving the 3D rigid registration problem is proposed.The method was used for assessment for MRI knee cartilage thickness changes.The method was evaluated on MR images from porcine knees and human knees.Experimental results show the effectiveness of our approach.

@&#KEYPHRASES@&#
Cartilage segmentation,Changes over time,Femoral cartilage,Global optimization,Registration,

@&#ABSTRACT@&#
Registration methods have become an important tool in many medical applications. Existing methods require a good initial estimation (transformation) in order to find a global solution, i.e., if the initial estimation is far from the actual solution, incorrect solution or mismatching is very likely. In contrast, this paper presents a novel approach for globally solving the three dimensional (3D) rigid registration problem. The registration is grounded on a mathematical theory—Lipschitz optimization. It achieves a guaranteed global optimality with a rough initial estimation (e.g., even a random guess). Moreover, Munkres assignment algorithm is used to find the point correspondences. It applies the distance matrix to find an optimal correspondence. Our method is evaluated and demonstrated on MR images from porcine knees and human knees. Compared with state-of-the-art methods, the proposed technique is more robust, more accurate to perform point to point comparisons of knee cartilage thickness values for follow-up studies on the same subject.

@&#INTRODUCTION@&#
Osteoarthritis (OA) of the knee is chronic disease associated with deterioration of the joint cartilage. As OA progresses, the cartilage gets thinner and in severe cases breaks down losing its entire functionality. Changes in the morphology of knee cartilage (such as the cartilage thickness) can be well detected with magnetic resonance imaging (MRI) [1].Thickness changes over the short time scale useful in drug development (6–12 months) are likely to be in the sub-millimeter region [2]. A number of approaches [3–5] have shown that small changes in thickness between two different time points can be determined by registering the two sets of different time points and computing change at each point of the bone–cartilage interface or bone surface. A point-based rigid registration algorithm using the bone–cartilage interface as a reference for tracking time-dependent thickness changes of local knee cartilage can be found in Ref. [3]. A rigid registration approach using bone surface points for evaluating focal volume changes of knee cartilage in clinical study is presented in Ref. [4]. There is also a rigid registration approach for quantifying local (focal) hip cartilage thickness changes in longitudinal study, see Ref. [5]. These algorithms require a good initial transformation in order to converge to the globally optimal solution, otherwise only a local optimum is attained.In this paper, we describe a novel framework for obtaining the globally solution. The algorithms in this paper are based on the Lipschitz optimization and then using a hyper-cuboid-and-hyper-ball (HCnHB) algorithm. We introduce a “Lipschitzation” to the cost function. After making the cost function globally Lipschitzian, a global search over the transformation space can be carried out effectively. The advantage of our approach is that it always gives the correct solution with a random initialization; it is noticeable, however, that if a good initialization is available then our approach runs much faster, as the good initialization can provide a near search bound. A coarse registration based on the principal axes transformation is therefore used for identifying reducing the search bound. Moreover, by exploiting the special hexagram-64-tree data structure of the 3D registration problem itself and of the six-dimensional Euclidean motion (rotation and translation) space, we propose a hyper-cuboid-and-hyper-ball (HCnHB) algorithm to implement the global search. To our knowledge, no such efficient global method is yet available for the registration of knee bone surfaces on serial MR images obtained at different times.Our study was divided into two stages. In the first stage, the 30 fresh frozen pig knees and 30 knees of patients (11 men, 19 women; age range, 32–67 years; mean age, 52.6 years) were used for evaluating the registration accuracy. Each porcine knee was scanned twice; and 30 knees of patients were imaged twice at baseline (BL) and 12 months (M12). The status of the joints range from healthy to osteoarthritic according to the Kellgren–Lawrence index (KLi) [6], a radiographic score established by X-rays between 0 and 4 where KLi=0 is healthy, KLi=1 is doubtful OA, KLi=2 is minimal OA, KLi=3 is moderate OA, and KLi=4 is severe OA. Based on the confirmation of radiologist and 2 orthopedists, 30 patient knees at baseline have grade of KLi≤2. In the follow-up study visit (at 12 months), 19 knees have grade of KLi=2, and 11 knees have grade of KLi=3.In the second stage, we performed the thickness comparison of the same subject at different time points. In the animal experimentation, registration was performed for undeformed femoral cartilages in 5 fresh pig knees and those obtained in a 5-h static compression experiment with a loading force of 100kg [7,8]. We displayed the cartilage thickness changes after the 3D registration of cartilage–bone interface before and after 5h of static compression. In the clinical experiment, 30 above-mentioned patient knees were examined for showing that our study was well suited for the follow-up clinical application of OA knees.The protocol MRI was a fat-saturated 3D spoiled gradient recalled echo in sagittal plane with TR=9.0ms, TE=4.2ms, flip angle=30°, FOV=320×320mm, slice thickness 2mm, and matrix 256×256, scan time 4:30. Images were obtained on a General Electric 1.5-T MRI scanner (GE Medical Systems, Milwaukee, WI) with a standard transmit receive extremity coil. An isotropic voxel size of 1.0×1.0×1.0mm3 can be created by the interpolation method. 3D isotropic interpolation is an exhaustive computation. To reduce the computational time, therefore, the slice thickness was reduced from 2 to 1mm using the zero-filling interpolation.Cartilage is segmented from MR images using a semi-automatic segmentation technique by Lynch et al. [9]. The technique consists of the following three steps.(1)Manual initialization: (i) the extremities of the cartilage sheet within each slice (two points per slice with femoral cartilage visible) (Fig. 1a), and (ii) six points within the articular cartilage from the central slice of the scan, and also from example slices within both the medial and lateral compartment of the knee.Detection of the cartilage sheet: The computer then optimizes the positions of these points and extrapolates them to neighboring slices (Fig. 1b), automatically adjusting the points so that they are within the cartilage sheet within each slice (Fig. 1c and d). The computer has then provided its best estimate of the 3D extent of the cartilage sheet covering the femoral condyles (Fig. 1e). The observer can then correct any incorrectly placed points (usually occurring at the extreme medical and lateral extents of the joint, and occasionally at the boundary between the trochlear groove and the femoral condyles).Detection of the bone–cartilage interface and the cartilage–synovium interface: The computer then automatically adjusts this cartilage sheet into the bone–cartilage interface (inner-boundary) and the cartilage–synovium interface (out-boundary) of the cartilage (Fig. 1f), with a final review and correction by the observer. This technique can be performed in a batch mode, with many scans being initialized at once, with a later review of the detection of the cartilage sheet being performed. The cartilage can be automatically segmented in a later analysis, followed by a review and correction of the results.The 3D bone shape is reconstructed from MR images using a multi-step process. First, the bone surface is segmented using the aforementioned method with manual boundary initialization and manual correction for accurate segmentation (see Fig. 2). The 2D segmented contours are then processed to form a 3D surface representation (3D reconstruction) of the bone surface based on a network of triangles, by connecting the points of one 2D contour with its closest counterparts on the consecutive 2D contour.By resampling bone surface, resolution of the triangulated bone surface, i.e., the number of vertices of triangles in the network can be selected interactively by the user. In the present study, registrations were performed at a resolution of approximately 4760 vertices for one porcine knee and approximately 6900 vertices for one patient knee on the triangulated bone surfaces. This serves to reduce the computational complexity, particularly by saving time in operating the following registration algorithm, which should preferably work in real time. The networks of two data sets constitute the input to the registration algorithm.The bone–cartilage interface and articular surface are required for the computation of 3D cartilage thickness measurements using either 3D minimum Euclidean distance or a normal vector by searching outwards from the bone surface. Searching outwards along the normal appeared to offer increased reliability around local anomalies such as osteophytes, which often present in our images from patients with OA. Unfortunately, in certain geometrical situations this method can fail locally. Therefore, for each point on the bone–cartilage interface, the 3D minimum Euclidean distance point on the articular surface is found and the corresponding minimum Euclidean distance is assigned as its thickness value. So each point in the bone surface corresponding to the bone–cartilage interface has a thickness value assigned to it.To quantify local cartilage thickness changes over time, corresponding point must be identified on the follow-up image. After identifying the corresponding point, error of our algorithm is within 1mm (see Table 6). Thus, the identified corresponding point may not be on the bone–cartilage surface of follow-up image. In such situation, closest point on the bone–cartilage surface is found and cartilage thickness is estimated from this point. In addition, a trilinear interpolation is performed for the closest point at a non-integral location.Surface-based registration involves the determination of the surfaces of the images to be matched and the minimization of a distance measure between these corresponding surfaces. The surfaces are generally represented as set of large number of points obtained by segmenting contours in contiguous image slices. There may be a requirement for the points to be triangulated. After performing the bone surface generation based on a network of triangles, each femoral bone surface is composed of the vertices of the network of triangles. The main aim of the present study is to find a truly globally optimal transformation and triangle vertices correspondences (i.e., triangles correspondences).Image registration is the process that allows the computation of a rigid transformation that will transfer the 3D follow-up visit information into the 3D baseline visit coordinate system. The purpose of the registration process is to find the transformation matrix (translation T and rotation R). During this process, the bone surface segmented at the baseline visit is defined as the reference surface, and the bone surface segmented at the follow-up visit as the target surface.We determine an optimal rigid transformation that minimizes the cost function, where the transformation is represented by a translation T and a rotation R. In 3D Euclidean space, the translation vector and the rotation matrix are expressed as(1)T=tx,ty,tzTandR=RzRyRxwhere(2)Rx=1000cosθxsinθx0−sinθxcosθx(3)Ry=cosθy0−sinθy010sinθy0cosθy(4)Rz=cosθzsinθz0−sinθzcosθz0001They form a 6D search space in which the vector can be denoted by (tx, ty, tz, θx, θy, θz). The two matrices (T and R) can be combined in a single transformation matrix Q=(R T; 0 1) which is the 4×4 transformation matrix.Let A and B represent two bone surfaces (femoral bones of two different data acquisitions), and XAiand XBiare coordinates of the ith point in the two bone surfaces, respectively. Assuming that XAiand XBP(i) are matched under the vertices correspondences P, the cost function is given by(5)dA,B|Q,P=1N∑i=1N||X¯Ai−QX¯BP(i)||2where N=min{NA, NB}, NA, NBare the number of vertices on the triangulated surfaces A and B, respectively.X¯Ai=(XAi,1)T, andX¯BP(i)=XBP(i),1T. The correspondences P are a matrix P∈RN×N.In real applications, to simultaneously find a truly globally optimal motion (R and T) and vertices correspondences P is impossible. But, for a given R and T, finding the vertices correspondences P is an assignment problem, which can be solved by Munkres assignment algorithm [10]. The distance matrix C between A and B is regarded as the cost matrix in the algorithm.(6)C=XA1−XB1XA1−XB2⋯XA1−XBNBXA2−XB1XA2−XB2⋯XA2−XBNB⋮⋮⋮⋮XANA−XB1XANA−XB2⋯XANA−XBNBThe optimal correspondence P between A and B is that makes the sum∑i=1NXAi−XBP(i)of the distances minimum. Munkres assignment algorithm, which applies the distance matrix C to find an optimal correspondence P, can be described as follows:Step 1: Compute the cost matrix, namely the distance matrix C. Ensure that the matrix is square by the addition of dummy rows or columns if necessary. Conventionally, each element in the dummy row or column is the same as the largest number in the matrix.Step 2: Subtract the smallest element in each row from all the elements of its row.Step 3: Subtract the smallest element in each column from all the elements of its column.Step 4: Cover the zero elements with lines. Draw lines through appropriate rows and columns such that all the zero elements of the matrix are covered and the minimum number of such lines is used. If the number of lines is equal to the number of rows then go to Step 8.Step 5: Add the minimum uncovered element to every covered element. If an element is covered twice, add the minimum element to it twice.Step 6: Subtract the minimum element from every element in the matrix.Step 7: Cover the zero elements again. If the number of lines covering the zero elements is less than the number of rows, return to Step 5.Step 8: Select a correspondence by choosing a set of zeros so that each row or column has only one selected.Step 9: Apply the correspondence to the original matrix C, disregarding dummy rows. Thus, the optimal correspondence P between A and B is obtained.The main aim of the present study is to find a truly globally-optimal combination Q. For this purpose, we apply a global optimization algorithm to minimize Eq. (5).In this section we briefly present some notation and concepts of Lipschitz optimization algorithm. This is standard material in Lipschitz optimization theory. For a more details introduction for explaining the reason why the Lipschitz optimization algorithm can effectively carry out a global search, see Ref. [11].To carry out a global search effectively, we use a proper algebraic transform f1(x) (see Fig. 3) to the cost function for performing a Lipschitzation process. After making the cost function globally Lipschitzian, the cost function Eq. (5) can be written as(7)dL=f11N∑i=1N||X¯Ai−QX¯BP(i)||2The following theorem shows why Eqs. (5) and (7) have the same optimal solution.Theorem 1: Eqs. (5) and (7) have the same optimal solution.Proof: Expanding the right-hand side of Eq. (7),(8)dL=f11N∑i=1N||X¯Ai−QX¯BP(i)||2=1−11+1N∑i=1N||X¯Ai−QX¯BP(i)||22As shown in Fig. 3, the function f1(x) defined on an interval [0, +∞) of the real numbers is monotonically increasing. Therefore, minimizing dLis equivalent to minimizing(9)1N∑i=1N||X¯Ai−QX¯BP(i)||22that is, minimizing Eq. (5). Such completes the proof.Our algorithm always gives a minimal solution with regard to a random initialization; it should be noted, however, that if a good initialization is available then our algorithm runs much faster, as the good initialization can provide a near search bound. A coarse registration based on the principal axes transformation (PAT) is therefore used [12].The coordinate vectors of the N vertices that compose the femoral head surfaces are expressed as Xi=(xi, yi, zi)T(i=1,…,N) in the geometric center of the mass coordinate system. The inertia matrices I of a femoral head surface is given by:(10)I=1N∑ixi2−∑ixiyi−∑ixizi−∑ixiyi∑iyi2−∑iyizi−∑ixizi−∑iyizi∑izi2Using the singular value decomposition (SVD), the inertia matrix I can be decomposed into:(11)I=S×D×STwhere the columns of S consist of the eigenvectors of I and D=diag(λ1, λ2, λ3) is a diagonal matrix containing the eigenvalues λ1, λ2, λ3 of I with its absolute value sorted in descending order.The femoral head surface can be expressed in the principal axes coordinate system X′ by the following coordinate transformation: X′=STX, which is a rotation of the surface with the rotation matrix ST. In the principal axes coordinate system the eigenvalues λ1, λ2, λ3 are the moments of inertia with respect to the principal axes.By transforming both femoral head surfaces (A and B) in the principal axes coordinate system (X′A=SATXAandX′B=SBTXB), the resulting transformation equation that maps the surface B to surface A can be written as:(12)XA=SASBTXBwhere the multiplication of SAandSBTresults in a rotation matrix.In conclusion, the PAT is accomplished by translating surface B to the geometric center of mass of surface A and rotating surface B twice by the rotation matricesSBTand SA. The rotation matrices SBand SAare obtained by applying an eigenvalue decomposition to the inertia matrices IBand IA, respectively (see Fig. 4).After performing the PAT, the bound of search space is identified as follows (shown in Fig. 4):(1)The translation bound: Calculate the Euclidian distances between two vectors XAiand XBi(where XAi=(xAi, yAi, zAi)Tand XBi=(xBi, yBi, zBi)T). The bound of translation search space is defined as the maximum Euclidian distance in the study by the following equation:(13)Btranslation=argmaxxAi−xBi2+yAi−yBi2+zAi−zBi21/2where i=1, 2, 3, 4; and 1, 2, 3, and 4 represent the four endpoints number in the femur surface, respectively (see Fig. 4). Thus, the translation bound ranges from −Btranslation to Btranslation over the x, y, and z directions.The rotation bound: Calculate the angle αibetween two vectors XAiand XBi. As indicated in Fig. 4, the bound of rotation search space is defined as the maximum among the four angles (α1, α2, α3, and α4), applying the formula:So far we have done appropriate preparations; next work is to devise a global optimization algorithm to find the optimal Q and P of Eq. (7).Our algorithm belongs to the branch and bound methods, which derive their origin from combinatorial optimization. Branch and bound methods guarantee to find a global minimum with a desired accuracy after a predictable number of steps. The basic idea is that the search space is divided recursively by branching into smaller and smaller parts. Lower bounds on the objective allow eliminating large portions of the search space early in the computation so that only a (usually small) part of the branching tree has to be generated and processed.In our algorithm, we call this branching tree data structure “Hexagram-64-tree data structure”, which is subsequently used to implement the branch and bound search. One node can be subdivided into 2nsubnodes in the n dimensional transformation space. We concluded that in 6D space, one hyper-cuboid (node) would result in 64 sub-hyper-cuboids (sub-nodes) for the tree data structure. In the tree data structure, each of the tree nodes represents a hyper-cuboid in 6D space. Each hyper-cuboid has a data member of a hyperball with radius ɛ. As such, we call our new method the hyper-cuboid-and-hyperball (HCnHB) algorithm. The details of this algorithm steps is described as follows.(1)Preparation: Build a Hexagram-64-tree data structure, each node of which is a hyper-cuboid in 6D space. Make a proper estimate to the Lipschitz constant L≤0.65||XB||, where ||XB|| is the average length of all vectors XBi, i=1,…, N (see [13]). Let fmin be the current best function value.Initialization: Make a rough initial estimate of the transformation (denoted by x0) and the correspondences by any available method (e.g., even a random guess). Evaluate f(x0) and set fmin=f(x0). Radii of the hyper-ball is initially set to 0, ɛ=0.Global search: Do repeated depth-first-search over the Hexagram 64-tree. For each node:Step 1: Calculate a transformation matrix Q=(R T; 0 1) using the center point (denoted by x) of the hyper-cuboid.Step 2: Calculate the correspondence matrix P for given Q by using the Munkres assignment algorithm. Evaluate the current function f(x). If f(x)≤fmin, then update fmin. Otherwise calculate the radius of its ɛ-hyper-ball by ɛ=(f(x)−fmin)/L.Step 3: If the hyper-cuboid is entirely contained in its own ɛ-hyper-ball, then remove this hyper-cuboid from Hexagram-64-tree. Otherwise, subdivide it into sixty-four sub-hyper-cuboids and insert these sub-hyper-cuboids at the current position in the Hexagram-64-tree.Step 4: The search continues until the difference between function values at current and the previous iterations is less than a small threshold γ (=0.005).Return the center xopt of one of the remaining hyper-cuboids that produces the least function value as the optimal Qopt, and the corresponding matrix Popt as the optimal correspondences.End.

@&#CONCLUSIONS@&#
