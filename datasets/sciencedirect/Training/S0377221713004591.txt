@&#MAIN-TITLE@&#
Heuristic for the rectangular two-dimensional single stock size cutting stock problem with two-staged patterns

@&#HIGHLIGHTS@&#
We propose a recursion for packing rectangular items into strips.We propose a recursion for placing strips on the plate.The cutting plan is obtained from solving a sequence of residual problems.Solve more than 75% of the benchmark instances to optimality.Achieve better solution quality than a commercial stock cutting software package.

@&#KEYPHRASES@&#
Cutting,Two-dimensional cutting stock,Two-staged patterns,Column generation,

@&#ABSTRACT@&#
Two-staged patterns are often used in manufacturing industries to divide stock plates into rectangular items. A heuristic algorithm is presented to solve the rectangular two-dimensional single stock size cutting stock problem with two-staged patterns. It uses the column-generation method to solve the residual problems repeatedly, until the demands of all items are satisfied. Each pattern is generated using a procedure for the constrained single large object placement problem to guarantee the convergence of the algorithm. The computational results of benchmark and practical instances indicate the following: (1) the algorithm can solve most instances to optimality, with the gap to optimality being at most one plate for those solutions whose optimality is not proven and (2) for the instances tested, the algorithm is more efficient (on average) in reducing the number of plates used than a published algorithm and a commercial stock cutting software package.

@&#INTRODUCTION@&#
The Two-Dimensional single stock size Cutting Stock problem (TDCS) appears in several industries, where stock plates of the same size are divided into rectangular items. The stock may be metal plate, plate glass, or wood panel. In Wäscher et al. (2007), the TDCS is formally referred to as the two-dimensional SSSCSP (single stock size cutting stock problem), in which m types of rectangular items with specified demands are completely produced from plates of the same size L⊗W (length⊗width), such that the input (number of plates used, simply “plate count”) is minimized. The item types are characterized by lengths (l1,…,lm), widths (w1,…,wm) and demands (d1,…,dm). A solution of the TDCS is a cutting plan that contains a set of different cutting patterns, each of which has specified layout and frequency. The solution can be obtained from solving the following integer programming (IP) model:min∑j=1Mxj∑j=1Maijxj⩾di,i=1,…,m;xj∈N,j=1,…,M,where M is the number of possible cutting patterns. Each pattern can be obtained from solving a two-dimensional SLOPP (Single Large Object Placement Problem; see Wäscher et al. (2007)), xjthe frequency of pattern j (decision variable), j=1,…,M, aijthe frequency of type-i items in pattern j, i=1,…,m and j=1,…,M and N is the set of non-negative integers.The solution value is the plate count and must be minimized, subject to the constraints that the demands must be satisfied and the pattern frequencies should be integers.Solving the IP model exactly is time consuming because of the vast set of possible patterns. Actually it may be impossible to enumerate all the patterns. Gilmore and Gomory (1961) proposed the column-generation (CG) approach that solves the following linear programming (LP) model:min∑j=1mxj∑j=1maijxj⩾di,i=1,…,m;xj⩾0,j=1,…,m.Starting from a feasible solution that contains m patterns, the CG solves the LP model iteratively. In each iteration, it generates a pattern P from solving the following two-dimensional SLOPP:maxzP=∑i=1mcipiPis a feasible pattern;pi∈N,i=1,…,m,where zPis the value of the pattern, cithe value of a type-i item, obtained from the current dual LP-solution, and piis the frequency of type-i items in the pattern.The pattern is used to replace an existing one to update the solution. The iteration is terminated when the value of the new pattern is not larger than 1, then the current LP-solution becomes optimal. The pattern frequencies may be fractional in the optimal LP-solution. A procedure should be used to round them to integers to obtain a feasible solution to the IP model. A residual problem may be generated if the pattern frequencies are simply rounded down as (⌊x1⌋,…,⌊xm⌋), where the (remaining) demands areri=di-∑j=1maij⌊xj⌋,i=1,…,m. It must be solved to complete the solution.Guillotine cuts are often required to divide the plates into items. Two-staged (2STG) patterns are among the simplest guillotine pattern types that are used in the cutting process, where the cuts in the first stage split the plate into strips, and those in the second stage divide the strips into items. The cuts in the same stage are in the same direction, and the cut directions of the two stages are perpendicular to each other. The items can be orientated or non-orientated. In the later case an item can be placed on the plate with its length orientation being either horizontal or vertical. This paper concerns the TDCS with 2STG patterns (TDCS_2STG). The TDCS_2STG is denoted as TDCS_2STGO for the orientated case and as TDCS_2STGR for the case of allowing rotation (non-orientated). The TDCS_2STGR is the focus of this paper.The proposed algorithm is denoted as the RCCG (repeated constrained column-generation), where R (repeated) means that the complete solution (the complete cutting plan) is obtained from repeatedly solving the residual problems until the demands are satisfied, C (constrained) indicates that the patterns are generated mainly using a procedure for the constrained two-dimensional SLOPP (C_SLOPP), and CG means that each residual problem is solved by the CG approach. Each run of the CG fulfills some portion of the remaining demands. More precisely, the master problem solved in each run of the CG can be formulated as follows, where ri=difor the first run:min∑j=1mxj∑j=1maijxj=ri,i=1,…,m;xj⩾0,j=1,…,m.Let A=[aij]m×m, R=[ri]m×1 and X=[xj]m×1. The problem can also be written as:(1)min∑j=1mxj|AX=R;X⩾0.The sub-problem solved for generating the patterns in the first run is the unconstrained SLOPP (U_SLOPP):maxzP=∑i=1mcipi|Pis a 2STGR pattern;pi∈N.The U_SLOPP is naturally constrained despite the absence of explicit constraints on the demand per piece type, because pi⩽⌊(LW)/(liwi)⌋ must be hold for any feasible pattern. The patterns in the subsequent runs are generated from solving the following sub-problem (C_SLOPP):(2)maxzP=∑i=1mcipi|Pis a 2STGR pattern;(pi∈N)∩(pi⩽r)i,i=1,…,m.As later demonstrated in the computational test, the RCCG is powerful in input minimization. It can solve most benchmark instances to optimality. For those solutions whose optimality is not proven, the gap to optimality is at most one plate. For the instances tested, the RCCG is more effective in input minimization than a published algorithm and a commercial stock cutting software package.The remaining contents are organized as follows. The literature is reviewed in Section 2. The C_SLOPP procedure for 2STGR patterns is described in Section 3, followed by the presentation of the RCCG algorithm in Section 4. The computational results are reported in Section 5 and the conclusions are given in Section 6.

@&#CONCLUSIONS@&#
The algorithm RCCG in this paper solves the two-dimensional single stock size cutting stock problem with two-staged patterns and rotation of items. It calls the column-generation approach repeatedly to solve the residual problems until all demands are satisfied. The convergence of the algorithm is guaranteed by solving the constrained single large object placement problem to generate the cutting patterns.Two-staged patterns are simple to cut than most pattern types, and are widely used in practice. The algorithm can generate the cutting plans quickly, and solve most instances to optimality. The comparisons among the approaches indicate that the algorithm is effective in reducing the number of plates used (the statement is true at least for the instances tested).Future research work may include the use of the RCCG frame to solve the two-dimensional cutting stock problem with other types of cutting patterns, such as T-shape patterns (Cui and Huang, 2013), three-staged patterns (Cui and Huang, 2012), and general guillotine patterns (Armas et al., 2012).