@&#MAIN-TITLE@&#
On single-stage DEA models with weight restrictions

@&#HIGHLIGHTS@&#
We examine single-stage DEA models with weight restrictions that include a very small lower bound on weights.The use of a small lower bound on weights may lead to negative inputs in efficient targets.We suggest a modified single-stage model that overcomes the noted drawback.

@&#KEYPHRASES@&#
Data envelopment analysis,Weight restrictions,Production trade-offs,

@&#ABSTRACT@&#
The literature on data envelopment analysis (DEA) often employs multiplier models that incorporate very small (theoretically infinitesimal) lower bounds on the input and output weights. Computational problems arising from the solution of such programs are well known. In this paper we identify an additional theoretical problem that may arise if such bounds are used in a multiplier model with weight restrictions. Namely, we show that the use of small lower bounds may lead to the identification of an efficient target with negative inputs. We suggest a corrected model that overcomes this problem.

@&#INTRODUCTION@&#
In standard models of data envelopment analysis (DEA), the radial input and output projections of decision making units (DMUs) often exhibit mix inefficiency (are only weakly but not strongly efficient) – see, e.g., Cooper, Seiford, and Tone (2007) and Thanassoulis, Portela, and Despić (2008). Such projected DMUs cannot therefore be generally regarded as efficient targets. A common approach to the identification of efficient targets is the maximisation of component (input and output) slacks as a secondary optimisation goal. There are two principal approaches known in the literature that allow us to implement this procedure: the optimisation of the radial improvement factor and component slacks can be performed either in a single optimisation stage or in separate stages.In the single-stage approach, the multiplier DEA model is solved by incorporating a small (theoretically infinitesimal) lower bound ɛ  >  0 on all input and output weights. Equivalently, the objective function of the dual envelopment model is modified to include the input and output slacks multiplied by ε. The purpose of this approach is to let the DEA model assess the input or output radial efficiency of a DMU, while simultaneously accounting for possible mix inefficiency as a secondary goal (hence the requirement that ε be very small).Ali and Seiford (1993a) point out that the single-stage approach may lead to computational problems. In order to keep the assessment of radial efficiency as the main goal and mix improvements as the secondary objective, ɛ > 0 needs to be as small as possible. However, the use of a very small ε may lead to unacceptable inaccuracies arising from the finite precision of computer solutions. Because of this drawback, the two-stage optimisation approach of Ali and Seiford (1993b) appears to have become a preferred solution method of DEA models11Another problem identified by Ali and Seiford (1993a) is that for insufficiently small values of ɛ the multiplier model may be infeasible and its dual envelopment model unbounded. This issue has attracted further research in the literature but is unrelated to our results..In this paper we consider DEA models with weight restrictions. These are additional constraints often imposed on variable input and/or output weights in multiplier DEA models (Cook & Zhu, 2008; Podinovski, 1999, 2004b; Thanassoulis, Portela, & Allen, 2004). Such restrictions may be used to incorporate value judgements in a DEA model and generally lead to an improved ability of the model to discriminate between the efficiency of DMUs (Allen, Athanassopoulos, Dyson, & Thanassoulis, 1997).The incorporation of weight restrictions in a multiplier DEA model generates additional terms in the dual envelopment model. Podinovski (2004a) shows that such terms are interpretable as production trade-offs – the latter express simultaneous changes to the inputs and outputs deemed possible if implemented at any DMU in the technology. This interpretation explains an earlier observation (Charnes, Cooper, Wei, & Huang, 1989; Roll, Cook, & Golany, 1991) that the use of weight restrictions leads to an expansion of the model of technology.The dual relationship between weight restrictions and production trade-offs can be used as a basis for the construction of weight restrictions for which the expanded technology and its efficient frontier are technologically meaningful (i.e., all DMUs in the expanded technology are technologically feasible, or producible). For example, Podinovski (2007a) assesses production trade-offs and the corresponding weight restrictions in the context of higher education. Amado and Dyson (2009) and Amado and Santos (2009) use this method in applications of DEA to health care provision. Santos, Amado, and Rosado (2011) and Santos and Amado (2014) construct production trade-offs and weight restrictions for electricity distribution utilities and the court system. Atici and Podinovski (2015) illustrate the use of trade-offs in the assessment of efficiency of agricultural farms.It may appear that the two solution methods applicable to DEA models without weight restrictions should also be applicable to models with weight restrictions. However, as shown by Podinovski (2007b), if the standard second optimisation stage is used to solve DEA models with weight restrictions, the resulting target DMU may have negative inputs, which is often meaningless. This problem is overcome by the modified second optimisation stage suggested by Podinovski (2007b).In this paper we consider the use of the standard single-stage procedure for DEA models with weight restrictions and show its potential shortcomings. Our development is motivated by a significant DEA literature in which weight restrictions of different types are incorporated in the multiplier models together with the lower bound ɛ > 0 on all input and output weights.We give examples of efficiency assessment in which the use of an arbitrarily small lower bound ɛ > 0 on the multiplier weights results in a negative input of the efficient target DMU. This problem occurs under both assumptions of constant (CRS) and variable (VRS) returns to scale (Banker, Charnes, & Cooper, 1984; Charnes, Cooper, & Rhodes, 1978). We show that this effect arises not because of computational inaccuracies (our solutions are exact) but simply as a consequence of accounting for the radial and mix inefficiency in the same optimisation stage. Therefore, even disregarding computational problems, a straightforward incorporation of the lower multiplier bound ɛ > 0 is theoretically unsound.To overcome the noted problem, we suggest a modification to the single-stage formulation. This makes the new single-stage model (in both multiplier and envelopment forms) theoretically correct and useful for the compact expression of the two objectives: the assessment of radial and mix inefficiency of a DMU. We show that the corrected single-stage model may also be useful for the exact solution of simple illustrative examples.The suggested model does not address the computational difficulties discussed by Ali and Seiford (1993a). In practical computations, preference should still be given to the use of the two-stage method of Ali and Seiford (1993b). For models with weight restrictions, the second stage of this method needs a modification developed by Podinovski (2007b).In this section we briefly outline the dual relationship between weight restrictions and production trade-offs. We also clarify the notion of production technology arising in DEA models with weight restrictions.22For a theoretical development of this production technology, see Podinovski (2004a, 2015) and Podinovski and Bouzdine-Chameeva (2013, 2015).We use these notions in Section 3 to show that the single-stage statement of DEA models may lead to an incorrect identification of efficient targets.To be specific, consider assessing the output radial efficiency of DMU (X0, Y0) by a CRS multiplier model that incorporates the following K weight restrictions on the vectors v and u of input and output weights, respectively:(1)v⊤Pt−u⊤Qt≥0,t=1,…,K.We refer to inequalities (1) with zero on the right-hand side as homogeneous weight restrictions (Podinovski, 2004a).33Non-homogeneous weight restrictions have a non-zero constant on the right-hand side. Examples of such weight restrictions are absolute weight bounds (Dyson and Thanassoulis, 1988). Using the normalising equality of the multiplier model (2), or its input-oriented analogue, non-homogeneous weight restrictions can be restated as homogeneous ones. However, the latter will depend on the unit under the assessment and the orientation of the model. An extended discussion of non-homogeneous weight restrictions is presented in Podinovski (2005).Components of vectorsPt∈RmandQt∈Rsmay be positive, negative or zero.Consider the standard CRS output-oriented multiplier model that incorporates weight restrictions (1). LetXj∈R+mandYj∈R+sdenote the input and output vectors of observed DMUsj=1,…,n. The output radial efficiency of DMU (X0, Y0) is the inverse of the optimal value η* of the following linear program:(2)η*=minv⊤X0,subject tou⊤Y0=1,v⊤Xj−u⊤Yj≥0,j=1,…,n,v⊤Pt−u⊤Qt≥0,t=1,…,K,u,v≥0.The envelopment model dual to (2) can be stated as follows (the constraints of the dual are stated as equalities by using nonnegative slack vectors e and d):(3)η*=maxη,subject to∑j=1nλjXj+∑t=1KπtPt+d=X0,∑j=1nλjYj+∑t=1KπtQt−e=ηY0,λ,π,d,e≥0,ηsignfree.Observe that the incorporation of weight restrictions (1) in the multiplier model (2) has generated additional dual terms(Pt,Qt),t=1,…,K,in the envelopment model (3) applied in variable proportions πt≥ 0. Podinovski (2004a) refers to these terms as production trade-offs. The envelopment model (3) projects DMU (X0, Y0) on the boundary of the expanded CRS technology defined as follows:Definition 1(Podinovski, 2004a). The CRS technology with production trade-offsTCRS−TOis the set of all DMUs(X,Y)∈R+m×R+sfor which there exist intensity vectorsλ∈R+n,π∈R+K, and slack vectorsd∈R+mande∈R+ssuch that(4)∑j=1nλjXj+∑t=1KπtPt+d=X,∑j=1nλjYj+∑t=1KπtQt−e=Y.The meaning of Definition 1 is straightforward. The terms∑j=1nλjXjand∑j=1nλjYjon the left-hand side of Eq. (4) describe an arbitrary DMU in the standard CRS technology. The terms∑t=1KπtPtand∑t=1KπtQtmodify this DMU by applying trade-offs (Pt, Qt) in some proportions πt≥ 0. The resulting DMU is further modified by increasing its inputs by the vector d and by reducing its outputs by the vector e, which is consistent with the assumption of free disposability. Provided all inputs and outputs remain nonnegative, the DMU (X, Y) on the right-hand side of (4) is considered a member of technologyTCRS−TO.44The CRS technologyTCRS−TOand the corresponding VRS technologyTVRS−TOcan also be defined axiomatically (Podinovski, 2004a).The VRS technologyTVRS−TOis defined similarly, by additionally requiring that vector λ satisfies the normalising condition(5)∑j=1nλj=1.Remark 1It is well known that the incorporation of weight restrictions (1) in the multiplier model (2) may result in its infeasibility, which corresponds to the unbounded optimal value of the envelopment program (3). Podinovski and Bouzdine-Chameeva (2013, 2015) show that this happens when weight restrictions generate free production55TechnologyTallows free production if there exists a nonzero vector of outputs Y that can be produced from a zero vector of inputs, i.e.,(0,Y)∈T.in the CRS technologyTCRS−TOand call such weight restrictions inconsistent with the data set. Furthermore, weight restrictions may be inconsistent even if the multiplier and therefore envelopment models (2) and (3) (and their VRS analogues) have a finite optimal value for each observed DMU. Therefore the inconsistency of weight restrictions cannot be detected simply by solving standard models (2) or (3). Podinovski and Bouzdine-Chameeva (2013, 2015) develop special analytical and computational methods for checking if the weight restrictions (1) are consistent. If weight restrictions are inconsistent, this means that we made an error in their specification and that the weight restrictions need reassessing. In our further development we assume that the weight restrictions (1) are consistent – this guarantees that models (2) and (3), their VRS analogues and corresponding input-oriented variants have a finite optimal solution.The following examples show that the single optimisation stage applied to DEA models with weight restrictions may lead to the identification of “efficient targets” with negative inputs.Example 1Table 1shows DMUs A and B evaluated on two inputs and one output. Suppose we wish to assess the output radial efficiency of DMU B using the single-stage VRS DEA model, in whichɛ=0.001.66Taking smaller values of ɛ, e.g.,ɛ=10−6, makes no difference to our example and leads to the same effect.Further assume that we wish to incorporate the following weight restriction that links the weights v1 and v2 of the first and second inputs:(6)−2v1+1v2≥0.With weight restriction (6), the conventional single-stage output-oriented multiplier VRS model for DMU B is stated as follows:(7)min1ν1+3ν2+ωsubject to1u1=1,3ν1+1ν2−1u1+ω≥0,1ν1+3ν2−1u1+ω≥0,−2v1+1v2≥0,v1,v2,u1≥0.001,ωsignfree.As discussed in Section 2, the weight restriction (6) generates the dual production trade-off stated asP1=(−2,1)⊤∈R2andQ1=(0)∈R1. The envelopment model dual to (7) takes on the following form:(8)maxη+0.001(d1+d2+e1)subject to3λA+1λB−2π1+1d1=1,1λA+3λB+1π1+1d2=3,1λA+1λB−1e1=1η,λA+λB=1,λA,λB,π1,d1,d2,e1≥0,ηsignfree.The above envelopment program has a unique exact optimal solution (this is seen from the graph discussed below and can be proved formally using duality theory77Indeed, consider dual programs (7) and (8). Note thatΓ=〈v1,v2,u1,ω〉, wherev1=0.001,v2=0.002,u1=1andω=0.995(all values are exact), is feasible in program (7). (Solution Γ was obtained by a linear solver but its optimality is verified below by duality theory.) Furthermore, the objective functions of programs (7) and (8) calculated at the respective feasible solutions Γ and (9) are equal to the same value 1.002. By duality, solution Γ is optimal in program (7), and solution (9) is optimal in program (8). Substituting Γ into the constraints (7) and using complementary slackness conditions, we conclude that, in any optimal solution to (8), we haveλB=d2=e1=0. Substituting these values into the constraints of (8), we prove that optimal solution (9) is unique.):(9)λ^A=1,λ^B=0,π^1=2,d^1=2,d^2=0,e^1=0,η^=1.This solution does not appear problematic: one would conventionally interpret the reciprocal value1/η^=1as the output radial efficiency of DMU B and correctly conclude that this DMU is output radial efficient. (Note that, in this example, 1 is the exact output radial efficiency of DMU B – it is obtained withɛ=0). Furthermore, the non-zero optimal slackd^1=2appears to indicate the amount of mix inefficiency that DMU B should eliminate by reducing Input 1, in order to become fully efficient.A problem with the above solution arises if we calculate the efficient target to DMU B. As in the case without weight restrictions, we define the efficient target as the radial target of DMU B modified by the optimal slacks.88If the resulting inputs and outputs are nonnegative, this target DMU is by definition a member of the expanded technologyTVRS−TO. Because Input 1 of DMU(X^,Y^)in formula (10) is negative,(X^,Y^)∉TVRS−TO. An alternative definition is given by Allen et al. (1997) according to which the efficient target is defined as the combination of observed DMUs taken with the optimal coefficients λj. For this definition, the target DMU lies in the original technology (unmodified by weight restrictions), and no problems highlighted by our example arise. However, as noted by Allen et al. (1997), in the latter definition the radial nature of efficiency breaks down and some of the target inputs and outputs may be worse than their current levels observed at DMU (Xo, Yo). Thus, in our example, according to the latter definition, the efficient target of DMU B is DMU A (whoseλ^Ais equal to 1). Note that Input 1 of DMU A is worse (greater) than its value at DMU B. It is also worth noting that, in the case of CRS, it is theoretically possible (at least in carefully constructed examples) that all optimal coefficients λjare equal to zero. Then, calculating the efficient target based only on the optimal vector λ, we obtain the zero DMU (the origin) as the efficient target, which clearly appears problematic.This gives us the following target DMU(X^,Y^)in which the first two components are inputs and the last is output:(10)(X^Y^)=(1−1d^13−1d^21η^+1e^1)=(−131).It is clear that the exact optimal solution to the single-stage program (8) results in an inappropriate “efficient target” with a negative value of the first input, and DMU(X^,Y^)is not in technologyTVRS−TO.Fig. 1illustrates the above solution. The darker area above and to the right of the line KBAL is the standard VRS technology in the two input dimensions. (In this example the output dimension is not important and is not shown.) As seen from model (8) and according to Definition 1, the DMUs in the VRS technology are further modified by the trade-offP1=(−2,1)⊤,Q1=(0)generated by the weight restriction (6) and used in a variable proportion π1 ≥ 0. For example, the application of trade-off (P1, Q1) to DMU A withπ1=1adds hypothetical DMU F to the technology. The same trade-off withπ1=1.5creates DMU C. Overall, letting π1 to change in the range [0, 1.5] generates the line CA. By the assumption of free disposability of inputs, the effect of this trade-off is the addition of the light grey area above the line CA to the original VRS technology. Note that we cannot take π1 > 1.5 because this results in negative values of Input 1. In particular, DMU D is not included in the technologyTVRS−TO. Also note that the application of trade-off (P1, Q1) to the other DMUs (e.g., to DMU B) does not add new points to the technology.The incorrect target DMU(X^,Y^)corresponds to point D in Fig. 1 and is outside the technology.It may appear reasonable to correct this problem by replacing the negative “target” input −1 in (10) by zero and taking DMU(X˜,Y˜)=(0,3,1)as the “corrected” target unit. The latter DMU corresponds to point G in Fig. 1. It is, however, clear that G is dominated by unit C and is therefore inefficient and cannot be considered an efficient target for B. This shows that replacing negative inputs by zeros is theoretically unsound.The above example demonstrates that the incorporation of a secondary goal of maximising input and output slacks as in program (8) may lead to negative input target values. This is consistent with the finding of Podinovski (2007b) who shows that the simple maximisation of the input and output slacks in a separate optimisation stage in programs with weight restrictions may also lead to negative input values. Note that this problem does not arise in standard CRS and VRS DEA models without weight restrictions, with a small lower bound ɛ > 0 on the input and output weights.Example 2In the above example DMU B is output radial efficient. A minor modification of this example shows that the same negative input targets may be obtained for a DMU that is output radial inefficient. Indeed, consider DMU B′ that has the same two inputs as DMU B in Table 1 and the output equal to 0.5. Assume that DMUs A and B′ are observed. Solving the model similar to (8), we obtain the optimal solution (9) in whichη^=1is replaced byη^=2. This means that the output radial efficiency of DMU B′ is equal to1/η^=0.5. Its “efficient target” is the same as above and defined by formula (10). In this modified example, point B in Fig. 1 represents the output radial projection of DMU B′.Example 3Negative input targets may also occur in an input-oriented model. Consider observed DMUs A and B in Table 2. To assess the input radial efficiency of DMU B in a VRS model with weight restriction (6), we solve the following program:(11)minθ−0.001(d1+d2+d3+e1)It is straightforward to verify that the unique exact optimal solution to program (11) is(12)λ˜A=1,λ˜B=0,π˜1=2,d˜1=2,d˜2=0,d˜3=0,e˜1=0,θ˜=0.5.Therefore, the input radial efficiency of DMU B is equal to 0.5. Repeating computations as in Example 1, we obtain the “efficient target” of DMU B with a negative input:(13)(X˜Y˜)=(2θ˜−1d˜16θ˜−1d˜22θ˜−1d˜31+1e˜1)=(−1311).Example 4Similar examples can be given for the case of CRS. Consider the data set in Table 2. To assess the input radial efficiency of DMU B, we solve program (11) from which we remove the normalising equalityλA+λB=1. This program has the same unique optimal solution (12) as in the case of VRS, resulting in the same “efficient target” (13) with a negative input. The CRS input radial efficiency of DMU B is equal to 0.5.Similarly, the CRS output radial efficiency of DMU B is, as expected, also equal to 0.5. In this case, the target unit for DMU B is(X′,Y′)=(−2,6,2,2), where the first three components are the inputs and the fourth is the output. Note that the target value for Input 1 is negative.Based on Definition 1, below we suggest a simple modification to the single-stage envelopment and multiplier models that overcome the problem highlighted in Section 3. These models identify efficient projections of inefficient units on the boundary of technologiesTCRS−TOandTVRS−TO. In particular, by definition of such technologies, this implies the nonnegativity of the target inputs and outputs.Taking into account Definition 1, the single-stage output-oriented program that identifies an efficient target within the technologyTCRS−TOmay be stated in the following form:99To avoid confusion with the vectors e and d used in Definition 1, we denote the input slacksξ∈R+mand output slacksς∈R+s.(14)maxη+ɛ(∑i=1mξi+∑r=1sςr)subject to(Xo−ξ,ηYo+ς)∈TCRS−TO,  ξ, ς ≥ 0.The full statement of program (14) is as follows:(15a)maxη+ɛ(∑i=1mξi+∑r=1sςr)subject to(15b)∑j=1nλjXj+∑t=1KπtPt+d=Xo−ξ,(15c)∑j=1nλjYj+∑t=1KπtQt−e=ηYo+ς,(15d)Xo−ξ≥0,(15e)ηYo+ς≥0,(15f)λ,π,d,e,ξ,ς≥0,ηsignfree.Note that program (15) can be simplified. First, at any of its optimal solutions, vector e must be a zero vector.1010Indeed, if we assume to the contrary that e ≥ 0 and e ≠ 0, then redefininge˜=0andς˜=ς+ekeeps (15c) and (15e) true, while improving the objective function (15a), which is impossible due to the assumed optimality of the current solution. Therefore, vector e in program (15) can be assumed zero and removed from the formulation.Second, for all sufficiently small ɛ > 0 condition (15e) is redundant.1111Theorem 2.1 proved in Sherali (1982) implies that, for all sufficiently small ɛ > 0, an optimal η in program (15) is also optimal in program (3) and is, therefore, nonnegative. Because vector ς is nonnegative, for all sufficiently small ɛ > 0, constraint (15e) is satisfied at any optimal solution to (15) and can be omitted.Therefore, program (15) can be restated as follows:(16a)maxη+ɛ(∑i=1mξi+∑r=1sςr)subject to(16b)∑j=1nλjXj+∑t=1KπtPt+d=Xo−ξ,(16c)∑j=1nλjYj+∑t=1KπtQt=ηYo+ς,(16d)Xo−ξ≥0,(16e)λ,π,d,ξ,ς≥0,ηsignfree.Let 〈λ*, π*, d*, ξ*, ς*, η*〉 be an optimal solution to program (16). Define the target DMU as(17)(X*,Y*)=(Xo−ξ*,η*Yo+ς*).Because (X*, Y*) satisfies Eq. (4) (where e is a zero vector), and X* ≥ 0 and Y* ≥ 0, we have(X*,Y*)∈TCRS−TO. The next result shows that DMU (X*, Y*) can be regarded as an efficient target of DMU (Xo, Yo).Theorem 1DMU (X*, Y*) is efficient in technologyTCRS−TO.A proof of Theorem 1 is given in Appendix A.Denoting v, u and w the dual vectors corresponding to constraints (16b) and negated constraints (16c) and (16d), respectively, the dual to program (16) can be stated as follows:1212The nonnegativity condition on vector v in program (18) is dual to the primal vector d ≥ 0.(18)min(v⊤+w⊤)Xosubject tou⊤Yo=1,v⊤Xj−u⊤Yj≥0,j=1,…,n,v⊤Pt−u⊤Qt≥0,t=1,…,K,vi+wi≥ɛ,i=1,…,m,ur≥ɛ,r=1,…,s,v,w≥0.It is worth noting that the above program is different to model (7) which was shown to be generally incorrect by an example in Section 3.In the input orientation, program (16) needs an obvious modification as follows, where θ represents the proportional input improvement factor:(19)minθ−ɛ(∑i=1mξi+∑r=1sςr)subject to∑j=1nλjXj+∑t=1KπtPt+d=θXo−ξ,∑j=1nλjYj+∑t=1KπtQt=Yo+ς,θXo−ξ≥0,λ,π,d,ξ,ς≥0,θsignfree.Any optimal solution to program (19) defines an efficient target to DMU (Xo, Yo) in the usual way:(X*,Y*)=(θ*Xo−ξ*,Yo+ς*),where θ*, ξ* and ς* are components of an optimal solution to (19). It is straightforward to verify that Theorem 1 remains true in this case.Using similar notation for dual vectors v, u and w as above, the dual to program (19) is stated as follows:(20)maxu⊤Yosubject to(v⊤+w⊤)Xo=1,v⊤Xj−u⊤Yj≥0,j=1,…,n,v⊤Pt−u⊤Qt≥0,t=1,…,K,vi+wi≥ɛ,i=1,…,m,ur≥ɛ,r=1,…,s,v,w≥0.Remark 2In the case of VRS, the envelopment program (16) includes an additional normalising equality (5). The corresponding multiplier program (18) is modified accordingly, by incorporating the additional sign-free variable ω corresponding to (5). The input-orientated program (19) and its dual (20) are treated in the same way. An obvious analogue of Theorem 1 remains valid in all these cases.Below we illustrate the use of the new models by revisiting Example 1. As demonstrated, solving the single-stage model (8) leads to an incorrect target(X^,Y^)for the inefficient DMU B. As shown above, instead of (8), we should solve program (16) which takes on the following form:(21)maxη+0.001(ξ1+ξ2+ς1)subject to3λA+1λB−2π1+1d1=1−ξ1,1λA+3λB+1π1+1d2=3−ξ2,1λA+1λB=1η+ς1,1−ξ1≥0,3−ξ2≥0,λA+λB=1,λA,λB,π1,d1,d2,ξ1,ξ2,ς1≥0,ηsignfree.It is straightforward to verify that (21) has the following exact unique optimal solution:λA*=1,λB*=0,π1*=1.5,d1*=d2*=0,ξ1*=1,ξ2*=0.5,ς1*=0,η*=1.The corresponding efficient target is stated as follows:(X*Y*)=(1−ξ1*3−ξ2*1η*+ς1*)=(02.51).As discussed above, by the construction of program (16), we have(X*,Y*)∈TVRS−TO. By Theorem 1, DMU (X*, Y*) is efficient. In Fig. 1, this DMU corresponds to point C. Note that DMU (X*, Y*) dominates(X˜,Y˜)=(0,3,1)obtained in Section 3 by replacing the negative input in unit (10) by zero.

@&#CONCLUSIONS@&#
