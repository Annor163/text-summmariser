@&#MAIN-TITLE@&#
Elicitation criterions for restricted intersection of two incomplete soft sets

@&#HIGHLIGHTS@&#
A fast method for computing necessarily optimal solutions is developed.Four kinds of elicitation criterions for one time elicitation are explored.Idea of expected elicitation times is used in one elicitation criterion.A system is built to implement the proposed elicitation criterions.

@&#KEYPHRASES@&#
Elicitation,Incomplete soft set,Restricted intersection,Decision making,Choice value,

@&#ABSTRACT@&#
PurposeThis paper aims to develop and compare several elicitation criterions for decision making of incomplete soft sets which are generated by restricted intersection.Design/methodology/approachOne time elicitation process is divided into two steps. Using the greedy idea four criterions for elicitation of objects are built based on maximax, maximin, minimax regret and combination of expected choice values and elicitation times. Then these initial unknown values which produce incomplete values together with known information are in priority.FindingsFast methods for computing possibly and necessarily optimal solutions before or in the elicitation process are invented. As far as the sizes of soft sets used in the simulation experiments, it is found statistically that we should choose the criterion based on the combination of expected choice value and expected elicitation times in the first step of one time elicitation.Practical implicationsThe developed methods can be used for decision making of incomplete 0–1 information systems, which are generated by the conjunction of two experts’ incomplete 0–1 evaluation results. Whenever the available information is not enough for choosing a necessarily optimal solution, the elicitation algorithms can help elicitate as few unknown values as possible until an optimal result is found. An elicitation system is made to show that our elicitation methods can potentially be embedded in recommender or decision support systems.Originality/valueThe elicitation problems are proposed for decision making of operation-generated soft sets by extracting from some practical problems. The concept of expected elicitation times of objects is defined and used for developing one type of elicitation strategy.This section mainly focuses on the motivations of this paper’s subject. Firstly two cases in practice are given. Then we make an introduction to soft sets. At last by describing the problems in the two cases with soft set model, we propose the elicitation problems to be dealt with in this paper.Case 1: Site SelectionA company leader wants to make a site selection for his overseas branch company.U={s1,s2,s3,s4}is the set of 4 potential choices.E={c1,c2,c3,c4}is the set of parameters describing conditions such as air humidity, traffic facilities, price of land, labor price. There are two investigators Alice and Bob. They have made their incomplete evaluations which are shown in Table 1, where.•in each bracket:the first value refers to the opinion of Alice and the second value refers to that of Bob.1 means appropriate (positive) and 0 means a negative answer.0.5 means incomplete evaluation.the value outside each bracket is equal to the minimum of the two values inside the bracket. This means that a certain choice is appropriate with respect to a certain condition if and only if the two investigators are both satisfied with that. In the situation when Alice is satisfied with certain condition of one choice and Bob has not given his opinion on this, the integration of their evaluations should be incomplete. Obviously, once Alice says no for a certain condition of one choice, the final integration must be negative no matter what the opinion of Bob is.the value of forma+b∗+c∗∗in the rowsi(i=1,2,3,4) and the columnσcorresponds to the incomplete decision value ofsi:a equals to the number of value 1 outside brackets in the rowsi.Definition 1.1.b∗is defined as the incomplete decision value part marked with one asterisk ofsi, where b equals to the number of value 0.5 outside these brackets containing only one 0.5 in the rowsi. Whenb=0,b∗is omitted.Definition 1.2c∗∗is defined as the incomplete decision value part marked with two asterisks ofsi, where c equals to the number of value 0.5 outside these brackets containing two 0.5 in the rowsi. Whenc=0,c∗∗is omitted.For Table 1, the decision value ofs2is equal to 2. However, the real decision values of the other objects are unavailable due to the incomplete information. In this example all of these 4 choices are possible to one of the optimal solutions under usual additive model and no one of them must be an optimal solution of the real situation. If we want to make approximate reasoning, which one should be an approximate solution? If we want to make exact reasoning, which investigator should give evaluation on which unknown value?Case 2: Finding a best employeeA company wants to employ one person from a lot of graduates. There are two interviewers to evaluate these job hunters about the following aspects:c1, writing ability;c2, organizing ability;c3, communicating ability;c4, adaptability to changes. The evaluation results of the two interviewers can be given by two 0–1 valued tables, where the rows correspond to the job hunters, the columns correspond to the above four abilities. 1 means good, 0 means not good. The final evaluation matrix is got byminoperator similarly like Case 1. For certain reasons, these evaluation tables may be incomplete. Table 1 can also be an example of this case, wheres1tos4mean four graduates. In this situation the job interviewers have to make efforts to know some of these unknown values. So who should do elicitation work? And about which unknown value? We need an elicitation algorithm for guiding this work.Soft set theory was initiated as a new mathematical tool for dealing with uncertainty and vagueness by Molodtsov [27]. The theory of soft sets [24,26] has potential wide applications in fields like game theory, operations research, decision making and so on. Many researchers have studied soft set based decision making [4,11,14,15,19–23,25,30,32,34]. For instances, soft sets theory have been used to evaluate business competitive capacity [37] and make combined forecasting approach [38].Let us give an example of a soft set. Assume thatU={h1,h2,h3,h4}is a set of houses.A={e1,e2,e3,e4,e5}is a set of parameters characterizing “cheap”, “legal”, “subway will be build nearby”, “convenient for shopping”, “near school”, respectively. A soft set P over U is a function from A to the powerset of U. That is for eachei∈A, there exists a subset of U, which means that the houses in this subset is good with respect to this parameter. See Table 2for a representation of a soft set P over U. The subset corresponding withe1is equal to{h2,h3}. The subset corresponding withe2is equal to{h1,h3,h4}.The decision value function of this soft set, denoted byσ, compute for each objecthithe number of parameters whose corresponding subset of U containshi. From the point view of Table 2,σ(hi)is the number of value 1 in the row indexed byhi. According to soft set theory, the best house is the one which has the maximum value ofσ.However, soft set may be incomplete. Take the soft set in Table 2 for example, the businessman in real estate may cheat customer or refuse to show the required certificates. Thus people have to make some efforts to consult relative government departments. Similarly whether there will be subway built nearby, for some houses it is hard to say. We have to consult the municipal construction planning.By comparing Tables 1 and 2, it is easy to see that the tabular representations of evaluation matrixes of Alice and Bob in Case 1 can be regarded as incomplete soft sets. A complete evaluation from Alice or Bob can both be regarded as complete soft sets. Similarly for Case 2. What is more, the integration method can actually be modeled by the restricted intersection operation of two soft sets.As an abstraction of the questions in Case 1 nd Case 2 in the context of soft set theory, we assume such a situation in which the unknown information of incomplete soft sets can be accessed under certain conditions. For example, we can pay for that. We are to find at least one solution which must be an optimal solution of the real soft set no matter what the missing values are. So we need an elicitation algorithm. Simply speaking, we need to answer which unknown value to elicitate first. Such algorithm should be better in the sense that we need to elicitate as few unknown values as possible. Elicitation strategies for soft constraint problems with missing preferences have been studied by Gelain et al. [17] and Pini et al. [29]. The difference is that we are dealing with elicitation problems of incomplete 0–1 information systems [28] which are generated by another two ones.Why we choose soft set model? The reasons are as follows.•In real practice, Alice and Bob may evaluate different set of parameters. And the integration method may have some other models rather than the min operator (conjunction). In soft set theory these situations have already been studied in soft set theory [26,3]. Researchers always discuss operation models whenever they have proposed a new generalized soft set model [24]. Generally speaking, these usual binary operation models of soft sets are extended union, restricted union, extended intersection, restricted intersection, AND product operation and OR product operation [13]. Every kind of operation model can characterize one of people’s decision making schemes. For instances, decision making methods have been proposed by using the product operation model of soft sets [12,16,18].The study of incomplete soft sets have also been studied to some extent. It was initiated by Zou and Xiao [39], where for incomplete soft set, the decision value of an object with incomplete information is calculated by weight-average of all possible choice values of the object. Qin et al. [31] proposed a data filling approach for incomplete soft set in which missing data is filled in terms of the association degree between the parameters. This method is good when objects in U are related with each other.The remainder of this paper is organized as follows. Section 2 makes a formal introduction to basic concepts needed in this paper. Section 3 brings in several elicitation methods. Section 4 shows results of simulation experiments. In Section 5 a system which can implement our elicitation algorithms is built. Finally, we come to a conclusion of this article and outlook for potential future work.In this paper, U is an initial universe of objects, E is a set of parameters.∨and∧mean the max and min operators of numbers, respectively.|A|means the cardinality of set A and℘(U)means the powerset of U.Definition 2.127A soft set over U is a pairS=(F,A), where(i)A is a subset of E;F:A→℘(U),∀e∈A,F(e)means the subset of U approximated by parameter e.SupposeS=(F,A),T=(G,B)are two soft sets over U.(i)The restricted intersection of S and T, denoted byS⋒T, is defined as the soft set(H,C), whereC=A∩B, and∀e∈C,H(e)=F(e)∩G(e).The extended intersection of S and T, denoted byS⊓ET, is defined as the soft set(H,C), whereC=A∪B, and∀e∈C,LetP=(H,C)be a soft set over U. The functionσP:U→Ndefined byσP(u)=|{e∈A|u∈H(e)}|is called the choice value function of P.According to Molodtsov [27] and the choice value function we give the following definition.SupposeP=(H,C)is a soft set overU,u∈U. IfσP(u)=maxv∈UσP(v),then u is called an optimal solution of P. Denote the set of all optimal solutions of P byOS(P).SupposeP=(H,C)is a soft set over U. Thedecision making problem ofP means to find at least an optimal solution of P.By Qin et al. [31], Zou and Xiao [39], a soft setP=(H,C)over U is called an incomplete soft set, if∃u∈U,e∈A, whetheru∈H(e)is unknown. By Definition 2.6 we give an equivalent characterization for incomplete soft sets which is similar with Definition 2.1.An incomplete soft set over U is a pairP=(H,C), where(i)A is a subset of E;H:A→{0,12,1}U, where{0,12,1}Umeans the set of all functions from U to{0,12,1}.Definition 2.6 characterizes unknown information of incomplete soft sets in the following way:∀u∈U,e∈C,•whenH(e)(u)=1(hereH(e)(u)means the function value of u under functionH(e)), it means u is in the subset of U approximated by e;whenH(e)(u)=0, it means u is not in the subset of U approximated by e;whenH(e)(u)=12, it means that whether u belongs to the subset of U approximated by e is unknown.The operation models of complete soft sets can be easily adapted for incomplete soft sets with min and max operators.The evaluation matrixes of Alice and Bob in Case 1 can be seen as incomplete sets S (the fist values inside the brackets) and T (the fist values inside the brackets), then Table 1 (values outside the brackets) showsS⋒Tand its incomplete choice value function.In this paper, supposeS=(F,A),T=(G,B)are two incomplete soft sets over U. We assume that the unknown values of S and T are known by others. And we know nothing about the probabilities of those unknown values being 0 or 1.SupposeP=(H,C)is an incomplete soft set overU,P′=(H′,C)is a complete soft set over U. IfH′(e)(u)=H(e)(u)wheneverH(e)(u)≠12, then we callP′one completeness ofP=(H,C).SupposeP=(H,C)is an incomplete soft set overU,u∈U.(i)If there exists at least one completenessP′of P such thatσP′(u)=maxv∈UσP′(v), then we call u a possibly optimal solution of P. We denote the set of all possibly optimal solutions ofP=(H,C)asPOS(P).If for any completenessP′of P,σP′(u)=maxv∈UσP′(v), then we call u a necessarily optimal solution of P. We denote the set of all necessarily optimal solutions ofP=(H,C)asNOS(P).SupposeS=(F,A),T=(G,B)are two incomplete soft sets over U. Assume theNOS(S⋒T)is empty and we are permitted to have the real values of these unknown values of S and T under certain conditions. In order to elicitate as few unknown values as possible until at least a necessarily optimal solution ofS⋒Tis found, which unknown values of S and T should be elicitated in priority and in which sequence? Fig. 1gives the flow chart of elicitation process forP=S⋒T.SupposeS=(F,A),T=(G,B)are two incomplete soft sets over U.P=(H,C)=S⋒T. According to Fig. 1 we are about to solve the following questions in this section.(1)How to computeNOS(P)fast at the beginning or in the elicitation process of P?What kind of elicitation methods should we use?If for certain reason the elicitation process of P cannot be continued before we find a necessarily optimal solution, how can we make approximate reasoning (i.e., find an approximate solution)?Firstly, we point out that there exist two special completenesses ofP=(H,C)which we denote asP0,P1. The choice value functions ofP0andP1are denoted byσP0andσP1, respectively.•P0: redefining every unknown valueH(e)(u)as 0. We write the choice value of optimal solutions ofP0asσ(P0), i.e.,σ(P0)=maxu∈UσP0(u).P1: redefining every unknown valueH(e)(u)as 1. We write the choice value of optimal solutions ofP1asσ(P1), i.e.,σ(P1)=maxu∈UσP1(u).Secondly, we propose some important properties of possibly optimal solutions and necessarily optimal solutions. Given a soft setP=(H,C)over U, we divide U into two parts:U=UC∪UIC(here C means complete, IC means incomplete), whereUC={u∈U|∀e∈A,H(e)(u)≠0.5},UIC=U-UC. For instance, consider the soft set P in Table 2, we haveUC={h1,h4},UIC={h2,h3}.Property 3.1SupposeP=(H,C)is an incomplete soft set over U. Then(i)POS(P)={u∈U|∀v∈U,v≠u,σP1(u)⩾σP0(v)};NOS(P)={u∈U|∀v∈U,v≠u,σP0(u)⩾σP1(v)}.SupposeP=(H,C)is an incomplete soft set over U andNOS(P)≠∅.(i)NOS(P)⊆UICif and only ifσ(P0)<σ(P1).NOS(P)⊆UCif and only ifσ(P0)=σ(P1).|NOS(P)∩UIC|⩽1.SupposeP=(H,C)is an incomplete soft set over U.(i)Ifσ(P0)<σ(P1), then|NOS(P)|⩽1.If|NOS(P)|⩾2, thenNOS(P)⊆UC.IfNOS(P)≠∅,NOS(P)∩UC=∅, then|NOS(P)|=1.Property 3.1 makes a characterization ofPOS(P)andNOS(P)by choice value functionsσP0andσP1. Property 3.2 and Property 3.3 tell the relations amongNOS(P),UCandUIC.Based on the above properties, we can now give our algorithms for computing POS and NOS of incomplete soft sets.Algorithm 1(for computing POS) SupposeP=(H,C)is an incomplete soft set over U. ThenPOS(P)={u∈U|σP1(u)⩾σ(P0)}.(for computing NOS) SupposeP=(H,C)is an incomplete soft set over U.(i)Ifσ(P0)=σ(P1), thenNOS(P)={u∈UC|σP1(u)=σ(P1)}.Ifσ(P0)<σ(P1), thenwhen|{u∈UIC|σP1(u)=σ(P1)}|≠1,NOS(P)=∅.when|{u∈UIC|σP1(u)=σ(P1)}|=1,SupposeP=(H,C)is an incomplete soft set over U.|U|=n. IfUC,UIC,σP0andσP1are already known, then the time complexities for computingPOS(P)andNOS(P)byAlgorithms 1 and 2are bothO(n).SupposeS=(F,A),T=(G,B)are two incomplete soft sets overU={u1,u2,⋯,u6}.P=(H,C)=S⋒T. See tabular representations ofS,Tand P in Tables 3–5, respectively. In Table 5, the column indexed byσis the incomplete choice value function ofP=S⋒T, whereσ(u)=a+b∗+c∗∗can be explained in the same way like these in Table 1 of Case 1. The values in the brackets which appear in Tables 3 and 4 give an example of the real values of the unknown information.σP1(u1)=2,σP1(u2)=3,σP1(u3)=4,σP1(u4)=2,σP1(u5)=3,σP1(u6)=2.σ(P0)=1,∀i=1,2,⋯,6,σP1(ui)>σ(P0)=1. So by Algorithm 1,POS(P)=U.σ(P1)=4. Soσ(P0)<σ(P1).UIC=U,|{u∈UIC|σP1(u)=σ(P1)}|=|{u3}|=1. ButσP0(u3)=0,σP1(u1)=2. So by Algorithm 2,NOS(P)=∅.SupposeS=(F,A),T=(G,B)are two incomplete soft sets over U.P=(H,C)=S⋒T.∀u∈U,e∈A∩B, we sayH(e)(u)is generated byF(e)(u),G(e)(u). In this paper we elicitate only one unknown value of S or T at each time. We call it one time elicitation. As a preparation we give a notation. IfH(e)(u)=0.5, i.e., the real value ofH(e)(u)is unknown, defineOrig.12(H(e)(u))as the set of unknown values which generate (s)H(e)(u). For instance, supposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1.P=(H,C)=S⋒T. ThenOrig.12(H(e1)(u2))={F(e1)(u2),G(e1)(u2)}, hereF(e1)(u2)andG(e1)(u2)are just used to mean the unknown values rather than the value 0.5. If|Orig.12(H(e)(u))|=1, then we say the unknown valueH(e)(u)has only one original unknown value or is generated by one unknown value. If|Orig.12(H(e)(u))|=2, then we say the unknown valueH(e)(u)has two original unknown values.Recall that for object u ofP=S⋒Twe writeσ(u)=a+b∗+c∗∗to mean: in the tabular representation of P and the row indexed by u, the number of value 1 is equal to a, and there are b (c) unknown values which are generated by one (two) unknown values.The one time elicitation process contains two steps. For the first step we should decide the objectuwhose corresponding unknown values we should elicitate first. Then we decide the parametereand choose one element ofOrig.12(H(e)(u))to elicitate.For the first step, we try to use greedy algorithm, but we need to propose several quantitative indicators before that.Definition 3.1Quantitative indicatorsSupposeS=(F,A),T=(G,B)are two incomplete soft sets over U.P=(H,C)=S⋒T. With respect to soft set P, for eachu∈Usatisfyingσ(u)=a+b∗+c∗∗, define(i)the expected choice value (ECV for short) of u asECV(u)=a+0.5b+0.25c;the expected elicitation times (EET for short) of u asEET(u)=b+1.5c;the max regret for choosing u rather than the others as an approximate optimal solution of P asmaxregret(u)=⋁v≠u(σP1(v)-σP0(u)).It is assumed that we know nothing about the probabilities of these unknown values being 0 or 1, so it is supposed that each unknown value of S or T has equal probability 0.5 being 0 or 1. This dates back to Pierre Laplace and Jacob Bernoulli, who maintained that complete lack of knowledge about the likelihood of world states should be equivalent to all states having equal probability (quoted from [9], Page 46). Supposex1,x2∈{0,1}, thenx1minx2=1if and only ifx1=1,x2=1. With respect toP=S⋒T, because we use theminoperator in the operation⋒, the expected choice value of object u satisfyingσ(u)=a+b∗+c∗∗is equal toa+0.5b+0.25c.EET(u)is defined asb+1.5cbecause for those unknown values generated by 1 unknown value we need 1 time elicitation to get the real value. But things are different for those unknown values generated by 2 unknown values. They may need 2 times of elicitations to get the real value in the worst situation. So the expected value of u for elicitation times is equal tob+1.5c.The max regret degree for choosing u as an approximate optimal solution of P is defined according to Savage [33], and Boutilier et al. [6].σP1(v)-σP0(u)means the maximum regret choosing u rather than choosing v in the worst situation.Besides the indicators in Definition 3.1, actually we have already got two indicatorsσP0(written also as MIN, corresponds to the pessimistic situation),σP1(written also as MAX, corresponds to the optimistic situation).Remark 3.1For the incomplete soft setP=S⋒T, among the five quantitative indicators,MIN,MAXand max regret do not care about the initial unknown values from S or T at all. That is to say every unknown value of P are treated equally. As we have explained above, the expected choice values and expected elicitation times of objects are closely related with the initial unknown values from S or T.SupposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1.∀u∈U,ECV(u),EEV(u),MIN(u),MAX(u)andmaxregret(u)are shown in Table 6.SupposeS=(F,A),T=(G,B)are two incomplete soft sets over U.P=(H,C)=S⋒T.NOS(P)=∅. DenoteECV={v∈U|ECV(v)=⋁w∈UECV(w)}. For P, define(i)maximin criterion: take in random one objectuinUICsatisfyingu=argmaxu∈UσP0(u);maximax criterion: take in random one objectuinUICsatisfyingu=argmaxu∈UσP1(u);minimax regret criterion: take in random one objectuinUICsatisfyingu=argminu∈Umaxregret(u);ECV&EETcriterion: take in random one objectuinUICsatisfyingu=argminu∈ECVEET(u).The idea of maximin was proposed by Ward [36]. Wald’s maximin model is a non-probabilistic decision-making method according to which decisions are ranked on the basis of their worst-case outcomes. That is, the best (optimal) decision is one whose worst outcome is at least as good as the worst outcome of any other decisions (quoted from Wikipedia). Maximax criterion is the optimistic counterpart to maximin.The minimax regret criterion [2,5] minimizes the maximum regret, i.e., minimizes the worst-case loss with respect to all possible realizations of the choice value function. Savage [33] described Minimax regret criterion first in the situation of uncertainty over world states. Recently it has been proposed for accounting for a DSS’s uncertainty regarding DM’s utility [35,6–8]).TheECV&EETcriterion chooses in random one object with minimum expected elicitation times from these objects with maximum expected choice value.Example 3.3SupposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1.P=(H,C)=S⋒T. By Table 6 the objects satisfying these criterions defined in Definition 3.2 are shown in Table 7.Now once we have decided the objectuafter the first step, it is time to determine the parametereand one element ofOrig.12(H(e)(u))to elicitate. Our idea is very simple. The parameteresatisfying|Orig.12(H(e)(u))|=1is in priority. If such parameters exist, choose in random one of them and the element ofOrig.12(H(e)(u))is just what we should elicitate first. Otherwise, choose in random one parameter and elicitate one ofOrig.12(H(e)(u))in random.Denote WHICH={ECV & EET, maximin, maximax, minimax regret}. By combining what we have proposed about the two steps of one time elicitation. In Table 8, we give our Algorithm 3 for one time elicitation ofP=S⋒T=(H,C).Example 3.4SupposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1.P=(H,C)=S⋒T. By Algorithm 3 for One Time Elicitation in Table 8 the unknown values which should be elicitated in priority are shown in Table 9.SupposeS=(F,A),T=(G,B)are two incomplete soft sets over U.P=(H,C)=S⋒T.u∈Uis called a strong possibly optimal solution of P if∀v≠u,σP0(v)<σP1(u). Denote the set of all strong possibly optimal solutions of P asSPOS(P).(i)For the incomplete soft set P in Table 5, by Table 6 it is easy to see thatSPOS(P)=U.SupposeW=(J,D)is an incomplete soft set overU={u1,u2,u3},σ(u1)=3+2∗,σ(u2)=4,σ(u3)=3+1∗. ThenPOS(W)={u1,u2,u3},SPOS(W)={u1,u2}.Supposeu∈POS(P),v∈POS(P)-SPOS(P), then by Definition 3.3, if v is an optimal solution of the real soft set P, then u must also be an optimal solution. That is to say u is more likely to be an optimal solution than v. So we never need to elicitate the unknown values corresponding with v. Thus in the elicitation process of incomplete soft setP=(H,C), we actually need only to elicitate the unknown values related with objects inSPOS(P). DenoteE(S⋒T)=∑u∈SPOS(P)∑e∈C,H(e,u)=12Orig.12(H(e,u)),thenE(S⋒T)means the total number of unknown values that we need to elicitate at the right beginning of elicitation process. For instance, supposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1,P=(H,C)=S⋒T, thenE(S⋒T)=14.Our method can simply be adapted for the elicitation problem of extended intersection of incomplete soft sets.SupposeS=(F,A),T=(G,B)are two incomplete soft sets overU,P=(H,C)=S⋒T. With the above discussion and the direction of Fig. 1, we can make the elicitation of P until we find a necessarily optimal solution.Example 3.6SupposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1.P=(H,C)=S⋒T. Then Table 10shows the elicitation sequence under different criterions for elicitation of objects. In Table 1014=E(S⋒T)and for[x,y,z]: ifx=1, then[x,y,z]means to elicitate the unknown valueF(ez)(uy); ifx=2, then[x,y,z]means to elicitate the unknown valueG(ez)(uy). For instances,[1,1,2]means to elicitate the unknown valueF(e2)(u1)and[2,3,1]means to elicitate the unknown valueG(e1)(u3).How to computeNOS(P)fast in the elicitation process ofP=S⋒TIn the elicitation process of P, after each time we have elicitated an unknown value, we should refresh the incomplete soft set P. However, we need not to compute choice value function of P repeatedly. In this subsection we give an efficient algorithm for computingNOS(P)in the process of elicitation. Since we are dealing with the operation of restricted intersection, we can assumeA=B.Algorithm 4for computingNOS(P)in the elicitation process ofP=S⋒TStep 1 ComputeNOS(P), ifNOS(P)=∅, use elicitation algorithm, assume the elicited value isS(ej)(ui), computeF(ej)(ui)=S(ej)(ui)∧T(ej)(ui). WhenF(ej)(ui)=0.5,NOS(P)=∅; whenF(ej)(ui)=1, turn to Step 2; whenF(ej)(ui)=0, turn to Step 3.Step 2 Check whetheruiis a necessarily optimal solution. If not, refreshPOS(P),σP0,UIC,σ(P0),{u∈UIC|σP1(u)=σ(P1)}.Step 3 RefreshσP1andσ(P1),(i) ifσ(P1)remains the same,σ(P0)<σ(P1),|{u∈UIC|σP1(u)=σ(P1)}|=1andPOS(P)={ui,v}, then check whether v is a necessarily optimal solution. WhenNOS(P)=∅, refreshUIC,{u∈UIC|σP1(u)=σ(P1)},POS(P);(ii) otherwise,NOS(P)=∅, refreshUIC,{u∈UIC|σP1(u)=σ(P1)},POS(P).Approximate decision making methodsIf for certain reason the elicitation process of P cannot be continued before we find a necessarily optimal solution. Then we need to choose one object as an approximate solution. According to the above quantitative indicators, we give the following approximate decision making methods.SupposeS=(F,A),T=(G,B)are two incomplete soft sets over U.P=(H,C)=S⋒T. DefineAOSECV(P)=u∈U|u=argmaxv∈UECV(v),AOSmaximin(P)=u∈U|u=argmaxv∈UσP0(v),AOSmaximax(P)=u∈U|u=argmaxv∈UσP1(v),AOSminimaxr(P)=u∈U|u=argminv∈Umaxregret(v),where for example,AOSminimaxr(P)means the set of approximate solutions according to the minimax regret function. Similarly for the others.In this section we list our experimental results for our elicitation algorithms.Our experiments were implemented using a lenovo PC with Win7 64bite Home Basic operating system, intelCoreTMi5CPU and 4GB RAM. We generated the incomplete soft sets as follows.Method for generating an incomplete soft setS=(F,A)overUStep 1We used Matlab (R2013a) to generate a complete soft setSrealby a randomly generated 0–1 matrixes [11], where the row indexes and collum indexes corresponded to objects of U and parameters of A, respectively.Step 2Based onSreal, we generated a new matrix by changing some entries of the initial 0–1 matrix as12in an arbitrary way. Then the incomplete soft set S can be simulated by the new matrix like Table 3.Given two incomplete soft setsS=(F,A)andT=(G,B)over U generated in the above way. Let the initial 0–1 matrixes corresponding with S and T areSrealandTreal, respectively. DenotePreal=Sreal⋒Treal,P=S⋒T.OS(Preal)means the set of optimal solutions ofPrealby Definition 2.4.Define the incompleteness degreeICD(S)of incomplete soft setS=(F,A)over U as the fraction of unknown values of S over|U|×|A|. Similarly forICD(T).Example 4.1SupposeS=(F,A),T=(G,B)are the two incomplete soft sets overU={u1,u2,⋯,u6}in Example 3.1.P=(H,C)=S⋒T. ThenICD(S)=8/15,ICD(T)=7/15,ICD(P)=0.5.Definition 4.1Accuracies of approximate decision making methodsSupposeS=(F,A),T=(G,B)andP=(H,C)=S⋒Tare three incomplete soft sets over U. Defineα1=|AOSECV(P)∩OS(Preal)||AOSECV(P)|,α2=|AOSmaximin(P)∩OS(Preal)||AOSmaximin(P)|,α3=|AOSmaximax(P)∩OS(Preal)||AOSmaximax(P)|,α4=|AOSminimaxr(P)∩OS(Preal)||AOSminimaxr(P)|.Statistically,α1means the probability of an element inAOSECV(P)being one truly optimal solution ofPreal. Similarly for the other approximate methods.LetA=B,|A|=10,|U|=100.ICD(S)=ICD(T),ICD(S)∈{0.1,0.2,…,0.5}. For each value of incompleteness degree, we simulatedS,Tand computedαi(i=1,2)for 100 times. See Fig. 2for the averageαi(i=1,2).It can be inferred from Fig. 2 that.•when the incompleteness degreeICD(S)gets larger, all the approximate decision making criterions tend to become less efficient;with respect to the same incomplete soft sets, the ECV criterion was better than the other criterions statistically in the average sense.In this subsection we list our experimental results about the efficiencies of these elicitation criterions. Denote the total number of elicitated unknown values asETminimaxrwhen using the minimax regret criterion in a whole elicitation process ofP=S⋒T. Similarly for the symbolsETECV&EET,ETmaximin,ETmaximax. Defineβ1=ETECVE(S⋒T),β2=ETmaximinE(S⋒T),β3=ETmaximaxE(S⋒T),β4=ETminimaxrE(S⋒T).LetA=B,|A|=15,|U|=50.ICD(S)=ICD(T),ICD(S)∈{0.1,0.2,⋯,0.5}. For each value of incompleteness degree, we simulatedS,Tand computedETmaximin,ETmaximax,ETminimaxrfor 100 times. See Fig. 3for the averageβi(i=1,2,3,4). For Fig. 4,|A|=10,|U|=100. For Fig. 5,|A|=5,|U|=200.As far as to these certain sizes of soft sets (i.e.,|U|and|A|been used in the experiments), theECV&EETelicitation strategy was better than the other elicitation strategies statistically in the average sense.In this section we will introduce the potential applications of our theory. We have also constructed a simple system to show that our methods can simply be implemented.In general, our theory developed in this article can be applied in a kind of problems which can be described by a multi-tuple(U,E,expert1,expert2,{E1,E2},Matrix1,Matrix2), where.•U is a set of objects.E is a set of 0–1 valued attributes.expert1 and expert2 are two experts which can evaluate certain attributes in E.E1andE2are two subsets of E, expert1 and expert2 can evaluate attributes in setsE1andE2, respectively.Matrix1 and Matrix2 are two 0–0.5–1 valued matrixes, which mean the incomplete evaluation matrixes by expert1 and expert2, respectively. 0.5 means incomplete or unknown.Matrix1 and Matrix2 can be regarded as two incomplete soft sets over U.E1andE2are the corresponding sets of parameters. So these two incomplete evaluation matrixes can be combined together by different kinds of operations defined in soft set theory. As to the question of which operation to choose, it is up to the real problem being dealt with.Once the final evaluation matrix is generated, we use the additive decision making criterion by Definition 2.5. However, the final evaluation matrix may be incomplete. We can compute the set of possibly optimal solutions and the set of necessarily optimal solutions in an efficient way. If the set of necessarily optimal solutions is empty and further elicitation is permitted (which means we can ask the experts to evaluate the incomplete values again on certain conditions), our elicitation algorithm can help us elicit as less unknown values as possible.Example 5.1Alice and Bob are the hostess and host of a family. They have a robot. The robot need to do things for the family members. So the robot must be able to make the right decision. When the robot is making a decision, the robot need to consider the favorites of the host and the hostess.The family need a mobile phone. They want their robot to buy one for them. When the robot is in the mobile phone market, the robot has a list of favorite types to choose from. Each types of mobile phone should be valuated on the following aspects: running speed, price, material, appearance color, memory, camera function. The robot may have some knowledge or experiences about the host and the hostess. For example, the robot may knows that his host likes the color of blue and his hostess likes the color of red. That is to say, the robot evaluates according to the way of this owners, respectively. Then the robot integrates his evaluation matrixes in the way of restricted intersection. For certain reasons, the robot may not know some information for certain aspects. So robot my need to ask some information from the host or hostess. But the host and the hostess may not want to be bothered so much. So in this time the robot may need an efficient elicitation algorithm to decide whom to ask and which information to ask. See the sketch map in Fig. 6.Our theory can be implemented over software systems so that the decision making criterions in this article can be applied conveniently in real practice. We have built a system constructed with a function written in matlab language. After running this function, we get a system whose user interface is shown in Fig. 7:1.We can see that it is generated in Matlab environment.This system is named an elicitation system for operation-generated incomplete soft sets.They are two buttons where we can input the unknown evaluation matrixes by expert1 and expert2.The string “result” will become “matrix1” or “matrix2” depending on whose unknown value to elicit. If there is no need to elicit, the string result will remain the same.A place where we can see the total number of elicitation times done since the beginning of eliciting process on the left of symbol “/ ”. The number appearing on the right of the symbol “/ ” equals toE(S⋒T)(here S and T mean the incomplete soft sets represented by matrix1 and matrix2).A place where we show the matrix and the unknown value our elicitation algorithm suggests to elicit.These two buttons correspond to the extended and restricted intersection operations. To be more explicit, for instance, extended union means the two initial matrixes are combined by extended union operation.We can start solving a new problem after pressing this button.For example, We input two incomplete matrixes shown and chose the extended intersection operation. Then the user interface is shown by Fig. 8:Our elicitation algorithm suggested to elicit the unknown value (bold, italic and enlarged) in matrix1.The total number of unknown values in the initial matrixes is equal to 11.The part of parameters (Written by Pset for short) expert2 can evaluate (i.e., that is whatE2means in this section).After we clicked the number 0.5 shown by “9” in Fig. 8, the user interface changed, see a local part of it in Fig. 9:A new window where we can input the elicited value.After we have input the elicited value (here the elicited values were given randomly just for the show of our system), we pressed the same operation button. We repeated this process until there existed at least one necessarily optimal solution, see Fig. 10:We can see the total number of elicitation times on the left of the symbol “/ ” when there existed at least one necessarily optimal solution.It told us that the elicitation process was terminated and the set of all necessarily optimal solutions were listed.0–1 Information systems are used to describe objects with respect to different attributes or parameters. They are simple but actually very popular and useful. Sometimes decision makers (including people, intelligent robots, e-commercial recommending systems or something else) need to combine different 0–1 information systems from different resources of data. A decision should be made by integrating or combining these different information systems. At the same time, information systems may be incomplete and some information may be costly to find out what on health they are. Our decision making criterions both in approximate and elicitation problems can help solving this kind of things. So it will be interesting to apply our theory to electronic commerce recommendation systems [1,10] and intelligent robot systems.The main innovative points of this paper consist of the following aspects:(1)When the choice value functionsσS0andσS1of an incomplete soft set S over U are already known, we can figure out the sets of possibly optimal solutions and necessarily optimal solutions in linear time with respect to the cardinality of U. What is more, in the elicitation process we have developed an algorithm for computingNOS(S)by avoiding repeated computation.By using the greedy idea we explore four criterions for elicitation of objects based on maximax, maximin, minimax regret and the combination of expected choice values and elicitation times. As far as the certain sizes of soft sets used in the simulation experiments, it is found statistically that in the first step of one time elicitation the criterion based on the combination of expected choice value and expected elicitation times is better.We have built a system which can implement our decision making algorithms. This can enable the applications of soft sets theory in real practice.For further study, here are some potential work:Cost-based elicitation model: in this paper we do not discuss about the cost of money or time for elicitation process. In fact it is practical that different unknown values may cost different money and time to elicitate. That is one of directions in which our work can be extended.Top-N-decision making method: in practice, we may need more than 1 solution. We may want to find the top N objects with respect to the choice value functions. In this situation obviously we will have to elicitate less unknown values. Because once|POS(P)|becomes smaller than N, we can stop the elicitation process for the elements ofPOS(P). We will deal with its details in future work.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
