@&#MAIN-TITLE@&#
Particle Swarm Optimization based support vector machine for damage level prediction of non-reshaped berm breakwater

@&#HIGHLIGHTS@&#
Particle Swarm Optimization (PSO) is used to optimize the support vector machine (SVM).Models are trained on the data set obtained from experimental data.PSO–SVM with polynomial kernel function performs better than other kernel functions.Different soft computing models results are compared.PSO–SVM is computationally efficient as compared to ANFIS.

@&#KEYPHRASES@&#
Non-reshaped,Berm breakwater,Damage level,SVM,PSO–SVM,

@&#ABSTRACT@&#
The damage analysis of coastal structure is very much essential for better and safe design of the structure. In the past, several researchers have carried out physical model studies on non-reshaped berm breakwaters, but failed to give a simple mathematical model to predict damage level for non-reshaped berm breakwaters by considering all the boundary conditions. This is due to the complexity and non-linearity associated with design parameters and damage level determination of non-reshaped berm breakwater. Soft computing tools like Artificial Neural Network, Fuzzy Logic, Support Vector Machine (SVM), etc, are successfully used to solve complex problems. In the present study, SVM and hybrid of Particle Swarm Optimization (PSO) with SVM (PSO–SVM) are developed to predict damage level of non-reshaped berm breakwaters. Optimal kernel parameters of PSO–SVM are determined by PSO algorithm. Both the models are trained on the data set obtained from experiments carried out in Marine Structures Laboratory, Department of Applied Mechanics and Hydraulics, National Institute of Technology Karnataka, Surathkal, India. Results of both models are compared in terms of statistical measures, such as correlation coefficient, root mean square error and scatter index. The PSO–SVM model with polynomial kernel function outperformed other SVM models.

@&#INTRODUCTION@&#
The breakwaters are constructed parallel to the shore in order to protect the coast and harbors against wave action. They are also used for other purposes like dissipating wave energy and providing loading and unloading facilities for cargo and passengers. A rubble mound structure with the presence of horizontal berm at or above still water level (SWL) on the sea side is called as berm breakwater. They are classified into statically and dynamically stable structures [1] depending on the behavior under design conditions. Statically stable structures are non-reshaped structures, where no or minor damage is allowed to the structure under design conditions. Whereas, dynamically stablestructures are reshaped into a stable profile, in which the individual stones may move up and down the slope. Many researchers have suggested adopting non-reshaped berm breakwater in most of the cases, since, movement of armor stones will lead to abrasion between the units and sometimes may lead to failure of armor layer [2–4]. The damage of a non-reshaped berm breakwater is measured in terms of ‘damage level’ expressed by Van der Meer [5]. ‘Damage level’ is defined as the displacement of armor units and is calculated using following formula [2]:(1)S=ADn502where, A is the area of erosion and Dn50=(M50/ρa)1/3 is the nominal diameter of the stones.M50, median stone mass; ρa, density of stone.In the past, several researchers [6–13] have experimented on berm breakwaters which are time consuming and expensive in terms of cost. Further, there is no simple mathematical model to predict the damage level considering all the boundary conditions due to the complex nature of the problem which includes wave structure interaction, angle of wave attack, movement of the armor, etc.Soft computing technique is an alternate solution to physical model study and mathematical modeling, which can be adopted to minimize the cost, time and complexity of the problem. Soft computing tools such as Artificial Neural Network (ANN), Support Vector Machine (SVM), Adaptive Neuro Fuzzy Inference System (ANFIS), etc, are capable of solving these problems and are successfully used in solving different coastal problems. Neural network techniques have been adopted to predict the stability, damage level, damage ratio and design of rubble mound breakwater [14–16]. Support Vector Machines (SVM) has been used for the prediction of significant wave height [17] and also to predict the stability number of armor blocks of breakwaters [18]. Some of the hybrid soft computing models were implemented for the preliminary design of rubble mound breakwater which performed better than the traditional design using Van der Meer equations [5]. Patil et al. [19,20] have developed ANFIS and Genetic algorithm based support vector machine (GA-SVM) models for predicting wave transmission coefficient of horizontally interlaced multilayer moored floating pipe breakwater.Further, the hybrid PSO–SVM was applied to diagnosis of arrhythmia cordis [21], to forecast dissolved gases content in power transformer oil [22], to radio frequency identification based positioning system [23] and recognizes targets obscured by foliage [24]. Their results showed that the PSO–SVM method gave higher accuracy with actual data compared with other soft computing models. In this concern, it is observed that there are hardly any applications of hybrid SVM models to study the stability of berm breakwaters. Hence, in the present paper, performance of PSO–SVM technique in predicting damage level of non-reshaped berm breakwaters is investigated. PSO is used for optimization of SVM and kernel parameters. Performance of PSO–SVM models are compared with that of SVM models.The experimental work on non-reshaped berm breakwater was carried out by Rao et al. [12,13] in Marine Structures Laboratory, Department of Applied Mechanics and Hydraulics, National Institute of Technology Karnataka (NITK), Surathkal, India. The wave flume is 50m long, 0.71m wide, 1.1m deep, and has 42m long smooth concrete bed. Fig. 1shows a sketch of the wave flume.Four set of experiments were carried out for 3000 waves for deep water wave length (L0). In the first set of experiment, stability for different wave periods and height on conventional breakwater model with trapezoidal cross section with armor stone weight W50=74g was tested. In the second set of experiments, statically stable non-reshaped berm breakwater model was tested with the armor stones weight W50=52g which is about 30% less than 74g. They studied the influence of berm width on the stability of the breakwater, run-up and rundown. In the third set of experiments armor stones weight W50=58.6g was tested which is about 20% less than 74g. The influence of tidal effect and stability were studied by changing the depth of water in front of the breakwater model. In the fourth set of experiments the influence of location of the berm and stability were studied by keeping the armor stones weight W50=52g, the weight used in conventional breakwater. Damage level (S) was computed using Eq. (1). The area of erosion in Eq. (1) was measured using profiler system which consisted of nine brass rod placed equidistance along the width of the flume. The profiler was moved along the length of breakwater section to know the initial and final profile. Range of experimental variables is shown in Table 1.Many problems involving fluid motions are quite complex in nature. In the present case the complex flow phenomenon responsible for energy dissipation cannot be easily represented by mathematical equations and one has to rely on experimental investigations. The results of such investigations are more useful when expressed in the form of dimensionless relations. To arrive at such dimensionless relations of different variables, dimensional analysis was carried out by Rao et al. [12,13]. After conducting the dimensional analysis using Buckingham's-Π theorem the dimensionless parameters, such as wave steepness (H/L0), surf similarity (ζ), relative berm position by water depth (hB/d), armor stone weight (W50/W50max), relative berm width (B/L0) and relative berm location (hB/L0) are obtained.For the present damage analysis, experimental data are divided into two sets, one for training about 80% data set and another remaining data set for testing. Input parameters (Fig. 2) that influence the damage level (S) of non-reshaped berm breakwater are H/L0, ζ, hB/d, W50/W50max, B/L0 and hB/L0 which are used to train SVM and PSO–SVM models.The foundation of SVM has been developed by Vapnik [25] and is gaining popularity due to many attractive features and promising empirical performance. The formulation represents the Structural Risk Minimization (SRM) principle [26] which has been shown to be superior to traditional Empirical Risk Minimization (ERM) principle as adopted by conventional neural networks. SRM principle minimizes an upper bound on the expected risk, as opposed to ERM principle that minimizes the error on the training data. This difference outfits SVM with a greater ability to generalize, which is the goal in statistical learning. SVMs were developed to solve the classification problem, but recently they have been extended to the domain of regression problems [27].Consider a training data set g={(x1, y1), (x2, y2), …(xp, yp)}, such thatxi∈vNis a vector of input variables andxi∈vis the corresponding scalar output (target) value. Here, the modeling objective is to find a regression function, y=f(x), such that it accurately predicts the outputs {y} corresponding to a new set of input–output examples, {(x, y)}, which are drawn from the same underlying joint probability distribution as the training set. To fulfill the stated goal, support vector regression (SVR) considers the following linear estimation function Eq. (2):(2)f(x)=(w⋅x)+bwhere, w denotes the weight vector; b refers to a constant known as ‘bias’; f(x) denotes a function termed feature, and(w⋅x)represents the dot product in the feature space, l, such thatϕ:x→l,w∈l.The basic concept of support vector regression is to map nonlinearly the original data x into a higher dimensional feature space and solve a linear regression problem in this feature space.The regression problem is equivalent to minimize the following regularized risk function:(3)R(f)=1n∑inL(f(xi)−yi)+12||w||2where,(4)L(f(x)−y)=||f(x)−y||−ε,for|f(x)−y|x≥ε0,otherwiseEq. (4) is also called ɛ-insensitive loss function. This function defines a ɛ-tube. If the predicted value is within the ɛ-tube, the loss is zero or else the loss is equal to the magnitude of the difference between the radius ɛ of the tube and the predicted value. The radius of the tube located around the regression function (Fig. 3) is represented by a precision parameter ɛ and the ‘ɛ-intensive zone’ is the region enclosed by the tube.The SVM algorithm attempts to position the tube around the data as shown in Fig. 3. By substituting the e-insensitive loss function into Eq. (3), the optimization object becomes:(5)Minimize12||w||2C+∑in(ξi+ξi∗)With the constraints,(6)Subjectedyi−(w⋅x)−b≤ε+ξi(w⋅x)+b−yi≤ε+ξi∗ξi,ξi∗≥0where, the constant C>0 stands for the penalty degree of the sample with error exceeding epsilon. The distance from actual values to the corresponding boundary values of ɛ-tube is represented by the two positive slack variables.The SVM fits f(x) to the data in a manner such that:(i)To minimize the slack variables i.e.,ξi,ξi∗the training error is minimized and,To increase the flatness of f(x) or to penalize over complexity of the fitting function||w||2is minimized.A dual problem can then be derived by using optimization method to maximize the function,(7)Maximize:−12∑i,j=1n(αj−αi∗)(αi−αj∗)(xi,xj)−ε∑i=1n(αi+αi∗)+∑i=1nyi(αi−αi∗)(8)Subject to∑i=1n(αi+αi∗)=0and0≤αi,αi∗≤Cwhere,αi,αi*are Lagrange multipliers. Owing to the specific character of the above-described quadratic programming problem, support vectors (SVs) are the non-zero coefficients,(αi−αi*)corresponding to input vectors xi. The SVs can be thought of as the most informative data points that compress the information content of the training set. The coefficients α and α* have an intuitive interpretation as forces pushing and pulling the regression estimate f(xi) toward the measurements yi.The SVM for function fitting obtained by using abovementioned maximization function is then given by,(9)f(x)=∑i−1n(αi−αi∗)(xi⋅x)+bAs for the nonlinear cases, the solution can be found by mapping the original problems to the linear ones in a characteristic space of high dimension, in which dot product manipulation can be substituted by a kernel function, i.e., K(xi, yi)=ϕ(xi)ϕ(yi). In this work, the SVM is used with different kernel function. Substituting K(xi, yi)=ϕ(xi)ϕ(yi) in Eq. (7) allows us to reformulate the SVM algorithm in a nonlinear paradigm. Finally, we have,(10)f(x)=∑i−1n(αi−αi∗)K(xi⋅x)+bIn the present work, kernel functions, such as polynomial, radial basis function (rbf), exponential radial basis function (erbf), spline and b-spline are used for non-linear SVM modeling as shown in Table 2. Good setting of kernel parameters (d, γ) and SVM parameters (C, ɛ) of SVM model are important for most accurate predictions, where, d represents the degree of polynomial and b-spline kernel functions and γ is the width of rbf and erbf kernel functions. Parameter C determines the trade-off between the model complexity (flatness) and the degree to which deviations are larger than ɛ tube [26,28]. Parameter ɛ controls the width of the ɛ-insensitive zone, which is used to fit the training data. The number of support vectors (nsv) used to construct regression function depends on ɛ, the big ɛ, the fewer support vectors are selected and hence results in data compression [29]. The performance of SVM regression depends on the good setting of SVM and kernel parameters. In the present study, quadratic loss function is used. The main idea of using this loss function is to ignore the errors, which are situated within the certain distance of the true value.PSO is a population-based stochastic optimization technique motivated by social behavior, such as bird flocking and fish schooling. PSO was first proposed by Kennedy and Eberhart [30]. In PSO, each single candidate solution is an ‘individual bird of the flock’, that is a particle in the search space. Each particle makes use of its individual memory and knowledge gained by the swarm as a whole to find the best solution. All the particles have fitness values, which are evaluated by fitness function to be optimized and have velocities which direct the movement of the particles. The best position of each particle is chosen from its own and neighboring particle experience in the process of movement of the particles. The particles move through the problem space by following a current of optimum particles. The initial swarm is generally created in such a way that the population of the particles is distributed randomly over the search space. For every iteration, each particle is updated by following two ‘best’ values called pbest and gbest. Each particle keeps track of its coordinates in the problem space, which are associated with the best solution (fitness) achieved so far. This fitness value is stored, and called pbest. When a particle takes the whole population as its topological neighbor, the best value is a global ‘best’ value and is called gbest.The PSO algorithm is defined by the direction and movement of each particle through the search space, by updating its velocity:(11)Velj+1i=WjVelji+C1rand1(pbestj−posji)+C2rand2(gbestj−posji)and position:(12)posj+1i=posj+1i+Velj+1iwhere,posjiis the current position of the particle i with subscript j representing iteration count,Veljiis the search velocity of the ith particle, C1 and C2 are the cognitive and social scaling parameters, rand1 and rand2 are the random numbers with interval [0,1] applied to the ith particle, Wjis the particle inertia, pbestjis the best position found by the ith particle (personal best) and gbestjis the global best position found among all the particles in the swarm. The number of companions will affect the convergence speed of the algorithm. The cognitive component represents learning achieved from an individual particle's search come across. In contrast, the social scaling parameter represents the cooperation among companions learning from search experience. The particle inertia controls the balance of global and local search abilities, where a larger Wjfacilitates a global search. Particle i flutters toward a new position using Eqs. (11) and (12), which allow all particles in the swarm to update their pbestjand gbestj.The algorithm steps are as follows:Step1: Initialize PSO parameters particle positions and velocities;Step2: Evaluate the objective function values using initial particle positions and velocities;Step3: Update the optimum particle positions and global optimum particle position using fitness function;Step4: Update the position of each particle using its previous position and update the velocity vector using Eqs. (11) and (12);Step5: Repeat steps 2–4 until the stopping criteria are met.In the present study, MATLAB support vector machine toolbox [31] is interfaced with Particle Swarm Optimization to optimize the SVMs and kernel parameters simultaneously for better generalization of the proposed PSO–SVM model. PSO–SVM models were developed by using different kernel functions as shown in Table 2. In order to study the performance of each kernel in predicting damage level of non-reshaped berm breakwater, PSO–SVM models are trained by applying these kernel functions. For training, experimental data set is divided into two groups one for training and other for testing. Fig. 4illustrates the proposed PSO–SVM model. In the first stage training input, training target, kernel function, and kernel and SVM parameters are fed to the system. PSO generates initial particle position and velocities that would be used to find optimum factors of kernel functions and SVMs. In the second stage, the system performs typical SVM process using initial values and evaluates the objective function using initial particle position. Here, the fitness value for each particle position and velocities are called as pbest. When a particle takes the whole population as its topological neighbor, the best value is a global ‘best’ value and is called gbest. In the present study, the main goal is to find the best parameters that produce the most accurate prediction. If the calculated fitness value satisfies the terminal condition in PSO, then the optimal parameters are selected, otherwise, the position and velocities are updated using Eqs. (11) and (12). After updating new position and velocities, the training process is performed again. From this point, stage two and stage three are iterated again and again until the stopping conditions are satisfied. Once the stopping condition is satisfied, the population search finishes the pbest and gbest, which shows the best performance in the last population selected as the final result. Finally these optimized SVMs and kernel parameters obtained by PSO are tested with test data to check the performance of model.

@&#CONCLUSIONS@&#
An application of support vector machine and hybrid Particle Swarm Optimization tuned support vector machine for prediction of damage level for non-reshaped berm breakwater is presented in this paper. The proposed model is to optimize SVMs and kernel parameters simultaneously and to predict damage level. The performance of PSO–SVM models are compared to SVM, ANN and ANFIS models. The performance of PSO–SVM mainly depends on selecting and good setting of kernel function and SVM parameters. It is also discovered that the parameter selection has significant influence on the performance of PSO–SVM. The result obtained shows that the PSO–SVM model with polynomial kernel function outperforms SVM models.The hybrid models in both cases (ANFIS and PSO–SVM) showed better results compared to individual (ANN and SVM) models. When the hybrid models are compared, the ANFIS model gives higher CC and lower RMSE. But considering computational time the ANFIS model has taken more time than the PSO–SVM model. Hence the PSO–SVM model is computationally efficient as compared to the ANFIS model.Comparing all the kernel functions, polynomial kernel function proves to be significant in terms of statistical measures for both SVM and PSO–SVM models. Hence, PSO–SVM can be used as an alternative tool for prediction of damage level of non-reshaped berm breakwater.