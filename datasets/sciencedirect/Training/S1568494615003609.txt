@&#MAIN-TITLE@&#
Parallelized neural network system for solving Euclidean traveling salesman problem

@&#HIGHLIGHTS@&#
We introduce a parallel-friendly system based on a self-organizing map to solve largescale traveling salesman problems.We present a divide and conquer method to split large problems to a set of small problems and collect the results in an efficient way.We experiment new system over TSPLIB sample problems with different levels of parallelization.

@&#KEYPHRASES@&#
Euclidean traveling salesman problem,Artificial neural network,Parallelization,Self-organized map,TSPLIB,

@&#ABSTRACT@&#
We investigate a parallelized divide-and-conquer approach based on a self-organizing map (SOM) in order to solve the Euclidean traveling salesman problem (TSP). Our approach consists of dividing cities into municipalities, evolving the most appropriate solution from each municipality so as to find the best overall solution and, finally, joining neighborhood municipalities by using a blend operator to identify the final solution. We evaluate performance of parallelized approach over standard TSP test problems (TSPLIB) to show that our approach gives a better answer in terms of quality and time rather than the sequential evolutionary SOM.

@&#INTRODUCTION@&#
The traveling salesman problem (TSP) is one of the oldest and well-studied problems in operational research: it has been subject of study for more than three decades.The problem at hand is to find the shortest tour between N cities which covers all cities each exactly once. For a N−city problem, there exists (N−1)!/2 roundtrips. Therefore, the problem is NP-complete and by increasing the number of cities, the computation time of optimal solution increases drastically [1]. Consequently, obtaining a near-optimal solution in rational time has enormous value. This is why heuristic and metaheuristic have been developed and disclosed very good empirical results over TSP. It is also worth mentioning that they have no mathematical proof for effectiveness.We can categorize major metaheuristics for solving TSP as evolutionary algorithm (EA) [2,3], tabu search [4,5], simulated annealing [6,7], particle swarm optimization [6], ant colony optimization [6], and neural network as well. Also, by combining these categories, hybrid systems were taken into account [8,9].TSP is naturally applied in transportation and logistic problems but because of its simplicity and comprehensibility, TSP can model many other interesting problems. More specifically, in the biology area that is the host of huge problems, with the advent of the genome projects, the research has focused to shift utilizing the well studied computer problem, traveling salesman problem, approach to study group of genes or proteins. Because of the effectiveness of the TSP, it is used in different applications in genomics and proteomics areas. In one study [10], utilized TSP to predict proteins functions. They found a promising tool to predict functions of uncharacterized proteins. Their prediction method was more advantageous than the traditional methods.Another study was related to chemotaxis process of neutrophils and macrophages which are the main responsible elements in the defense system in all mammalian bodies. They use chemotaxis to locate their preys and implementing of TSP performed successfully even in the absence of information about target location [11]. Korostensky and Gonnet [12] used TSP solution for evolutionary tree construction that shows relationship between members and they had better results than the other methods.TSP methods are also used for the DNA sequencing processes [13]. Sequencing By Hybridization (SBH) is proposed as a promising approach however it has an intrinsic problem (i.e. two types of errors associated with nucleotide hybridization) so it has been less widely applicable for unknown sequences. TSP algorithm has provided better and more accurate results [14].Some other examples are printing circuit-boards [15,16], clustering a data array [17], encoding DNA [18,19], image processing [20], and so forth. Nowadays, diversified applications require large-scale TSPs to be solved with acceptable precision.

@&#CONCLUSIONS@&#
