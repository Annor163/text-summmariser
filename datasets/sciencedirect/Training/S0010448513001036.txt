@&#MAIN-TITLE@&#
Automatically generating assembly tolerance types with an ontology-based approach

@&#HIGHLIGHTS@&#
Automatic generation of recommended assembly tolerance types is implemented.The proposed approach can further reduce the number of recommended assembly tolerance types.The approach is relatively complete and highly efficient and supports the semantic interoperability.The approach can enhance the clarity, uniformity and consistency in the design of assembly tolerance types.Ontology-based technique is a useful technique to model and reason structure and constraint knowledge.

@&#KEYPHRASES@&#
Assembly tolerance representation,Assembly tolerance types,Automatic generation,Ontology,OWL,SWRL,

@&#ABSTRACT@&#
In most cases, designers have to manually specify both assembly tolerance types and values when they design a mechanical product. Different designers will possibly specify different assembly tolerance types and values for the same nominal geometry. Furthermore, assembly tolerance specification design of a complex product is a highly collaborative process, in which semantic interoperability issues significantly arise. These situations will cause the uncertainty in assembly tolerance specification design and finally affect the quality of the product. In order to reduce the uncertainty and to support the semantic interoperability in assembly tolerance specification design, an ontology-based approach for automatically generating assembly tolerance types is proposed. First of all, an extended assembly tolerance representation model is constructed by introducing a spatial relation layer. The constructed model is hierarchically organized and consists of part layer, assembly feature surface layer, and spatial relation layer. All these layers are defined with Web Ontology Language (OWL) assertions. Next, a meta-ontology for assembly tolerance representations is constructed. With this meta-ontology, the domain-specific assembly tolerance representation knowledge can be derived by reusing or inheriting the classes or properties. Based on this, assembly tolerance representation knowledge is formalized using OWL. As a result, assembly tolerance representation knowledge has well-defined semantics due to the logic-based semantics of OWL, making it possible to automatically detect inconsistencies of assembly tolerance representation knowledge bases. The mapping relations between spatial relations and assembly tolerance types are represented in Semantic Web Rule Language (SWRL). Furthermore, actual generation processes of assembly tolerance types are carried out using Java Expert System Shell (JESS) by mapping OWL-based structure knowledge and SWRL-based constraint knowledge into JESS facts and JESS rules, respectively. Based on this, an approach for automatically generating assembly tolerance types is proposed. Finally, the effectiveness of the proposed approach is demonstrated by a practical example.

@&#INTRODUCTION@&#
Product design involves the assembling of parts or components, in which assembly tolerance specifications not only affect the ability of assembling and the quality of product, but also the manufacturing cost and service life of product. So designers need to seriously consider how to specify reasonable assembly tolerance specifications in product design. Specifying assembly tolerance specifications is the activity of specifying both assembly tolerance types and values. Assembly tolerance specifications are preferably carried out conformance with the tolerancing standards (e.g. ISO 1101  [1], ASME Y14.5M  [2]). These standards, therefore, do not provide a practical approach to specify assembly tolerance types and values  [3]. In a computer aided design system, how to implement automatic generation of assembly tolerance types and values has become an urgent problem  [4]:•In practice, assembly tolerance specifications are specified by designers either in design drawings or in CAD systems. In this situation, assembly tolerance specifications are largely depend on the judgment and experience regarding factors like functional requirements, selected materials and manufacturing processes. Different designers will possibly specify different assembly tolerance specifications for the same nominal geometry. When we design a simple product, the influences under this situation are not so great. But when we design a complex product, this will greatly increase the uncertainty in assembly tolerance specification design and significantly affect the quality of the product.The process of assembly tolerance specification design of a complex product is a complex and highly collaborative process. Designers have to synthetically consider geometrical features, functional requirements, tolerance types, tolerance values, and tolerance principles. This process often involves different designers at distributed sites with heterogeneous CAD systems. Interoperability issues arise in such a collaborative process because: (1) There is a need for sharing the semantics of tolerance information among designers who do not necessarily share the same definition of terminologies, the same meaning of tolerance information, or the same background and perspective about an assembly tolerance specification design. (2) Disparate CAD systems and heterogeneous data sources with proprietary information representation schemas coexist. (3) Fundamentally different representation approaches and data formats are used in data interchange processes. So there is a critical requirement for process and information interoperability in assembly tolerance specification design.Automatic generation of assembly tolerance specifications is still not completely realized in current commercial computer-aided tolerancing (CAT) systems. In CETOL 6 Sigma™, eM-TolMate™, VSA-GDT™, VSA.3D™, or 3DCS™, both assembly tolerance types and values are manually specified by designers. In CATIA.3D FDT™, recommended assembly tolerance types can be automatically generated, while assembly tolerance values are manually specified by designers. However, some assembly tolerance types without sense for technologically and topologically related surfaces (TTRS) cannot be generated in the system. Compared with the techniques in CAD and CAM, the techniques in CAT are lagged far behind. This situation will limit the development of the integration of CAD, CAM, and CAT.In order to address the issues above, a systematic approach which supports semantic interoperability is required to automate the design of assembly tolerance types and values. The focus of this paper is to realize tolerance information interoperability and automatic generation of assembly tolerance types in assembly tolerance specification design with an ontology-based approach. Ontology  [5], which is defined as conceptualization of terms and relations in an application domain, provides a means to structurally represent and reuse application domain knowledge. Ontology-based approach for knowledge representation and reasoning offers a means for knowledge interoperability  [5]. With an ontology-based approach, assembly tolerance information is formalized in OWL  [6,7], an ontology representation language developed by World Wide Web Consortium (W3C), and the rules for generating assembly tolerance types are defined in SWRL  [8], a rule language based on OWL. Through transforming the knowledge of assembly tolerance information into JESS facts, and the rules for generating assembly tolerance types into JESS rules, the actual generation processes are carried out with the support of JESS  [9], a rule engine for the Java platform. Although so far ontology has not been applied to the domain of automatic generation of tolerance types, it has been applied to other designing and manufacturing domains due to its advantages in the aspects of information sharing, applications integrating, interoperability implementing, and knowledge reusing. An overview of related works in tolerance representation, automatic generation of tolerance types, and ontology for designing and manufacturing domains is provided in Section  2.The rest of the paper is organized as follows. Section  3 constructs an extended assembly tolerance representation model with OWL assertions. Section  4 constructs a meta-ontology for assembly tolerance representations and proposes the OWL/SWRL representations of assembly tolerances. An approach for automatically generating assembly tolerance types based on the constructed model and OWL/SWRL representations is proposed in Section  5. The effectiveness of the proposed approach is demonstrated by a practical example in Section  6. Finally, discussions are carried out and conclusions are drawn in Sections  7 and 8, respectively.

@&#CONCLUSIONS@&#
In order to reduce the uncertainty and to support the semantic interoperability in assembly tolerance specification design, an approach for automatically generating assembly tolerance types in ontology-based assembly tolerance representation model is proposed in this paper. The proposed approach provides an effective technique for tolerance representation. In this approach, assembly tolerance information and constraint relations are described in OWL and SWRL, two representation languages devised by W3C, respectively. By these ways, assembly tolerance information is able to be reused as much as possible. Due to the fact that OWL is based on description logics, the proposed model has well-defined logical semantics, which make it possible to reason about subsumption of concepts and inconsistence of ontologies within assembly tolerance representation knowledge base. By means of transforming OWL-based structure knowledge into JESS facts, and SWRL-based constraint knowledge into JESS rules, actual generation processes of assembly tolerance types are carried out through the use of JESS. The proposed approach enables the reuse of assembly tolerance information and data exchange in the approach is quite convenient, so the semantic interoperability can be implemented. Furthermore, the approach is able to enhance clarity, uniformity, and consistency in assembly tolerance specification design. Mechanical designers will benefit from having a systematic tool with which they can conveniently design assembly tolerance types for complex assemblies. Since OWL is being used in several other domains, we believe that more advanced tools to interpret the assembly tolerance information in OWL will be available in the future.