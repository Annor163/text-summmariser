@&#MAIN-TITLE@&#
A pattern-based method for refining and formalizing informal specifications in critical control systems

@&#HIGHLIGHTS@&#
Processing specifications is a crucial issue in critical complex systems.Establishing rigorous specifications highly impacts the engineering phases.A refinement technique for processing informal specifications is developed.The established technique relies on a set of basic refinement patterns.The refinement/formalization process outputs a set of logical CTL* formulas.

@&#KEYPHRASES@&#
Requirement engineering,Requirement refinement,Specification,Formalizing,Critical control systems,Verification,&,validation,

@&#ABSTRACT@&#
Processing specifications is an issue of crucial importance when developing critical complex systems. In particular, establishing rigorous specifications broadly impacts the subsequent engineering phases. This paper discusses a refinement technique for processing informal specifications expressed in a literal shape, with the aim to generate formal specifications appropriate to automatic processing. The developed technique carries out an iterative process which relies on a set of basic refinement patterns that we have established, and ends up with a formalization step which actually generates logical CTL* formulas. Furthermore, the method implements traceability facilities, which allow for a tidy backtracking of the whole process. The concepts introduced to set up the various mechanisms are discussed and a case study featuring an embedded railway control system is used to illustrate our technique.When engineering complex systems, the quality of the design directly relies on that of the specifications considered. This fact is all the more relevant when we deal with critical systems. In that case, one of the main issues is to transform informal specifications into rigorous and preferably formal ones, considering that specifications are generally given in a literal form  [1]. The difficulty is due to the unavoidable semantic gaps inherent to the fuzzy nature of natural languages, on the one hand, and to the rigidity of formal languages, on the other hand. Semantic loss usually appears when an unsuccessful or incomplete formalization occurs, which may cause design errors. The part of the bugs due to requirement specification is very significant in complex systems. For instance, a study pertinent to computerized railway signaling systems showed that about 75% of accidents/incidents involving safety issues are due to specification issues  [2]. Similarly, another study that has been led by the automobile branch of Bosch revealed that 60% of bugs are due to the requirement specification phase; namely ambiguity, inaccuracy and inconsistency  [3].To tackle the problems related to specification ambiguity, some sound requirement refinement mechanisms are needed. “Refining” consists in the process purifying useful information from requirement documents, ensuring that the refined information is correct, precise and rigorous, thus more formal. In this paper, a technique to refining specifications of critical complex control systems is discussed. It is worth noting here that although the work discussed in this paper is related to requirement engineering, it is a part of a global approach that has been developed in the framework of the FERROCOTS project  [4] which aims to establish a global engineering methodology for replacing the current embedded railway control architecture, based on cable panels, by Commercial-Off-The-Shelf (COTS) components. COTS generally means a standard component which can be reused in numerous applications, but in our case the COTS concept is related to the hardware supporting technology as well as to the implemented control logic. A main obstacle that we had to deal with within the FERROCOTS project is due to the lack of proper system specification and verification methods to develop this kind of critical embedded systems. That is why FERROCOTS advocates for an increasing use of standard and formal notations and automatic verification and validation (V&V) techniques, which also allows for guaranteeing a high reliability level of the system.In the current research, we focus more precisely on the requirements related to the system’s dynamic, i.e., which describe its behavior. Indeed in our context, such requirements constitute in general the most critical and the most complex part of the specifications. However, it should be noted that rough specifications documents may hold further requirements pertaining to different aspects, such as interface, performance, etc. Although a number of semi-formal or standardized notations such as Unified Modeling Language (UML), SysML, Structured Analysis and Design Technique (SADT) can be encountered in some specification sheets, generally natural language remains predominant in the specifications documents. Our method implements a systematic process guiding the transformation from informal to formal specifications, and correctly refines the requirements extracted from raw text documents. Moreover, the refinement process has to guarantee a high traceability level; this feature is indeed strongly required to correctly achieve the various subsequent engineering steps. Besides the refinement process, the elaborated technique also implements an ultimate formalization step, which allows for deriving formal specifications in the end. It is worthwhile to recall here that, for safety reasons, relying on formal specifications is highly recommended when developing critical systems e.g., embedded railway control systems. From a practical point of view, the refinement process aims to transform raw specifications expressed in natural language into refined precise requirements, but still expressed as literal assertions. This process is based on three main refinement operations that we have developed, Clarify, Modify and Split. More precisely, such operations are established in the shape of refinement patterns, which provide mechanisms for reducing the risk of semantic loss. SysML notation will be used in the sequel to describe the various refinement operations. As for the formalization step,CTL∗logic, which is a super-set of both CTL and LTL temporal logics, is selected as the target formalization framework. Thus, the refined requirements are ultimately intoCTL∗logic formulas. Let us note here that the obtained logical formulas provide a formal basis for various phases in the system engineering process, like the V&V step. It should also be mentioned that although the refinement process is not automatic, it offers supporting means to make this process systematic and outputs specifications workable by automatic tools.The remainder of the paper is organized as follows: in Section  2, a global overview of the related works that can be found in the literature is given while classifying these works according to various criteria. The developed method will be discussed in Section  3 where first the refinement process will be detailed then the formalization step explained. In this section, the various preliminary notions and developed concepts necessary to set up our technique will be introduced and illustrated where necessary. Then, a discussion is carried out in Section  4 while some recommendations related to the method implementation are provided and argued, before a case study pertaining to an embedded railway control system is dealt with in Section  5. Finally, Section  6 offers some concluding remarks and draws some directions for the future work.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
