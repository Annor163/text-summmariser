@&#MAIN-TITLE@&#
Developing multiagent systems for design activity analysis

@&#HIGHLIGHTS@&#
A theory for design activity reasoning is proposed.The multiagent system ADEA is modeled and implemented for the theory analysis.Design space is modeled as a network of design parameter agents.Emergence is the result of a non-programmed behavior of role agents.Design parameter agents help to overcome the cognitive limitation of role agents.

@&#KEYPHRASES@&#
Design activity theory,Socio-technical processes,Smart agent technologies,Multiagent systems,

@&#ABSTRACT@&#
Engineering design is a complex socio-technical activity characterized by co-evolution of problem and solution. However, the actual design theories are not well-suited to represent and model the complexity of design activity, the co-evolution and its dynamics. Therefore, there is a need to develop design activity reasoning theories and tools, which can theorize and simulate the model of co-evolution and its dynamics. Multiagent systems have the capacity to play an important role in developing and analyzing models and theories of interactivity in socio-technical societies, particularly in design. This paper first addresses a theory for design activity reasoning. Then, it will present a multiagent system, called ADEA (Agents-based DEsign activity Analysis), in order to model, simulate and analyze this theory. The agents of the ADEA platform formalize the necessary design roles, characterizing the design activity as well as the relationship between design parameters in the design space. ADEA’s platform shows that cognitive limitation of role agents has been overcome, considering their relationship with the design space modeled as a network of design parameter agents.

@&#INTRODUCTION@&#
Engineering design is a complex socio-technical activity. The importance of understanding design activity justifies the efforts of the scientific community to develop design theories such as Design Science  [1], Reflection-in-Action  [2,3], Situated Function–Behavior–Structure  [4], General Design Theory  [5,6], Axiomatic Design  [7], Axiomatic Theory  [8], Theory of Inventive Problem Solving  [9–11], Infused Design  [12,13], and C–K Design Theory  [14].Some aspects of design activity such as situativity  [4], the role of the context  [15], the role of capturing of data resulting from design activities and supporting the creation of these data  [16], the constructivist framework  [17], visual reasoning  [18], creative conceptual thinking  [19], designing as a representation transformation process  [20], the cognitive synchronization  [21] and the socio-technical aspects  [22,23] such as “specific role” and “action plan”  [24] have been studied. The role of the ‘insight’ through identification of the emerging relationships between requirements and the design solutions is also explored for controlling and acting on the design process  [25,26]. Generic set of design activities has been also classified into design definition activities, design evaluation activities and design management activities   [27].Based on observations of in-practice design activity, the concept of co-evolution was introduced  [28]. The Function–Behavior–Structure  [4] is an example of a co-evolution model. Co-evolution is relevant to describe the core of design activity. In particular, the design activity can be presented as “bridging”  [29]: designing is seen as building and connecting elements of different points of views on the product. The nature of design problems, their beginning and end, the evolution of the reasoning and the evolution of all points of view (co-evolution) show that design is a non-programmable activity.Even though these concepts are relevant, the actual design theories are not well-suited to represent and model the complexity of design activity, the co-evolution and its dynamics. Therefore, there is a need to develop design activity reasoning theories and tools which can theorize and simulate the model of co-evolution and its dynamics. Multiagent systems have the capacity to play an important role in developing and analyzing models and theories of interactivity in socio-technical societies, particularly in design  [30–32].The purpose of this paper is to propose a theory for design activity reasoning and to validate some of its properties through its modeling, simulation and analysis implemented in a multiagent system called ADEA (Agents-based DEsign Activity Analysis).The remainder of the paper is organized as follows: In Section  2, a review of research work in design theories and multiagent systems in design is proposed. In Section  3, the axioms of the proposed theory are given. In Section  4, the properties of the theory for design activity reasoning, as well as their mapping to the properties of multiagent systems are shown, and the architecture of ADEA is presented. Section  5 describes an application of ADEA. Section  6 discusses the results of this research. In the last section, the conclusion shows some perspectives and interest in the proposed approach.In this section, we provide an overview of design theories, as well as multiagent systems used in engineering design.Different design theories are proposed as analytical tools for understanding, explaining, and making predictions about design.Herbert Simon approaches a design problem through programming heuristics, problem-solving theory and multicriteria decision-making  [1]. These models fully capture the dynamic mapping between solutions and criteria, but not the generation of new designs.The Situated Function–Behavior–Structure conceptual framework proposed by Gero and Kannengiesser  [4] takes inspiration from situated cognition. It provides an explicit model of the interactions between the external world, defined as expected, and the internal world, defined as interpreted. Situated FBS provides meaningful insights into the relationship between the design move (called processes) proposed in FBS as being transformations between various states of the solution (function, expected behavior, structure, etc.) and the cognitive moves (interpreted behavior, expected behavior, etc.). An interesting insight into the relationship between the concepts of function, behavior, principle, state, and structure is given in the model proposed by Zhang et al.  [33].Schön introduced the metacognition (Reflection-in-Action) for description of design activity  [2,3]. Schön describes the design activity using the concept of framing, making moves, and evaluating moves.General Design Theory (GDT) was proposed by Yoshikawa  [34]. The goal of GDT is to explain the human design ability using set theory-based mathematical modeling. According to GDT, a conceptual combination of abstract characteristics is the necessary condition for innovative designing. Yoshikawa considers designing as the formation of concepts of non-existing entities as the result of performing logical operations on knowledge about existing things. Designing through the logical operations on the conceptual sets is the cognitive foundation of GDT. GDT also provides a prescription for the development of CAD systems  [5,6,35].Axiomatic Theory has been used also for approaching design decisions based on formal logic  [8]. A new approach for formalizing product requirements described by unrestricted natural language has been derived from this theory  [36].Axiomatic Design, proposed by Suh  [7], is defined as abstractions of observed design process. Suh perceived the design process as a mapping between four domains: customer domain, functional domain, physical domain, and process domain. Suh proposed two axioms to explain the design process: The Independence Axiom and The Information Axiom. Several theorems have been derived from those axioms, and the axioms and resulting theorems provide solutions to real-world design problems. Axiomatic design explains how an optimal artifact should be designed: the design should be uncoupled and with minimum information.The theory of inventive problem solving (TRIZ) was proposed by Altshuller  [9–11]. The goal of TRIZ is to develop a new theory for creativity, one that is both effective and controllable. An important hypothesis of TRIZ is that a good solution invariably solves a contradiction in time and in space. TRIZ hypothesized that objective laws must exist that can suggest efficient methods for resolving contradictions. Altshuller discovered several laws through studying the methods of resolving the contradictions embedded in prior inventions. These laws help to systematize the creative process.Infused design is a new theory proposed by Shai and Reich [12,13]. Infused design brings up the design problem representation to a mathematical meta-level, which is common to all engineering disciplines. The reasoning about the problem is then done using mathematical terminology, and tools that are the same for all engineers, disregarding their background. Infused design is based on a multidisciplinary combinatorial approach. Infused design supports the exchange of knowledge between project participants.C–K Design theory was first introduced by Hatchuel and Weil  [14]. C–K theory considers design as the generation of new objects. The assumption of C–K design theory is that design can be modeled as the interplay between two interdependent spaces with different structures and logics: the space of concepts (C) and the space of knowledge (K).Multiagent systems have been proposed in many engineering fields: collaborative intelligent manufacturing  [30,31,37], customer service management  [38], distributed production  [39], distributed control  [40,41], supply chain management  [42], product design  [32,43,44], and industrial applications  [45,46]. A detailed discussion on the issues and challenges in developing multiagent design systems was also proposed by Lander  [47].In a more general way, agents can have their own level of knowledge. They can share knowledge and can communicate their knowledge  [48–50]. Multiagent systems are well-adapted to simulate the behavior of organizations  [51]. They offer a major interest for the management of phenomena such as self-organization and emergence  [52]. Multiagent systems are also well-adapted to respond to the heterogeneity of organizations  [53]. Agents are reactive to their environment, they interact between them, they permanently adjust their behavior and they co-evolve with their environment and other agents  [49].There are four aspects that generally concern research for development of collaborative product design systems: concurrent intelligent design  [54,55], product modeling, consistency maintenance, and system architecture  [56,57]. Multiagent systems have mostly been used for supporting cooperation among designers or for allowing better simulations  [58,59]. Multiagent systems have also been used to develop human centered CAD systems  [60]. Context-aware agents are also proposed in cooperative design to bridge pervasive computing with agents through context-awareness [61,62]. Key projects in this area are: PACT, which demonstrated the use of agents in integrating concurrent engineering systems  [63]; DIDE, which proposed the use of agents in an engineering design environment in which CAD/CAM tools and knowledge-based systems were integrated  [64]; SHARE  including First-Link  [65], Next-Link  [66], and Process-Link  [67] which proposed an agent-based approach to help multidisciplinary design engineers in tracking and coordinating their design decisions. Many other projects were developed in this area as well, including RAPPID  [68], and Facilitator  [69].Two other approaches also seem relevant to the issues presented here: those of Gero and Brazier. Gero et al. have developed a framework for reasoning about and explaining the nature and process of design: the Function–Behavior–Structure framework (FBS)  [4]. In this framework, the concept of the “curious design agent” is proposed. It uses a computational process called novelty detection to search the situated design space  [69–71]. This process provides advantages to exploring unfamiliar design spaces (creative design), but it is not applicable for complex product design problems that need routine design tasks and knowledge of experience  [56]. Brazier  [72] developed a generic architecture for a design agent where strategic reasoning and dynamic management of requirements are explicitly modeled. However, this generic design model is not adapted to real complex product design problems  [56].

@&#CONCLUSIONS@&#
