@&#MAIN-TITLE@&#
Modified T-splines

@&#HIGHLIGHTS@&#
We propose a variant of T-splines called Modified T-splines. A set of basis functions are constructed for a given T-mesh.These bases have nice properties: non-negativity, linear independence, partition of unity and compact support.Modified T-splines are favorable both in adaptive geometric modeling and isogeometric analysis.

@&#KEYPHRASES@&#
T-mesh,T-spline,Knot deletion,Surface fitting,Surface simplification,

@&#ABSTRACT@&#
T-splines are a generalization of NURBS surfaces, the control meshes of which allow T-junctions. T-splines can significantly reduce the number of superfluous control points in NURBS surfaces, and provide valuable operations such as local refinement and merging of several B-splines surfaces in a consistent framework. In this paper, we propose a variant of T-splines called Modified T-splines. The basic idea is to construct a set of basis functions for a given T-mesh that have the following nice properties: non-negativity, linear independence, partition of unity and compact support. Due to the good properties of the basis functions, the Modified T-splines are favorable both in adaptive geometric modeling and isogeometric analysis.

@&#INTRODUCTION@&#
T-splines were introduced by Sederberg et al. (2003, 2004) and have been studied extensively in the last ten years. T-splines are a generalization of NURBS surfaces, the control meshes of which permit T-junctions. Unlike NURBS, T-junctions allow T-splines to be locally refinable without propagating entire columns or rows. This property makes T-splines an ideal technology for removing superfluous control points in NURBS surfaces and for adaptive isogeometric analysis (Hughes et al., 2005; Cottrell et al., 2009). Initial investigations using T-splines as a basis for isogeometric analysis demonstrate that T-splines possess similar convergence properties as NURBS with far fewer degrees of freedom (Dörfel et al., 2009; Bazilevs et al., 2010). However, the blending functions of T-splines are not always linearly independent. Buffa et al. (2010) gave an example of a T-spline with linearly dependent blending functions. This causes concerns about the linear independence of T-splines. A solution to this problem is the so-called analysis-suitable T-splines (AST-splines for short) (Li et al., 2012; Scott et al., 2012). AST-splines are a subset of T-splines defined over a restricted T-mesh whose T-junction extensions do not intersect, and the blending functions are always linearly independent and thus are suitable for isogeometric analysis. However, the topology of the meshes of AST-splines is relatively restrict. For example, the mesh for common local refinement in isogeometric analysis as shown in Fig. 1is not an AST-mesh. Algorithm exists for modifying a non-AST-mesh into an AST-mesh (Scott et al., 2012).In Deng et al. (2008), the authors introduced the concept of splines over T-meshes, and specifically PHT-splines were proposed. PHT-splines are polynomial splines defined over a hierarchical T-mesh, and the basis functions of PHT-splines are linearly independent, form a partition of unity and have compact supports. The local refinement algorithm of PHT-splines is local and very simple. Furthermore, since a PHT-spline is a polynomial (instead of a piecewise polynomial) over each cell of the T-mesh, it holds a good approximation property. These properties make PHT-splines an ideal tool for isogeometric analysis (Nguyen-Thanh et al., 2011a, 2011b). However, PHT-splines are onlyC1continuous, which is a disadvantage for geometric modeling.Another type of local refinement splines is LR-splines introduced by Dokken et al. (2013). LR-splines are defined on a μ-extended LR-mesh which is constructed by inserting line segments starting from a tensor product mesh according to certain rules. LR-spline also forms a non-negative partition of unity and spans the complete piecewise polynomial space on the mesh when the mesh construction follows certain rules. Different strategies can be employed to construct linearly independent LR B-splines by mesh modification. However, unlike T-splines and tensor product B-splines, there is no one-to-one correspondence between the 3D control mesh and the LR B-spline functions.Hierarchical B-splines were introduced by Forsey and Bartels (1988), which have been recently further elaborated by Giannelli et al. (2012). The idea is to suitably truncate hierarchical B-spline functions according to finer levels in the hierarchy, which are called THB-splines. A THB-spline is a linear combination of B-splines, and THB-splines form a partition of unity and are linearly independent.In this paper, we introduce a new type of local refinement splines called Modified T-splines, which inherit some good properties of the above splines while preventing some undesirable properties. The intuitive idea is to construct a set of basis functions which have good properties, such as non-negativity, partition of unity, linear independence and compact support. With the help of an auxiliary T-meshT′(defined in Lemma 3.2), the basis functions are constructed as a linear combination of T-splines defined overT′. In this sense, Modified T-splines have some similarity with THB-splines.The remainder of the current paper is organized as follows. In Section 2, we recall some preliminary knowledge about knot deletion of B-splines and T-splines. In Section 3, the construction details of Modified T-splines are described, and some properties, especially approximation property of Modified T-splines are discussed. Section 4 demonstrates some applications of Modified T-splines in surface fitting. Section 5 concludes the paper with a summary and future work.In this section, we recall some preliminary knowledge about knot deletion of B-splines in one dimension which is useful in the construction of Modified T-splines. Then the basic concepts about T-meshes and T-splines are reviewed.For simplicity, we only consider degree one and degree three B-splines for illustration.Given a knot vectort=[t0,t1,…,tn]witht0⩽t1⩽⋯⩽tn, the associated B-spline basis functions are defined recursively as follows(1)Ni0(t)={1,t∈[ti,ti+1),0,otherwise,(2)Nik(t)=t−titi+k−tiNik−1(t)+ti+k+1−tti+k+1−ti+1Ni+1k−1(t),k⩾1.We useN1[ti−1,ti,ti+1](t)to denote the degree one B-spline basis functionNi−11(t)and call it the linear B-spline basis function at knotti. Similarly, for cubic B-spline functions,N3[ti−2,ti−1,ti,ti+1,ti+2](t)=Ni−23(t)is called the cubic B-spline basis function at knotti.Now insert a knottˆinto the knot vector t to get a new knot vectort˜. Without loss of generality, we assumetˆ∈[t3,t4). Then the B-spline basis functions associated with t either can be written as a linear combination of the B-spline basis functions associated witht˜or remain unchanged. The relationship between these basis functions can be written as(3)(N1[t2,t3,t4](t)N1[t3,t4,t5](t))=(1t4−tˆt4−t300tˆ−t3t4−t31)(N1[t2,t3,tˆ](t)N1[t3,tˆ,t4](t)N1[tˆ,t4,t5](t)),(4)(N3[t0,t1,t2,t3,t4](t)N3[t1,t2,t3,t4,t5](t)N3[t2,t3,t4,t5,t6](t)N3[t3,t4,t5,t6,t7](t))=(1t4−tˆt4−t10000tˆ−t1t4−t1t5−tˆt5−t20000tˆ−t2t5−t2t6−tˆt6−t30000tˆ−t3t6−t31)(N3[t0,t1,t2,t3,tˆ](t)N3[t1,t2,t3,tˆ,t4](t)N3[t2,t3,tˆ,t4,t5](t)N3[t3,tˆ,t4,t5,t6](t)N3[tˆ,t4,t5,t6,t7](t)).Alternatively, the knot vector t can be considered as deleting a knottˆfrom the knot vectort˜. After knot deletion, the B-spline basis function attˆis distributed to the B-spline basis functions at the neighboring knots oftˆ. The distribution process is demonstrated in Fig. 2. Fig. 2(a) illustrates the distribution process of degree one B-splines for knot deletion. The B-spline basis function at knottˆis distributed to the B-spline basis functions at the knotst3andt4with a ratio of μ and1−μrespectively, whereμ=t4−tˆt4−t3. Fig. 2(b) shows the distribution process of cubic B-splines. There are two levels of distribution in this case. The distribution indicated by the orange arrows is firstly carried out. Then the distribution indicated by the purple arrows is performed, where the distribution coefficients areα=t4−tˆt4−t1,β=tˆ−t3t6−t3andλ=t5−tˆt5−t2.Note that the coefficient matrices in formulas (3) and (4) have the following nice properties: the column sums of each matrix are equal to one, the elements of each matrix are non-negative and each matrix has full rank. These properties induce the following important result.Lemma 2.1Let{Ni}i=1mbe a set of non-negative and linearly independent B-spline functions which are assumed to form a partition of unity in the defined domainD,D⊆Rd. Let{Bj}j=1nbe a set of functions, each of which is a linear combination of{Ni}i=1m, or in matrix form(B1⋮Bn)=M(N1⋮Nm)where M is ann×mmatrix withn<m. If the matrix M has full rank, then{Bj}j=1nare linearly independent. Furthermore, if the column sums of M are all equal to one and the elements of M are all non-negative, then{Bj}j=1nare non-negative and form a partition of unity over D.ProofSuppose there exist constants{ci}i=1nsuch that∑i=1nciBi=(c1,…,cn)(B1,…,Bn)T≡0.Since(B1,…,Bn)T=M(N1,…,Nm)T, then(c1,…,cn)M(N1,…,Nm)T=(d1,…,dm)(N1,…,Nm)T≡0,where(d1,…,dm)=(c1,…,cn)M. Because of the linear independence of{Ni}i=1m, we havedi=0,i=1,2,…,m. Thereforeci=0,i=1,2,…,n, follows as the matrix M has full rank.For the next part, notice that∑i=1nBi=(1,…,1)(B1,…,Bn)T=(1,…,1)M(N1,…,Nm)T.Since the column sums of the matrix M are all one,(1,…,1)M=(1,…,1). Therefore∑i=1nBi=(1,…,1)(N1,…,Nm)T=∑i=1mNi≡1.The non-negativity of{Bj}j=1nis obviously true. The lemma is thus proved. □A T-mesh is a rectangular grid that allows T-junctions. It is assumed that the end points of each grid line in the T-mesh must be on two other grid lines and each cell or facet in the grid must be a rectangle. If a T-junction on one edge of a face can be connected to a T-junction on an opposing edge of the face thereby splitting the face into two rectangles, that edge must be included in the T-mesh. Fig. 3(a) illustrates a T-mesh while the mesh in Fig. 3(b) is not a T-mesh. A T-mesh can lie either in a 2D plane or in a 3D space. Generally, a 2D T-mesh is served as the parametric space of T-splines while a 3D T-mesh is served as the control grid of T-splines. For a 3D T-mesh, each facet doesnʼt have to be a rectangle or planar.A grid point in a T-mesh is called a vertex of the T-mesh. If the vertex is on the boundary grid line, then it is called a boundary vertex, otherwise it is called an interior vertex. For example,b0,b1,…,b12,b13in Fig. 3(a) are boundary vertices, whilev0,v1,…,v4,v5are interior vertices. Interior vertices have two types: one is crossing vertices, for example,v0,v1,v3,v5in Fig. 3(a); and the other one is T-vertices, for example,v2,v4in Fig. 3(a). T-vertices are classified into two classes: horizontal T-vertices, for example,v2in Fig. 3(a) and vertical T-vertices, for example,v4in Fig. 3(a).A T-vertex can be extended by inserting edges starting from this T-vertex, in the direction of a missing edge. A T-vertex can be extended as far as to the mesh boundary. All the edges created by such extension are called T-vertex extensions. Fig. 4shows an example where dotted purple line segments are T-vertex extensions. For a given T-mesh T, letT′be the new mesh produced by some T-vertex extensions. Those vertices produced by the T-vertex extensions are called new vertices relative to the mesh T, that is, new vertices are the vertices that are inT′but not in the origin mesh T. The vertices in T are called old vertices. There are three types of new vertices: one is H-type, if the new vertex is produced by the extension of horizontal T-vertex; one is V-type, if the new vertex is produced by the extension of vertical T-vertex; the last one is C-type, if the new vertex is produced by both extensions of horizontal T-vertex and vertical T-vertex. As illustrated in Fig. 4, A is H-type produced byv1, B is V-type produced byv4and C is C-type produced byv2andv3.Alternatively, one can delete vertices from a T-mesh to create a new T-mesh. When a vertex is deleted, we mean the edges connecting the vertex in a specific direction are also deleted. This will be made clear in later context.Given a control T-mesh in 3D space with control pointsPi,i=1,2,…,n, a T-spline is defined as(5)T(s,t)=∑i=1nPiTi(s,t)∑i=1nTi(s,t),(s,t)∈Ω,whereTi(s,t)is the blending function(6)Ti(s,t)=Ni3(s)Ni3(t)withNi3(s),Ni3(t)being the cubic B-spline basis functions associated with two local knot vectorssiandtirespectively. The two local knot vectorssiandticome from two global knot vectorss=[s−2,s−1,s0,…,sp+2]andt=[t−2,t−1,t0,…,tq+2]which are inferred from the control T-mesh. Let T be the preimage of the control mesh, which is a T-mesh in 2D parametric space. Ω is the 2D rectangular domain that is occupied by T.To each control pointPicorresponds a blending functionTi(s,t)=Ni3(s)Ni3(t)defined in terms of knot vectorssi=[si0,si1,si2,si3,si4]andti=[ti0,ti1,ti2,ti3,ti4]. The local knot vectorssiandtiare inferred as follows. Assume that the parameter coordinates of the preimageviofPiare(si2,ti2). The knotssi3andsi4are found by considering a ray in parameter spaceR(α)=(si2+α,ti2). Thensi3andsi4are the s coordinates of the first two vertical edges (which are called s-edges) intersected by the ray (not including the initial(si2,ti2)). The other knots insiandtiare found in like manner. For the details, the reader is referred to Sederberg et al. (2003).Figs. 5(a) and (b) illustrate a T-mesh in(s,t)parameter space. For the vertexv1, the associated knot vectors ares1=[s0,s2,s3,s4,s6]andt1=[t6,t8,t9,t10,t12]; likewise forv2,s2=[s5,s6,s8,s10,s12]andt2=[t5,t6,t8,t10,t12].Specifically, when the control T-mesh is a tensor product mesh, T-splines reduce to tensor product B-splines.Note that the blending functions of T-splines may be linearly dependent, and they generally do not form a partition of unity, i.e.,∑i=1nTi(s,t)≢1(see Fig. 5(c)). However, by imposing some conditions on the T-mesh (for example, AST-mesh), the blending functions of the corresponding T-splines form a partition of unity. Unfortunately, most common T-meshes in local refinement are not AST-meshes, and generally it is not a trivial task to modify an existing T-mesh to an AST-mesh.In this section, we are going to construct a new type of local refinement splines over T-meshes which inherit the major properties of current local refinement splines. We call such splines Modified T-splines. We start with an outline of the construction process. Then the detailed construction approach is described, and the properties of Modified T-splines are presented.Given a T-mesh T in 2D parametric space, letvi,i=1,2,…,n, be its vertices. For each vertexvi, we are going to construct a piecewise bicubic basis functionBi(s,t)over T with the following good properties:•Non-negativity:Bi(s,t)⩾0,i=1,2,…,n.Partition of unity:∑i=1nBi(s,t)≡1.Linear independence:Bi(s,t),i=1,2,…,n, are linearly independent.Compact support:Bi(s,t)has a compact support.Then a Modified T-spline is defined(7)P(s,t)=∑i=1nPiBi(s,t),(s,t)∈Ω,wherePi,i=1,2,…,n, are the control points which form a 3D control T-mesh. Ω is the 2D parametric domain that is occupied by T. Note that there is a one-to-one correspondence between the 3D control mesh and the mesh T in 2D parametric space.The construction of the basis functionsBi(s,t)consists of the following two major steps (see Fig. 6).For the first step, we extend T to a new meshT′by T-vertex extensions such that a set of basis functionsNi(s,t)overT′with the above good properties can be easily constructed. The new meshT′is called the extended T-mesh of T. For example, we can extend all the T-vertices of T to the mesh boundaries to form a tensor product meshT′. Then we chooseNi(s,t)to be the tensor product B-spline basis functions which of course satisfy the above properties. Fig. 6(b) demonstrates another choice ofT′which is a T-mesh, and the corresponding basis functions are defined overT′as shown in Fig. 6(c).For the second step, let{vi′}i=1lbe the new vertices generated by the T-vertex extensions. We distribute the basis functionNi(s,t)atvi′to the basis functions at the neighboring old vertices ofT′. In Fig. 6(d), the basis function atv1′is distributed to the basis functions atv2andv5, and the basis function atv2′is distributed to the basis functions atv2andv6. Finally, the basis functionBi(s,t)over T is constructed as a linear combination of the basis functionsNi(s,t)at the neighboring vertices ofvi. Fig. 6(e) illustrates the basis function atv2.The distribution of a basis function at a new vertex is composed of two steps: finding receiving vertices in T and computing distribution coefficients. Each new vertex is one of the three types: H-type, V-type and C-type. For H-type and V-type new vertices, the rule of distribution is simple: we distribute the basis function along one direction and perform the distribution as knot deletion in one dimension. However, for C-type new vertices, the situation is much harder. In our construction, we will avoid such situation.For example, as illustrated in Fig. 6(d),v1′is a H-type vertex, the basis function atv1′is distributed along t (vertical) direction, and the distribution coefficients are computed by knot deletion in t direction as shown in formula (3). That isv2andv5are the receiving vertices ofv1′. The distribution coefficient ofv1′tov2is the ratio of distancev1′v5overv2v5(=t10−t9t10−t8), and the one ofv1′tov5is the ratio of distancev1′v2overv5v2(=t9−t8t10−t8). Fig. 7illustrates the distribution process ofv1′by formula (3).In this section, we present details to construct bicubic Modified T-splines.Given an original T-mesh T, we extend all the horizontal (or vertical) T-vertices to the boundary of T to obtain a new T-mesh. Now the new T-mesh has only vertical (or horizontal) T-vertices. For such T-meshes, we have the following important observation.Lemma 3.1If there are only vertical (horizontal) T-vertices in a mesh T, then the blending functions of the T-splines defined over T are linearly independent and form a partition of unity.ProofWithout loss of generality, we assume T has only vertical T-vertices. LetT′be the tensor product mesh by extending all the T-vertices in T to the boundary of T. Because there are only vertical T-vertices in T, all the new vertices inT′are V-type. LetBi(s,t)=Ni3(s)Ni3(t)be the tensor product B-spline basis function at each vertexviofT′,i=1,2,…,m. LetTi(s,t)be the T-spline blending function at the vertex of T,i=1,2,…,n. We are going to show that: (1)Ti(s,t)is a linear combination ofBi(s,t), that is, there exists a matrixMn×msuch that(8)(T1⋮Tn)=M(B1⋮Bm).(2) the matrix M has full rank and the column sums of the matrix M are all one. Then by Lemma 2.1, the assertion of the lemma follows.Assume there are p horizontal grid lines and q vertical grid lines inT′. For each horizontal grid linet=ti, there are q vertices on the grid line, among which we assumerivertices (ri⩽q) are old vertices. Since the T-splines at all the vertices on the grid line have the same local knot vectorti=[ti−2,ti−1,ti,ti+1,ti+2]in t direction, by the knot insertion algorithm of univariate cubic B-splines, the T-spline blending functionTij(s,t)at each old vertex on the grid line is a linear combination of the blending functionsBij(s,t)at all the vertices on the grid line, that is,(Ti1⋮Tiri)=Mi(Bi1⋮Biq)where the matrixMihas full rank and the column sums ofMiare all one by the property of knot insertion. Now (8) follows withM=diag(M1,M2,…,Mp). Obviously, M has full rank and the column sums of M are all one.  □For a given T-mesh T, letTHbe the mesh by extending all the horizontal T-vertices of T to the mesh boundary.THis called the horizontal extension mesh of T. Similarly, letTVbe the mesh by extending all the vertical T-vertices of T to the mesh boundary, andTVis called the vertical extension mesh of T. ObviouslyTHandTVsatisfy the condition of Lemma 3.1. IfTHis taken as the extended T-mesh of T, then there are only H-type new vertices which are needed to be distributed. Similarly, if we takeTVto be the extended T-mesh, then only V-type new vertices need to be distributed.Before outlining the detailed algorithm to construct Modified T-splines, we can make some further simplification for extended T-meshes. In fact, among all the new vertices inTHorTV, many can be deleted without distribution process. We call such vertices deletable vertices. The key observation is as follows.Assumev0is a H-type vertex on a vertical grid lines=siinTH, and its 2-neighboring vertices on the grid line (two abovev0and two beneathv0) are denoted asv1,v2,v3,v4(see Fig. 8(a) as a reference). Now suppose that the T-spline blending functions atvi,i=0,1,…,4, possess the same s local knot vectorsi. Whenv0(and the corresponding edge) is deleted fromTH, the blending function atv0is distributed to the blending functions at the four neighboring verticesvi,i=1,2,3,4, by knot deletion of univariate cubic B-splines, and thus a T-spline is obtained over a new T-meshT˜after deletingv0(and the corresponding edge) fromTH, see Fig. 8(b). It is easy to see that the blending functions of the T-spline overT˜are linearly independent and form a partition of unity. We conclude this in the following definition.Definition 3.1Letv0be a H-type new vertex on a vertical grid line in T, and letv1,v2,v3,v4be the 2-neighboring vertices ofv0on the grid line. If the T-spline blending functions atvi,i=0,1,…,4, have the same local s knot vector, thenv0is called a h-deletable vertex. Similarly, one can define v-deletable vertex. Both h-deletable vertex and v-deletable vertex are called deletable vertex.Similar to the proof of Lemma 3.1, we haveLemma 3.2LetT′be the T-mesh after deleting all the deletable vertices ofTH(orTV). Then the T-spline blending functions overT′are linearly independent and form a partition of unity.T′is called the extended T-mesh of T.Now we are ready to describe the details of the algorithm to construct Modified T-splines.InputA T-mesh T in a 2D parametric plane.A set of basis functionsBi(s,t)over T.Extend all the horizontal T-vertices to the mesh boundary of T and denote the mesh byTH.Find all the h-deletable vertices inTHand delete them (and the corresponding edges), and the result T-mesh is denoted byT′.Construct T-spline blending functions{Ti(s,t)}overT′.Scan each vertical grid line, and for each new vertex on the grid line, distribute the blending function at the new vertex to the blending functions at the neighboring old vertices on the grid line. This can be accomplished by knot deletion of univariate B-splines.Letvibe a vertex in T. Assume{vij}j=1lare all the new vertices whose blending functions are distributed tovi, and{cij}are the corresponding distribution coefficients, then the basis function atviis constructed asBi(s,t)=Ti(s,t)+∑j=1lcijTij(s,t).Now we illustrate an example to explain the above algorithm. The origin T-mesh T is shown in Fig. 9(a), andTHis shown in Fig. 9(b), where the purple circles are marked for H-type new vertices. According to Lemma 3.1, the blending functions of the T-spline defined overTHare linearly independent and form a partition of unity. Scan every vertical grid line segments, find all h-deletable vertices, as marked by green circles in Fig. 9(c). Fig. 9(d) is the extended T-meshT′after removing the h-deletable vertices fromTH. The blending functions at the remaining vertices (purple circles) are distributed as univariate knot deletion of B-spline to the neighboring old vertices.We can also start withTV. Fig. 9(e) is theTVmesh, where purple circles are V-type new vertices needed to be distributed and green circles are v-deletable vertices.Fig. 10shows the comparison between the basis functions of Modified T-splines and T-splines, and how a basis function changes after knot deletion. From the examples, one can see that while the supports of Modified T-spline basis functions enlarge after knot deletion, they are comparable with the supports of T-spline basis functions.We would like to make some remarks about the above construction method.Remark 3.11.Instead of usingTH, we can also useTVas the starting mesh. The algorithm is similar, and one only has to change horizontal to vertical, and vertical to horizontal. In practice, we chooseTHorTVbased on which mesh would result in less number of vertices that need to be distributed.In step 4, the blending functions at the new vertices are distributed to the blending functions at the old vertices by knot deletion of univariate cubic B-splines. However, it is favorable to simply distribute the blending functions at the new vertices by knot deletion of degree one B-splines, since knot deletion of linear B-splines makes the support of the basis functions smaller.The extended T-meshT′in our algorithm is an AST-mesh. The spline space spanned by Modified T-splines is a subspace of the spline space spanned by AST-splines overT′. The local refinement algorithm in Scott et al. (2012) can be applied to obtain an AST-mesh from a given T-mesh, so AST-mesh can be used as a starting point instead ofTHorTV. But as stated previously, it may introduce C-type new vertices which is hard to handle.The construction algorithm involves three T-meshes: the origin T-mesh T and two auxiliary T-meshes:THand the extended T-meshT′.THis served for constructingT′andT′is served for defining the T-splines, from which Modified T-splines are defined on T. At every vertex in T, a Modified T-spline basis function is defined as a linear combination of T-spline basis functions onT′, and thus the knot vectors and the distribution coefficients at the new vertices inT′are enough for further use. So it is not necessary to store the whole information ofT′along with the original T-mesh. BothTHandT′are discarded after the algorithm.While it is generally very hard to give a complete analysis of the algorithm complexity for constructing Modified T-splines, we present several typical examples of meshes to get a hint about the algorithm complexity.The construction algorithm in Section 3.2 mainly includes two parts: extended T-meshT′construction and non-deletable vertices distribution. LetR=NM, where N is the total number of new vertices inT′, and M is the total number of old vertices inT′(i.e., M is the total number of vertices in T). The ratio R gives a rough idea about the computational complexity of the algorithm.Fig. 11shows four typical hierarchical T-meshes. Denote the maximum level of hierarchy by k and the refinement domain at level i byΩi. The refinement domainΩiin Fig. 11(a) is a rectangle withΩi⊂Ωi−1(assume that the boundaries ofΩiandΩi−1do not overlap). There are 4k non-deletable vertices inTHand at least25+16kold vertices inTH. So the ratioR⩽4k25+16k<1/4. The T-mesh in Fig. 11(b) is similar to the one in Fig. 11(a), where the refinement domains are polygons. In this case, there are7k−1non-deletable vertices inTHand30k+36old vertices inTH. So the ratioR=7k−130k+36<730.For the mesh in Fig. 11(c), suppose that there are2(n+2)vertical T-vertices at level 1. Then there arenl=2ln+4vertical T-vertices and∑j=10.5nl6j+3old vertices at level l,l=1,2,…,k. We assume thatk⩾3. A vertical T-vertex at level l(1⩽l⩽k−2)produces 13 non-deletable vertices at most, and produces 11 non-deletable vertices at most at levelk−1. At level k there are about half of vertical T-vertices, each of which produces one non-deletable vertex. So the total number of new vertices inT′is less than∑l=1k−213(2ln+4)+11(2k−1n+4)+0.5(2kn+4)≈12.5n⋅2k+52k. Since there are about∑l=1k6nl+3nl2≈n2⋅4k+18n⋅2k+24kold vertices, we get an estimate for the ratioR≈12.5n⋅2k+52kn2⋅4k+18n⋅2k+24k. It is easy to see that R decreases as k increases, and R tends to zero when k is large enough.The final example illustrates the worst case – a T-mesh which refines along a diagonal as shown in Fig. 11(d), where the band width of the refinement domainΩiis 3. Suppose the starting mesh is ann×nTP-mesh andk⩾3. Then there are2ln−4vertical T-vertices and11(2l−1n−2)+16old vertices at level l,l=1,2,…,k. A vertical T-vertex at level l(1⩽l⩽k−2)produces 11 non-deletable vertices at most, and produces 8 non-deletable vertices at most at levelk−1. There are about half of vertical T-vertices at level k, each of which produces one non-deletable vertex. So the new vertices inT′is about∑l=1k−211(2ln−4)+8(2k−1n−4)+0.5(2kn−4)=20n⋅2k−1−22n−44k+54. On the other hand, there are about∑l=1k11(2l−ln−2)+16=22n⋅2k−1−11n−6kold vertices. So we haveR≈20n⋅2k−1−44k22n⋅2k−1−6k. One can see that R approaches1011when k is large enough.The number of additional control points can be quite large and may lead the refined mesh be a tensor product mesh using the local refinement of T-splines (Sederberg et al., 2003). So here we will give another ratioR′=NTNto give an intuitional expression of how big the refinement region inT′, where N is the total number of new vertices inT′, and TN is the total number of vertices in the corresponding tensor product mesh. For the case in Fig. 11(a), the ratio isR′=4k(5+2k)2⩽15+k. For the case in Fig. 11(b), we haveR′=7k−1(6+3k)2⩽736+9k. For the case in Fig. 11(c), there are(2k+1n+4k+5)(2kn+2k+4)vertices in the corresponding tensor product mesh, so the ratioR′⩽12.5n2k+52k22k+1n2+2k(8k+13)n⩽12.5n2k+1n2+(8k+13)n. For the case in Fig. 11(d), there are(2kn+1)2vertices in the corresponding tensor product mesh, so the ratioR′⩽20n2k−1−44k(2kn+1)2⩽20n(2k+1n2+4n).The above results provide upper bounds for the ratio R andR′. In practice, the ratio is much smaller as shown in Fig. 11.Next we briefly discuss the supports of Modified T-spline basis functions. Suppose that T is a hierarchical T-mesh and the level differences between adjacent cells are at most one. Denote the corresponding tensor product mesh of T at level l byTl. Let v be a vertex at level l, then the support of Modified T-spline basis function at v is contained in anm×nrectangular mesh grid G atTl−1, wherem,n⩽3. Fig. 12shows the supports of the Modified T-spline basis functions at four verticesv1,v2,v3,v4, wherev1is in level 3,v2andv3are in level 2, andv4is in level 1.For a given T-mesh T, we have constructed a set of blending functions{Bi(s,t)}i=1n, where n is the number of vertices in T. The constructed blending functions have the following nice properties.Theorem 3.3The blending functions{Bi(s,t)}i=1nconstructed in Section3.2have the following properties:•C2continuity:Bi(s,t)isC2continuous over T,i=1,2,…,n.Non-negativity:Bi(s,t)⩾0,i=1,2,…,n.Partition of unity:∑i=1nBi(s,t)≡1.Linear independence:Bi(s,t),i=1,2,…,n, are linearly independent.Compact support:Bi(s,t)has compact support.ProofWe only prove that{Bi(s,t)}i=1nare linearly independent and form a partition of unity. We adopt the notations as in Section 3.2.Assume the extended T-meshT′has m (m>n) vertices. By Lemma 3.2, the T-spline blending functions{Ti(s,t)}i=1moverT′are linearly independent and form a partition of unity.Without loss of generality, letv1,v2,…,vnbe the vertices in T andvn+1,…,vmbe the new vertices. By the construction process of the blending functions{Bi(s,t)}i=1n,(9)(B1(s,t)B2(s,t)⋮Bn(s,t))=(1000c1,n+1⋯c1m010⋮c2,n+1⋯c2m00⋱0⋯⋯⋯0001cn,n+1⋯cnm)(T1(s,t)T2(s,t)⋮Tm(s,t))=M(T1,T2,…,Tm)Twhere∑i=1ncij=1,j=n+1,…,m.Obviously, the matrix M in (9) has full rank, and the column sums of M are all one. By Lemma 2.1,{Bi(s,t)}i=1nare linearly independent and form a partition of unity. The lemma is thus proved. □Remark 3.2In the following, we call the blending functions{Bi(s,t)}i=1nbasis functions over a T-mesh.Fig. 13compares a Modified T-spline function and a T-spline function over a T-mesh. In both figures (a) and (b), the control coefficients corresponding to the vertices marked by orange circles are taken as one while others are taken as zero. So the functions are actually the sum of the blending functions defined over the vertices labeled with orange circles. Figs. 13(a) and (b) depict the shapes of the Modified T-spline function and T-spline function respectively. It can be seen that the Modified T-spline looks more fair than the T-spline.LetS=span{Bi(s,t)}i=1nbe the Modified T-spline space defined over T-mesh T, whereBi(s,t)are the basis functions defined over T. For a given continuous functionf(s,t), we would like to know the approximation error of f fromS.In this section, we assume that T is a hierarchical T-mesh such that for any two neighboring cells in T, the level difference is at most one. Ω is the rectangular parameter domain that is occupied by T.Ωlis the parametric domain that consists of all the cells in level l.hlis the maximum length of the cells in level l.Theorem 3.4For any continuous functionf∈C(Ω), there exists a Modified T-spline functiong(s,t)∈Ssuch that(10)|f(s,t)−g(s,t)|⩽Cw(f,hl),(s,t)∈Ωl.Herew(f,h)is the modulus of continuity of f, that is,w(f,h)=max‖x−y‖2⩽h|f(x)−f(y)|. C is a constant which is independent of the mesh T.ProofFor any function f, defineAf(s,t)=∑i=1nf(ξi,ηi)Bi(s,t),where(ξi,ηi)are the coordinates of the vertex in T corresponding to the basis functionBi(s,t).Letθ⊂Ωlbe a cell in level l. For any(sˆ,tˆ)∈θ, we havef(sˆ,tˆ)−Af(sˆ,tˆ)=f(sˆ,tˆ)−∑i∈Kf(ξi,ηi)Bi(sˆ,tˆ)=∑i∈K[f(sˆ,tˆ)−f(ξi,ηi)]Bi(sˆ,tˆ)⩽maxi∈K|f(sˆ,tˆ)−f(ξi,ηi)|by the partition of unity of basis functions. HereK={i|Bi(sˆ,tˆ)≠0,1⩽i⩽n}.Now suppose θ is contained in a cellθ′at levell−1. Denote the corresponding tensor product mesh of T at levell−1asTl−1. Then there is a3×3rectangular mesh grid G inTl−1whose central cell isθ′, and the B-spline basis functions at the vertices of G do not vanish in θ. If G doesnʼt contain new vertices ofT′(extended T-mesh of T), then{(ξi,ηi)|i∈K}⊂G, somaxi∈K|f(sˆ,tˆ)−f(ξi,ηi)|⩽w(f,32hl−1)⩽(32+1)w(f,hl−1).For a hierarchical T-mesh, we generally havehl⩾hl−1/2. Therefore(11)|f(sˆ,tˆ)−Af(sˆ,tˆ)|⩽(32+1)w(f,hl−1)⩽2(32+1)w(f,hl).When G contains new vertices ofT′, then there exist Modified T-spline basis functions outside of G whose supports contain θ. So we have to enlarge G. Such changes only influence the const C in (10). Fortunately, according to the distribution process, if the level difference between adjacent cells is at most one, G does not need to be enlarged.  □Since Modified T-spline basis functions{Bi(s,t)}i=1nare linear combinations of the T-spline functions{Ti(s,t)}i=1m, and by knot insertion, the T-spline functions{Ti(s,t)}i=1mare linear combinations of the TP B-spline basis functions{Ni(s,t)}i=1l, so{Bi(s,t)}i=1nare linear combinations of{Ni(s,t)}i=1l. In matrix form,(B1,…,Bn)T=M(T1,…,Tm)T,(T1,…,Tm)T=L(N1,…,Nl)T.Thus(B1,…,Bn)T=ML(N1,…,Nl)T.Suppose we have a Modified T-spline surfaceS(s,t)=∑i=1nPiBi(s,t)=(P1,…,Pn)(B1,…,Bn)T,then it can be converted into a TP B-spline surface:S(s,t)=∑i=1lQiNi(s,t)=(Q1,…,Ql)(N1,…,Nl)T,where(Q1,…,Ql)=(P1,…,Pm)ML.This conversion makes it easy for Modified T-splines to be conveniently imported into the current surface modeling system. Fig. 14shows the conversion results of the Modified T-spline surface. Here the curves on the surfaces in column (b) are the images of the T-mesh, and the curves on the surface in column (c) are the images of tensor product mesh.Suppose we are given an open mesh model with verticesPi,i=1,2,…,N, in 3D space, and their corresponding parameter values(si,ti),i=1,2,…,N, obtained from some parameterization of the mesh (we use the method in Floater, 1997, in the current paper). The parameter domain is assumed to be[0,1]×[0,1].The surface fitting scheme repeats the following steps 2 and 3 until the fitting error in each cell is less than some tolerance ε.1.Construct a uniform tensor product meshT0as the initial mesh. Setk=0.Solve a least square fitting problems on the kth level meshTkto find a Modified T-spline surfaceSk(s,t)to fit the given mesh model.Search for the cells of the T-meshTkwhose fitting errors are greater than ε, then split these cells into four sub-cells to obtain a new meshTk+1. The fitting error over a cell s is defined to bemax(si,ti)∈s‖Pi−Sk(si,ti)‖. Setk:=k+1.Fig. 15illustrates three examples for fitting open meshes with Modified T-splines, and Table 1shows the statistic data including the number points/faces of the mesh models, the number of control points of the fitting spline surfaces and the fitting level.The surface fitting scheme provided in the previous subsections can be easily adapted to approximate a NURBS model with a Modified T-spline surface. We illustrate two examples as shown in Figs. 16 and 17. In each example, the approximation error ε and the number of control points in the approximating Modified T-spline are provided. Here the control nets of NURBS surface are displayed in bright green, and the one of the Modified T-splines are in pink. From the examples, it can be seen that there is a considerable reduction of control points of Modified T-splines compared with NURBS representations.

@&#CONCLUSIONS@&#
This paper proposes a new local refinement splines called Modified T-splines. The basic idea is to construct a set of basis functions over a T-mesh which have good properties such as non-negativity, partition of unity and compact support. Due to the properties of the basis functions, Modified T-splines inherit many good properties of current local refinement splines, and thus should be useful both in geometric modeling and isogeometric analysis.There are a few problems worthy of further investigation. First, the local refinement algorithm is crucial in adaptive modeling and analysis of splines. We will discuss the local refinement algorithm for Modified T-splines. Second, in the current construction, the Modified T-splines areC2continuous globally. We will investigate the possibility to insert multiple knots such thatC0orC1continuity could be achieved at the knot lines, i.e., we will consider Modified T-splines over μ-extended box partitions (Dokken et al., 2013). Finally, we will investigate further applications of Modified T-splines in geometric modeling and isogeometric analysis.