@&#MAIN-TITLE@&#
Reliable numerical treatment of nonlinear singular Flierl–Petviashivili equations for unbounded domain using ANN, GAs, and SQP

@&#HIGHLIGHTS@&#
Detail flow diagram of processes for obtaining the proposed solution of FP equation using neural networks trained with hybrid approach GA-SQP.Novel stochastic solver for boundary value problems of Flierl–Petvishivile equations.Strength of model is to avoid singularity and satisfy the conditions for unbounded domain.The accuracy of the approach is validated on three variants of two nonlinear problems.Detail simulations are performed to evaluate the reliability and effectiveness.

@&#KEYPHRASES@&#
Flierl–Petviashivili problem,Nonlinear singular systems,Artificial neural networks,Genetic algorithm,Sequential quadratic programming,Memetic computing,

@&#ABSTRACT@&#
In this paper, a novel intelligent computational approach is developed for finding the solution of nonlinear singular system governed by boundary value problems of Flierl–Petviashivili equations using artificial neural networks optimized with genetic algorithms, sequential quadratic programming technique, and their combinations. The competency of artificial neural network for universal function approximation is exploited in formulation of mathematical modelling of the equation based on an unsupervised error with specialty of satisfying boundary conditions at infinity. The training of the weights of the networks is carried out with memetic computing based on genetic algorithm used as a tool for reliable global search method, hybridized with sequential quadratic programming technique used as a tool for rapid local convergence. The proposed scheme is evaluated on three variants of the two boundary problems by taking different values of nonlinearity operators and constant coefficients. The reliability and effectiveness of the design approaches are validated through the results of statistical analyses based on sufficient large number of independent runs in terms of accuracy, convergence, and computational complexity. Comparative studies of the proposed results are made with state of the art analytical solvers, which show a good agreement mostly and even better in few cases as well. The intrinsic worth of the schemes is simplicity in the concept, ease in implementation, to avoid singularity at origin, to deal with strong nonlinearity effectively, and their ability to handle exactly traditional initial conditions along with boundary condition at infinity.

@&#INTRODUCTION@&#
In this study, the stochastic numerical techniques are exploited for solving nonlinear Flierl–Petviashivili (FP) equation using artificial neural networks (ANN) optimized with global and local search methodologies. The governing FP equation with initial and boundary conditions can be given as [1–3]:(1)d2udt2+rtdudt−un−un+1=0,u(0)=α,du(0)dt=u(∞)=0,where n is nonlinear operator, r and α are the constants. The FP equation belongs to the class of well-known singular system represented with nonlinear Emden–Fowler equation. These systems are used broadly in modeling the thermal behavior of spherical cloud of the gas acting under the mutual attraction of its molecules [4,5], theory of stellar structure, thermal behavior of a spherical cloud of gas, isothermal gas sphere, and theory of thermionic currents [6–8]. There is a lot of interest in the subject and many authors are putting efforts to solve this problem even recently [9,10].The stochastic numerical solvers, based on feed forward ANN models with supervised and unsupervised learning have been used extensively to solve linear and nonlinear differential equations [11–16]. For instance, few applications of these methodologies include Van der Pol nonlinear oscillators [17], Troesch's problem arising in plasma physics [18,19], initial value problems of Emden Fowler equations [20], strong nonlinear Painlevé Transcendent one [21], nonlinear Bratu's problems arising in fuel ignition model in combustion theory [22,23], variants of Magnetohydrodynamic (MHD) Jeffery–Hamel Flow problems [24,25], thin film flow problems [26], etc. A review article [27] that provides the summary of various research articles published by numerous researchers mostly within the last decade to get a better knowledge about the present research scenario. Recently, advanced versions of these solvers based on neural networks optimized with evolutionary and swarm intelligence techniques have been reported with the capacity to solve linear and nonlinear fractional differential equations effectively [28]. Moreover, these algorithms have much strengthen their intrinsic worth with applicability to solve the well-known fractional order systems in applied science and technology governed with Riccati and Bagley–Torvik fractional differential equations [29–31]. These are the motivation factors for authors to investigate in the field of stochastic numerical solvers and formulate an alternate memetic methodology based on genetic algorithm optimized with sequential quadratic programming to handle strong nonlinearity of FP equations along with singularity at origin and avoid divergence in unbounded input domain effectively. The aim of this study is to provide such alternate, accurate, reliable, effective, and stable artificial intelligence framework to tackle the great challenges associated with FP equation.In this article, the strength of ANN is exploited for mathematical modelling of FP equation by formulation of objective or fitness function in an unsupervised manner. The constructed neural network models are satisfying exactly the initial and boundary conditions associated with FP equation, in particularly, for the large unbounded inputs domain. The training of the weights of neural networks is carried out with memetic computing approach in which genetic algorithm is used as a tool for global search optimizer and then local search is performed with the help of efficient optimizer based on active sequential quadratic programming (SQP) algorithm. The proposed schemes are evaluated on three variants of two initial value problems of FP equation. Comparative studies of the proposed results are made with state-of-the-art analytical solvers, including adomian decomposition methods (ADMs) [32], variational iterational methods (VIMs) [33,34], homotopy perturbation methods (HPMs) [35], and differential transformed methods (DTMs) [36].In this section, mathematical model of FP equation is presented based on feed forward ANN along with construction of merit or fitness evaluation function in an unsupervised manner.Traditionally following continuous mapping in neural networks methodology is employed for approximating the solution u(t), and its kth order derivative dku/dtkof differential Eq. [37–39] and given respectively as:(2)uˆ(t)=∑i=1maif(wit+bi)(3)dkuˆdtk=∑i=1maidkdtkf(wit+bi)where ai, wi, and biare real-valued bounded adaptive parameters, i.e., weights, m is the number of neurons and f is the activation function. In case of Flierl–Petviashivili problem, the networks for solution û(t), first dû/dt, and second d2û/dt2derivatives are developed using log-sigmoid transfer function f(t)=1/(1+e-t), its first and second derivative, respectively. The mathematical expressions for these networks using Eqs. (2) and (3) are given as:(4)uˆ(t)=∑i=1maif(wit+bi)=∑i=1mai11+e−wit+bi(5)duˆdt=∑i=1maiddtf(wit+bi)=∑i=1maiwie−(wit+bi)1+e−(wit+bi)2(6)d2uˆdt2=∑i=1maid2dt2f(wit+bi)=∑i=1maiwi22e−2(wit+bi)1+e−(wit+bi)3−e−(wit+bi)1+e−(wit+bi)2These networks can arbitrary combine to develop an approximate model of the differential Eq. (1) as:(7)d2uˆdt2+rtduˆdt−uˆn−uˆn+1=0,where û(t), dû/dt, and second d2û/dt2are the networks given in Eqs. (4,5,6), respectively. The networks for approximate solution û(t) and first derivative of the equation have to also satisfy initial and boundary conditions given as:(8)uˆ(0)=α,duˆ(0)dt=0,uˆ(∞)=0Now the intention is to find the weights, i.e., ai, wi, and bifor i=1, 2,…, m for these networks, such that Eq. (7) is satisfied along with the constraints given in Eq. (8). However, the constraints of weights for boundary condition in case of unbounded inputs domain are impossible to handle with such modeling. Therefore, modified versions of neural networks are proposed, which are capable to deal with initial and boundary conditions. These updated neural networks for solutions u(t), and its kth order derivative dku/dtkof differential equations are given, respectively, as [33]:(9)u˜(t)=A(t)+B(t)uˆ(t)(10)dku˜dtk=dkAdtk+dkBdtkuˆ(t)+B(t)dkuˆdtkwhere û(t) and dkû/dtkare the networks given in Eqs. (2) and (3), respectively. A(t) and B(t) are known functions of inputs t. Accordingly, in case of Flierl–Petviashivili equation, mathematical expression of the networks for solution u(t), first du/dt, and second d2u/dt2using Eqs. (9) and (10) are given, respectively, as:(11)u˜(t)=A(t)+B(t)uˆ(t)(12)du˜dt=dAdt+dBdtuˆ(t)+B(t)duˆdt(13)d2u˜dt2=d2Adt2+d2Bdt2uˆ(t)+2dBdtduˆdt+B(t)d2uˆdt2With suitable functions A(t) and B(t), the updated neural networks exactly satisfy the initial and boundary conditions. In particularly, the initial and boundary conditions of Flierl–Petviashivili equation are satisfied by taking these functions as:(14)A(t)=α+t21+t3,B(t)=t21+t3Accordingly, mathematical expression of the networks for solution u(t), first du/dt, and second d2u/dt2derivatives using Eq. (14) and its derivatives are given, respectively, as:(15)u˜(t)=α+t21+t3+t21+t3uˆ(t)(16)du˜dt=−3t2α+t21+t32+2t1+t3−3t41+t32uˆ(t)+2t1+t3uˆ(t)+t21+t3duˆdt(17)d2u˜dt2=−12t31+t32+21+t3+α+t218t41+t33−6t1+t32+−12t31+t32+21+t3+t218t41+t33−6t1+t32uˆ(t)+2−3t41+t32+2t1+t3duˆdt+t21+t3d2uˆdt2These networks as given in Eqs. (15,16,17) can arbitrary combine to construct a modified model of the differential Eq. (1) that possesses the ability to cater the initial and boundary conditions as provided in Eq. (8). The neural network architecture for Flierl–Petviashivili equation is shown in Fig. 1.The fitness evaluation or merit function is developed using these networks in an unsupervised manner and given by the following expression as:(18)ε=1M+1∑m=0Mtmd2u˜mdt2+rdu˜mdt−tmu˜mn−tmu˜mn+12,t∈(0,T),where M=T/h, ũm=ũ(tm), and tm=mh. The networks of ũ(t), dũ/dt, and d2ũ/dt2are given in Eqs. (15,16,17), respectively. M is the total number of grid points in entire domain [0,T], i.e., inputs t ∈ [t0=0, t1, t2,…,tM=T] with a step size of h. It is quite obvious that with the availability of weights for the neural networks such that the fitness evaluation function ɛ as given in (18) approaches zero, it means that the approximate solution ũ(t) is overlapping the exact or reference solution u(t).In this section, a brief description of the optimization methods GA, SQP, and GA-SQP algorithms used for training of design parameters, i.e., weights of neural networks is presented. The generic flow diagrams, procedural steps, and necessary parameter settings for these methods are also given here.The SQP algorithm is one of the nonlinear programming techniques used extensively by the research community for constraints optimization problems. The strength of the scheme is well-established in terms of efficiency, accuracy, and percentage of successful solutions over a large number of test problems. Nocedal and Wright [40] have excellently provided a brief introduction and description of SQP algorithms. The detailed history, mathematical formulation, importance and application related with SQP methods can be seen in [41,42]. The SQP methods have been applied on broad disciplines of engineering and applied sciences from the day of their birth till today for instance. A few recently published article addressed with SQP technique are referred for interested readers in [43,44].Genetic algorithms (GAs) belong to the class of evolutionary computing techniques that are inspired with natural evolution processes. Holland in 1975 was pioneer to introduce GAs in his research studies to mimic a simple picture of natural selection [45]. The performance of the GAs is dependent on the diversity of initial population and reproduction mechanism for the population based on GAs operators, such as selection, crossover, and mutations. Standard working of GAs for optimal solution search of the optimization problem is made through suitable selection of the fittest chromosomes or individual to next generation, survival of good genes in recombination operation, and seeding of new genetic material in mutation. GAs-based global search algorithms has been extensively used by research community due to its well-known strength of controlling the robustness, avoid premature local convergence, applicability in divergent environment, efficiency, and effectiveness. For instance, few recent applications addressed with GAs are optimization of fitting Sovova's mass transfer model [46], chess rating systems [47], optimization of shapes and settings of high lift systems [48], optimal design of a long span bridge, and a greenhouse roof truss structure [49], drag reduction design for active flow control of airfoil [50], and so on.In this study, GA, SQP, and GA-SQP techniques are used for training of the weights of the neural networks by optimizing the fitness function ɛ as given in (18). Inbuilt formulation of MATLAB is used for GA and SQP algorithms. The generic flow diagram of the proposed GA-SQP techniques is shown in Fig. 2from defining the FP problem to proposed solutions.Details of the procedural steps for finding the design parameter of neural networks for GA-SQP hybrid methods are given as follows:Step 1:Initialization and program parameters:initial population is formulated by randomly generated bounded real values to represent chromosomes or individuals. The number of elements in each chromosome is equal to the number of design parameters or weights in unsupervised neural network model of FP equation. The generic form of chromosomes is represented as:W={a,w,b}={a=a1,a2,...,am,w=w1,w2,...wm,b=b1,b2,...bm},where m is the number of neurons in the neural networks. The important values of program parameters used for the optimizer GAs are given in Table 1[51]. These settings are made with care and slight change in these parameters may result in premature convergence of the algorithm, e.g., appropriate value of migration fractions that specifies how many individuals move between subpopulations with fractions stands for smaller of the subpopulations that move.Step 2:Tool initialization: initialize the values of the parameters of GA tools by using MATLAB built in function for options, i.e., ‘gaoptimset’ as per settings listed in Table 1.Step 3:Fitness evaluation:calculate the value of the fitness in case of each individual of the population using the relations given in Eq. (18).Step 4:Termination criteria: terminate the process of finding the weight of neural networks, if any of the following criteria fulfilled:•Predefined value of function evaluation (FunEvals) is achieved, i.e. FunEvals is equal to maximum FunEvals (MaxFunEvals) divided by 2. While the values of maximum time allowed (TimeLimit), function tolerance (TolFun), constraints tolerance (TolCon), number of generation over, which cumulative change in fitness value is less than Tolfun (StallGenLimit), or maximum time over which change in fitness value is less than zero (StallTimeLimit), are set such that the algorithm stops only for FunEvals and these values are listed in Table 1.If termination criterion is fulfilled, then go to step 7.Step 5:Ranking:rank the individuals of the population on the basis of fitness values ɛ.Step 6:Reproduction:reproduce the population for the next generation using genetic operators of crossover, selection, and mutation with the help of functions as mentioned in Table 1. Elitism is also incorporated for reproduction as per setting given in Table 1. Go to step 3.Step 7:Storage1:store the value of final weights of individual with best fitness, fitness achieved, and time taken for execution of GA algorithm.Step 8:Refinement:the SQP local search algorithm is incorporated for speedy optimization by taking the best individual of GAs as a start point of the algorithm. MATLAB built in environment is used for SQP algorithm as per following procedure:(a)Program initialization: MATLAB built-in function for constraints optimization problem is invoked i.e., ‘fmincon’ for optimization of each neural network using algorithm SQP with initial weights that are the best individuals of GAs. Bounds and other declarations for program initialization are listed in Table 2.Tool initialization:initialize the values of the SQP parameters for options using ‘optimset’ function with settings as listed in Table 2.Evaluation of fitness: calculate the value of objective or fitness function, ɛ, as given in the Eq. (18).Termination criteria: terminate the iterative process of updating the weights of neural networks after executing predefined number of FunEvals, i.e., MaxFunEvals divided by 2. While the values of TolFun, X-tolerance (TolX), and TolCon are set such that the algorithm stops only for FunEvals and setting of these parameter is also given in Table 1.If a termination criterion is fulfilled, then go to step 9.Updating of weights: step increment in SQP procedure is made and go to step 8(c).Step 9:Storage2: store the values for the final optimal weight vectors, fitness value, and execution time taken for this run of algorithm.Step 10:Statistical analysis: repeat step 1–9 for sufficient large number of independent runs of GA-SQP hybrid approach for finding optimal weights of neural networks in order to have an effective and reliable statistical analysis.While the pseudo-code for proposed algorithm based on GA-SQP used for training of weights of neural networks is given below:Pseudo code of proposed method GA-SQP algorithmData: Set the control parameter of GAsMaxFunEvals: predefine number of maximum fitness evaluations, i.e., 400,000FitEvals: predefine number of fitness evaluations, i.e., FitEvals=MaxFunEvals/2=200,000Start: Genetic Algorithms (GA)Inputs:Size of population, i.e., αRate of elitism, i.e., β,Output: candidate solutionWof GABegin//InitializationRandomly generate α chromosomes or feasible solutionsSet of chromosomes, i.e., initial population, Pop.Set values for Fitness → 0, TolFun → 0, TolCon → 0, TimeLimit → ∞, StallTimeLimit → ∞, and StallGenLimit → ∞, such that GAs termination criteria never fulfilled expect FunEvalsSet number of evaluation equation to zero, i.e., NEvals → 0While {NEvals is less than or equal to FitEvals} do % FitEvals=MaxFitEvals/2//Fitness evaluation stepEvaluate the fitness ɛ of the individual of population using Eq. (18) withANN networks given in Eqs. (15,16,17)Repeat for α of PopNEvals=NEval+α//Ranking stepRank each Individual on minimum value of fitness ɛ//Reproduction step through Selection, crossover, mutations, and Elitism operatorsElitism based, i.e., EliteCount=α×β, i.e., 4 with best ranking of Pop;Selection by invoking ‘@selectionuniform’ routineCrossover by invoking ‘@crossoverheuristic’ routineMutation by invoking ‘@mutationadaptfeasible’ routineMigration interval equal to 20Update the Pop and proceed the algorithm form fitness evaluation step//Storage step of GAStore the global best individual W, and timeEnd GasStart SQP//Initialization stepInitialize SQP algorithm with global best W of GAsSet the values of Fitness → 0, TolFun → 0, TolCon → 0, and TolX → 0, such that algorithm never stop for these termination criteria.Set the values of number of evaluation, i.e., NEvals → 0,While {NEvals is less than or equal to FitEvals} do//Fitness calculations stepEvaluate the fitness of the W using Eq. (18) with ANN networks given in Eqs. (15,16,17)NEvals=NEvals +1//Update stepInvoking ‘fmincon’ routine with algorithm SQPUpdate W for each cycle of SQP procedure.Go to fitness calculation step//Storage step of GA-SQPThe final weights W of GA-SQP along with its fitness and time consumedEnd SQPRepeat the GA-SQP procedure for 100 runs to generate large data set for reliable statisticsThe proposed schemes based on neural networks optimized with GA, SQP, and GA-SQP techniques are investigated on three variants of two problems for FP Eq. (1) by taking the different values for nonlinearity operator n and constant coefficient r. Results are presented here for the designed approaches along with reported results of state of the art analytical solvers in order to compare the performance.In this study, three variants of FP Eq. (1) has been evaluated using different values of nonlinearity operator n and with no change in values of constant coefficient r. In these cases, the value of r=1 is taken and FP Eq. (1) for this problem is given as:(19)d2udx2+1xdudx−un−un+1=0,r=1,n≥1,u(0)=α,du(0)dx=u(∞)=0,The three variants of Eq. (19) are investigated by using values of n=1, 3, and 5, respectively. The exact solution of the equation for any of the cases given above is not known, however, the approximate analytical solution of the equation is proposed in the literature using adomian decomposition method [32], variational iteration method with He's Polynomials (VIMHP) [33], homotopy perturbation method [35], variational iteration method with adomian's Polynomials [34], He's Polynomials and Pade approximants [52], and iterative algorithm [53]. All of these solvers derived the same analytical solution for all possible values of n≥1 and given as:(20)uADM(t)=α+αn+αn+1t24+αn+αn+1nαn+(n+1)αn+1t464α+αn+αn+12n(3n−1α2n+2n3n+1α2n+1+3n+1n+1α2n+2t62304α2+αn+αn+1n18n2−29n+12α3n+n54n2−33n+7α3n+1+18n2+7n+13nα3n+2+n+1α3n+3t8147456α3The reported solution of Eq. (19) with the help of differential transformed method (DTM) [34], given for case n=1 is written as:(21)uDTM(t)=α+α4+α24t2+α64+3α264+α332t4+α2304+α2256+α3144+α4288t6+α147456+29α2147456+53α373728+65α473728+13α536864t8+α14745600+11α21638400+7α3147456+161α41474530+21α5204800+7α6204800t10+α2123366400+13α278643200+2399α31061683200+469α453084160+2611α5176947200+5957α6530841600+851α7265420800t12+α4161798144400+17α25549064192+7α384934656+2233α44246732800+497α5353894400+217α6117964800+13α7110559200+13α84423800t14+α106542032486400+532α211838003609600+25441α310654203248640+3331α4135895449600+1801α518119393280+10913α654358179840+29377α7135895449600+1199α810066329600+1199α845298483200t16The solution given in Eqs. (20) and (21) are used as a reference analytical solution to compare the results of proposed scheme.The proposed methodology is applied to solve the Eq. (19) by taking 10 number of neurons in neural networks based on a total of 30 number of design parameters or weights W (a, w, b). The fitness function ɛ is developed for Eq. (19) for the inputs t ∈ [0, 1] with a step size of 0.1 and written as:(22)ε=110∑m=110tmd2u˜mdt2+du˜mdt−tmu˜mn−tmu˜mn+12forn=13and5Now the requirement is to look for trained weights of neural networks such that the value of fitness function, ɛ → 0, and accordingly the use these weights in order to find out approximate solution that approaches to the exact solution, ũ→ u. The training of weights the networks has been performed with GA, SQP, and GA-SQP algorithms using the values of the parameter as listed in Tables 1 and 2. The approximate solutions ũGA, ũSQP, and ũGA-SQP are derived using one set of optimal weights with fitness values 1.9010×10−05, 6.6578×10−09, and 1.4626×10−10, respectively, for case n=1 of the problem and resulting relations are written as:(23)u˜GAt=1+t21+t3+t21+t3−2.402388916751551+e−−1.06872204357327t+1.94099096127649+3.722988598102111+e−4.55345828743448t−6.83684045276267+−1.706936097159991+e−0.56784580441825t+2.37369970667009+0.207598868559771+e−1.42764017536515t−0.37296599522721+2.381304341284421+e−1.68692050004647t−2.52308449390609+0.146801542423901+e−1.07790936284352t−17.6577602153888+1.880518877230971+e−−2.31867384762647t−2.45756319398239+−2.125265948716961+e−1.45959592951732t+1.67309746776209+1.249424587732011+e−2.15057845011958t−2.06363780209641+4.697771694574861+e−3.54096487776642t+2.64467220908223(24)u˜SQPt=1+t21+t3+t21+t3−0.525167514183651+e−0.5288365935559t+2.10187576637863+4.079407237150571+e−−4.57553232386885t−3.17834952857473+−3.746336512335281+e−−4.28049449724846t−2.52431038742684+0.414426245270881+e−4.7404098255882t+2.13939471908835+5.384760622598681+e−4.62102954796592t−7.95946141380794+0.726462663675671+e−3.64620904133651t+3.06545374005808+−0.924719879122371+e−4.51959566818147t+1.41439550136446+−3.731387156905841+e−−1.48983847682144t−2.00841694105043+5.625396381017661+e−2.19028514135266t−3.32562278025185+4.380574687721061+e−2.27739788235707t−6.66045032415234(25)u˜GA−SQPt=1+t21+t3+t21+t3−2.327227192611311+e−−2.40209822312481t−2.0056843195058+−2.390939417992481+e−2.00650204786373t−2.44927628004607+4.86805633039771+e−0.44662250440752t+4.71141979755899+4.979800309196551+e−2.48529761043065t−3.52852656776744+0.482081259986761+e−−1.8589668069155t−3.35757235611146+−2.591903876222681+e−1.56856512278906t+1.59799458565905+3.929470642615361+e−−2.10660347098601t−5.166557169016+7.481360730179991+e−4.52100658304767t−8.09072937369175+−29.98982285874211+e−−1.90799292214428t−5.49290204601944+−3.440948808402431+e−−1.47755352387519t+1.40416948212066One set of trained weights obtained using GA, SQP, and GA-SQP method with fitness values 7.8263×10−03, 1.7603×10−07, and 6.8728×10−09, respectively, for case n=3 and fitness value 3.0161×10−02‘, 3.3005×10−04, and 1.0618×10−03, respectively for case n=5 of the FP equation are shown in Fig. 3.The solutions determined ũGA, ũSQP, and ũGA-SQP for three variants of the problem using weights of Fig. 3a–c, respectively, in Eq. (15). Proposed results are shown in Fig. 4a–c, for inputs t ∈ [0,1] with a step size of 0.1 and for larger inputs span t ∈ [0,50] in Fig. 4d–f, respectively. The reference analytical solution uADM and uDTM obtained using Eqs (20) and (21), respectively, are also plotted in Fig. 4a–c. It is seen that the FP equation for n=1, the proposed solutions ũGA, ũSQP and, ũGA-SQP are overlapping with uADM solutions, while the solution ũSQP and ũGA-SQP still match closely with uADM results for n=3. Whereas, in case of FP equation for n=5, results are not comparable with uADM by all three proposed techniques. The proposed solutions ũGA, ũSQP and ũGA-SQP for all three variants of the FP Eq. (19) are satisfying exactly the boundary condition in cases of larger inputs as shown in Fig. 4d–f, respectively. In order to elaborate the difference in the results for n=1 case of the problem, the proposed results and the reference analytical solution are also tabulated in Table 3for inputs t ∈ [0,1] with a step size of 0.1. It is found that maximum value of absolute error from uDTM for ũGA, ũSQP and ũGA-SQP are 1.2699×10−04, 3.3336×10−06, and 4.9705×10−06, respectively, while for uADM is 2.2586×10−03. Approximate solutions are determined for 100 independent executions of all three algorithms and results in term of mean and min values of the solution are shown in Fig. 5for inputs t∈[0, 1] with step size of 0.1 in case of each variant of FP problems. Here, the min stands for the solution of the problem with weights obtained by GA-SQP algorithm with lowest values of fitness, i.e., the best results, while mean values represents average solution of the problem obtained based on 100 independent execution of GA-SQP algorithm to optimize the weights of differential equation ANNs. It is seen that the results obtained using GA, and SQP degraded significantly with increase in the value of nonlinearity parameter n, while the results of GA-SQP algorithm are relative more consistent from GA and SQP algorithm for both small and large values of n.The performance parameter based on root-mean-square (RMS) error sense is traditionally used to compare the accuracy of different algorithms. A figure of merit has been developed for the FP equation on the basis of residual error function M and it is given as:(26)M(t)=d2udt2+rtdudt−un−un+1,r=≥1,n≥1,Accordingly, root-mean-square error ɛRMS based on M is defined as follows:(27)εRMS=1K∑k=1KM(tk)2where, tkrepresents the input grid points on which the root-mean-square error is based. Smaller the values of M and ɛRMS, better is the approximate solution of the problem and vice versa. The values of M(t) are determined for all three variants of the problem by proposed schemes and results are given in Table 4for inputs t ∈ [0,1] with a step size of 0.1. It is seen that the values of M(t) lie in the range 10−03– 10−04, 10−01–10−02, and 10−01–10−02 for n=1, 3, and 5, respectively for neural networks optimized with GA, while for SQP the values lie in the range 10−04–10−06, 10−04–10−05, and 10−02–10−05, respectively. Similarly, for hybrid approach GA-SQP, the values of merit function lie in the range 10−05–10−07, 10−04–10−07, and 10−02–10−05 for n=1, 3, and 5, respectively. The values of root-mean-square error ɛRMS are also calculated for analytical solvers like ADM, DTM, as well as, proposed schemes and results are given in Table 5. The values of ɛRMS for n=1, 3, and 5 are of the order 10−03–10−05, 10−02–10−05, and 10−01–10−02, respectively, for proposed schemes, while for reference results of ADM these values are of the order 10+02–10−02. The value of ɛRMS for reported solution of DTM for n=1 case is 7.3291×10−05. It is found that with the increase in values of nonlinearity operator, the difficulty of the problem also increases and hence the accuracy of all the techniques decreases but relatively better results are obtained with the proposed solvers than the analytical solvers.In this case also, the three variants of FP Eq. (1) has been evaluated using different values of coefficient r and with no variation in the value of nonlinearity operator n. In this problem, the value of n=1 is taken and FP Eq. (1) for this problem is written as:(28)d2udt2+rtdudt−un−un+1=0,n=1,r≥2u(0)=α,du(0)dt=u(∞)=0,The three variants of Eq. (28) is investigated by using values of r=2, 3, and 4, respectively. The exact solution for this problem is also not known for any of the cases; however, the approximate analytical solution of the equation is reported in the literature using ADM [32] and DTM [36]. Both solvers derived the same approximate solution for all possible values of r≥1 and given as:(29)uADM(t)=α+αα+12r+1t2+αα+12α+18r+1r+3t4+αα+123r+5αα+1+r+A48r+12r+3r+5t6+αα+12α+143r+10αα+1+r+1384r+12r+3r+5r+7t8The proposed methodology is applied on the similar pattern as follows in the last case study, however, the fitness function ɛ is developed for this FP equation for the inputs t ∈ (0, 1] with a step size of 0.1 is written as:(30)ε=110∑m=110tmd2u˜mdx2+rdu˜mdx−tmu˜m1−tmu˜m22forr=2,3,and4The optimal weights vector of neural networks are searched with GA, SQP, and GA-SQP methods using the values of the parameters as given in Tables 1 and 2. The proposed solutions ũGA, ũSQP and ũGA-SQP are derived using one set of trained weights with fitness values 2.3401×10−05, 8.0859×10−10, and 1.2155×10−10, respectively, for r=2 of the FP equation and written as:(31)u˜GAt=1+t21+t3+t21+t3−0.736253573654641+e−1.85438158823033t+0.28456654202169+2.421358560149721+e−−0.63635135808496t+2.32849606690963+1.110453944053991+e−2.15674380363392t+1.8845169802776+1.291873472570211+e−0.44735262549715t+1.54864087840499+−3.287826339046761+e−−1.99477166471899t−1.19610266021604+−2.191755282055031+e−−2.66302527386367t+4.62148862087732+−0.186083294407871+e−−2.33740348339335t+2.12791917827263+0.93232149999641+e−3.2359131377961t−2.27299678993046+2.300730062137591+e−4.10727299580086t−5.85089208800615+−1.815753142704821+e−1.36759397382075t+1.49097672946841(32)u˜SQPt=1+t21+t3+t21+t3−7.459744245849231+e−3.11376579262825t+4.40757547088406+1.770784431385071+e−11.5601029922992t−2.44167674951239+−4.038609856288741+e−−8.58869578512057t+3.87403144844668+−6.762020532534941+e−−11.499580368846t−2.47321375975588+−12.54510786179071+e−−3.25502523042734t+5.64894845178716+−10.3400861311151+e−−13.697896329509t−6.7030938523108+5.837932643288081+e−1.35552752368069t−4.73462287557144+−1.522982349717151+e−−1.99242895249269t−2.6667342830223+4.374462835241371+e−−2.49944960285402t+3.6446854424885+6.410957254442521+e−1.6348831240002t−1.86558521944676(33)u˜GA-SQPt=1+t21+t3+t21+t33.696182537636491+e−2.18266706934235t−3.19882920208106+1.85169127806411+e−3.48889570123347t+28.8422097352471+1.043804240441551+e−−1.30010651512091t+0.15107138063473+4.366501447148641+e−4.15489062192069t−7.53613277675204+−4.036945085211951+e−−1.51548388286397t−0.8560004033087+−1.957156941610351+e−2.00482302537884t+0.96820466285211+−0.44568607090611+e−−1.28415907936628t−1.89823565405085+−1.006610711205631+e−−0.26063175110955t−1.47706491522506+0.065325127800391+e−6.12788986672879t+1.26375627901209+−0.968264531991961+e−−1.48342864372313t−0.30684647401914One set of optimal weights trained by using GA, SQP, and GA-SQP method with fitness values 3.8475×10−05, 4.0913×10−10, and 3.4016×10−10, respectively, for case r=3 and fitness value 9.3333×10−07‘, 5.8917×10−11, and 1.4116×10−10, respectively for case r=4 of the FP equation are shown are shown in Fig. 6.The solutions obtained ũGA, ũSQP, and ũGA-SQP for three variants of this problem using weights of Fig. 6a–c, respectively, in Eq. (15). Proposed solutions are plotted in Fig. 7a–c, for inputs t ∈ [0,1] with a step size of 0.1 and for larger inputs span t ∈ [0,50] in Fig. 7d–f, respectively. The reference analytical solutions uADM are calculated using Eq. (25) and plotted in Fig. 7a–c for r=2, 3, and 4, respectively. It is seen that the proposed solutions ũGA, ũSQP, and ũGA-SQP are overlapping with uADM solutions for all three variants of this FP equation and converge to zero for larger inputs to satisfy the boundary condition at infinity. The proposed results and analytic solution for r=2 case of the problem are also tabulated in Table 6for inputs t ∈ [0,1] with a step size of 0.1. It is found that maximum value of absolute error from uADM for ũGA, ũSQP, and ũGA-SQP are 9.9324×10−05, 8.6709×10−05, and 8.8837×10−05, respectively. Approximate solutions are also determined for 100 independent executions of all three algorithms for this problem as well and results based on mean and min values are plotted in Fig. 8for each variant of FP problems. It is seen that the results obtained using GA, SQP, and GA-SQP algorithms are slightly effective with increase and decrease in the values of parameter r. Moreover, the results due to GA-SQP algorithm are more consistent and accurate from rest of the techniques.The values of merit function M(t) as given in Eq. (31) and root-mean-square error ɛRMS as given in Eq. (32) are calculated for each case of the problem by proposed schemes and are presented in Tables 7 and 8, respectively, based on inputs x ∈ [0,1] with a step size of 0.1. It is seen that results of GA, SQP, and GA-SQP methods in terms of M(t) lie in the range 10−03–10−04, 10−03–10−07, and 10−05–10−07, respectively. The values of ɛRMS for r=2, 3, and 4 are of the order 10−03–10−05, 10−03–10−05, and 10−04–10−06 for proposed solvers as listed in Table 8, while for reference results of ADM, the values ɛRMS are of the order 10−03–10−04. It is inferred that on the basis of values for RMS error ɛRMS, the accuracy of the proposed solvers is better than ADM results in all three variants of the problem.In case of both case studies for each variant of FP problems, the comparison of the performance of three adaptive strategies can be summarized as following: GA provides the results with better convergence but with low accuracy. The performance of the algorithm to improve the results rapidly decreased considerably after sufficient large number of fitness evaluations. While SQP algorithms alone provide results with better computational time and accuracy from GA, but it has problem of trapping in local minima rather more frequently. It means that few runs of the SQP algorithm could not provide accurate results and its performance is subjected to availability of good or bias initial guess or start point of the algorithm. Whereas, GA-SQP algorithm taking best results of GAs (but with half number of fitness evaluations) as a start point of the SQP algorithm (runs for half number of fitness evaluations), which provides results with better accuracy and consistency from rest of the algorithms.The analysis of the results of the proposed schemes are conducted for sufficient large number of independent runs in order to draw meaningful, concrete, and viable inferences on the performance of the algorithms. Therefore, the comparative study is presented here based on 100 numbers of independent runs of each optimizer to train the neural networks in order to have explicable picture of the reliability and effectiveness [54].The accuracy and convergence of the design approaches have been evaluated based on hundred independent runs of each algorithm to find the solution of all three cases of both FP equations. The values of fitness ɛ and RMS error ɛRMS are plotted against the number of independent runs (run with distinct initial vector weight generated randomly that act as a start point of the optimizers) of proposed schemes in Figs. 9 and 10for each case of FP problem 1 and 2, respectively. The results are shown graphically in the figures on semilog scale in order to elaborate the small variations in the values. It can be seen that values of the fitness and RMS error ɛRMS decreases with increase in the value of nonlinearity factor, while no such variation is observed by increasing the value of constant coefficient.The reliability of the proposed models is examined based on percentage of convergent runs, i.e., a run that achieves predefined criteria of fitness value ɛ and ɛRMS values. Results of convergence analyses based on hundred independent executions of proposed schemes are listed in Table 9a, It is seen that based on fitness criteria, i.e., ɛ≤10−05, average convergence rate taken for three cases by GA, SQP, and GA-SQP are 4.33, 83.33, and 96.33%, respectively, for FP equation in case study one and 21.66, 99.00, and 99.66%, respectively, for FP equation in case study two. Whereas, on the basis of RMS error criteria, ɛRMS≤10−03, the average convergence rate achieved for three cases by GA, SQP, and GA-SQP are 3.00, 83.00, and 96.00%, respectively, for FP equation in case study one and 15.00, 99.00, and 99.66%, respectively, for FP equation in case study two. Null Hypothesis Significance Testing (NHST) [55,56] is performed using MATLAB built-in function ‘t-test’, at 5 and 1% significance level. Null hypothesis are defined based on the mean value of fitness that should not lie between 0.05 and 0.01. Null hypothesis indicates that the spread in the mean value of fitness for multiple independent runs of the algorithms is not less 5 and 1%. The rejection of the null hypothesis at 5 and 1% significance level means that algorithms are 95 and 99% certain that the mean values lie in the confidence interval, respectively. The detail results of NHST are given in Table 9b. From the results it is clearly shown that null hypothesis is accepted generally for SQP algorithm, while the null hypothesis is rejected consistently for GA-SQP algorithm, which shows the dominance of GA-SQP algorithm over SQP results. Additionally at 16% significance level the SQP algorithm also rejects the null hypotheses for each variant of both case studies of FP equation. Results of NHST clearly show the dominance of GA-SQP algorithm from SQP method for each case of both problems.It is observed that for FP equation in case study one, with the increase in the value of nonlinearity factor n, the increase in rate of oscillations between lower and higher values of fitness ɛ and ɛRMS are found for all three proposed algorithms, while for FP equation in case study 2 no such effects are seen with increase in the value of coefficient r. In both case studies, the best result in terms of fitness ɛ and ɛRMS are invariably obtained by hybrid approach GA-SQP than the GA and SQP alone. The accuracy of the SQP methods is comparable with GA-SQP but it has a problem of divergence, which is quite understandable that SQP is local search technique and thus cannot provide consistently convergent results, on the other hand the convergence of GA is better than that of SQP but it provides the results with much lower accuracy than the other solvers.The accuracy and convergence for proposed schemes are inspected further based on statistical parameters of mean, standard deviation (STD), and minimum (MIN) values of merit function M(t). Results are determined for three proposed solvers based on hundred independent runs for all three variants of both problems. The results of statistical parameters are given in Tables 10a and 10bin case of FP problem 1 and 2, respectively, for inputs between 0.1 and 1.0 with a step size of 0.2. It is found that results, in terms of mean values, the GA-SQP algorithms perform much better than the GA and SQP. Additionally, the results based on mean values show that, with the increase in the value of the nonlinearity factor n, decrease in the values of the mean is observed, whereas by increasing the values of coefficient r, no such kind of behavior is observed. Generally, the values for mean and standard deviation (STD) are invariably lowest in case of hybrid approach GA-SQP than the GA and SQP alone.Our analysis for the proposed schemes continues with the help of two performance parameters taken as global root-mean-square error GRMSE and mean fitness (MF). These parameters are defined by the relation given as:(34)GRMSE=1R∑r=1R1K∑k=1KM(tk)2r,MF=1R∑r=1RεrHere, K and R are the total number of input grid points and independent runs of algorithm, respectively, M(t) is the merit function as given in Eq. (31) and ɛrstands for fitness value for the rth run of the models. In the numerical experimentation, the inputs are taken from t ∈ [0, 1] with a step of 0.1 and 100 independent executions are performed for the solvers, then the value of K=10 and R=100. The values of GRMSE and MF along with their respective STD are calculated for proposed schemes and results are given in Tables 11a and 11bfor each variant of both problems. It is seen that the values of GRMSE and MF for proposed solvers based on GA-SQP method provides consistently the lowest values than rest of the algorithms.The computational complexity of the proposed schemes is determined on the basis of time of execution taken by each method for finding the optimal weights of neural networks model of the FP equation. The results based on 100 independent runs in terms of mean execution time (MET) along with are also given in Tables 11a and 11b for both case studies. It is seen from Table 11a that the average values of MET based on all three variants of case study 1 are around 112.27±11.42, 44.75±7.26, and 159.44±12.59s, for GA, SQP, and GA-SQP algorithms, respectively. While it is seen from results given in Table 11b that average values of MET based on all three variants of case study 2 are around 111.93±11.39, 44.24±5.39, and 157.73±12.38s for GA, SQP, and GA-SQP methods, respectively. The mean values of function count (MFC) is also determined for each algorithm to measure complexity [57–59] and the values of MFC for GA, SQP, and GA-SQP are 400,000 for both case studies of the equation. The values of MET and MFC for hybrid techniques GA-SQP are relatively more than the SQP and GA, but this expect is overshadowed due to its invariably superiority over others, in term of performance advantages. The numerical experimentation and calculations are performed on HP8200 Elite computer, with a 3.4GHz Core-i7 processor, 3.00GB RAM, and running MATLAB version 2011.

@&#CONCLUSIONS@&#
On the basis of the results obtained by numerical experimentation carried out in the last sections following conclusions can be drawn:The proposed scheme based on neural networks modelling optimized with GA-SQP hybrid algorithm can provide reliable, effective, and accurate solution for nonlinear singular FP problem and its variants than the GA and SQP techniques. The intrinsic worth of the proposed scheme is established by its strength to tackle the most important issues with FP equation, including strong nonlinearity, singularity at origin, and satisfying exactly the initial and boundary conditions particularly at infinity.The comparative studies of the results for proposed schemes in terms of absolute error from reference analytical solution and root-mean-square error associated with the FP equation shows that there is no noticeable difference in results for SQP and GA-SQP methods in both cases but their results are better than the GAs and reported solution of ADM analytical solver. It is found that with the increase in value of nonlinearity operator i.e., n=1, 3, or 5, accuracy of proposed solution of the equation is decreased, while no such variation in the results is observed by increasing the value of constant coefficient, i.e., r=2, 3, or 4.The results of statistical analyses determined for 100 independent runs of the design approaches show that the values in terms of mean, standard deviation, and minimum of the error associated with the equation are invariably the best for the hybrid approach GA-SQP than other two methods in each variant of the considered problems. The same deductions are obtained in case of fitness achieved and value of root-mean-square error plotted against number of independent runs of the algorithms. The performance parameters based on mean fitness and global root-mean-square error also show the supremacy of the GA-SQP algorithm. The value of mean execution time for finding the optimal weight with proposed schemes shows that the hybrid approach GA-SQP takes relatively more time than the other two techniques but this expect can be overshadowed due to its most accurate and consistently convergent performance in each variant of both case study of FP equation.The main advantages of proposed schemes lie in their ease in implementation, simplicity in the concept, and gives accurate results on relatively larger spans of the inputs unlike the state-of-the-art analytical solvers including variational iteration, Homotopy perturbation, Homotopy analysis, and Adomian decomposition methods. Although, these methods provide excellent results only in the close vicinity of the initial guess and will accumulate error rather rapidly with increase in the span of inputs domain.In future, one may look for other biological inspired computational method like ant/bee colony optimization, genetic programming, differential evolution, fireworks, backtracking, fractional particle swarm optimization algorithms, and their combination to solve not only this nonlinear Flierl–Petviashivili problem and its variants but also for those nonlinear differential equations, which still remained unsolvable.