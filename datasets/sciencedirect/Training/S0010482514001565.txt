@&#MAIN-TITLE@&#
Alpha-plane based automatic general type-2 fuzzy clustering based on simulated annealing meta-heuristic algorithm for analyzing gene expression data

@&#HIGHLIGHTS@&#
Presenting a new two-stage meta-heuristic clustering algorithm based on general type-2 fuzzy sets.Incorporating a new similarity-based objective function using alpha-plane representation of general type-2 fuzzy sets.Implementing the proposed approach on real microarray gene expression datasets.

@&#KEYPHRASES@&#
General type-2 fuzzy sets,Clustering,Gene expression data,Simulated annealing,α-plane representation,

@&#ABSTRACT@&#
This paper considers microarray gene expression data clustering using a novel two stage meta-heuristic algorithm based on the concept of α-planes in general type-2 fuzzy sets. The main aim of this research is to present a powerful data clustering approach capable of dealing with highly uncertain environments. In this regard, first, a new objective function using α-planes for general type-2 fuzzy c-means clustering algorithm is represented. Then, based on the philosophy of the meta-heuristic optimization framework ‘Simulated Annealing’, a two stage optimization algorithm is proposed. The first stage of the proposed approach is devoted to the annealing process accompanied by its proposed perturbation mechanisms. After termination of the first stage, its output is inserted to the second stage where it is checked with other possible local optima through a heuristic algorithm. The output of this stage is then re-entered to the first stage until no better solution is obtained. The proposed approach has been evaluated using several synthesized datasets and three microarray gene expression datasets. Extensive experiments demonstrate the capabilities of the proposed approach compared with some of the state-of-the-art techniques in the literature.

@&#INTRODUCTION@&#
As an efficient high throughput technology, microarrays play a fundamental role in different biomedical disciplines such as computational biology and bioinformatics. This technology has brought about parallel investigation of thousands of genomic codes, simultaneously. This technology has been widely used in characterizing various gene functions, understanding different molecular biological processes [1–4], etc. Microarray gene expression data is generally of huge volume. Therefore, the latent knowledge behind them can only be used through computational analysis techniques. Among these techniques, clustering is a widespread data mining tool to group the data into several subgroups with similar functionalities and characteristics.Clustering is an unsupervised pattern classification method which partitions the input space into M regions{C1,C2,⋯,CM}based on some similarity criteria. Given a dataset X, most clustering algorithms aim to obtain a M×N matrix U(X) called the partition matrix whose elementuijrepresents the membership degree of the patternjto the cluster prototypei. Among various crisp and fuzzy clustering algorithms, the Fuzzy C-Means (FCM) [5] algorithm has been proved to be quite efficient in dealing with different clustering tasks. However, FCM suffers from serious drawbacks including:•It is highly sensitive to outliers.Its clustering quality is fine just for datasets with spherical or circular geometry.Its performance is not suitable to handle datasets with complex geometrical shapes such as manifolds.Application of different clustering algorithms for extracting the hidden knowledge in microarray data has been under attention of researchers during the past few years. Among them, several standard clustering algorithms have been applied to bioinformatics and medical fields including: k-means algorithm [6], FCM [7], hierarchical methods [4], Self Organizing Maps (SOM) [8], meta-heuristic clustering approaches [9–14], fuzzy systems [15], hybrid methods [16], and image segmentation methods based on clustering [18].Among the mentioned references, fuzzy logic based approaches have long been applied to various science and engineering fields including medicine [17,19,20], function approximation [21–24], etc. Fuzzy logic enables researchers to deal with uncertain, dirty, noisy, incomplete, and sometimes contradictory data. Higher order fuzzy sets, as extension of type-1 fuzzy sets (T1 FSs) have been proved to be more flexible in dealing with highly uncertain environments [21]. Type-2 fuzzy sets (T2 FSs), including interval type-2 fuzzy sets (IT2 FSs) and general type-2 fuzzy sets (GT2 FSs) are the most widespread and evolving higher order FSs where each primary domain member has a membership function in the form of an interval instead of a single value. As the general frame of IT2 FSs, GT2 FSs represent an additional dimension to each primary value as the secondary membership function which makes them much stronger in uncertain environments. With the advent of new representation techniques, such FSs are becoming ubiquitous in various fuzzy disciplines especially fuzzy pattern recognition.One of the main applications of fuzzy logic is pattern recognition and its branches such as clustering. Based on the traditional FCM, IT2 fuzzy clustering was first introduced by Hwang and Rhee [25]. They had used two fuzzifier coefficients for the FCM clustering and finally combined the results of both clustering algorithms using Karnik–Mendel (KM) type-reduction algorithm [26] to compute the cluster prototypes. Then, based on the concept of α-planes, Linda and Manic [27] introduced general type-2 FCM. The core of both these methods is the FCM algorithm. A disadvantage of the FCM based clustering algorithms is that in these algorithms the number of optimal clusters is not known a priori. To tackle such a drawback, researchers have focused on some criteria to find the optimal or near-optimal number of clusters. Such criteria are called cluster validity indices (CVIs). CVIs usually concentrate on two main issues:•Compactness of clusters: A clustering is optimal where each cluster is compact as much as possible.Separation of clusters: Members of each cluster are close to each other and separated from members of other clusters as much as possible.So far, a considerable number of CVIs have been introduced to the literature. Some of these approaches can be found in [28–35]. In these approaches, to find the near-optimal number of clusters, clustering algorithms should be executed several times for each cluster number and its outputs should be implemented into the CVI to find the near-optimal number of clusters. However, they cannot automatically find the optimal number of clusters. In this regard, in [13], an automated clustering algorithm based on Simulated Annealing (SA) and FCM is presented. The objective function used in [13] was the old Xie-Beni CVI [36] which mainly concentrates on separation of clusters. On the other hand, its basis is the FCM which suffers from the drawbacks mentioned before.In this paper, we aim to present a two-stage SA clustering algorithm based on the concept of α-planes in GT2 FSs which utilizes a newly developed GT2 CVI. The objective function of this approach has been previously developed by the authors [44] as the first similarity based GT2 fuzzy CVI. Then, the mechanism of the GT2 fuzzy SA will be represented which can automatically detect the near-optimal number of clusters. Of course, because of the stochastic nature of meta-heuristic approaches, in some cases only the near-optimal number of clusters would be obtained.In the first stage of the algorithm, the GT2 FCM is implemented. Then, quality of the computed results are analyzed using a GT2 fuzzy CVI developed by the authors. The objective function used in the proposed approach, is primarily developed on the concept of α-planes as a criterion to measure the similarity between patterns in each cluster. The best partitioning is obtained when the similarity between members of each cluster is in its highest degree while patterns in different clusters are dissimilar as much as possible. In the first stage, three different mechanisms for searching the solution space have been utilized. After finding the best solution, the second stage begins. The second stage aims at constructing a blacklist of probable local optima. During the second stage, based on the computed number of clusters in the first stage, the GT2 FCM is repeated for two other cluster numbers, one larger and one smaller than the solution of the stage 1. Based on the new CVI, if the first stage solution is better than these two number of clusters, then the algorithm terminates. But, if one of those new solutions has a larger objective function value, then the number of clusters obtained at stage one is added to the blacklist and it would not be considered any more. In this situation, the stage one is iterated again until the best number of clusters with the highest objective function is obtained.The proposed framework is one of the very first hybrid meta-heuristic approaches deploying GT2 FSs. To date, no similar approach has been introduced to the literature. In the forthcoming sections, using synthesized datasets, capabilities of the proposed approach will be tested and then it would be implemented for clustering three real microarray datasets accompanied by extensive experiments.The rest of the paper is organized as follows: The foundations of microarray data and GT2 FSs are briefly reviewed in Sections 2 and 3, respectively. The proposed approach is discussed in Section 4 and its computational complexity will be computed in Section 5. Sections 6 and 7 are devoted to experimental evaluations and conclusion remarks, respectively.A microarray is a small chip on which a huge number of DNA molecules are attached. Each cell of a microarray chip corresponds to a DNA sequence. The first step in a microarray experiment is to extract RNA from a tissue sample and the amplification of RNA. Thereafter, two mRNA samples are reverse-transcribed into cDNA (targets) labeled using different fluorescent dyes (red-fluorescent dye Cy5 and green-fluorescent dye Cy3). According to the nature of the base-pairs, the cDNA binds to the specific oligonucleotides on the array. In the next stage, a laser excites the dye so that the amount of cDNA can be quantified by measuring the fluorescence intensities. Gene expression profiles can be obtained by the log ratio of the two intensities of each dye:(1)Geneexpressionlevel=log2Intensity(Cy5)Intensity(Cy3)In microarray experiments, expression levels of thousands of genes are measured, simultaneously. A typical gene expression microarray dataset is usually represented by am×nmatrixMwhose elementkijrepresents the expression level for the geneiat the conditionj.Gene expression data may be noisy and also may suffer from variations caused by biological experiments. So, such data should take a preprocessing operation before implementing the clustering process. In this regard, several preprocessing methods have been used in this area such as missing value estimation and normalization. For more information on preprocessing activities on microarray datasets, the reader can refer to [37].A GT2 FSA˜which is expressed on a universe of discourseXusing its T2 membership functionμA˜(x,u)can be defined as follows [38]:(2)A˜=∫x∈X∫u∈JxμA˜(x,u)/(x,u)dxdu,Jx⊆[0,1]whereudenotes the primary membership variable,xis the primary domain variable,Jxdenotes an interval between the lower and the upper membership functions,μA˜(x,u)denotes the secondary membership function,x∈X, andu∈Jx. Here,∬represents the union over the entire possible values ofx,u,andμA˜(x,u).Basically, there are two major representations for GT2 FSs including: the Vertical Slice representation and the Wavy Slice representation [39].Vertical slices at each point represent a secondary membership functionμA˜(x=x′,u)forx′∈Xand∀u∈Jx′⊆[0,1]:(3)μA˜(x=x′,u)≡∫u∈Jx′(fx′(u)/u)du,Jx′⊆[0,1]wherefx′(u)is the grade of the secondary membership function andfx′(u)⊆[0,1]. Suppose that the entire domain is discretized into N samples. Then,A˜can be represented as an aggregation of its entire vertical slices ([40]):(4)A˜=∑i=1N[∫u∈Jxi(fxi(u)/u)du]/xiA˜can also be represented as follows ([40]):(5)A˜=∪∀A˜eA˜ewhere,A˜is represented by the union of its all embedded T2 FSs. An embedded T1 fuzzy set ofA˜,A˜e, can be described by a MFuA˜e:X→[0,1], whereuA˜e∈Jx.A˜eis expressed as [41]:(6)A˜e=∫x∈X(u/x)dx,u∈Jxwhere the embedded T1 FSA˜e, which corresponds to an embedded T2 FSA˜e, contains the primary memberships of thatA˜e.An α-plane of a GT2 FSA˜can be defined as the union of the entire primary memberships ofA˜whose secondary grades are greater than or equal to α (0≤α≤1). α-plane ofA˜is denoted byA˜α[42].(7)A˜α=∫∀x∈X∫∀u∈Jx{(x,u)|fx(u)≥α}dxduSA˜(x|α)denotes the α-cut of the secondary MFμA˜(x):(8)SA˜(x|α)=[SL(x|α),SR(x|α)]A composition of the entire α-cuts yieldsA˜α, i.e.,(9)A˜α=∫∀x∈X(SA˜(x|α)/x)dx=∫∀x∈X(∫∀u∈[SL(x|α),SR(x|α)]udu)/xdxAccording to [41], each α-plane is bounded from the top by its upper membership function,μ¯A˜(x|α), and from the bottom by its lower membership function,μ̲A˜(x|α). The upper and lower membership functions ofA˜αcan be described in terms of α-cuts:(10)μ¯A˜(x|α)=∫∀x∈XsR(x|α)dx(11)μ̲A˜(x|α)=∫∀x∈XsL(x|α)dxEach α-plane is indeed an interval T2 FS with the centroidCA˜α(x). Liu [43] states that the centroid of a GT2 FSA˜,CA˜(x), is a composition of its all α-planes, i.e.,(12)CA˜(x)=∪α∈[0,1]α/CA˜α(x)Centroid of each α-plane,CA˜α(x), is bounded so it can be rewritten as (13):(13)CA˜(x)=∪α∈[0,1]α/[cl(A˜|α),cr(A˜|α)]A schematic view of a GT2 FS with mixed Gaussian primary MFs represented by its α-planes is depicted inFig. 1.In this section, the proposed approach will be discussed step by step. The framework of this approach includes two main stages. During the first stage, the annealing process is performed. Stage one includes: generating initial solution, initial energy computation, new solution generation, blacklist checking, and selection of the best solution. Stage two consists of obtaining the number of solutions (C) computed in the previous stage, implementing GT2 FCM for the number of clusters C+1 and C−1, choosing the best local optimum solution and mapping the worse solution into the blacklist. In the following, each step of the algorithm is described.In this paper, the computed solutions are arranged as a matrix where each row represents the cluster center and columns represent dimensions of that cluster center. For example, in a 4-dimensional space, if there exists three clusters, then the entire cluster centers will be represented by a 3×4 matrix.In order to begin the algorithm from a ‘good’ start point, first a random integerK∈{1,2,⋯,10}is generated. Then, usingK, GT2 FCM is applied to the dataset and partitions it intoKclusters. The output cluster centers will be ordered according to the matrix representation described in the previous section.During each iteration, the objective function value is computed using the first GT2 fuzzy CVI proposed by the authors in their recent research [44]. This CVI has an algorithmic framework and operates on α-planes of GT2 FSsThe algorithmic CVI represented in [44] is based on the fact that the membership value of each pattern to its cluster is in its highest level if the number of clusters are determined correctly. This algorithm begins from the lowest α-plane and computes the distance between the largest and the smallest membership values of patterns in each cluster for both the upper and the lower membership functions of that α-plane. This process is repeated for the all objects in the dataset. Finally, the computed values for both the lower and the upper membership functions of that α-plane are averaged and the maximum of these two average values is selected. This general process is repeated for the all α-planes. The key point is that by using α-planes, effects of noises and outliers are automatically considered. This is because in higher α-planes, objects in the vicinity of cluster centers take more weight so that effects of outliers in estimating the number of clusters decrease. At the end, a weighted average is applied to the output of the entire α-planes and the clustering with the highest weighted average is chosen to be the best clustering with the best number of clusters.In order to reach near-optimal solutions, it is necessary to make intelligent search across the solution space. In this article, three perturbation mechanisms are used for generating new cluster configurations. These mechanisms include: perturbing a center, splitting a center, and deleting a center. It should be noted that during each iteration of the proposed algorithm, these three perturbation mechanisms are chosen with equal probability. In the following, these mechanisms are thoroughly explained.In this mechanism, one of the cluster centers is chosen randomly. Then, its values in different dimensions will be changed as follows. First, a random numberθis generated from the uniform distribution with the domain [−1, 1]. If the value of thedth dimension iscdthen it will change to(1±2×θ×p)cdafter perturbation. Note that the signs ‘+’ and ‘−’ are chosen with equal probability. Ifcdis zero, then it will become(±2×θ×p)after perturbation. Here,pdenotes the perturbation rate and it has been considered to be 0.05 in this article.In order to split a center, the center regarding the biggest cluster should be chosen. In order to find the biggest cluster, the upper and lower membership matrices of the lowest α-plane for the all clusters are computed. Then, for all clusters, the average of these two matrices are computed and the largest cluster is chosen as below:(14)Si=∑j=1nuij,1≤i≤CwhereCis the number of clusters. The selected largest cluster is then substituted by two new cluster centers. A reference pointris found such that it has membership value closest to the mean of the membership values above 0.5 to the center of the largest cluster. The distance between the reference point and the selected center at itsdth dimension is:(15)Distd=|cd−rd|Finally, for each dimension of the cluster center, the selected center will be substituted by two new values ascd±Distd.Using Eq. (14), the smallest center is chosen and then it is deleted from the list of the current configuration matrix. Note that this mechanism should be avoided when only two cluster centers exist in the current configuration.According to the [44], a clustering with higher CVI value is better. Suppose that the energy level of the current configuration isEcurr. If the energy level of the new configuration isEnewandEnew≥Ecurrthen the new configuration is accepted. If the energy level of the new configuration is less than the current configuration then it can be accepted with a probability computed as follows:(16)Pacceptance=1−exp(Tt×(Enew−Ecurr))whereTtis the current temperature. Eq. (16) reveals that that the probability of selecting a bad configuration decreases as the algorithm goes on.The algorithm starts from the temperatureT1=Tmax. During each temperature the algorithm is iteratedntimes. The temperature decreases during each iterationtand it is computed byTt=Tmax(1−α)t. Here,αis a positive real number close to zero. The annealing process terminates when the temperature reachesTmin.The steps of the proposed approach are represented in Algorithm 1.

@&#CONCLUSIONS@&#
This paper addresses the problem of microarray data clustering using GT2 fuzzy sets. The proposed approach is a two-stage SA framework with a new objective function which works using the α-plane representation technique of GT2 FSs. During the first stage of the algorithm, a good solution using three new perturbation mechanisms will be generated. After the termination of the SA process, the first stage solution is inserted to the second stage where local optimum point are deleted from the solution space through a heuristic approach. These two stages continue until no better solution can be obtained any more. The proposed approach has been evaluated using different artificial datasets and three real gene expression datasets. These experiments demonstrated effectiveness and flexibility of the presented framework under highly uncertain environments in comparison with several well-known approaches in the literature.The authors declare no conflict of interests.