@&#MAIN-TITLE@&#
Minimizing cost-related objective in synchronous scheduling of parallel factories in the virtual production network

@&#HIGHLIGHTS@&#
This paper proposes a Monte Carlo-based heuristic for distributed production network.Each factory has parallel machines and different factories have different speeds.Each factory focuses plans to optimize its own profit.The factories themselves are responsible for the production of their regions.Jobs can transport from overloaded factory to the factory with fewer workloads.

@&#KEYPHRASES@&#
Distributed factories scheduling,Heuristic,Mathematical modeling,Local search,Monte Carlo algorithm,

@&#ABSTRACT@&#
This paper will introduce the Monte Carlo-based heuristic with seven local searches (LSs) which are carefully designed for distributed production network scheduling. Distributed production network consists of the number of different individual factories that joins together to form a network, in which these factories can operate more economically than operating individually and each individual factory usually focuses on self-benefits. Some realistic features such as heterogeny of factories and the transportation among factories are incorporated in our problem definition. However, in such network, each individual factory usually focuses on self-benefits and it plans to optimize its own profit. In this problem, among F exit factories in the network, F′ factories are interested in the total earliness costs and the remaining factories (F″=F−F′) are interested in the total tardiness cost. Cost minimization is achieved through the minimization of earliness in F′factories, tardiness in F″ factories and the total costs of operation time of all jobs. This algorithm initializes with best known non-cooperative local scheduling and then the LSs search simultaneously through the same solution space, starting from the same current solution. Upon receiving the solutions from the LSs, the new solution will be accepted based on the Monte Carlo acceptance criterion. This criterion always accepts an improved solution and, in order to escape local minima, accept the worse solutions with a certain probability, which this probability decreases with deteriorating solutions. After solving the mixed integer linear programming by the CPLEX solver in the small-size instances, the results obtained by heuristic are compared with two genetic algorithms in the large-size instances. The results of the scheduling before cooperation in production network were also considered in the experiments.

@&#INTRODUCTION@&#
In order to be competitive in today's rapidly changing business world, factories have shifted from a centralized to a more decentralized structure, in many areas of decision making including scheduling. Alvarez [1] declared that to increase competitive advantages in the international market, factories are shifting from single facilities to multi-factory. A new development in the continuing cooperative trend amongst manufacturing factories is the formation of production networks [2]. In fact these networks establish a new type of relations between independent factories which may be geographically distributed in different locations to manage the network production resources in parallel structure in order to comply with and to take advantage from the trend of globalization [3]. This allows them to have geographic flexibility and to be closer to their customers, to employ professionals, to comply with local laws, to reduce costs, to produce and market their products more effectively, rapid technological diffusion and respond to market changes more quickly.Distributed scheduling (DS) is defined as an approach in which smaller parts of a scheduling problem are solved by local decision makers who possibly have conflicting objectives and who coordinate their sub-solutions through certain communication mechanisms to achieve overall system objectives. In this context, virtual production network (VPN) is a kind of distributed system in which smaller parts of a scheduling problem are solved by local decision makers who possibly have conflicting objectives. This network establishes a new type of horizontal collaboration and relations between independent factories and even between competitors who establish occasional collaborations on the production order, they cannot take on individually. After the order has been finished, factories as partners may go their own ways again. In a production network, partners cooperate over a longer period since their integration is supposed to be more intensive but in VPNs the relations are short-term corporations [4]. It is worthwhile to notice that other characteristic distinguishing production networks of virtual networks is the availability of competence amongst partners in VPNs. We can say, the distributed activities, if managed properly, can reduce costs, increase flexibility and efficiency [5]. Other advantages are [6]: (i) improvement in operations, (ii) access to new markets in different geographical places, (iii) diversification of financial risks and (iv) access to new technologies.Several industries such as aeronautics [7], electronics [8] or the automotive industry [9] encounter virtual networks. This type of network not only is not based on the possession of certain own production, but also it can manage the shared resources of the network. The recent remarkable attention in distributed manufacturing management in both academia and the industry has demonstrated the significance of such system. During last years, many scholars have considered VPNs phenomenon from different perspectives such as structure, factory, etc [10]. Since the synchronous scheduling of the factory in such production network has not been considered in any researches, the current paper considers the distributed scheduling for a virtual network. In this definition, networks’ factories can be homogonous or heterogeneous. Most strategies proposed in the literature target only homogeneous processors. However, normally the real-world distributed systems are heterogeneous. In other words, each factory can be considered as an individual entity which has different efficiency. In the other words in this problem, production processes performed in different factories are similar but the machines in different factories may have different speeds and different objective functions. Systems of such multiple-factory manufacturing cells have many real-life applications, for example, in the semiconductor manufacturing, it is common that the newer and more modern machines have the faster processing speeds work with the existing machines [11]. In our problem, we assume that each factory has identical machines and different factories have different speeds.For this complicated production network, proposing an efficient scheduling technique is critical to react quickly to market changes. The difficulties faced in this problem are not only scheduling the jobs in a most favorable way, but also assigning the best factory to the jobs. Therefore, for generating the schedule in the distributed manufacturing environment, these two sub-problems must be simultaneously considered. Due to these reasons, scheduling in a multi-factory environment has become much more complex than traditional one. In this paper, we assumed that each factory in the production network has a parallel machine environment.If we view each factory as parallel machines and assume zero production costs, zero transportation times and equal unit costs of earliness and tardiness, then our problem reduce to the classical parallel machines scheduling problems with sum of the earliness and tardiness objective function. Since this simple case of our problem is known as NP-hard problem [12], we can easily conclude that the DS is also an NP-hard problem and consequently exact approaches are, in fact, limited to very small instances. For larger instances, of course, (meta)heuristics have shown more success [13]. Metaheuristic approaches have been applied successfully to a range of scheduling problems. However, many of these approaches are either tailored for problem models by making use of the problem-specific structures and properties, or they involve considerable parameter tuning. In order to have a wide range of problems and instances, we designed a Monte Carlo-based heuristic algorithm (MHA). We believe that given an appropriate set of low-level heuristics may be applied to a wide range of problems of scheduling and optimization. The implementation of heuristic in such complicate problem is of great interest since it can either drastically improve the results obtained or simplify the application of techniques [14].The paper continues with a review of related researches in Section 2. In Section 3 some descriptions about our problem and an integer programming model are presented. Section 4 describes the proposed algorithm. Computational study is presented in Section 5 where our algorithm is compared with genetic algorithm. Section 6 concludes the paper and recommends some future research areas.

@&#CONCLUSIONS@&#
