@&#MAIN-TITLE@&#
Multiobjective optimization for aircraft conflict resolution. A metaheuristic approach

@&#HIGHLIGHTS@&#
A scheme for the Conflict Resolution problem in Air Traffic Management is presented.A mixed integer nonlinear optimization model is considered.A Sequential approach for Goal Programming is proposed.An extensive computational experience with more than 200 instances is reported.Computational comparison between the MINO solver Minotaur and the proposed approach.

@&#KEYPHRASES@&#
Air Traffic Management,Conflict detection and resolution problem,Mixed integer nonlinear optimization,Iterative mixed integer linear optimization,Goal Programming,

@&#ABSTRACT@&#
The conflict resolution problem in Air Traffic Management is tackled in this paper by using a mixed integer linear approximation to a Mixed Integer Nonlinear Optimization (MINO) model that we have presented elsewhere. The aim of the problem consists of providing a new aircraft configuration such that every conflict situation is avoided, a conflict being an event in which two or more aircraft violate the minimum safety distance that they must keep in flight. The initial information consists of the aircraft configuration in a certain time instant: position, velocity, heading angle and flight level. The proposed approach allows the aircraft to perform any of the three possible maneuvers: velocity, turn angle and flight level changes. The nonlinear model involves trigonometric functions which make it difficult to solve, in addition to the integer variables related to flight level changes, among other auxiliary variables. A multicriteria scheme based on Goal Programming is also presented. In order to provide a good solution in short computing time, a Sequential Mixed Integer Linear Optimization (SMILO) approach is proposed. A comparison between the results obtained by using the state-of-the-art MINO solver Minotaur and SMILO is performed to assess the solution’s quality. Based on the computational results that we have obtained in a broad testbed we have experimented with, SMILO provides a very close solution to the one provided by Minotaur practically for all the instances. SMILO requires a very small computing time that makes the approach very suitable for helping to solve real-life operational situations.In last years the interest on improving Air Traffic Management (ATM) has grown. One of the problems involved in ATM is the aircraft Conflict Detection and Resolution (CDR) which has been studied from different fields in mathematics and engineering. Given a set of aircraft configurations, the aim of the problem consists of providing a new 4D trajectory for each aircraft involved in such a way that every conflict situation is avoided. We consider in this paper the short term in which an answer in 2–5 minutes is needed and, so, given the shortness of the time horizon, an air sector is enough to be taken into account. A conflict is understood as an event in which two or more aircraft violate the minimum safety distances that must be kept in flight. These distances are decomposed in horizontal (5 nautical miles) and vertical (generally 2000 feet) ones; however, International Civil Aviation Organization (ICAO) proposes 1000 feet in the Reduced Vertical Separation Minimum (RSVM) program (see International Civil Aviation Organization, 2015). It produces a cylindrical safety region around each aircraft with radius 2.5 nautical miles and height 2000 feet (1000 feet if RSVM is applied) where the aircraft is located in its center. Three different maneuvers may be taken into account: velocity (VC), angle turn (TC) and altitude flight level (hereafter, altitude) (AC) changes. The objective is to minimize the impact of the conflict resolution and this issue can be studied from different points of view, namely economic and comfort terms, among others. This issue makes the problem interesting to be studied from a multicriteria point of view. Jointly with our work (Alonso-Ayuso, Escudero, & Martín-Campo, 2015), as we know, it is the first time that multicriteria methods are applied to the problem.We refer to Kuchar and Yang (2000) and Martín-Campo (2012) for literature reviews up to 2000 and 2012, respectively, on mathematical optimization approaches for the CDR problem. Recently, due to a fast answer needed to avoid conflict situations in real-life instances, some heuristic schemes have been studied. Most of metaheuristic algorithms for CDR are based on evolutionary and genetic computation, such as Ant Colony optimization, see Durand and Alliot (2009), Meng and Qi (2012) for TC maneuvers; Genetic algorithms, see Durand (1996) also for TC; Particle Swarm optimization, see Gao, Zhang, and Guan (2012) for TC; Variable Neighborhood Search (VNS), see Alonso-Ayuso, Escudero, Martín-Campo, and Mladenović (2014c) for TC; Hybrid methods, see Omer and Farges (2013); Linear approximations by using iteratively Taylor polynomials, see Alonso-Ayuso, Escudero, and Martín-Campo (2012); Sequential Integer Linear Optimization (SILO), see Alonso-Ayuso, Escudero, and Martín-Campo (2014a) for TC; and Neural Networks, see Durand and Alliot (2000), Christodoulou and Kontogeorgou (2008), Cetek (2009) for VC; among others. Those methods are efficient in computing time terms, but the global optimal solution and even a feasible one (i.e., a solution with no conflict situations) are not guaranteed to be achieved.In this paper we propose a metaheuristic based on iteratively solving a Mixed Integer Linear Optimization (MILO) model as an approximating scheme for solving the Mixed Integer Nonlinear Optimization (MINO) model that we have presented elsewhere, see Alonso-Ayuso et al. (2015). The main idea lies on discretizing the feasible range of the angle of motion such that the trigonometric functions in the original model are converted to fixed parameters and, so, jointly with the addition of new binary variables, the resulting model becomes linear. The iterative approach reduces the bounds of the angle variations until a stopping criterion is satisfied.Different maneuver-driven objectives are dealt with by using Goal Programming (GP) with a lexicographical ordering, see good surveys in Ignizio (1985), Romero (1991), among others. This type of multicriteria schemes needs to solve some optimization models by including constraints in which the maneuver changes are not allowed to be exceeded by a given aspiration level.The CDR problem can be solved for three different time terms: Long Term, Medium Term and Short Term, whose lookahead times for an answer are 20–60 minutes, 5–20 minutes and 2–5 minutes. Our approach is located in the latter, that is the one that requires the intervention from the ATCo (see Shakarian & Haraldsdottir, 2001). So, the aim of our approach is to provide solutions in almost real-time.The main contributions of this paper are as follows: (1) Introducing a Sequential Mixed Integer Linear Optimization (SMILO) approach able to solve the problem in short computing time providing a good feasible solution, by allowing the aircraft to perform the three possible maneuvers: VC, TC and AC, which is known as Velocity, angle Turn and Altitude Changes (VTAC); (2) a scheme for replacing quadratic terms that involve continuous and binary variables with a strong set of constraints by using the structure of the MILO models to be solved in the SMILO approach; (3) the minimization of the cost of the maneuvers is based on a GP scheme within a multi-objective framework and, so, for each of its steps model MINO is solved either by a MINO engine or by the SMILO approach; and (4) a broad computational experience is reported to assess the validity of the approximating VTAC–SMILO approach in terms of solution’s quality and required computing time. Additionally, a computational comparison is performed on the solution’s quality and required computing time to solve model VTAC–MINO by using the state-of-the-art MINO solver Minotaur (Leyffer, Linderoth, Luedtke, Mahajan, & Munson, 2011) and the SMILO approach by using the state-of-the-art MILO solver Cplex (2014).The rest of the paper is organized as follows: Section 2 is devoted to the geometric construction presented in Pallottino, Feron, and Bicchi (2002) which supports model VTAC-MINO. Section 3 introduces the SMILO approach by linearizing the VTAC nonlinear constraints in order to have a model able to be iteratively solved by using a MILO solver. Section 4 is devoted to the multicriteria GP-based approach proposed to solve the CDR problem. Section 5 reports a broad computational experience; and, finally, Section 6 concludes and outlines the main lines of future research.The SMILO approach (for short, SMILO) that is proposed for solving the VTAC problem is based on the MINO model presented in Alonso-Ayuso et al. (2015) and whose constraint system is briefly given in Appendix. It is based on the geometric construction presented in Pallottino et al. (2002), that itself was improved in our work (Alonso-Ayuso, Escudero, & Martín-Campo, 2011), where some unsolved cases were taken into account, see below. SMILO allows to detect if a conflict situation occurs involving any pair of aircraft, and they resolve the conflicts by using the VTAC maneuvers that are allowed.A geometric construction for detecting conflict situations is studied in Pallottino et al. (2002), see Fig. 1. Letv→iandv→jdenote the velocity vectors of aircraft i and j, respectively. The main idea lies on the construction of the relative velocity vectorv→i−v→j. The two parallel straight lines to the relative velocity vector depicted in the figure with respect to the safety circle of aircraft j define a region where the intersection with the trajectory of aircraft i is a segment so-named the ‘shadow segment’. Notice that if the intersection of that segment with the safety circle of aircraft i is empty, then there is no potential conflict situation between the two aircraft. Otherwise, the conflict should be resolved. Assume that ωijand αijdenote thearctan(yi−yjxi−xj)andarcsin((ri+rj)/2dij/2),respectively, where xiand yiare the abscissa and ordinate (in a cartesian coordinates system) of the current position of aircraft i, respectively, riis the safety radius of aircraft i, and dijis the Euclidean distance between aircraft i and j. Depending on the tangent of angleslij=ωij+αijandgij=ωij−αij,a conflict situation can be detected.The α-angles can be calculated based on the symmetry in the geometric construction if the two safety radii are the same. Considering different safety radii constitute a good approximation to the realistic problem since each aircraft has a different configuration, depending on the aircraft weight, the aerodynamic configuration and the aircraft size. If two different aircraft radii are considered, the two interior straight line slopes have to be computed. The expression for the α-angle can be represented by using an arctangent of the slope as,αij=arctanri+rjdij2−(ri+rj)2,see Appendix A.2 in Martín-Campo (2012). Notice thatdij2must be greater than(ri+rj)2. If this condition is not satisfied, the two aircraft are violating the minimum safety horizontal distance. For considering that situation, 0–1 variableδijz5is taken into account in model VTAC–MILO (see below), allowing both aircraft to fly at different altitude levels.In the geometric construction the notation is based on vectors, but they can be decomposed into the two components, abscissa and ordinate, in the mathematical model. Therefore, no potential conflict occurs between aircraft i and j if any of the following expressions is satisfied,(1a)(vi+νi)sin(mi+μi)−(vj+νj)sin(mj+μj)(vi+νi)cos(mi+μi)−(vj+νj)cos(mj+μj)⩾tan(lij)(1b)(vi+νi)sin(mi+μi)−(vj+νj)sin(mj+μj)(vi+νi)cos(mi+μi)−(vj+νj)cos(mj+μj)⩽tan(gij),where miis the current direction of motion, μiis the angle change and νiis the velocity change to be obtained, such that now the new angles of motionmi+μiandmj+μjand the new velocitiesvi+νiandvj+νjavoid the conflict between the aircraft i and j. Depending on the sign of the denominators of expressions (1), two cases must be taken into account for each situation represented by (1), so, four different blocks of constraints in total for each pair of aircraft must be considered, each one composed by two constraints, the first one being related to the sign of the denominator (see expressions (A.1a), (A.2a), (A.3a) and (A.4a) in Appendix) and the second one to the conflict resolution (see expressions (A.1b), (A.2b), (A.3b) and (A.4b) in Appendix). If only the ν variables are considered in expressions (1), the CDR model is the so-called Velocity Changes (VC), see Pallottino et al. (2002). On the contrary, if only the μ variables are considered, the CDR model is the so-called Turn Changes (TC), see Alonso-Ayuso et al. (2014a).Notice that the left-hand side expressions in constraints (1) can involve a null denominator. We refer to this as a pathological situation. These cases can be detected in preprocessing (i.e., the initial step previous to the optimization itself that automatically computes all the necessary parameters from initial aircraft configuration). If a pathological situation is detected, then, all trigonometric expressions involved are turned π/2 rad in order to avoid the null denominator. This turn does not affect the initial configuration. It is worth pointing out that this replacement is only performed in the constraints where both aircraft i and j are considered.Given the difficulty of solving model VTAC–MINO we propose an approximating SMILO where the nonlinear constraints of model VTAC are iteratively replaced by a set of linear ones. Notice that a fast response is required to make this application useful for the Air Traffic Control Officers (ATCo) in real-life instances. The approach proposed in this paper is to be applied in a certain aerial sector, which is managed by an ATCo.The main idea supporting the linearized model lies in the angle range dynamic discretization as depicted in Fig. 2. We select a set of possible angles of motion within the bounds of the initial angle, so that the trigonometric functions in (1) become linear and only one angle of motion must be selected. For that purpose, a set of 0–1 variables is used, each associated to one of those angles. Let us consider the following notation for the set of constraints and objective functions to consider:SetsF={1,…,F},set of aircraft flying in the air sector under consideration.P,set of pairs of aircraft that are potentially in conflict (these pairs are detected in preprocessing).Z={1,…,Z},set of flight levels allowed for the aircraft to change.K=Kr∪Kl∪K0,set of discretizations in the angle range. It can be decomposed in the right and left angle variation plus the discretization corresponding to the initial angle of motion. Kr, Kland 1 are the cardinality of each subsetKrKlandK0,respectively.Input parametersFor all aircraftf∈F:xf, yf, initial configuration of position (abscissa and ordinate, respectively).vf, initial velocity configuration.rf, safety radius, usually 2.5 nautical miles in en-route airspace.mf, initial direction of motion in(−π,π],also so-named initial angle.mfkr,mfkl,values for angle discretization forkr∈Krandkl∈Kl,respectively.zf, initial configuration of altitude level.ν¯f−,ν¯f+,maximum allowed velocity variation for decelerating and accelerating, respectively. The ERASMUS project, see Bonini, Dupré, and Granger (2009), suggests 6 and 3 percent of initial velocity, respectively.v̲f,v¯f,minimum and maximum allowed velocity taking into account the previous parameters.μ̲f,μ¯f,minimum and maximum allowed angle variation, respectively, being 30° of initial angle according to the guidelines from the ERASMUS project.z̲f,z¯f,minimum and maximum allowed altitude levels, respectively.γ¯f−andγ¯f+,maximum number of altitude levels that the aircraft can descend and climb, respectively, and computed asγ¯f−=zf−z̲fandγ¯f+=z¯f−zf,respectively.cfν+,cfν−,unit costs for positive and negative velocity variations, respectively.cfμ+,cfμ−,unit costs for positive and negative angle variations, respectively.cfγ+,cfγ−unit cost for climbing and descending altitude (flight) level variations, respectively.pcij, 0–1 parameter whose value is 1 if a pathological case is detected, and 0 otherwise.lij, gij, angles from the geometric construction presented above.VariablesFor each aircraftf∈F:νf, velocity variation for resolving conflict situations. This variable is real and can be split into two nonnegative variables, say,νf+andνf−,such thatνf=νf+−νf−.μf, angle variation for resolving conflict situations. This variable is real and can be split into two nonnegative variables, say,μf+andμf−,such thatμf=μf+−μf−. This variable is only used while solving model VTAC by a MINO engine.γf+,nonnegative integer variable that equals the number of altitude levels that the aircraft climbs if any.γf−,nonnegative integer variable that equals the number of altitude levels that the aircraft descends if any.For each aircraftf∈Fand altitude levelz∈Z:ϕfz, 0–1 variable whose value is 1 if aircraft f flies at altitude level z after the separation and otherwise, 0.βfkr,βfkl,βf00–1 variables to decide the corresponding angle variation for the discretization.ψfk+≡νf+βkandψfk−≡νf−βk,auxiliary nonnegative continuous variables for modelling the related quadratic terms (see expression (2) below) by using the Fortet inequalities presented in Fortet (1960), Hammer and Rudeanu (1968) reinforced by the scheme presented in Kolodziej, Castro, and Grossmann (2013). Notice thatβfkrefers tok∈Kr∪Kl∪K0,soβfkr,βfkl,βf0are taken into account.δijzn,auxiliary 0–1 variable for modeling the either-or constraints, such that indexn=1,2,3,4is used for each of the four possible situations generated by inequations (1), and indexn=5is used for the case in which aircraft i and j fly at different altitude levels after the separation. It means that no horizontal maneuver is necessary forδijz5=1. If variableδijzn=1forn=1,2,3,4then it means that the corresponding case (sign of the denominator in (1) and angle to be used in the tangent of that expression, lijor gij) is satisfied.Output parametersFor each aircraftf∈Fthe values obtained by the SMILO approach for the final values from GP scheme as well as the ideal values (see below) are as follows:vfout=vf+νfout,velocity, withνfout=νf+out−νf−out.mfout=∑kl=1Klmfklβfkl+mfβf0+∑kr=1Krmfkrβfkrheading angle.zfout=z,altitude level, beingz:ϕfz=1.The difference between the models VTAC–MINO and VTAC–MILO is that the nonlinear constraint system for CDR in the former (see Appendix) is replaced with the linear constraint system (3) presented below in the latter. In order to linearize the constraints in model VTAC–MINO, the angle variation range for each aircraft is discretized in such a way that the trigonometric functions sines and cosines are not separate functions but just parameters. So, the expressions like(vf+νf+−νf−)sin(mf+μf+−μf−)in model VTAC–MINO (with f being i or j) are replaced with(2)(vf+νf+−νf−)×(∑kr∈Krsin(mfkr)βfkr+∑kl∈Klsin(mfkl)βfkl+sin(mf)βf0)=(vf+νf+−νf−)(∑k∈Ksin(mfk)βfk),where only one β-variable will be equal to 1. However, the constraint is not linear yet since there is a quadratic term given by the product of continuous variable ν and 0–1 variable β.In general, the Fortet constraints deal with the linearization of the product (in our case) involving a binary, say b and a nonnegative continuous variable, say c. In order to linearize the product c · b, a new nonnegative continuous variable k is introduced, where k ≡ c · b as well as the following set of constraints:k⩽ck⩽Mbc−k⩽M(1−b)from where ifb=0thenk=0,and ifb=1thenk=cwhich models the product c · b. Notice that M is an enough big parameter.So, to linearize the quadratic term in our model, the Fortet inequalities scheme is used in such a way that the product is absorbed by the continuous variable ψfk, being the expression above replaced with∑k∈Ksin(mfk)(vfβfk+ψfk+−ψfk−).Notice that the expression with cosine in model VTAC–MINO is transformed in an analogous way.Let us define the following terms for allf∈Fin order to clarify the notation in the model,Afs=∑k∈K(sin(mfk)(vfβfk+ψfk+−ψfk−))Afc=∑k∈K(cos(mfk)(vfβfk+ψfk+−ψfk−))where the superindices s and c refer to the functions sine and cosine, respectively.On the other hand, the expression(vi+νi+−νi−)(tan(lij)cos(mi+μi)−sin(mi+μi))of model VTAC–MINO is replaced with∑k∈K(tan(lij)cos(mik)−sin(mik))(viβik+ψik+−ψik−).Observe that an analogous transformation apply to expressions obtained when replacing i with j. Additionally, if tan (gij) is used in the previous expression instead of tan (lij), then the corresponding transformation is performed in an analogous way.Finally, the expression(vi+νi+−νi−)(cot(lij)sin(mi+μi)−cos(mi+μi))of model VTAC–MINO is replaced with∑k∈K(cot(lij)sin(mik)−cos(mik))(viβik+ψik+−ψik−).The expression wherecot(gij)appears instead ofcot(lij)is analogously transformed. Notice that the cotangent function comes from the pathological cases in which a null denominator is involved in the expression. They are solved by turning π/2 all angles, notably by replacing lijand gij, respectively bylij+π/2andgij+π/2,hence the tangent of these angles by minus their cotangent.Let us define the following terms for all{i,j}∈Pin order to reduce notation in the final model,Bij=∑k∈K(tan(lij)cos(mik)−sin(mik))(viβik+ψik+−ψik−)Cij=∑k∈K(cot(lij)sin(mik)−cos(mik))(viβik+ψik+−ψik−)Dij=∑k∈K(tan(gij)cos(mik)−sin(mik))(viβik+ψik+−ψik−)Eij=∑k∈K(cot(gij)sin(mik)−cos(mik))(viβik+ψik+−ψik−)So, the set of constraints for model VTAC–MILO can be represented as follows.For each pair of aircraft{i,j}∈Pand altitude levelz∈Z:(3a)(1−pcij)(Aic−Ajc)+pcij(Ajs−Ais)⩽M1(1−δijz1)(3b)(1−pcij)(Bji−Bij)+pcij(Cji−Cij)⩽M2(1−δijz1)(3c)(1−pcij)(Aic−Ajc)+pcij(Ajs−Ais)⩽M3(1−δijz2)(3d)(1−pcij)(Dij−Dji)+pcij(Eij−Eji)⩽M4(1−δijz2)(3e)(1−pcij)(Ajc−Aic)+pcij(Ais−Ajs)⩽M5(1−δijz3)(3f)(1−pcij)(Bij−Bji)+pcij(Cij−Cji)⩽M6(1−δijz3)(3g)(1−pcij)(Ajc−Aic)+pcij(Ais−Ajs)⩽M7(1−δijz4)(3h)(1−pcij)(Dji−Dij)+pcij(Eji−Eij)⩽M8(1−δijz4)The set of constraints (3) detects and solves the conflict situations. Notice that pathological situations due to a null denominator in (1) are avoided in the model since each constraint has two parts controlled by parameter pcij. Remember that it is set up to 1 in preprocessing in case there is a pathological situation between aircraft i and j. Its multiplied term is the resulting trigonometric expression after turning π/2 rad the previous term controlled by1−pcij. If the direction of motions and all the angles are turned by π/2 rad, the tangent involved in (1) is on a smoother part of the function far from the asymptotes and it is no longer a pathological situation. On the other hand, it is well known that for model strengthening purposes, the so-called “big” M parameters should be small enough such that any feasible solution is allowed being the upper bounds of the left hand side in each constraint. So, suitable values for M1, M3, M5 and M7 arev¯i+v¯j; for M2 and M6 they are(v¯i+v¯j)(|tan(lij)|+1)if there is not a pathological case between aircraft i and j and otherwise,(v¯i+v¯j)(|cot(lij)|+1); and, for M4 and M8 they are(v¯i+v¯j)(|tan(gij)|+1)if there is not a pathological case between aircraft i and j and otherwise,(v¯i+v¯j)(|cot(gij)|+1).For each pair of aircraft{i,j}∈Pand levelz∈Z:(4)δijz1+δijz2+δijz3+δijz4+δijz5=1Constraints (4) force one of the two following situations: (a)∑n=14δijz=1,i.e., only one of the four possible cases in the geometric construction will be forced for the horizontal maneuvers in the pair of aircraft; and (b)δijz5=1which forces the case in which the two aircraft fly at different altitude levels and, so, the potential conflict situation between them is not anymore in place.For each aircraftf∈F:(5)∑k∈Kβfk=1Constraints (5) force only one β-variable to be equal to one for each aircraft.For each aircraftf∈Fand discretizationk∈K:(6a)ψfk+⩽νf+(6b)ψfk+⩽M9βfk(6c)νf+−ψfk+⩽M9(1−βfk)Constraints (6), where variablesνf+are used, are the Fortet inequalities to linearize a product of two variables (in this case, a continuous variable and binary one). Notice thatM9 can be set up tov¯f−vf.For each aircraftf∈Fand discretizationk∈K:(7a)ψfk−⩽νf−(7b)ψfk−⩽M10βfk(7c)νf−−ψfk−⩽M10(1−βfk)Constraints (7), where variablesνf−are used, are also Fortet inequalities to linearize a product of two variables. Notice that M10 can be set upvf−v̲f.For each aircraftf∈F:(8)∑z∈Zϕfz=1Constraints (8) force each aircraft to fly at only one altitude level.For each pair of aircraft{i,j}∈Pand levelz∈Z:(9)ϕiz+ϕjz+δijz5⩽2Notice thatδijz5=1forces that only one aircraft (i or j) can fly at altitude level z, at most (and flying at that level depends upon the situation to which the aircraft belongs also to another pair where the related sum of the δn-variables is equal to 1 forn=1,…,4). Forδijz5=0it results that constraint (9) is inactive, what means that the constraint system (3)–(8) decides the altitude level to perform the separation maneuver for both aircraft (either in the same altitude level, no matter what it is, or in any other allowed level), if any.For each aircraftf∈F:(10a)γf+⩾∑z∈Zzϕfz−zf∀f∈F(10b)γf−⩾zf−∑z∈Zzϕfz∀f∈FConstraints (10) relate the variables ϕ and γ with the initial altitude level for each aircraft. The right-hand-side (rhs) of these expressions counts the number of altitude levels that are between the configuration and its initial one for any aircraft. Notice that if the aircraft has changed the altitude of its configuration then just one of those rhs is greater than 0. So, taking into account the non-negativity requirement for the γ-variable and that the objective function (16) forces to minimize a weighted sum of those variables, constraints (10) ensure that γ-variables are equal to the absolute number of altitude changes in any optimal solution.For each aircraftf∈F:(11a)0⩽νf−⩽ν¯f−,νf−∈R+(11b)0⩽νf+⩽ν¯f+,νf+∈R+(11c)0⩽γf−⩽γ¯f−,γf−∈Z+(11d)0⩽γf+⩽γ¯f+,γf+∈Z+For each aircraftf∈Fand levelz∈Z:(11e)ϕfz∈{0,1}For each aircraftf∈Fand discretizationk∈K:(11f)βfk∈{0,1}(11g)ψfk+,ψfk−∈R+For each pair of aicraft{i,j}∈Pand levelz∈Z:(11h)δijz1,…,δijz5∈{0,1}The constraint system (11) defines the character of the variables.Additionally, as indicated above, constraints (6) and (7) can be replaced by the scheme presented in Kolodziej et al. (2013) (pp. 1041–1042) which is explained in the following. Notice that by construction, see constraints (5),βf0+∑kl∈Klβfkl+∑kr∈Krβfkr=1then, asψfk+≡νf+βfkandψfk−≡νf−βfk,it results thatνf+(βf0+∑kl∈Klβfkl+∑kr∈Krβfkr)=νf+⇒∑k∈Kψfk+=νf+νf−(βf0+∑kl∈Klβfkl+∑kr∈Krβfkr)=νf−⇒∑k∈Kψfk−=νf−such that, it results the following set of constraints, replacing (6) and (7), for each aircraftf∈F:(12a)ψfk+⩽M11βfk∀k∈K(12b)∑k∈Kψfk+=νf+and(13a)ψfk−⩽M12βfk∀k∈K(13b)∑k∈Kψfk−=νf−,where M11 and M12 can be fixed tov¯f−vfandvf−v̲f,respectively. Obviously, the replacement results in a stronger model since a LP region of model MILO is cut without eliminating any integer feasible solution. Notice that this new set has less constraints than the previous one and, additionally, only two “big” M are necessary instead of four ones as in the previous system.The solutions provided by the approximating model MILO are always feasible for model MINO, since the conflict detection and resolution constraints take into account the horizontal separation conditions. Notice that the incumbent SMILO solution will not be the optimal MINO one unless one of the discretizations corresponds exactly to that solution, which is not likely to happen. However, its relative gap in our broad computational solution is usually very small and its computing time is very small as well, see Section 5,As the conflict situations may be solved by performing horizontal maneuvers (velocity and/or turn changes) and/or vertical maneuvers (altitude level changes), three objective functions must be taken into account, one for each corresponding maneuver. The aim is to minimize the weighted sum of the positive and negative variations for the maneuvers as follows,(14)min∑f∈F(cfν+νf++cfν−νf−)(15)min∑f∈F(∑kr∈Krcfμ+βfkr(mfkr−mf)+∑kl∈Klcfμ−βfkl(mf−mfkl))(16)min∑f∈F(cfγ+γf++cfγ−γf−).The main idea of SMILO as proposed in this paper lies on the angle range discretization. The nonlinearities involved in the model VTAC–MINO make the problem too difficult to be solved by using standard state-of-the-art MINO solvers in case that the CDR solution is required in almost real-time as frequently it is. Those nonlinearities are due to trigonometric functions involving a continuous variable. So, the idea is to discretize the continuous variable taking some values in the angle variation range, so that all the nonlinearities are converted into parameters. Notice that this approximating model based on one discretization gives a feasible solution for the model VTAC–MINO without, obviously, guarantying any quality. However, in order to have a better approximation to the optimal solution of that model, we may reduce the angle range and discretize again taking new values, in such a way that, hopefully, a better solution will be obtained in the new iteration. We can continue iterating on that way until a stopping criterion is satisfied (see Section 5.2).So, the metaheuristic SMILO that is proposed in this work for solving model VTAC–MINO consists of sequentially solving model VTAC–MILO whose constraints system is: (3)–(5) and (8)–(13). The sequence is based on the angle variation range reduction. Model VTAC–MILO to be solved at the first iteration takes the initial bounds for the angle variation (recall that ± 30° is proposed by ERASMUS project). Once that model is solved at any iteration, the angle variation range is reduced and the model is solved again until the stopping criterion is satisfied. The rough SMILO is as follows:Step 0.Setmfout:=mfand perform the angle discretization for all aircraftf∈F,such that set:mfkrforkr∈Kr,mfklforkl∈Klandmf0:=mf.Solve model VTAC-MILO with the objective function (14), (15) or (16) (depending on the step in the GP scheme, see below), subject to (3)–(5) and (8)–(13).Updatemfoutfor each aircraft f as follows:mfout:=∑kr∈Krmfkrβfkr+∑kl∈Klmfklβfkl+mfβf0Takemfoutas the central angle for each aircraft f, reduce the angle variation bounds by a given value (see Section 5.2) and perform a new discretization.Stopping criterion testing. If it is not satisfied, then go to Step 1.The Goal Programming (GP) scheme was introduced in Charnes, Cooper, and Ferguson (1955) for a general multicriteria problem. This methodology consists of sequentially solving the optimization problem for each objective function allowing a deviation from a given threshold (or aspiration level) for each previously optimized function. The sequence is given by the user-driven priority order on the objectives to consider. Good surveys on this methodology are Ignizio (1985), Romero (1991), among others.Very frequently the conflict situations are resolved by performing only one maneuver. So that the higher value of the function (14), the lower value of functions (15) and (16), and, analogously, for the other two maneuvers. So, many feasible solutions can be given and, thus, depending on the preferences, one is preferred to another. We point out that in cases as for instance with “head to head” conflict situations, it is mandatory to perform some of the TC or AC maneuvers, instead of only VC. In the foreseeable future the ATCos could work on CDR by using more automated decision support systems where VC could be favored, something that in real-life today is not easy to be done since CDR is usually made by manual devices, see Averty, Johansson, Wise, and Capsie (2007), Frazzoli, Mao, Oh, and Feron (2001), Krozel and Peters (1997), Jardin (2003). This preference is understood in the sense that if a conflict situation can be resolved by using only VC, that will be the option to follow; otherwise, TC combined with VC is the option of choice provided that the conflict can be resolved without using AC. This is the reason in the lexicographical GP for minimizing the maneuvers in the following order: AC, TC and VC, since the minimization of AC should be stronger than for TC and this one to VC which is the most desirable maneuver in this preference order. However, notice that this order is user-driven and, then, it can be changed appropriately, if needed.When dealing with multi-objective optimization, the concept of an ideal value is required such that it is precisely the solution value of a model for a single objective function.First step. Obtain the ideal value for each maneuver by independently optimizing model VTAC–MILO in SMILO as described in Section 3, i.e., using the functions (14) for VC minimization, (15) for TC minimization and (16) for AC minimization, subject to the set of feasibility constraints (3)–(5) and (8)–(13), so that the valuessvv*,svt*andsva*are obtained, respectively. Notice thatsvv*is not used in the other steps, but it can be used in the comparison of the results obtained in the third step. For each of the two following steps, it is necessary to compute the maximum deviation of the related function that is allowed from its solution value obtained in the immediate previous optimization.This deviation (so-named aspiration level) is computed asɛt(svt**−svt*)for TC and⌈ɛa(sva**−sva*)⌉for AC, where ⌈x⌉ means the smallest integer value greater or equal than x, εtand εaare 0–1 fractional user-driven parameters to fix the maximum deviations, andsvt**andsva**are the maximum values for objective functions TC (15) and AC (16), respectively, and known as non-ideal values.Second step. Optimize function (15) for TC minimization subject to (3)–(5) and (8)–(13) together with the following additional constraint,(17)∑f∈Fcfγγf−Δ1⩽sva*+⌈ɛa(sva**−sva*)⌉where Δ1 is a slack variable for avoiding infeasibility to be (enough, slightly) penalized in the objective function. Letsvt(15)denote the related solution value.If no AC maneuvers are allowed, then,sva*and εaare set to 0 to avoid AC maneuvers in the CDR (which are the least comfortable ones).Third step. Optimizing function (14) for VC minimization subject to (3)–(5),(8)–(13) and (17) and the following constraint:(18)∑f∈F(cfμ+μf++cfμ−μf−)−Δ2⩽svt(15)+ɛt(svt**−svt(15)),where Δ2 is another slack variable as above.First step. Compute ideal values by independently optimizing (14)–(16):(3)–(5) and (8)–(13).Second step. Optimize (15):(3)–(5),(8)–(13) and (17).Third step. Optimize (14):(3)–(5),(8)–(13) and (17)–(18).Notice that this framework is to be used by both approaches for solving model VTAC–MINO, namely a general nonconvex MINO engine and metaheuristic SMILO. Observe that in the latter, each of the steps involves the sequential solving of a MILO model based on the discretization scheme that has been presented above. Letsvvgpdenote the solution value that is obtained for VC (14) in Third step, andsvtgpandsvagpdenote the values of the functions TC (15) and AC (16) that have been obtained while optimizing VC in that step.We propose that SMILO is to be applied whenever an aircraft enters or leaves the aerial sector. Additionally, it should be applied at a fixed time interval.Another issue related to the problem is the consideration of the aircraft surrounding the aerial sector. In Alonso-Ayuso, Escudero, and Martín-Campo (2014b) we propose general guidelines for dealing with that case. Anyway, the aim of our approach is the short term (say 2–5 minutes) for the time horizon, so, only the immediate conflicts should be avoided.This section presents the main results of a broad computational experiment that has been performed for assessing the validity of SMILO.The experiments were made in a 4xIntel Core i5-2430M, 2.40 gigahertz, 4 gigabytes RAM and Linux Xubuntu 12.04 OS. The state-of-the-art MILO solver engine of choice is Cplex v12.6 (Cplex, 2014) for solving the submodels MILO in SMILO, whereas the state-of-the-art non-convex MINO engine of choice for solving model MINO is Minotaur (Leyffer et al., 2011). We have tried the solver Baron (Sahinidis, 1996) but it does not handle trigonometric functions. Additionally, we experimented with LindoGlobal (Lindo Systems Inc., 2011) but it was outperformed by Minotaur.Three testbeds are considered for cases with different numbers of aircraft and allowed altitude levels. Each case (except for Testbed 1) is composed of 25 instances that are randomly generated for a square of 100x100  nautical miles (i.e., 185x185 kilometer, approx.). The velocities were generated between 486 and 594 nautical miles (i.e., 900 and 1100 kilometers per hour, approx.) and heading angles between−πand π, both uniformly generated; all of them flying at the same altitude level to produce more conflict situations. They are as follows:•Testbed 1 consists of nonrealistic VTAC instances for checking the different elements of the proposed approach.Testbed 2 consists of 10 cases (6 cases considering 2 altitude levels each, for 5, 6, 7, 10, 11 and 12 aircraft, and 4 additional cases considering 4 altitude levels each, for 5, 6, 7 and 10 aircraft). The instances in the testbed are randomly simulated within a realistic environment. The aim consists of testing the quality of the solutions obtained by the proposed approach versus solving model MINO by using Minotaur. Additionally, the analysis of the computing times indicates the ability of each of the two approaches for solving CDR operational problems in a real-life application.Testbed 3 consists of 12 cases considering 4 altitude levels each, for 5, 6, 7, 10, 11, 12, 15, 16, 17, 20, 21 and 22 aircraft. The aim consists of analyzing the computational effort of the proposed approach for instances with realistic-sized dimensions, where Minotaur could not provide solutions in affordable computing time.The best results that we have obtained for the angle variation reduction to perform in Second step of the GP scheme at a given iteration of SMILO have the angle range of the upper and lower bounds of the previous iteration divided by the factor 7/3.The MILO solver of choice Cplex is configured to stop if the relative gap between the lower and the upper bounds is less than 5 percent or if the computing time exceeds 25 seconds. However, the second criterion has never been satisfied in our computational experience. Cplex is also configured for a (hot) starting at any iteration from the solution obtained in the previous one since it is a starting feasible one.Nine discretizations have been used in the computational experience, consisting of 4 positive, 4 negative and the initial angle. Notice that the higher number of discretization the higher number of 0–1 β variables to use.It is worth to pointing out that the higher the number of iterations, the better the solution quality obtained up to some point. In this work, we consider 10 iterations. Adding new iterations does not significantly improve the solution quality in the testebeds we have experimented with, at least. On the other hand, we have tried with 7 iterations but, in this case, the gaps between the solution values obtained by SMILO and Minotaur are higher than for 10 iterations in many instances.Note: we have obtained the deviationsɛt(zt**−zt*)for TC and⌈ɛa(za**−za*)⌉for AC, by extrapolating the related results obtained by Minotaur engine for solving model VTAC–MINO, for those instances where it was possible. In any case, they should be user-driven input in a real life application.The cost parameters have been set to one, i.e.,cfν+,cfν−,cfμ+,cfμ−,cfγ+,cfγ−=1. However, the values of those parameters must be set up by an expert in a real-life application.The headings of the tables for reporting the main results of the computational experiment are as follows:•Instance information:Ca−z,configuration where a and z denote the number of aircraft and the number of altitude levels allowed, respectively.nc, number of pairs of aircraft in conflict situation.ni, number of instances solved by Minotaur in less than one hour.Solution values of model VTAC–MINO obtained by Minotaur:svv*,svt*,sva*,ideal values for VC (nautical miles per hour), TC (rad.) and AC (number of altitude levels), respectively.svvgp,svtgp,svagp,values of the functions for VC (14), TC (15) and AC (16), respectively, after the execution of the GP scheme.Relative gaps of the solution values obtained by SMILO versus the ones obtained by Minotaur, being computed assvS−svMsvM%,where subscripts S and M refer to SMILO and Minotaur, respectively:gv, gt, ga, relative gaps for the ideal values.gvgp,gtgp,gagp,relative gaps for the solution values for the maneuver changes obtained by the GP scheme (so-named GP values).Model dimensions:nc, nb, ni, number of continuous, binary and integer variables, respectively.ml, mnl, number of linear and nonlinear constraints, respectively.Computing times (in seconds):tv, tt, ta, times to obtain the ideal values for VC, TC and AC, respectively.tgp, time to solve the last two steps of the GP scheme.Note: The computation of the ideal values for solving model MINO by Minotaur and SMILO have different results, so, even some of the gaps could be negative (i.e., in favor of SMILO). It is due to working with different models since the constraints (17) and (18) depend on the ideal values. See Tables 1and 3.The instances in this testbed have been used for testing model MINO while it is solved by Minotaur and SMILO. They consist of a certain number of aircraft uniformly located on a circumference, all of them flying towards its center. Additionally, two aircraft are located at the same position in an instance (represented with * in Tables 1 and 2), such that the solvers should force AC for CDR. Obviously, the whole testbed is not realistic but, given the difficulty on solving the instances, it is used as a benchmark for our proposal.Table 1 reports the ideal and GP values for VC, TC and AC maneuvers, all of them obtained by Minotaur. Additionally, the table shows the relative gaps obtained by SMILO (by using Cplex in an iterative way) versus Minotaur. Finally, the table also reports the number of conflict situations that take place, showing the complexity of the problem to solve. Only the instances that Minotaur can solve in less than one hour are presented in the table.It can be observed in Table 1 that for the instances without star, the aircraft do not need AC maneuvers (see columnsvagp), since the conflicts can be avoided by performing VC and TC. As the aircraft are located uniformly on the circumference, notice that TC and AC maneuvers are not performed for the instances with an odd number of aircraft, since the conflict situations can be avoided by only performing VC. Observe that there are not “head to head conflicts”. However, for the instances with an even number of aircraft and without star, both VC and TC are performed (see columnssvvgpandsvtgp), since there are ‘head-to-head’ situations and must be avoided by performing TC. For all those instances no AC are required.However, for the instance denoted with star, an AC maneuver must be performed to avoid the conflict situation; it also uses TC to avoid conflict situations that remain in each level.On the one hand, observe that the relative gaps for the ideal values remain below 4 percent (columns gv, gtand ga) and, on the other hand, the relative gaps for the GP values are very small (columnsgvgp,gtgpandgagp) except for instance C2*-2. The small gaps show the small difference between the solutions of model MINO obtained by using Minotaur and SMILO. The negative signs of the gaps for VC are due to the fact that the VC variations obtained by Minotaur are very high.Table 2 reports the dimensions of models MINO and MILO, as well as the computing times (in seconds) required by Minotaur and SMILO for obtaining the ideal values for VC, TC and AC as well as the time required in total by the last two steps of the GP scheme.Observe in Table 2 that all the instances in the testbed are solved in less than 2 seconds by SMILO. Minotaur has also a good performance, although too much time is required for instance C4-4. Notice that instance only differ from C4-2 in the number of altitude levels that are allowed for the aircraft to change. Observe that the higher number of altitude levels, the higher the dimensions of models MINO and MILO and, then, the higher the computing time required by Minotaur and SMILO, respectively (being stronger the effect for Minotaur).The section reports the main results obtained for a testbed of 10 cases considering different numbers of aircraft. They are based on the randomly generated cases of 5, 10, 15 and 20 aircraft taken from Alonso-Ayuso et al. (2015). In order to test model MINO, additional nonrealistic cases are considered where up to two aircraft share the same position.Table 3 reports the ideal and GP values for solving the model by using Minotaur. For comparison purposes the relative gaps obtained by SMILO versus Minotaur are also reported, as well as the number of conflict situations and the number of instances solved by Minotaur in less than one hour. The number of aircraft under consideration and the number of altitude levels the aircraft are allowed to change are also reported.First of all, it is worth pointing out that the results reported in Table 3 are the averages over the 25 instances tested for each case, but for cases C06-4, C07-2, C07-4, C10-4, C11-2 and C12-2. The results shown for those other cases are the averages over the instances that could be solved in less than one hour by Minotaur, see column ni. Observe that almost the fifth part of the instances (46 out of 250) considered in the testbed cannot be solved by Minotaur in less than one hour. Notice that the higher the number of aircraft under consideration and altitude levels allowed, the higher the number of instances that are not solved in less than one hour by Minotaur. For those instances, observe that the relative gaps obtained by SMILO versus Minotaur are always less than 3 percent. The negative gap gtin case C10-4 is due to one instance whose gap is−3.27percent, making the average negative. In this case, SMILO underestimates TC allowing more VC.Table 4reports the dimensions of models MINO and MILO, as well as the computing times required by Minotaur and SMILO. As in Table 3 the reported results are the averages over the instances solved by Minotaur in less than one hour. It can be observed that the more altitude levels are considered, the more computing time is required for obtaining the solution. However, the effect is far stronger in the solution obtained by Minotaur than in the one obtained by SMILO. Observe that the latter obtains its incumbent solution in less than two seconds for the ideal values. Note: the computing time for the GP scheme is the sum of the times required by the last two steps: minimizing TC and VC subject to the corresponding set of constraints. So, that time is higher than the one required for computing each ideal value. In any case, it is always less than 8 seconds.Table 5reports the dimensions of model MILO, the ideal and GP values for VC, TC and AC, obtained by SMILO as well as the required computing time for a set of large-sized instances where 4 altitude levels are allowed. The number of conflict situations is also reported. The results and times shown in the table are averages over the 25 instances tested for each case. Observe that the computing time for obtaining the ideal values is smaller than 5 seconds. The time for the GP scheme is always higher due to the fact that several steps are required to obtain the final solution but, in any case, it is smaller than 25 seconds. Note: For the cases included in Testbed 3 Minotaur cannot provide a solution within the computing time limit (1 hour) that we have imposed.This section discusses the main results obtained by using Minotaur for solving model VTAC–MINO as well as those obtained by SMILO (by iteratively using Cplex for solving the related MILO models). It also reports the statistical distribution of the gaps (percent) by SMILO versus Minotaur.The results of the computational experience presented in this paper clearly show the good performance of Minotaur for solving small-sized instances of the nonconvex MINO model VTAC–MINO (where trigonometric functions must be handled). However, for large-size instances (say, above 5 aircraft) the computing time is higher than the one required by real-life operational applications. Notwithstanding, given the quality of the solution obtained by Minotaur for instances with 12 aircraft that we have been experimenting with, at least, it could be very useful for CDR simulation purposes. On the other hand, SMILO seems to be very suitable for CDR operational applications. Notice that it can handle instances with 22 aircraft, at least (see Table 5), where continuous, binary and integer variables are required in order to perform some of the three maneuvers (VC, TC, AC). Based on the computational results that have been reported, the incumbent values provided by SMILO for model VTAC–MINO are close to the ones provided by Minotaur (as tested for the instances with up to 12 aircraft) and the required computing time is very small. That time is not only for obtaining the ideal values (i.e., the solution for optimizing each maneuver type), but also including the time required by the GP scheme in multicriteria optimization.Table 6 related to Testbed 2 reports the minimum, median, mean and maximum relative gaps of the ideal values for the three maneuvers obtained by SMILO versus Minotaur over the instances solved in less than one hour by the latter. It shows that SMILO always obtains the same ideal value as Minotaur for VC and AC. However, there are small variations among the instances for TC. Case C07-2 has the highest maximum gap, 22.72 percent, but the mean is 1.37 percent and the median is 0.00 which preclude that the related instance with gap 22.72 percent is an outlier due to the small values of both, the mean and median. Some gaps are negative, probably due to the satisfaction of internal stopping criterion in Minotaur and / or different schemes for obtaining the ideal values as we pointed above.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
A Mixed Integer Linear Optimization (MILO) model is presented to deal with the aircraft conflict detection and resolution (CDR) problem, so-named VTAC, by allowing to perform both horizontal (velocity and angle turn changes) and vertical (altitude level changes) maneuvers. The model linearizes a Mixed Integer Nonlinear Optimization (MINO) model that we have presented elsewhere. The high difficulty of solving model VTAC–MINO by state-of-the-art nonlinear optimization solvers, due to a set of nonconvex nonlinear constraints, makes it not useful for real-life CDR operational applications where the Air Traffic Control officers require an almost immediate response. In order to reduce the computing time, the approximating model VTAC–MILO is presented in this work. As the nonlinear constraints involve trigonometric functions for the angle turn changes, a discretization of the angle range is used in such a way that an approximating Sequential MILO approach (so-named SMILO) is used. A Goal Programming scheme is considered in order to manage the three maneuvers at once. The gap of the incumbent value obtained by SMILO for solving model VTAC–MINO versus the one obtained by the state-of-the-art MINO solver Minotaur is very small for those (small-sized) instances where the latter requires an affordable computing time. Additionally, the time reported by using SMILO for a large number of instances with real-life dimensions assesses the usefulness of the approach presented in this work. As a line for future research, we would like to study other metaheuristics able to reduce even more the computing time without deteriorating the SMILO solution and increasing the number of aircraft to consider.