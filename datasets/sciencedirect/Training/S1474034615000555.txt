@&#MAIN-TITLE@&#
Integrating heterogeneous engineering knowledge and tools for efficient industrial simulation model support

@&#HIGHLIGHTS@&#
The enhanced knowledge management improves the simulation design and integration.The article proposes a data model supporting simulation model engineering.An infrastructure called the Engineering Service Bus improves simulation processes.The approach is evaluated on a hydraulic system use-case showing its efficiency.

@&#KEYPHRASES@&#
Knowledge modeling,Data transformation,Ontology design,Integrated environment,System integration and implementation,

@&#ABSTRACT@&#
Design of simulation models and their integration into industrial automation systems require knowledge from several heterogeneous data sources and tools. Due to the heterogeneity of engineering data, the integration of the tools and data are time-consuming and error-prone tasks nowadays. The key goal of this article is to provide an effective and efficient integration of heterogeneous data sources and tools as a knowledge basis to support dynamic simulation for industrial plants. The integrated knowledge is utilized both (i) in the design phase of simulation models for defining structure and interfaces of the models and (ii) in the runtime phase of industrial systems for model-driven configuration of the integrated environment. Reaching such goals with a manual approach or point-to-point integration is not beneficial as it may be possible for a few tools and data sources, but quickly gets very complex. A growing number of elements increases the risk of errors and the effort needed for integration. The proposed solution is based on a specification of a common data model to represent engineering knowledge and a service-oriented tool integration with the Engineering Service Bus. Engineering knowledge is integrated in a knowledge base implemented with ontologies in Web Ontology Language-Description Logic (OWL-DL). The proposed approach is demonstrated and evaluated on an educational hydraulic system. Major results of the article are: (i) a data model to represent engineering knowledge for dynamic industrial systems, (ii) the integration platform that, based on this model, integrates the tools for system design and runtime, and (iii) basic design-time and runtime processes for the integrated industrial simulations.

@&#INTRODUCTION@&#
Current industrial systems are becoming very complex. To support their design and to facilitate testing, simulation is becoming an essential method for improving the design of industrial plants as well as to optimize their behavior. Industrial simulation is considered as a basic tool for a virtual commissioning of industrial plants, which is intended to optimize the structure of plants during engineering processes as well as to test and to fine-tune control algorithms. This kind of tasks require to perform many experiments. Making them on the real plant directly would be time-consuming and costly, therefore, the preferred approach is to shift the experiments into the simulated world. Furthermore, experiments on real systems can be unsafe (e.g., in case of power plants or aircrafts), unrepeatable under the same conditions (e.g., operation under unique time-courses of weather conditions and activity profiles), and costly (e.g., expensive sensors placed under extreme conditions). As simulation models are the main building stones for the virtual commissioning, this article is focused on the support for the design of simulation models as well as their integration within industrial automation systems. These issues are also integral parts of the envisioned Factories of the Future [1] and the article satisfies their requirements.Although the use of simulations offers a lot of benefits, the current approaches suffer from (i) a complicated design phase and (ii) a problematic integration with the rest of systems related to the design and tool integration for industrial plants. Even though companies and researchers focused on industrial automation emphasize the need for increasing the integration and re-use of codes, algorithms, and other engineering artifacts, such needs are not met in existing simulations on the SCADA system level (i.e., Supervisory Control and Data Acquisition system level, which is explained in details later). Current industrial plants have a mechatronic nature frequently, i.e., the systems are created by collaborative work of several engineering disciplines [2,3]. To properly support the design of simulations, it is needed to integrate heterogeneous data and tools from such different engineering areas. However, sharing knowledge and data in non-standardized and non-automated ways is very inefficient. Important pieces of information can get lost and delays in engineering projects can occur [4].The main motivation for this article is to reuse the knowledge related to design and structure of industrial plants for the simulation model design and integration. The engineering knowledge is available from engineering plans, such as electrical schemas, piping and instrumentation diagrams (P&IDs), floor plans, mechanical plans and others. Such engineering plans exist in every industrial project and they can be reprocessed for simulation purposes. To support this issue, a knowledge base is used. The utilized knowledge base is called the Engineering Knowledge Base (EKB) and it is introduced in [5]. The EKB can involve several data models represented as ontologies [6]. This article discusses the EKB data models intended to support dynamic simulations for industrial plants. The proposed integration process does not cover technical integration only, but it also incorporates the semantics, i.e., the meaning of knowledge and data. In addition, the proposed approach covers the whole simulation life-cycle: design, integration, testing, and runtime operation phases. From the point of view of including semantics and targeting the whole simulation life-cycle, the existing integration in the domain of industrial simulation is rather weak. In addition, this article describes the infrastructure that is able to process available domain models (plans), and the process how to configure and how to utilize the proposed model and infrastructure from the user perspective.The operation of industrial plants is automated by automation systems. They are software parts of industrial systems and their design phase is difficult and costly especially in case of the current complex mechatronic systems. The addressed integration level is depicted in Fig. 1, emphasizing the dash-dot contribution of this article. This schematic layered hierarchy of automation systems is called the automation pyramid. Many particular versions of the pyramid exist; one of its representations can be found in [7].The pyramid depicted in Fig. 1 represents our view on the data architecture in automation systems. On the lowest level, there are input and output data, which are physically handled by I/O modules and fieldbuses. On the second level, there are control algorithms in programmable logic controllers (PLCs). The third level consists of a SCADA system [8]. This level is proposed to be extended with simulations. A SCADA system is a system that is intended to provide access to industrial plants, both for human operators and for upper software systems. It can be considered as a borderline between the hardware and software parts of the automation system, because the lower levels are tightly connected to the hardware, whereas the higher levels are software-oriented. SCADA systems include human–machine interfaces (HMIs) [9] that are software tools for the interaction with human operators, historians for storing time-series of historical data, alarms and events subsystems, and many other subsystems. In this article, we consider a SCADA to be a software system only. The highest levels of the automation pyramid include Manufacturing Execution System (MES) providing planning and scheduling of the production, and Enterprise Resource Planning (ERP), which is used for the company management (e.g., SAP).The goal of the article is to reuse the engineering knowledge related to engineering-phase of industrial plants for supporting the design and integration of simulation models on the SCADA level of automation systems. The article addresses the following research issues, whose position is depicted by numbered circles in Fig. 2relating the research issues to the state of the art:•RI–1: Design of the Engineering Knowledge Base for SimulationDesign of a knowledge base has to allow capturing all relevant pieces of information to support the industrial simulation model design and integration. This research issue is related to the application of the EKB principles for simulation purposes.RI–2: Design of a Technical InfrastructureA modular infrastructure integrating various tools and supporting the knowledge base for capturing structured knowledge as well as model-driven configuration and simulation model design poses a challenge.RI–3: Engineering and Integration of Simulation ModelsA methodology for simulation model design based on formalized knowledge is required to make simulation engineering more efficient and to prevent design and integration errors.The remainder of the article is structured as follows. Section 2 summarizes the related work in the areas addressed in the rest of the article. Section 3 addresses research issue RI–1 dealing with the structure of the EKB. The section proposes a common data-model to capture knowledge about physical systems, simulations and other domains in automation systems. Section 4 discusses the Engineering Service Bus as a technical infrastructure satisfying the needs for the support of industrial simulations. It provides a solution for the research issue RI–2. Section 5 addresses the research issue RI–3. It is focused on the process of populating the knowledge base with knowledge and retrieving it, as well as it also discusses the differences between design-time and runtime processes of the Engineering Service Bus. Section 6 shows how to utilize the proposed approach in practice. It describes the hydraulic use-case to illustrate and to evaluate the method. Finally, Section 7 concludes, evaluates contributions of the novel method and proposes further work.

@&#CONCLUSIONS@&#
