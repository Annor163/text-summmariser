@&#MAIN-TITLE@&#
Stochastic linear programming games with concave preferences

@&#HIGHLIGHTS@&#
We study stochastic linear programming games, a class of stochastic cooperative games.These games can model various settings involving payoff sharing under uncertainty.We focus on the core of these games under a scenario-dependent allocation scheme.The core is nonempty when preferences are given by concave certainty equivalents.For some certainty equivalents, a core allocation can be computed in polynomial time.

@&#KEYPHRASES@&#
Game theory,Stochastic cooperative game,

@&#ABSTRACT@&#
We study stochastic linear programming games: a class of stochastic cooperative games whose payoffs under any realization of uncertainty are determined by a specially structured linear program. These games can model a variety of settings, including inventory centralization and cooperative network fortification. We focus on the core of these games under an allocation scheme that determines how payoffs are distributed before the uncertainty is realized, and allows for arbitrarily different distributions for each realization of the uncertainty. Assuming that each player’s preferences over random payoffs are represented by a concave monetary utility functional, we prove that these games have a nonempty core. Furthermore, by establishing a connection between stochastic linear programming games, linear programming games and linear semi-infinite programming games, we show that an allocation in the core can be computed efficiently under some circumstances.

@&#INTRODUCTION@&#
Consider a situation in which a set of players can cooperatively participate in a joint venture. For example, a group of retailers may decide to share the cost of jointly managing their inventory and demand, and take advantage of any economies of scale. In order for such a collaboration to be successful, the participants must agree on how to share any joint payoffs that result from cooperation. Cooperative game theory provides a mathematical framework for modeling how these payoffs of cooperation should be shared.Cooperative game theory has been applied to a multitude of payoff-sharing problems that arise in operations research. A short and necessarily incomplete list of examples includes transportation (e.g. Potters, Curiel, and Tijs, 1991; Göthe-Lundgren, Jörnsten, and Värbrand, 1996; Toriello and Uhan, 2013; Rosenthal, 2013), scheduling (e.g. Curiel, Pederzoli, and Tijs, 1989; Schulz and Uhan, 2010), and inventory management (e.g. Hartman, Dror, and Shaked, 2000; Chen and Zhang, 2006; van den Heuvel, Borm, and Hamers, 2007; Gopaladesikan, Uhan, and Zou, 2012; Özen, Erkip, and Slikker, 2012; Timmer, Chessa, and Boucherie, 2013). In the vast majority of this past work, the payoffs of cooperation are deterministic. Even when the payoffs arise from a stochastic setting, it has been almost always assumed that players are only concerned with expected payoffs, and that players are risk-neutral. While in some circumstances these may be reasonable assumptions, often they are not.The stochastic cooperative game framework of Suijs, Borm, De Waegenare, and Tijs (1999) offers another way to approach payoff sharing under uncertainty. In these games, the payoffs of cooperation are represented by random variables, and players’ attitudes toward risk are explicitly modeled. In this work, we study a fairly general class of stochastic cooperative games in which the payoffs under any realization of uncertainty are represented by linear programs. This class encompasses the stochastic counterparts of various classic deterministic cooperative games, such as some of the ones mentioned above.As mentioned above, cooperative games with deterministic payoffs arising from operations research problems have been widely studied. Of particular note here are those with payoffs represented by specially-structured mathematical programs. Perhaps the most prominent example is the class of linear programming games introduced by Owen (1975), who showed that allocations in the core of these games can be computed using optimal dual multipliers of the underlying linear program. These dual-based core allocations have been widely used and studied (e.g. Perea, Puerto, and Fernández, 2012). Several authors have shown that a variety of cooperative games can be seen as linear programming games; examples include assignment games (Shapley and Shubik, 1971), maximum flow games (Kalai and Zemel, 1982), and network synthesis games (Tamir, 1991), which include minimum cost spanning tree games (Granot and Huberman, 1981) as a special case. Other games arising from specially-structured mathematical programs include packing and covering games (Deng, Ibaraki, and Nagamochi, 1999) and integer minimization games (Caprara and Letchford, 2010).Deterministic cooperative game theory has also been used to allocate the expected payoffs of cooperation arising from a stochastic setting. For instance, a variety of authors have studied several types of inventory centralization games—deterministic cooperative games in which payoffs correspond to the optimal expected cost of managing inventory and transportation in order to meet stochastic demand (Chen and Zhang, 2009; Hartman et al., 2000; Müller, Scarsini, and Shaked, 2002; Özen, Fransoo, Norde, and Slikker, 2008; Slikker, Fransoo, and Wouters, 2005). Özen, Slikker, and Norde (2009) proposed and studied a general class of deterministic cooperative games in which the optimal expected value of a stochastic optimization problem is allocated among players. As mentioned above, this approach to payoff sharing in stochastic settings can be problematic, especially when the players have different attitudes toward risk.Researchers have proposed several cooperative game-theoretic frameworks that deal directly with uncertain payoffs (e.g. Charnes and Granot, 1973; Suijs et al., 1999; Branzei, Dimitrov, and Tijs, 2003; Monroy, Hinojosa, Mármol, and Fernández, 2013). Stochastic cooperative games, introduced by Suijs et al. (1999), are particularly attractive because as mentioned earlier, they model payoffs as random variables and explicitly model different players’ attitudes toward risk. Suijs et al. (1999), Suijs and Borm (1999), and Suijs (2000a) extended various notions from deterministic cooperative game theory, such as the core, the nucleolus, balancedness, superadditivity and convexity, to stochastic cooperative games. There has been a smattering of research on applying the stochastic cooperative game framework to specific collaborative decision-making problems; the most related here is the work on stochastic linear production games by Suijs (2000b).In this work, we study stochastic linear programming games. In these games, the payoff under any realization of uncertainty is represented by a specially structured linear program. These games are quite general, and include the games studied by Owen (1975) and Suijs (2000b) as special cases. We illustrate this generality by giving some examples. For instance, we show that the inventory centralization cost sharing situations studied by Özen et al. (2008) and Chen and Zhang (2009) can be modeled as stochastic linear programming games. We also describe examples arising from joint portfolio management and cooperative network fortification.We focus on the core of stochastic linear programming games: roughly speaking, the set of payoff allocations that are resistant to coalitional defections. We consider allocations that must be determined before the uncertainty is realized, and—departing from the existing literature—are allowed to have an arbitrary dependence on the realized uncertainty. Working under the assumption that each player’s preferences over random payoffs can be represented by a monetary utility functional (i.e. the negative of a risk measure; Artzner, Delbaen, Eber, and Heath, 1999), we establish a connection between the core under this allocation scheme and the core of an auxiliary deterministic cooperative game, following the work of Suijs and Borm (1999).Using this connection, we show that when players’ preferences are represented by concave monetary utility functionals (i.e. convex risk measures; e.g. Föllmer and Schied, 2002a), the core of a stochastic linear programming game is always nonempty, and that the auxiliary deterministic cooperative game is a linear semi-infinite programming game. Furthermore, for certain classes of concave monetary utility functionals, which include the well-studied conditional value-at-risk (Acerbi and Tasche, 2002; Rockafellar and Uryasev, 2000) and the simple worst-case-scenario monetary utility functional, we show that the auxiliary deterministic cooperative game is in fact a linear programming game. As a result, an allocation in the core in these cases can be computed in time polynomial in the number of players.In the stochastic cooperative game framework of Suijs et al. (1999), the actions available to each coalition are explicitly modeled, and the worth of a coalition is modeled as a random variable that depends on the action that the coalition takes. The stochastic cooperative game framework also explicitly models each player’s preferences over random payoffs, allowing the players to have different attitudes toward risk.Consider a probability space(Ω,F,p). LetXbe a linear space of bounded random variables on Ω. A stochastic cooperative game is a quadrupleΓ=(N,v,{AS}S∈2N∖{∅},{≿i}i∈N),where N = {1, …, n} is the set of players, ASis the set of actions available to the subset of players S ∈ 2N∖{∅},v:2N∖{∅}×AS→Xmaps actions of S ∈ 2N∖{∅} to random worths or payoffs inX,and ≿iis the preference relation of player i ∈ N over these random worths. A subset of players S ∈ 2N∖{∅} is a coalition; the set of all players N is the grand coalition.In this work, we make a few assumptions and definitions that depart from much of the existing literature on stochastic cooperative games. First, we assume that the uncertainty is finite: that is, Ω is finite andF=2Ω. We let v(S, a, ω) denote the worth of coalition S ∈ 2N∖{∅} with action a ∈ ASin scenario ω ∈ Ω. Second, we consider allocations that can depend arbitrarily on the realized scenario: an allocation for a coalition S ∈ 2N∖{∅} in Γ is a pair(x,a)∈RS×Ω×ASsuch that(2.1)∑i∈Sxi(ω)≤v(S,a,ω)forω∈Ω.In other words, (x, a) represents an allocation of payoffs for every scenario: before the uncertainty is realized, the players in S choose an action a ∈ AS, and each player i ∈ S is promised an allocation of xi(ω) if scenario ω ∈ Ω is realized. The relationship between allocations in different scenarios is arbitrary: that is, for every player i ∈ N, there are no constraints on how xi(ω) and xi(ω′) are related, for any pair of scenarios ω, ω′ ∈ Ω. In addition, in every scenario, the total amount allocated to the coalition S cannot exceed the worth of the coalition. We denote the set of allocations for coalition S by ZS, and the allocation of player i in (x, a) by (x, a)i= (xi(ω))ω ∈ Ω. We assume that ZSis nonempty for every coalition S ∈ 2N∖{∅}.Based on this notion of an allocation, we define the core of stochastic cooperative game Γ as the set of allocations (x, a) ∈ ZNfor the grand coalition N such thatforallS∈2N∖{∅},theredoesnotexistanallocation(x′,a′)∈ZSsuchthat(x′,a′)i≻i(x,a)iforalli∈S.As with the core of a deterministic cooperative game, the idea behind the core of a stochastic cooperative game is to allocate payoffs to all the players so that no coalition of players has incentive to defect. Also like deterministic cooperative games, a stochastic cooperative game with a nonempty core is said to be balanced.Each coalition of a stochastic cooperative game induces a subgame in the following way. For each coalition R ∈ 2N∖{∅}, definevR:2R∖{∅}×AS→Xso that vR(S, a) = v(S, a) for every S ∈ 2R∖{∅}. ThenΓR=(R,vR,{AS}S∈2R∖{∅},{≿i}i∈R)is a subgame of Γ for every R ∈ 2N∖{∅}. A stochastic cooperative game Γ is said to be totally balanced if the core of subgame ΓRis nonempty for all R ∈ 2N∖{∅}.The definition of an allocation above is broader than the definitions that have been typically studied in the stochastic cooperative game literature, which focus on allocating fixed proportions of a coalition’s random worth to the players. For example, Suijs and Borm (1999) considered allocations (x, a) for coalition S ∈ 2N∖{∅} with the following form:(2.2a)xi(ω)=di+ri·v(S,a,ω)fori∈Sandω∈Ω,where(2.2b)∑i∈Sdi≤0,∑i∈Sri=1,ri≥0fori∈S.In other words, the values (di)i ∈ Srepresent deterministic transfer payments between the players in S, and the values (ri)i ∈ Srepresent the proportions of the random worth v(S, a, ω) allocated to each player in S, which are the same in every scenario ω ∈ Ω. Note that in contrast, our definition of an allocation allows for different proportions of the random worth to be allocated in different scenarios. As a result of this additional flexibility, there are stochastic cooperative games that are balanced under our definition of an allocation, but not balanced under the definition of an allocation described in (2.2). We give a simple example later in Example 2.3.A functionϕ:X→Ris a monetary utility functional (e.g. Föllmer and Schied, 2011) if it satisfies the following conditions:(M1)Monotonicity: If X(ω) ≥ Y(ω) for all ω ∈ Ω, then ϕ(X) ≥ ϕ(Y) for allX,Y∈X;Translation invariance: ϕ(d + X) = d + ϕ(X) for allX∈Xandd∈R.Note that ϕ is a monetary utility functional if and only if − ϕ is a risk measure(Artzner et al., 1999). A monetary utility functional ϕ can be interpreted as the deterministic equivalent of a random payoff: that is, one is indifferent between receiving the amount ϕ(X) with certainty and receiving the random payoff X. Under this interpretation, the two conditions above are clear. Condition (M1) says that if one random payoff weakly dominates another in all scenarios, then the monetary utility of the former is at least that of the latter. Condition (M2) states that if a random payoff is augmented by some deterministic amount d, then its monetary utility is also augmented by d.The monetary utility functional ϕ is concave if it satisfies:1.Concavity: ϕ(λX + (1 − λ)Y) ≥ λϕ(X) + (1 − λ)ϕ(Y) for allX,Y∈Xand λ ∈ [0, 1].Condition (M3) is rather natural from an economic perspective: diversification never decreases the desirability of a random payoff. In this case, − ϕ is known as a convex risk measure(Föllmer and Schied, 2002a). Furthermore, a concave monetary utility functional ϕ is coherent if it satisfies:1.Positive homogeneity: ϕ(λX) = λϕ(X) for allX∈Xand λ ≥ 0.Condition (M4) requires that the monetary utility functional scales linearly. Under these conditions, − ϕ is a coherent risk measure(Artzner et al., 1999).One important property of concave and coherent monetary utility functionals is that they admit a robust representation in the following sense. LetM1be the class of all probability measures on(Ω,F),and letM1,fbe the class of all measuresq:F→[0,1]on(Ω,F)that are normalized so that q(∅) = 0 and q(Ω) = 1 and are finitely additive, i.e. q(A∪B) = q(A) + q(B) for all disjointA,B∈F. Note that when Ω is finite,M1,f=M1.Theorem 2.1Föllmer and Schied, 2002b; 2011ϕ:X→Ris a concave monetary utility functional if and only if there exists a penalty functionα:M1,f→R∪{+∞}bounded from below and not equal to + ∞ such that(2.3)ϕ(X)=infq∈M1,f{Eq[X]+α(q)}forX∈X,whereEq[X]denotes the expectation of X under the measure q.Moreover, ϕ is coherent if and only if there exists a setQ⊆M1,fsuch that ϕ can be represented as in (2.3) with the penalty functionα(q)={0ifq∈Q,+∞otherwise;in other words,(2.4)ϕ(X)=infq∈QEq[X]forX∈X.Moreover, the setQcan always be chosen to be convex and such that the infimum in (2.4) is attained.Roughly speaking, when ϕ is concave, ϕ(X) can be interpreted as the worst-case expected value of X over all probability measures, weighted by the penalty function α. When ϕ is coherent, ϕ(X) can be interpreted as the worst-case expected value of X over a collectionQof possible probability measures. In this work, we refer to the setQin (2.4) as the family of generating measures of ϕ.When the family of generating measuresQof a coherent monetary utility functional ϕ is finite, we say that ϕ is finitely generated. In this case, under our assumption that the set of scenarios Ω is finite, ϕ can be equivalently generated by a polytope: the convex hull ofQ. Conversely, any coherent monetary utility functional ϕ generated by a polytope of measuresQis finitely generated by the extreme points ofQ.There are several important examples of finitely generated coherent monetary utility functionals. One simple example is the worst-case monetary utility functionalϕworst(X)=infω∈ΩX(ω)forX∈X.By settingQto be the set of all probability measures on(Ω,F)—in other words, the unit simplex inRΩ—we see that ϕworst has the same form as ϕ in (2.4). Another such example arises from the well- studied risk measure, conditional value-at-risk (Acerbi and Tasche, 2002; Rockafellar and Uryasev, 2000). The conditional value-at-risk for a confidence level α ∈ (0, 1] is defined asCVaRα(X)=inft{t+1αE[max{−t−X,0}]}.The conditional value-at-risk is a coherent risk measure. In particular, if we define the monetary utility functional ϕ = − CVaRα, then ϕ is a coherent monetary utility functional generated by the polytopeQ={q∈RΩ:∑ω∈Ωq(ω)=1,0≤q(ω)≤p(ω)/αforω∈Ω}.Suppose that for a preference relation ≿ over random variables inX,there exists a monetary utility functional ϕ that satisfies1.Preference monotonicity: X≿Y if and only if ϕ(X) ≥ ϕ(Y) for allX,Y∈X.We call such a functional a certainty equivalent for ≿. If the underlying monetary utility functional is concave, we say that the certainty equivalent and the associated preferences are concave. We define certainty equivalents and preferences that are coherent and finitely generated in a similar fashion. Condition (M5) states that one random payoff is weakly preferred to another if and only if the certainty equivalent of the former is at least the certainty equivalent of the latter. Note that (M1) and (M5) together imply the natural condition thatX(ω)≥Y(ω)forallω∈Ω⟹X≿Y.Researchers in the operations research community have used monetary utility functionals or risk measures to capture a decision-maker’s attitude toward risk in the objective function of a variety of stochastic optimization problems. Their focus has typically been on coherent risk measures, since their supporting axioms are arguably reasonable from an economic perspective, and their convexity and robust representation yield nice structural and computational properties. Some have focused on specific measures, such as the worst-case risk measure and conditional value-at-risk described above (e.g. Yu, 1998; Rockafellar and Uryasev, 2000; Gotoh and Tanako, 2007; Wu, Zhu, and Teunter, 2013; Chan, Mahmoudzadeh, and Purdie, 2014). Others have focused on more general classes of coherent risk measures (e.g. Ahmed, Cakmak, and Shapiro, 2007; Choi, Ruszczyński, and Zhao, 2011).Using monetary utility functionals to represent a decision-maker’s preferences over stochastic payoffs is an alternative to the traditional expected utility approach (von Neumann and Morgenstern, 1944). For example, while the expected utility approach evaluates a stochastic payoff as the expected value of a nonlinear transformation of the payoff under a given probability distribution, the coherent monetary utility functional evaluates a stochastic payoff as the worst-case expected payoff over the decision-maker’s collection of possible probabilistic views. These are not entirely distinct approaches, however: under the theory of expected utility, any preference relation consistent with an exponential utility function has a concave monetary utility functional as a certainty equivalent (e.g. Fritelli and Scandolo, 2005).There are even stronger ties between other well-studied theories of choice and the monetary utility functionals studied in this work. In the dual theory of choice (Yaari, 1987), stochastic payoffs are evaluated by the expected value of the payoff under a nonlinear transformation of the probability distribution. It turns out that any preference relation consistent with the dual theory of choice has a coherent monetary utility functional as a certainty equivalent (Denneberg, 1990; Wang, Young, and Panjer, 1997). In the theory of generalized expected utility (Quiggin, 1993; Schmeidler, 1986), stochastic payoffs are also evaluated by an expected value, this time of a nonlinear transformation of the payoff under a nonlinear transformation of the probability distribution. Any preference relation consistent with this theory of choice has a concave monetary utility functional as a certainty equivalent (Föllmer and Schied, 2002b). For further details on the connection between monetary utility functionals and theories of choice, we refer the reader to Tsanakas and Desli (2003) and Denuit, Dhaene, Goovaerts, Kaas, and Laeven (2006).Suppose that each player’s preference relation can be represented by a certainty equivalent. In particular, for each player i ∈ N, the preference relation ≿ican represented by a certainty equivalent ϕi. The certainty equivalent game of Γ is a deterministic cooperative game (N, vΓ) with(2.5)vΓ(S)=sup(x,a)∈ZS∑i∈Sϕi((x,a)i)forS∈2N∖{∅}.We assume that the supremum in (2.5) is finite for every coalition S ∈ 2N∖{∅}. Otherwise, it would be possible, for example, for every player i ∈ N to obtain an arbitrarily large certainty equivalent by simply acting on its own, which is unreasonable from a practical perspective. We also make the mild technical assumption that the supremum in (2.5) is attainable for every coalition S ∈ 2N∖{∅}: that is, we can replace “sup” with “max .”Recall that the core of a deterministic cooperative game (N, u) is the set of allocationsχ∈RNsuch that∑i∈Nχi=u(N),∑i∈Sχi≥u(S)forS∈2N∖{∅}.When the players’ preferences are represented by certainty equivalents, the core of a stochastic cooperative game Γ is equivalent, in some sense, to the core of the corresponding certainty equivalent game (N, vΓ).11We use the notation “ core( · )” for both deterministic and stochastic cooperative games interchangeably. It should be clear from the context which meaning is intended.Proposition 2.2The core of Γ is nonempty if and only if the core of (N, vΓ) is nonempty. Furthermore:a.If (x*, a*) ∈  core(Γ), then χ ∈  core(N, vΓ), where χi= ϕi((x*, a*)i)for all i ∈ N.If χ ∈  core(N, vΓ), then (x′, a*) ∈  core(Γ), where(x*,a*)∈argmax(x,a)∈ZN∑i∈Nϕi((x,a)i),xi′(ω)=xi*(ω)+χi−ϕi((x*,a*)i)fori∈N,ω∈Ω.A variant of Proposition 2.2 was proven by Suijs and Borm (1999) for the definition of an allocation described in (2.2). One can prove this proposition using techniques similar to theirs. For the sake of completeness, we provide a proof in Appendix A.Using Proposition 2.2, we give an example of a stochastic cooperative game whose core is nonempty under our definition of an allocation, but is empty under the definition of Suijs and Borm (1999) described in (2.2).Example 2.3Consider the following stochastic cooperative gameΓ=(N,v,{AS}S∈2N∖{∅},{≿i}i∈N)with player set N = {1, 2}. The scenario set is Ω = {ω1, ω2}. In this game, the coalitions’ actions do not affect their worths, so that v(S, a, ω) can simply be written as v(S, ω) for all S ∈ 2N∖{∅}, a ∈ AS, and ω ∈ Ω. The worth function v for this game isv({1,2},ω1)=1,v({1},ω1)=1,v({2},ω1)=0,v({1,2},ω2)=1,v({1},ω2)=0,v({2},ω2)=1.In other words, in scenario ω1, player 1 alone receives as much as the grand coalition, while player 2 alone receives nothing. In scenario ω2, the opposite holds.The players’ preferences are given by the certainty equivalentsϕ1(X)=X(ω1),ϕ2(X)=X(ω2)forX∈X.That is, each player’s preferences are dictated by its best-case scenario in this game. Note that ϕ1 and ϕ2 can be written in the form (2.4).It is straightforward to show that under our definition of an allocation, the certainty equivalent game (N, vΓ) isvΓ({1,2})=2,vΓ({1})=1,vΓ({2})=1.In this case, the core of (N, vΓ) is nonempty, and so by Proposition 2.2, the core of Γ is nonempty. It is also straightforward to show that under the definition of an allocation due to Suijs and Borm (1999), the certainty equivalent game (N, vΓ) isvΓ({1,2})=1,vΓ({1})=1,vΓ({2})=1,and so the core of Γ in this case is empty.Intuitively, the players’ preferences will always result in a “lucky” and an “unlucky” player, depending on the realized scenario. The flexibility of an allocation under our definition can accommodate for both the “lucky” and the “unlucky” players, but this is not possible under the definition of Suijs and Borm (1999).We study the following generalization of the stochastic linear production games introduced by Suijs (2000b), which we call stochastic linear programming games. A stochastic linear programming game is a stochastic cooperative gameΓ=(N,v,{AS}S∈2N∖{∅},{≿i}i∈N): the action sets are(3.1)AS={(ai)i∈S∪{0}:G0a0+∑i∈SGiai≤∑i∈Shi}forS∈2N∖{∅}for some fixed constraint matrices and vectors {Gi, hi}i ∈ N∪{0}, and the worth v(S, a, ω) of coalition S ∈ 2N∖{∅} with action a ∈ ASinscenario ω ∈ Ω is(3.2a)v(S,a,ω)=maxb(ω)c0a0+∑i∈Sciai+d0(ω)b0(ω)+∑i∈Sdi(ω)bi(ω)(3.2b)s.t.D0a0+∑i∈SDiai+E0(ω)b0(ω)+∑i∈SEi(ω)bi(ω)≤∑i∈Sfi(ω)for some fixed objective function vectors {ci, {di(ω)}ω ∈ Ω}i ∈ N∪{0} and constraint matrices and vectors {Di, {Ei(ω), fi(ω)}ω ∈ Ω}i ∈ N∪{0}.This setting is similar to the classic two-stage stochastic linear program with recourse. In the first stage, before the uncertainty is realized, a coalition S ∈ 2N∖{∅} chooses an action a ∈ AS, which is not scenario-dependent. In the second stage, after the uncertainty is realized, the coalition S takes a corrective or recourse action b(ω) to maximize its objective function, depending on which scenario ω ∈ Ω has been realized. Note that the action taken in the first stage can directly affect which recourse actions are possible in the second stage.We assume that the objective function vectors, constraint matrices, and constraint vectors are given so that v(S, a, ω) is finite for all S ∈ 2N∖{∅}, a ∈ AS, and ω ∈ Ω. Note that the constraints (3.1) can contain constraints of the formG^iai≤h^ifori∈Sfor some matrices{G^i}i∈Sand vectors{h^i}i∈S. In a similar manner, the constraints (3.2b) can contain constraints of the formD^iai+E^i(ω)bi(ω)≤f^i(ω)fori∈Sfor some matrices{D^i,E^i(ω)}i∈Sand vectors{f^i(ω)}i∈S.These games are a generalization of the stochastic linear production games of Suijs (2000b). Unlike those games, the stochastic linear programming games described here allow us to differentiate between an action taken by players in the first stage and a recourse action in the second stage. In addition, stochastic linear programming games do not assume that the objective function vectors or constraint vectors are necessarily nonnegative. Finally, these games allow for uncertainty in the constraints in addition to the objective function.Consider the following variant of a simple investment game described by Suijs et al. (1999). In this game, there is a set of investors N and a set of assets F. Each investor i ∈ N has an initial endowment miof money, and each asset j ∈ F has a stochastic return dj(ω) in scenario ω ∈ Ω. The investors in coalition S ∈ 2N∖{∅} distribute their collective endowment ∑i ∈ Smiamong the assets in F in the first stage, before the returns are realized.This setting can be modeled as a stochastic cooperative game Γ = (N, v, {AS}S⊆N, {≿i}i ∈ N): the action set for coalition S ∈ 2N∖{∅} is AS= {a = (aj)j ∈ F: ∑j ∈ Faj≤ ∑i ∈ Smi}, and the worth of coalition S ∈ 2N∖{∅} with action a ∈ ASin scenario ω ∈ Ω is(3.3a)v(S,a,ω)=maxb(ω)∑j∈Fdj(ω)bj(ω)(3.3b)s.t.aj−bj(ω)=0forj∈F.By rewriting equalities as two inequalities, it is straightforward to see that this is in fact a stochastic linear programming game. In addition, note that the maximization in (3.3) is trivial, since the second-stage decision variables (bj(ω))j ∈ Fare in fact fixed for any given action (aj)j ∈ F. In this way, we can model settings in which a coalition’s action in the first stage directly results in uncertain payoffs.Özen et al. (2008) and Chen and Zhang (2009) studied a deterministic cooperative game in which the cost associated with each coalition is the minimum expected inventory and transportation cost required to meet the coalition’s demand. The stochastic cooperative game analogue, described below, is a stochastic linear programming game.There is a supplier of a single product, a set of warehouses W, and a set of retailers N. Retailer i ∈ N faces a random demand di(ω) for this product in scenario ω ∈ Ω. Each retailer i ∈ N can operate warehouses in Wi⊆W. Any retailer in a coalition of retailers S ∈ 2N∖{∅} is allowed to use any warehouse in WS= ∪i ∈ SWi.In the first stage, before the demands are realized, the retailers in coalition S ∈ 2N∖{∅} order yjunits of the product from each warehouse j ∈ WSunder its control at a cost of cjper unit. In the second stage, after the demands are realized, the product is sent from the warehouses to the retailers. In particular, xijunits are sent from warehouse j to retailer i at a cost of sijper unit. Each retailer i ∈ S pays a holding cost hifor every unit of product it receives in excess of its realized demand, and a penalty pifor every unit of demand it does not satisfy. Note that this is a generalization of the classic newsvendor setting, in which the transportation costs sijare zero.We model this setting as a stochastic cooperative game Γ = (N, v, {AS}S⊆N, {≿i}i ∈ N): the action set for coalition S ∈ 2N∖{∅} is(3.4)AS={a=(yj)j∈W:yj≤dmax∑i∈Sujiforj∈Wyj≥0forj∈W}where dmax  = max {di(ω): i ∈ N, ω ∈ Ω} andujiis equal to 1 if j ∈ Wiand 0 otherwise, for all i ∈ N and j ∈ W. The worth of coalition S ∈ 2N∖{∅} with action a ∈ ASin scenario ω ∈ Ω is(3.5a)v(S,a,ω)=maxx(ω),I(ω),z(ω)−(∑j∈Wcjyj+∑i∈S∑j∈Wsijxij(ω)+∑i∈ShiIi(ω)+∑i∈Spizi(ω))(3.5b)s.t.zi(ω)+∑j∈Wxij(ω)≥di(ω)fori∈S,(3.5c)Ii(ω)−∑j∈Wxij(ω)≥−di(ω)fori∈S,(3.5d)yj−∑i∈Sxij(ω)=0forj∈W,(3.5e)xij(ω)≥0fori∈S,j∈W(3.5f)Ii(ω)≥0fori∈S,(3.5g)zi(ω)≥0fori∈S.By reversing some of the inequalities and rewriting equalities as two inequalities, it is straightforward to see that (3.4) and (3.5) are of the same form as (3.1) and (3.2), respectively, and so this game is in fact a stochastic linear programming game.Finally, we briefly sketch a generalization of the maximum flow game introduced by Kalai and Zemel (1982) that can be modeled as a stochastic linear programming game. There is a set of players N, each of whom controls an arc in a directed graph (V, N) with source node s and sink node t. The capacity of each arc is random, perhaps due to an impending attack or natural disaster: arc i ∈ N has capacity ui(ω) in scenario ω ∈ Ω. Each player i ∈ N has an arc fortification budget of bi.In the first stage, before the capacities are realized, the players in coalition S ∈ 2N∖{∅} fortify the capacity of each arc i ∈ S by a deterministic amount yi. That is, in scenario ω ∈ Ω, arc i will have capacity ui(ω) + yi. The total fortification for coalition S cannot exceed ∑i ∈ Sbi. In the second stage, after the capacities are realized, the worth of coalition S is the maximum s-t flow in the induced subgraph (V, S).By defining a stochastic cooperative game in which the actions correspond to the fortification options in the first stage, and the worth function gives the maximum flow in the fortified network in each scenario in the second stage, it is straightforward to see that this setting can be modeled as a stochastic linear programming game.In this section, we show that the core of a stochastic linear programming game Γ is nonempty, assuming that each player’s preferences are concave. In particular, for every player i ∈ N, we assume that ϕiis a concave certainty equivalent for ≿i.The certainty equivalent game (N, vΓ) of Γ is given by the following: for every coalition S ∈ 2N∖{∅},vΓ(S)=max(x,a)∈ZS∑i∈Sϕi((x,a)i)=maxx,a∑i∈Sϕi((x,a)i)s.t.∑i∈Sxi(ω)≤v(S,a,ω)forω∈Ω,a∈AS(4.1a)⟹(SPS):vΓ(S)=maxx,a,b∑i∈Sϕi((x,a)i)(4.1b)s.t.∑i∈Sxi(ω)≤c0a0+∑i∈Sciai+d0(ω)b0(ω)+∑i∈Sdi(ω)bi(ω)forω∈Ω,(4.1c)D0a0+∑i∈SDiai+E0(ω)b0(ω)+∑i∈SEi(ω)bi(ω)≤∑i∈Sfi(ω)forω∈Ω,(4.1d)G0a0+∑i∈SGiai≤∑i∈Shi.Using the Bondareva–Shapley theorem (Bondareva, 1963; Shapley, 1967), we can show that the core of the certainty equivalent game (N, vΓ) is nonempty, and therefore by Proposition 2.2, the core of the stochastic linear programming game Γ is nonempty.Theorem 4.1Suppose Γ is a stochastic linear programming game with concave preferences. Then Γ is totally balanced.Let(λS)S∈2N∖{∅}be a collection of weights that satisfies∑S∈2N∖{∅}:i∈SλS=1fori∈N,λS≥0forS∈2N∖{∅}.We show that these weights must satisfyvΓ(N)≥∑S∈2N∖{∅}λSvΓ(S),and so by the Bondareva–Shapley theorem, the core of (N, vΓ) is nonempty.For each coalition S ∈ 2N∖{∅}, let (xS, aS, bS) be an optimal solution to (4.1), and define (x*, a*, b*) asxi*(ω)=∑S:i∈SλSxiS(ω)fori∈N,ω∈Ω,a*0=∑S∈2N∖{∅}λSaS,0,a*i=∑S:i∈SλSaS,ifori∈N,b*0(ω)=∑S∈2N∖{∅}λSbS,0(ω)forω∈Ω,b*i(ω)=∑S:i∈SλSbS,i(ω)fori∈N,ω∈Ω.We show that the solution (x*, a*, b*) is feasible in ( SPN). First, (x*, a*, b*) satisfies constraints (4.1b), since for every ω ∈ Ω,∑i∈Nxi*(ω)−c0a*0−∑i∈Ncia*i−d0(ω)b*0(ω)−∑i∈Ndi(ω)b*i(ω)=∑i∈N∑S:i∈SλSxiS(ω)−∑S∈2N∖{∅}λSc0aS,0−∑i∈N∑S:i∈SλSciaS,i−∑S∈2N∖{∅}λSd0(ω)bS,0(ω)−∑i∈N∑S:i∈SλSdi(ω)bS,i(ω)=∑S∈2N∖{∅}∑i∈SλSxiS(ω)−∑S∈2N∖{∅}λSc0aS,0−∑S∈2N∖{∅}∑i∈SλSciaS,i−∑S∈2N∖{∅}λSd0(ω)bS,0(ω)−∑S∈2N∖{∅}∑i∈SλSdi(ω)bS,i(ω)=∑S∈2N∖{∅}λS(∑i∈SxiS(ω)−c0aS,0−∑i∈SciaS,i−d0(ω)bS,0(ω)−∑i∈Sdi(ω)bS,i(ω))≤∑S∈2N∖{∅}λS·0=0.Next, (x*, a*, b*) satisfies constraints (4.1c), since for every ω ∈ Ω,D0a*0+∑i∈NDia*i+E0(ω)b*0(ω)+∑i∈NEi(ω)b*i(ω)=∑S∈2N∖{∅}λSD0aS,0+∑i∈N∑S:i∈SλSDiaS,i+∑S∈2N∖{∅}λSE0(ω)bS,0(ω)+∑i∈N∑S:i∈SλSEi(ω)bS,i(ω)=∑S∈2N∖{∅}λSD0aS,0+∑S∈2N∖{∅}∑i∈SλSDiaS,i+∑S∈2N∖{∅}λSE0(ω)bS,0(ω)+∑S∈2N∖{∅}∑i∈SλSEi(ω)bS,i(ω)=∑S∈2N∖{∅}λS(D0aS,0+∑i∈SDiaS,i+E0(ω)bS,0(ω)+∑i∈SEi(ω)bS,i(ω))≤∑S∈2N∖{∅}λS∑i∈Sfi(ω)=∑i∈Nfi(ω)∑S:i∈SλS=∑i∈Nfi(ω).We can also show that (x*, a*, b*) satisfies constraints (4.1d) in a similar manner. So, (x*, a*, b*) is feasible in ( SPN). Finally, we havevΓ(N)≥∑i∈Nϕi((x*,a*)i)=∑i∈Nϕi(∑S:i∈SλS(xS,aS)i)≥(i)∑i∈N∑S:i∈SλSϕi((xS,aS)i)=∑S∈2N∖{∅}λS∑i∈Sϕi((xS,aS)i)=∑S∈2N∖{∅}λSvΓ(S)as desired, where (i) holds due to the concavity of ϕifor all i ∈ N.A similar argument holds to show that the core of(R,vΓR)is nonempty for all R ∈ 2N∖{∅}. Therefore, by Proposition 2.2, the core of ΓRis also nonempty for all R ∈ 2N∖{∅}.□Theorem 4.1 establishes the existence of an allocation in the core of stochastic linear programming games under concave preferences. In this section, we connect the certainty equivalent game with linear semi-infinite programming games and linear programming games. This connection has implications on the structure and computability of such core allocations.In the following lemma, we reformulate ( SPS) as a linear semi-infinite program by exploiting the robust representation of concave certainty equivalents described in Theorem 2.1. This will allow us to use linear semi-infinite programming duality to construct allocations in the core under general concave preferences. In this section, we assume that for each player i ∈ N, ϕiis a concave certainty equivalent for ≿ithat has representation (2.3) with penalty function αi.Lemma 5.1Suppose Γ is a stochastic linear programming game with concave preferences.The certainty equivalent game (N, vΓ) of Γ is given by the following: for every coalition S ∈ 2N∖{∅},(5.1a)(SPS′):vΓ(S)=maxx,z,a,b∑i∈Szi(5.1b)s.t.zi−∑ω∈Ωq(ω)xi(ω)≤αi(q)fori∈S,q∈Di,(5.1c)∑i∈Sxi(ω)−c0a0−d0(ω)b0(ω)−∑i∈Sciai−∑i∈Sdi(ω)bi(ω)≤0forω∈Ω,(5.1d)D0a0+E0(ω)b0(ω)+∑i∈SDiai+∑i∈SEi(ω)bi(ω)≤∑i∈Sfi(ω)forω∈Ω,(5.1e)G0a0+∑i∈SGiai≤∑i∈Shi,whereDi={q∈M1:αi(q)<+∞}for each player i ∈ N.Using the representations (2.3) of ϕifor all i ∈ N, we can rewrite the objective function of ( SPS) as∑i∈Sϕi((x,a)i)=∑i∈Sinfq∈M1{∑ω∈Ωq(ω)xi(ω)+αi(q)}.Therefore, ( SPS) is equivalent to the mathematical program obtained by replacing the infima above with auxiliary variables zifor all i ∈ S, and adding the constraintszi≤∑ω∈Ωq(ω)xi(ω)+αi(q)fori∈S,q∈M1.Since these constraints are always satisfied when αi(q) = +∞, we can rewrite these constraints aszi≤∑ω∈Ωq(ω)xi(ω)+αi(q)fori∈S,q∈Di.□By exploiting the special structure of(SPS′)and applying Proposition 2.2, we can show the following theorem. We denote the Haar dual of(SPS′)by ( SDS), and the optimal values of(SPS′)and ( SDS) byval(SPS′)and  val( SDS), respectively.Theorem 5.2Suppose Γ is a stochastic linear programming game with concave preferences. In addition, suppose there exists an optimal solution to ( SDN)and−∞<val(SPN′)=val(SDN)<+∞. Then the core of Γ is nonempty.In particular, let (x*, z*, a*, b*) be an optimal solution to the linear semi-infinite program(SPN′),and let λ*, γ* and π* be corresponding optimal dual multipliers for constraints(5.1b), (5.1d)and(5.1e)respectively. Then (x′, a*) is in the core of Γ, wherexi′(ω)=xi*(ω)+∑q∈Diαi(q)λi,q*+∑ω∈Ωfi(ω)γ*(ω)+hiπ*−zi*fori∈N,ω∈Ω.For simplicity’s sake, in this proof, we write(SPS′)as(5.2a)(SPS′):maxwp0w0+∑i∈Spiwi(5.2b)(SPS′):s.t.r0(t)w0+∑i∈Sri(t)wi≤∑i∈Ssi(t)fort∈T,where T is an index set and {pi, {ri(t)}t ∈ T}i ∈ S∪{0} are vectors and {si(t)}i ∈ S, t ∈ Tare scalars defined to match the objective function and constraints in (5.1).The Haar dual of(SPS′)is:(5.3a)(SDS):minμ∑t∈Tμ(t)∑i∈Ssi(t)(5.3b)s.t.∑t∈Tμ(t)r0(t)=p0,(5.3c)∑t∈Tμ(t)ri(t)=pifori∈S,(5.3d)μ(t)≥0,fort∈T,(5.3e)μ∈R(T),whereR(T)denotes the set of generalized finite sequences onR,i.e., the functionsμ:T→Rsuch that μ(t) = 0 for all t ∈ T except for possibly a finite number of indices.Let μ* be an optimal solution to ( SDN), and define the allocation(5.4)χi=∑t∈Tμ*(t)si(t)fori∈N.We have∑i∈Nχi=∑i∈N∑t∈Tμ*(t)si(t)=val(SDN)=val(SPN′)=vΓ(N),because−∞<val(SPN′)=val(SDN)<+∞by assumption. In addition, we have∑i∈Sχi=∑i∈S∑t∈Tμ*(t)si(t)≥(i)val(SDS)≥(ii)val(SPS′)=vΓ(S)forS∈2N∖{∅},where (i) holds because μ* is a feasible solution to ( SDS) for any S ∈ 2N∖{∅}, and (ii) holds by weak linear semi-infinite programming duality. Therefore, χ ∈  core(N, vΓ).Note that for any S ∈ 2N∖{∅}, if (x*, z*, a*, b*) is an optimal solution to(SPS′),thenϕi((x*,a*)i)=zi*for all i ∈ S. By translating the variable names of(SPS′)from those in (5.2) to those in (5.1) and applying Proposition 2.2, we prove the theorem.□In the proof of Theorem 5.2, we established that the certainty equivalent game is in fact a linear semi-infinite programming game: a deterministic cooperative game (N, u) in which the worth u(S) of coalition S ∈ 2N∖{∅} is the optimal value of a linear semi-infinite program of the form (5.2). Note that our proof that the core of the certainty equivalent game is nonempty, which uses the techniques of Owen (1975), also shows that the core of any linear semi-infinite programming game is nonempty, as long as strong duality holds and a dual optimal solution exists. A variant of these games in which the underlying linear semi-infinite program has an infinite number of variables instead of an infinite number of constraints was studied by Fragnelli, Patrone, Sideri, and Tijs (1999).In general, there are a variety of conditions that imply strong duality and the existence of a dual optimal solution for linear semi-infinite programs, as required in Theorem 5.2. We refer the reader to the monographs by Glashoff and Gustafson (1983) and Goberna and López (1998) for an in-depth treatment on the topic. Here, we give simple sufficient conditions so that(SPN′)meets these requirements.Corollary 5.3Suppose Γ is a stochastic linear programming game with concave preferences. In addition, suppose(i)the setDiis compact for each player i ∈ N;the penalty function αi is continuous onDifor each player i ∈ N; andthere exists a solution (a, b) that strictly satisfies constraints (5.1d)and (5.1e), i.e.,D0a0+∑i∈SDiai+E0(ω)b0(ω)+∑i∈SEi(ω)bi(ω)<∑i∈Sfi(ω)forω∈Ω,G0a0+∑i∈SGiai<∑i∈Shi.Then the core of Γ is nonempty and an allocation in the core can be constructed as described in Theorem5.2.The optimal values of(SPN′)and ( SDN)—as represented in (5.2) and (5.3) respectively—are equal ifval(SPN′)is finite, the index set T is compact, the function riis continuous on T for each i ∈ N∪{0}, the function siis continuous on T for each i ∈ N, and there exists a Slater point, i.e., a solution w such thatr0(t)w0+∑i∈Sri(t)wi<∑i∈Ssi(t)fort∈T.In addition, under these conditions, an optimal solution to ( SDN) is guaranteed to exist (Glashoff and Gustafson, 1983).We show that these conditions hold, which then implies that Theorem 5.2 holds. Recall that we assume vΓ(S) is finite for all S ∈ 2N∖{∅}, and soval(SPN′)is finite. By assumption (i), the index set T is compact. By assumption (ii), the functions rifor all i ∈ N∪{0} and sifor all i ∈ N are continuous on T. Finally, by assumption (iii), a Slater point must exist because for any given solution (a, b), the values of x and z can always made sufficiently low so that (x, z, a, b) strictly satisfies (5.1b) and (5.1c).□Using other constraint qualification conditions than those described in the proof of Corollary 5.3 (e.g. Goberna, Terlaky, and Todorov, 2010), we can make a similar statement if some of the constraints (5.1d) and (5.1e) are in fact equality constraints. In this case, we would need to change condition (iii) of the above corollary to require the existence of a solution that satisfies all equality constraints and strictly satisfies all inequality constraints. In addition, we would need to require that the left-hand side coefficient vectors of the equality constraints are linearly independent.Next, we work under the assumption that each player’s preferences are not just concave, but coherent and finitely generated. In particular, for every player i ∈ N, we assume that ϕiis a coherent certainty equivalent for ≿i, and thatQiis the family of generating measures for ϕi.As we discussed in Section 2.2, the families{Qi}i∈Ncan either be represented as finite sets or as polytopes. Suppose the families{Qi}i∈Nare given as finite sets. In this case, by Theorem 2.1, we can replace constraints (5.1b) in(SPS′)with(5.5)zi−∑ω∈Ωq(ω)xi(ω)≤0fori∈S,q∈Qi,and so in fact,(SPS′)is a linear program. Again, by exploiting the special structure of(SPS′),we can show the following corollary.Corollary 5.4Suppose Γ is a stochastic linear programming game with finitely generated coherent preferences. Specifically, the families of generating measures for the players’ certainty equivalents are given as finite sets. Then Γ is totally balanced.In particular, take some R ∈ 2N∖{∅}. Let (x*, z*, a*, b*) be an optimal solution to the linear program(SPR′),and let γ* and π* be corresponding optimal dual multipliers for constraints (5.1d) and (5.1e), respectively. Then (x′, a*) is in the core of ΓR, wherexi′(ω)=xi*(ω)+∑ω∈Ωfi(ω)γ*(ω)+hiπ*−zi*fori∈R,ω∈Ω.Fix some R ∈ 2N∖{∅}, and definevΓR:2R∖{∅}→Ras the restriction of vΓonto R: i.e.,vΓR(S)=vΓ(S)for all S ∈ 2R∖{∅}. Note that(R,vΓR)is the certainty equivalent game of ΓR. Again, for simplicity’s sake, consider the linear program(SPR′)as written in (5.2), and its dual (5.3). In this case, it is straightforward to see that(R,vΓR)is a linear programming game (Owen, 1975), and therefore an allocation in the core of(R,vΓR)can be constructed as in (5.4). By translating the variable names of(SPR′)from those in (5.2) to those in (5.1) and applying Proposition 2.2, it follows that an allocation in the core of ΓRcan be constructed as described in the corollary.□As a consequence, an allocation in the core of a stochastic linear programming game in this case can be obtained in the same time it takes to compute an optimal solution and optimal dual multipliers for(SPN′). This can be done in time polynomial in the number of players and scenarios, the input size of the objective function vectors, constraint matrices, and constraint vectors, and the input size of the families of generating measures given as finite sets. Note that this running time is not necessarily exponential in the number of players.Depending on the data available or the nature of the players’ preferences, it may be the case that the families{Qi}i∈Nare given as systems of linear inequalities. For instance, as we saw in Section 2.2, the monetary utility functional ϕ = − CVaR is easily described with such a system. When this is the case, we can use these systems to reformulate(SPS′)directly. This is especially useful when the systems representing the families of generating measures are smaller or easier to obtain than the sets of extreme points of these families.In particular, let Kibe a finite index set for each player i ∈ N. Without loss of generality, we assume that(5.6)Qi={q∈RΩ:∑ω∈Ωℓk(ω)q(ω)=mkfork∈Kiq(ω)≥0forω∈Ω}fori∈N,where{ℓk(ω)}k∈Ki,ω∈Ωand{mk}k∈Kiare data used to define the preferences of player i ∈ N. We assume that the constraint ∑ω ∈ Ωq(ω) = 1 is included in the equality constraints above. Then, we have the following.Corollary 5.5Suppose Γ is a stochastic linear programming game with finitely generated coherent preferences. Specifically, the families of generating measures for the players’ certainty equivalents are given as polytopes of the form (5.6). Then, the certainty equivalent game (N, vΓ) is given by the following: for each coalition S ∈ 2N∖{∅},(5.7a)vΓ(S)=maxx,z,a,b,θ∑i∈Szi(5.7b)s.t.zi−∑k∈Kimkθki≤0fori∈S,(5.7c)∑k∈Kiℓk(ω)θki−xi(ω)≤0fori∈S,ω∈Ω,(5.7d)∑i∈Sxi(ω)−c0a0−d0(ω)b0(ω)−∑i∈Sciai−∑i∈Sdi(ω)bi(ω)≤0forω∈Ω,(5.7e)D0a0+E0(ω)b0(ω)+∑i∈SDiai+∑i∈SEi(ω)bi(ω)≤∑i∈Sfi(ω)forω∈Ω,(5.7f)G0a0+∑i∈SGiai≤∑i∈Shi.Using the representations of{Qi}i∈Ngiven in (5.6), we can rewrite the constraints (5.5) aszi≤[minq∑ω∈Ωq(ω)xi(ω)s.t.∑ω∈Ωℓk(ω)q(ω)=mkfork∈Ki,q(ω)≥0forω∈Ω]fori∈S.By linear programming duality, these constraints are equivalent tozi≤[maxθi∑k∈Kimkθkis.t.∑k∈Kiℓk(ω)θki≤xi(ω)forω∈Ω]fori∈S,which can be rewritten aszi−∑k∈Kimkθki≤0fori∈S,∑k∈Kiℓk(ω)θki−xi(ω)≤0fori∈S,ω∈Ω.□As in the proof of Corollary 5.4, the fact that the certainty equivalent game reformulated in (5.7) is also a linear programming game, the result of Owen (1975) and Proposition 2.2 imply the following corollary.Corollary 5.6Suppose Γ is a stochastic linear programming game with finitely generated coherent preferences. Specifically, the families of generating measures for the players’ certainty equivalents are given as polytopes of the form (5.6). Then Γ is totally balanced.In particular, take some R ∈ 2N∖{∅}. Let (x*, z*, a*, b*, θ*) be an optimal solution to (5.7) with S = R, and let γ* andπ* be corresponding optimal dual multipliers for constraints (5.7e) and (5.7f), respectively. Then (x′, a*) is in the core of ΓR, wherexi′(ω)=xi*(ω)+∑ω∈Ωfi(ω)γ*(ω)+hiπ*−zi*fori∈R,ω∈Ω.In this case, an allocation in the core of a stochastic linear programming game can be obtained in the same time it takes to compute an optimal solution and optimal dual multipliers for (5.7). This can be performed in time polynomial in the number of players and scenarios, the input size of the objective function vectors, constraint matrices, constraint vectors defining the stochastic linear programming game, as well as the input size of the constraint matrices and vectors defining the families of generating measures for the players’ certainty equivalents. Again, note that this running time is not necessarily exponential in the number of players.

@&#CONCLUSIONS@&#
In this work, we studied stochastic linear programming games, and demonstrated how these games can model a variety of settings, including inventory centralization, portfolio management, and network fortification. We examined the core of these games under an allocation scheme that determines how the payoffs are distributed before the uncertainty is realized, and—departing from the existing literature—allows for distributions to have an arbitrary dependence on the realized uncertainty. We proved that these games are totally balanced, assuming that each player’s preferences are concave. In addition, by establishing a connection between stochastic linear programming games, linear programming games and linear semi-infinite programming games, we showed that an allocation in the core can be computed in polynomial time for certain types of concave preferences.