@&#MAIN-TITLE@&#
A cascade evolutionary algorithm for the bodyguard allocation problem

@&#HIGHLIGHTS@&#
This paper address the bodyguard allocation problem (BAP) through an evolutionary approach.The paper proposes a two-stage cascade evolutionary algorithm that outperforms the state-of-the-art algorithm, known as CBAP, for this problem.The paper presents the computational experiments of the evaluation of both algorithms.

@&#KEYPHRASES@&#
Bodyguard allocation problem,Evolutionary algorithm,Cascade evolutionary algorithm,

@&#ABSTRACT@&#
The bodyguard allocation problem (BAP) is an optimization problem that illustrates the behavior of processes with contradictory individual goals in some distributed systems. The objective function of this problem is the maximization of a parameter called the social welfare. Although the main method proposed to solve this problem, known as CBAP, is simple and time efficient, it lacks the ability to generate a diverse set of solutions, which is one of the most important feature to improve the chances to reach the global optimum. To overcome this drawback, we address the BAP with an evolutionary algorithm, the EBAP. Later, we take advantage of the best properties of both algorithms, EBAP and CBAP, to generate a two-stage cascade evolutionary algorithm called FFC-BAP. Extensive experimental results show that the algorithm FFC-BAP outperforms both the EBAP and the CBAP, in terms of quality of solutions.

@&#INTRODUCTION@&#
The bodyguard allocation problem (BAP), defined by Fajardo-Delgado et al. [1], illustrates the interaction between two types of processes in a distributed system that cooperate to reach a common global goal, although they also have contradictory individual goals. All the processes seek to build a spanning tree rooted at the special process called the root. Each process of the first type wants to maximize its own distance to the root, while each process of the second type wants to minimize it. The better the process satisfies its individual goal, the greater the utility it generates. The sum of the utilities of all the processes represents their social welfare. A solution for the BAP represents a spanning tree with the maximum social welfare.The BAP arose as a first approach to model conflicting scenarios in certain distributed systems in which processes have extreme contradictory preferences. Some of these scenarios commonly are based on the belief “you get what you pay for”, where the quality of a determined service increases as the price increases. In particular for the BAP, the distance between pairs of processes is the conflicting parameter in the system that determines the quality of a service and its price (the longer the distance, the worse the quality).A scenario of application for the BAP is the following. Consider a company that provides live streaming media to its clients in a distributed system. Clients receive the stream through a single-data distribution tree rooted at a source server (e.g.[2,3]). Clients build this tree by themselves as a common global goal. However, in this kind of system, the quality of the stream degrades as the number of hops increases between a client and the source server [2]. The quality degradation is due to the increase of data packet losses and signal delay of each hop. As a marketing strategy, the policy of the service provider is that the clients pay in proportion to the quality of the stream they receive. In this scenario, there could be clients with contradictory individual goals: those that seek the best possible quality regardless the cost, and those that seek the cheapest service regardless the quality. Notice that when a client changes its trajectory toward the server to fulfill its individual goal, it may affect other clients in the distribution tree.In this paper, we model the BAP as an optimization problem that consists of finding the spanning tree that maximizes the social welfare. Previously, Fajardo-Delgado et al. [1] model the BAP in the context of game theory as shown in Section 2.2. They designed an algorithm called the CBAP that generates output spanning trees with good values of social welfare; however, it lacks the ability to generate a diverse set of solutions, which is one of the most important feature to improve the chances to reach the global optimum.As an attempt to improve this limitation, we initially designed an evolutionary algorithm EBAP with the idea to explore, in a more effective way, the solution space of the BAP. The EBAP provides a wider range of output spanning trees than the CBAP; however, the algorithm EBAP by itself, in general, does not provide output spanning trees with better social welfare than those of the algorithm CBAP.Therefore, we designed the two-stage cascade evolutionary algorithm FFC-BAP (Folding Fan Cascade BAP); where the first stage of this algorithm consists of an execution of the EBAP, and the second stage, an execution of the CBAP for each spanning tree of the last generation provided by the EBAP. The FFC-BAP takes advantage of the best properties of the CBAP and EBAP algorithms to generate higher quality approximated solutions for the BAP. Our experimental results show, that in fact, the algorithm FFC-BAP works as it was intended.We organize the rest of this paper as follows. Section 2 introduces the definition of the BAP along with preliminary concepts to understand this problem. Section 3 describes the proposed evolutionary algorithm EBAP. Section 4 presents the two-stage cascade evolutionary algorithm FFC-BAP. Section 5 describes the experimental design. Section 6 shows our experimental results. Finally, Section 7 presents some concluding remarks and directions for future work.The bodyguard allocation problem (BAP) of [1] is stated as follows: given an undirected connected graph G=(VG, EG) and the partition of its set of n vertices VGinto the subsets V1, V2 and {r}, we want to find a spanning tree T built on G with the following goal.Maximize(1)g(T)=∑∀u∈V1f1(u)+∑∀u∈V2f2(u)subject to:f1(u)=n−du,rT,∀u∈V1;f2(u)=du,rT,∀u∈V2;du,rT∈{x∈ℤ+|1≤x≤n−1},∀u∈V1∪V2.For this optimization problem (whose solution is not necessarily unique),g:T→ℤ+is the objective function also called the social welfare. Functionsf1:V1→ℤ+andf2:V2→ℤ+represent the utility of each vertex of V1 and V2, respectively. The utility for vertex u depends ondu,rT, the length of the simple path from vertex u to the special vertex r in T. The utility of r is always zero. Despite the BAP is formulated for undirected graphs, we use a logical orientation over the edges to root the spanning tree T and computedu,rT. The concepts of utility and social welfare used in the BAP arise from game theory (see Section 2.2).Example 1. Fig. 1a shows an instance of the BAP that consists of graph G, where n=3, and a partition of the set of vertices V1={u},V2={v}, and r. Fig. 1b–d shows all the possible spanning trees that can be built in G, all of them with different social welfare. In the spanning tree of Fig. 1b, the utility for vertex u isf1(u)=n−du,rT=1and for vertexvisf2(v)=dv,rT=1; therefore, the social welfare of the spanning tree is 2. Similarly, the spanning trees of Fig. 1c and d generate a social welfare of 3 and 4, respectively. Fig. 1d shows the spanning tree with maximum social welfare.Fajardo-Delgado et al. [1] studied the BAP in the context of game theory. In this context, vertices are players that interact with each other to conform a spanning tree T in G. Vertex r is a passive player. Each vertex of V1 (or hollow) seeks to minimize its distance to r; while each vertex of V2 (or solid) seeks to maximize it. Notice that improving the utility of a vertex may affect the utilities of others, arising a conflict of interest.In this context, a Nash equilibrium[4] (or equilibrium) for the BAP represents a spanning tree T built on G where vertices cannot improve their utilities unilaterally (i.e. it is not possible to find another spanning tree T′ of G such that g(T′)>g(T) andET=ET′except for one edge). Finding an equilibrium does not necessarily mean finding the spanning tree with maximum social welfare. Fajardo-Delgado et al. [1] used the concept of equilibrium for the BAP as a stop condition for their algorithms, since it is not possible to continue the optimization process after that point.They also, within the game theory framework, studied the BAP under two approaches: completely cooperative and completely non-cooperative. In the completely cooperative approach, each vertex u only performs the “move” that maximizes the utility of the majority of the vertices of the subtree rooted at u. (We say that vertex u performs a move when u changes edge 〈u, Pu〉 of the current spanning tree T by another edge,〈u,v〉, to conform a new spanning tree T′.) Under this approach, every move of u always increases the social welfare.On the other hand, in the completely non-cooperative approach, each vertex u only performs a move to increase its individual utility; however, such a move may decrease the social welfare (since u does not consider the loss that its descendants may have).Both approaches use the valuation function πuof Eq. (2). For the completely cooperative approach, αuand βudenote the number of hollow and solid vertices in the subtree rooted at u, respectively. For the completely non-cooperative approach, if u is hollow (solid), then αu=1 and βu=0 (αu=0 and βu=1).(2)πu(v)=(αu−βu)(dPu,r−dv,r)Valuation functionπu(v)computes the increment of the social welfare when vertex u changes its edge 〈u, Pu〉 by edge〈u,v〉in its current spanning tree, where Puis the current parent of u.Fajardo-Delgado et al. [1] showed that, in the completely cooperative approach, the spanning tree with maximum social welfare is always an equilibrium. On the other hand, under the completely non-cooperative approach, such a spanning tree is not necessarily an equilibrium.Example 2. Consider the instance of the BAP of Fig. 1a. For this instance, assume that its initial randomized spanning tree is the one presented in Fig. 1b. When vertex u detects thatπu(r)>πu(v), it changes its parent fromPu=vto Pu=r (see Fig. 1c). After that, vertexvdetects thatπv(u)>πv(r), so it changes its parent fromPv=rtoPv=u(see Fig. 1d). This spanning tree has the maximum social welfare and satisfies a condition of equilibrium for the BAP under both approaches.

@&#CONCLUSIONS@&#
