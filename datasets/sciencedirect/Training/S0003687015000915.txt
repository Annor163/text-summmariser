@&#MAIN-TITLE@&#
Virtual Sliding QWERTY: A new text entry method for smartwatches using Tap-N-Drag

@&#HIGHLIGHTS@&#
We developed Virtual Sliding QWERTY (VSQ) for enhancing text entry tasks with smartwatches.For the verification of VSQ, we also conducted usability tests.As a result, VSQ showed an average of 11.9 words per minute which was higher than previous studies.

@&#KEYPHRASES@&#
Smartwatch,Ultra small display,Text entry,Qwerty keyboard,Tap-N-Drag,

@&#ABSTRACT@&#
A smaller screen of smartwatches compare to conventional mobile devices such as PDAs and smartphones is one of the main factors that makes users to input texts difficult. However, several studies have only proposed a concept for entering texts for smartwatches without usability tests while other studies showed low text input performance. In this study, we proposed a new text entry method called Virtual Sliding QWERTY (VSQ) which utilizes a virtual qwerty-layout keyboard and a ‘Tap-N-Drag’ method to move the keyboard to the desired position. In addition, to verify VSQ we conducted a usability test with 20 participants for a combination of 5 key sizes and 4 CD-gains. As a result, VSQ achieved an average of 11.9 Words per Minute which was higher than previous studies. In particular, VSQ at 5 × 5 key size and 2×, or 3× CD-gain had the highest performance in terms of the quantitative and qualitative usability test.

@&#INTRODUCTION@&#
Since the1880s a wristwatch, a wearable device, has played a role in conveniently showing the time. Recently, with the development in IT technology, in addition to telling the time a smartwatch with similar functions to a smartphone has been developed. This wearable device is multi-functional in that it has the capability of being used as a wrist watch and also as a smartphone.One of the key design considerations of the wearable device such as a smartwatch is the size of the device (Narayanaswami and Raghunath, 2000). The small size of the device restricts the screen size, and restricts the information space and also it makes it difficult to input text. The difficulty of inputting text on a small screen size is a widely known problem (Haseloff, 2001), and various methods of resolving the limitation have been developed (Colle and Hiszem, 2004; Gündüz and Pathan, 2013; Kwon et al., 2009, 2011; Park and Han, 2010; Parhi et al., 2006; Schedlbauer, 2007). However, the target devices of the previous studies were PDAs or smartphones which have a significantly larger screen than a smartwatch which has an ultra-small touchscreen. Thus, there is a limitation in the utilization of the current input method for the smartwatch.Studies in the development of a method of enhancing text input for a smartwatch remain at a developmental stage. Although several studies have provided new methods of inputting text which may be feasible for the smartwatch, only a few studies have conducted usability tests to verify the input methods which currently have limitations (Table 1). Partridge et al. (2002) provided TiltType that inputs text using slope attained by an accelerometer. TiltType shows 9 letters sequentially on the 9 regions including 8 azimuth (NW, N, NE, E, SE, S, SW, W) and a center point. A user can move the next page with the other 9 letters by pushing a button and to select one of the alphabets they have to change the angle of the watch by tilting the arm. Raghunath and Narayanaswami (2002) developed Alphabet selector which selects one of 24 alphabets, A to Z, in a two-line circle with the use of a physical button. TiltType and Alphabet selector are currently only concepts, and usability tests to validate the concepts have not been conducted. Also, the two concept methods did not consider a touchscreen interface which is widely used on the mobile device.Instead of the physical button recent studies have developed text input methods based on touchscreen interface (Oney et al., 2013; Komninos and Dunlop, 2014; Cho et al., 2014). Oney et al. (2013) proposed ZoomBoard based on a qwerty keyboard layout and a zoomable interface (Fig. 1a). A user can select a letter by zooming in on the qwerty keyboard by touching the appropriate area on the keyboard. As a result of the usability test, the method shows an average of 9.3 words per minute (WPM). Due to the high familiarity of the qwerty keyboard by users, ZoomBoard does not require additional learning time for the users. However, it is time consuming because the system requires zoom in/out repeatedly to select letters. Komninos and Dunlop (2014) proposed a 6 key layout which group 3 to 5 letters from the alphabets (Fig. 1b). This method is similar as it has a standard-12 key layout (Balakrishnan and Yeow, 2008; ITU, 2001) that is one of the widely used input methods in a smartphone. In order to select a target letter a user should touch the group including the target repeatedly. For instance, in order to select ‘c’ and ‘c’ sequentially, the user should touch the keys 7 times: the ‘abc’ key group 3 times, one ‘space’ key, and the ‘abc’ key group 3 times. The usability test to verify a 6 key layout was conducted under controlled experiments with 20 participants, and it showed an average 8.1 WPM. Cho et al. (2014) proposed DragKeys whose keys are formed into 8 groups. Key groups are circularly arranged in 8 azimuths around the text cursor and appear when users enter texts. Users can enter a character by dragging the corresponding key. DragKeys hierarchically contains two levels of key arrays. Users select one of 8 key groups in the 1st drag action and users select a desired key in the 2nd drag or touch action. It means that users need to drag or touch 2 times to enter a character. Also, a new arrangement of DragKeys may require more learning time although this was not validated through experiments.Unlike text entry methods above based on physical button or touch screen, a new text entry method using touch based supported wristband has also been suggested by Funk et al. (2014). The proposed wristband includes two options: a linear layout which shows an A to Z alphabet continuously and a group layout which shows 8 groups including 3 to 4 letters. A target letter is selected by touch or multi-touch for a group layout. However, these methods showed low performance proximately 3.5 WPM.In order to improve a text input method with a touch screen, an optimal key size should be considered. Previous studies to derive the optimal key size for a small touch screen have focused on the task using the thumb on a smartphone (Balakrishnan and Yeow, 2008; Park et al., 2008; Park and Han, 2010). However, when users input a text by a smartwatch, they might use their index finger or middle finger which has a smaller width than the thumb. Therefore, the optimal key size of the smartwatch could be different to the optimal size derived from the previous studies.When considering the previous studies, the following limitations exist. Firstly, only limited studies have focused on a text entry method for smartwatches. Secondly, only a few studies have conducted usability tests for validating their own method (Oney et al., 2013; Komninos and Dunlop (2014); Funk et al., 2014), and their performances were relatively slower than the text entry speed for the iPhone and Android phone: 15.8, and 21.4 WPM respectively (Ariff et al., 2010; Catellucci and MacKenzie, 2011). Thirdly, the recent methods by Oney et al. (2013), Komninos and Dunlop (2014), Cho et al. (2014), and Funk et al. (2014) required multi-touches to select a target letter. Finally, the previous studies lack consideration of an optimal key size for an index or middle finger which is expected to be mainly used on smartwatches.To overcome the limitations, this study aims to develop Virtual Sliding QWERTY (VSQ), an improved text input method for smartwatches, and also to conduct usability tests to verify VSQ. VSQ was developed based on a ‘qwerty layout’ that is the most widely used, and a ‘Tap-N-Drag’ method. In order to select a target letter instead of the current multi-touch methods users move the qwerty keyboard until the target letter is shown on the screen. Besides, considering the usage environment of a smartwatch this study aims to derive an optimal key size for an index finger. This paper includes the following sections. Section 2 explains VSQ design considerations. Section 3 describes the experimental design for verifying VSQ. Section 4 shows the results of the usability test, and the results are discussed in Section 5. Finally, Section 6 gives the conclusion.VSQ is a text entry method which utilizes tapping on the qwerty keyboard in order to move it to the desired position on the virtual keyboard (Fig. 2). The proposed method requires very little learning time for users and is intuitive to use because it utilizes the full sized qwerty layout which PC and smart phone users are already familiar with. Despite limitations in the size of the screen it is possible to access any key on the keyboard by sliding the keyboard using the finger in any direction, thus making the keyboard a virtual keyboard concept. Design considerations of the proposed VSQ are as follows.•Keyboard layout: The qwerty layout is one of the most widely used keyboard layouts in PCs and smart phones (Green et al., 2004; Hsiao et al., 2014; Wu et al., 2014), and thus it can be used intuitively and quickly. There are verity of qwerty keyboard layouts and for this study we used the google android based smartphone layout.Display size: Smartwatches have been developed with a variety of screen sizes according to the practical purposes of the watch. In order to use our study result in the commercial market in the future, we considered the screen size of current commercialized smartwatches. Accordingly this research surveyed the display size of recently published smartwatches. As shown in Table 2, the diagonal length of the smartwatches was between 32 mm and 51 mm, and the average length was 41 mm. Based on this, we regarded 40 mm as the target display size for the research.Text box: When someone texts, the keyboard and the text box make up the entire display. For practical use, the size of the text box need careful consideration. To show texts clearly and to edit letters easily we determined the text box size as 25.5(Width: W) mm × 6(Height: H) mm from a pilot test.Used finger: Inputting text on a smartphone is mainly performed using the thumb(s) of one hand or both hands (Balakrishnan and Yeow, 2008; Park et al., 2008; Park and Han, 2010). A smartwatch, however, is worn on the wrist of one hand and is operated by the other hand. As the watch will be on the wrist, an index finger or middle finger is easier than a thumb for inputting texts using a smartwatch. In this research, an index finger of one-hand was considered.Key size: The key size of a keyboard is one of the important factors which affect objective performance and subjective satisfaction in interface design. For improved input accuracy and speed in text input for smartwatch, the optimized key size for an index finger should be considered. Accordingly this research considered five key sizes including 3 × 3 mm, 4 × 4 mm, 5 × 5 mm, 6 × 6 mm, and 7 × 7 mm 7 × 7 mm size is based on the previous research results which derived an appropriate key size for the use of a thumb for smartphones (Park and Han, 2010). From the pilot tests, 3 × 3 mm size was derived as a touchable minimum key size. 2 × 2 mm used by ZoomBoard (Oney et al., 2013) was excluded. The reasons for this is that the pilot test results showed that recognizing the button texts was difficult and inducing many errors while touching the buttons.Gap between keys: Gap size between the key buttons on the keyboard is one of factors affecting the key size of touch interfaces. According to the Colle and Hiszem (2004), gap size between keys, however, rarely affects the objective performance and subjective satisfaction, and a 0 mm or 1 mm of edge-to-edge space is acceptable for the touch interface. Thus, this research considered 0.6 mm of gap size for all keys.CD-gain: In order to find the desired keys on a small screen of smartwatches when moving a large virtual keyboard, one of the important factors is speed of navigation of the keyboard. This can be regarded as CD-gain, which is the ratio of the velocity of a display pointer to the velocity of an input device. In other words, the ratio of the traveled distance of a pointer to the traveled distance of device (Casiez et al., 2008). In this study, CD-gain can be expressed as the ratio of the traveled distance of keyboard to the traveled distance of fingers. As CD-gain increases, the users can navigate the desired keyboard area faster in the whole virtual keyboard area but with decreasing control accuracy. To derive the optimal CD-gain having the highest objective performance and subjective satisfaction with a key size, we considered four variables including 1×, 2×, 3×, and 4× from a pilot test.

@&#CONCLUSIONS@&#
