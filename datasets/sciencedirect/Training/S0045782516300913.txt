@&#MAIN-TITLE@&#
Bézier extraction and adaptive refinement of truncated hierarchical NURBS

@&#HIGHLIGHTS@&#
Bézier extraction of truncated hierarchicalB-splines and the application of the approach to adaptive isogeometric analysis are presented.An explicit computation of the truncation is avoided.A strict element viewpoint is adopted in the refinement algorithms which facilitates the application of standard procedures of adaptive finite element analysis.Numerical examples demonstrate optimal convergence rates for problems that involve singularities and strong gradients.

@&#KEYPHRASES@&#
Hierarchical,B,-splines,Bézier extraction,Isogeometric analysis,Adaptivity,Phase-field modelling,

@&#ABSTRACT@&#
This contribution presents Bézier extraction of truncated hierarchicalB-splines and the application of the approach to adaptive isogeometric analysis. The developed procedures allow for the implementation of hierarchicalB-splines and NURBS without the need for an explicit truncation of the basis. Moreover, standard procedures of adaptive finite element analysis for error estimation and marking of elements are directly applicable due to the strict use of an element viewpoint.Starting from a multi-level nested mesh that results from uniformh-refinement, standard Bézier extraction is applied to active elements that contribute to the hierarchical approximation. This results in a multi-level system of equations without communication between individual hierarchy levels. A hierarchical subdivision operator is developed to recover this communication by transforming the multi-level system of equations into a hierarchical system of equations. It is demonstrated that this approach implicitly defines the truncated hierarchical basis in terms of a simple matrix multiplication. In this way, the implementation effort is reduced to a minimum as shape function routines and Bézier extraction procedures remain unchanged compared to standard isogeometric analysis.The convergence and the computational efficiency of the approach are examined in three different demonstration problems of heat conduction, linear elasticity, and the phase-field modelling of brittle fracture.

@&#INTRODUCTION@&#
Isogeometric Analysis (IGA)  [1] has been a major step to overcome the disjunction between a computational geometry model, commonly described by Non-Uniform Rational B-Splines (NURBS), and a finite element (FE) model based on Lagrangian polynomial approximations of the geometry and the field variables. In IGA the sameB-spline basis functions which represent the geometry are used to approximate the field variables in the numerical model. In this way, the geometric discretisation errors that result from the approximation of the computational geometry by Lagrangian polynomials are eliminated.Consequently, IGA is an ideal discretisation technique to be combined with adaptive mesh refinement as already the coarsest mesh provides an exact geometry representation which is preserved during refinement. Tedious interactions with an underlying geometry model are avoided. However, ifB-splines or NURBS are considered as a basis, their tensor product nature will prohibit a truly local refinement within a single NURBS patch. Local refinement with these bases would require the subdivision of the analysis domain into several patches which can then be refined uniformly  [2,3].Various approaches have been developed to overcome the restrictive tensor product structure:1.T-splines introduced by Sederberg  [4,5] result from the insertion of extra vertices into the tensor product mesh. This produces so calledT-junctions which are comparable to hanging nodes in the standard finite element method.T-splines enable the representation of complex geometries in a single continuous patch as well as its local refinement. Bazilevs et al.  [6] introducedT-splines into IGA. Recent contributions have focused on the linear independence of the basis  [7–10] and on local refinement strategies  [11,12].Locally Refined (LR)B-splines have been presented by Dokken et al.  [13]. They are in some way dual toT-splines, i.e. tensor productB-splines are locally refined by the insertion of knot line segments instead of extra vertices. The properties of LR-B-splines have been analysed  [14] and first applications to adaptive IGA can be found in  [15].Hierarchical (H)B-splines use basis functions defined by knot vectors of different levels of nested meshes that result from successive uniformh-refinement. They were introduced by Forsey and Bartels  [16] already in 1988. HierarchicalB-splines have been further developed  [17–21] to meet the requirements of IGA.Truncated hierarchical (TH)B-splines introduced by Giannelli et al.  [22] are an improved hierarchicalB-spline basis that recovers the partition-of-unity property and reduces the interaction between basis functions of different refinement levels. Properties of THB-splines are studied in  [23,24] and a possible data structure for the construction of THB-splines based on quad-trees is provided in  [25].HierarchicalT-splines have been presented by Evans et al.  [26] and combine the strictly localised refinement possibilities of hierarchicalB-splines with the geometrical representation capabilities ofT-splines.Local mesh refinement usingT-splines and HB-splines is illustrated in Fig. 1for the benchmark case of a sharp internal layer. It is noted that theT-spline-based refinement is not as local as with hierarchicalB-splines  [11,26]. The refinement propagates along the parametric directions as a consequence of the restrictions imposed by the required analysis suitability, i.e. the linear independence of the basis. LR-B-splines can overcome this propagation of the refinement. However, a formal proof of the linear independence is still lacking  [24]. Johannessen et al.  [24] and Schillinger et al.  [19] have compared HB- and THB-splines. They verified the assumption that THB-splines improve the conditioning and reduce the bandwidth as well as the total number of non-zero entries in the system matrices.In this contribution, an adaptive isogeometric analysis framework based on THB-splines is presented. The strict use of an element viewpoint allows for the application of standard adaptive finite element procedures. Different from a direct implementation of the hierarchical basis, standard Bézier extraction  [27] is used on different levels of the hierarchical mesh. It will be shown that this approach produces THB-splines [22] without the need for an explicit truncation of basis functions.The paper is organised as follows: basics ofB-splines and Bézier extraction are reviewed in Section  2. In Section  3 the implementation of THB-splines based on Bézier extraction is outlined. This includes the introduction of the multi-level basis and of the associated data structures. The element-based procedure for the selection of active basis functions, the application of multi-level Bézier extraction, the definition of a hierarchical subdivision operator and the final construction of the hierarchical system of equations are explained. Eventually, the numerical properties of the adaptive approach are analysed for different problems of linear elasticity, heat conduction, and the phase-field modelling of brittle fracture in Section  4.In this section an overview on the used basis functions as well as Bézier extraction is given. Only properties and concepts that are necessary to explain and understand the remainder of this paper are briefly outlined.Below, all univariate functions will be introduced with respect to a dimensionless parameter coordinateξ. UnivariateB-spline basis functionsN(ξ)={NI,p(ξ)}I=1nof orderpare defined by a knot vectorΞ={ξI}I=1mwhich containsI=1…mnon-decreasing coordinatesξI,ξ≥0in the parameter domainΩP. From themelements of the knot vector a set ofn=m−p−1B-spline basis functions can be computed according to the Cox–de Boor recursion formula(1)NI,p(ξ)=ξ−ξIξI+p−ξINI,p−1(ξ)+ξI+p+1−ξξI+p+1−ξI+1NI+1,p−1(ξ)forp≥1(2)NI,0(ξ)={1ifξI≤ξ<ξI+10otherwise .UnivariateB-spline basis function have a support defined by(3)suppNI,p={ξ:NI,p(ξ)≠0∧ξ∈ΩP}.SinceB-spline basis functions are piecewise polynomials, shapes like circles and ellipses cannot be modelled exactly. This can be achieved by geometric representations in terms of NURBS basis functionsR(ξ)={RI,p(ξ)}I=1nthat are weighted (weightswI) rationalB-spline basis functions of the same orderp(4)RI,p(ξ)=NI,p(ξ)wI∑J=1nNJ,p(ξ)wJ=NI,p(ξ)wIW(ξ).Multi-variate functions are constructed from tensor products ofk=1,…,dPunivariate sets ofB-spline or NURBS basis functions wheredPis the dimension of the parametric domain. The tensor product spaceNis spanned byn=n1×⋯×ndPmulti-variate basis functions(5)NA(I1,…,IdP),p(ξ)=∏k=1dPNIk,pkk(ξk)with the mapA(I1,I2)=n1(I2−1)+I1fordP=2andA(I1,I2,I3)=n1n2(I3−1)+n1(I2−1)+I1fordP=3andp={p1,…,pdP}Tand{NIk,pkk}Ik=1nkthenkunivariate basis functions in parametric directionk.According to the concept of isogeometric analysis both, the representation of the geometry and the approximation of field quantities(6)x(ξ)=∑A=1nANA,p(ξ)PA=PTN(ξ)(7)ψ(ξ)=∑A=1nANA,p(ξ)ψA=ψTN(ξ)are accomplished in terms of the same multi-variateB-spline basis functionsNA,p(ξ), and a corresponding number of control points with control valuesP={PA}A=1n, andψ={ψA}A=1n, respectively. They take the role of nodes in the standard finite element method. In the following it is assumed thatpkis the same for all parametric directions. It will therefore be omitted in the remainder.The introducedB-spline basis functions are defined globally over an entire patch, Fig. 2. Different from that, the standard finite element approach is based on the same set of shape functions for each element in the domain. The central idea of Bézier extraction is to represent the globally definedB-spline basis functions by Bernstein element shape functions. As a result, every existing FE code can be enhanced with isogeometric analysis features using Bézier extraction. It can be applied toB-splines, NURBS, andT-splines and therefore represents a canonical approach to the implementation of IGA. In this contribution we will employ Bézier extraction to implement the truncated hierarchical basis.To obtain elements in isogeometric analysis, the patch spanned by knot vectorsΞkin the parametric domain is divided into non-zero sub-domains[ξI11ξI1+11]×⋯×[ξIdPdPξIdP+1dP]. Thesee=1,…,nesub-domains, denoted byΩPe, are referred to as Bézier elements, Fig. 2.Bézier extraction is essentially based on knot insertion which will therefore be briefly outlined for the univariate case in the following. A new knotξˆ∈[ξI,ξI+1[can be inserted into the open knot vectorΞwhich is hence altered toΞˆ={ξ1…ξIξˆξI+1…ξn+p+1}, (p<I<n+1), and results in a set of new basis functions. In order to retain the geometry or approximation while changing the parametrisation of the basis, new control point values{PˆJ}J=1mhave to be computed from the original control points{PJ}J=1naccording to(8)PˆJ={P1J=1αJPJ+(1−αJ)PJ−11<J<mPnJ=m(9)αJ={11≤J≤I−pξˆ−ξJξJ+p−ξJI−p+1≤J≤I0J≥I+1.To obtain the Bernstein basis functionsBI,p(ξ), knot insertion is applied to all knots inΞuntil the multiplicity of each internal knot equals the polynomial degreep. The new set of so called Bézier control pointsPˆis computed fromB-spline control pointsPˆ=CTP.Recalling that the geometry has to remain unchanged during knot insertion, i.e.(10)x(ξ)=PTN(ξ)=PˆTB(ξ)=(CTP)TB(ξ)=PTCB(ξ),the relation(11)N(ξ)=CB(ξ)between the globally definedB-spline basisN(ξ)and the element-local Bernstein shape functionsB(ξ)is found. The linear operatorCis called Bézier extraction operator and maps the piecewiseC0-continuous Bernstein polynomials onto theB-spline basis of arbitrary continuity, Fig. 3.In order to allow for a strictly element-based implementation, Bézier extraction operatorsCeare extracted fromCfor each Bézier element. Basis functionsN(ξ)|ΩPewith support in this element are expressed by(12)N(ξ)|ΩPe=Ne(ξ̄)=CeB(ξ̄).The univariate Bézier element shape functions(13)BI,p(ξ̄)=12ppI−1(1−ξ̄)p−(I−1)(1+ξ̄)(I−1)with the binomial coefficientpI−1=p!(I−1)!(p+1−I)!and1≤I≤p+1are conveniently formulated in terms of the parent element coordinatesξ̄=[−1,1]used for numerical integration. Hence, the basis of each Bézier element is defined by the same set of basis functions. Multi-variate Bézier extraction operatorsCe=C1e⊗⋯⊗CdPefollow from the successive computation of univariate extraction operatorsCke.Note also that exactly the same Bézier extraction procedure can be applied to NURBS basis functions(14)Re(ξ̄)=WeCeB(ξ̄)We(ξ̄)with the weight function(15)We(ξ̄)=weTCeB(ξ̄),the element weight vectorwe, and the diagonal matrix of element weightsWe. For more details on the method and an efficient algorithm to compute the element-local Bézier extraction operators we refer to the work Borden et al.  [27].In this section the adaptive local refinement based on truncated hierarchicalB-splines will be outlined. For the selection of active basis functions an element based approach similar to  [20] is applied that would result in the hierarchical basis presented by Vuong et al.  [18]. Afterwards, the application of Bézier extraction on a multi-level basis to assemble a global system of equations is explained. This global system of equations is referred to as multi-level system because entries resulting from different refinement levels do not communicate with each other. The introduction of the hierarchical subdivision operator will recover this communication and a matrix multiplication is used to obtain the final system of equations which we call hierarchical. It will be shown that this novel procedure produces the truncated hierarchical basis of Giannelli et al.  [22]. Explanations are given for univariateB-splines. Due to the tensor product structure of the basis, the generalisation to multi-variateB-splines is straight forward and will be highlighted where required. Also the generalisation fromB-splines to NURBS will be addressed.Different from many works, an element viewpoint is adopted in the following. This is a natural choice in the Bézier extraction framework and allows for the identification of the required basis functions by marking elements as it is typical in adaptive finite element analysis. The hierarchical basis consists ofB-splines with the same polynomial degreepover all hierarchical levels. Strong conditions on the boundaries of different hierarchy levels are assumed  [18], i.e. elements of two consecutive levels are not allowed to overlap which ensures a tree-like hierarchical element structure.Consider a hierarchy ofLknot vectorsΞℓ,ℓ=0…L−1created by successive uniform knot insertion (h-refinement) within the univariate parametric domainΩPstarting from the knot vectorΞ0of the coarsest level (ℓ=0). The resulting knot vectors are nested, i.e.Ξℓ⊂Ξℓ+1. Each knot vectorΞℓdefines a set ofB-spline basis functionsNℓ={NIℓ}I=1nℓof degreep. These sets ofB-spline basis functions span the approximation spacesNℓof each corresponding level and are nested,Nℓ⊂Nℓ+1. They are referred to as the multi-level basis. An exemplary univariate three-level basis is illustrated in Fig. 4for the casep=2.In addition to the basis functions, the nested knot vectors of the multi-level basis define a tree-like hierarchical element structure. According to the framework of Bézier extraction, cf. Section  2.2, a number ofe=1,...,neℓelements with domainΩPe,ℓare defined by non-zero intervals of the knot vectors on the individual hierarchy levelsℓ. The union of elements on each level covers the analysis domainΩP=⋃e=1neℓΩPe,ℓ. Assuming that two consecutive levels result from a uniformh-refinement, splitting each coarse knot interval into two fine scale intervals, a hierarchy of nested elements is obtained. In this tree structure each parent element on levelℓpossesses e.g. two children on levelℓ+1for the univariate case, Fig. 4. Every element on levelℓis associated top+1basis functions inNℓwhich will facilitate an element-based definition of different function sets and of the hierarchical basis.As a consequence of the nestedness, anyB-spline function in the spaceNℓcan be represented as a linear combination of basis functions in the refined spaceNℓ+1(16)Nℓ=Mℓ,ℓ+1Nℓ+1withMthe subdivision or refinement operator  [12,19]. The individual entries of the subdivision operator are the coefficients of the linear combination and can be computed from the two-scale relation(17)NIℓ(ξ)=2−p∑t=0p+1(p+1t)NIℓ(2ξ−tΔξ),withΔξthe interval of the uniform knot vector and the binomial coefficient(18)(p+1t)=(p+1)!t!(p+1−t)!.The functionsNIℓ(2ξ−tΔξ)are dilated and translated copies of the original functionNIℓ(ξ)but can be also interpreted as the functions from the next finer hierarchical levelNJℓ+1(ξ). Accordingly, Fig. 5(a) shows uniformB-spline basis functions of two consecutive levelsℓandℓ+1. A basis function from levelℓis represented by a linear combination of basis functions from levelℓ+1. The coefficients of the linear combination result from the two scale relation (17). However, Eq. (17) does not hold for open, non-uniform knot vectors. For this reason Casciola and Romani  [28] developed an efficient algorithm to compute the subdivision operator for general endpoint-interpolatingB-splines of arbitrary order. As an example, Fig. 5(b) shows non-uniformB-spline basis functions. Two of them are represented by a linear combination of refined basis functions where the coefficients are obtained from the algorithm presented in  [28].Subdivision operators for two non-consecutive levels are obtained from(19)NI=MI,JNJ=∏ℓ=IJ−1Mℓ,ℓ+1NJ.The relations between basis functions translate directly into transformation rules for control valuesPif the same geometryxis to be represented in terms of a refined basis(20)x=(Pℓ)TMℓ,ℓ+1Nℓ+1(21)Pℓ+1=(Mℓ,ℓ+1)TPℓ.The generalisation to a multi-variate subdivision operatorMℓ,ℓ+1of dimensiondPis obtained from the Kronecker productMℓ,ℓ+1=M1ℓ,ℓ+1⊗⋯⊗MdPℓ,ℓ+1of univariate subdivision operators{Mkℓ,ℓ+1}k=1dP.For a generalisation to NURBS, the subdivision operator has to be modified to interact between rational basis functions{RIℓ}I=1nℓ, and{RJℓ+1}J=1nℓ+1of two consecutive levels. It is noted that the denominator ofRJℓ+1will remain unchanged during the refinement process(22)RJℓ+1(ξ)=wJℓ+1NJℓ+1(ξ)Wℓ+1(ξ)=wJℓ+1NJℓ+1(ξ)Wℓ(ξ)for a fixed geometry  [19]. Substituting Eq. (16) inRIℓ(ξ), and replacingNJℓ+1(ξ)in terms of Eq. (22), a two-scale relation for rationalB-splines is given by(23)RIℓ(ξ)=wIℓNIℓ(ξ)Wℓ(ξ)=wIℓ∑JMIJℓ,ℓ+1NJℓ+1(ξ)Wℓ(ξ)=wIℓ∑JMIJℓ,ℓ+1wJℓ+1RJℓ+1(ξ)with the rational subdivision operator(24)MˆIJℓ,ℓ+1=wIℓwJℓ+1MIJℓ,ℓ+1that replaces the standard subdivision operatorMℓ,ℓ+1.In the hierarchical approach to local refinement, basis functions from the approximation spaces of different levelsNℓare combined to span the hierarchical basis spaceA. However, building the hierarchical basis cannot be achieved by simply adding basis functions from finer hierarchy levels to the coarse scale basis. This would result in the loss of linear independence, because coarse level basis functions are linear combinations of the fine-scale functions according to Eq. (16). A corresponding element-based approach to the proper selection of active basis functions will be outlined in the following. In this way, typical finite element procedures for error estimation and marking elements for refinement, respectively, can be seamlessly transferred to the framework of isogeometric analysis.The element-based selection of basis functions contributing to the hierarchical approximation uses two essential definitions which are exemplarily illustrated in Fig. 6for the three-level basis of Fig. 4:1.Active elements: By some marking criterion elementsEeℓ≔ΩPe,ℓof different hierarchy levels have to be chosen to discretise the analysis domain. These elementsEeℓdefine setsMℓ=⋃eEeℓ. They are called active elements and cover the domainΩP=⋃ℓ=0L−1Mℓwithout any overlap. This can be seen in Fig. 6 where active elements are indicated in green. Additionally, a setM+ℓ=⋃I=ℓ+1L−1MIcontains all active elements on finer hierarchy levels thanℓandM−ℓ=⋃I=0ℓ−1MIcomprises all active elements on coarser hierarchy levels.Active basis functions: Every active element is associated to a number ofp+1basis functions in the multi-level basis. The union of these basis functions on each levelℓforms a set(25)Aℓ={NIℓ∈Nℓ:suppNIℓ∩Mℓ≠0̸}and is plotted in colour in Fig. 6(a). However, to ensure a linearly independent basis not all of these functions can contribute to the hierarchical approximation, i.e. attention has to be paid to basis functions whose support overlaps with the domains of active elements on finer or coarser hierarchy levels. In this context, the definition of two subsets is convenient:(a)Basis function setA+ℓ: Basis functions inAℓwith support in the domains of active elements on finer hierarchy levels form the set(26)A+ℓ={NIℓ∈Aℓ:suppNIℓ∩M+ℓ≠0̸}and contribute actively to the hierarchical approximation. Corresponding functions are indicated in Fig. 6(a) by dashed coloured lines.Basis function setA−ℓ: To ensure a linearly independent hierarchical approximation, basis functions ofAℓwith support in the domain of active elements on coarser levels cannot contribute to the hierarchical basis. Functions belonging to these sets(27)A−ℓ={NIℓ∈Aℓ:suppNIℓ∩M−ℓ≠0̸}are plotted by dotted coloured lines in Fig. 6(a).In the preceding section, procedures for selecting the elements and basis functions that contribute to the hierarchical approximation have been introduced. In the following, an implementation of truncated hierarchicalB-splines will be outlined which does not require to carry out the truncation operations explicitly. Instead, the basis is obtained from Bézier extraction performed for all active elementsMℓof each levelℓ. The required truncation is eventually achieved in terms of a hierarchical subdivision operator. This procedure consists of three steps:1.At first the element matrices of all active elements are computed without considering information on whether the basis function contributes to the hierarchical basis or not. This ensures the applicability of standard Bézier extraction.Once element matrices for all active elements of one levelℓhave been obtained, they are assembled to form sub-systems for each hierarchy level.Finally, these sub-systems are combined to form the global system of equations. This process is achieved by a transformation matrixMhwhich can be identified as a hierarchical subdivision operator, i.e. simple matrix multiplication ensures that only basis functions inAcontribute to the approximation.The operations carried out in steps (1) and (2) are standard procedures in isogeometric analysis. Using Bézier extraction outlined in Section  2.2 theB-spline basis functions of the multi-level-basis are mapped onto a unique set of Bernstein polynomials which act as shape functions of the Bézier elements. Then numerical quadrature is applied on the parent element to obtain the coefficient matrices of all active elements. The matrices of active elements of each hierarchy levelℓare assembled into sub-systems of equations(30)Kℓuℓ=FℓwithuℓandFℓcolumn vectors containing the control values of generalised degrees of freedom and the associated generalised forces. Their length isnℓ⋅nDOFwherenℓis the total number of basis functions or control points on levelℓ, andnDOFis the degree of freedom at each control point. Consequently,Kℓis a square matrix of size[nℓ⋅nDOF×nℓ⋅nDOF]. The sub-systems of the individual levelsℓcan be arranged into a global system of equations(31)[K00…00K1⋮⋱0KL−1]︸K[u0u1⋮uL−1]︸u=[F0F1⋮FL−1]︸F.In the multi-level system of Eq. (31) there is no communication between individual levels as observed in the sparsity pattern ofKin Fig. 7(a) generated for the hierarchical basis in Fig. 6. Empty spaces in the characteristic band structure result from inactive elements on each level.This interconnection will be introduced in the following in terms of the hierarchical refinement operatorMh. It acts as a transformation matrix on the multi-level system(32)Kh=MhKMhT(33)Fh=MhFwhich results in the hierarchical system of equations(34)Khuh=Fh.The sparsity pattern of the subdivision operatorMhis shown in Fig. 7(b) while the population of the resulting coefficient matrixKhis plotted in Fig. 7(c). It is noted that in order to reduce memory requirements, efficient matrix libraries with adjusted indexing should be used to avoid zero rows and columns in the multi-level as well as the hierarchical system matrices and in the subdivision operator. A more efficient, condensed matrix representation is illustrated in Fig. 7(d).The hierarchical subdivision operatorMhis an upper triangular matrix with elements(35)Mh=[I0M̃0,1M̃0,2…M̃0,L−1I1M̃1,2…M̃1,L−1I2…M̃2,L−10⋱IL−1].It has to transfer the contributions from all active shape functions of the multi-level to the hierarchical system of equations. This is accomplished in terms of an activity indicator matrixIℓfor each level(36)I(II)ℓ={1forNIℓ∈Aaℓ0elseandIIJℓ=0forI≠J.In addition, it can be observed that basis functions belonging to active elements but not to the hierarchical basis, i.e. the functions in the setsA−k, have been used during the integration of the coefficient matrices of hierarchy levelsk>0in the previous section. Hence, contributions of basis functions ofA−khave to be transferred to active basis functions of levelℓ<k, particularly to those in the setA+ℓ. The relation between these shape functions is given in terms of the subdivision operator according to Eqs. (16) and (19), respectively. Since these are the only transformations required, a modified subdivision operator(37)M̃IJℓ,k={MIJℓ,kforNIℓ∈A+ℓ∧NJk∈A−k0elseis used inMh. In the appendix, a pseudo code illustrates a possible computational implementation of the hierarchical subdivision operatorMhas well as the needed basis function setsA+ℓ,A−ℓandAaℓfrom Section  3.1.4.Although the hierarchical basis is never computed explicitly in the present approach, it can be shown that the resulting approximation is identical to the truncated hierarchical basis [22], cf. Fig. 8(b). This basis varies from the hierarchical set of basis functions, Fig. 6(a), in terms of the contribution of active basis functions in the setsA+ℓ, i.e. the functions plotted as dashed coloured lines in Figs. 6 and 8.The correspondence of the present approach and the truncated basis in  [22] results from the procedure used to compute the coefficient matrices and from the mapping of contributions of basis functions inA−ℓ+1to those inA+ℓ. In order to understand this effect, the basis functionsN30andN40according to Fig. 6 are considered as an illustrative example, Fig. 8.During the multi-level Bézier extraction, standard extraction operators are computed for each active element and numerical integration is carried out subsequently. This has two major implications:1.All basis functions supported in an active element will be considered during quadrature irrespectively of the fact if they are part of the hierarchical basis.The contribution of basis functions on levelℓis limited to the domains of active elements, i.e. the integrated domain.Eventually, the hierarchical subdivision operator will account for the activity of the basis functions and recover the correct support of active basis functions. The matrix elements resulting fromN51andN61are mapped onto those related toN30andN40. In this way the contribution of the active basis functionsN30andN40in the domainsΩP5,1andΩP6,1is taken into account. As the support ofN51andN61is limited to these two active elements on levelℓ=1, the support domain ofN40is truncated. The result is identical to the proposal in  [22]. Therefore, the presented approach provides approximations that possess the partition-of-unity property and a reduced interaction of basis functions between different refinement levels.In the previous section, the implicit implementation of the truncated hierarchical basis was outlined. The application of the basis to adaptive isogeometric analysis follows the standard procedure of adaptive finite element analysis:S1Solve the model problem,Estimate the error of the approximation,Mark elements for refinement using quantities of S2, andRefine the marked elements and go back to S1.The marking (S3) and activation of elements (S4) are subjected to restrictions that ensure a well defined basis:1.Restriction: Due to the definition of theB-spline basis functions in Eq. (1), the refinement of a single element on levelℓcreates two active child elements on levelℓ+1, cf. Fig. 9(a). However, it leads only to basis functionsNIℓ+1∈A−ℓwhich improve the integration but do not enlarge the approximation spaceAof the hierarchical basis. This can be overcome by marking groups ofpelements as shown in Fig. 9(b) for the univariate case andp=2.Restriction: Adjacent elements are forced to be from the same or at most from two consecutive levelsℓ,ℓ+1. This restriction reduces widespread interactions of basis functions and hence improves the condition and bandwidth of the hierarchical coefficient matrixKh.Numerical investigations have demonstrated that a violation of the first restriction does not affect the computations and optimal convergence rates are obtained nevertheless. In addition, the marking of a single element on levelℓaccording to Fig. 9(a) is also acceptable in the case of multiple refinement steps,hmax>1, as a re-selection of its child elements on levelℓ+1will lead to well defined basis functions on levelℓ+2, Fig. 9(c). Note also that the second restriction is applied in Fig. 9(c) and therefore adjacent elements of the marked element on levelℓhave been refined.The control valuesuhat control points that correspond to the hierarchical basisAare obtained by solving the hierarchical system of equations (34). The application of adaptive local refinement algorithms to non-linear problems requires a mapping of the solution vector to provide initial values for the newly activated elements.Assume a solutiontuhhas been computed for the time incrementtusing the hierarchical basistA. For the subsequent incrementt+Δt, certain elements will be marked for refinement. This results in the activation or deactivation of elements and their associated basis functions and control points. Therefore, the solutiontuhhas to be mapped to the new hierarchical basist+ΔtAin order to generate a new initial solution vector0t+Δtuhfor the subsequent time step. Consequently, new control variables are computed from(38)0t+Δtuℓ+1=(M̃ℓ,ℓ+1)Ttuℓwith the modified subdivision operator according to Eq. (16)(39)M̃IJℓ,ℓ+1={0forNJℓ+1∈Aaℓ+1MIJℓ,ℓ+1elsein order to avoid overwriting of existing solutionsuhℓ. In this way, control values for all children in the element tree of an active element are provided. If the hierarchical basist+ΔtAresults from a refinement oftA, this mapping will always be exact because the fine scale basis functions are able to exactly represent the coarse scale solution.In this section three numerical examples are considered to analyse the numerical properties of the presented approach to THB-splines. The results of the adaptive local refinement algorithm are compared with results obtained from globally refined NURBS. The first two examples are problems of heat conduction and linear elasticity with given analytical solutions that are commonly used as benchmarks in adaptive IGA  [11,18,29,30]. In the third demonstration problem, the phase-field approach to brittle fracture is combined with adaptive mesh refinement in the vicinity of the crack tip to simulate crack propagation in a single-edge notched shear test.In this example the Laplace problem(40)Δu=0inΩ,ū=0onΓD,∂ū∂n=gonΓN,is solved for the temperatureuon a two-dimensionalL-shaped domainΩ. The exact solution of the problem is given by(41)ū=r32sin2ϕ−π3.On the Neumann boundaryΓN, the exact heat fluxg=∂ū/∂nand on the Dirichlet boundaryΓD, homogeneous boundary conditions are applied. The definition of the boundary value problem is illustrated in Fig. 10.The domain is modelled by two NURBS patches resulting in aC0-continuous line, dashed in Fig. 10. Note that the L-shaped geometry could also be modelled by aC1-continuous basis. But as already shown by Vuong  [17], who used hierarchicalB-splines to adaptively refine the mesh, the continuity of the approximation does not influence the convergence rates, neither for uniform nor for local refinement if the marking parameterαis adjusted accordingly. Only an offset between the convergence curves can be found which implies that aC1-continuous basis provides a better overall approximation. Our investigations have shown the same behaviour for the use of THB-splines.The geometry of the problem leads to a singularity at the re-entrant corner. In this case classical convergence theory does not hold and the order of convergence with respect to the total number of degrees of freedom(42)k=−12min(p,π2π−β)is governed by the angleβof the re-entrant corner  [31]. In the case of globalh-refinement this leads to a convergence rate ofk=−1/3∀pfor theL-shaped domain withβ=90°.The optimal order of convergencek=−p/2can be recovered by local mesh refinement in the vicinity of the singularity. To select the elements for refinement, quantile marking(43)θ=α-quantile(ηe)with0<α<1is used. That is, elements with an error exceeding theα-quantile of element errors will be marked for refinement. For, e.g.α=0.8, the 20% of elements with the largest element errorsηewill be selected. With the analytic solution of Eq. (41) at hand, there is no need for an error estimator and the element errors(44)ηe2=‖(ū−u)‖L2;Ee+‖∇(ū−u)‖L2;Eeare computed in theH1norm. The domain errorη2=∑eηe2is obtained as the sum over all elements.The results presented below have been obtained for a quadratic and a cubic basis with an initial mesh of 32 elements, Fig. 11(a), andhmax=6adaptive refinement steps. The mesh refinement is controlled by quantile marking withα=0.8. In Fig. 11(b) meshes for the quadratic basis are given. It can be seen that the corner singularity is well detected within the refinement process.Fig. 12shows a comparison of the convergence for adaptive local and global mesh refinement. While the convergence of uniformh-refinement is governed by the singularity, i.e. the expected order of convergence ofk=−13is found, optimal orders of convergence are achieved for the quadratic (k=−1) and the cubic basis (k=−1.5) in the case of adaptive local refinement. This implies that the approach generates well graded meshes in the vicinity of the corner singularity.Moreover, condition numbersκare compared for global and local refinement for the cases ofp=2andp=3in Fig. 13. For comparison, the condition numbers for HB-splines according to  [17] are plotted as well. In Fig. 13, the condition numberκis plotted over the total degree of freedom. For the quadratic basis both, the global and local, refinement procedures result in similar condition numbers. For the casep=3,κincreases significantly for HB-splines, whereas the condition number for THB-splines remains on the same level as for global refinement. This confirms the hypothesis, that THB-splines reduce the interaction of basis functions, and hence effectively improve the condition number compared to HB-splines.As a second example, an infinite plate with a circular hole under uniaxial in-plane tensionσ0according to Fig. 14(a) is considered. The analytical solution is given by Timoshenko  [32] in polar coordinates(r,ϕ)(45)σ̄r=σ02[1−ri2r2+(1−4ri2r2+3ri4r4)cos(2φ)](46)σ̄φ=σ02[1+ri2r2−(1+3ri4r4)cos(2φ)](47)σ̄rφ=σ02(−1−2ri2r2+3ri4r4)sin(2φ)whereri=1mmis the radius of the hole. A numerical solution is conveniently obtained on the quarter of an annulus with Dirichlet boundaries to enforce the symmetry conditions, and a Neumann boundaryΓNat the outer radius to enforce the exact normal stressσ̄n. The uniaxial tensile stressσ0=1MPais applied in thex1-direction and material parametersE=105Paandν=0.3are used. The computational domain is modelled by a singleC1-continuous NURBS patch with an outer radiusro=8.The exact solution features a stress concentration at(x,y)=(0,1)ofσ11=3σ0as illustrated in Fig. 14(b). Due to the lack of a singularity, optimal convergence ratesk=−p/2can be obtained by uniformh-refinement. Local refinement does not improve this rate in the asymptotic limit  [11,18,29,30]. There is however a benefit of the adaptive refinement which increases with the locality of the stress concentration. That is, if the outer radiusrois larger, the stress concentration is more localised in the computational domain, cf. Fig. 14(a), and an improved convergence rate can be achieved in the pre-asymptotic region.The problem has been solved using a quadratic and a cubic basis with an initial mesh of 16 elements, Fig. 15(a), andhmax=6adaptive refinement steps. Elements are selected for refinement using quantile marking withα=0.4. The Bézier meshes forh=3andh=5are illustrated in Fig. 15(b). They show a local refinement of the mesh in the vicinity of the hole, i.e. a resolution of the stress gradients has been achieved.The convergence in theH1norm is illustrated in Fig. 16for the quadratic and cubic bases. In the case of local refinement, the convergence rate can be improved in the pre-asymptotic regime, e.g. the first four to five refinement steps, but approaches a convergence rate ofk=−p/2in the asymptotic region. Hence, adaptive mesh refinement can be used to efficiently model localisation problems.The final example addresses the phase-field modelling of brittle fracture. Different from standard sharp interface models, the discrete crack is smeared in terms of a crack densitycwhich is used as phase-field order parameter. It can be interpreted as a damage variable. The transition zone between the fully broken material (c=1), and the undamaged material (c=0) is characterised by an internal length scaleℓ0which is considered to be a material parameter.By coupling the scalar phase field to a mechanical boundary value problem, the initiation and propagation of the crack are described by the evolution of the crack phase field and the cumbersome numerical tracking of the crack path is avoided, cf. Fig. 17(a). However, the variability of the approach comes at the cost of highly refined meshes along the crack path that are required to properly resolve the transition zone. Hence, adaptive local refinement is essential for efficient computations.The model is based on a variational formulation of the Griffith theory presented by e.g. Francfort and Marigo  [33]. The energy functional(48)Π(u,c)=∫Ωψ(ε(u),c)dV+Gc2ℓ0∫Ω[c2+ℓ0|∇c|2]dVconsists of the elastic energy in the (damaged) bulk material, and the fracture energy which is smeared across the transition zone of lengthℓ0. This approach was further developed by Miehe et al.  [34,35] who proposed a tensile/compressive split of the elastic energy to prevent crack propagation under compressive loads and the introduction of a strain energy history function to avoid crack heeling. The approach leads to two fully coupled differential equations for the displacement fielduand the phase fieldc. The quasi static solution can be found by using a staggered  [35] or monolithic  [36] solution scheme. A recent review of different formulations is presented in  [37] while a critical review of the solution procedures and the choice of boundary conditions can be found in  [38].The solved model problem is illustrated in Fig. 17(b). It considers a square specimen that is notched on the left edge. The plate is clamped at the bottom edge while a given displacement is applied on the top edge. The initial notch is prescribed as a discrete crack in terms of aC−1-continuity line between two of the four patches. The Lamé parameters for the material areλ=121.15kNmm−2andμ=80.77kNmm−2and the phase field parameters are given by the material fracture toughnessGc=2.7×10−3kNmm−1and the characteristic lengthℓ0=0.75×10−2mm. These parameters are identical to the work of Miehe et al.  [35] which allows for a quantitative comparison. A staggered solution scheme is used with a displacement increment ofΔu=10−5mmper time step. The initial mesh is pre-refined in the vicinity of the initial crack tip, Fig. 18(a) (left). The threshold for the adaptive mesh refinement is set toc=0.5, i.e. elements are marked for refinement if the phase field parameter at any quadrature point of the element falls below 0.5. The non-linear problem requires a mapping of the solution according to the algorithm presented in Section  3.3.2.Below, a comparison between two solutions, one obtained on an adaptively refined mesh, and one computed on a uniformly pre-refined mesh is presented, Fig. 18. Both solutions produce the same crack pattern and it can be seen that the adaptive algorithm resolves the crack path. Moreover, the shape of the crack is identical to the numerical solution in  [35].In addition to the qualitative agreement of the crack paths, the comparison of the force–displacement curve obtained with both solutions is identical, Fig. 19(a). The adaptive approach significantly reduces the number of elements which improves the efficiency compared to uniform refinement, Fig. 19(b). It is observed from Fig. 19(c) that the computational time is cut by76%. Note also that knowledge on the expected crack path was used to generate the uniformly pre-refined mesh which is impossible for problems of arbitrary complexity.

@&#CONCLUSIONS@&#
In this contribution, Bézier extraction of truncated hierarchicalB-splines and the application of the approach to adaptive isogeometric analysis have been presented. The use of an element viewpoint and the application of Bézier extraction to a multi-level mesh facilitate the implementation into any existing finite element code. Moreover, standard procedures of adaptive finite element analysis are directly applicable.While Bézier extraction provided a multi-level system of equations with independent levels, the communication between different levels of the hierarchy has been introduced in terms of a hierarchical subdivision operator forB-splines and NURBS. It was shown that a simple matrix multiplication produces a hierarchical system of equations that is identical to the use of the truncated hierarchical basis. It is noted that the explicit truncation of the basis is avoided.Numerical examples have shown that the adaptively refined meshes are well graded. Hence, optimal convergence rates are obtained. Additionally, the efficiency of the approach in terms of reduced computation time has been demonstrated for the phase-field modelling of brittle fracture.In future works, the presented procedures will be extended to coarsening. Due to the element viewpoint, coarsening of the mesh is performed by the activation of appropriate elements and the generation of the hierarchical basis according to the approach presented above. However, attention has to be paid to the mapping of control variables and internal state variables.