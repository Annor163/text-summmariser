@&#MAIN-TITLE@&#
An iterated local search algorithm for the vehicle routing problem with backhauls

@&#HIGHLIGHTS@&#
Simpler and faster algorithm to solve the VRPB.A statistical study carried out to tune the parameters and identify the important components.An additional data structure to reduce the time to compute the set of neighboring solutions.The best known solutions were found for all the instances in two benchmark sets.New best solutions were found for two instances in one benchmark set.

@&#KEYPHRASES@&#
Vehicle routing problem,Metaheuristic,Iterated local search,Oscillating local search,

@&#ABSTRACT@&#
The Vehicle Routing Problem with Backhauls (VRPB) is an extension of the VRP that deals with two types of customers: the consumers (linehaul) that request goods from the depot and the suppliers (backhaul) that send goods to the depot. In this paper, we propose a simple yet effective iterated local search algorithm for the VRPB. Its main component is an oscillating local search heuristic that has two main features. First, it explores a broad neighborhood structure at each iteration. This is efficiently done using a data structure that stores information about the set of neighboring solutions. Second, the heuristic performs constant transitions between feasible and infeasible portions of the solution space. These transitions are regulated by a dynamic adjustment of the penalty applied to infeasible solutions. An extensive statistical analysis was carried out in order to identify the most important components of the algorithm and to properly tune the values of their parameters. The results of the computational experiments carried out show that this algorithm is very competitive in comparison to the best metaheuristic algorithms for the VRPB. Additionally, new best solutions have been found for two instances in one of the benchmark sets. These results show that the performance of existing metaheuristic algorithms can be considerably improved by carrying out a thorough statistical analysis of their components. In particular, it shows that by expanding the exploration area and improving the efficiency of the local search heuristic, it is possible to develop simpler and faster metaheuristic algorithms without compromising the quality of the solutions obtained.

@&#INTRODUCTION@&#
The Vehicle Routing Problem (VRP) was originally described by Dantzig and Ramser (1959) and considers the delivery of goods from a central depot to a set of customers. The basic VRP involves determining a set of routes for a fleet of vehicles, each one starting and ending at the depot, such that the demand of every customer is satisfied and the total cost is minimized. A solution to the VRP must satisfy the following constraints: (I) every customer must be visited exactly once and (II) the amount of goods delivered by each vehicle must not exceed the vehicle capacity. The VRP is one of the most frequently studied combinatorial optimization problems in the literature. Its practical importance has encouraged the operations research community to develop more complex variants that better model the scenarios found in the real world. The Vehicle Routing Problem with Backhauls (VRPB) is an extension of the VRP that deals with two types of customers: the consumers (linehaul) that request goods from the depot and the suppliers (backhaul) that send goods to the depot. The VRPB was formulated to model the distribution process of companies that transport their final products to retailer stores, and supply their production center with commodities from providers in the same area. However, applications of the VRPB can be found in many scenarios that involve the return of goods to the distribution center (e.g. reverse logistics). A solution to the VRPB must satisfy the following additional constraints: in each route, (I) the load of goods sent to the consumers and the load of goods received from the suppliers must not exceed the vehicle capacity, (II) every vehicle must visit at least one consumer and (III) must visit the consumers before the suppliers. The second constraint is due to the assumption that the delivery of goods to the consumers is the main profitable activity. In such a scenario, a vehicle should only be used provided there is at least one consumer that needs to be served. The third constraint is due to the assumption that the load cannot be rearranged at the delivery or pick-up points. For an extensive classification of the VRP variants and the related literature, see Eksioglu, Vural, and Reisman (2009).The VRPB is a generalization of the original VRP. Therefore, it is an NP-hard problem in the strong sense. Even though there are exact algorithms that are able to find optimal solutions for instances with around a hundred customers (Mingozzi, Giorgi, & Baldacci, 1999), a heuristic approach is still necessary to solve larger instances. Recent metaheuristic implementations have proven to be the most successful approaches to solve the VRPB in terms of computing time and solution quality (Brandão, 2006; Gajpal & Abad, 2009; Røpke & Pisinger, 2006; Zachariadis & Kiranoudis, 2012). These algorithms usually have multiple components and parameters that need to be tuned. Nevertheless, it is very unusual to find solid (statistical) studies about the efficacy of each building block and the effect of the parameter values on the algorithm performance. Such studies are of paramount importance in order to identify the reasons why an algorithm is effective and to identify its key components. This allows an algorithm to be adapted in order to exploit the building blocks that have proven to be effective, and to remove the unnecessary components. It is our view that the use of more complex components or strategies should be justified by the value they add to the algorithm performance, either in terms of solution quality or execution time.In this paper, we propose a simple iterated local search (ILS) algorithm to solve the VRPB. The main component of this algorithm is an oscillating local search (OLS) heuristic that allows the consideration of infeasible solutions. The term “oscillating” refers to the constant transitions between feasible and infeasible portions of the solution space. These transitions are regulated by a dynamic adjustment of the penalty applied to infeasible solutions. Additionally, the OLS heuristic explores a rich neighborhood structure (produced by four different neighborhood operators) at each iteration. This is efficiently done by implementing an additional data structure that stores information about the set of neighboring solutions. The execution time of the heuristic is considerably reduced by an appropriate update of this data structure at each iteration. We discuss the results of an extensive computational experiment carried out with two purposes: (I) to identify the key features of the algorithm and (II) to determine the set of parameter values that produce the best algorithm performance. Finally, we compare the ILS algorithm to the best-performing metaheuristic algorithms available in the literature.The structure of the paper is as follows. A mathematical definition of the VRPB based on graph theory and second-order logic is presented in Section 2. A brief overview of the literature is presented in Section 3. The ILS algorithm is described in Section 4 along with some important features of its implementation. The computational experiments carried out and their results are discussed in Section 5. The performance of the ILS algorithm is compared to that shown by other metaheuristic algorithms for the VRPB in Section 6. We present our final conclusions in Section 7.The VRPB can be defined using graph theory and second-order logic. Consider a complete undirected graphG=(V,E)whereV=D∪L∪Bis a set of1+l+bvertices composed of the disjoint subsetsD={0},L={1,…,l}andB={l+1,…,l+b}that represent the depot, the linehaul customers and the backhaul customers, respectively. The setE={(i,j)|(i,j)∈V×V,i≠j}is the set of edges that connect the customers with each other and with the depot. A nonnegative valueci,jis associated with every edge(i,j)∈E, representing the cost to travel from customer i to customer j. An amount of goodsqiis associated with every customeri∈L∪Bthat represents the amount requested from or delivered to the depot, depending on whether the customer is linehaul (i∈L) or backhaul (i∈B). There are m identical vehicles in the depot, each with capacity Q. It is assumed thatm⩾max(mL,mB), wheremLandmBare the minimum numbers of vehicles needed to separately serve all linehaul and backhaul customers, respectively. Each of these parameters can be determined by solving a bin packing problem. A solution to the VRPB comprises a set of m routes. Each router∈R={1,…,m}is defined as a chain ofsrvertices〈v1r,v2r,…,vsrr〉, that satisfies the following constraints:1.Every route starts and finishes at the depot.(1)∀r:1⩽r⩽m|v1r=vsrr=0Every vehicle visits at least one linehaul customer.(2)∀r:1⩽r⩽m|(sr>2)∧(∃i:1<i<sr|vir∈L)Every customer is visited exactly once.(3)∀i:i∈L∪B|(∃r,k:1⩽r⩽m∧1<k<sr|vkr=i∧¬(∃r′,k′:1⩽r′⩽m∧1<k′<sr′|vk′r′=i∧¬(r′=r∧k′=k)))None of the vehicles performs an intermediate stop at the depot.(4)∀r:1⩽r⩽m|(∀i:1<i<sr|vir≠0)In every route, neither the load of goods sent to the linehaul customers nor the load of goods received from the backhaul customers exceeds the vehicle capacity.(5)∀r:1⩽r⩽m|((Σi:1<i<sr∧i∈L|qvir)⩽Q)∧((Σi:1<i<sr∧i∈B|qvir)⩽Q)In every route, the linehaul customers are served before the backhaul customers.(6)∀r:1⩽r⩽m|(∀i,j:1⩽i<j⩽sr|(vjr∈L⇒vir∈L∪D)∧(vir∈B⇒vjr∈B∪D))The objective of the VRPB is to find a set of routes that minimize the total cost. The objective function can be written as:(7)minimizeΣr:1⩽r⩽m|(Σi:1⩽i<sr|cvir,vi+1r)

@&#CONCLUSIONS@&#
In this paper, we introduce a simple iterated local search algorithm to solve the VRPB. The main component of this algorithm is an oscillating local search heuristic that has two important features. The first feature is the ability to explore a broad neighborhood structure (composed of four different neighborhoods) at each iteration. We implement a mechanism for an efficient update of the set of neighboring solutions that substantially reduces the execution time of the algorithm. The second feature is the ability to explore solutions that violate the capacity constraint of the problem. The OLS heuristic embedded in the ILS algorithm performs constant transitions between feasible and infeasible portions of the solution space. These transitions are regulated by a dynamic adjustment of a penalty applied to the cost of infeasible solutions. The development of efficient mechanisms to handle the violation of other constraints through the penalization of the cost function would be a useful topic for future research.We carried out an extensive statistical study of the ILS algorithm. The results obtained show that there are two important components: the ability of the OLS heuristic to oscillate between feasible and infeasible portions of the solution space and the size of the perturbation. The results obtained also allowed us to identify the values of the parameters that yield the best algorithm performance. We compare the ILS algorithm to the best performing algorithms in the literature using two benchmark sets of instances. Despite the fact that the ILS is considerably simpler than the other algorithms compared, it shows a very competitive performance. The ILS algorithm is able to find the best known solutions to all the instances in both benchmark sets in a considerably shorter execution time. Additionally, new best solutions have been found for two instances in one of the benchmark sets. A key result of our work is that, by improving the performance of the LS heuristic, it is possible to develop faster algorithms with simpler components without compromising the quality of the solutions obtained.