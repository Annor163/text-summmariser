@&#MAIN-TITLE@&#
Comparative performance analysis of various artificial immune networks applied to RFID reader-to-reader collision avoidance

@&#HIGHLIGHTS@&#
The reader-to-reader anti-collision model is translated as an optimization problem.A summary review of six artificial immune networks is proposed.The major immune operators are redesigned by following the initial spirits.The effects of multiple variables are investigated.The algorithmic computational efficiency is examined.

@&#KEYPHRASES@&#
Artificial immune network,Comparative analysis,Optimization,Reader-to-reader collision avoidance,Resource allocation,RFID system,

@&#ABSTRACT@&#
Within a radio frequency identification (RFID) system, the reader-to-reader collision problem may occur when a group of readers operate simultaneously. The scheduling-based family, as one branch of RIFD reader collision avoidance methods, focuses on the allocation of time slots and frequency channels to RFID readers. Generally, the RFID reader-to-reader collision avoidance model can be translated as an optimization problem related with the communication resource allocation by maximizing the total effective interrogation area. Artificial immune networks are emerging heuristic evolutionary algorithms, which have been broadly applied to scientific computing and engineering applications. Since the first version of artificial immune networks for optimization occurred, a series of revised or derived artificial immune networks have been developed which aim at capturing more accurate solutions at higher convergence speed. For the RFID reader-to-reader collision avoidance model, this paper attempts to investigate the performance of six artificial immune networks in allocating communication resources to multiple readers. By following the spirits of artificial immune networks, the corresponding major immune operators are redesigned to satisfy the practice of RFID systems. By taking into account the effects of time slots and frequency channels, respectively, two groups of simulation experiments are arranged to examine the effectiveness of different artificial immune networks in optimizing the total effective interrogation area. Besides, a group of examination is executed to investigate the performance of six algorithms in solving different dimensionality of solution space in reader collision avoidance model. Meanwhile, a single group of simulation experiments are arranged to examine the computational efficiency of six artificial immune networks. The results demonstrate that six artificial immune networks perform well in searching the maximum total effective interrogation and are suitable to solve the RFID reader-to-reader collision avoidance model.

@&#INTRODUCTION@&#
Radio frequency identification (RFID) is one of non-contact data storage and access technologies, which is focused on by administrative and economic entities over the world. An RFID system can identify information from tags (attached to target objects) by using readers that are able to transmit/receive radio frequency signals. During the previous decades, RFID had been applied to such fields as supply-chain management [1], library administration [2] and manufacturing industry [3,4]. However, in a scenario with dense readers and/or dense tags, the read/write operation of RFID readers is easy to be interfered due to the reader collision [5,6]. Generally, the reader collision problem has two types: the reader-to-tag collision and the reader-to-reader collision [7–9]. Up to date, many methods have been proposed to alleviate or mitigate reader-to-reader collision.Based on the time division multiplex access (TDMA) mechanism, a famous algorithm named Colorwave was proposed in 2003 to allocate time slots to readers [10]. In 2009, an enhanced TDMA-based anti-collision algorithm was presented to adjust the frame size [11]. In 2011, a probabilistic distributed color system (PDCS) was developed by absorbing the concept of probabilistic collision resolution [12]. In 2012, a distributed algorithm (i.e., Expowave) was applied to solve the reader collision problem by scheduling RFID reader networks [13]. In 2013, a distributed color non-cooperative selection (DCNS) protocol was proposed to maximize the throughput of the RFID system [14], and a distributed mechanism-based protocol (i.e., MALICO) was presented by using a maximum-likehood estimator to estimate the number of neighboring readers (potential colliding readers) [15]. In 2014, an improving Colorwave with probabilistic approach (i.e., PCW) was embedded in the collision resolution routine of Colorwave to improve both throughput and fairness [16].Inspired by the frequency division multiplex access (FDMA) mechanism, a FDMA-based algorithm – HiQ – was proposed in 2006 to enable multiple readers to operate simultaneously [17]. In 2013, a graph coloring algorithm was put forward to minimize the number of assigned available frequency channels [18]. Further, many bio-inspired algorithms have been used to determine the optimal resource allocation to readers, such as simulated annealing [19], genetic algorithm [20], particle swarm optimization [21] and artificial immune network [22–24].Among these methods, from the viewpoint of communication resource allocation, how to alleviate the reader-to-reader collision could be translated into an optimization problem with respect to time slots and frequency channels. Without doubt, algebraic or heuristic methods are the effective computational utility of problems as such.As one branch of artificial immune systems, the artificial immune network performs strong and robust information processing capability for solving complex problems [25]. Since the first artificial immune network model for function optimization, i.e., opt-aiNet, was reported in 2002 [26], many variants of the artificial immune network have been developed. Note that some references [22,27,28] continued naming their algorithms as artificial immune systems, although these algorithms were derived from the immune network theory. To capture better solutions quickly, an improved adaptive artificial immune system (IA-AIS) was proposed in 2011 for industrial process control [27]. In 2014, an adaptive hierarchical artificial immune system (AHAIS) was proposed by adding a learning mechanism [28]. With the guidance of the elitist antibodies, an artificial immune network with social learning (AINet-SL) was applied to finite impulse filter design problems, where two sub-mechanisms – stochastic social learning (SSL) and heuristic social learning (HSL) – were investigated [29]. Correspondingly, AINet-SL is actually divided into AINet-SSL and AINet-HSL. Since 2013, the artificial immune networks (e.g., RA-AIS [22] and RA-AHAIS [23]) have been applied to solve RFID reader-to-reader collision avoidance models. Obviously, as one of efficient optimization algorithms, artificial immune network has shown powerful and promising potential in function optimization and engineering design [30].The purpose of this paper is to systematically investigate and evaluate the proposed artificial immune networks applied in RFID reader-to-reader collision avoidance model. These artificial immune networks are opt-aiNet, IA-AIS, RA-AIS, AHAIS, AINet-SSL and AINet-HSL, respectively. Therefore, it is necessary that a common RFID reader-to-reader collision avoidance model should be formulated and further a general framework of artificial immune networks should be designed for this model. As far as each artificial immune network to be concerned, the major immune operators (such as antibody encoding, clone, mutation, and suppressor) are adapted to satisfy the requirements of the target model. After adaptation, for the sake of unified naming, these six investigated algorithms are renamed, i.e., Optimizer A (stands for opt-aiNet), Optimizer B (for IA-AIS), Optimizer C (for RA-AIS), Optimizer D (for AHAIS), Optimizer E (for AINet-SSL) and Optimizer F (for AINet-HSL), respectively. In simulation experiments, not only the effects of the number of time slots and the number of frequency channels are investigated, respectively, but also the total effective interrogation area and the computational efficiency obtained by six algorithms are compared, respectively.The remainder of this paper is organized as follows. Section 2 reviews the principles of the RFID reader-to-reader collision avoidance model and several artificial immune networks. Section 3 proposes the general framework of artificial immune networks applied to reader-to-reader collision avoidance and gives some details in technical implementation. Section 4 makes some comparative experiments among six investigated algorithms with respect to time slots, frequency channels, dimensionalities of solution spaces and computational efficiency, respectively. Finally, Section 5 draws some conclusions.Take into account a typical RFID system depicted in Fig. 1, which is usually made up of three components: tags, readers, and an application system. A reader often transmits periodically radio frequency (RF) signals to scan potential tags. The range that the reader's RF signal is strong enough to energize tags is called the interrogation region of the reader. When an object with an attached RFID tag appears within the interrogation region of the reader, the tag will be powered and activated at a frequency channel by magnetic coupling, and then sends the data stored into the tag chip back to the reader. After the reader receives and decodes data from the tag, it forwards this data to the RFID application system for storage and further processing.Fig. 2shows a schematic diagram in the RFID system with NReader readers, where dj,iis the distance between the desired reader Riand the interfering reader Rj. As shown in this figure, Rihas the maximum interrogation radius of rmax,iand Rjhas the interfering radius of rinterfer. When Riattempts to interrogate the target tag, the effective interrogation radius of Ridecreases from rmax,itoward ridue to the interference from Rj. If this interference signal is very strong, the effective interrogation radius riwill become smaller than the distance x between Riand the target tag. As a result, Ricannot communicate with this tag correctly. This effect is called the reader-to-reader collision problem (R2RCP).As shown in Fig. 2, it is supposed that NReader readers are installed randomly in a rectangular space, NFreqfrequency channels and NSlottime slots are available. Generally, the minimum Signal-to-Interference-plus-Noise Ratio (SINR), i.e., SINRmin, is required for the reader to communicate with the target tag correctly. In Fig. 2, if Rican recognize the target tag successfully, it is necessary that SINR of Ridenoted as SINRi(k, x) should be greater than SINRmin. That is to say, SINRi(k, x) must satisfy(1)SINRi(k,x)=BPi(k,x)Ii(k)+Noisei≥SINRmin.where BPi(k, x) is the backscatter signal power that Rireceives in the kth time slot, Ii(k) is the total interference from other readers in the kth time slot, and Noiseiis the noise power that Rireceives. In Eq. (1), BPi(k, x) is a function with respect to the distance x between Riand the target tag, and Ii(k) is a function with respect to the distance dj,ibetween Riand Rj(j=1, 2, …, NReader, i≠j). These two functions [31] can be defined by(2)BPi(k,x)=αbωEtagPiGTGR(PLrefx−γ)2and(3)Ii(k)=∑j=1,j≠iNReaderωj(k)Ij,i(k)dj,i−γ=hGTGR∑j=1,j≠iNReaderωj(k)Pjβmask(|Chi(k)−Chj(k)|)PLrefdj,i−γ,respectively. Where αbωis the normalized spectrum power, Etagis the effective power reflection coefficient of the tag, γ is the path-loss exponent (γ≥2), h is the fading coefficient, GTand GRrepresent the transmitting antenna gain and the receiving antenna gain, respectively. Besides, Piand Pjare the transmitting signal power of Riand Rj, respectively, Chi(k) and Chj(k) are the numbers of frequency channels allocated to Riand Rj, respectively, and PLrefis the reference path loss at the distance of 1m from a desired reader. As defined in EPC global Class 1 Generation 2 [32], the spectrum mask level βmaskis a function with respect to the frequency channel interval between two interfering readers. Note that, ωi(k)=1 if Rjoperates in the kth time slot, and otherwise ωi(k)=0. By integrating Eqs. (1)–(3), SINRi(k, x) can be expressed as(4)SINRi(k,x)=αbωEtagPiGTGR(PLrefx−γ)2hGTGR∑j=1,j≠iNReaderωj(k)Pjβmask(|Chi(k)−Chj(k)|)PLrefdj,i−γ+Noisei.Assume Rican communicate with tags correctly in the kth time slot in a circle with the effective interrogation radius, which is marked as ri(k). Therefore, ri(k) can be obtained from(5)ri(k)=argmaxxSINRi(k,x)≥SINRmin.However, ri(k) is less than or equal to ri,max(k), i.e., ri(k)≤ri,max(k). In this case, ri,max(k) can be computed by(6)ri,max(k)=λi(k)4πPiGTGRPmin×1−Md4(1+Md)2.where λi(k) is the wavelength of Riin the kth time slot.By combining Eqs. (4)–(6), the complete expression of ri(k) is(7)ri(k)=minαbωEtagPiGTGRPLref2SINRminhGTGR∑j=1,j≠iNReaderωj(k)Pjβmask(|Chi(k)−Chj(k)|)PLrefdj,i−γ+Noisei1/(2γ),ri,max(k).In practice, the tag identification capability is evaluated by the total effective interrogation area of all readers at all time slots [20,22]. This is because tags are easier to be identified within greater total effective interrogation area. Therefore, the total effective interrogation area S is expressed as(8)S=∑i=1NReader∑k=1NSlotωi(k)π(ri(k))2.Above all, the optimal scheduling scheme of multiple-reader R2RCAM can be reached by solving the following optimization problem(9)maximizeS=∑i=1NReader∑k=1NSlotωi(k)π(ri(k))2,s.t.Chi(k)∈CH,∀i∈NR,and∀k∈NS,where NR={1, 2, …, NReader}, NS={1, 2, …, NSlot} and CH={0, 1, 2, …, NFreq}.An artificial immune system is a bio-inspired computational model which is abstracted from the natural immune system. During the last two decades, many researchers have designed and built models/theories on basis of the artificial immune system for a variety of application domains. Generally, these models/theories can be mainly clustered into four families as shown in Fig. 3, i.e., clonal selection, negative selection, danger theory, and immune network. To be specific, clonal selection establishes the idea that those cells capable of recognizing an antigen will proliferate while other cells are selected against. Negative selection utilizes the ability of the immune system to detect unknown antigens while not reacting to the self cells. Danger theory provides effective intrusion detection by not only monitoring the explicit presence of the intruder, but also alerting the anomalous intruder. For immune network theory, its main idea is that the immune system maintains an idiotypic network of interconnecting cells for antigen recognition. These cells interconnect with each other in certain ways that lead to stabilization of the network. In such ways, two cells are connected if the affinities they share reach a certain threshold, and the strength of the connection is directly proportional to the affinity they share.With the efforts of researchers, immune network has been improved for such different viewpoints as parameter adaption, antibody encoding format, multiple-population antibody, similarity evaluation, clone operator, and affinity measure. Note that immune network theory is one concept of artificial immune systems, some papers [22,27,28] named their algorithms as artificial immune systems (AIS), though those algorithms are based on immune network theory precisely.The opt-aiNet algorithm is an earlier version of artificial immune networks, which is used to solve multi-modal continuous function optimization [26]. Real number is used as the element of its antibody encoding format, and the similarity between antibodies is measured by their Euclidean distance. In the cloning operator, each parent antibody is reproduced for a fixed number of Nclone, whatever its affinity is. This is the uniform cloning operator,(10)NCi(t+1)=Nclone,i=1,2,...,N(t),where t is the index of the current generation, N(t) is the number of parent antibodies at the tth generation in the antibody population and NCi(t+1) is the clone multiplier of the ith parent antibody at the (t+1)th generation. In the mutation operator, all the cloned children antibodies go through the affinity-based Gaussian mutation (AGM)(11)Abi′(t+1)=Abi(t)+G×exp−Aff*(Abi(t))β,where Abi(t) is the ith antibody at the tth generation, Aff*(Abi(t)) is the normalized affinity within the interval [0,1] of Abi(t), β is a factor which controls the decay degree of the inverse exponential function, G is a Gaussian random variable with zero mean and standard deviation 1, andAb′i(t)is a mutated child antibody of Abi(t). After mutation, only one antibody with the highest affinity is selected from NCi(t+1) children antibodies plus the parent antibody. Once there is no significant difference in the average affinity of antibodies between any two neighboring generations, a similarity-based suppressor will be activated. All but those highest-affinity antibodies are suppressed as long as their similarity is less than a given suppression threshold Ths. And then, a number of randomly produced antibodies are recruited. Repeat this iterative process until the termination condition is satisfied. For more technical details, please see [26].To overcome the shortages of the opt-aiNet algorithm, an improved adaptive artificial immune network (IA-AIS) was proposed and as a result, the accuracy of solutions was improved [27]. In the clone operator, the higher the affinity of antibody is, the more its children antibodies are cloned. In detail, the number of the cloned children antibodies is nonlinearly related to the normalized affinity of their parent antibody. This is the affinity-based cloning operator, which follows(12)NCi(t+1)=round(r×NCmax×Aff*(Abi(t))n+NC0),where NCi(t+1) is the clone multiplier of Abi(t), r is a uniform random variable, NCmax is the maximum variable scalar, n is the power factor of the control function, and NC0 is a base integer number which encourages the contribution from antibodies with worse affinity. In the mutation operator, the controlled affinity-based Gaussian mutation (CAGM)(13)Ab′i(t+1)=Abi(t)+γ×exp−Aff*(Abi(t))η×Gis used to make antibodies with lower affinity mutate much more than those with higher affinity. Where γ is the mutation scalar, and η is the control factor. Additionally, IA-AIS employs a dynamic suppressor, where the suppression threshold Thscan be adjusted dynamically and is proportional to the similarity of antibodies, which follows(14)Ths=min{Dij|i≠j}+ξ×(max{Dij|i≠j}−min{Dij|i≠j}),where Dijis the Euclidean distance between the ith antibody and the jth antibody, and ξ∈(0, 1). For more technical details, please see [27].As the first application of artificial immune network in an RFID system, an improved artificial immune network for resource allocation (RA-AIS) was proposed to optimize the combinational schema of frequency channels and time slots [22]. For this algorithm, an encoded string with integer numbers are used as a candidate antibody whose affinity is easy to calculate. During the initialization, more constraint conditions are required to be satisfied. In the clone operator, the uniform cloning operator described as in Eq. (1) is considered. In the mutation operator, the bit-mutation operator is well designed for the RFID reader-to-reader collision avoidance model. In detail, one bit for each antibody is randomly selected to be mutated and all the potential feasible mutation solutions are determined by the constraints of model. Based on the reader-to-reader collision avoidance model, for each potential feasible mutation solution, the fitness is calculated to find its selection probability. Hence, the resulting unique mutation solution (also a mutated antibody) is selected according to the cumulative probability by using roulette method. In the suppression operator, some antibodies with lower affinity are removed while the number of antibodies from mutation is greater than a specific upper bound. Accordingly, a certain number of new antibodies are recruited. For more details, please see [22].To improve the convergence velocity and the solution quality, an adaptive hierarchical artificial immune network (AHAIS) was proposed, where the candidate antibodies were separated into an elitist swarm (ES) with higher affinity and a common swarm (CS) with lower affinity [28]. In the clone operator, different clone multipliers are applied for antibodies in ES and those in CS, respectively, which can be expressed as(15)NCi(t+1)=round(NCmax×Aff*(Abi(t))nE),forAbi(t)∈ES,round(NCmax×Aff*(Abi(t))nC+NC0),forAbi(t)∈CS,where nEand nCis the power factor of the control function for antibodies in ES and CS, respectively. Here nE<nC, which means the antibodies in ES are more reproductive than those in CS. In the mutation operator, ES and CS employ different mutation strategies, respectively. On the one hand, ES uses the self-learning mutation strategy which is formulated as(16)Ab′i(t+1)=Abi(t)+G×λ(t).The dynamic step size λ(t) is easily computed as(17)Dmin=min{Dij|i≠j,Abi(t),Abj(t)∈ES},λ(t)=min{λmax,Dmin},where Dmin is the minimum distance between any two antibodies in ES and λmax is the maximum step size. On the other hand, CS uses the elitist-learning mutation strategy which is written as(18)Ab′i(t+1)=Abi(t)+G×exp−Aff*(Abi(t))η,ifAff(Abi(t))≥Aff(AbES(t)),r×(AbES(t)−Abi(t)),ifAff(Abi(t))<Aff(AbES(t)),where AbES(t) is the best antibody in ES. In the suppression operator, AHAIS employs the dynamic suppressor same as Eq. (14). Moreover, the dynamic swarm-update strategy is executed to every other some generation intervals to make some antibodies move from/to ES and CS. For more details, please see [28].Inspired by the social behavior of animals (e.g., birds, bees, ants), an artificial immune network with social learning mechanisms (AINet-SL) is proposed [29]. Like AHAIS, AINet-SL divides the candidate antibodies into two swarms, i.e., ES and CS. In the clone operator, the nonlinear affinity-based cloning strategy is employed, which can be formulated as(19)NCi(t+1)=round((NCmax−NC0)×Aff*(Abi(t))n+NC0).It is noted that the number of reproduced antibodies is exponentially nonlinear to the affinity of their parent antibody. In the mutation operator, each antibody in ES is mutated by using the independent self-learning mutation strategy, i.e.,(20)Ab′i(t+1)=Abi(t)+G×λi(t),where λi(t) is the searching step size for Abi(t). Often, the searching step size is required to be updated dynamically, so λi(t) is given by(21)λi(t)=λi(t−1),ifAff(Abi(t))>Aff(Abi(t−1)),λi(t−1)2,elseifλi(t−1)/2≥λmin,λ0(k),otherwiseand(22)λ0(k)=λ0(k−1)2,ifλ0(k−1)2≥λmin,λ0(0),otherwise,where λmin is the minimum threshold of the step size.On the other hand, each antibody in CS is mutated by using the partial social-learning mutation strategy(23)Ab′i(t+1)=Abi(t)+r×(Abj(t)−Abi(t)),ifAff(Abi(t))<Aff(Abj(t)),r×(AbES(t)−Abi(t)),elseifAff(Abi(t))<Aff(AbES(t)),G×λi(t),otherwisewhere r are uniform random variables, AbES(t) is the best antibody in ES, and Abj(t) is an antibody selected from ES by using one of two social learning mechanisms (stochastic social learning (SSL) mechanism and heuristic social learning (HSL) mechanism). The Abj(t) is selected by uniform random in SSL while it is dependent on its affinity in HSL by using the roulette method. Besides, AINet-SL also supplies the dynamic suppressor and the dynamic swarm-update strategy, which looks like what AHAIS does. For more details, please see [29].To maximize the total effective interrogation area of an RFID reader-to-reader collision avoidance model, artificial immune networks are considered to handle such a complex optimization problem. Here, one candidate antibody corresponds to a feasible solution of R2RCAM, while the antigen corresponds to the specific objective function and its constraints of R2RCAM as shown in Eq. (9). For the sake of fairness, we employ the same antibody encoding format, affinity evaluation, similarity measure, termination condition but keep the core strategies unchanged in major operators of artificial immune networks. Therefore, it is essential that these major immune operators (i.e., clone, mutation, suppression, etc.) of artificial immune networks should be redesigned or revised. For unification, six investigated optimization algorithms are renamed, i.e., Optimizer A denotes for opt-aiNet, Optimizer B for IA-AIS, Optimizer C for RA-AIS, Optimizer D for AHAIS, Optimizer E for AINet-SSL and Optimizer F for AINet-HSL, respectively. The technical details are presented as follows.The immune networks are based on an iterative process of adaptation, which are originally developed for pattern recognition, data clustering and data compression. However, it is suggested that these learning algorithms can be considered as generic and can therefore be applied to other domains such as optimization, control and robotics.Generally, the immune network is initialized with a number of elements randomly generated (Initialization phase). Each network element corresponds to an antibody molecule and its affinity is determined by the measure of combination between antigen and antibody (Affinity measurement). Then, a number of cloned antibodies are reproduced (Cloning operator), and these clones generated undergo somatic mutation processing (Mutation operator). After that, the antibody with the highest affinity is selected to be maintained in the network (Selection), constituting what is defined as a clonal memory. Once the network is tending toward stability, those similar antibodies with lower affinity are eliminated from the network (Suppression operator). Additionally, a number of new randomly generated antibodies are incorporated into the network (Recruitment). Repeat this iterative process until the termination condition is met.The general framework of artificial immune network can be summarized as shown in Fig. 4.In an RFID system, data is transferred between the reader and the tag as a radio signal over a physical channel which may use frequency and/or time division multiplexing to create a sequence of radio frequency channels and time slots. Thus, we use integers as the antibody coding formats of artificial immune networks. Supposed NReader is the number of readers, NSlotis the number of available time slots, and CH is the set of NFreqavailable frequency channels. As shown in Fig. 5, the uth candidate antibody Abu(t) is encoded as abu(1, t), …, abu(i, t), …, abu(NReader, t) where abu(i, t) is further encoded as Chi(1), …, Chi(k), …, Chi(NSlot) for Ri. For example, an antibody bit Chi(k) denotes the frequency channel number allocated to Riin the kth slot, and Chi(k)∈CH. Note that Chi(k)=0 means that Ridoes not operate in the kth slot. It is clear that the total encoding length of one antibody is NReader×NSlot.In the model of R2RCAM, our goal is to maximize the total effective interrogation area covered by all readers, so we can simply designate the equation of Eq. (9) as the affinity function of artificial immune networks. It is rewritten as(24)Affinity(Abu(t))=∑i=1NReader∑k=1NSlotωi(k)π(ri(k))2,s.t.Chi(k)∈CH,∀i∈NR,and∀k∈NS,where NR is the set of NReader deployed readers, NS is the set of NSlotavailable time slots, and the other variables are the same as in Section 2.1.A measure of similarity between any two antibodies is required to evaluate the diversity of artificial immune networks. A certain proper value of similarity means the global searching potential of artificial immune networks characterized by well-distributed antibodies. We know that each antibody has NReader×NSlotantibody bits, now define that Q is the number of antibodies and there are NAlleledifferent alleles in each antibody bit, thus the information entropy of the jth antibody bit among all the antibodies can be formulated as(25)Hj(Q)=∑i=1NAllele−pi,jlogpi,j,where pi,jis the probability of the jth antibody bit which takes the ith allele value. Then, the average entropy of antibodies is given by(26)H(Q)=1R∑j=1RHj(Q).Therefore, the resulting similarity of two antibodies (i.e., the uth and vth antibodies) can measured as(27)Su,v=11+H(2).The operation of artificial immune networks begins with initialization. Generally, Niniantibodies are randomly produced as the candidate antibodies of artificial immune networks, which are subject to the constraints in Eq. (24). In particular, the candidate antibodies of Optimizer C are required to satisfy a strict constraint condition that the same frequency channel cannot be allocated to two readers whose physical distance is less than a lower bound. For Optimizer D, NEScandidate antibodies with higher affinity are marked as ES while the remainder NCS=Nini−NEScandidate antibodies are marked as CS. For Optimizer E and F, a fixed percentage of pElitistantibodies with higher affinity step into ES while the remainder (1−pElitist) antibodies go into CS.To clone antibodies is a process of generating children antibodies by reproducing parent antibodies. The strategy to clone antibodies decides the evolutionary efficiency of candidate antibodies. Six compared artificial immune networks in this paper provide several cloning strategies, which is described as follows.(a)Uniform cloning strategyThe uniform clone strategy is very simple, easy to implement. Here, each candidate parent antibody is cloned by using a defined clone multiplier, whatever its affinity is. It is clear that all candidate antibodies have the same (uniform) capability of reproducing children antibodies. Therefore, the formula of the clone multiplier can be expressed mathematically as Eq. (10). The uniform cloning strategy is often used in both Optimizer A and Optimizer C.Affinity-based cloning strategyDuring the evolution of artificial immune networks, those antibodies with higher affinity are encouraged to reproduce more child antibodies. One method called the affinity-based cloning strategy can be formulated as Eq. (12). The affinity-based cloning strategy is often used in Optimizer B.Differentiated affinity-based cloning strategyAs the candidate antibodies are classified as two groups: the elitist antibody swarm (ES) and the common antibody swarm (CS), different strategies to clone antibodies in different groups are required. Naturally, the antibodies in ES are more reproductive due to their higher affinity; while those in CS perform poorer in reproduction of children antibodies. Hence, a differentiated affinity-based cloning strategy is proposed for ES and CS. The corresponding algebraic expression is shown in Eq. (15). The differentiated affinity-based cloning strategy is often used in Optimizer D, Optimizer E and Optimizer F.Mutation is essential to not only the convergence velocity of artificial immune networks but also the solution accuracy of optimization problems. After using integer coding format, the mutation operators in artificial immune networks should be revised correspondingly. The performance of each algorithm heavily depends on its well-designed mutation operator. The mutation operators of six investigated artificial immune networks in this paper are technically transformed as follows according to their spirits of mutation process.(a)Random mutation strategy in Optimizer AOptimizer A provides a random mutation strategy which means that not only the number of antibody bits to be mutated but also the resulting mutated antibody bits are random for each candidate antibody. This randomness in the mutation operator enriches the diversity of candidate antibodies, which is helpful to find the global optima. For the sake of clear explanation, the pseudocode of the random mutation strategy in Optimizer A is shown in Fig. 6.Affinity-based mutation strategy in Optimizer BOptimizer B employs an affinity-based mutation strategy to improve the convergence speed and the convergence quality; as a result, the candidate antibodies with higher affinity mutate fewer bits than those with lower affinity. This controlled strategy is profitable to probe the global optima quickly and accurately. For the sake of clear explanation, the pseudocode of the affinity-based mutation strategy in Optimizer B is shown in Fig. 7.Resource allocation-based mutation strategy in Optimizer COptimizer C uses resource allocation-based mutation strategy, where the candidate antibodies mutate dynamically according to the interfering power from other operating readers. This strategy evaluates the fitness of each potential mutated result, which creates more opportunity to improve the affinity of the candidate antibodies. For the sake of clear explanation, the pseudocode of the resource allocation-based mutation strategy in Optimizer C is shown in Fig. 8.Adaptive hierarchical mutation strategy in Optimizer DTo satisfy the hierarchical structure of Optimizer D, different mutation strategies are required for the candidate antibodies in ES and CS, respectively. The antibodies in ES are more reproductive due to their higher affinity, and thus focus on exploratory evolution (self learning) alone; while those in CS emphasize the help of elitist antibodies (elitist learning). For the sake of clear explanation, the pseudocode of the adaptive hierarchical mutation strategy in Optimizer D is shown in Fig. 9.Social learning-based mutation strategy with social learning in Optimizer E and Optimizer FConsidering the fact that the effective interrogation area is impaired when the same frequency channel is allocated to the readers whose distances are less than a certain value, the mutation strategy with social learning is proposed to try to depress the occurrence of this problem. This strategy can effectively mitigate the collision problem among the readers in the same slots. For the sake of clear explanation, the pseudocode of the hierarchical mutation strategy with social learning in Optimizer E and Optimizer F is shown in Fig. 10.Suppression operator can be directed by measure of the concentration of antibody population, which offers another chance to improve the diversity of the candidate antibodies. Once the current-generation average affinity is not significantly different from the previous-generation average affinity, the suppression operator will be triggered. Generally, there are two suppression strategies available for artificial immune networks.(a)Fixed threshold-based suppression strategyIn the fixed threshold-based suppression strategy, the suppression threshold is defined in advance and kept unchanged. If the similarity between two antibodies is greater than this fixed suppression threshold, one antibody with less affinity will be removed while the other with higher affinity will be remained. Clearly, the fixed threshold-based suppression strategy plays a positive role to some extent in reducing the redundant antibodies. As a simple application, the fixed threshold-based suppression strategy is used in Optimizer A.Dynamic threshold-based suppression strategyThe dynamic threshold-based suppression strategy can be formulated as Eq. (14), where the suppression threshold changes according to the similarity or concentration of candidate antibodies during their evolutionary process. It is noted that the similarity in this strategy is measured by using the information entropy as shown in Eq. (27). In this paper, the dynamic threshold-based suppression strategy is often used in Optimizer B, Optimizer C, Optimizer D, Optimizer E and Optimizer F.Dynamic swarms updating strategy are usually considered in Optimizer D, Optimizer E and Optimizer F, where the candidate antibodies are divided into two swarms (ES and CS). After evolving a few generations, some antibodies from CS may become better in affinity than those from ES. Therefore, it is necessary to update swarms and to allow these better CS antibodies to become ES members. Thus, in the dynamic swarm updating strategy, all antibodies are sorted by their affinity in a descending order. Then, for Optimizer D, NESantibodies with higher affinity step into ES while the remainder NCSantibodies go into CS. For Optimizer E and Optimizer F, On the other hand, a fixed percentage of pElitistantibodies with higher affinity step into ES while the remainder (1−pElitist) percentage of antibodies go into CS.For the sake of clarity, a general framework/flowchart of artificial immune networks applied to reader-to-reader collision avoidance model is depicted in Fig. 11. For each major immune operator, the corresponding strategies used in different optimizers are marked in the right part of Fig. 11. Note that all variables used in the figure are described in Appendix.In this experimental section, we discuss the effects of the number of time slots, the number of frequency channels and the dimensionalities of solution spaces, respectively, and further investigate the total effective interrogation area and the computational efficiency of R2RCAM optimized by such artificial immune networks as Optimizer A (opt-aiNet), Optimizer B (IA-AIS), Optimizer C (RA-AIS), Optimizer D (AHAIS), Optimizer E (AINet-SSL) and Optimizer F (AINet-HSL).In all experiments, it is assumed that all readers are installed randomly in a specific square area. All the simulation commands are run repeatedly for 50 trials. For the sake of comparison, the initialized population size Niniof all artificial immune networks is set as 40, the maximum population size Nmax is set as 100 and the maximum generation is set as 500. By referring to the EPCglobal C1G2 standard [32], the parameter settings for R2RCAM are listed in Table 1. In addition, the parameter settings for the compared artificial immune networks are given in Table 2.To investigate the effects of frequency channels, we assume that 15 readers (NReader=15) and 5 time slots are available (NSlot=5), and various numbers of frequency channels are used, i.e., NFreq=8, 10, 12 and 14. Fig. 12presents the simulation results of the total effective interrogation area optimized by six algorithms. Seen from Fig. 12, when fewer frequency channels are available, the values of the total effective interrogation area obtained by six optimizers are less than those with more available frequency channels. This is because more frequency channels make the densely distributed readers have greater potential to mitigate the reader-to-reader collision, and as a result, the total effective interrogation area are increased. For example, Optimizer A obtains 1587.8829m2 in the total effective interrogation area for NFreq=8, while obtains 2172.3118m2 for NFreq=12. Similarly, Optimizer F obtains 6495.2410m2 in the total effective interrogation area for NFreq=10, while obtains 6811.6299m2 for NFreq=14.On the other hand, the curves of the total effective interrogation area obtained by different optimization algorithms has clear features. Observed from Fig. 12, the curves of the total effective interrogation area obtained by Optimizers E and F are close to each other, and especially they always lie above those obtained by Optimizer A, Optimizer B, Optimizer C and Optimizer D. Similarly, the curves of the total effective interrogation area obtained by Optimizers A and B are also close to each other. However, they always stay below those obtained by other optimizers. In other word, it is clear that the curves obtained by Optimizers C/D locate between those by Optimizers E/F and A/B. For instance, if NFreq=10, Optimizer E obtains 6662.9099 m2 in the total effective interrogation area and Optimizer F obtains a value of 6495.2410m2, while Optimizer A obtains 1990.5162m2 and Optimizer B obtains 2094.1363m2. Moreover, those values obtained by Optimizers C and D are 3169.2254m2 and 5788.7191m2, respectively. Evidently, the total effective interrogation area obtained by using either Optimizers E or F is larger than that by the other optimizers, when the same number of available frequency channels are provided.Similarly, to investigate the effects of time slots, it is assumed that 15 readers (NReader=15) and 10 frequency channels (NFreq=10) are available, and various numbers of time slots are used, i.e., NSlot=5, 7, 9, 11 and 13. Fig. 13presents the simulation results of the total effective interrogation area per slot solved by six optimizers. Seen from Fig. 13, as the available time slots become more, the plots of the total effective interrogation area per slot obtained by six optimizers linearly decrease. As we know, for R2RCAM, the dimensionality of the solution space is equal to the product of the number of readers multiplied by the number of time slots. Thus, more available time slots mean higher dimensional antibody encoding string, as a result, the convergence performance of artificial immune networks will degraded. For example, when NSlot=7, the mean value of the total effective interrogation area per slot obtained by Optimizer D is 865.8510m2 while it is only 677.1080m2 when NSlot=11. Likewise, the mean value of the total effective interrogation area per slot obtained by Optimizer A is 376.6394m2 if NSlot=5, while it is only 270.7865m2 if NSlot=9.On the other hand, seen from Fig. 13, Optimizers E and F obtain very approaching curves that lie at the top of the figure window. However, Optimizer E performs slightly better than and Optimizer F. In the same way, Optimizers A and B also get very similar curves that stay at the bottom of this figure window. By comparison, Optimizers A is the loser. Naturally, Optimizers C and D perform in the middle. For example, when NSlot=7, Optimizer E obtains 1269.3150m2 in the total effective interrogation area per slot, Optimizer F obtains a value of 1223.8637m2, Optimizer A obtains 302.7267m2 and Optimizer B obtains 334.4172m2. Moreover, those values obtained by Optimizers C and D are 616.8187m2 and 865.8510m2, respectively. These results demonstrate that Optimizers E and F outperform the other optimizers in finding the total effective interrogation area per slot for the different cases that the same number of available time slots are used.The following experiment will investigate the optimization capability of different optimizers in solving various dimensional R2RCAM. In this investigation, we define the dimensionality of the solution space to be Dim=NReader×NSlot, and assume the available number of frequency channels to be 10 (i.e., NFreq=10) and the available number of time slots to be 5 (i.e., NSlot=5). For a specific value of NSlot, Dim is linearly proportional to NReader. Here, different numbers of readers are considered (e.g., NReader=4, 8, 12, 16, 20, 24 and 28). Therefore, the corresponding dimensionalities of the solution space are 20, 40, 60, 80, 100, 120 and 140, respectively. Table 3presents the statistical results of the total effective interrogation area values that are optimized by Optimizer A, Optimizer B, Optimizer C, Optimizer D, Optimizer E and Optimizer F, respectively. For the convenience of observation, the best value of each index is typed in bold.Seen from Table 3, when the dimensionality of solution space increases from 20 up to 140, the average total effective interrogation area optimized by Optimizer A decreases from 5154.8623m2 down to 738.4259m2. There is a similar decreasing trend in the average total effective interrogation area for Optimizer B. As a result, it is not hard to be found that Optimizers A or B can capture their maximum value of the total effective interrogation area when Dim=20. On the contrary, Optimizers C–F get a convex trend in the average total effective interrogation area that performs firstly increasing and then decreasing. It is noticeable that there always exists a peak when Dim equals some value. Taking Optimizer D as an example, when Dim increases from 20 to 140, the average total effective interrogation area values obtained by Optimizer D are 5232.5923m2, 6112.0906m2, 5975.9605m2, 5411.1675m2, 4747.6260m2, 4248.8711m2, 2969.7729 m2, respectively. It is clear for Optimizer D that a peak occurs (i.e., 6112.0906m2) if Dim=40. Similarly, a peak from Optimizer C occurs at Dim=40, and the peaks from Optimizers E and F appear at Dim=60, respectively. These results suggest that more readers are able to contribute larger total effective interrogation area for the cases with fewer readers. On the contrary, for the cases with dense readers, more readers will potentially collide with each other and thereby cause the significant decrease in the individual effective interrogation area. As a result, the final total effective interrogation area is depressed indeed.On the other hand, observed from Table 3, for a given solution space, Optimizers E and F perform the best in searching the total effective interrogation area, Optimizers A and B do the worst, and Optimizers C and D are in the middle. For instance, when Dim=120, Optimizer E obtains 5833.2298m2 in the mean total effective interrogation area and Optimizer F obtains 5568.2060m2. Compared to Optimizers A, B, C and D, Optimizer E obtains significant improvements by 511.39%, 450.44%, 167.37% and 37.29%, respectively, while Optimizer F also achieves improvements by 483.62%, 425.43%, 155.29% and 31.05%, respectively. In general, Table 3 indicates that Optimizers E and F are capable of capturing better solutions than other optimizers in solving R2RCAM, whichever the solution space is low dimensional or high dimensional. The reason is that the collaborative evolution mechanism of antibodies in Optimizers E and F is effective in improving the solution accuracy in the total effective interrogation area. Meanwhile, seen from Table 3, Optimizers A and B obtain very approaching statistical values of the total effective interrogation area, and Optimizers E and F obtain the approaching values, when different dimensionalities of solution space are considered. It is because that Optimizers A and B both use such simple immune operators as to not search the optimal value of the total effective interrogation area. Optimizers E and F employ similar algorithmic structure and social learning strategy, where two subpopulations evolute collaboratively.To evaluate the computational efficiency among six optimizers, it is considered that 15 readers (NReader=15), 10 frequency channels (NFreq=10) and 5 time slots (NSlot=5) are available. For the sake of fairness, the number of times for fitness evaluations (NTFE) is used to investigate the computational efficiency of six optimizers. For the same NTFE, we think that the larger the total effective interrogation area is, the higher the computational efficiency of an artificial immune network to solve R2RCAM. Thus, we statistically compute the total effective interrogation area every other a NTFE interval. In detail, the total effective interrogation area is computed and recorded when NTFE reaches 1000, 2000, 5000, 10,000, 20,000 and 50,000, respectively. Table 4presents the comparative results of the total effective interrogation area in computational efficiency of six optimizers. For the convenience of observation, the best value of the total effective interrogation area for each NTFE is typed in bold.Known from Table 4, the largest total effective interrogation area when NTFE is smaller (e.g., 1000 or 2000) is obtained by Optimizer C, while the largest total effective interrogation area when NTFE is larger (e.g., 5000, 10,000 or 20,000) is captured by Optimizer D. Especially, if NTFE=50,000, Optimizer E can capture the largest total effective interrogation area of 4909.1924m2. Obviously, among six artificial immune networks, Optimizer C has the best optimization capability in the early evolutionary process, Optimizer D is the best algorithm in the middle process, and Optimizer E becomes the final winner in the later process. On the other hand, for any optimizer, it is easy to be found that the total effective interrogation area shows a steady growth as NTFE increases. Considering Optimizer C, when NTFE increases from 1000 up to 50,000, the increments of the total effective interrogation area are 267.9466m2, 340.0653m2, 174.4654m2, 116.1316m2, 130.9437m2, respectively. In general, these results suggest that the artificial immune networks perform robustly in solving R2RCAM. Further, for a given NTFE value, it is easy to be concluded that Optimizers A and B obtain similar values in the total effective interrogation area, Optimizers E and F get similar values, and Optimizers C and D do similarly.

@&#CONCLUSIONS@&#
This paper systematically investigates and evaluates the performance of six newly published artificial immune networks which are used to solve the RFID reader-to-reader collision avoidance model (R2RCAM). To satisfy the practice of RFID systems, without the deviation of each given artificial immune network, their major immune operators are carefully adapted or redesigned, such as antibody encoding format, clone operator, mutation operator, suppression operator (the measure of similarity) and updating operator. After adaptation, six investigated algorithms are renamed opt-aiNet (Optimizer A), IA-AIS (Optimizer B), RA-AIS (Optimizer C), AHAIS (Optimizer D), AINet-SSL (Optimizer E) and AINetS-HSL (Optimizer F), respectively. In the simulation experiments, to investigate the effectiveness of six algorithms, two groups of examinations are executed related with the number of the number of frequency channels and the number of time slots, respectively. Besides, a single group of examination is arranged to test the capability of six algorithms in solving different dimensionalities of the solution spaces. Additionally, another group of examination is executed to evaluate and compare the computational efficiency among six investigated algorithms. Based on the simulation results, some conclusions can be made. (a) The total effective interrogation area increases, as more frequency channels are available. (b) The total effective interrogation area per slot almost linearly decreases as the available time slots become more. (c) Optimizers E and F are capable of capturing better solutions than other optimizers in solving R2RCAM, whichever the solution space is low-dimensional or high-dimensional. Meanwhile, the total effective interrogation area firstly increases and then decreases as the number of reader increases. Accordingly, there always exists a peak for a certain number of readers. (d) Optimizer C has the best optimization capability within fewer NTFE, Optimizer D is the best algorithm in the middle evolutionary process, and Optimizer E shows its strong computational efficiency in the later process. (e) All optimizers are capable of robustly capturing the optimization solutions in solving R2RCAM.However, some potential research issues on artificial immune networks in the future are possibly focused on. (a) How to reduce the time consumption and computation complexity of artificial immune networks. (b) How to further improve the solution accuracy of artificial immune networks from such different viewpoints as clone operator, mutation operator, suppression operator, and multiple-population co-evolution. (c) How to analyze the artificial immune network by using mathematical approaches. (d) How to apply artificial immune network to other theoretic researches and engineering applications.