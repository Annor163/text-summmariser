@&#MAIN-TITLE@&#
Metric corrections of the affine camera

@&#HIGHLIGHTS@&#
A specific study of the orthographic, weak-perspective and paraperspective cameras.An algebraic procedure solving the affine correction problem for each camera model.A closed-form solution for each camera model.A full characterization of the affine corrections’ generic ambiguities for each camera model.An experimental evaluation comparing the algebraic procedures to global polynomial optimization and an interior-point method.

@&#KEYPHRASES@&#
Affine camera,Structure-from-motion,Optimal projection,

@&#ABSTRACT@&#
Given a general affine camera, we study the problem of finding the closest metric affine camera, where the latter is one of the orthographic, weak-perspective and paraperspective projection models. This problem typically arises in stratified Structure-from-Motion methods such as factorization-based methods. For each type of metric affine camera, we give a closed-form solution and its implementation through an algebraic procedure. Using our algebraic procedure, we can then provide a complete analysis of the problem’s generic ambiguity space. This also gives the means to generate the other solutions if any.

@&#INTRODUCTION@&#
We study the problems of finding the closest orthographic, weak-perspective or paraperspective projection to a general affine camera in the sense of the Frobenius norm. These form three instances of the metric affine correction problem class, which we called orthographic affine correction, weak-perspective affine correction and paraperspective affine correction, respectively. The main use of metric affine correction is in Structure-from-Motion by factorization [15,11] and alternation [10]. In the factorization algorithm, metric affine correction is the final stage of a three-stage process. In the first stage, a centered measurement matrix is factored into a joint camera matrix and a structure matrix. This factorization represents an affine 3D reconstruction and is defined up to a (3×3) matrix representing an affine change of coordinates. In the second stage, the metric structure of the affine 3D reconstruction is recovered by computing an affine-to-metric upgrade using the metric constraints from the camera model (for instance, the two rows of the orthographic camera must be orthonormal). The metric constraints are redundant, and can thus only be satisfied approximately. This means that, with noise, the upgraded camera factor is not exactly a metric camera factor. In the third stage, metric affine correction must therefore be performed for each camera in order to recover the metric cameras from the upgraded affine cameras. [15] does factorization with the orthographic camera, while [11] does factorization with the paraperspective camera, but uses a suboptimal metric affine correction procedure, which could thus be replaced by the proposed one. In the alternation algorithm, metric affine correction is the third stage of an iterative three-stage process. The alternation algorithm requires one to provide an initial estimate of the cameras. In the first stage, the structure is computed from the current camera estimates by triangulation. In the second stage, each camera is computed from the current structure estimate by resection. Both stages amount to solve a set of small linear least squares problems. The second stage estimates affine cameras, as it leaves aside the non-linear constraints characterizing each type of metric camera model. In the third stage, metric affine correction is thus performed for each camera in order to recover the metric cameras. These three stages are repeated until convergence is reached. The third stage is fundamental in the alternation algorithm for two reasons. The first reason is that because of noise, similarly to the third stage of the factorization algorithm, the computed general affine cameras are not exactly metric cameras. The second reason is probably more important: without the third stage, an alternation algorithm would converge to an affine, and not to a metric, reconstruction. The third stage indeed introduces the metric constraints into the alternation algorithm. [10] does alternation with the weak-perspective camera, and could be readily extended to the paraperspective camera with our correction procedure.Metric affine correction shares strong similarities with orthonormal Procrustes analysis. Inspired by the derivation of the optimal solution to orthonormal Procrustes analysis (specifically, we follow the derivation in [1]) inspired by [8,13], we solve orthographic affine correction and weak-perspective affine correction by a simple algebraic procedure, whose derivation is also fairly simple but does not seem to have appeared in the literature before. We also solve paraperspective affine correction by a simple algebraic procedure. Its derivation is however far more involved. We establish the algebraic procedures and prove their optimality. Our procedures allow us to provide an analysis of the problem’s generic ambiguities. These are generic in the sense that they apply to any solution algorithm. Our analysis thus determines cases for which the problem has a unique solution, and cases for which it does not. For the latter, we provide a characterization of the solution space1A space is a set (a simple collection of objects) with some added structure, such as a norm.1and a means to generate all solutions. Our results on the solution ambiguities are summarized in Table 1. Metric affine correction is a set of constrained polynomial optimization problems, to which polynomial optimization methods could be applied. This would however be computationally more expensive by several orders of magnitude than our analytical solutions and would not reveal the problems’ intrinsic structure and degenerate cases.Our input data is an affine projection matrix written asP∈R2×3(and the direction of projection in the paraperspective case). Our goal is to perform metric affine correction onP. For the orthographic camera, this means finding the camera’s rotation, and for the weak-perspective and paraperspective cameras, this means finding the camera’s rotation and scale factor. The rank ofPmust be two [5]. A rank of one would mean that all 3D space points would be projected to a single image line; a rank of zero would mean that they would be projected to a single image point. Even if these are not proper projections, the rank of matrixPmay drop to one or zero for near degenerate geometries under the effect of noise. For instance, a rank of one may happen when viewing an object with a strong tilt, while a rank of zero may happen when viewing an object at a distance with a narrow field of view. Analyzing degenerate cases thus tells us what may happen in near degenerate cases. We established that, excluding the case wherePvanishes (which is equivalent to it having a zero rank), the weak-perspective and paraperspective scale is always uniquely recoverable. However, for the three metric affine cameras, the rotation is uniquely recoverable only ifPhas full rank, otherwise it has an ambiguity inSO2.We first give our notation and background in Section 2. We then solve the metric correction problem for the orthographic, weak-perspective and paraperspective cameras in Sections 3–5 respectively. For each camera model, we first give the correction’s cost function and pseudo-code. We then derive the correction procedure based on the Singular Value Decomposition (SVD) and analyze the correction’s ambiguities. The details of our analysis of the correction’s ambiguities for the paraperspective camera are deferred to Appendix A. We finally give experimental results in Section 6 and conclude in Section 7.General notation. We use italics for scalar (such as a andα), bold fonts for vector (such asv) and typewriter fonts for matrices (such asA). The entries of a vector or matrix are written as inA=A1,1A1,2A2,1A2,2. We usediagto create (block) diagonal matrices. We use double bar fonts for sets (such asR). We useBto denote a generic binary set with|B|=2. We have for instance{-1,1}≡B. We write vector two-norm as in‖v‖2and matrix Frobenius norm as in‖A‖F. We definea,b×=defabbaand⊙as the Hadamard (element-wise) product.Orthonormal matrices. We useOdfor the Lie group of orthonormal matrices2A group is a set associated with an operation called the group law. The set and group law must satisfy closure and associativity, and there must be an identity element and an inverse element for each member of the group. For instance, the group law ofOdandSOdis matrix multiplication, the identity element is the identity matrix inRd×dand the inverse is element is obtained by matrix transposition.2andSOd⊂Odfor the Lie group of special orthonormal matrices, withd∈{2,3}. ForA∈Od,det(A)=±1; forA∈SOd,det(A)=1. We thus haveOd≡SOd×B. Elements ofSO2may be parameterized ascosθ-sinθsinθcosθforθ∈R. Elements ofO2may be parameterized asacosθ-sinθasinθcosθforθ∈Randa∈{-1,1}. This is equivalent to havingbcosμ-bsinμsinμcosμfor someμ∈Randb∈{-1,1}. ForA∈O2,det(A)=det(-A), and the variable a is thus required to specify whetherA∈SO2(fora=1) orA∈O2⧹SO2(fora=-1). ForA∈O3however,det(A)=-det(-A), andA∈SO3can thus be switched toO3⧹SO3by simply negating its entries. We writeP2for the space of (2×2) permutation matrices defined asP2=defI,ĨwithĨ=def0110. We have thatP2⊂O2andP2≡B,Sub-Stiefel matrices. A sub-Stiefel setSSr×c,1⩽r⩽3,1⩽c⩽3, is formed as the set ofr×cblocks taken from all orthonormal matrices inO3. Consequently, the Frobenius norm of any element ofSSr×cis bounded by 1. For instance,n∈SS1×1⊂Ris a scalar such that|n|⩽1andn∈SS2×1⊂R2×1is a vector such that‖n‖2⩽1.The affine camera is simply defined as a projection which preserves parallelism. The general affine camera is thus represented by a matrixA∈R2×3for the rotational part and a vectort∈R2×1for the translational part. More specifically, a point with world coordinatesQ∈R3×1is projected to image coordinatesq∈R2×1asq=AQ+t. We use metric affine camera to mean an affine camera which satisfies some additional constraints called the metric constraints. Metric affine cameras are important: they form the basis of many Shape-from-X methods, such as Photometric Stereo [17] and Shape-from-Shading [7], to name a few. The metric affine cameras may be derived from the perspective camera in two ways. First, by increasing the focal length to infinity while back-tracking along the principal ray [5]. Second, by approximating perspective projection to some order [3].The orthographic camera is the simplest metric affine camera. An affine camera is orthographic ifA=R¯withR¯∈SS2×3. In other words,Amust be the leading two rows of a 3D rotation matrix. Geometrically, it rotates the object’s points and simply projects them orthographically to the camera’s retina. The weak-perspective camera is a zeroth order approximation of the perspective camera. An affine camera is weak-perspective ifA=αR¯withα∈R+andR¯∈SS2×3. In other words,Amust be the leading two rows of a 3D rotation matrix up to a positive rescaling. Geometrically, it follows the orthographic camera, and additionally rescales the projected points about the optical axis. The rescaling takes into account the camera to object distance, asαis chosen as the inverse of the object’s average depth. The paraperspective camera is a first order approximation of the perspective camera. An affine camera is paraperspective ifA=α[Id]Rwithα∈R+,d∈R2×1andR¯∈SS2×3. The vectordis related to a direction of projection. Indeed, a paraperspective camera follows the weak-perspective camera, except that the projection to the retina is along the direction defined by the perspective projection of the object’s center of mass. This allows the paraperspective camera to take the full 3D coordinates of the object’s location into account in the projection process.The orthographic, weak-perspective and paraperspective cameras form a hierarchy of approximations with gradually increasing precision to perspective projection. The affine camera models are simpler than the perspective camera because their projection process is essentially linear. However, any metric affine camera model must satisfy a set of nonlinear constraints. For these problems such as Structure-from-Motion where the camera parameters must be estimated [11,16,12,15], this has motivated the use of approaches estimating first the general affine model (which, being non-metric, is not subject to nonlinear constraints), and then fitting the chosen metric affine camera model in a second step called metric affine correction.Definition. Our algebraic procedures are extensively based on the SVD [4] inR2×3. An SVDP=UΣV⊤must satisfyU∈O2,V∈O3andΣ=[Σ¯0]∈R2×3withΣ¯=diag(σ1,σ2). We have thatσ1,σ2∈R+are the singular values ofPin decreasing order. Though the singular values are unique, an SVD is never unique. Understanding the ambiguities of the SVD inR2×3is of utmost importance in studying the ambiguities of metric affine correction. The existence of SVD ambiguities means that for a given reference SVDP=UΣV⊤there exist concurrent SVDsP=U′Σ′V′⊤that produce the sameP. BecauseU,U′∈O2there existA∈O2such thatU′=UA. Similarly, there existB∈O3such thatV′=VB. Therefore the concurrent SVDsU′Σ′V′⊤=UAΣ′B⊤V⊤and soΣ=AΣ′B⊤. Because the singular values are unique,ΣandΣ′must be equal up to re-ordering. We model this re-ordering withΣ′=E⊤Σdiag(E,1)for someE∈P2. By combining these two equations, we obtainΣ=M⊤ΣNwithM=defAE⊤andN=defBdiag(E,1)⊤. Therefore a full characterization of the SVD ambiguities is given by the family of matricesA∈O2andB∈O3such that:(1)A=MEB=Ndiag(E,1)withE∈P2,M∈O2,N∈O3,MΣ=ΣN.Note that the family of matricesM∈O2andN∈O3characterizes the ambiguities of the SVD up to re-ordering. The singular values of matrixPprovide a neat way to form categories of ambiguities of the SVD. InR2×3this leads to four cases, which we analyze in detail below and summarize the results in Table 2. In practice, this means that our algebraic procedures, which are based on taking the SVD ofP, will have to be tested against a reference SVD and four types of concurrent SVDs for ambiguities.Case 1:σ1>σ2>0. This case is the most general one and has only generic ambiguities. We partition matrixN∈O3as:N=N¯n1n2⊤nwithN¯∈SS2×2,n1,n2∈SS2×1,n∈SS1×1,and usingMΣ=ΣNfrom Eq. (1) we obtain:(2)MΣ¯0=Σ¯N¯Σ¯n1.This directly givesn1=0. BecauseN∈O3, this impliesn∈{-1,1}andn2=0, and finallyN¯∈O2. By parameterizingM∈O2andN¯∈O2as:M=acosθ-sinθasinθcosθandN¯=bcosμ-sinμbsinμcosμ,witha,b∈{-1,1}andθ,μ∈R, and using the leading partMΣ¯=Σ¯N¯of Eq. (2) we obtain the following equation:σ1acosθ-σ2sinθσ1asinθσ2cosθ=σ1bcosμ-σ1sinμσ2bsinμσ2cosμ.It is trivial that element(2,2)impliescosθ=cosμand that then element(1,1)impliesa=b. Elements(1,2)and(2,1)implysinθ=sinμ=0and soθ=kπ,μ=k′π, fork,k′∈N. Finally, element(2,2)impliesk=k′, and we thus obtain:M=diag(s1,s2)andN=diag(s1,s2,s3)withs1,s2,s3∈{-1,1}.We obtain a generic SVD ambiguity: sign flips on corresponding columns ofUandV. We finally arrive at:A=diag(s1,s2)EandB=diag(s1,s2,s3)diag(E,1)withs1,s2,s3∈{-1,1},E∈P2.The ambiguity space is thusB4(it has 4 binary possible choices). Starting fromΣ=AΣ′B⊤, and replacingAandBby their expressions, we obtainΣ′=Ediag(s1,s2)Σdiag(s1,s2,s3)diag(E,1)=EΣdiag(E,1).Case 2:σ1=σ2>0. Letσ=defσ1=σ2. This case is known as a ‘degenerate SVD’ in the literature. The SVD can be rewritten asP=σU[I0]V⊤and Eq. (1) reduces toM[I0]=[I0]N. By partitioningN∈O3as we did in case 1, we obtain:M0=N¯n1,from which we conclude, again as in case 1, thatn1=n2=0,n∈{-1,1}andN¯∈O2. The leading part of this equation gives usM=N¯=C∈O2, and leads to:M=CandN=diag(C,s)withs∈{-1,1},C∈O2.BecauseP2⊂O2, we finally arrive at:A=CandB=diag(C,s)withs∈{-1,1},C∈O2.The ambiguity space is thusO2×B(it has 1 continuous and 2 binary possible choices). Starting fromΣ=AΣ′B⊤, and replacingAandBby their expressions, we obtainΣ′=C⊤Σdiag(C,s)=Σ=σI.Case 3:σ1>σ2=0. In this case, we haveΣ¯=diag(σ1,0). We use a different partition ofN∈O3compared to case 1 and case 2:N=nn2⊤n1N¯withN¯∈SS2×2,n1,n2∈SS2×1,n∈SS1×1.Eq. (1) is then rewritten as:σ1m1,10⊤σ1m2,10⊤=σ1nσ1n2⊤00⊤.We thus obtainn2=0, and using the same reasoning as in case 1 and case 2, this impliesn∈{-1,1},n1=0andN¯∈O2. We also trivially obtainm2,1=0andm1,1=n. BecauseM∈O2, this impliesm1,2=0andm2,2∈{-1,1}, leading to:M=diag(s1,s2)andN=diag(s1,C)withs1,s2∈{-1,1},C∈O2.We finally arrive at:A=diag(s1,s2)E,andB=diag(s1,C)diag(E,1)withs1,s2∈{-1,1},C∈O2,E∈P2.The ambiguity space is thusO2×B3(it has 1 continuous and 4 binary possible choices). Starting fromΣ=AΣ′B⊤, and replacingAandBby their expressions, we obtainΣ′=Ediag(s1,s2)Σdiag(s1,C)diag(E,1)=EΣdiag(E,1).Case 4:σ1=σ2=0. In this case,P=0=U0V⊤with0∈R2×3the all-zero matrix. We can trivially conclude thatM∈O2andN∈O3. In other words,Σ=0contains all the information of the SVD, andUandVare uninformative. BecauseP2⊂O2, we arrive at:A∈O2andB∈O3.The ambiguity space is thusO2×O3(it has 4 continuous and 2 binary possible choices). Starting fromΣ=AΣ′B⊤we obtainΣ′=Σ=0.

@&#CONCLUSIONS@&#
