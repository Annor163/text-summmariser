@&#MAIN-TITLE@&#
Implicit slicing for functionally tailored additive manufacturing

@&#HIGHLIGHTS@&#
A novel implicitly-defined slicer for additive manufacturing (AM) is developed.The implict formulation allows for slicing based on design intent.The slicer is intended to produce components with tailored functional properties.A large improvement in the mechanical properties of AM components is demonstrated.

@&#KEYPHRASES@&#
Additive manufacturing,Toolpath generation,Implicit slicer,Digital thread,Functionally tailored materials,g-code generator,

@&#ABSTRACT@&#
One crucial component of the additive manufacturing software toolchain is a class of geometric algorithms known as “slicers.” The purpose of the slicer is to compute a parametric toolpath and associated commands, which direct an additive manufacturing system to produce a physical realization of a three-dimensional input model. Existing slicing algorithms operate by application of geometric transformations upon the input geometry in order to produce the toolpath. In this paper we introduce a new implicit slicing algorithm based on the computation of toolpaths derived from the level sets of arbitrary heuristics-based or physics-based fields defined over the input geometry. This enables computationally efficient slicing of arbitrarily complex geometries in a straight forward fashion. Additionally, the calculation of component “infill” (as a process control parameter) is explored due to its crucial effect on functional performance fields of interest such as strain and stress distributions. Several examples of the application of the proposed implicit slicer are presented. Finally, an example demonstrating improved structural performance during physical testing is presented. We conclude with remarks regarding the strengths of the implicit approach relative to existing explicit approaches, and discuss future work required in order to extend the methodology.

@&#INTRODUCTION@&#
Additive manufacturing, also known as layered manufacturing, rapid prototyping, or less formally as 3D printing, is an increasingly important family of fabrication techniques for the production of a wide variety of components. These fabrication techniques are characterized by successive additions of material to a domain, as opposed to the repeated subtractions that are employed by most traditional fabrication technologies  [1]. Recent years have seen a surge of interest in additive manufacturing technology from a broad number of engineering and manufacturing disciplines. This interest is primarily driven by the relative freedom from geometric constraints provided by additive manufacturing methods; geometries that are difficult or impossible to produce by conventional means are often readily achievable. Additionally, the possibility of producing customized, low volume, or otherwise economically infeasible products  [2] has stimulated much interest in the field.At the present time, a variety of additive manufacturing technologies exist. Common techniques include stereolithography  [3], Fused Deposition Modeling (FDM)  [4], Selective Laser Sintering (SLS)  [5–7], Electron Beam Melting (EBM)  [8], and Direct Metal Deposition (DMD)  [9,10]. The mechanical details of these processes vary considerably, but they share a common software toolchain, known as the “digital thread”. A block diagram of the digital thread concept is shown in Fig. 1. Because of the highly integrated nature of modern additive manufacturing software packages, the individual components of the digital thread are not always discussed in a distinct fashion. Fig. 1 shows the major components of the digital thread individually.As Fig. 1 shows, the digital thread is subdivided into three major domains; the design environment, a preprocessing environment, and a manufacturing environment. The digital thread begins in the design environment, and originates from a Computer-Aided Design (CAD) model produced by a designer. The ultimate goal of the additive manufacturing process is to produce this model within acceptable constraints on accuracy, time, cost, and other parameters. Within the design environment, this geometry is converted to a triangular mesh form, typical encoded as a stereolithography (STL) or similar file. It is important to note that this conversion preserves approximate  [11] geometric information regarding the original model only. Any other ancillary information encoded within the original model is lost in this process, although future use of improved model representations  [12] may allow some information to be retained. Moving to the preprocessing stage, the position of the resultant mesh within the build volume of the additive manufacturing process is determined by a layout optimization routine. In practice, a collection of many meshes is packed into the build volume of the machine in order to reduce per-unit production costs, using a method such as that of  [13]. The mesh (or collection of meshes) is then processed by an algorithm known as a “slicer”. The purpose of the slicer is to subdivide the mesh(es) into a series of distinct layers, and to compute the numeric control (NC) commands issued to the additive manufacturing machine in order to produce the distinct toolpaths making up each layer. The build layout and slicer tools are often combined into a single commercial software product, that largely behaves as a “black box”. Once the toolpath has been produced, the motion control software and hardware systems present in the manufacturing environment are used to drive the additive manufacturing machine in order to produce the output object.The various stages of the additive manufacturing digital thread have been studied and developed for decades, and in many senses have reached a high level of development sophistication  [14]. One important shortcoming of the current state of the art is the aforementioned loss of design information that occurs at the interface between the design environment and the preprocessing environment. This effectively reduces the additive manufacturing process to a purely geometric exercise. While this is acceptable for established uses of additive manufacturing such as the production of “look and feel” prototypes, there is currently a strong push towards the development of additive manufacturing technologies that imbue the components that they produce with functional properties. Examples of functional properties include yield and ultimate strengths, elastic anisotropy constants, residual strains, and thermal or electrical conductivities. Initial efforts documenting such activities can be found in  [15,16].The primary focus of this paper is on the development of a new type of slicing algorithm. The motivation for this development is to reduce the deficiency of design data in the preprocessing domain, and facilitate ongoing efforts to develop functionally imbued additively manufactured objects. In order to do so, we adopt a fundamentally different approach to the slicing problem. Unlike existing algorithms, that operate on the basis of explicit geometric transforms applied to the input geometry, we employ a novel implicit method based on the computation of level sets of field functions. We explore the use of field functions defined upon these regions in order to re-introduce design intent into the preprocessing environment. In particular, we develop a methodology by which the results of Finite Element Analyses (FEA) may be used to dictate the computation of toolpaths in order to improve functional performance fields of interest, such as strain and stress distributions, generated within additively manufactured components.In order to provide motivation and context for the present work, Section  2 discusses both the origins and more recent development of slicing algorithms for additive manufacturing. In Section  3, we proceed to define the implicit field based slicer, discussing the mathematical details and their implementation in depth. In Section  4 we demonstrate the results of applying the implicit slicer to an escalating series of test problems. We first demonstrate the ability of the implicit slicer to compute toolpaths equivalent to those produced by explicit slicers on complex geometry. We then demonstrate the use of the slicer to compute toolpaths based on the solution to differential equations defined on the implicit layer regions. Finally, we use the results of FEA to compute toolpaths for a component intended to bear to mechanical loads. Following this, Section  5 presents the results of physical validation tests that demonstrate the use of the implicit slicer to tailor the mechanical responses of a test specimen. In Section  6 we conclude by giving remarks on the steps that must be taken to further develop the implicit slicer into a fully-fledged component of the additive manufacturing digital thread.

@&#CONCLUSIONS@&#
In this paper we have developed and demonstrated a new strategy for toolpath generation and slicing for additive manufacturing. A review of existing slicing methodologies has shown that prior approaches may be categorized as explicit slicers, as they operate by means of explicit transformations applied upon the input geometry. In contrast to this, the present paper introduces an implicit approach in order to address the loss of non-geometric information in the digital thread, and to better convey the intent of designers throughout the additive manufacturing toolchain. The development and formulation found in Section  3 show that the implicit methodology allows for a straightforward implementation that avoids the complexity associated with traditional polygon offsetting. It also allows great flexibility in the specification of the additive manufacturing toolpath, and for the generation of toolpaths based on physical fields of interest.The results of Section  4 show that the implicit slicer offers several important advantages. The first test case, on the engine head geometry, demonstrates that the methodology can be applied to generalized, and even very complex components, such as those that are increasingly produced using additive manufacturing systems in practice. The second test problem, with the spur gear geometry, demonstrates that the infill toolpath may be generated based on the solution to a closed-form equation capturing the physics relevant to the original design intent. The final test problem, based on the wrench geometry, demonstrates the use of a common engineering simulation tool to determine the toolpath geometry. The results of a FEA simulation, that captures the explicitly specified intended use of the wrench, are successfully used to compute the infill toolpath geometry. Qualitative examination of this toolpath shows that it too reflects the intended usage of the wrench. In Section  5, a quantitative assessment of the implicit slicer is given. It is shown that significantly improved mechanical properties and component performance may be achieved by use of this methodology to incorporate the results of an external structural mechanics simulation.In the test cases presented, the toolpaths produced by the implicit slicer do not represent optimal structures. Rather, the purpose of these exercises is to demonstrate the great flexibility offered by the implicit methodology, and the possibility of including relevant physics or multi-physics results into the production of additively manufactured components. This in turn opens the door to the production of components with performance properties that are tailored towards the intended use of the component.It must also be noted that the present work is exploratory in nature, and that there is a great deal of future work that is required to bring the implicit methodology to the state of maturity exhibited by its explicit counterparts. Our future plans include•Development of strategies in order to generate production time-optimized toolpaths.Development of a methodology for producing functionally optimized components. This may require the development of constitutive models of additively manufactured objects which reflect the highly nonuniform and hierarchical nature of these processes.Expansion of the implicit methodology to include features such as bridge and gap fill routines, thin section detection, and other features present in current explicit slicers. The development of routines for producing “support” or scaffolding material is particularly important.Exploration of the best methods for automatically determining the contour intervals. For example, it may be necessary to limit the gradient of the infill function in order to avoid over-dense contours, such as those seen in the second test problem. Conversely, it may be desirable to increase the density of the contours in a localized sense in order to satisfy additional performance constraints.Developing a methodology for either discrete or gradual translations between different fields for different portions of the toolpath. For example, to ensure that the outer surface of the component is solid when a sparse infill pattern is used.The development of process and machine-specific interpreters to translate the output toolpath into NC codes for a variety of additive manufacturing hardware.In conjunction with these developments, it will also be necessary to implement the implicit slicer in a computationally efficient framework. For this purpose, a C++ based software package is already under development. This implementation will incorporate improvements such as improved toolpath sequencing in order to reduce the time required for physical manufacturing and compensate for time history effects on functional performance induced by the particular toolpath. Analysis of the computational complexity of the final selection of algorithms will be essential, as will rigorous performance benchmarks against other slicing methodologies.It should also be noted that the uniaxial tests used for demonstration purposes in the present work are not adequate for fully characterizing the response of additively manufactured objects under realistic real-world loading conditions. Because of the non-homogeneous, anisotropic, and nonlinear behaviors of additively manufactured objects, multiaxial testing of many samples will be required. Towards this end, we will adopt the data-driven characterization strategy of  [66,67], which employs and automated six degree-of-freedom test apparatus.The present work illustrates many of the advantages of adopting an implicit slicing methodology. Augmented by the future work outlined above, this methodology may significantly improve the state of the additive manufacturing digital thread. By re-introducing design intent into the toolpath generation process, it is likely that the implicit methodology will allow the additive manufacture of complex components that are better suited to their intended purpose. Additionally, it may be possible to achieve important improvements in production time, raw material, and energy consumption that will in turn reduce the cost of additively manufactured structures and components.