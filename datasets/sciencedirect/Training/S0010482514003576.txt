@&#MAIN-TITLE@&#
Discontinuous Galerkin finite element method for solving population density functions of cortical pyramidal and thalamic neuronal populations

@&#HIGHLIGHTS@&#
Discontinuous Galerkin FEM resolves stability problem in simulation of neural systems.Discontinuous Galerkin FEM excels Monte Carlo simulation for LIF and LIFB models.Discontinuous Galerkin FEM can simulate EEG which involves three populations.

@&#KEYPHRASES@&#
Population density method,Hyperbolic partial differential equation,Discontinuous Galerkin finite element method,Brain activity,Total-variation-diminishing,

@&#ABSTRACT@&#
Compared with the Monte Carlo method, the population density method is efficient for modeling collective dynamics of neuronal populations in human brain. In this method, a population density function describes the probabilistic distribution of states of all neurons in the population and it is governed by a hyperbolic partial differential equation. In the past, the problem was mainly solved by using the finite difference method. In a previous study, a continuous Galerkin finite element method was found better than the finite difference method for solving the hyperbolic partial differential equation; however, the population density function often has discontinuity and both methods suffer from a numerical stability problem. The goal of this study is to improve the numerical stability of the solution using discontinuous Galerkin finite element method. To test the performance of the new approach, interaction of a population of cortical pyramidal neurons and a population of thalamic neurons was simulated. The numerical results showed good agreement between results of discontinuous Galerkin finite element and Monte Carlo methods. The convergence and accuracy of the solutions are excellent. The numerical stability problem could be resolved using the discontinuous Galerkin finite element method which has total-variation-diminishing property. The efficient approach will be employed to simulate the electroencephalogram or dynamics of thalamocortical network which involves three populations, namely, thalamic reticular neurons, thalamocortical neurons and cortical pyramidal neurons.

@&#INTRODUCTION@&#
To simulate brain activities, it is necessary to develop an efficient and effective modeling method because information in the brain is processed in large-scale neuronal networks across many functionally specialized areas, each of which has a myriad number of interconnected neurons [1]. The population density method is developed for this purpose, in which neurons in a large scale neuronal network are grouped into neuronal populations based on the types of neurons’ dynamics, and each neuronal population has its own population density function (PDF) representing the distribution of states of all neurons in the population [2,3]. Such a method can serve as a computational tool to efficiently evaluate the population dynamics of a neuronal population consisted of homogeneous yet slightly different neurons by using statistical information of their state variables. In addition, it can also serve as a theoretical method to explore the dynamics of a large-scale neuronal system consisted of heterogeneous neurons through the interaction arising from sub-populations consisted of homogeneous neurons [4,5]. In contrast to neural mass models [6–8], the relationship between the brain activity and the specific dynamics of neurons can be built based on the model of individual neurons in PDF. It is believed that the population density method is applicable for investigating generation mechanisms of many brain activities. To trace the population dynamics, the hyperbolic partial differential equation (PDE), that is, the governing equation of the PDF, has to be solved to obtain the time evolution of the PDF.Up to now, two common types of neuronal models are used in the population density approach to model large-scale neuronal networks in the brain. One of them is the leaky integrate-and-fire (LIF) model that can simulate the tonic firing mode of cortical pyramidal neurons [9]. By neglecting the induced dynamics of presynaptic inputs, the governing equation of LIF model can be simplified to a one-dimensional hyperbolic PDE [4,5]. The other is the leaky integrate-and-fire-or-burst (LIFB) model that can simulate the transition between the tonic and the burst firing modes manifested by thalamic neurons [10]. Similarly, by neglecting the induced dynamics of presynaptic inputs, the governing equation of LIFB model can be simplified to a two-dimensional hyperbolic PDE [11]. Unfortunately, even for the one-dimensional governing equation, solutions of the above models are intractable by analytic methods due to its high nonlinearity.Numerical schemes are usually used to solve the governing equation, especially the finite difference methods [4,5] or finite volume methods [11]. The finite element method (FEM) had never been utilized until we proposed the continuous Galerkin FEM in our previous work [12]. It was concluded that the continuous Galerkin FEM has higher computational efficiency and lower discretization error when compared with the finite difference method. In addition, the geometrical flexibility of FEM is critical to deal with sophisticated neuron models that usually have complicated geometries within the computational domain. However, it lacks the property of so-called total variation diminishing so that it becomes unstable when the solution of the governing equation exhibits sharp variation within a small spatial interval or even discontinuity [13,14]. For the LIFB model, the solution could be discontinuous along a certain dimension if one state variable lost its dynamical behavior. As a result, an alternative numerical scheme must include the total-variation-diminishing property.In this work, the discontinuous Galerkin FEM is used because it possesses the total-variation-diminishing property and, meanwhile, reserves the advantages of the continuous Galerkin FEM [15]. In the discontinuous Galerkin FEM, the continuity of solution values at inter-boundaries between meshes is released, and the total-variation-diminishing property is maintained by using a slope limiter. Additionally, the discontinuous Galerkin FEM allows parallel computing to increase computational efficiency [16]. So, in terms of the characteristics of lower discretization error, higher geometry flexibility, superior computational efficiency and parallel computing, it is believed that the discontinuous Galerkin FEM is a promising approach in solving the governing equation of the PDF. The goal of this work is to formulate the discontinuous Galerkin FEM and apply it to solve two populations in a neuronal network, namely, the cortical pyramidal and the thalamic neuron populations. The results will be compared with those obtained from the Monte Carlo method. Convergence and accuracy of solution and numerical stability of the discontinuous Galerkin FEM will be discussed.The structure of this article is as follows: In section 2, two governing equations derived from the LIF and LIFB models are introduced. In section 3, the implemented algorithms of the discontinuous Galerkin FEM are presented for solving governing equations of LIF and LIFB models. In section 4, dynamical behaviors of neuronal populations are simulated to demonstrate the convergence and accuracy of the discontinuous Galerkin FEM. Discussion and conclusions are, respectively, presented in section 5 and section 6.The first step of simulating neuronal population dynamics by means of the population density method is to derive the neuronal model that describes how action potentials (spikes) are generated in a neuron. After deriving the neuronal models, the governing equations based on these neuronal models are described, and the implemented algorithm of the discontinuous Galerkin FEM will be presented in the next section.The LIF model is formulated by[17](1)CV̇=−gl(V−El)+S(t)ifV≥Vth,thenV→Vrwhere C is the capacitance of the neuronal membrane; V(t) is the membrane potential of neurons; Eland glare respectively the constant of reversal potential and conductance of the leakage channel. In this model, the time variation of V is affected by the leakage current (the first term on the right side) and the current S(t), that is, so-called post-synaptic current, induced by the presynaptic spike train. V is immediately reset to the resetting voltage, Vr, if it reaches the threshold voltage, Vth, and a spike is marked at that time moment.Fig. 1 illustrates the idea of the population density method using the LIF model as an example. The basic concept of the population density method comes from statistical mechanics [4], especially that for describing macroscopic states of an ensemble of N-particles [18]. Imagine that the alteration in the states of neurons within an individual neuronal population corresponds to the movement of particles in a space. Thus PDF, ρ(x, t), represents the probability density of neurons׳ clustering at a given state point, x, within an enclosed state space and at a specific time moment, t. Then, the macroscopic states of a neuronal population can be obtained using ensemble averages if its PDF is known and its dynamics is the time variation of those macroscopic states. The PDF must be known with respect to time so it is necessary to solve the governing equation that describes time variation of the PDF and it is derived from conservation of total number of neurons within an individual neuronal population.For a population of cortical pyramidal neurons, the governing equation of the PDF,ρ(V,t), based on the LIF model and ignorance of the dynamics of S(t) is given by [4](2)∂∂tρ(V,t)=−∂∂V[−1τ(V−El)ρ]−σ(t)ρ(V,t)+σ(t)ρ(V−ε,t)+r(t)δ(V−Vr),where time constantτ=C/gl, σ(t) (unit: pulse per second, pps) is the time-dependent mean rate of presynaptic spike train to each neuron and ε is the voltage change due to a presynaptic spike. The mean firing rate, r(t), of the neuronal population is defined as the number of neurons whose membrane potentials cross the threshold voltage per unit time, that is,(3)r(t)=σ(t)∫Vth−εVthρ(v,t)dv.The LIFB model is given by [10](4)CV̇=−gl(V−El)−gT(V−ET)+S(t)ifV≥Vth,thenV→VrAs compared to the LIF model, the Ca+2 current (the second term on the right side) across the membrane via the Ca+2 ion channel determines the transition to the burst firing mode from the tonic mode. The gTis the conductance of Ca+2 ion channel and ETis its reversal potential. Because the open state of the Ca+2 ion channel is controlled by two voltage-dependent gates, namely activation gate and inactivation gate therefore gTis not a constant and it depends on the open state of the Ca+2 ion channel. Hence, it is expressed by(5)gT(t)=g^T⋅m∞⋅h,whereg^Tis the maximal conductance of the Ca+2 ion channel, and m∞ and h were the open degree of activation and inactivation gates, given by(6)m∞=H(V−Vh)={1ifV≥Vh0ifV<Vh,(7)dhdt=(1−h)τh+H(Vh−V)−hτh−H(V−Vh)H(⋅):HeavisidestepfunctionThe activation gate either fully opens or fully closes, depending on whether V exceeds Vh. The inactivation gate has first order dynamics, expressed by Eq. (7). When V is hyperpolarized (V<Vh), h relaxes to one with time constant,τh+. It relaxes to zero with time constant,τh−, when V is depolarized (V>Vh). Note that h remains constant while V is reset to Vrafter the firing spikes.Similarly, for the LIFB model, the two-dimensional governing equation of the PDF,ρ(V,h,t), can be formulated as [11]:(8)∂∂tρ(V,h,t)=−(∂∂VFV+∂∂hFh)−σ(t)ρ(V,h,t)+σ(t)ρ(V−ε,h,t)+r(t)δ(V−Vr),(9)FV=[−glC(V−El)−gTC(V−ET)]ρ(V,h,t),(10)Fh=[(1−h)τh+H(Vh−V)−hτh−H(V−Vh)]ρ(V,h,t),(11)r(t)=∫01[(σ(t)∫Vth−εVthρ(v′,h,t)dv′)+(−glC(Vth−El)−gTC(Vth−ET))ρ(Vth,h,t)]dh.The discontinuous Galerkin FEM is in fact a modified method of the continuous Galerkin FEM. Thus, it follows the same procedures as the FEM to obtain an approximation of the PDF [19,20]. The procedures include (1) constructing uniform meshes in whole computational domain, (2) creating FE approximation of the solution with linear shape functions for LIF model or with bilinear quadrilateral shape functions for LIFB model, (3) deriving element equations by Galerkin method [21] and (4) solving element equations mesh by mesh by using second-order total variation diminishing Runge-Kutta time marching algorithm [22]. The details about above procedures can be found elsewhere [15,19,20,23,24]. In this section we are going to highlight the difference between the discontinuous Galerkin FEM and the continuous Galerkin FEM.Due to the release of continuity of solution values at inter-boundaries between meshes, the element equations can be solved mesh by mesh in the discontinuous Galerkin FEM. As a result, numerical fluxes across inter-boundaries have to be determined, which is not required in continuous Galerkin FEM. Through Galerkin method[21], the following element equation for the mesh (i, j) can be obtained(12)Mρ˜̇i,j+Kρ˜i,j=f˜+Q[σ(t),ρ˜i,j,ρ˜i−nε,j,r(t)]⇒ρ˜̇i,j=M−1{−Kρ˜i,j+f˜+Q[σ(t),ρ˜i,j,ρ˜i−nε,j,r(t)]}=L(ρ˜i,j,ρ˜i−nε,j,σ(t),t)whereρ˜i,jandρ˜i−nε,jare nodal vectors consisting of nodal values of the PDF associated with node (i, j) and node (i-nε, j), respectively; i stands for the ith mesh of the meshing sequence in V-direction and j stands for that in h-direction; nεis the number of meshes within the voltage jump ε along V-direction; M is the mass matrix and K is the stiffness matrix term in the FEM;Qis the collective term related to presynaptic and resetting input sources;f˜is defined as a flux vector consisting of all numerical fluxes across boundaries of the mesh (i, j). By the upwind scheme [25], the numerical flux is set to the stream probabilistic flux from the upwind direction.The major difference between the discontinuous Galerkin FEM and continuous Galerkin FEM is the involvement of the total variation diminishing property. In the discontinuous Galerkin FEM, it is achieved by combining a second-order total variation diminishing Runge-Kutta time marching algorithm with a slope limiter [19,22]. So, the time marching algorithm is modified as follows:I.Settingu˜i(0)=ρ˜i(tn)for LIF model oru˜ij(0)=ρ˜i,j(tn)for LIFB model at current time tn.Calculating the intermediate values:u˜i(1)=ΛΠ(u˜i(0)+Δt⋅L(u˜i(0),u˜i−nε(0),σ(t),t))u˜i(2)=ΛΠ(u˜i(0)+12Δt⋅L(u˜i(0),u˜i−nε(0),σ(t),t)+12Δt⋅L(u˜i(1),u˜i−nε(1),σ(t+Δt),t+Δt)).oru˜ij(1)=ΛΠ(u˜ij(0)+Δt⋅L(u˜ij(0),u˜(i−nε)j(0),σ(t),t))u˜ij(2)=ΛΠ(u˜ij(0)+12Δt⋅L(u˜ij(0),u˜(i−nε)j(0),σ(t),t)+12Δt⋅L(u˜ij(1),u˜(i−nε)j(1),σ(t+Δt),t+Δt)).Settingρ˜i(tn+1)=u˜i(2)orρ˜ij(tn+1)=u˜ij(2)at the next time step tn+1=tn+Δt,where Δt is defined as the time step and ΛΠ stands for the slope limit. For LIF model, the slope limiteru˜i=ΛΠ(y˜i)is defined as:First, limiting the slope along V-direction.(15)z˜ij=[yij2−yij32+y¯ij+m(yij2+yij32−y¯ij,y¯ij−y¯(i−1)j,y¯(i+1)j−y¯ij)yij3−yij22+y¯ij+m(yij2+yij32−y¯ij,y¯ij−y¯(i−1)j,y¯(i+1)j−y¯ij)yij1−yij42+y¯ij−m(y¯ij−yij1+yij42,y¯ij−y¯(i−1)j,y¯(i+1)j−y¯ij)yij4−yij12+y¯ij−m(y¯ij−yij1+yij42,y¯ij−y¯(i−1)j,y¯(i+1)j−y¯ij)]Second, limiting the slope along h-direction(16)u˜ij=[zij3−zij42+z¯ij+m(zij3+zij42−z¯ij,z¯ij−z¯i(j−1),z¯i(j+1)−z¯ij)zij4−zij32+z¯ij+m(zij3+zij42−z¯ij,z¯ij−z¯i(j−1),z¯i(j+1)−z¯ij)zij1−zij22+z¯ij−m(z¯ij−zij1+zij22,z¯ij−z¯i(j−1),z¯i(j+1)−z¯ij)zij2−zij12+z¯ij−m(z¯ij−zij1+zij22,z¯ij−z¯i(j−1),z¯i(j+1)−z¯ij)]The superscript of the nodal vectors refers to the sequence of the nodal values in counterclockwise.So far, two primary differences between the discontinuous Galerkin FEM and the continuous Galerkin FEM have been described. Then, the performances of the discontinuous Galerkin FEM and the continuous Galerkin FEM will be compared in the following section.Simulations of neuronal population dynamics based on LIF and LIFB models are employed to compare performances of the numerical schemes presented in the previous section. The Monte Carlo simulation has been considered as the golden standard for the comparison of accuracy. Its algorithm is given in Appendix. The model parameters in the simulation tasks are listed inTable 1. The convergence and grid convergence of solutions obtained by discontinuous Galerkin FEM to those of Monte Carlo simulations were examined using the LIF model. Performances of continuous and discontinuous Galerkin FEMs were compared for three cases of simulations using the LIFB model. Three computer codes written in Matlab and run on a personal computer (Windows 7 64-bit and CPU clock rate 3.4GHz) were developed according to the algorithms presented in previous section and Appendix respectively.The scale of a neuronal population whose dynamics could be successfully simulated by population density method was determined. As shown inFig. 2, increasing the total number of neurons in a single neuronal population (LIF model) enabled the convergence of the population density functions obtained by the Monte Carlo simulation and the population density method. The results matched considerably with each other when the total number of neurons reaches 10000. Such a scale of neuronal population was as large as a macro cortex column that has been considered as a basic functional unit of the cortex. In this case, the population density function was accurately solved by the discontinuous Galerkin FEM as suggested by the convergence of the solution.The quality of the solution obtained by discontinuous Galerkin FEM could be evaluated by the grid convergence test, in which as element size went infinitesimal, the approximated solution should converge to a constant value. As shown inFig. 3, the resultant steady-state mean firing rate of the LIF model computed by using the discontinuous Galerkin FEM approached a constant value, which revealed the convergence of the method. The steady-state mean firing rate converged to 14.92pps which was slightly greater than the value obtained by using the Monte Carlo simulation by 0.33pps. Such a difference might come from the uncertainty of the Monte Carlo simulation. Nevertheless, the value was within the 95% confidence interval of the steady-state mean firing rate, estimated by the Monte Carlo method.The order of the convergence rate of the discontinuous Galerkin FEM is still unknown although its convergence has been proved by the grid convergence test. Evaluating the convergence rate is beyond the scope of this article. However, the solution can stay in the 95% confidence interval even when the number of elements was as low as 30. It implies high convergence rate of the discontinuous Galerkin FEM. Other studies have proved a second order of convergence rate of the discontinuous Galerkin FEM with linear shape functions [26,27].Three simulated cases for the LIF model are presented for comparing performances of the discontinuous and continuous Galerkin FEMs. The former has the total variation diminishing property while the latter does not. Two cases that exhibit discontinuity in exact solutions are simulated. The first one is an extreme case in which the steady-state population density function forms a delta function at the equilibrium point of the neuronal model due to the absence of presynaptic input. As shown inFig. 4(a), the steady-state population density function solved by the discontinuous Galerkin FEM yields a pulse function at V=− 65mV ifσ(t)=0pps. The pulse function approximates the delta function if smaller mesh is utilized. However, solution obtained using the continuous Galerkin FEM is unstable, oscillatory and even with negative values, which is mainly due to discontinuity of the solution and the lack of total-variation-diminishing. The solution is erroneous because the PDF should be non-negative. Similar results can be found in the second case ofσ(t)=800pps. As shown in Fig. 4(b), several sharp peaks emerge from the population density function below V=−60mV (also see Fig. 2) and the solution obtained by the continuous Galerkin FEM is oscillatory and with negative values. On the contrary, the solution from the discontinuous Galerkin FEM stays stable, non-oscillatory and positive. The last is the case ofσ(t)=80pps, in which the steady-state population density function appears smooth so that solutions of both methods are not distinguishable (Fig. 4(c)). From the simulations one may find that the total-variation-diminishing property is necessary for obtaining solutions that are free of computational errors, especially when the exact solution exhibits discontinuity like the delta function.Although adding randomness in the amplitude of ε can greatly smooth out the population density function for some cases, such as the above case ofσ(t)=800[5], a delta-like PDF still cannot be avoided because the relaxation or idling state in the brain is always reflected by low, even zero, inputs to neuronal populations. Additionally, even though the input is very high, a delta-like population density function will appear for multi-dimensional neuronal models due to the lack of dynamical behaviors in some state variables. In the following, we will show this by the LIFB model.The first case is pure-tonic dynamics of the LIFB model, in which the Ca+2 current is never activated. The response of the Ca+2 current to the input is given by(17)I¯T(t)=∫VhVth∫01gT(V−ET)ρ(V,h,t)dhdVwhereI¯Tis defined as the mean current of the Ca+2 current entering into a neuron. The simulation results are shown inFig. 5-a, -b, -c. In this case, a step input changes from 200pps to 600pps at t=0.5s for a duration of 0.2s (see Fig. 5-a). The mean currentI¯Tremains zero due to the persistent closure of the inactivation gate (h=0, see Fig. 5-b). As shown in Fig. 5-c, the initial input,σ(t)=200pps, is not large enough to fire action potentials (r (t)<0.01pps) until the input is increased to 600pps after that the mean firing rate rises rapidly and converges to 13.4pps in 0.08s preceded by a reaction period of 0.02s. The corresponding population density functions at t =0.5 and t=0.6s are depicted inFigs. 6-a and 6-c. Both instantaneous population density functions reveal that all neurons are highly concentrated at h=0, which is caused by the fact that all neurons are strongly depolarized such that the inactivation gate h is never de-inactivated (V>−65mV). As shown in Fig. 6-a, neurons stimulated by the input of 200pps are located within the range (−60mV, −45mV) which is far away from threshold voltage (Vth=−35mV). On the contrary, when the input rises to 600pps, neurons are located within the interval between the resetting voltage (Vr=−50mV) and threshold voltage (see Fig. 6-c). It is noted that a delta-like population density function appears along the h-direction because the state variable h loses its dynamics during pure-tonic dynamics, which has made continuous Galerkin FEM fail.The second case of the LIFB model is the burst-transient dynamics, in which the mean current ITexhibits transient behavior. In this case, the step input changes from 50pps to 665pps at t=0.5s for the same duration of 0.2s (see Fig. 5-d). The transition in input causes the de-inactivation of the gate h such that the mean currentI¯Tincreases to 3.34μA/cm2 in 0.01s at the initial stage after transition, and then, starts to decay due to the closure of the inactivation gate h in the depolarized level of membrane potential (see Fig. 5-e). After t=0.6s,I¯Tbecomes zero. The mean firing rate reveals sharper overshoot, up to 102.1pps, after the input increases to 665pps, and then decreases to 17.5pps. The large overshoot is due to the activation of the IT current.Fig. 7-a shows the corresponding population density function at t=0.5s. At the time a large fraction of neurons are in hyperpolarized zone (V<Vh, h>0), reflecting that the inactivation gate is de-inactivated under this situation and the IT current is activated after the transition to 665pps in input. The activation of the IT current strongly increases the firing rate, which is the so-called burst response. The ITcurrent is inactivated rapidly and is completely diminished after 0.6s. As shown in Fig. 7(c), at t=0.6s, neurons are highly concentrated at h=0 due to the closure of the inactivation gate in all neurons such that the elicited mean firing rate in the time interval t∈[0.6 0.7] second belongs to tonic response. The root mean squared error of the population density functions between the population density method and the Monte Carlo simulation for both cases are at the order of 10−2, which is acceptable (Table 2).

@&#CONCLUSIONS@&#
An algorithm of discontinuous Galerkin FEM was derived and employed to solve the population density functions of LIF and LIFB models. Solutions obtained by discontinuous Galerkin FEM have higher accuracy when compared with those obtained by the Monte Carlo simulation. By using the total variation diminishing algorithm and slope limiter in the discontinuous Galerkin FEM, the oscillatory and negative PDF obtained by the continuous Galerkin FEM in some cases can be resolved. The results revealed that the discontinuous Galerkin FEM is better than continuous Galerkin FEM for simulating dynamics of large-scale neuronal networks in the brain. The efficient approach will be employed to simulate the electroencephalogram (EEG), that is, dynamics of thalamocortical network which involves three populations, namely, thalamic reticular neurons, thalamocortical neurons and cortical pyramidal neurons.None declared.