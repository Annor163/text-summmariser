@&#MAIN-TITLE@&#
An interior penalty discontinuous Galerkin finite element method for quasilinear parabolic problems

@&#HIGHLIGHTS@&#
In this work we present an Interior Penalty Discontinuous Galerkin finite element method for solving quasilinear parabolic problems.In these problems where the diffusion coefficient has a p-exponent form.The natural formulation of the problem is in LpspaceFor the IPDG method, stability bounds and a-priori error estimates are shown.Two low computational cost Picard block-iterative methods are proposed.

@&#KEYPHRASES@&#
Quasilinear parabolic problems,Perturbed parabolic p-Laplace problem,Interior penalty discontinuous Galerkin method,Stability estimates,A priori error estimates,

@&#ABSTRACT@&#
In this paper, an Interior Penalty Discontinuous Galerkin (IPDG) finite element method is analyzed for approximating quasilinear parabolic equations. The equations can be characterized as perturbed parabolic p-Laplacian equations. The fully discrete scheme is obtained by applying s-stage Diagonally Implicit Runge–Kutta (s-DIRK) methods for the time integration. The nonlinear systems of the algebraic equations appearing in s-DIRK cycles are solved by developing two low storage Picard iterative processes. A stability bound is shown for the semi-discrete IPDG solution in the broken‖.‖DG,p-norm. Continuous in time a priori error estimates are proved in case ofp>2, when linear approximation space is used. A numerical test is performed in order to compare the performance of the two Picard iterative processes. Also, the results presented in the theoretical analysis are confirmed by numerical examples.

@&#INTRODUCTION@&#
In this paper, an Interior Penalty Discontinuous Galerkin (IPDG) method is studied for approximating solutions of quasilinear problems in Lpsetting, which can be recognized as examples of the perturbed p-Laplace problem. The problems are described by nonlinear diffusion equations, where the diffusion coefficient has a standard p-exponent form, that is(μ+|∇u|)p−2,μ>0, with most interesting case here μ=1 [1]. Very often, these constitute the mathematical model in many practical applications, as in aerodynamic, non-Newtonian flows, plasticity and glaciology, see e.g. [2,3].Over the last two decades, there has been an increasing interest on devising discontinuous Galerkin (DG) methods for the numerical solution of elliptic and parabolic problems. This interest comes from the advantages of the local approximation spaces without continuity requirements that DG methods offer. Finite element methods defined on discontinuous spaces with interior penalties for linear elliptic problems were first analyzed in [4,5]. These methods, for the construction of the penalty terms on the interfaces, use similar techniques as Nitsche׳s treatment of introducing penalty terms for imposing Dirichlet boundary conditions. These approaches are generalized by symmetric and non-symmetric IPDG methods, see [6–8], for a comprehensive analysis of IPDG methods for linear elliptic problems. Recently, DG methods have been proposed and analyzed for applications to nonlinear elliptic problems formulated inW1,2(Ω). For example, in [9], DG methods have been analyzed for second order elliptic and hyperbolic systems and in [10], DG symmetric/non-symmetric methods have been analyzed for non-Fickian diffusion problems. In [11], an incomplete IPDG is introduced for a class of second order monotone nonlinear elliptic problems and a priori error estimates are given under minimal regularity assumptions on the exact solution. We also refer [12], where an hp-DG method has been studied for monotone quasilinear elliptic problems. Using theory of monotone operators, the authors showed the uniqueness of the DG solution and derivea a priori error estimate in a mesh-dependent energy norm. In the literature, IPDG methods have been proposed for solving parabolic type problems, based on the theoretical results for steady problems. We refer, but not limited to, the following. In [13], the first analysis of a semi-discrete IPDG method was presented for linear problems and in [14], optimal error estimates for a semi-discrete symmetric IPDG method have obtained for nonlinear parabolic problems. We also mention [15,16], where error estimates are discussed for fully discrete IPDG methods, and furthermore, we refer [17] where three fully discrete IPDG methods are considered and analyzed.In contrast to the analysis of IPDG methods for elliptic problems with natural formulation inW1,2(Ω), there are no contributions that are concerned with nonlinear problems formulated inW1,p≠2(Ω), like the problem with p-exponent diffusion coefficient that is considered here. Maybe as one exception, we can refer the work presented in [18], where IPDG approximate solutions are studied for the p-Laplace equation(μ=0). It is the purpose of this paper to make a first step in this direction.We point out that classical (continuous) finite element methods, for more general p-form problems, the so-called(p,δ)-structureproblems, have been analyzed in the literature, see e.g. [19,20]. For parabolic(p,δ)-structureproblems, we refer [21], where optimal convergence rates have been shown, in case of using linear finite element in space and implicit Euler scheme in time.The IPDG scheme proposed here, see (3.8), has the same form as the IPDG scheme in [12], but here the numerical flux is appropriately re-formulated in order to be compatible with the p-nature of the problem. As a first task, stability bounds are proved in‖.‖DG,p-norm, for the case of μ=0. Then, using the interpolation estimates presented in [20], a priori error estimates are given for the semi-discrete problem forp>2, assuming conventional regularity for the exact solution. The IPDG spatial discretization generates a nonlinear ODE system with respect to the degrees of freedom. We discretize in time this system by s-stage Diagonally Implicit Runge–Kutta (s-DIRK) methods. Every cycle of the Runge–Kutta method includes the solution of nonlinear algebraic systems. Two low computational cost Picard block-iterative methods are proposed for solving the nonlinear systems [22]. The Picard iterative methods are constructed based on the local (per element) approximation features of the IPDG method. The two different iterative methods are expected to have the same order of convergence (first order), but different performance speed, since the second one uses the latest available solution (and not the solution of the previous iteration) for updating the nonlinear parts of the system.The outline of the paper is as follows. It begins by presenting the model problem. Then inequalities for vectorsa,b∈R2are shown, which are used later to derive the continuity–monotonicity properties of the scheme. In Section 3, the IPDG method is described. Section 4 includes the formulation of the s-DIRK method for the time discretization and the description of the two Picard methods. In Section 5, a stability bound for the discrete solution of the p-Laplace problem is presented. A priori error estimates forp>2are shown in Section 6. The paper closes with the numerical tests in Section 7.Let Ω be a bounded domain inR2, with smooth boundaryΓD≔∂Ω. We consider the following scalar initial boundary value problem:(2.1a)ut−divA(∇u)=finΩ×(0,T](2.1b)u0(x)=u(x,0)inΩ(2.1c)u=uDonΓD×(0,T],where(0,T]is the time interval,f:Ω×(0,T]→R,u0:Ω→R,uD:ΓD×(0,T]→Rare given smooth functions. The operatorA(∇u):R2→R2has the formA(∇u)=(μ+|∇u|)p−2∇u,p>1,μ≥0,where|·|:R2→Ris the Euclidean measure anda(∇u)=(μ+|∇u|)p−2is the diffusion coefficient. The nonlinear nature of the problem (2.1) comes by the appearance of|∇u|in the diffusive coefficient and this poses numerical challenges. The IPDG methods presented so far for nonlinear elliptic equations are referred to problems where the natural formulation is given inW1,2(Ω), and eithera(·)is uniformly bounded, e.g. [23], ora(·)satisfies a monotone condition, e.g. [11,12]. One cannot apply the same methodology for the problem (2.1) which is formulated inW1,p(Ω). This fact motivates the need of further analysis and of developing numerical fluxes compatible with the p-exponent form of the diffusion coefficient. The goal of this paper is to make a first step in this direction.Assuming thatf∈C([0,T];L2(Ω)),u0∈W1,2(Ω)∩W1,p(Ω), we call u weak solution of (2.1), ifu∈L∞(0,T;W1,p(Ω))∩W1,2(0,T;W1,2(Ω)),u|ΓD≔uDsatisfies the following formulation for anyv∈W01,p(Ω):(2.2)∀t>0,∫Ωutvdx+∫ΩA(∇u)·∇vdx=∫Ωfvdx,whereLp(0,T;V)={v:(0,T)→V:∫0T‖v(t)‖Vpdt<∞}.The existence–uniqueness of the solution of (2.2) (even with other assumptions on the data) are ensured by means of the monotone operators theory, see e.g. [1,24]. We refer [21,25], for regularity assumptions on the problem data for obtaining optimal rate of convergence for finite element solutions. For the analysis here, we assume the following conventional assumptions:(2.3)u∈W1,2(0,T;W1,2(Ω))∩Lp(0,T;Ws≥2,p(Ω)).Through the paperCi,i=1,…, will be generic constants with different values independent of crucial quantities. The explicit dependence on the problem data will be mentioned.Working further on the results of Chapter I in [24,26], we prove special algebraic inequalities that are going to be used later. In the proofs, we use the functionF:R2→R2(2.4)F(a)=(μ+|a|)(p−2)/2a.We introduce the formula(2.5)A(b)−A(a)=∫01ddt(μ+|a+t(b−a)|)p−2(a+t(b−a))dt,and by an easy computation on the right-hand side of (2.5) we get(2.6)A(b)−A(a)=∫01(μ+|a+t(b−a)|)p−2(b−a)dt+(p−2)∫01(μ+|a+t(b−a)|)p−312|a+t(b−a)|−12(a+t(b−a),b−a)(a+t(b−a))dt.Multiplying (2.6) byb−a, we have(2.7)(A(b)−A(a),b−a)=|b−a|2∫01(μ+|a+t(b−a)|)p−2dt+(p−2)∫01(μ+|a+t(b−a)|)p−3|a+t(b−a)|−1(a+t(b−a),b−a)2dt.The last term on the right-hand side of (2.7) is positive and forp≥2we get(2.8a)(A(b)−A(a),b−a)≥|b−a|2∫01(μ+|a+t(b−a)|)p−2dtby applying Cauchy–Schwarz inequalities, we further get(2.8b)|A(b)−A(a)|≥|b−a|∫01(μ+|a+t(b−a)|)p−2dt.Also, applying Cauchy–Schwarz inequality on the last term on the right-hand side of (2.6), we have(2.9)∫01(μ+|a+t(b−a)|)p−3|a+t(b−a)|−1|a+t(b−a)|2|b−a|≤|b−a|∫01(μ+|a+t(b−a)|)p−2dt.Therefore, combining (2.9) and (2.6), we get(2.10)|A(b)−A(a)|≤(p−1)|b−a|∫01(μ+|a+t(b−a)|)p−2dt.Recalling the forms of A and F and setting in (2.10)p≔(p+2)/2we obtain(2.11a)|(μ+|b|)(p−2)/2b−(μ+|a|)(p−2)/2a|2≤(p2)2|b−a|2(∫01(μ+|a+t(b−a)|)(p−2)/2dt)2and thus(2.11b)|F(b)−F(a)|2≤(p2)2|b−a|2∫01(μ+|a+t(b−a)|)p−2dt.By (2.8a) and (2.8b), we have(2.12a)|F(b)−F(a)|2≤C(p)(A(b)−A(a),b−a),(2.12b)|F(b)−F(a)|2≤|A(b)−A(a)|2.Keepingp>2and using that(μ+|a+t(b−a)|)2(p−2)/2≤2max{(μ+|a|)(p−2)/2,(μ+|b|)(p−2)/2}(μ+|a+t(b−a)|)(p−2)/2, we derive by (2.10) that(2.13)|A(b)−A(a)|≤(p−1)|b−a|∫01(μ+|a+t(b−a)|)2(p−2)/2dt≤C(p)M(|a|,|b|)∫01|b−a|(μ+|a+t(b−a)|)(p−2)/2dt≤C(p)M(|a|,|b|)|F(b)−F(a)|,whereM(|a|,|b|)=2max{(μ+|a|)(p−2)/2,(μ+|b|)(p−2)/2}.LetTh={Ei}i=1NEbe a regular subdivision of Ω in triangular elements (without hanging nodes) with diameterhEi, where for simplicity we assumeh≔minEi∈ThhEi=maxEi∈ThhEi. We denote byE=EI∪EDall the edges, whereEIis the set of the interior edges of Th, that isEI={e:e=∂Ein∩∂Eout,forEin,Eout∈Th}andEDis the set of the Dirichlet boundary edgesED={e:e=∂Ein∩ΓD,Ein,∈Th}. For each ofe∈EIwe associate a unit normal vectorne. Fore∈ED,neis considered to be the outward normal to∂Ω.Define the following broken Sobolev spaces fors≥2,p>1:(3.1)Whs,p(Th)≔{v∈Lp(Ω):v|E∈Ws,p(E),∀E∈Th},and the discontinuous finite element spaceVhk(Th)⊂Whs,p(Th)(3.2)Vhk(Th)≔{v∈Lp(Ω):v|E∈Pk(E),∀E∈Th},wherePk(E)is the space of polynomials of degree less than or equal to k.Lete∈EI, we define the average and the jump ofv∈Whs,p(Th)on e by(3.3){v}=12(v|Ein+v|Eout)and[v]=v|Ein−v|Eout.In case ofe∈ED, we define(3.4){v}=v|Einand[v]=v|Ein,{v}D=12(v|Ein+uD)and[v]D=v|Ein−uD.The spaceWhs,p(Th)is equipped with the broken DG norm [27,18],(3.5)∥ϕ∥DG,pp=∑E∈Th∫E|∇ϕ|pdx+∑e∈EIσh∫e|[ϕ]h|pds+∑e∈EDσh∫e|[ϕ]Dh|pds,wherep>1andσ>0is a parameter.Next, we summarize some results from the literature, which are going to be frequently used.Lemma 3.1Trace inequalitiesForvh∈Vhk(Th), andv∈Whs,p(Th)withp>1there exist positive constantsC1(k,p),C2(k,p),C3(k,p)independent of the mesh size, such that(i)‖h1/pvh‖Lp(ΓD)p≤C1∑E∈Thh‖vh‖Lp(∂E)p,‖vh‖Lp(∂E)p≤C2h−1‖vh‖Lp(E)p,‖v‖L2(∂E)≤C3h−1/2(‖v‖L2(E)+h‖∇v‖L2(E)).The proofs of the above inequalities can be found in [7].□Hölder, Young and Poincare׳s inequalities: let1<p,p′<∞such that1/p+1/p′=1, andϵ>0, then foru∈Lp(Ω)andv∈Lp′(Ω)we have(3.6a)∫Ω|uv|dx≤‖u‖Lp(Ω)‖v‖Lp′(Ω),(3.6b)∫Ω|uv|dx≤ϵp‖u‖Lp(Ω)p+ϵ−p′/pp′‖v‖Lp′(Ω)p′.The generalized Poincare–Friedrichs inequality forv∈Wh1,2(Th), see [28],(3.7)‖v‖L2(Ω)≤C(∑E∈Th‖∇v‖L2(E)2+∑e∈EI∪ED1h‖[v]‖L2(e)2)1/2.For the simplification of the formulas below, we will often use∫Ωudxinstead of∑E∫Eudx. Inspired by the IPDG method in [12], we present the IPDG numerical scheme for discretizing the problem (2.1). We introduce the semi-linear formB:Whs,p(Th)×Whs,p(Th)→R, such that foru,ϕ∈Whs,p(Th)(3.8)B(u,ϕ)=∑E∈T∫Ea(∇u)∇u∇ϕdx−∑e∈EI∫e{a(∇u)∇u·ne}[ϕ]ds−∑e∈EI∫e{a([u]h)∇ϕ·ne}[u]ds+∑e∈EIσh∫ea([u]h)[u][ϕ]ds−∑e∈ED∫ea([u]Dh)∇ϕ·ne[u]Dds+∑e∈EDσh∫ea([u]Dh)[u]Dϕds−∑e∈ED∫ea(∇u)∇u·neϕds,whereσ≔σ(k,p)is a positive parameter and will be specified in the error analysis. Giving an interpretation of the terms that appear in (3.8), we can say that the second integral in (3.8) gives an approximation of the trace of the nonlinear flux and ensures the consistency of the method. The third integral “symmetrizes” the flux form ofB(,̇)̇which is important for the numerical computations. The fourth integral penalizes the jumps on the interfaces and helps for achieving the discrete coercivity ofB(,̇)̇. The rest terms defined on the boundary edges have similar meaning with the formers.We also define the linear form(3.9)L(ϕ)=∑E∈Th∫Efϕdx.The semi-discrete problem is formulated as follows:finduh∈W1,2(0,T;Vhk(Th))such that(3.10)∫Ω∂uh(t)∂tϕdx+B(uh,ϕ)=L(ϕ),∀ϕ∈Vhk(Th)uh(0)=u0,DG,whereu0,DGis the approximation of the initial condition to theVhk(Th)space. Due to the assumed regularity (2.3) for the weak solution u (note that the jumps[u]=0on the interfaces), it is easy to show that u satisfies the variational formulation (3.10),(3.11)∫Ω∂u(t)∂tϕdx+B(u,ϕ)=L(ϕ),∀ϕ∈Vhk(Th).For everyE∈Th, the DG solution of (3.10) is expressed asuh=∑iUiE(t)Pi(x)where UiEare the degrees of freedom andPi(x)∈Pk(E)are the local polynomial basis functions. When this expression is substituted into (3.10), we obtain the following nonlinear ODE problem of finding the vectorU=[…,UiE,…]such that(3.12)MdU(t)dt+B(U(t))=L(t),U(0)=uh(0)where M is the block-diagonal mass matrix and the entries of B and L are specified by (3.8) and (3.9) respectively.We discretize (3.12) with respect to time using s-stage Diagonally Implicit Runge–Kutta (s-DIRK) methods [29]. Hereafter, we denote byΔtthe time step and withUnthe approximation ofU(tn)at timetn=nΔt,n=0,1,2,…. Ifτi,i=1,…,s, are the quadrature points, biare the weights andaij,j=1,…,i, are the entries of Bucher׳s table, the s-DIRK method for the problem (3.12) is given by(4.1a)MΔUn,i=−Δt∑j=1iaij(B(Un,j)−L(tn,j)),i=1(1)s(4.1b)MUn+1=MUn−Δt∑i=1sbi(B(Un,i)−L(tn,i)),wheretn,i=tn+τiΔtandΔUn,i=Un,i−Un. The computation of the intermediate solutionsUn,iin (4.1a) includes the solution of a nonlinear system, which is achieved by a Picard iterative process(4.2)forl=1,…,lM,computeUn,lby(M+aiiΔtBP(Un,l−1))Un,l=R(Un,Uj),setUn,i=Un,lM,whereBP(Un,l−1)is the iterative matrix produced by the Picard linearization andR(Un,Uj)≔MUn−Δt∑j=1i−1aij(B(Un,j)−L(tn,j))is the residual computed using the previous solutions. In the present work, for computational efficiency, two low-storage variations of the Picard iterative process (4.2) are applied, (i) the element-Jacobi (PEJ) and (ii) the element Gauss–Seidel (PEGS). Both iterative approaches are simple applications of the Picard iterative method presented in [22]. In the element-Jacobi scheme, the full Picard matrixBP(Un,l−1)is approximated only by the block diagonal entries, neglecting in that way the contribution of the off-diagonal matrix blocks, which arise through the evaluation of the numerical fluxes on the interfaces. The numerical fluxes are computed using the previous solution vectorUn,l−1and are added to the right-hand residual R. The diagonal blocks ofBP(Un,l−1)represent small dense matrices and are associated with each elementE∈Th. The solution of the resulting PEJ system of (4.2) is performed element by element using LU factorization method. The convergence of the previous proposed PEJ iterative method can be further accelerated by using Gauss–Seidel strategy, giving in this way, the second mentioned PEGS iterative method. PEGS method applies the same splitting of the matrixBP(Un,l−1), but follows a passing over the interfaces by computing the numerical fluxes using the latest available solutionUn,lorUn,l−1where it is possible. In the numerical tests (see Section 7), the iterative process of (4.2) stops when∥Un,l−Un,l−1∥<tolfor a prescribed tolerance tol and then we setUn,i≔Un,l. We point out that PEGS method is expected to have similar convergence rates per Runge–Kutta cycle as the PEJ method, but more improved performance behavior in terms of CPU (in fact the stopping criterion∥Un,l−Un,l−1∥<tolis achieved performing fewer iterations l than the PEJ method). Comparison between the two iterative methods will be shown in Section 7. Other higher-order iterative procedures (e.g. Newton) can be applied for computing the intermediate solutions of (4.1a). In many cases, the computation of the Jacobian matrix ofB(U(t))may increase the CPU time of the whole ODE solver, see examples in [22], and more advanced numerical techniques must be applied, see e.g. [30,31]. Anyway, for the numerical tests presented in Section 7, the previous proposed Picard iterative methods have been found to be appropriate for solving (3.12).In this section, we give a stability estimate (a priori bound) for the DG solution uhin case of μ=0 (p-Laplace problem) and note that Gronwall׳s lemma is not used. Stability bounds can also be obtained working in different directions using the monotonicity properties ofB(,̇)̇, which are presented later. Here, the stability bound uses the‖.‖DG,p-norm(3.5).Lemma 5.1For the form(3.8)with μ=0, there are constantsκ>0,CD>0such that(5.1)B(ϕ,ϕ)≥κ‖ϕ‖DG,pp−CDhp−1‖uD‖ΓDp,∀ϕ∈Vhk(Th).Choosinguh=ϕin (3.8) we obtainB(ϕ,ϕ)=∑E∈Th∫Ea(∇ϕ)∇ϕ·∇ϕdx−∑e∈EI∫e{a(∇ϕ)∇ϕ·ne}[ϕ]ds−∑e∈EI∫e{a([ϕ]h)∇ϕ·ne}[ϕ]ds+∑e∈EIσh∫ea([ϕ]h)[ϕ][ϕ]ds−∑e∈ED∫ea((ϕ−uD)h)∇ϕ·ne(ϕ−uD)ds+∑e∈EDσh∫ea((ϕ−uD)h)(ϕ−uD)ϕds−∑e∈ED∫ea(∇ϕ)∇ϕ·neϕds=T1−T2−T3+T4−T5+T6−T7For the term T1, we haveT1=∑E∈Th∫Ea(∇ϕ)∇ϕ·∇ϕdx=∑E∈Th∫E|∇ϕ|pdx.For the rest of the terms, applying inequalities (3.6), Lemma 3.1 and introducing constantsCi,ε≔Ci(ε,p,p′)withε>0, it follows thatT2≤|∑e∈EI∫e{a(∇ϕ)∇ϕ·ne}[ϕ]ds|≤∑e∈EI∫e{|a(∇ϕ)∇ϕ|}|[ϕ]|ds≤∑e∈EI∫eh1/p′{|∇ϕ|p−1}|[ϕ]|h1/p′ds≤∑e∈EI(∫e(h1/p′{|∇ϕ|p/p′})p′ds)1/p′(∫e(|[ϕ]|h1/p′)pds)1/p≤∑e∈EI(∫eh{|∇ϕ|p/p′}p′ds)1/p′(∫eh|[ϕ]h|p−2|[ϕ]h|2ds)1/p≤∑e∈EI(C2,ε∫eh|∇ϕ|pds+hC2,ε∫eh|[ϕ]h|p−2|[ϕ]h|2ds)≤3C2,ε∑E∈Th∫E|∇ϕ|pdx+hC2,ε∑e∈EI∫e|[ϕ]h|pds.For T3, working in the same way as for T2 we haveT3≤∑e∈EI∫ea([ϕ]h)|[ϕ]h|h1/p′+1/p{|∇ϕ|}ds≤∑e∈EI∫e|[ϕ]h|p/p′h1/p′h1/p{|∇ϕ|}ds≤∑e∈EI(∫e|[ϕ]h|phds)1/p′(∫e(h1/p{|∇ϕ|})pds)1/p≤∑e∈EI(1C3,ε∫e|[ϕ]h|phds+C3,ε∫eh{|∇ϕ|}pds)≤hC3,ε∑e∈EI∫e|[ϕ]h|pds+3C3,ε∑E∈Th∫E|∇ϕ|pds.A straightforward computation for the term T4 givesT4=∑e∈EIhσ∫e|[ϕ]h|pds.For the term T5 applying the same steps as for T3 yieldsT5≤hC5,ε∑e∈ED∫e|ϕ−uD|hpds+3C5,ε∑ED∈Th∫ED|∇ϕ|pds,whereED∈Thare the boundary elements:{E∈Th:∂E∩ΓD≠∅}.Term T6 can be bounded as follows:T6=∑e∈EDσh∫e|ϕ−uD|hp−2(ϕ−uD)h(ϕ−uD+uD)hds=∑e∈EDσh∫e(|ϕ−uD|h)pds−∑e∈EDσh∫e(|ϕ−uD|h)p−2(ϕ−uD)(−uD)h2ds≥∑e∈EDσh∫e(|ϕ−uDh|)pds−∑e∈EDσh∫e(|ϕ−uD|h)p−1(−uD)hds≥(1−C6,ε)∑e∈EDσh∫e|ϕ−uDh|pds−1C6,ε∑e∈EDσh∫e|uD|php−1ds.Similarly, addinguD−uDthe term T7 can be boundedT7≤∑e∈ED∫e|∇ϕ|p−2|∇ϕ||(ϕ−uD+uD)|ds≤C7,ε∑ED∈Th∫ED|∇ϕ|pdx+1C7,ε∑e∈EDσh∫e|ϕ−uDh|p+|uD|php−1ds.In the previous inequalities, choosingCi,εsuch that3C2,ε+3C3,ε+3C5,ε+C7,ε≤12,and choosing the parameter σ to satisfy the following relations:σ>1(1−C6,ε)σ≥1C5,ε+1C7,ε,σ>1C2,ε+1C3,ε,while keepingh≤1, we can findκ>0and CD, in order (5.1) to be true.□Now, choosingϕ=uh(t)in (3.10) and using (5.1), we have(5.2)d2dt‖uh‖L2(Ω)2+κ‖uh(t)‖DG,pp≤|L(uh(t))|+CDhp−1‖uD‖ΓDp.Applying inequality (3.6) on the right-hand side of (5.2), we get(5.3)|L(uh(t))|≤1C8,ε‖f(t)‖Lp′(Ω)p′+C8,ε‖uh(t)‖Lp(Ω)p.Based on the discrete embeddings, see [27],(5.4)‖ϕ‖Lp(Ω)p≤Cp(∑E∫E|∇ϕ|p+∑e∈E1hp−1∫e|[ϕ]|p),∀ϕ∈Vhk(Th),we can easily show that‖uh‖Lp(Ω)p≤Cp∥uh∥DG,pp+(Cp/hp−1)‖uD‖ΓDp.Thus, inserting (5.3) into (5.2) and then applying inequality (5.4), we obtain forC8,ε=κ/2that(5.5)d2dt‖uh‖L2(Ω)2+κ2‖uh‖DG,pp≤1Cκ,p‖f‖Lp′(Ω)p′+CDhp−1‖uD‖ΓDp.Integrating from 0 to t, we get the following stability bound for uh:(5.6)‖uh(t)‖L2(Ω)2+κ∫0t‖uh(τ)‖DG,ppdτ≤‖u0h‖L2(Ω)2+C∫0t‖f(τ)‖Lp′(Ω)p′+CDhp−1‖uD(τ)‖ΓDpdτ.Next, we give an error estimate on how close is the IPDG solution uhof (3.10) to u of (3.11), that is an estimate for(6.1)‖u−uh‖F,DG2=∑E‖F(∇u)−F(∇uh)‖L2(E)2+∑e∈EIσh∥F([u]h)−F([uh]h)∥L2(e)2,+∑e∈EDσh∥F([u]Dh)−F([uh]Dh)∥L2(e)2,where the function F has been defined in (2.4) and the jumps[·]in (3.3) and (3.4). We mention that similar error formula has been used in [32], where a LDG method studied for(p,δ)-structureproblems. We consider the case where the solution u has the regularity (2.3),uh∈Vh1(Th)andIu∈Vh1(Th)is the Scott–Zhang interpolant of u[33]. For problem (2.1), we suppose thatuD∈P1(ED)and the parameter μ is such that (for example μ=1)(6.2)∫01(μ+|a+s(b−a)|)p−2ds≥1,where in (6.2), a represents u or uh, either their gradients and b takes the role ofIuor its gradient. In the error analysis, we will make use of the following approximation result, which has been proved in [20].Lemma 6.1Letu∈Ws≥2,p(Ω)withF(∇u)∈W1,2(Ω), andIu∈Vh1(Th)its Scott–Zhang interpolant. Then there are constantsC1,C2>0independent of h such that(6.3)‖F(∇u)−F(∇Iu)‖L2(E)2≤C1h2‖∇F(∇u)‖L2(SE)2,∀E∈Th,where SEis a domain made of the neighboring elements of E in Th.Under the assumptions of Lemma6.1and(2.3)the following estimate holds true fort>0:(6.4)‖u−Iu‖F,DG2<Ch2∑E∈Th‖∇F(∇u)‖L2(E)2forC>0independent of h.We observe for u and the Scott–Zhang interpolantIuthat[u]=[Iu]=0on everye∈E. The estimate (6.4) follows immediately by the (6.1) and the approximation result (6.3).□Under the assumptions(6.2), we can obtain the following estimates:(6.5a)‖u−Iu‖L2(Ω)2≤CΩ,p,u,Iu‖u−Iu‖F,DG2,(6.5b)‖uh−Iu‖L2(Ω)2≤C‖uh−Iu‖F,DG2.We recall inequality (3.7) forv≔u−Iuand consequently we apply (2.8b) and (2.13) to obtain‖u−Iu‖L2(Ω)2≤CΩ,p,u‖u−Iu‖A,DG2≤CΩ,p,u‖u−Iu‖F,DG2.For the estimate (6.5b), lete∈ED, then we have that|uh−Iu||e≤|uh−uD||e+|uD−Iu||e. Therefore, using the inequality‖uh−Iu‖L2(Ω)≤‖uh−Iu‖DG,2(see (3.7)) and then applying (2.8b) and (2.13) for every term of‖uh−Iu‖DG,2, we get‖uh−Iu‖L2(Ω)2≤‖uh−Iu‖DG,2≤CΩ,p,uh‖uh−Iu‖F,DG2.□Under the assumptions of Lemma6.1, there exists aC>0independent of h such that(6.6)∑e∈Eh‖F(∇u)−F(∇Iu)‖L2(e)2≤Ch2∑E∈Th‖∇F(∇u)‖L2(E)2.Usingv≔F(∇u)−F(∇Iu)in inequality (iii) of Lemma 3.1 and summing over all edges, we have that∑e∈Eh‖F(∇u)−F(∇Iu)‖L2(e)2≤3C∑E∈Th(‖F(∇u)−F(∇Iu)‖L2(E)2+h2‖∇(F(∇u)−F(∇Iu))‖L2(E)2)≤Ch2∑E∈Th‖∇F(∇u)‖L2(E).□LetIu∈Vh1(Th)be the interpolant of u as in(6.3)and letϕ=uh−Iu. For every edgee∈Ethere areC1,ε,C2,ε>0such that(6.7)|∫e{a(∇uh)∇uh−a(∇Iu)∇Iu}·ne[ϕ]ds|≤C1,ε‖F(∇uh)−F(∇Iu)‖L2(Ein⋃Eout)2+hC2,ε||F([uh]h)−F([Iu]h)||L2(e)2.Lete=∂Ein⋂∂Eout(ore∈ED). Applying sequentially the inequalities (3.6) and Lemma 3.1 on the left-hand side of (6.7), we have∫eh1/2|{a(∇uh)∇uh−a(∇Iu)∇Iu}|1h1/2|[ϕ]|ds≤(∫eh|{a(∇uh)∇uh−a(∇Iu)∇Iu}|2ds)1/2(∫e1h|[ϕ]|2ds)1/2≤(h2‖a(∇uh)∇uh−a(∇Iu)∇Iu‖L2(ein)2+h2‖…‖L2(eout)2)1/2×(1h‖[ϕ]‖L2(e))1/2≤Ctrc(‖a(∇uh)∇uh−a(∇Iu)∇Iu‖L2(Ein)2+‖…‖L2(Eout)2)1/2(1h‖[ϕ]‖L2(e)2)1/2≤C1,ε∥||a(∇uh)∇uh−a(∇Iu)∇Iu‖L2(Ein⋃Eout)2+hC2,ε||[ϕ]h||L2(e)2≤(by(2.8b),(2.13))C1,ε‖F(∇uh)−F(∇Iu)‖L2(Ein⋃Eout)2+hC2,ε‖F([uh]h)−F([Iu]h)‖L2(e)2,where for simplicity, we used the notation:L2(ein)≔L2(e⊂∂Ein).□LetIu∈Vh1(Th)be the interpolant as in(6.3)of the solution u andϕ=uh−Iu. For every edgee=∂Ein⋂∂Eout(ore∈ED) there areC1,ε,C2,ε>0such that(6.8)|∫e(a([uh]h)[uh]−a([Iu]h)[Iu]){∇uh−∇Iu}·neds|≤hC2,ε∫e|F([uh]h)−F([Iu]h)|2ds+C1,ε‖F(∇uh)−F(∇Iu)‖L2(Ein⋃Eout)2.Following the same steps as in proof of Lemma 6.5, by applying Hölder׳s inequality, trace inequality, consequently Young׳s inequality and (2.8b) and (2.13), the relation (6.8) can be shown.□Let u be the solution of(3.11)and letIu∈Vh1(Th)be its interpolant as in(6.3). Then forϕ=uh−Iuandε>0there exist constantsC1,ε,C2,ε,C3,εsuch that the form B of(3.8)satisfies(6.9)|B(u,ϕ)−B(Iu,ϕ)|≤1C1,ε‖u−Iu‖F,DG2+C2,ε‖ϕ‖F,DG2+2C3,ε∑e∈E∫eh|F(∇u)−F(∇Iu)|2ds.After a rearrangement of the terms ofB(u,ϕ)−B(Iu,ϕ), we have|B(u,ϕ)−B(Iu,ϕ)|≤∫Ω|a(∇u)∇u−a(∇Iu)∇Iu||∇ϕ|dx+∑e∈EI∫e{|a(∇u)∇u−a(∇Iu)∇Iu|}|[ϕ]|ds+∑e∈ED∫e|a(∇u)∇u−a(∇Iu)∇Iu||ϕ|ds+∑e∈EI∫e|a([u]h)[u]−a([Iu]h)[Iu]|{|∇ϕ|}ds+∑e∈ED∫e|a([u]Dh)[u]D−a([Iu]Dh)[Iu]D||∇ϕ|ds+∑e∈EIσ∫e(a)[u]h([u]h−a([Iu]h)[Iu]h)|[ϕ]|ds+∑e∈EDσ∫e(a([u]Dh)[u]Dh−a([Iu]Dh)[Iu]Dh)|ϕ|ds=T1+T2+T3+T4+T5+T6+T7.The first term T1 can be bounded by applying Hölder–Young׳s inequalities (3.6) and consequently (2.8b), (2.13), as follows:T1≤(∑E∈Th∫E|a(∇u)∇u−a(∇Iu)∇Iu|2dx)1/2(∑E∈Th∫E|∇ϕ|2dx)1/2≤1C2,ε∫Ω|F(∇u)−F(∇Iu)|2dx+C1,ε∫Ω|F(∇uh)−F(∇Iu)|2.The term T2 can be bounded by applying the same steps as in Lemma 6.5,T2≤∑e∈EI∫eh1/2|{a(∇u)∇u−a(∇Iu)∇Iu}|1h1/2|[ϕ]|ds≤∑e∈EI[(∫eh|{a(∇u)∇u−a(∇Iu)∇Iu}|2ds)1/2(∫e1h|[ϕ]|2ds)1/2]≤1C2,ε∑e∈EI∫eh|F(∇u)−F(∇Iu)|2ds+C1,εh||F([uh]h)−F([Iu]h)||L2(e)2.Analogously, for the term T3, we obtain thatT3≤∑e∈ED∫eh1/2|a(∇u)∇u−a(∇Iu)∇Iu|1h1/2|ϕ|ds≤1C2,ε∑e∈ED∫eh|F(∇u)−F(∇Iu)|2ds+C1,εh||F([uh]Dh)−F([Iu]Dh)||L2(e)2.The term T4 can be bounded working in the same way as in Lemma 6.5,T4≤∑e∈EI∫eh1/2|a([u]h)[u]h−a([Iu]h)[Iu]h|h1/2{|∇ϕ|}ds≤∑e∈EI(∫eh|a([u]h)[u]h−a([Iu]h)[Iu]h|2ds)1/2(∫eh{|∇ϕ|}2ds)1/2≤1C2,ε∑e∈EI(∫eh|F([u]h)−F([Iu]h)|2ds+3C1,ε∑E∈Th(∫E|F(∇uh)−F(∇Iu)|2dx.Applying the same steps for T5, we getT5≤1C2,ε∑e∈ED(∫eh|F([u]Dh)−F([Iu]Dh)|2ds+3C1,ε∑ED∈Th(∫ED|F(∇uh)−F(∇Iu)|2dx.The last terms T6 and T7 are bounded by applying the same steps as beforeT6≤σ∑e∈EI∫e|a([u]h)[u]h−a([Iu]h)[Iu]h|h1/2|[ϕ]h1/2|ds≤σ∑e∈EI(∫eh|a([u]h)[u]h−a([Iu]h)[Iu]h|2)1/2(∫e1h|[ϕ]|ds)1/2≤1C2,ε∑e∈EI∫eh|F([u]h)−F([Iu]h)|2ds+C1,ε∑e∈EI∫eh|F([uh]h)−F([Iu]h)|2ds.T7≤1C2,ε∑e∈ED∫eh|F([u]Dh)−F([Iu]Dh)|2ds+C1,ε∑e∈ED∫eh|F([uh]Dh)−F([Iu]Dh)|2ds.Choosing appropriate the constantsCi,εabove and by gathering the bounds together, we can derive (6.9).□LetIu∈Vh1(Th)be the interpolant of the solution u. The formB(,̇)̇is monotone with respect to second argument, in the sense that there is aκ0>0such that(6.10)B(uh,uh−Iu)−B(Iu,uh−Iu)>κ0‖uh−Iu‖F,DG2.Denotingϕ=uh−Iuand after rearranging the terms, we obtain thatB(uh,uh−Iu)−B(Iu,uh−Iu)=∑E∈Th∫E(a(∇uh)∇uh−a(∇Iu)∇Iu)∇ϕdx−∑e∈EI∫e{a(∇uh)∇uh−a(∇Iu)∇Iu}[ϕ]ds−∑e∈ED∫e(a(∇uh)∇uh−a(∇Iu)∇Iu)ϕds−∑e∈EI∫e(a([luh]h)[uh]−a([Iu]h)[Iu]){∇ϕ}ds−∑e∈ED∫e(a([uh]Dh)[uh]D−a([Iu]Dh)[Iu]D)∇ϕds+∑e∈EIσ∫e(a([uh]h)[uh]h−a([Iu]h)[Iu]h)[ϕ]ds+∑e∈EDσ∫e(a([uh]Dh)[uh]Dh−a([Iu]Dh)[Iu]Dh)ϕds.Using (2.12a), Lemmas 6.5 and 6.6, we haveB(uh,uh−Iu)−B(Iu,uh−Iu)≥Cp∑E∈Th∫E|F(∇uh)−F(∇Iu)|2dx−C1,ε∑E∈Th‖F(∇uh)−F(∇Iu)‖L2(E)2−hC2,ε∑e∈EI∥F([uh]h)−F([Iu]h)∥L2(e)2−hC2,ε∑e∈ED∥F([uh]Dh)−F([Iu)]Dh)∥L2(e)2−C1,ε∑E∈Th‖F(∇uh)−F(∇Iu)‖L2(E)2+σ∑e∈EIh∥F([uh]h)−F([Iu]h)∥L2(e)2+σ∑e∈EDh∥F([uh]Dh)−F([Iu]Dh)∥L2(e)2.Gathering the bounds and choosing appropriately the constantsCi,εand σ, for example2C1,ε<Cp/2andσ−1/C2,ε>12, we can find κ0 such that the relation (6.10) to be true.□Next, we give the estimate for the approximation erroruh−u.Theorem 6.9Under the assumptions(2.3) and (6.2), and choosinguh(0)≔Iu0, there exist constants κ0andC>0such that fort∈(0,T](6.11)‖u(t)−uh(t)‖L2(Ω)2+κ02∫0t‖u(τ)−uh(τ)‖F,DG2dτ≤‖u(t)−Iu(t)‖L2(Ω)2+C∫0t‖∂t(u(τ)−Iu(τ))‖L2(Ω)2dτ+Ch2∫0t‖∇F(∇u(τ))‖L2(Ω)dτ.We have by variational formulations (3.10) and (3.11) fort>0that(6.12)∫Ω∂tuhϕdx+B(uh,ϕ)=∫Ω∂tuϕdx+B(u,ϕ),∀ϕ∈Vhk(Th).Settingϕ=uh−Iuand adding−∫Ω∂tIuϕdx−B(Iu,ϕ)on both sides of (6.12), we get(6.13)∫Ω∂t(ϕ)ϕdx+B(uh,ϕ)−B(Iu,ϕ)=∫Ω∂t(u−Iu)ϕdx+B(u,ϕ)−B(Iu,ϕ).Now, we use (6.6) in (6.9) and then we use the derived result on the right-hand side of (6.13). Consequently, we make use of (6.10) to the left-hand side of (6.13), we eventually end up with the following relation:(6.14)12∂∂t‖ϕ‖L2(Ω)2+κ0‖ϕ‖F,DG2≤∫Ω∂t(u−Iu)ϕdx+1C1,ε‖u−Iu‖F,DG2+C2,ε‖ϕ‖F,DG2+C3,εh2‖∇F(∇u)‖L2(Ω).Applying (3.6) on the first term on the right-hand side of (6.14) and then using discrete embeddings (6.5b) yields(6.15)12∂∂t‖ϕ‖L2(Ω)2+κ0‖ϕ‖F,DG2≤14κ0‖∂t(u−Iu)‖L2(Ω)2+κ04‖ϕ‖F,DG2.1C1,ε‖u−Iu‖F,DG2+C2,ε‖ϕ‖F,DG2+C3,εh2‖∇F(∇u)‖L2(Ω).Next, using (6.4) and choosingC2,ε=κ0/4into (6.15), we have(6.16)12∂∂t‖uh−Iu‖L2(Ω)2+κ02‖uh−Iu‖F,DG2≤14κ0‖∂t(u−Iu)‖L2(Ω)2+Cεh2‖∇F(∇u)‖L2(Ω).We integrate (6.16) from 0 to t:(6.17)‖uh(t)−Iu(t)‖L2(Ω)2+κ0∫0t‖uh(τ)−Iu(τ)‖F,DG2dτ≤‖u0,h−Iu0‖L2(Ω)2+∫0t(12κ0‖∂t(u(τ)−Iu(τ))‖L2(Ω)2+Cεh2‖∇F(∇u(τ))‖L2(Ω))dτ.Observing thatuh(0)−Iu0=0and applying the triangle inequality‖uh(t)−u(t)‖⁎≤‖uh(t)−Iu(t)‖⁎+‖u(t)−Iu(t)‖⁎,in (6.17), we can deduce the estimate (6.11).□Using further the estimates (6.5a) in (6.11), we prove the following corollary.Corollary 6.10Under the assumptions ofTheorem 6.9, there is aC≔C(‖∇F(∇u(t))‖L2(0,T;L2(Ω))2,‖∇F(∇u(t))‖L2(Ω)2‖∇ut‖L2(0,T;L2(Ω))2)such that(6.18)∫0t‖u(τ)−uh(τ)‖F,DG2dτ≤Ch2.The assertion follows by the application of the interpolation estimate of Lemma 6.1 and the estimate (6.5a) on the terms on the right-hand side of (6.11).□In this section, we present numerical results to illustrate the performance of the proposed IPDG method for solving problem (2.1) and to verify the theoretical results of the previous section. The numerical examples have been performed forp=2.3,p=2.5,p=3, using μ=1, σ=2.5 (see (3.8)). The Picard iterative procedure was stopped until the tolerance value satisfied bytol≤1.E−07.The domain isΩ≔[−2,2]×[−2,2], whereΓD=∂Ωand the dataf,uDof (2.1) are specified so that the exact solution is(7.1)u(x,y,t)=B(t)sin(x+y),whereB(t)=1+exp(−100t). The initial unstructured meshTh0is generated by a triangular mesh generator withh0=1and the next finer meshesThiare obtained by subdividing the triangles into four equal triangles,hi+1=hi/2. The problem has been solved up to final time T=0.5 using a second order, 1-stage DIRK method, [29]. In Fig. 1left, theTh2mesh of the domain Ω is presented and in Fig. 1 right, we plot the uhsolution computed onTh2mesh for the p=2.3 test case.In the first numerical test, the CPU time of the iterative methods PEJ and PEGS is compared. In Table 1, the CPU time for the p=2.3 test case is given. As it was expected, for the same value of tol, PEGS performs faster and appears to be more efficient than the PEJ iterative method.Next, we give examples for the convergence rate of the error,(7.2)ehi=∫0t‖u(τ)−uhi(τ)‖F,DG2dτ,whereuhiis the IPDG solution and u is the solution (7.1). All the numerical tests have been performed using the PEGS method withΔt<(hi/10)p. The numerical convergence rates r are computed by the formular=ln(ehi/ehi+1)/ln(2). The results are shown in Table 2. We can observe that for all p-test cases the error (7.2) converges with the rate that has been predicted in Corollary 6.10.

@&#CONCLUSIONS@&#
In this work, an IPDG method was presented for approximating the solution of a quasilinear parabolic problem formulated in Lp-setting. The resulting nonlinear ODE system was discretized in time by s-DIRK methods applying two low-storage Picard iterative schemes for solving the resulting nonlinear systems. A stability bound was shown in the broken‖·‖DG,p-normfor the IPDG solution. Optimal error estimates for the IPDG method were proved in the broken‖·‖F,DG-normfor the case ofp>2. The theoretical results were validated by numerical tests for several values ofp>2.