@&#MAIN-TITLE@&#
A survey on the Imperialist Competitive Algorithm metaheuristic: Implementation in engineering domain and directions for future research

@&#HIGHLIGHTS@&#
This is the first paper that reviews the application of Imperialist Competitive Algorithm in different engineering disciplines.The development trend of the ICA's applications is analyzed statistically in order to show its popularity.Future research opportunities and directions are discussed to motivate the future researchers.

@&#KEYPHRASES@&#
Imperialist Competitive Algorithm,Metaheuristic,Swarm intelligence,Imperialist competition,

@&#ABSTRACT@&#
The Imperialist Competitive Algorithm (ICA), derived from the field of human social evolution, is a component of swarm intelligence theory. It was first introduced in 2007 to deal with continuous optimization problems, but recently has been extensively applied to solve discrete optimization problems. This paper reviews the underlying ideas of how ICA emerged and its application to the engineering disciplines mainly on industrial engineering. The present study is the first ever comprehensive review on ICA, which indicates a statistically significant increase in the amount of published research on this metaheuristic algorithm, especially research addressing discrete optimization problems. Future research directions and trends are also described.

@&#INTRODUCTION@&#
The Swarm Intelligence technique has become increasingly popular during the last two decades due to its capability to find a relatively optimal solution for complex combinatorial optimization problems. It has been applied in the fields of engineering, economy, management science, industry, etc. Problems that benefit from the application of Swarm Intelligence techniques are generally very hard to solve optimally in the sense that there is no such exact algorithm for solving them in polynomial time. These optimization problems are also known as NP-hard problems.The existing approaches to deal with NP-hard problems are roughly divided into two techniques: exact algorithms and approximate algorithms. Exact algorithms refer to the techniques such as branch and bound, branch and cut, price and cut, dynamic programming, etc., in which algorithms attempt to find an optimal solution. Alternatively, approximate algorithms are able to solve large-scale NP-hard problems in less computational time while arriving at high-quality near optimal solutions. The Swarm Intelligence technique is an approximate algorithm that incorporates a widespread range of intelligent algorithms largely inspired from natural processes, e.g., Particle Swarm Optimization (PSO), Ant Colony Optimization (ACO), Genetic Algorithm (GA), and Artificial Honey Bee (AHB).The Imperialist Competitive Algorithm (ICA), a recently developed metaheuristic introduced by Atashpaz-Gargari and Lucas [1], was inspired by socio-political behaviors. The initial work on the ICA was dedicated to the continuous optimization problems, but it is currently applied to many complex discrete combinatorial optimization problems, such as Flowshop Scheduling Problem (FSP), Assembly Line Balancing Problem (ALBP), Traveling Salesman Problem (TSP), and Facility Layout Problem (FLP).The rest of the paper is organized as follows. Section 2 represents the behavior of socio-political evolution which is the main inspiration source of ICA. Section 3 explains the procedure of implementing ICA. Section 4 discusses about parameters of ICA and general practices in tuning these parameters for best quality solutions. Section 5 reviews applications of ICA in various engineering domains. Section 6 is dedicated to statistically analyze the literature. Advantages and disadvantages of ICA are addressed in Section 7. A comparative study among the metaheuristics is presented in Section 8. Section 9 discusses some future research opportunists to enhance ICA. Finally, the concluding remarks are given in Section 10.Modern colonialism started in 1870 when developed countries attempted to take over less developed countries; colonize them or influence them to extend their power. The initial steps of colonialism involved political-military dominance of the human and ground resources belonging to less developed countries. Developing countries subsequently competed intensively to capture more undeveloped countries or colonies. The competition among imperialists leads to political, military, and economic development of dominant countries; they were obliged to develop in order to be able to compete with other developing countries. Although colonialism resulted in well-documented atrocities, it also resulted in construction of new schools, libraries, and public transportation systems as colonialists attempted to spread their own cultural values and norms. For instance, France and the British Empire constructed many schools among their territories, including India, to spread their cultural values [2]. English was extensively taught by the British to Indian college students and gradually became the second language of India.The colonialism phenomenon still exists, but has taken a different form. Developed countries of today attempt to control less-developed countries through direct means, such as direct legislation, or through indirect means, such as capturing their markets through exports and controlling their imports. This type of imperialism is called neocolonialism [3].Within optimization theory, the colonialism phenomenon lifts a dominating colony out of a valley (current position) and moves it toward an imperialist peak (new minimum area). The new position of colony might even be better than the imperialist at any given time. Fig. 1explicitly shows a colony that migrated from a minimum area to a new minimum area along the economy axis. Movement in the economy axis means that the colony improves its economy situation by taking influence of imperialist's economy. This process is called assimilation process.Moving colony toward its imperialist could result in better solution as represented in Fig. 1. According to Fig. 1, during assimilation process, the colony from its current position (point A) moves toward its imperialist (point C) and placed in a new position (point B). Fig. 1 also shows that the assimilated colony explores new search space, which is global optimum.Similar to other evolutionary algorithms, ICA begins with a random initial population where each individual of the population represents a country. Countries within the ICA are analogous to chromosomes in the GA. In the initialization step, some of the best countries (less costs) are selected as imperialist countries and the remainders are considered to be colonies of the imperialists. Colonies are then divided among those imperialists based on imperialists’ power. After dividing all colonies among the imperialist countries, the colonies move toward their relevant imperialists within the cultural state space. A collection of an imperialist country and some colonies form an empire, which compete among empires and displace each other. The survival of an empire depends on its power to take over colonies from other competitors and the power of larger empires increase while the empires with less power collapse. Following many iterations of competition among empires, the power of colonies approaches that of the imperialist countries, indicating convergence. The extreme bound of imperialist competition occurs when only one imperialist remains along with some colonies, which are close to the imperialist country in terms of position. The stepwise description of ICA is addressed in the following sections.In order to represent an appropriate solution format, an1×Nvararray called country is introduced. A country is defined by,(1)Country=[p1,p2,…,pNvar]whereNvaris the number of variables to be considered of interest about a country and piis the value of ith variable. From a socio-political viewpoint, the variables of interest could include culture, language, economy, and religion (Fig. 2).For example, consider a quadratic assignment problem (QAP); where a set of facilities is assigned to a set of locations such that the cost of material flow is minimized. Let us assume that there are 3 facilities and 3 possible locations. To represent the QAP problem in ICA, the matrix for the countries (solutions) can be represented as below:Country=country1country2country3country4country5country6=123132213231312321where, the element of a country represents a facility assigned to a location. For country 6, the array (3, 2, 1) indicates that the facilities 3, 2 and 1 are assigned to the locations 1, 2 and 3, respectively.The cost of a country is calculated as a function the variables (p1, p2, …, pn). Therefore,(2)Cost=f(country)=f(p1,p2,…,pn)In the initialization step, we need to generate an initial population with the size of Npop. Next, we have to select some of the best countries, having the lowest cost function values, with the size of Nimpfrom Npop, and set them to be imperialists. The rest of countries are set to be colonies Ncol.(3)Ncol=Npop−NimpTo form empires, the colonies are divided among the imperialist countries according to the power of the imperialists. The normalized cost of each imperialist is determined by,(4)Cn=maxi{ci}−cnwhere, cnis the nth imperialist's cost, and Cnis the normalized cost of nth imperialist. An imperialist with larger cost (i.e. a weaker imperialist country) has smaller normalized cost. Therefore, the power of each imperialist is calculated based on the normalized cost:(5)pn=cn∑Nimpi=1ciIn Eq. (5), pnis the power of nth imperialist. The normalized power of nth imperialist is the number of colonies that are possessed by that imperialist, calculated by:(6)NCn=round{pn.(Ncol)}where, NCnis the number of initial colonies possessed by the nth imperialist; Ncolis the total number of colonies in the initial population, and round is a function that gives the nearest integer of a fractional number.Fig. 3shows a general scheme of forming initial empires. The larger (powerful) empires possess more colonies, while smaller (less powerful) empires possess fewer colonies.An illustrative example is presented here to explain the aforementioned initialization process. Assume that ICA is employed to solve a small size optimization problem. Total number of countries is set to be 50, and the best three countries (in terms of costs) are selected as imperialists. Reminder 47 countries are considered as colonies. Consider the costs of three imperialists are 100, 150, and 180, respectively. Therefore, the number of colonies assigned to each imperialist can be calculated as follows:Nimp=3,Ncol=47Costs of the three imperialists are represented by,c1=100,c2=150,c3=180,max{c1,c2,c3}=180Based on Eq. (4), the normalized costs of these three imperialists are,C1=180−100=80,C2=180−150=30,C3=0Based on Eq. (5), the powers of these three imperialists are,p1=0.73,p2=0.27,p3=0Based on Eq. (6), the normalized powers of these three imperialists are,NC1=round{0.73*47}=34,NC2=round{0.27*47}=13,NC3=round{0*47}=0As part of the colonial movement, imperialists build infrastructures such as transportation systems within their colonies; thus attempting to assimilate colonies. For example, both the British and France Empires attempted assimilation by constructing New England and New France within their respective colonies.As shown in Fig. 4, the imperialist country to the empire it belongs alters the position of the colony within the religion/economy state space. The colony moves x distance along with d direction toward its imperialist. The moving distance x is a random number generated by random distribution within interval [0, β*d].(7)x∼U(0,β*d)where, the value of β falls between 1 and 2. Setting β>1 causes the colony to move toward the imperialist direction.However, history [2] has shown that colonies are absorbed partially, not perfectly, into the imperialist country, which indicates the presence of a deviation in the assimilation process. The deviation parameter is shown by θ, which follows uniform distribution. Therefore,(8)θ∼U(−φ,φ)where, φ is an arbitrary parameter, where a larger value will facilitate a global search and a smaller value will encourage a local search. Setting φ to π/4 (radian) could be a good choice.According to imperial history, colonies of an empire are absorbed by imperialist in terms of social, cultural, economic, and political characteristics; however, there might be some colonies that resist to be absorbed by imperialists. In fact, those colonies perform some sort of reformations in their characteristics. In ICA, this operation is called revolution. Revolution brings sudden random changes in the position of some the colonies in the search space. Revolution operation in ICA is comparable to mutation operation in GA, which increases exploration and prevents the early convergence of countries to local optima. Fig. 5shows the key role of revolution. As it can be seen from Fig. 5, the colony located at point A can be transferred to some point between point A and B. It is obvious that assimilation process, in this case, may cause colony to get trapped to local optimum. By performing revolution operation, colony suddenly jumps from point A to point C which results in escaping from local optimum.Once assimilation and revolution operations are performed on colonies of an empire, the cost functions of new position of colonies are then compared with cost function of position of imperialist. If we find any colony whose cost function is less than cost function of imperialist, then we swap imperialist with that colony.Fig. 6represents those colonies of empire, highlighted by blue circles moved toward their imperialist, highlighted by blue star. The movement (assimilation) of each colony results in a new position that is represented by red circle. Once assimilation is performed, then some colonies are selected for revolution operation depending on revolution rate. In Fig. 6, only one colony is revolted and transferred to a new position represented by green color. As explained earlier, after completing assimilation and revolution operations, we evaluate cost functions of assimilated and revolted colonies and imperialist. In Fig. 6, the revolted colony, highlighted by green color, is swapped with imperialist because of its lower cost compared to its imperialist. It must be noted that if we do not find any assimilated or revolted colony with a lower cost, then imperialist does not lose its position.The power of an empire is computed based on the power of its imperialist and a fraction of the power of its colonies.(9)TCn=Cost(imperialist)+ζ*mean{Cost(coloniesofempiren)}where TCnis the total cost of nth empire, and ζ is a positive number between 0 and 1, usually close to zero. A small value of ζ emphasizes a greater influence of imperialist power in determining the total power of empire, while a large value of ζ indicates the influence of the mean power of colonies in determining the total power of the empire.During competition among imperialist countries, weaker empires will be collapsed gradually. This means that the weaker empires will lose their colonies over time, while stronger empires will possess the colonies of weaker empires, thereby increasing their power. Therefore, one or some of the weakest colonies belonging to the weakest empire will be given to a different empire based on competition that occurs among all empires. Stronger empires have a greater chance to possess the weakest colony. Fig. 7depicts a general scheme of competition among empires.The weakest colony in weakest empire is subject to competition among empires 2 to N (Fig. 7). In order to model the competition process among the empires, we need to compute the normalized total cost of empire by,(10)NTCn=maxi{TCi}−TCnwhere TCnis the total cost of nth empire, and NTCnis the normalized total cost of corresponding nth empire. Then, the probability of possessing a colony is computed by,(11)pn=NTCn∑Nimpi=1NTCiwhere,∑i=1Nimppi=1.There is a need for a mechanism similar to the Roulette Wheel in GA to distribute the weakest colonies among the empires based on their possession probabilities. The ICA introduces a new distribution mechanism requiring less computation than the Roulette Wheel in GA, which requires a fairly heavy computation for Cumulative Distribution Function (CDF). The mechanism in the ICA only requires a Probability Density Function (PDF), addressed below:Vector P with the size of 1*Nimpcontains the possession probability of a colony by empires as follows:(12)P=[p1,p2,…,pNimp]Then, vector R with the same size of P is formed in which its elements are generated using uniform distribution within interval of [0,1] as follows:(13)R=[r1,r2,…,rNimp],where, ri∼U(0, 1)Next, vector D is defined as,(14)D=P−R=[D1,D2,…,DNimp]=[p1−r1,p2−r2,…,pNimp−rNimp]Once vector D is calculated, the weakest colony is assigned to the empire with the larger index. The absence of CDF computation will speed up the distribution process of ICA in comparison to the Roulette Wheel in GA.An illustrative example will help us understand the above mentioned process more clearly. For instance, consider three imperialists with total cost TCiof 10, 20, and 30, respectively, as given below:TC1=10,TC2=20,andTC3=30.To calculate the possession probability of each imperialist, total cost of each of them needs to be normalized as follows:max1≤i≤3TCi=30NTC1=TC1−max1≤i≤3TCi=10−30=−20NTC2=TC2−max1≤i≤3TCi=20−30=−10NTC3=TC3−max1≤i≤3TCi=30−30=0Next, the possession probability of each imperialist is calculated by,p1=(−20)(−20)+(−10)+0=0.67p2=(−10)(−20)+(−10)+0=0.33p3=0(−20)+(−10)+0=0It is obvious that the first imperialist with lowest total cost has more likely to possess the colony from the weakest empire, while the possession probability of the third imperialist with highest cost is zero. After calculating probability, the vector P can be written as follows:P=[0.67,0.33,0]Vector R with same size of P can be calculated using uniform function as shown below,R=[0.28,0.55,0.96]Vector D is computed by subtracting vector R from vector P as below,D=P−R=[0.39,−0.42,−0.96]The largest element of vector D is 0.39, which is associated with first imperialist (first index). Thus, the first imperialist gets possession of the weakest colony of the weakest empire. The process of imperialist competition explained above is similar to the Roulette Wheel process used in selecting parents in the GA.Imperialist competition can be compared to the bank lottery. The objective of bank lottery is to award prize to owners of saving account, depending on the money that an individual puts into his or her saving account. Of course, the bank lottery should be fair, in the sense that an individual who puts more money into his or her account must have more chance to win. Let's assume that four individuals participated in a bank lottery and point of 1st, 2nd, 3rd, and 4th individuals are equal to 1, 2, 3, and 4, respectively, as represented below:Point=[1,2,3,4]The probability of winning for each individual can be calculated by dividing individual's point by total points as given below,Probability=[0.1,0.2,0.3,0.4]We generate random numbers using uniform distribution by,R=[0.62,0.58,0.82,0.03]Finally, vector D can be computed by,D=Probability−R=[−0.52,−0.38,−0.52,0.37]According to the elements of vector D, the 4th individual is the winner of bank lottery. It is important to ensure that the bank lottery is fair in the sense that an individual with a more money has more chance to win. To ensure this factor, we repeat lottery for 1000 times, and then we would like to see, how many times each individual gets ‘win’. The code below written in MATLAB determines the number of winning for each individual.IndexMat=zeros(1,4);% creates 1 by 4 array of zeros.P=[0.1 0.2 0.3 0.4];% probability of individualsfor i=1:1000% experiment repeats for 1000 timesR=rand(1,4);% this function generates random number with same size of PD=P−R;% vector D is generated by subtracting R from PIndex=find(D==max(D)); % finds index whose value is maximizedIndexMat(Index)=IndexMat(Index)+1; % update number of winnings of each individualendIndexMat=IndexMatThe result of the above code is given below:IndexMat=[108,180,276,436]This result reflects that if we repeat lottery for 1000 times, then 1st, 2nd, 3rd, and 4th individuals win the lottery 108, 180, 276, and 436 times, respectively. It is obvious that chance of winning for each individual is dependent on individual's score (probability).Weaker empires lose their colonies gradually to stronger empires, which in turn grow more powerful and cause the weaker empires to collapse over time. In Fig. 8, the weakest empire is eliminated by losing its last colony during the imperialist competition.Similar to other evolutionary algorithms, ICA continues until stopping criteria are met, such as predefined running time or a certain number of iterations. The ideal stopping criterion is when all empires have collapsed and only one (grand empire) remains (Fig. 9).The performance of a metaheuristic algorithm is highly dependent on its parameter tuning. A better parameter tuning allows larger flexibility and robustness, but requires careful initialization. It is not obvious to define a priori which parameter setting should be used. It is true to say that the optimal values of the parameters of any metaheuristic mostly depend on the size and type of problem, and also on the search time that user wants to spend for solving the problem. In the following, a brief description of adjustment of ICA parameters is summed up based on the literature.Deviation parameter is one of the most critical parameters of ICA. It defines the compromise between search exploration (diversification using more randomness) and search exploitation (intensification using more greediness). In fact, small values for θ encourages exploitation, while large values reinforces exploration. An appropriate way to adjust θ is setting it to a large value at the beginning of search and gradually reducing to a small value at the end of search. This can be done using a fuzzy adaptive engine or linear decreasing functions. Notably, setting θ to a small value needs more search time, while a large value of θ investigates a good range of solution spaces (reduction in search time) but may sacrifice the solution accuracy. According to the literature, setting θ to π/4 compromises between solution accuracy and search time for most of the case studies.Direction parameter (β) ensures how far colony gets close to its imperialist during assimilation strategy. It plays an important role to make a trade-off between exploitation and exploration. A small value of β promotes exploitation, because colony does move a little from its current position while a large value of β results in exploration due to the large movement from its current position. The results reviewed in this paper indicate that a value of 0.5 in general would be an appropriate choice.Number of countries in the ICA is the counterpart of population in the GA. It compromises the solution accuracy and search time. Small number of countries may result in less computational effort but poor solutions, while large number of countries may result in better solution quality but high computational efforts. In fact, the number of countries compromises the solution accuracy and search time and must be determined based on the size and complexity of optimization problems. The number of imperialist countries is usually 10–13% of the number of overall countries, and the remainder would be number of colonies. For example, if we consider 80 countries for a particular problem, then it is better to start by setting 8 (10%) countries as imperialists and 72 countries, the remainder, as colonies.As mentioned earlier, ξ is a positive constant for considering the average power of colonies in each empire. It is used to adjust the effect of cumulative power of colonies on determining the power of each empire. A large value of ξ emphasizes more contribution of power of colonies on the power of empire, while a small value pinpoints that power of empire is almost entirely dependent on the power of its imperialist. Results reviewed in the literature indicate that a small value of 0.1 or 0.15, could be an appropriate choice.Revolution operator is the counterpart of mutation in GA. A large value of revolution rate reinforces the exploration, while a small value of it may encourage exploitation. The value of revolution rate is highly dependent on the magnitude of solution spaces; however the value of 0.2 could be an appropriate choice, in general.The pseudo code of the ICA is shown in Fig. 10.Engineering, by far, is the most popular application domain for metaheuristic algorithms. This is mainly because engineering contains a wide range of problems that are hard to solve optimally. To investigate the particular interest of applications of the ICA, the field of engineering has been divided into six subgroups: (1) industrial engineering, (2) civil engineering, (3) mechanical engineering, (4) electrical engineering, (5) petroleum engineering, and (6) computer engineering. Fig. 11shows the specific domains that the ICA applied for various engineering disciplines. This literature review mostly focuses on the application of ICA within industrial engineering discipline.Of the studies reviewed in this paper that applied the ICA to the operations management field, all of the reviewed studies report successful applications of the ICA in terms of efficiency and quality of the obtained solutions. These studies predominately modified the continuous version of the ICA to be implemented for discrete problems, mainly scheduling-type problems. Thus, this section is dedicated to review the application of the ICA to scheduling.Scheduling is a decision-making process that is used on a regular basis in many manufacturing and services industries [4]. The theory of scheduling refers to allocating resources over time to accomplish a collection of tasks such that to minimize one or more objectives. Different types of tasks and resources can be defined within this theory, such as jobs and machines in manufacturing systems, nurses and hospital equipment in healthcare, ships and dockyards in logistics systems, and flight scheduling in airports.As manufacturing systems became more complex and competitive, job-scheduling problems received a great deal of attention by researchers. Among the scheduling models, the flowshop scheduling problem (FSP) is one of the most popular models existing in common manufacturing environments, and is classified as a NP-hard combinatorial optimization problem in the strong sense [5].Hybrid flowshop scheduling problem (HFSP) is a type of scheduling problem that consists of a set of n jobs that are to be processed in a series of m production stages, where each stage has several parallel machines. In other words, HFSP includes allocating a set of jobs to a set of parallel machines at each stage, and sequencing the allocated jobs at each stage so that a specific objective function, such as total job tardiness and earliness, is minimized. The main property of the HFSP is that the jobs are not required to visit all m stages, which differs FSP.Many approaches have been developed to deal with the HFSP, such as the GA, PSO, ACO, Tabu Search (TS), Artificial Immune Systems (AIS), and Neural Network (NN). For improving the efficiency of solutions, some researchers hybridized these approaches into optimization strategies. For example, Behnamian and Fatemi Ghomi [6] proposed a hybrid GA and variable neighborhood search to minimize the makespan and total resource allocation costs. Wang and Tang [7] developed a TS heuristic for the HFSP. The main feature of the proposed algorithm is to incorporate the scatter search (SS) mechanism to improve the diversity of the search procedure. A novel simulated annealing with local search is suggested by Naderi et al. [8] and a new knowledge based-heuristic algorithm is proposed by Lee and Wu [9].The first study of the application of the ICA in the field of scheduling solved the HFSP with two objective functions that minimized the sum of the linear earliness and quadratic tardiness Behnamian and Zandieh [10]. Since the solution space for the HFSP is discrete, the assimilation process suggested by the general ICA is not simply applicable, because moving colonies toward imperialist countries may lead to an infeasible solution. Therefore, the assimilation process was adjusted. A relevant approach called position-based operator, which is used in this paper, is a kind of uniform crossover. Similar to crossover in the GA, this operator compounds the colony sequence and the relevant imperialist country within an empire. As a good alternative, a crossover operator in the GA can simulate the assimilation process when the solution space of a given problem is discrete.The performance of the ICA proposed by Behnamian and Zandieh [10] was compared to two other hybrid TS-scatter search algorithms(HTSwang)proposed by [7] and a recursive backtracking combined with a TS (RBTLiu) algorithm proposed by Siyi et al. [11]. Three instance problems were generated and the relative percentage deviation (RPD) was computed to evaluate the efficiency of the ICA against the other two algorithms. Their results indicated the superiority of the ICA in terms of RPD in all of the instance problems.Karimi et al. [12] applied the ICA based on electromagnetic-like mechanism to solve group-scheduling problems in flexible flow shops. In this special case of the HFSP jobs are divided into groups in order to reduce the setup time, throughput, and work-in-process (WIP) inventories. The authors used the electromagnetism-like mechanism (EM) proposed by Birbil and Fang [13] to model the assimilation process. This mechanism is constructed based on an attraction–repulsion mechanism to move colonies toward the optimum. The attraction mechanism leads to colony movement toward its relevant imperialist, while the repulsion mechanism impedes a move toward the imperialist track. This approach is implemented for each empire, so that the colony moves toward its imperialist but with some deviation (not a direct movement) due to the attraction–repulsion of other imperialists. The performance of proposed algorithm is compared against the random key genetic algorithm (RKGA) using two performance measures: (1) square of coefficient variation (CV2), (2) improvement index. To do a fair comparison between ICA and RKGA, the authors tuned the parameters of both algorithms using Taguchi design approach. It has found that the ICA results in less variation for nine instances out of ten than the RKGA which leads to a high convergence. Moreover, the ICA performs better than the RKGA in terms of improvement index in most instances.Another successful application of the ICA was explored by Banisadr et al. [14] for solving single-machine scheduling problems. The proposed algorithm was based on integration of concepts within the ICA and the GA. The authors found that the GA performs better than the ICA in terms of solution accuracy while the ICA is more efficient in terms of computational times. Hence, the researchers combined the two algorithms into the HICA, which made a trade-off between time and solution. The ICA was used to generate initial solution for the GA. In fact, the five best solutions of ICA were inserted to the chromosomes and the reminding them are generated randomly to maintain the solution diversity.Similarly, the ICA was used to schedule the receiving and shipping trucks in cross-docking systems by Forouharfard and Zandieh [15] which is found that the proposed ICA outperformed the GA in computational time. The ICA was employed by Shokrollahpour et al. [53] to solve two-stage assembly flowshop scheduling problem with a weighted sum of makespan and mean completion time. The parameters of ICA were calibrated using Taguchi design of experiment and performance of ICA was compared with simulated annealing in terms of percentage error and standard deviation. The results exhibit superiority of ICA than simulated annealing.The ICA was also employed by Kayvanfar and Zandieh [16] to solve the economic lot scheduling problem (ELSP) with deteriorating items. The ELSP is concerned with scheduling the production of a set of products on a single machine so that the costs incurred such as setup costs and inventory holding costs are minimized. The ICA was motivated to apply for solving the ELSP due to characterization of NP-hard problem. In order to reinforce the performance of algorithm, the authors used a Taguchi design of experiment to optimally set the revolution rate, number of countries, and imperialists parameters. Nine experiments were performed to identify the most critical level of each parameter (controllable factor). The performance of the ICA was compared against the GA for small, medium, and large sized problems and indicates that ICA is superior to the GA for both CPU time and solution accuracy in all problem sizes.Ayough et al. [17] applied the ICA and GA algorithms to solve the job rotation-scheduling problem (JRSP). The JRSP is a subset of the human-resource scheduling problem, which aims to assign jobs to employees over a specified period of time so that the cost of assignment including workforce and opportunity costs are minimized. Here, opportunity costs refer to any cost that might lead to reduction in employee productivity, work environment issues, etc. The authors incorporated boredom concept as a human characteristic into the JRSP by minimizing the cost of boredom in addition to the cost of assignment. This problem is structured as an integer-nonlinear multi-period assignment problem. The authors adjusted the ICA by applying a percentage of colonies to be involved in the assimilation process results in getting good solution. This study found that the ICA could improve the quality of a solution if it continues until full assimilation even after achieving the powerful grand. Instead, the termination time set to be the time that GA terminated its operators. Under this circumstance, the authors obtained a meaningful comparison between the performance of the GA and the ICA. The comparison indicated that the ICA performs better than the GA in terms of convergence rate because the ICA maintained a decreasing trend during its computation time, while the GA trend continued horizontally. Additionally the ICA yields a better quality solution than the GA.The assembly line balancing problem (ALBP) is a well-known decision making problem which aims to optimally partition (balance) the assembly work (tasks) among the stations with respect to some objective [18]. There are different types of assembly lines used in industries, but there has been recent interest in substituting the traditional straight assembly lines with U-shaped lines due to higher flexibilities and better workflows. The ALBP is known as a NP-hard problem and is usually modeled as multi-objective functions. Therefore, many heuristics have been developed to solve this problem.Bagher et al. [19] proposed an algorithm based on a combination of computer methods for sequencing operations for assembly lines (COMSOAL), a task assignment rules heuristic, and the ICA to solve the stochastic U-type assembly line balancing problem. In this study, the solution representation is similar to job scheduling problems, but each value of solution represents one assignment rule instead of representing a job. The major modification on the ICA in this work was to implement a novel assimilation mechanism based on degree of similarity between the colony and the imperialist. The initial step set a degree of similarity, which represents the percentage of similarity between colonies and its relevant imperialist. Then an 1×N array with same size of colony and imperialist was constructed in which its elements were all random variables with uniform distribution [0,1]. The elements of this array were then compared by measuring the degree of similarity. If the value of array was greater than the degree of similarity, then value changed to 1, otherwise it changed to zero. The position of the new colony array (colony assimilated by the imperialist) was determined based on the positions of value 1 and 0 in a binary array. If the position of binary array was 1, it was replaced with the value of the same position within the imperialist array, but if it was zero, it was replaced with the position within the colony array. Bagher et al. [19] used a Taguchi design to tune the ICA parameters. The performance of the ICA was compared against the GA for three different instance problems: small, medium, and large. The results indicated that the ICA could find the optimal solutions while using shorter computational times than GA.Lian et al. [20] introduced a modified ICA for solving the mixed-model U-line balancing and sequencing (MMUL/BS) problem. In fact, MMUL/BS solves line balancing (LB) problem and model sequencing (MS) problem simultaneously. This problem is also known as ALBP type II, which has two main aspects: mixed-model production and U-shaped assembly lines. Lian et al. [20] chose to represent each country as a solution but to the MMUL/BS problem in this work which contains two parts: LB and MS. The encoding scheme in this study was similar to the encoding scheme of scheduling problems that were reviewed in Section 4.1, but only LB coded by two sequences: task sequence (TS) and station sequence (SS). The main contribution of Lian et al. [20] was to introduce a third type of country: the independent country to the population of countries (initialization phase). An independent country was defined as a country which is neither imperialist nor a colony. By considering this change, an independent country tries to become imperialist by learning from all imperialists, while a colony tries to become either independent or imperialist by learning from its imperialist, and the behavior of the imperialists do not change in the sense that it tries to absorb the colonies toward itself. Under the concept of an independent country, the assimilation mechanism is changed. In fact, in this study, two assimilation mechanisms were implemented. One, used in previous studies, was the general assimilation process that occurs between a colony and its imperialist inside each empire. The second method, the new assimilation mechanism, occurs between an independent country and all imperialists over the empires.Zhou et al. [21] applied the ICA to solving the assembly sequence planning problem in which each assembly sequence is encoded into the country. Similar to Behnamian and Zandieh [10], Zhou et al. [21] used the GA's crossover and mutation operators in order to make the assimilation process applicable. They performed two crossover points on LB and MS arrays. The crossover procedure was exactly same as the GA crossover, but instead of selecting two parents in the GA, a colony and its imperialist was selected. By performing a two-point crossover, the colony and its imperialist exchanged properties with each other, so the new colony was more like its imperialist. Additionally, after performing the crossover operator, a mutation operator was used to implement the revolution strategy. For example, the randomly selecting two tasks and swiping their positions defined the mutation of TS in LB. By comparing their solution with the PSO and the GA, it was found that the ICA could improve the quality of the solution.Moradi and Zandieh [22] applied the ICA for minimizing variation in production rates of a mixed-model assembly line sequencing problem in just-in-time environment. The performance of the ICA was compared against the MGOA [23] and revealed that the ICA worked better than the MGOA in terms of quality of solution.The single facility layout problem (SFLP) is one of the well-known management problems in that aims to arrange a number of facilities on a straight line so that the weighted sum of the distance between all pairs of facilities is minimized. Lian et al. [24] employed the ICA to solve the SFLP. In this study, each country (solution) represented a permutation of facilities. Similar to Zhou et al. [21], two point crossovers were borrowed from the GA to make the general assimilation process applicable. Once the assimilation process formed the new colony, exchanging the position of two randomly chosen facilities performed the mutation.Shiripour et al. [25] proposed a mixed integer quadratic programming model for solving the multi-facility location problems in the presence of a probabilistic line barrier, then they used the GA and the ICA to tackle the problems computationally. The objective of this study is to locate n new facilities among m existing facilities, minimizing the summation of the weighted expected rectilinear barrier distance of the locations and new and existing facilities. In this study, each element of county's array represented the coordinates of a new facility. The assimilation mechanism is not changed in this study, in spite of other studies reviewed earlier. This is because the colony can move to any point through the (x, y) coordinate that leads to a feasible solution. Therefore, the assimilation mechanism does not need to be modified. The authors showed that the ICA generally outperforms the GA, in both computing time and quality of solution.The efficiency of the ICA was also examined by solving the hub-covering location problem (Mohammadi et al. [26]). They used single crossover point operator in GA to adopt the assimilation mechanism. Their results showed that the ICA dominates the GA in all type of instances in terms of both CPU time and variation.Sarayloo and Tavakkoli-Moghaddam [27] applied the ICA to solving dynamic cell problems within production planning. This problem was previousely solved by the PSO and the GA. The simulation results showed that the ICA yielded a higher quality solution.The traveling salesman problem (TSP) has drawn the attention of researchers as one of the fundamental discrete optimization problems. Yousefikhoshbakht and Sedighpour [28] solved this problem using the ICA, and the results indicated that the ICA is competitive with other evolutionary algorithms. It is also pointed out the ICA produced solutions very close to best known solutions for most of the instances.The ICA was also employed by Hosseini et al. [29] to deal with the Euclidian minimal spanning tree (EMST) problem. The EMST aims to find a spanning tree on a graph with edge weights corresponding to Euclidian distance, so that the cost is minimum. Since this is a binary optimization problem, assimilation mechanism may result in an infeasible solution. The authors used an integrality concept to tackle this problem. Decision variables (xij) whose values were greater than or equal 0.5 were rounded up to 1 and those whose values were less than 0.5 were rounded to zero. xij=1 indicates that the edge between pair (i, j) is a part of spanning tree. It is notable that, the authors applied the general (continues) version of the ICA to solve a discrete-search space problem with modifications to the representation of solution. The solution accuracy obtained by the ICA was compared against the LINDO commercial optimization package. It was demonstrated that the ICA provides an exact solution for small size problems.In addition to those sub-disciplines reviewed in Section 4, the ICA has been applied to other industrial engineering sub-disciplines (Table 1).Naimi Sadigh et al. [30] modeled the interaction between manufacturer and retailer in a supply chain through goal programming under two scenarios: the manufacturer-stackelberg (MS) model and the retailer-stackelberg (RS) model. They used the ICA with the new assimilation mechanism to solve the stackelberg games. The proposed novel assimilation mechanism was based on implementing a normal distribution concept. Based on this method, the amount of movement was determined by the normal distribution. The position of a new colony (xi) was obtained from xi=xi,imp+δi, where xi,impdenotes the position of imperialist and δidenotes the amount of movement toward imperialist distributed with normal distribution δi∼N(0, Δi), where Δiis the distance between a colony and an imperialist. The advantage of this approach was to encourage a symmetric search around the imperialist that reinforced the intensification property. In order to make a tradeoff between intensification and diversification, the authors used a diversification strategy such that a colony may move in its self-neighbor instead of its imperialist neighbor with a small probability.Talatahari et al. [31] introduced a chaotic Imperialist Competitive Algorithm (COAs). In this study, different chaotic maps were utilized to improve the assimilation process. The authors found that Logistic and Sinusoidal maps were the most effective chaotic maps to simulate the movement of a colony toward its relevant imperialist. The main advantage of applying a chaotic approach was that it could more easily escape from local optima than the stochastic optimization algorithms, and it also improved the global convergence. Readers may refer to Jun-Jie et al. [32] and Yang et al. [33] for more details.Nazari-Shirkouhi et al. [34] also used the general ICA to solve the integrated product mix-out sourcing problem. This problem is made by integrating two main sub-problems. First problem is optimizing the enterprise profit though utilizing the limited available resources and second one is to maximize the enterprise throughput within the determined product types [35]. The problem was modeled in the form of unconstrained minimization by adding penalty term into objective function. Their findings demonstrated that ICA reaches to global optimum after evaluating 300 solutions while the total search space contained (101)3 solutions, which is a great indication of ICA's capability in quick convergence.Computer engineering is another major discipline that has received attention of ICA researchers. Table 2summarized some important applications of the ICA in this area.Niknam et al. [36] proposed an efficient hybrid algorithm based on the ICA and K-means for optimum clustering N objects into K clusters. In this study, the ICA was utilized to overcome the local optima obstacles. The proposed algorithm then underwent several tests and its robustness was compared against other algorithms such as the ACO, PSO, GA, TS, and Honey Bee Mating Optimization (HBMO). Results obtained show that the ICA outperforms other evolutionary algorithms.Duan et al. [37] presented a novel algorithm based on integrating the chaotic system and the ICA to solve template-matching problem. For the case of template-matching problem, it was demonstrated that metaheuristic algorithms could easily be trapped to local minima. Hence, this research focused on the implementation of chaotic system with the ICA to prevent trapping into local minima. The results obtained indicated the effectiveness of the chaotic ICA over the general ICA.Razmjooy et al. [38] proposed a new algorithm based on the integration of the ICA and a neural network for skin color detection. Skin color detection has been widely used to detect and track human body parts, facial recognition, face detection, etc. The authors used neural network to handle the problem's constraints using multi-layer perceptron network and the ICA was employed to improve the quality of solution.Meysam Mousavi et al. [39] introduced a new model based on integrating the support vector regression (SVR) and the ICA for time estimation in new product development projects. SVR classifies as a new neural network technique that is usually employed to estimate the behavior of complex systems with high degrees of nonlinearity. In this work, the ICA was utilized due to the difficulty of selecting optimum parameters for SVR.Ahmadi et al. [40] proposed a new model based on integration of the ICA and the artificial neural network (ANN) to predict the permeability of a reservoir in one of the northern Persian Gulf oil fields in Iran. The ICA was used to determine optimal weights for their employed feed-forward artificial neural network. The results confirmed that the ICA-based neural network performed better than the gradient-decent based neural network.Tayefeh Mahmoudi et al. [41] introduced a new approach based on combining the ICA and grammar-encoding method to optimize the structure of ANN. In this study, grammar-encoding method was used to realize the structure of the ANN, while the ICA was employed for two major purposes: optimizing the weights of the ANN and training of the ANN. It was shown that the ICA is competitive with other well-known approaches have previously used for training and optimizing the ANN structure.Ebrahimzadeh et al. [42] proposed a new approach for recognition of control chart pattern, which included two main modules: clustering and classifier. In the clustering module, an integration of ICA and K-means algorithms were used to cluster input data. Additionally, implementing a mutation operator modified the assimilation process.Tayefeh Mahmoudi et al. [54] employed ICA to optimize the weights of Multilayer Perceptron (MLP) artificial neural networks. In this study, ICA obtained smaller mean square error (MSE) for both data training and testing data.Similar to industrial and computer engineering disciplines, the ICA is widely applied to solve problems that arise within mechanical engineering. Major works within this discipline are listed in Table 3.Some of the main applications of the ICA to the field of electrical engineering are listed in Table 4.This article has conducted study on a considerable number of papers that has been published in peer-reviewed journals, mainly dealing with the application of the ICA in industrial engineering domains. However, in order to analyze the trend of the application of ICA in different engineering disciplines, the numbers of refereed conference proceedings are also counted in this analysis.As shown in Fig. 12, there is an exponential increasing trend over time in the number of publications on using ICA in different engineering domains. Furthermore, 44% of all the studies dealing with ICA are related to industrial engineering, while computer engineering accounts for the second largest area (22%), shown in Fig. 13.According to Fig. 14, scheduling related problem has received the largest (41%) attention of researchers and facility layout related research is the second (19%) most popular area in applying ICA in industrial engineering domain.Similar to other metaheuristics, ICA has both advantages and some unavoidable shortcomings. Although there is no convergence proof for this algorithm, the results reported in this study confirms its competitiveness over other evolutionary algorithms in terms of convergence rate. This inference is based on the fact that competition among the empires will finally lead to a global empire unless the algorithm terminates within a certain number of iterations before arriving at a global empire. Table 5summarizes the strength and weaknesses of ICA.A notable feature of ICA is the ease of performing neighborhood movements in both continuous and discrete search spaces, while some other algorithms such as TS, ACO, have not been commonly used for continuous search space due to the difficulties of performing neighborhood movements. However, ICA can be singly applied to continuous optimization problems, but combining with other algorithms may result in better solutions. Ramezani and Lotfi [51] proposed a hybrid algorithm based on combining Evolutionary Algorithm (EA) and socio-political based Imperialist Competitive Algorithm for solving unconstrained continuous optimization problems.ICA is established based on systematical mathematical calculation which makes it easier for researchers to investigate of its convergence and robustness. It is constructed based on a new idea, inspired by socio-political process which is more intelligent than biological behavior [1]. The results that have been reviewed in this article indicate that it is a powerful alternative to optimize functions with large number of decision variables.Based on the inherent nature of the metaheuristics, it does not guarantee an optimal solution. Another issue that deserves attention is that ICA has more parameters in comparison to PSO, DE, and GA. Therefore, it is not easy to adjust the parameters, especially the deviation parameter of the assimilation process (θ). It is almost similar to GA in the sense that it may result in premature convergence, especially in the multimodal problems. To overcome this issue, different approaches can be undertaken such as preserving countries diversity.To date, a fairly large number of metaheuristic algorithms have been proposed as shown in Table 6. The metaheuristics, listed in Table 6, can be classified in several ways: existence of memory component, number of candidate solutions handled in each iteration, ability of parallelization, of objective functions’ dynamicity, degree of search – local versus global search, integrality of candidate solutions – partial versus complete candidate solutions, etc.The number of candidate solutions handled in each iteration, one of the mostly used criteria, divides the metaheuristics into two major groups: single-state metaheuristics and population-based metaheuristics. The examples of single-state metaheuristics are SA, TS, etc., where a single candidate solution – complete or partial is manipulated at a time. The candidate solutions are updated on specified events, and the algorithm continues until the stopping criterion is met. In population-based metaheuristics, a collection of candidate solutions are handled at one time. These candidate solutions are not independent in general. Population-based metaheuristics have some advantages over single-state metaheuristics; for instance, many near optimal solutions are returned in final stage and also perform better in difficult search space. It includes all the Evolutionary Computation techniques and Scatter Search method. Evolutionary Computation techniques can be categorized into two classes: Evolutionary algorithms (GA, DE, etc.) and Swarm intelligence methods (ACO, PSO, AIS, BO, CS, FA, GSA, IWD, etc.).It is important to have a comparative analysis among the metaheuristics in order to understand the individuals’ performances based on some common criteria. One of the basic criteria is to compare the complexity of the algorithms. Certainly, the one with simpler algorithm is superior compared to the other with more complexity, if two algorithms produce similar quality results. The algorithm with low complexity is easy to implement by practitioners, researchers, and easier to analyze and explain.At the very basic level, we can measure the simplicity of an algorithm by counting the number of steps of pseudocode required to describe it. Nevertheless, it is not particularly useful as pseudocode length may not reflect the algorithms’ inherent complexity in setting and handling the parameters. Therefore, it is more meaningful to compare by the number of parameters used in algorithms to understand their algorithmic complexity. These are the configurable components of an algorithm, which are set as constant or as functions of problem attributes. The parameters can be altered to improve the performance of the algorithms. Different metaheuristics use different number of parameters, which must be defined before the execution of the algorithm. Table 7lists the standard parameters used by some popular metaheuristic algorithms.These parameters, listed in Table 7, are minimum number of parameters used by these algorithms, but it (number of parameters) varies based on the type of problem handled by that particular algorithm. In general, metaheuristics using more parameters are more complex. Tuning and understanding large number of parameters makes it much harder to implement. Again, parameter interactions are also important in determining the complexity of the algorithms. It may result in multiple locally optimal solutions in the parameter space that affects solution quality.Although the parameters have significant effect on the algorithmic simplicity, there are few other areas of interest to consider while comparing the metaheuristics. Table 8summarizes a comprehensive comparison with the popular metaheuristics with ICA.The above mentioned analyses deliver a useful guide in terms of global perspective to understand the performance of ICA compared to other popular metaheuristics. Based on these analyses, it can be claimed that ICA is an important metaheuristic algorithm with some prominent properties; it has indeed some inherent drawbacks like other well-known metaheuristics. Furthermore, the importance of ICA is obvious from its emergence; the research and application of ICA is exponentially increasing every year.ICA has received significant interest within the short time period since its advent in 2007, and it has successfully been applied to a wide range of combinatorial optimization problems. However, some aspects of ICA are still unexplored. This section aims at motivating the researchers to focus on such unexplored areas of this metaheuristic, so that the application of ICA becomes more homogenous in several different areas over the coming years. In the following, a list recommendation is given for future research.In most of the papers that have been reviewed, ICA is implemented without conjunction with other heuristic algorithms. However, there exists some related work; for instance, in [10] authors used the main GA operators to make the assimilation mechanism feasible. In future works, the ICA can be hybridized with some well-known algorithms such as PSO, ACO, TS, greedy search algorithm, etc. This hybridization can be implemented in different ways. For example, PSO or ACO can be employed as starting point to generate a good initial solution and rest of the search can be taken care by the ICA. In some cases, ICA can be used as a starting point to generate an initial solution and others can be used conduct the search. Furthermore, the deterministic local search (LS) may be hybridized into the ICA as a complementary tool to promote the capability of exploitation and produce high quality solutions. Additionally, it may be useful to improve the search speed.AIS is also a promising choice to couple with the ICA in order to maintain diversity in population (countries) through the measurement of similarities among the solution strings and employing the concept of entropy.The efficiency of the ICA greatly depends on how its parameters are being tuned. The Taguchi design of experiment approach has been used by many researchers to tune its parameters [19]. However there are some other efficient means that might be implemented such as neural network, machine learning algorithms, and specifically fuzzy adaptive approach. For example, let us consider the assimilation process for a problem with continuous search space. A fuzzy controller can be used to adaptively adjust the deviation parameter over the search process. By defining different fuzzy rules, the deviation parameter can be set to large enough at the beginning of the search to help facilitating the exploration, and then decreasing gradually as it reaches to the end to help enforcing the exploitation.Parallel and distributed computing has been widely used to design multicore processes, communication networks, data storage, etc. Parallel algorithms are usually implemented for several reasons: (1) speed up the search, (2) improve the quality of solution, and, (3) tackle large-scale problems. Due to the advantage of parallel algorithms, the parallel ICA model can be designed via incorporating other metaheuristic algorithms.Many real-world industrial domains are concerned about large and complex optimization problems involving various objectives. Mohammadi et al. [52] proposed a multi-objective ICA for a capitated hub covering location problem. Their method is constructed based on a linear aggregation (or, weighted) method by combining various objectives into a single objective function. Although this method is easy to implement, however it does not usually find Pareto front points of interest. Thus, a potential research effort can be undertaken to design multi-objective ICA with capability of generating Pareto optimal solutions, such as ɛ constraint or Pareto sampling techniques.

@&#CONCLUSIONS@&#
Like other evolutionary algorithms, ICA is becoming an important tool for optimization and other complex problem solving. It is an intelligent computational technique for finding global minimum and maximum of multimodal functions. Imperialist Competitive Algorithm works on theory of socio-political evolution. The ICA has general principle which can be easily used in a large range of fields. Many applications of ICA are given in the literature, like scheduling, facility layout, neural network, assembly line balancing, network flows, data clustering, template-matching, etc. The results reported in this review provide evidence of performance achievement of the ICA in terms of both computing time and quality of solution. This claim is established based on reviewing the results of comparisons between the ICA and some other well-known evolutionary algorithms.Since this is the first review on the application of the ICA, we are certain that this work will be advantageous for other researchers who are going to develop or apply the ICA to their own problems, as well as for establishing a reference point for new research endeavors.