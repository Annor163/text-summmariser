@&#MAIN-TITLE@&#
Simultaneous-fault detection based on qualitative symptom descriptions for automotive engine diagnosis

@&#HIGHLIGHTS@&#
A novel fuzzy and probabilistic simultaneous-fault diagnosis (FPSD) framework for engine fault detection.An attempt at applying fuzzy logic and probabilistic classifiers together for simultaneous-fault diagnosis.A pairwise coupling strategy is applied to enhance the diagnostic accuracy.A case study for demonstrating the effectiveness of the FPSD framework.Comprehensive comparisons among the FPSD framework with existing methods.

@&#KEYPHRASES@&#
Simultaneous-fault diagnosis,Fuzzy logic,Probabilistic classification,Decision threshold optimization,Automotive engine diagnosis,

@&#ABSTRACT@&#
Practical automotive engine fault diagnosis in an automotive service center is usually performed by analyzing the qualitative symptom descriptions provided by the vehicle owner. However, it is a non-trivial and time-consuming procedure because; (i) the qualitative symptom descriptions are usually collected through a questionnaire containing binary, numerical, and vague data that are difficult to digest; (ii) the engine malfunctioning may not be caused by a single-fault only, but several single-faults simultaneously (i.e., simultaneous-faults). Therefore, automotive mechanic usually requires several days or even weeks to diagnose and fix the engine. To improve this non-trivial and time-consuming procedure of engine fault diagnosis for the mechanic, a new framework of simultaneous-fault diagnosis is proposed in this paper by integrating fuzzification, pairwise probabilistic multi-label classification, and decision-by-threshold. This framework is called fuzzy and probabilistic simultaneous-fault diagnosis (FPSD). Compared to traditional frameworks, FPSD requires much fewer training cases of costly simultaneous-faults while it can probabilistically diagnose both unseen single-faults and simultaneous-faults based on qualitative symptom descriptions. To evaluate the performance of FPSD, a comparative study was conducted over common classification techniques. Experimental results show that the proposed framework can effectively alleviate the aforementioned issues.Decision-by-thresholdDecision threshold optimizationFuzzy and probabilistic simultaneous-fault diagnosisFuzzy neural networkFuzzificationHierarchical fuzzy neural networkMulti-label classificationOne-vs.-all strategyPairwise coupling strategyProbabilistic neural networkPairwise probabilistic MLCProbabilistic support vector machinesSingle-fault diagnosisSimultaneous-fault diagnosisSingle-label classificationTraining dataset of single-faults onlyTraining dataset of simultaneous-faults onlyTest dataset of single-faults onlyTest dataset of simultaneous-faults onlyValidation dataset of single-faults onlyValidation dataset of simultaneous-faults onlyBinary classifier for the jth faultProbabilistic classifier for the jth faultProbabilistic classifier for the jth fault against the kth faultNumber of faultsSample datasetDataset of single-fault patternsDataset of simultaneous-fault patternsF-measureProbabilityFuzzified sample datasetFuzzified dataset of single-fault patternsFuzzified dataset of simultaneous-fault patternsFuzzified pattern of unknown input xFuzzified pattern of the ith training data xijth true fault of xiTrue fault vector of xiUnknown input patternith raw training patternjth predicted fault of xiPredicted fault vector of xiDecision thresholdOptimal decision thresholdHeaviside step functionProbability vector of faults for a pattern xProbability of the jth fault for a pattern xProbability of the jth fault against the kth fault for a pattern xDefuzzification threshold

@&#INTRODUCTION@&#
Automotive engine diagnosis is essential for in-use vehicle inspection and maintenance [1], but it is very difficult to perform because a modern automotive engine is a complex integration of thermofluid, electromechanical and computer control systems [2]. Possible malfunction may occur on different engine components which is not easy to detect. Although onboard diagnostic tools [3] are available for prompt engine fault diagnosis in automotive service centers or workshops, these tools are only applicable to the engine parts with transducers. For those mechanical engine parts without transducers, the automotive mechanics usually require the vehicle owner to provide the qualitative symptom descriptions of the engine faults (e.g., ‘Sluggish acceleration?’ with description ‘accelerate very slow’; ‘Backfire in exhaust pipe?’ with description ‘sometimes’) and then try to diagnose the engine faults according to service manuals and also their own experience. Hence, the scope of the study is related to the diagnosis of mechanical engine parts without transducer that can only be identified based on expert knowledge. Those engine faults that can be detected by onboard diagnostic systems and scan tools are not within the scope of current study. Throughout this paper, engine faults refer to the faults caused by mechanical engine parts without transducer. Accordingly, an effective diagnostic system of mechanical faults for in-use vehicle engines based on the provided qualitative symptom descriptions is very necessary in automotive service centers or workshops because ineffective diagnosis will incur longer maintenance time and unnecessary waste of manpower. The cost of time and manpower will transfer to both the automotive mechanics and the consumers. In addition, an engine malfunction is often caused by more than one individual fault (i.e., simultaneous-faults). This is a common phenomenon because vehicle owners always ignore the importance of maintenance even when there is an engine fault, as long as the engine is not significantly affected. As a result, the problem becomes a simultaneous-fault diagnosis (SmFD) and the development of such kind of diagnostic system is the main objective of this study.In the current literature, automotive engine diagnostic methods are mainly classified into three categories [4,5]: model-based, data-driven and knowledge-based methods. Model-based diagnostics are very accurate, but to identify the appropriate values of the model parameters is very time-consuming and labor-demanding [6]. Thus, model-based method is too expensive to comprehensively apply in practice [5]. Moreover, due to the different natures of faults and the modeling uncertainty, no single model-based approach can diagnose all the faults [7]. In other words, many models for various types of engines are required. Data-driven engine diagnosis methods, on the other hand, rely on signal-based diagnosis or engine oil analysis. Signal-based diagnosis is recently the most popular method [8–15] because it is very suitable for laboratories and the development of automotive scan tools, computerized engine analyzers, engine condition monitoring and on-board diagnostic systems. Its main drawback is that many signal patterns are engine type dependent. That is, the construction of a general diagnostic system requires many training patterns from various engine models. In addition, the complicated process of signal acquisition and the expensive equipment are also barriers of this kind of approach. Regarding the oil analysis approach [16], the elemental analysis of the engine oil is obviously not easy to be carried out in automotive workshops. The sample data for constructing the diagnostic system is also dependent on the oil manufacturers and engine type. Nevertheless, the most critical drawback of these approaches is that, they cannot deal with the qualitative symptom descriptions because the descriptions are usually uncertain and vague that cannot be easily represented in numerical form. Therefore, both the signal-based diagnostics and engine oil analysis become impractical for automotive service centers or workshops.Knowledge-based methods, by contrast, have the capability of handling the qualitative symptom descriptions. The early development in this category is the decision tree approach by Gelgele and Wang [17] that makes a diagnosis through a sequence of questions and answers. However, on most vehicle diagnostic problems, the diagnostic knowledge is limited and incomplete to build a decision tree due to the complexity of modern vehicles [18]. In recent decade, a famous technique called fuzzy logic provides a generalized solution to qualitative fault diagnosis [18–22]. It analyzes the diagnostic problems via some linguistic descriptions based on general and/or specific qualitative expert knowledge, which is very suitable for automotive service centers or workshops. Applications of fuzzy logic to engine fault diagnosis can be found in the studies of Lu et al. [18] and Çelik et al. [19]. Nevertheless, in order to construct a reliable fuzzy logic system, multiple sources of qualitative knowledge need to be digested and transformed into a set of complicated fuzzy rules which are very difficult to define accurately [23]. Azarian et al. [5,24], therefore, proposed a car enterprise information system that integrates the technician feedback, heuristic knowledge and model-based knowledge from the database and knowledge of the car manufacturers. The work is very good, but their main achievement is to diminish the time of diagnosis sessions in the workshop only. Furthermore, the enterprise information system is not suitable for non-factory automotive service centers or workshops because the access to the database and knowledge base of the car manufacturers is not available. In a nutshell, all the existing methods for engine fault diagnosis cannot perfectly match the requirements of service centers or workshops.To address the aforementioned limitations, fuzzy network-based classifier (e.g., fuzzy neural network (FNN)) [25–28] is employed in this study for engine fault detection based on qualitative symptom descriptions because the complicated digestion of qualitative knowledge into fuzzy rules can easily be handled with the use of neural network. However, most of the current network-based classifier does not take SmFD into account. To perform SmFD, an early literature [29] proposed a hierarchical fuzzy neural network (HFNN) which can handle multiple incipient faults based on monitoring signals. HFNN is constructed by several stages of FNN. Each of the HFNN stage is constructed with a set of FNNs. However, HFNN suffers from the drawback that it requires a large amount of training data of simultaneous-faults. In addition, its architecture becomes too complex to extend to even medium scale because a large amount of FNNs must be constructed in every HFNN stage. Eslamloueyan et al. [30,31] pointed out that the hierarchical neural network can be at most applied to triple-fault patterns. Therefore, the framework of HFNN is too difficult to put into current practice.Another way to process SmFD is with the use of single-label classification (SLC) framework, where one classifier is built for each fault, regardless single- or simultaneous-fault. It is obvious that for SLC, a large amount of classifiers and their corresponding training data of simultaneous-faults are required. Moreover, the training data of simultaneous-faults are usually much more costly and difficult to acquire than that of single-faults in many practical applications. In a recent literature [32], the problem of SmFD was solved using multi-label classification (MLC) where multiple classes can be assigned to a pattern. In this literature [32], the MLC framework was also compared with the SLC framework, and showed that MLC is superior to SLC in terms of formulation, expandability, and size of training data, although SLC can general provide a higher accuracy for some simultaneous-fault cases. Since MLC can overcome the aforesaid problems raised by SLC and also be capable of extending to medium or even large scale, it is considered in this study.One deficiency of traditional MLC is that, it employs simple one-vs.-all (OVA) strategy that does not consider the issue of pairwise correlation (i.e., the correlation between every pair of faults or labels). Hastie and Tibshirani [33] showed that, by considering pairwise correlation, the classification accuracy can be significantly improved. Moreover, the qualitative symptoms provided by the vehicle owners may not always be the major factor of the corresponding engine faults. For example, for a symptom of “difficult-to-start”, it is highly likely that a fault of “idle-air valve malfunction” is occurred, but sometimes it may also be caused by a fault of “defective fuel pump system”; the probability of occurrence of “idle-air value malfunction” is not 100% but perhaps just 70%. Thus, it is better to present the occurrence of an engine fault in terms of a probability instead of a binary value (“yes or no” answer). A popular method called pairwise coupling strategy (PCS) [34,35] works perfectly on probability estimates and can alleviate the pairwise correlation issue. Consequently, PCS is employed in this study and combined with MLC using a probabilistic network-based classifier to form a pairwise probabilistic MLC (PPMLC). Probabilistic diagnosis can lead to the following advantages: (i) closer to physical reality [36]; (ii) the probabilities of faults can serve as an important quantitative measure for user decision in addition to the binary diagnostic results; (iii) when a predicted fault is incorrect, probabilities of the faults can provide the user some hints to trace the next possible fault. Although the probabilities of engine faults can be obtained, these probabilities only indicate the chance of occurrence of the engine faults. To determine the occurrence of the engine faults, a decision threshold ɛ is necessary to apply to those probabilities (e.g., Fault A occurs if P(Fault A)>ɛ). The decision threshold can be subjectively determined by human experts and also objectively determined through an optimization over sample data. This step is called decision threshold optimization (DTO) as described later.To summarize the aforesaid situations and requirements, a new SmFD framework for automotive engine fault diagnosis in automotive workshops called fuzzy and probabilistic simultaneous-fault diagnosis (FPSD) is proposed in this study. The proposed FPSD basically consists of three components: fuzzification (FZ), PPMLC, and decision-by-threshold (DT). The workflow of the proposed FPSD is shown in Fig. 1and the details are given in the following sections. This novel framework can practically handle qualitative symptom descriptions using fuzzy logic and performs SmFD using probabilistic classifier at the same time, whereas the existing diagnosis framework only consider independently either fuzzy inference for qualitative symptom descriptions, or simultaneous-fault engine diagnosis. Besides, the proposed FPSD can provide probabilities of engine simultaneous-faults in addition to the final diagnostic decision. By referring to the probabilities of faults, the automotive mechanics can troubleshoot the engine faults more efficiently.The rest of this paper is organized as follows. In Section 2, existing frameworks for SmFD are reviewed and details of the proposed framework FPSD are presented. To demonstrate the effectiveness of the proposed framework, a case study was conducted in Section 3, in which the data sampling procedure and the application of the proposed FPSD are described. For evaluation purpose, a comparative study of FPSD against existing frameworks is provided in Section 4, along with the corresponding analysis and discussion of results. The conclusions and future works are finally drawn in Section 5.To provide a better understanding of the proposed FPSD, details of the existing framework for SmFD are briefly reviewed, followed by the details of FPSD.There are three existing framework for SmFD: HFNN, SLC, and MLC. Since HFNN is not suitable for the current practice of SmFD, only SLC and MLC were compared with the proposed FPSD in this study. For this reason, the details of SLC and MLC are briefly reviewed in the following sub-sections.SLC is actually a single-fault diagnosis (SFD) that considers every combination of single-faults artificially as an individual label. For example, given two single-faults: Fault A and Fault B, there are totally three combinations of faults, where Fault A is referred to Label 1, Fault B as Label 2, and Faults A plus B are artificially considered as Label 3. It can be imagined when the number of single-faults d is large (e.g., d=12), the number of combinations of single-faults increases exponentially so that a large amount of artificial labels must be made in SLC.Given a sample D={(xi, ti)} of N cases for a d-class problem for i=1 to N where d is the number of single-faults, xi∈Rnis an n-dimensional input pattern, ti∈{1, …, 2d} is the corresponding label of xi, in which the 1st label indicates a normal condition (i.e., no fault occurs). Then, a function fSLC is constructed for SLC such that the predicted label, or decision, y for an unknown input x is:(1)y=fSLC(x)∈{1,…,2d}Hence, it can be seen that there are 2dpossible labels for a d-class problem, out of which d+1 labels are the single-fault labels plus the normal condition, but up to 2d−(d+1) artificial simultaneous-fault labels. For example, for a problem with 5 single-faults, there are 25=32 labels, out of which at most 32−6=26 labels are artificially defined for possible simultaneous-faults. Alternatively, there are up to 2dclassifiers in fSLC in which every classifier corresponds to one of the 2dlabels. Obviously SLC is prohibitive for even medium size of d in terms of training time and the number of required simultaneous-fault training patterns.MLC can be considered as a generalization of SLC. In SLC, each instance is associated with only one single label, but in MLC, multiple labels are assigned to each instance. Suppose the sample is reconstructed as D={(xi, ti)}=D1∪Dsfor i=1 to N, where D1 is the set of single-fault patterns, Dsis the set of simultaneous-fault patterns, xi∈Rnis the input pattern, and ti=[ti1, …, tid]∈{0, 1}dis the vector of fault labels of xiin which tij∈{0, 1} for j=1 to d, then a function fMLC is constructed for MLC. Within fMLC, one-vs.-all (OVA) splitting strategy [32] was used so that d binary classifiers Bjwere constructed for j=1 to d. Every classifier Bjsimply classifies if an unknown pattern x belongs to the jth fault or not. Hence, there is a significant reduction of number of classifiers from 2dto d only. In addition, the training phase of Bjinvolves the set of single-fault patterns D1 only while the set of simultaneous-fault patterns Dsis not required. The decision vector y for unknown pattern x is obtained from fMLC as follows:(2)y=fMLC(x)=[θ(B1(x)),…,θ(Bd(x))]∈{0,1}dwhere Bj(x)∈R is the raw output value of the jth SVM classifier, and θ is a Heaviside step function, i.e., for z∈R, θ(z)=1 if z≥0 and θ(z)=0 otherwise. Note that y=[0, …, 0] indicates x is normal (i.e., without any fault).The FPSD framework is proposed by modifying the MLC framework. In traditional MLC, the pairwise correlation between the labels is not considered. To deal with this issue, the popular PCS [33,34] is applied to improve the classification accuracy. Furthermore, by probabilistic outputs, the probabilities of faults can be provided as additional information for user decision. Typically, probabilistic neural network (PNN) was selected for probabilistic classification. However, PNN has the drawbacks of long execution time and insufficient accuracy [37] for medium to large dataset. In the past decade, support vector machine (SVM) became a promising technique because of its ease of use, short training and execution time, and high accuracy. In addition, a probabilistic version of SVM (PSVM) [38] was developed which inherits the advantages of SVM while providing probabilistic outputs. Therefore, both PNN and PSVM were employed to construct the probabilistic classifiers as a comparison in this study and to demonstrate the generalization of the proposed framework.Similar to MLC, considering a sample D={(xi, ti)}=D1∪Dsfor i=1 to N, where xi=[xi1, …, xin] is a set of linguistic variables representing qualitative symptom descriptions, ti=[ti1, …, tid] is a binary vector of d labels of the corresponding single-faults of xiand tij∈{0, 1} for j=1 to d, a function fFPSDis then constructed using D1 to map an unknown input x to a decision vector y:(3)y=fFPSD(x)∈{0,1}dAs shown in Fig. 1, the proposed FPSD involves three steps: FZ, PPMLC, and DT. FZ is to transform the uncertain qualitative symptom descriptions into some numerical values; PPMLC is to overcome the deficiency of traditional MLC with the use of probabilistic classifiers; and DT is to determine the occurrence of the engine faults with the use of a decision threshold. Therefore, fFPSD can be defined more precisely by these three steps:(4)Step1:s=FZ(x)∈Rn(5)Step2:ρ=PPMLC(s)∈[0,1]d(6)Step3:y=DT(ρ)∈{0,1}dwhere s is the fuzzified input pattern of x after applying appropriate membership functions, ρ is a d-dimensional probability vector representing the probabilities of d faults for x, and y is the binary decision vector for x. The working details of the three steps are explained in the following sub-sections.Since the qualitative symptom descriptions from the vehicle owner is mostly in uncertain form such as “Very difficult”, “Difficult”, “Fair”, “Easy” and “Very easy”, fuzzification is necessary to transform the descriptions into numerical values through a set of fuzzy membership functions. For m=1 to n, xmis the mth qualitative symptom in the input pattern x=[x1, …, xn]. Assume the universe of xmis A={v1, …, vu} where u is the number of possible descriptions for xm, the fuzzy set for xmcan be expressed as:(7)A=μA(v1)v1+μA(v2)v2+⋯+μA(vu)vuwhere μA(·) represents the user-defined membership function. Following this procedure, a different fuzzy set is defined for every qualitative symptom xm.After applying FZ to D={(xi, ti)}=D1∪Ds, a set of truth vectors S={(si, ti)}=S1∪Ssis produced where si=[si1, …, sin] and sim∈[0,1] indicates the truth value of the mth qualitative symptom for m=1 to n. Similarly, S1 and Ssrepresent the sets of truth vectors of single-faults and simultaneous-faults respectively. The training dataset S1 containing solely single-faults is selected to train a set of probabilistic classifiers in PPMLC. Then, PPMLC takes an unknown truth vector s as input and produces a probability vector ρ=[ρ1, …, ρd] where d is the number of the single-fault labels. Here, ρj=P(j|s)∈[0,1] denotes the probability that s belongs to the jth label for j=1 to d. Note that every ρjis an independent probability and hence Σρj≥1. This is an important nature for PPMLC.As mentioned, PCS was employed to take the pairwise correlation between classes into account. Traditionally, given a d-class classification problem, the OVA strategy constructs d individual probabilistic classifiers Cjfor j=1 to d. Every Cjis trained with all training data in S1 using any probabilistic modeling method (e.g., PNN or PSVM) in which the training data with the jth label are considered as positive while the training data with the other labels are considered as negative. Then, Cjtakes an unseen truth vector s and produces the probability that s belongs to the jth label, i.e., Cj(s)=ρj=P(j|s). However, in PCS, every Cjis constituted by d−1 pairwise probabilistic classifiers Cjk, k=1 to d, and k≠j as shown in Fig. 2. In general, each Cjkcan be any probabilistic classifier (e.g., PNN, or PSVM) which estimates the pairwise probability that an unknown truth vector s belongs to the jth label against the kth label, i.e., Cjk(s)=P(j|s, j or k). Since Cjk(s) and Ckj(s) are complementary (i.e., Cjk(s)=1−Ckj(s)), there are totally d(d−1)/2 pairwise classifiers in PPMLC.There are several methods [34] for PCS, which are, however, only suitable for SFD because of the constraint Σρj=1. Since the nature of SmFD is that Σρj≥1, a simple PCS is proposed in this study for SmFD as follows:1.Every Cjkis trained only by the training data with the jth and kth labels.Let ρjk=Cjk(s)=P(j|s, j or k) be the pairwise probability of the jth label against the kth label for an unknown truth vector s, where Cjk(s) is estimated using PNN or PSVM. Then, ρjis calculated as:(8)ρj=Cj(s)=∑k=1:k≠jdnjkCjk(s)∑k=1:k≠jdnjk=∑k=1:k≠jdnjkρjk∑k=1:k≠jdnjkwhere njkis the number of training data with the jth and kth labels.Hence, the probabilities ρjcan be more accurately estimated from ρjk=Cjk(s) because the pairwise correlation between the labels are taken into account. The procedure of the PCS is summarized in Fig. 2.After probabilistic classification, a probability vector ρ=[ρ1, …, ρd] indicating the probabilistic occurrence of the faults is produced. At this stage, the diagnosis system can provide the probability vector ρ to the user as a quantitative measure for reference and further use. Nevertheless, a decision vector y indicating the multi-label decision of fault diagnosis is desired. By introducing a decision threshold ɛ, y can be produced from ρ:(9)y=DT(ρ)=[y1,y2,…,yd]=[ε(ρ1),ε(ρ2),…,ε(ρd)]with(10)ε(ρj)=1ifρj≥ε0otherwise,forj=1todwhere ɛ∈(0, 1) is a user-specified decision threshold and yjindicates s belongs to the jth label or not. For example, if ɛ=0.5 and ρ=PPMLC(s)=[0.72, 0.42, 0.82, 0.28, 0.86], then y=DT(ρ)=[1, 0, 1, 0, 1]. Therefore, s is diagnosed as simultaneous-faults (1, 3, 5). Note that y=[0, 0, 0, 0, 0] indicates no fault has been found and s is diagnosed as normal.It is obvious that the value of the decision threshold ɛ will greatly affect the classification accuracy. For a situation without any prior information, the best estimate of ɛ may be simply set to 0.5, i.e., the occurrence of a fault is considered if its probability is at least 0.5. However, since the value of ɛ is application-specific, it is more preferred to determine the optimal ɛ* via a DTO step under a validation dataset. In this study, a famous direct search method, namely particle swarm optimization (PSO) [39], was employed to optimize ɛ by using an independent validation dataset.It can be noticed that, for the proposed FPSD, if the engine is caused by a single-fault, say, the jth fault, s contains only the symptoms of the jth fault. Then, in ρ, only the corresponding probability ρj≥ɛ*, resulting in only yj=1 in the decision vector y while all other yk=0, k≠j. In other words, ∑yj=1 and hence a single-fault is detected. For the case that the engine is caused by two simultaneous-faults (e.g., the jth and kth faults), s is constituted by the symptoms of the jth and kth faults. These symptoms may be overlapping or inter-distorted. In the current diagnostic system, probabilities are employed to give the similarity of s against the jth and kth faults by Cjand Ckrespectively. If their symptoms are not highly overlapping or inter-distorted, there is a high chance that both the corresponding probabilities ρj, ρk≥ɛ*. Under this circumstance, yj=1 and yk=1, making ∑yj≥1, so that a simultaneous-fault can be detected. The mechanism is similar for three or more simultaneous-faults. By combining these cases, the proposed FPSD can diagnose both single-fault and simultaneous-faults using classifiers trained with single-faults only.To demonstrate the effectiveness of the proposed FPSD, a case study was conducted. The procedure for the collection of real world sample data is first described. The FZ process of the collected data and the training of the PPMLC are then presented. The method for evaluating the proposed FPSD is also discussed in this section.The first step in the case study was the collection of qualitative symptoms and their corresponding engine faults for constructing the classifier. The qualitative symptom description could be collected from vehicle owners by the mechanics through a questionnaire. However, there is no general format of a questionnaire because every automotive service center has its own design according to the availability of equipment and the experience of its mechanics. Moreover, the engine faults are slightly different by regions due to the factors of choice of fuels, climate, design of road, and driving pattern. For instance, the gasoline octane available in Macau is 98 only, and the coldest month in Macau is January, with average monthly temperature 14.5°C, so the fuel quality and the cold-weather start issues are not important concerns to the local service centers in Macau. Therefore, as an illustrative example, the sample data was collected from local automotive service centers in Macau, and a total of five experienced mechanics were consulted. In other words, all data are real industrial data.As mentioned in Section 1, those engine faults that can be detected by onboard diagnostic systems or scan tools are not within the scope of current study. Hence, only those engine faults that cannot easily detected by onboard diagnostic tools were utilized. Totally 540 cases including both single-faults and simultaneous-faults were provided by the mechanics. In fact, each mechanic came out with different faults even for the same set of qualitative engine symptoms, so the network-based classification appears to be a good approach to summarize the expert knowledge. Tables 1 and 2provide the common symptom descriptions and engine faults that are available in the sample dataset, whereas Table 3summarizes the relationships between the symptoms and the possible engine faults. Each row of Table 3 reveals that one symptom can be associated with one or more possible faults, indicating the difficulty of engine fault diagnosis and the necessity for SmFD.In the current case study, there are totally twelve symptoms (n=12), which could be expressed as a vector of linguistic variables x=[x1, x2, …, x12]. However, these linguistic variables were difficult to represent by numerical values. Table 1 reveals that the symptom description can be categorized into three types: multiple-choice for x1–x9, numeric for x10, and binary for x11 and x12. Therefore, the first step in FPSD is to transform every symptom to a corresponding truth value by using fuzzy logic. According to the domain knowledge of some automotive mechanics and reference handbook [25], various membership functions for the inputs are defined below:x1:'Difficult-to-start'=1unabletostart+0.7abletocrankbutcannotstart+0.3immediatelystallafterstrating+0normalstartx2:'Stallonoccasion'=1stall+0.7severelyunstableenginespeed+0.3unstaleenginespeed+0stableenginespeedx3:'Backfireduringacceleration'=1alwaysbackfire+0.5sometimesbackfire+0normalaccelerationx4:'Unstablespeedormisfire'=1misfirefrequently+0.7enginejerk+0.3unstableengineidlespeed+0stableengineidlespeedx5:'Sluggishacceleration'=1misfiringduringacceleration+0.7unabletoaccelerate+0.3accelerateveryslow+0normalaccelerationx6:'Knockingduringacceleration'=1serious+0.5slight+0nox7:'Backfireinexhaustpipe'=1alwaysbackfire+0.5sometimesbackfire+0nobackfirex8:'Checkenginelightison'=1on+0.5lightgoesonandoff+0offx9:'Abnormalcoolanttemperature'=1abovenormal+0.5belownormal+0normalx10:'Vehiclehastravelled__kmsincelastengineoilchange'=1≥40,000+0.740,000−20,000+0.520,000−10,000+0.310,000−5,000+0≤5,000x11:'Poorfuelmileage'=1yes+0nox12:'Oilindicatorison'=1yes+0noWith these membership functions, the qualitative symptom descriptions x can be fuzzified to the truth vector s. For example, if the qualitative symptom descriptions are:x1:'Normalstart'→s1=0x2:'Severelyunstableenginespeed'→s2=0.7⋮ ⋮ ⋮x12:'Oilindicatorison'→s12=1.Then, the corresponding truth vector becomes s=[s1, s2, …, s12]=[0,0.7, …, 1].There are twelve possible engine faults (d=12) in the present case study. According to the PCS procedure mentioned in Section 2, the maximum number of pairwise probabilistic classifiers Cjkis 12(12−1)/2=66. To train a Cjk, say, j=1, k=3, the set of truth vectors {(si, ti)|ti1=1 or ti3=1} corresponding to either Fault 1 or Fault 3 are selected because C13 is used to classify either Fault 1 or Fault 3. A more general workflow of training pairwise classifier Cjkis depicted in Fig. 3.After all Cjkare trained, the probability ρjof occurrence of the jth fault for an unknown symptom truth vector s=FZ(x) is calculated by using Eq. (8). For example, in Eq. (8)ρ2=C2(s)=∑C2k(s)=∑ρ2kfor k=1–12, k≠2, where the pairwise classifiers C2kare employed. Note that C22 is not necessary in the calculation and in fact it is not trained because j≠k. After every ρjis calculated for j=1–12, the probability vector ρ=[ρ1, …, ρ12] can be obtained. Finally, by adopting the subsequent DT procedure as described in Section 2, a final decision vector y=[y1, …, y12]=DT(ρ) can be obtained. The optimal decision threshold ɛ* in DT is determined via the DTO step in Section 2. The procedure of the engine fault diagnosis is summarized in Fig. 4.In order to verify the effectiveness of the proposed FPSD, models was constructed under different combinations of frameworks (SLC, MLC, FPSD) and classifiers (NN, PNN, SVM, PSVM) for a comprehensive comparison. PNN and PSVM were used in the models to construct a set of probabilistic classifiers for comparison. The traditional classifiers, NN and SVM, were also employed to illustrate the importance of probabilistic classifiers and PCS. On the other hand, there are two major different components between MLC and FPSD: PPMLC and DTO. The effectiveness of these components is also evaluated. The details of the model settings and the evaluation performance index are discussed in the following sub-sections.Traditional evaluation of classification accuracy only considers exact matching of the decision vector y against the true vector t. This kind of evaluation is, however, not suitable for MLC framework where partial matching is preferred. Therefore, a well-known and common evaluation called F-measure [40] is employed. F-measure is mostly used as performance evaluation for information retrieval systems where a document may belong to a single or multiple tags simultaneously, which matches the nature of our current study. By F-measure, the evaluation of both single-fault and simultaneous-fault test cases can be appropriately done. To define F-measure F, two concepts of precision (E) and recall (R) are used [40] so that(11)F=2ERE+Rwhere E and R are originally designed for single-fault classification only, but can be extended to handle MLC [41]. For a given test set S={(si, ti)} of Ntsingle-fault cases and simultaneous-fault cases, i=1 to Nt, j=1 to d,(12)E=∑j=1d∑i=1Ntyijtij∑j=1d∑i=1NttijandR=∑j=1d∑i=1Ntyijtij∑j=1d∑i=1Ntyijwhere yi=FPSD(si)=[yi1, yi2, …, yid] and ti=[ti1, ti2, …, tid] are the predicted decision vector obtained from the diagnostic system and the true decision vector from the test dataset S, respectively, for a test case siand ∀i, j yij, tij∈{0, 1}. Substituting Eq. (12) into Eq. (11), the following F-measure F can be obtained:(13)F=2∑j=1d∑i=1Ntyijtij∑j=1d∑i=1Ntyij+∑j=1d∑i=1Nttij∈[0,1]Generally, the higher the F-measure, the better the accuracy is.To assess the performance of the models, the 540 collected cases (sample dataset D) were first fuzzified using the membership functions in Section 3.2. After the corresponding set of truth vectors S=FZ(D) was obtained, S was divided into six groups for different purposes, namely TRAIN_1, TRAIN_S, VALID_1, VALID_S, TEST_1, and TEST_S as shown in Table 4. The postfix “1” represents single-faults, while “S” denotes simultaneous-faults. For example, TRAIN_1 means the training data of single-faults and TEST_S represents the test data of simultaneous-faults.The training dataset was used to train the classifiers. The validation dataset was used for determining the optimal decision threshold ɛ* in DTO. The test dataset was used to assess the performance of the trained models.In each set of models, there are three different frameworks: SLC, MLC, and FPSD; and four different classifiers: NN, SVM, PNN, PSVM. Therefore, there are totally 12 combinations (or models) of frameworks and classifiers. As a reminder, in SLC framework, artificial labels are made for simultaneous-faults so that only a label will be returned. For the classifiers, SVM and PSVM can merely produce a single output of truth value σ or probability ρ. The architecture of NN and PNN can be modified to produce a vector of d outputs for a d-fault problem. The 12 models are shown in the followings where s is a truth vector fuzzified from an unknown qualitative vector x, y is the predicted fault label of x, and y is the vector of predicted fault labels of x, and j=1 to d:1.NN_SLC(s)=[σ1, …, σd];y=argmaxjσj2.PNN_SLC(s)=[ρ1, …, ρd];y=argmaxjρj3.SVM_SLC(s)=[SVM1(s), …, SVMd(s)];y=argmaxj(SVMj(s))4.PSVM_SLC(s)=[PSVM1(s), …, PSVMd(s)];y=argmaxj(PSVMj(s))5.NN_MLC(s)=[σ1, …, σd];y=[τ(σ1), …, τ(σd)]6.PNN_MLC(s)=[ρ1, …, ρd];y=[ɛ(ρ1), …, ɛ(ρd)]7.SVM_MLC(s)=[SVM1(s), …, SVMd(s)];y=[τ(SVM1(s)), …, τ(SVMd(s))]8.PSVM_MLC(s)=[PSVM1(s), …, PSVMd(s)];y=[ɛ(SVM1(s)), …, ɛ(SVMd(s))]9.NN_FPSD(s)=[σ1, …, σd];y=[τ*(σ1), …, τ*(σd)]10.PNN_FPSD(s)=[ρ1, …, ρd];y=[ɛ*(ρ1), …, ɛ*(ρd)]11.SVM_FPSD(s)=[SVM1(s), …, SVMd(s)];y=[τ*(SVM1(s)), …, τ*(SVMd(s))]12.SVM_FPSD(s)=[SVM1(s), …, SVMd(s)];y=[τ*(SVM1(s)), …, τ*(SVMd(s))]where σiand ρiare the fuzzy truth value and probability of the jth fault respectively. The thresholds τ, τ*, ɛ, ɛ* are similar to the form of Eq. (10). The values of τ and ɛ are user-defined while τ* and ɛ* are optimized.For SLC models (1–4), both the datasets TRAIN_1 and TRAIN_S were employed to train the classifier because SLC is only suitable for SFD. Since no decision threshold is required for SLC framework, the validation datasets were not used. In addition, there is no coupling strategy in SLC.For MLC models (5–8), only TRAIN_1 was employed to train the classifiers according to the procedures discussed in Section 2.1. Based on reference handbook [25], the threshold for defuzzification τ is set to 0.8 which is consistent with the fuzzy membership value for “Fault must exist” and the probabilistic decision threshold ɛ is set to 0.5 according to usual practice. The coupling strategy used in MLC is one-vs.-all (OVA).For FPSD models (9–12), only TRAIN_1 was employed as the training dataset. The proposed PCS was implemented as the coupling strategy. In addition, the best threshold for defuzzification τ* and the best probabilistic decision threshold ɛ* are optimized respectively using PSO. The objective function of the PSO optimization is just the F-measure over the validation datasets VALID_1 and VALID_S. For each optimization of the threshold, PSO was run for 10 times with different arbitrary initial population. Then, the threshold producing the highest F-measure is returned as the optimal decision threshold. This procedure is applicable to both τ* and ɛ*.Besides, the spread of all the PNNs was selected by default as 1.0. Gaussian kernel was selected in PSVM with kernel width g=1.0 and C=1.0 according to usual practice. For the parameters of PSO, the number of generation was set as 1000, population size was 50, inertial weight was 0.9, and both the cognitive and social parameters were set to 2 by referring to [2]. All the proposed methods and classifiers mentioned were implemented in MATLAB R2008a and all the tests were conducted under a PC with Intel Core i5 @ 3.2GHz and 4GB RAM.

@&#CONCLUSIONS@&#
In this paper, a new FPSD framework is proposed for automotive engine simultaneous-fault diagnosis based on qualitative symptom descriptions from the vehicle owner. The proposed FPSD is composed of three modules: FZ, PPMLC, and DT. The PPMLC module is an integration of PCS, MLC, and probabilistic classifier. This new integration just needs single-fault data for training. Nevertheless, the resultant PPMLC module not only diagnoses the single-faults accurately, but also detects the simultaneous-faults satisfactorily. By FPSD, the non-trivial and challenging task of engine simultaneous-fault diagnosis based on qualitative symptom descriptions can be effectively resolved. Although the traditional SLC can obtain the most accurate diagnosis of simultaneous-faults, it is practically prohibitive in terms of amount of simultaneous-fault data and number of classifiers. Experimental results show that, even simultaneous-fault data were not used for training, FPSD is only 3–5% worse than traditional SLC in terms of F-measure. Moreover, as compared to traditional MLC, FPSD improves the fault diagnostic performance up to 7% in terms of F-measure. This results verify the significance of the proposed FPSD framework. In addition, it is found that FPSD can diagnose single-faults more accurately than SLC under a simultaneous-diagnostic environment.Practically, FPSD is suitable for automotive service centers or workshops under the constraints of expensive equipment. This kind of simultaneous-fault diagnostic problem for automotive service centers or workshops has not been solved and found in the open literature yet. Besides, apart from automotive engine diagnosis, it is strongly believed that FPSD is applicable to other application areas such as automotive chassis simultaneous-fault diagnosis.