@&#MAIN-TITLE@&#
Preferred feed direction field: A new tool path generation method for efficient sculptured surface machining

@&#HIGHLIGHTS@&#
Tool path generation according to a preferred feed direction field of the surface.Generated tool paths having comparatively short overall tool path length.Surface segmentation by identifying degenerate points and forming their separatrices.

@&#KEYPHRASES@&#
Sculptured surface,Ball-end milling,Machining efficiency,Preferred feed direction,Tensor field,Iso-scallop tool paths,

@&#ABSTRACT@&#
This paper presents a new method to generate efficient ball-end milling tool paths for three-axis sculptured surface machining. The fundamental principle of the presented method is to generate the tool paths according to a preferred feed direction (PFD) field derived from the surface to be machined. The PFD at any point on the surface is the feed direction that maximizes the machining strip width. Theoretically, tool paths that always follow the direction of maximum machining strip width at every cutter contact point on the surface would result in shorter overall tool path length. Unfortunately, overlaps of adjacent machining strips commonly exist for tool paths that follow the preferred directions exactly. Such redundant machining can be reduced by iso-scallop tool paths. Nonetheless, iso-scallop tool paths do not in general follow the preferred feed directions. To improve machining efficiency via generating short overall tool path length, the presented method analyzes the PFD field of the surface and segments the surface into distinct regions by identifying the degenerate points and forming their separatrices. The resulting segmented regions are characterized by similar PFD’s and iso-scallop tool paths are then generated for each region to mitigate redundant machining. The developed method has been validated with numerous case studies. The results have shown that the generated tool paths consistently have shorter overall length than those generated by the existing methods.

@&#INTRODUCTION@&#
Sculptured surfaces have seen applications in many fields, especially in the aerospace, automotive, and biomedical industries. These surfaces are characterized by their smooth shape and may include features such as valleys, mounts, or blends to fulfill requirements such as an optimized airflow or a desirable ergonomic shape. In order to manufacture components with sculptured surfaces, three- or five-axis computer numerical control (CNC) machine tools with a variety of end mills are used to machine either the desired part itself or its corresponding die/mold. Although five-axis CNC machines provide higher versatility and efficiency compared to their three-axis counterparts, the latter are still commonly used due to their lower costs and widespread availability.In three-axis machining of sculptured surfaces using ball-end mills, scallops are formed between adjacent tool paths. The resulting scallop height depends on the interval between the tool paths, commonly referred to as the side-step. For a given ball-end mill, a small scallop height constraint requires a small side-step between adjacent tool paths and consequently, a large number of tool paths are required to machine the entire surface, which adds up to a long overall machining tool path length. Redundant machining occurs when the chosen side-step results in a scallop height that is smaller than the specified scallop height constraint.In practice, the specified scallop height constraint for a finished surface is quite small in order to lessen the burden of the subsequent polishing work. As a constant feed rate is commonly used for a ball-end mill during the finishing machining of a sculptured surface, a longer overall tool path length correspond to a longer machining time. Methods to reduce the overall tool path length have thus been an active research topic in the field of Computer-Aided Manufacturing (CAM) in the past two decades. These existing methods aimed to generate the milling tool paths needed to obtain the desired sculptured surface shape under the specified scallop height constraint. Conventionally, these methods would require the user to input some a priori tool path generation information from which the tool paths are generated on the surface. More recently, researchers start to formulate machining strategies which attempt to determine the user-input information automatically from the given surface shape. In this paper, the related developments are referred to as the surface topology based methods.Conventional tool path generation methods can be roughly categorized into iso-parametric, iso-planar and iso-scallop methods. The iso-parametric method is the earliest method of the three and generates the required cutter contact (CC) tool paths on the design surfaceS(u,v)by fixing the value of one of the parametric variables, sayu, while varying the value ofvwithin its domain  [1]. TheΔubetween adjacent iso-parametric tool paths is chosen such that the resulting scallop height will not violate the specified limit. This method is mathematically convenient and ensures that the entire surface is covered by the tool paths. However, depending on the surface shape, the generated tool paths may be quite dense in some regions. To improve the iso-parametric method, Elber and Cohen  [2] proposed to eliminate some iso-parametric tool path segments when the generated tool paths become too dense. The latest iso-parametric method attempted to optimize the generated tool paths via an adaptive grid  [3]. Despite all these efforts, redundant machining still exists in the generated tool paths.The iso-planar method was initially proposed as an improvement over the iso-parametric method. This method employs a series of parallel planes whose intersections with the design surface correspond to the CC tool paths  [4]. The separation between adjacent intersection planes provides better control on the resulting scallop height than the iso-parametric method. The main advantage of the iso-planar method is that it avoids regions of dense tool paths observed in the iso-parametric tool paths. However, redundant machining still exists for the iso-planar tool paths. Improvements to the conventional iso-planar method have been proposed. For example, Ding et al.  [5] implemented an adaptive iso-planar method which segmented the surface into regions according to the surface slope. Consequently, the method required an input from the user regarding the limits on the slope used for the surface segmentation.The first method to generate iso-scallop tool paths on a given surface appeared to be proposed by Suresh and Yang  [6]. The iso-scallop method sequentially generates an adjacent tool path based on the current tool path. It aims at ensuring that the resulting scallop height between adjacent tool paths is the same as the specified limit. Redundant machining thus does not exist, resulting in a smaller overall tool path length than that for the iso-parametric or iso-planar tool paths. Later, quite a few methods have been proposed, which improve on the calculation efficiency  [7] and accuracy  [8]. The methods proposed by Feng and Li  [9] and Tournier and Duc  [10] improved the calculation accuracy further by carrying out all calculations three-dimensionally. And a method that attempted to improve the speed of three-dimensional calculations has also been proposed  [11]. Since the iso-scallop method is fundamentally a sequential tool path generation method, it requires setting an initial tool path from which the subsequent tool paths are generated. This gives room for further improvement and inspires a more recent research direction that attempts to analyze the topology of the given surface with the goal of minimizing the overall tool path length.Recent developments by Quinsat and Sabourin  [12] and Vijayaraghavan et al.  [13] sought to find an optimal orientation for the parallel intersection planes in order to generate iso-planar tool paths with minimal overall tool path length for a given sculptured surface. The optimal orientation was determined by analyzing local parameters of the surface which influenced the material removal rate or by a metric of the mean scallop height resulting from a particular plane orientation. These methods, however, employ a single iso-planar direction across the entire surface, which cannot guarantee to minimize the overall tool path length as redundant machining still exists. For iso-scallop tool paths, attempts have also been made to find the optimal initial tool path by analyzing the complete surface geometry. The method proposed by Giri et al.  [14] used loci of maximum local convex curvatures to determine the initial tool path from which the subsequent iso-scallop tool paths were generated. User input was required in their work to select and compare the curvature loci in order to finalize the initial tool path.A notable work by Kim and Sarma  [15] treated the optimal machining directions at sampled points on the given surface as a vector field. The vector field was analyzed and then segmented to generate the tool paths. The employed vector field was unidirectional and this limited its application in tool path generation. This is because for the problem of generating efficient tool paths, there are in fact two optimal directions at any point on the surface, which are opposite to each other. A vector field cannot adequately represent such a bi-directional field, as will be discussed in the subsequent sections of this paper.This paper proposes a new strategy to generate efficient tool paths for three-axis sculptured surface machining. It aims at minimizing the overall tool path length for a given ball-end mill and scallop-height limit without any user input for the initial tool path. The strategy starts with creating a discrete bi-directional field, or tensor field, which maps the preferred machining directions across the surface. The field is then analyzed and segmented into regions with similar preferred machining directions. For each segmented region, a principal tool path is determined and used as the initial tool path from which a series of iso-scallop tool paths are generated. This strategy will result in tool paths with shorter overall length compared with those generated by the existing tool path generation methods.The employed region-based tool path generation strategy has in fact already been applied in the multi-axis machining of complex-shaped parts such as turbine and impeller blades. To reduce cutting tool orientation changes, Chen et al.  [16] introduced a method to subdivide a complex sculptured surface into a number of easy-to-machine surface patches. Similarly, Dai et al.  [17] proposed to divide a complex surface into different regions to facilitate flank milling of the approximated piecewise ruled surface. Very recently for three-axis machining, Zhu et al.  [18] subdivided a sculptured surface according to the surface features using the technique of square lattice subdivision. It was concluded that dividing the surface into various surface patches was indeed helpful to generate shorter overall tool path length, thereby increasing the machining efficiency.It should be noted here that many of the existing region-based tool path generation studies, if not all, have evaluated the effectiveness their developed methods using the overall milling tool path length. This practice is generally acceptable because the milling feed rate is considered fixed for finish machining; thus, the overall machining time is simply proportional to the milling tool path length. Also, although extra tool travel is needed to connect the much increased number of tool path segments (due to the segmented surface regions), the resulting extra tool travel time is comparatively small because rapid tool positioning is to be used between milling tool path segments that are characterized by much smaller feed rates.To determine the preferred machining or feed direction of a ball-end mill at a specific point on the design surface, a metric is required. The applicable metric is in fact a subject of active research  [19,20]. It has been commonly assumed in the research literature that tool paths following the direction of maximum material removal will have shorter overall tool path length. In this paper, the widely used metric of machining strip width is employed as the metric to determine the preferred feed direction at a point on the design surface.The notion of machining strip width (W) appeared to be first introduced by Lee and Ji  [21] to mathematically analyze five-axis machining and find the optimal cutter feed direction  [22,23].Wcan also be calculated for three-axis machining to determine the preferred feed direction of the cutter  [24,25] and there are different ways to approximateW[26]. In this paper,Wis to be evaluated based on the concept of the scallop surface  [9]. The scallop surfaceSscallop(u,v)is a normal offset surface from the design surfaceS(u,v)with the offset distance equal to the scallop heighth. The cutting tool motion produces a tool swept volume which intersects the volume enclosed in-between the design and scallop surface to create the machined volume. The tool swept volume’s contact with the design surface is a curve on the design surface which corresponds to the cutter contact (CC) tool path. Points on the CC tool path are referred to as the CC points (PCC). A CC tool path has its corresponding cutter location (CL) tool path, consisting of CL points (PCL), and every PCL has a corresponding PCC. In the case of three-axis machining, the CL point PCL for a given CC point PCC is calculated by multiplying the normal vectornCCof the design surface at PCC by the tool radiusr. At each CL point, three vectors can be determined:nCL, which is an extension of and effectively the same asnCC;fCL, the tangent vector of the CL path at PCL; andtCL, calculated as the cross producttCL=nCL×fCL.The tool swept volume is the volume enclosed by the surface constituted by the union of all the tool swept profiles along a tool path. The procedure to derive the tool swept profile at each CL point is briefly outlined here. The volume of a ball-end mill is made up of two volumes: a hemisphere for the ball end and a cylinder for the tool flank. The hemisphere is intersected by the plane created bytCLandnCLat the CL point. The generated intersection curve constitutes the bottom tool swept profile, which intersects the circle of the tool flank cylinder’s bottom at two pointsSaandSb(Fig. 1). The vector fromSatoSband the tool axiszTcreate a plane which intersects the tool flank cylinder and the resulting intersection curve is the flank tool swept profile. The union of the bottom tool swept profile and the flank tool swept profile results in the tool swept profile. The tool swept profile intersects the scallop surface at two points,PaandPb. The projected distance from Pa to Pb alongtCLgivesW:(1)W=|PaPb¯⋅tCL|.It is important to note that, at a given CC point, the value ofWwill be the same if the machining feed direction is reversed. For every CC point sampled on the design surface, there will be two opposing vectors,+fCLand−fCL, which have the sameWmagnitude. By sampling a series of points on the design surface and determining the directions with the largestW, a field of preferred directions across the entire design surface can be established. In three-axis machining, if the tool axis is along thez-axis of a global Cartesian coordinate system, the pair of opposing vectors at each CC point is to be projected onto thexyplane, as illustrated in Fig. 2. The resulting field, referred to as the Preferred Feed Direction (PFD) field in this paper, shows two vectors at every sampled point. It is because of this reason that a PFD field cannot be analyzed as a vector field, which is applicable to only one vector at every point. In the present work, the PFD field will be analyzed as a tensor field, where every point is characterized by a tensor, which mathematically describes the two vectors as well as how the two vectors relate to each other.Although not essential, it is useful in some situations to represent the feed direction of the ball-end mill as a scalar. For this purpose, the feed angleϕis adopted. The definition and calculation procedure of the feed angleϕare outlined here. First, the tangent plane at the CC point PCC is employed and named as the feed plane at PCC. It is evident that the feed vector of the ball-end millfCLlies on the feed plane. Next, a reference feed vectorfrefon the feed plane is taken as the cross product of the tool axiszTandnCC. In the event thatnCCis equal or very close tozTwhen the ball-end mill is machining a flat or near flat region of the design surface, the reference feed vectorfrefis taken as thex-axis of the global Cartesian coordinate system of the design surface. The angle betweenfCLandfrefon the feed plane is then the feed angleϕ. Since a feed direction is composed of two opposing vectors, a feed angle can have a value ofϕorϕ+π. Ifϕ≥π, thenπis subtracted fromϕ.Pathlines in tensor fields are analogous to streamlines in vector fields. They are created by following the directions specified in a tensor field. If pathlines following the maximumWdirections are directly used as the machining tool paths, overlapping of the resulting machining strip widths will generally occur, leading to redundant machining. Fig. 3shows the machining strip width overlaps when pathlines are directly used as tool paths. A pathline may also be used as the initial tool path from which iso-scallop tool paths are generated to avoid redundant machining. However, as it can be seen in Fig. 4, the resulting iso-scallop tool paths will progressively drift away from the pathlines. It is thus evident that a new tool path generation methodology needs to be developed to address the conflicting issues noted above. The new methodology developed in the present work is to segment the design surface into distinct regions according to the PFD field of the surface. The details will be presented in the next section.

@&#CONCLUSIONS@&#
A new method has been presented in this paper to generate iso-scallop tool paths which aim to follow preferred feed directions (PFD’s) on a given sculptured surface. The generated tool paths feature shorter overall tool path length under the specified scallop height constraint, compared with tool paths generated by all existing methods. This is essentially achieved by segmenting the PFD field of the given surface into regions of similar PFD’s via identifying the PFD field’s degenerate points and forming their separatrices. It is possible that due to the presence of islands/cavities of specific geometry, the PFD’s are similar across the island/cavity boundaries. In this situation, the presented method will fail to segment the islands/cavities into individual surface regions. Nonetheless, islands/cavities of general geometry often produce distinct PFD’s, resulting in successfully segmented individual islands/cavities by the presented method.During the implementation of the proposed method, a sampling resolution needs to be chosen to map the PFD field of the given surface. Computational time will be increased if the chosen resolution is high. On the other hand, not all degenerate points could be identified if the resolution is low. Determining the optimal resolution for a given surface is a challenging task and beyond the scope of the current work. As for the initial or principal tool path for generating the iso-scallop tool paths for a segmented surface region, the middle pathline in the segmented region has been employed in order to reduce the drift of the generated iso-scallop tool paths from the PFD pathlines. The presented procedure to find the middle pathline in each segmented region is rather simplistic and the identified middle pathline will vary slightly with the pathlines that are sampled in the region. A more elaborated procedure will need to consider and evaluate the resulting machining strip widths. It may lead to further reduction of the overall tool path length, but not by much.A couple of practical issues need to be noted here. As the design surface is segmented into different regions, the tool entry and exit motions for each tool path segment at the region borders have to be carefully planned in order to reduce tool engagement/disengagement marks. It should also be noted that current iso-scallop tool path generation methods consistently employ a sequential tool path generation approach. Such a sequential approach has been known to lead to undesirable high-curvature and/or looping tool path curves due to accumulative changes in the sequentially generated tool paths. The present work serves to address this issue, to some extent, by segmenting the design surface into different regions of similar PDF pathlines. However, seemingly sharp corners in the generated tool paths can still be found. Such geometric discontinuity in the tool path much affects the related machining performance. Balancing the tool path smoothness and overall tool path length is a challenging task and among the tool path generation research studies to be carried out in our research group.