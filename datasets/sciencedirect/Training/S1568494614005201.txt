@&#MAIN-TITLE@&#
Chaotic bat swarm optimisation (CBSO)

@&#HIGHLIGHTS@&#
A new chaotic-based bat swarm optimisation algorithm has been developed.For devising it, different chaotic Bat strategies map functions were tested.In the proposed chaotic BSO, the loudness is updated via multiplying a linearly decreasing function by chaotic map function.

@&#KEYPHRASES@&#
Bat swarm optimisation,Global optimisation,Chaos,Heuristics,

@&#ABSTRACT@&#
Bat swarm optimisation (BSO) is a novel heuristic optimisation algorithm that is being used for solving different global optimisation problems. The paramount problem in BSO is that it severely suffers from premature convergence problem, that is, BSO is easily trapped in local optima. In this paper, chaotic-based strategies are incorporated into BSO to mitigate this problem. Ergodicity and non-repetitious nature of chaotic functions can diversify the bats and mitigate premature convergence problem. Eleven different chaotic map functions along with various chaotic BSO strategies are investigated experimentally and the best one is chosen as the suitable chaotic strategy for BSO. The results of applying the proposed chaotic BSO to different benchmark functions vividly show that premature convergence problem has been mitigated efficiently. Actually, chaotic-based BSO significantly outperforms conventional BSO, cuckoo search optimisation (CSO), big bang-big crunch algorithm (BBBC), gravitational search algorithm (GSA) and genetic algorithm (GA).

@&#INTRODUCTION@&#
Heuristics are the most commonly used algorithms for solving optimisation problems and have been applied to diverse optimisation problems in different areas [1–13]. There are many different forms of heuristic optimisation algorithms [14–27]. Bat swarm optimisation (BSO) is a heuristic optimisation algorithm developed by Yang [28,29]. It is inspired of the echolocation behaviour of natural bats. The main problem in BSO is that it severely suffers from premature convergence which stems from the inherent incapability of BSO in establishing an appropriate tradeoff between exploration and exploitation [30].Chaos is a character of nonlinear systems and is mathematically defined as randomness generated by simple deterministic systems [31,32]. Recently, in area of heuristic optimisation algorithms, chaotic concepts and functions have been frequently incorporated to tackle premature convergence problem. Due to the ergodicity of chaos, chaotic-based maps can help heuristic optimisation algorithms to enhance the diversity among individuals and avoid premature convergence [33]. Indeed, chaotic maps have improved genetic algorithm [34,35], simulated annealing [36–38], differential evolution [39,40], particle swarm optimisation [41], firefly algorithm [42], harmony search [43], ant colony optimisation [44], imperialistic competitive algorithm [33], charged system search optimisation [45], big-bang, big crunch optimisation [32,46] and artificial bee colony optimisation [47].In this paper, the capability of chaotic strategies for mitigating premature convergence of BSO is investigated. In this regard, the following research questions are raised.•Does the incorporation of chaotic strategies into BSO mitigate its premature convergence problem?What are the possible chaotic strategies applicable to BSO?Which chaotic strategy is the most effective one?Which chaotic map function is the most appropriate one for BSO?Does the BSO equipped with the most appropriate chaotic strategy and the most appropriate chaotic map function outperform existing well-established optimisation algorithms?The objective of this paper is to develop an efficient chaotic-based BSO variant that mitigates premature convergence problem and outperforms conventional BSO and existing well-established optimisation algorithms. Although some chaotic-based BSO variants have already been developed [48–50], all of them just have investigated a single chaotic strategy and a certain chaotic map function, while investigating other chaotic strategies and map functions can lead to better outcomes. Therefore existing chaotic-based BSO variants are not capable enough of solving difficult optimisation problems. In this paper, new chaotic strategies along with eleven different chaotic map functions have been investigated to find the best potential chaotic-based BSO variant. The developed BSO variant can be applied to different complex optimisation problems in various areas of sciences and technologies where it is expected to result in high quality solutions.BSO is an optimisation algorithm inspired from echolocation phenomenon of bats. By echolocation, the bats are able to detect the distance and orientation of the target, the type of prey, and even the speed of the prey such as small insects [29]. In this section, first the echolocation phenomenon is explained briefly, and then bat swarm optimisation algorithm will be described in details.Bats use a type of sonar, called, echolocation, to detect prey, avoid obstacles, and locate their roosting crevices in the dark [28,29]. They emit a very loud sound pulse and listen for the echo that bounces back from the surrounding objects [29]. Their pulses vary in properties and can be correlated with their hunting strategies, depending on the species. Their signal bandwidth varies depends on the species, and often increased by using more harmonics [29].Though each pulse only lasts a few thousandths of a second (up to about 8–10ms); however, it has a constant frequency which is usually in the region of 25–150kHz [28,29]. The typical range of frequencies for most bat species is in the region between 25 and 100kHz. Each ultrasonic burst may last typically 5–20ms, and bats emit about 10–20 such sound bursts every second [28,29]. When hunting for prey, the rate of pulse emission can be sped up to about 200 pulses per second when they fly near their prey. Such short sound bursts imply the fantastic ability of the signal processing power of bats [29].Surprisingly, the emitted pulse could be as loud as 110dB, and, fortunately, they are in the ultrasonic region. The loudness also varies from the loudest when searching for prey and to a quieter base when homing towards the prey (Fig. 1). The travelling range of such short pulses is typically a few metres, depending on the actual frequencies [51].Based on the behaviour of natural bats described above, artificial bat algorithm is constructed as follows.In BSO, at each iteration the velocities and positions of bats are updated via following formulae [28,29](1)fi=fmin+r1(fmax−fmin)(2)Vi(t+1)=Vi(t)+fi⋅(Xi(t)−Xbest(t))(3)Xi(t+1)=Xi(t)+Vi(t+1)where fmin and fmax are the minimum and maximum allowable frequencies, fiis the frequency for ith bat, r1 is a random number in [0,1], Xi(t) and Vi(t) are the position and velocity of ith bat respectively and Xbest(t) represents the best position that bats have experienced till iteration t.At each iteration t, with probability equal to r (pulse emission rate), one among best solutions is selected and a local search is implemented around it as below [29](4)Xnew(t)=Xbest(t)+r2Awhere r2 is a random in [0,1] and A represents mean loudness of bats.With probability 1−r, a new solution is randomly created. After creating the new solutions, their objective values are computed and for each bat, if the objective value of the new position is lower than objective value of the old position, with probability A, the old bat is replaced by the new one (Fig. 2).Chaotic systems are a subcategory of dynamical systems which are characterised by Eq. (5)(5)xk+1=f(xk)Actually, under some circumstances, a dynamical system illustrates chaotic behaviour. In Eq. (5), xk+1 and xkare the (k+1)th and kth chaotic number respectively. The initial value of a chaotic function highly affects its behaviour and is denoted by x0. The equations of chaotic map functions are as follows. They all have been presented as a Table A1 in Appendix.Logistic map function is characterised by Eq. (6)[53](6)xk+1=a⋅xk(1−xk)where a is a control parameter and is set to 4 to generate numbers in (0,1).This map function is defined as following equation [54]:(7)xk+1=2xkxk<0.52(1−xk)xk≥0.5This chaotic map generates chaotic numbers in (0,1) and is defined by the following equation [55](8)xk+1=abssinaxkwhere a is a control parameter.This chaotic function is defined by the following equation [53](9)xk+1=axk2sin(πxk)where a is a control parameter.This chaotic map is characterised by following equation [56](10)xk+1=xk+b−a2πsin(2πxk)mod(1)where a and b are control parameters. By x0=0.5 and b=0.2, chaotic numbers will be generated in (0,1).This chaotic function is defined by equation below [31](11)xk+1=2.3(xk)2sin(πxk)Gauss map function is defined by following equation [57](12)xk+1=0xk=01xkmod(1)otherwiseThis map function is defined by Eq. (13)[31](13)xk+1=cos(a⋅cos−1(xk))This chaotic function is formulated as equation below [58](14)xk+1=a(7.86xk−23.31xk2+28.75xk3−13.302875xk4)where a is a control parameter in (0.9, 1.08).This chaotic function is formulated as following equation [59](15)xk+1=xka0≤xk≤axk−a0.5−aa≤xk≤0.51−a−xk0.5−a0.5≤xk≤1−a1−xka1−a≤xk≤1where a is a control parameter in (0, 0.5).This chaotic function is formulated as below [31].(16)xk+1=xk1−a0≤xk≤axk−(1−a)a1−a≤xk≤1where a is a control parameter in (0, 1).The rest of the paper is organised as follows; the proposed methodology is described in Section 2. Results of applying chaotic BSO to different benchmark functions are presented in Section 3. Eventually, concluding remarks are presented in Section 4.

@&#CONCLUSIONS@&#
In this paper, a new chaotic-based bat swarm optimisation algorithm has been developed that alleviates premature convergence problem of conventional BSO. For devising it, different chaotic Bat strategies and map functions were investigated. In the proposed chaotic BSO, the loudness is computed via multiplying a linearly decreasing function by chaotic map function. The results of applying this chaotic-based BSO to different benchmark functions approve its significant outperformance over conventional BSO, cuckoo search optimisation (CSO), big bang-big crunch algorithm (BBBC), gravitational search algorithm (GSA) and genetic algorithm (GA).