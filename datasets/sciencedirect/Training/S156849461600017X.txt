@&#MAIN-TITLE@&#
DiffNodesets: An efficient structure for fast mining frequent itemsets

@&#HIGHLIGHTS@&#
In this paper, we propose an algorithm named dFIN for frequent itemset mining.dFIN achieves high performance by employing DiffNodesets to represent itemsets.Experiment results on real datasets show that dFIN is effective and outperforms state-of-the-art algorithms.

@&#KEYPHRASES@&#
Data mining,Frequent itemset mining,DiffNodesets,Algorithm,Performance,

@&#ABSTRACT@&#
Mining frequent itemsets is an essential problem in data mining and plays an important role in many data mining applications. In recent years, some itemset representations based on node sets have been proposed, which have shown to be very efficient for mining frequent itemsets. In this paper, we propose DiffNodeset, a novel and more efficient itemset representation, for mining frequent itemsets. Based on the DiffNodeset structure, we present an efficient algorithm, named dFIN, to mining frequent itemsets. To achieve high efficiency, dFIN finds frequent itemsets using a set-enumeration tree with a hybrid search strategy and directly enumerates frequent itemsets without candidate generation under some case. For evaluating the performance of dFIN, we have conduct extensive experiments to compare it against with existing leading algorithms on a variety of real and synthetic datasets. The experimental results show that dFIN is significantly faster than these leading algorithms.

@&#INTRODUCTION@&#
Frequent itemset mining, first proposed by Agrawal et al. [1], is a fundamental and essential task in the field of data mining because it has been widely used in many important data mining applications. These applications include the discovery of association rules, sequential rules, correlations, episodes, etc. Since the first proposal of frequent itemset mining, hundreds of algorithms have been proposed on various kinds of extensions and applications, ranging from scalable data mining methodologies, to handling a wide diversity of data types, various extended mining tasks, and a variety of new applications [18]. Although frequent itemset mining has been proposed over two decades, it is still a very active topic in data mining [3,6,10,11,21,27,36,39].In recent years, we have presented three kinds of data structure, named Node-list [14], N-list [15], and Nodeset [12], to enhance the efficiency of mining frequent itemset. They are all based on node sets originated from a prefix tree with encoded nodes. The prefix tree employed by Node-list and N-list uses pre-order number and post-order number to encode each node. The only difference between Node-list and N-list is that Node-list use descendant nodes to represent an itemset while N-list represent an itemset by ancestor nodes. Based on Node-list and N-list, two algorithms called PPV [14] and PrePost [15] are proposed respectively for mining frequent itemsets and have shown to be very effective and usually outperform previous algorithms. However, they are memory-consuming because Node-lists and N-lists need to encode a node with pre-order and post-order [12]. In addition, the nodesâ€™ encoding model of Node-list and N-list is not suitable to join N-lists (or Node-lists) of two short itemsets to generate the N-list (or Node-list) of a long itemset [12]. To this end, we further present a data structure, namely Nodeset, for mining frequent itemsets. Different from N-list and Node-list, Nodeset requires only the pre-order (or post-order) number of a node to encode the node without the requirement of both pre-order and post-order number. Based on the Nodeset structure, we propose FIN [12] to discover frequent itemsets. Experiment results show that FIN is comparable with PrePost while it consumes less memory than the latter.Despite the above advantage of Nodeset, we find the Nodeset cardinality may get very large on some databases. Inspired by the idea of diffset [43], in this paper, we present a novel itemset representation called DiffNodeset, which only keeps track of differences in the Nodesets of a candidate itemset from its generating frequent itemsets. Compared with Nodeset, the cardinality of DiffNodeset is much smaller. Based on DiffNodeset, we design dFIN, an efficient algorithm for mining frequent itemsets. The high efficiency of dFIN is achieved with three techniques: (1) itemsets are represented by DiffNodesets, which is a highly condensed and much smaller structure that can greatly facilitate the mining process of frequent itemsets, (2) it employs a hybrid search strategy to find frequent itemsets in a set-enumeration tree, and (3) it directly enumerates frequent itemsets without candidate generation under some case. An extensive performance study has been conducted to compare the performance of dFIN with FIN, PrePost, FP-growth*, and Eclat_g, which are leading mining algorithms at present. Our extensive experimental study shows that dFIN is efficient and always run faster than other algorithms.The rest of this paper is organized as follows. In Section 2, we introduce the background and related work for frequent itemset mining. Section 3 introduces some concepts and properties relevant to DiffNodeset. dFIN is described at great length in Section 4. Experiment results are shown in Section 5 and conclusions are given in Section 6.

@&#CONCLUSIONS@&#
