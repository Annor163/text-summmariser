@&#MAIN-TITLE@&#
A fuzzy-based spatio-temporal multi-modeling for nonlinear distributed parameter processes

@&#HIGHLIGHTS@&#
A fuzzy-based spatio-temporal multi-modeling approach is proposed for modeling nonlinear distributed parameter processes.To obtain a reasonable operating space division, a priori information and the fuzzy clustering are used to decompose the operating space from coarse scale to fine scale gradually.To get a smooth global model, a three-domain (3D) fuzzy integration method is proposed.Using the proposed method, the model accuracy will be improved and the experiments become easier.

@&#KEYPHRASES@&#
Distributed parameter system,Spatio-temporal modeling,Multi-modeling,Kernel model,Space/time separation,Fuzzy clustering,

@&#ABSTRACT@&#
Many industrial processes belong to nonlinear distributed parameter systems (DPS) with significant spatio-temporal dynamics. They often work at multiple operating points due to different production and working conditions. To obtain a global model, the direct modeling and experiments in a large operating range are often very difficult. Motivated by the multi-modeling, a fuzzy-based spatio-temporal multi-modeling approach is proposed for nonlinear DPS. To obtain a reasonable operating space division, a priori information and the fuzzy clustering are used to decompose the operating space from coarse scale to fine scale gradually. To reduce the dimension in the local spatio-temporal modeling, the Karhunen–Loève method is used for the space/time separation. Both multi-modeling and space/time separation can reduce the modeling complexity. Finally, to get a smooth global model, a three-domain (3D) fuzzy integration method is proposed. Using the proposed method, the model accuracy will be improved and the experiments become easier. The effectiveness is verified by simulations.

@&#INTRODUCTION@&#
Many industrial processes are distributed parameter systems (DPSs), e.g., convection–diffusion–reaction process in the chemical industry [1], spray deposition process in the material industry [2] and snap curing process in the integrated circuit (IC) packaging industry [3]. Different from lumped parameter system (LPSs), the inputs and outputs of DPSs are distributed in space [1,4]. Sometimes, the spatial nature is ignored in the modeling and control. However, the control performance will deteriorate if the system dynamics significantly vary with space. In this case, the spatial nature must be considered in the modeling and control. The feedback control depends on high-dimensional spatial measurements or an accurate model. In practice, only some locations are measured due to a limited number of sensors. To estimate for unmeasured locations, an accurate model is very desirable.Unknown dynamics often exist due to incomplete process knowledge. In this case, system identification from experimental data is required. However, it is not easy due to spatio-temporal coupled, nonlinear and infinite-dimensional dynamics. Due to different production and working conditions, the system often works at a large operating range with multiple operating points. The model obtained at one operating point may not work well for another operating point. All these considerations motivate the global modeling over multiple operating points.If the models of partial differential equations (PDEs) are known, lumping techniques can be used to reduce infinite-dimensional PDEs into finite-dimensional ordinary differential equations (ODEs) for implementation. Spectral method and approximate inertial manifold[1] are popularly used to derive control models for parabolic PDE systems because it may result in lower-order ODEs than finite difference and finite element methods. For nonlinear parabolic PDEs with nonlinear spatial operators, the Karhunen–Loève (KL) method can obtain empirical eigenfunctions from the process data for dimension reduction [5,6]. However, these lumping methods require the PDEs accurately known.If the PDEs are unknown, system identification will be used. When the PDE structure is known, it often becomes a parameter estimation problem (e.g., [7–9]). If the DPS structure is unknown, the black-box identification has to be used.•For a linear DPS, the transfer function or Green's function model can be estimated from the input–output data [10]. For example, the concept of residence time distribution is used to get an input–output model [11]. A time-invariant Green's function model can be estimated using singular value decomposition (SVD) method [12]. For linear time-varying DPS, a time-varying Green's function model can be obtained from the singular function and Karhunen–Loève (KL) basis function expansion using SVD–KL method [13–15]. The least-squares method can also be used [16]. For nonlinear DPS, traditional Green's function model is only an approximation at an operating point. Though the linear time-varying Green's function model can approximate the nonlinear DPS, the identification of the time-varying kernel is not easy because the parameterization of the time-varying kernel on the time variable is difficult to be proper for an unknown system.For nonlinear DPS, an infinite-dimensional PDE model can be estimated [17–19]. A high-dimensional ODE model can also be obtained based on finite difference[20] and finite element[21]. Neural networks can model unknown nonlinearities based on spectral method[3] for a partially unknown DPS. Neural networks can also model completely unknown nonlinear DPS based on KL method[22]. It can result in low-order ODEs and handle complex boundary conditions. However, the model is a general nonlinear model that could lead to difficult control design. Recently, spatio-temporal Volterra, Hammerstein and Wiener models [23–27] with simple structures are proposed that could lead to simple control design.The global modeling for nonlinear DPS over multiple operating points is very challenging due to complex nonlinear or time-varying dynamics. The persistently exciting experiment over a large operating range is also difficult. In the modeling of LPS, to overcome similar difficulties, the multi-modeling [28–30] is often a choice from a view of cost and performance. The complex nonlinear dynamics are decomposed into several local operating regions where the local modeling and experiment can be easily performed. By integrating multiple local models, it can obtain a global model at a large operating range. One advantage is that the complexity of modeling and experiment can be largely reduced. Many multi-modeling methods, e.g., local model networks [31], Takagi–Sugeno fuzzy model [32,33] and multiple neural network models [34] all involve the same underlying ideas. Though the multi-modeling has been developed with many industrial applications, most of them are only utilized for lumped processes.Recently, a kernel-based spatio-temporal multi-modeling approach is proposed [35] for nonlinear DPS. Note that the operating space division is mainly based on the experiment data and no process knowledge is utilized. Considering the performance and cost, using both process knowledge and data analysis could be a good choice. To model the local dynamics, a linear spatio-temporal kernel model is used. After that a global model is obtained by integrating multiple local models using a scheduling (weight) function. However, the scheduling function only depends on system states (temporal variables). Actually, the local model may have different weights at different spatial locations. To enhance the modeling capability, a spatial integration could be required.In this study, a fuzzy-based spatio-temporal multi-modeling for nonlinear distributed parameter processes with multiple operating points is proposed. The whole operating space of the nonlinear DPS is first divided into multiple local operating regions. Complex nonlinear spatio-temporal dynamics are decomposed into multiple simple spatio-temporal dynamics. To obtain a reasonable operating space division, a hybrid approach that integrates process knowledge and data analysis is proposed. The operating space is decomposed from coarse scale to fine scale gradually. In the local spatio-temporal modeling, the Karhunen–Loève method is performed for the space/time separation and dimension reduction. The multi-model decomposition and space/time separation will gradually reduce the complexity of global nonlinear spatio-temporal modeling. Next, unknown parameters of each model are estimated using the linear optimization method. Finally, to guarantee a smooth transition between local spatio-temporal models, a three-domain (3D) fuzzy integration method is used to provide a global spatio-temporal model. The experiment and modeling for each local region become easier than direct global modeling. The modeling accuracy is better than one local modeling. The dimension reduction in the modeling actually utilizes the time-scale properties, thus this modeling approach is particularly suitable for dissipative PDEs (e.g., parabolic PDEs).Compared with the previous paper [35], the main contributions of this study are that a fuzzy-based spatio-temporal multi-modeling approach is proposed for the nonlinear distributed parameter system (DPS).•In this study, a hybrid approach that integrates a priori process knowledge and data based fuzzy clustering is proposed for the operating space decomposition. The operating space is decomposed from coarse scale to fine scale gradually. In the previous paper, the proposed iterative approach is only based on the process data, and the operating space division and local modeling are performed iteratively.In this study, a three-domain (3D) fuzzy integration method is proposed to integrate multiple local models, where the weights depends on both system states (temporal variables) and spatial locations. In the previous paper, the scheduling function only depends on system states (temporal variables), and different weights of the local model at different spatial locations are not considered.The rest of the paper is organized as follows. The fuzzy-based spatio-temporal multi-modeling is presented in Section 2. Section 2.1 gives the multi-modeling methodology. In the Section 2.2, the fuzzy-based operating space division is presented. The kernel-based construction of local spatio-temporal models and the 3D-fuzzy aggregation of local spatio-temporal models are given in Sections 2.3 and 2.4 respectively. Section 3 contains one application example. Finally, a few conclusions are presented in Section 4.The methodology of the proposed fuzzy-based spatio-temporal multi-modeling for nonlinear DPS is shown in Fig. 1. There are three main parts:•Fuzzy-based operating space division. As shown in Fig. 1a, to handle complex nonlinearity, the whole operating space is decomposed into multiple local operating regions using a priori information and fuzzy clustering. Correspondingly the original nonlinear spatio-temporal dynamics are divided into multiple simple spatio-temporal dynamics.Kernel-based local spatio-temporal modeling. As shown in Fig. 1b, for each local region, the local spatio-temporal modeling is easily performed using a kernel-based method. Here a linear kernel modeling is used because the modeling complexity can be reduced significantly. If a nonlinear model is used in the local modeling, the modeling complexity cannot be reduced significantly. To handle the spatio-temporal coupling, the Karhunen–Loève (KL) method is used for the space/time separation.3D-fuzzy aggregation. As shown in Fig. 1c, to provide a global spatio-temporal model, the local spatio-temporal models are combined together using a smooth transition technique: three-domain (3D) fuzzy integration.Using the multi-model decomposition and the space/time separation, the complexity of global spatio-temporal modeling is gradually reduced. The complexity of the persistently exciting experiment is also reduced.At each time instant, the system behavior is characterized by an operating pointΦ˜(t)∈Φ. A set of operating points is called the operating range. The entire set of operating points is called the operating space Φ. We define an operating region Φias a subset of the operating space (i.e., Φi⊂Φ). Here the operating space denotes the entire set of operating states. It is different from the spatial domain Ω. The operating space division is to divide the operating states and not to divide the spatial domain.The division of a whole operating space into multiple operating regions can be based on a priori process knowledge [36], the analysis on the process data [37]. A priori process knowledge often gives a coarse division, while the process data analysis can give a fine division with a few experiments. In general, the number of local regions cannot be too large or too small. Otherwise, there will be too many local models or the local models are nonlinear. For the process data analysis method, the experiment design is a difficult task if no process knowledge is utilized.Considering the performance and cost, using both process knowledge and data analysis may give better results. Therefore, a hybrid division approach that integrates process knowledge and data analysis is proposed to decompose the operating space from coarse scale to fine scale gradually. To make the local modeling simple, the linear spatio-temporal modeling is used in this study. Thus in the operating space division, the linearity of local regions should be evaluated to guarantee that each local region can be covered by a linear model. This also gives a guide on when to stop the division algorithm and how many local regions are required.First, a coarse division is obtained based on a priori information e.g., experiential operating point and operating range from engineers. Then the experiment is performed on each coarse region to collect the process data. Denote the input and the output as u(x, t) and y(x, t) respectively, where x∈Ω denotes space variable, Ω is the spatial domain and t is time. Assume a set of input {u(xi, t)|xi∈Ω, i=1, …, M, t=1, …, La} and output data {y(xi, t)|xi∈Ω, i=1, …, N, t=1, …, La} is available, where Ladenotes the time length, M and N are the number of measured spatial points of the input and output. Next a fine division is determined by the clustering analysis. As shown in Fig. 2, this hybrid method will decompose the operating space from coarse scale to fine scale gradually with more clusters. Fuzzy clustering [37] is useful for this purpose because it allows for overlap of subspaces and therefore smoother transitions between operation regions. Especially, the fuzzy c-means (FCM) [38] will be used in this study because it has additional advantages, including straightforward implementation, fairly robust behavior, applicability to multi-channel data, and the ability to model uncertainty within the data [39].In fuzzy c-means for a fine division of the operating space, the input and output data are combined to form a set of LapatternsS={s1,s2,…,sLa}, where sj=[sj1, …, sjP]T=[u(x1, tj), …, u(xM, tj), y(x1, tj), …, y(xN, tj)]T∈RPis the jth pattern and sjidenotes the ith feature (dimension) of the jth pattern, then a partition (c fuzzy clusters) can be found by minimizing(1)JFCM(U,V)=∑k=1c∑j=1Laμkjqdkj2,such that(2)∑k=1cμkj=1,∀j=1,…,La,where dkjis the distance between the jth pattern sjand the kth cluster center vk, μkj∈[0, 1] is the membership of the jth pattern into the kth cluster, q∈[1, ∞) is the degree of fuzziness of the cluster partition, U=[μkj]∈Rc×Lais the unknown fuzzy partition matrix, andV=[v1,…,vc]∈RP×cis the unknown cluster center matrix.Typically, the objective function (1) is optimized using an alternating optimization (AO) scheme [40], where U and V are alternately calculated with the other variable fixed asUˆandVˆ, respectively. Two update equations are derived from the necessary conditions of the objective function(3)μkj=1∑i=1c(dkj/dij)2/(q−1),(4)vk=∑j=1Laμkjqsj∑j=1Laμkjq.After initializing U or V, they are alternately carried out until convergence when cluster center matrix, or fuzzy partition matrix, or objective function is stable with respect to a given tolerance ɛ. The number of clusters c, the fuzzy exponent q, and the termination tolerance ɛ can be determined using the cross-validation method. See [40] for more details on the FCM clustering method. The cluster center matrixV=[v1,…,vc]∈RP×cwill give the centers (i.e., operating points) of local operating regions for a fine division of the operating space. The membership function matrix will help to give the range of clusters and the amount of overlaps between local operating regions. The amount of overlaps can be adjusted by the number of clusters and the fuzzy exponent.From an input–output point of view, an operating point of the system can be represented by the steady state output yss(x) with the corresponding steady state input uss(x). Similarly, an operating region can be represented by yss(x)±Δy(x) with uss(x)±Δu(x). For an operating region, assume that the persistently exciting input signals have the mean uss(x) (i.e., the steady state input corresponding to the center of the operating region). If the dynamics in the operating region is linear, the output is also expected to have the mean yss(x) (i.e., the steady state output corresponding to the center of the operating region). Significant deviation of the output mean from yss(x) is an indication of nonlinearity. Of course, other linearity evaluation can also be used, e.g., the condition number of the regressor-output data matrix [37].A linear time-invariant DPS can be represented as a linear mapping from the input u(x, t) to the output y(x, t). This mapping can be expressed in a Fredholm integral equation of the first kind [12,41](5)y(x,t)=∫Ω∫0tg(x,ζ,t−τ)u(ζ,τ)dτdζ.where g(·) is so called Green's function (i.e., impulse response function or kernel) that denotes the influence of the input at the location ζ and the time τ on the output at the location x and the time t (Fig. 3). For convenience, the model (5) can be equally expressed by(6)y(x,t)=∫Ω∫0tg(x,ζ,τ)u(ζ,t−τ)dτdζ.Because it is a linear time-invariant model, it may only be able to approximate the nonlinear DPS at a given operating point. To model nonlinear DPS at multiple operating points, a multi-modeling approach is proposed in this study.As shown in Fig. 1b, each local spatio-temporal model is used to model the local dynamics on one operating region. For the rth local operating region, a set of spatio-temporal input–output data {u(x, t)|x∈Ω, t=1, …, Lr}, {y(xi, t)|xi∈Ω, i=1, …, N, t=1, …, Lr} can be obtained, where Lrdenotes the time length and N is the number of measured spatial points of the output. For simplicity, it is assumed that the spatial information of the input is known from some physical knowledge and the sensor locations xi(i=1, …, N) are uniformly distributed over the spatial domain. Now the problem is to estimate the corresponding spatio-temporal model (6) from this set of local experimental data.Because the spatio-temporal model (6) is infinite-dimensional and spatio-temporal coupled, a finite-dimensional model reduction is required for implementation. For dimension reduction and spatio-temporal decoupling, the space/time separation method is used here. Similar to Fourier series, the key idea of space/time separation is to expand the spatio-temporal model onto spatial output bases{φi(x)}i=1n, spatial input bases{ψi(x)}i=1m, and temporal bases{ϕi(t)}i=1l.(7)g(⋅)=∑i=1n∑j=1m∑k=1lθijkφi(x)ψj(ζ)ϕk(τ),where θijk∈R (i=1, …, n, j=1, …, m, k=1, …, l) are unknown constant coefficients of the kernel, n, m and l are the dimensions of the corresponding bases (i.e., kernel size). Then substituting (7) into (6) will have(8)yˆ(x,t)=∫Ω∫0t∑i=1n∑j=1m∑k=1lθijkφi(x)ψj(ζ)ϕk(τ)u(ζ,t−τ)dτdζ.The bases design is an important issue, which are designed as follows.The spatial output bases{φi(x)}i=1nare identified at N spatial locations using the Karhunen–Loève decomposition [1,14,15,42–44] from the system output{y(xi,t)}i=1,t=1N,Lr. Then one can interpolate the eigenfunctions to locations where the data are not available. Because these bases can be ordered according to their importance to the system [42], only the first few spatial bases can represent the dominant spatial modes. This is the reason why we choose the Karhunen–Loève method. The KL method actually utilizes two-time-scale properties where the system can be separated into slow (dominant) and fast (ignorable) parts. Thus it is particularly suitable for dissipative PDEs, particularly of parabolic PDEs. The energy method [42] can help to select the value of n. See related references for more details of the Karhunen–Loève decomposition.The spatial input bases{ψi(x)}i=1mare often determined from a priori physical knowledge about the spatial distribution of the control. The approximation using other functions (e.g., splines) can also be used when the a priori knowledge is not available. The dimension m is just the number of independent inputs.The temporal bases{ϕi(t)}i=1lcan be selected as one-parameter Laguerre functions [45], two-parameter Kautz functions [46] and generalized multi-parameter orthonormal basis functions [47] according to the system complexity. Here, the Laguerre functionsϕi(t)=2ξeξt(i−1)!⋅di−1dti−1[ti−1⋅e−2ξt],i=1,2,…,l,ξ>0,are chosen for the development, due to their simplicity of use (only one adjustable time-scaling factor ξ). Of course, ξ should be properly designed in order to achieve significant modeling performance. The optimal selection method is proposed for temporal kernel system [48]. For this spatio-temporal kernel modeling, the time-scaling factor ξ and the dimension l can be selected using the cross-validation technique.Note that one advantage of the expansion onto spatial Karhunen–Loève basis functions and temporal Laguerre basis functions is that the number of parameters to be estimated in the modeling can be small, that will largely reduce the modeling complexity. Moreover, spatial Karhunen–Loève basis functions can lead to a low-dimensional model, which is very attractive for practical control.When the kernel size n, m and l are assumed to be known, unknown parameters θijkof the kernel can be estimated by minimizing the cost function(9)min∑i=1N∑t=1Lr|y(xi,t)−yˆ(xi,t)|2,where{y(xi,t)}i=1,t=1N,Lris the system output measured at N spatial locations and Lris the time length. Note that the predicted output{yˆ(xi,t)}i=1,t=1N,Lrof the kernel can be estimated from (8) using the pointwise input data{u(xi,t)}i=1,t=1M,Lrat M spatial locations, then (9) can be minimized using many linear optimization methods.The local model should be evaluated on a new testing experiment. First, a new set of testing inputs {utest(x, t)|x∈Ω, t=1, …, Ltestr} around the rth local operating point with the same range as the training inputs are designed. Then a new set of experimental output data{ytest(xi,t)}i=1,t=1N,Ltestrcan be measured. By online simulating the model (6) on the same testing inputs, the predicted outputs{yˆtest(xi,t)}i=1,t=1N,Ltestrof the model are obtained. A model error index: root of mean square error (RMSE) can be estimated as follows(10)RMSE=1NLtestr∑i=1N∑t=1Ltestr(ytest(xi,t)−yˆtest(xi,t))2.The RMSE on the testing data will give a criterion of the model performance. If satisfactory performance is achieved, the rth local modeling ends. Otherwise, adjust the time-scaling factor ξ of Laguerre functions, the dimensions n and l of the bases, and repeat the estimation process.Hard switching [49] of local models could lead to deterioration in performance during transitions between local regions. To ensure smooth transition, one way is to use traditional fuzzy integration(11)yˆ(x,t)=μ1(s(Ω,t))yˆ1(x,t)+⋯+μπ(s(Ω,t))yˆπ(x,t)μ1(s(Ω,t))+⋯+μπ(s(Ω,t)).where the divisor μ1(s)+⋯+μπ(s) is used to guarantee the sum of normalized model weightsμi(s)/∑i=1πμi(s)is one. Note that traditional fuzzy membership function (MF) μ(s) is only related to system state s (i.e., scheduling variable). To guide the model scheduling, the system state s(Ω, t)={s(x, t)|x∈Ω} can be constructed using a set of d-lagged field distribution(12)s(x,t)=[y(x,t−1),…,y(x,t−d)]T∈Rd.However, for DPS the local model may have different weights at different spatial locations. To enhance the modeling capability, a three-domain (3D) fuzzy integration (Fig. 1c) is proposed here to obtain the global model(13)yˆ(x,t)=μ1(x,s)yˆ1(x,t)+⋯+μπ(x,s)yˆπ(x,t)μ1(x,s)+⋯+μπ(x,s).Each local model is assigned to a 3D fuzzy membership function (MF) μ(x, s) (see Fig. 4for an example) [50] which is related to system state s and also spatial variable x. Unlike traditional two-domain (2D) fuzzy [33] which does not have spatial variables, a spatial axis is added in the 3D fuzzy to handle the spatial dynamics. Because the local model can have different weights at different spatial locations, it will enhance the modeling capability for spatio-temporal dynamics.Though the fuzzy clustering used in the operation space division can give some information about the scheduling functions, one better and accurate method is to learn these functions from the process data over the whole local regions. First, a new set of experimental data {u(x, t)|x∈Ω, t=1, …, L}, {y(xi, t)|xi∈Ω, i=1, …, N, t=1, …, L} covering all required operating regions and their transitions are obtained. Then one method is that: utilizing the system state s(Ω, t), spatial locations x and all local model predictions{yˆi(x,t)}i=1πas the input, the measured system output y(x, t) as the output, the scheduling functions are trained to minimize the prediction error.Because the system state s(Ω, t) is spatially distributed, to reduce it into a solvable finite-dimensional problem, the space and time are separated by expanding s(x, t) onto a set of finite-dimensional spatial bases{φi(x)}i=1b(14)s(x,t)=∑i=1bφi(x)si(t).The spatial bases{φi(x)}i=1bobtained typically from the Karhunen–Loève decomposition will form a modal space, where the finite-dimensional modes(15)s(t)=[s1T(t),…,sbT(t)]T∈Rbd,si(t)=∫Ωs(x,t)φi(x)dx∈Rd,will represent the system state.Assume that the membership function μi(x, s) can be approximated by(16)μi(x,s(Ω,t))=μi(x,∑j=1bφj(Ω)sj(t))=wi(x,s(t)),andwi(x,s(t))can be further decomposed into a space/time separated form (Fig. 5)(17)wi(x,s(t))=∑j=1z∑k=1σϑijkfj(x)hk(s(t)),where fj(x):R→R (j=1, …, z) are fuzzy spatial bases, hk(s(t)):Rbd→R (k=1, …, σ) are fuzzy temporal bases and ϑijk(i=1, …, π, j=1, …, z, k=1, …, σ) are unknown parameters. Now unknown parameters ϑ=[ϑ111, …, ϑ11σ, …, ϑ1z1, …, ϑ1zσ, …, ϑπz1, …, ϑπzσ]Tcan be estimated by minimizing the following cost function(18)minϑ∑i=1N∑t=1L|y(xi,t)−yˆ(xi,t)|2,where the global model predictionyˆ(x,t)can be obtained by(19)yˆ(x,t)=w1(x,s(t))yˆ1(x,t)+⋯+wπ(x,s(t))yˆπ(x,t)w1(x,s(t))+⋯+wπ(x,s(t)).The solution can be obtained by many nonlinear optimization algorithms, e.g., Newton method.This step will minimize the global model error, while the local modeling only minimizes the local model error. After these weighting functions are obtained, the integrated global model can be used to formulate a 3D Takagi–Sugeno (TS) fuzzy model for control design. Note that before the applications, the global model should be validated on new global testing experiments. Though the modeling experiment may need sufficient sensors to collect the spatially distributed information, once the model is established a few sensors are enough for real-time monitoring and control. In practice, the demanding model computation should be avoided. This is achieved by using a small number of local models, a reduced local model spatial dimension, and an optimized local model temporal dimension. Actually, the global model only includes the π number of low-dimensional ODEs and the π number of weights function evaluation.The proposed modeling can be applied in many nonlinear distributed parameter systems. Here the catalytic rod reactor (Fig. 6) is selected as the application example because it is a typical convection reaction process in the chemical industry. The reactor is fed with pure species A and a zero-th order exothermic catalytic reaction of the form A→B takes place in the rod. Since the reaction is exothermic, a cooling medium that is in contact with the rod is used for cooling.Under the assumptions of constant density and heat capacity of the rod, constant conductivity of the rod, and constant temperature at both sides of the rod, and excess of species A in the furnace, the mathematical model which describes the spatio-temporal evolution of the dimensionless rod temperature consists of the following parabolic PDE [1]∂y(x,t)∂t=∂2y(x,t)∂x2+βT(e−(γ/1+y)−e−γ)+βu(u(x,t)−y(x,t)),subject to the boundary and initial conditions:y(0,t)=0,y(π,t)=0,y(x,0)=y0(x),where y(x, t), u(x, t), βT, βu, and γ denote the temperature in the reactor, the temperature of the cooling medium, the heat of reaction, the heat transfer coefficient, and the activation energy. The process parameters are set as:βT=50,βu=2,γ=4.There are four actuators (M=4) u(t)=[u1(t), …, u4(t)]Twith the spatial distribution function ψ(x)=[ψ1(x), …, ψ4(x)]Tto manipulate the temperature u(x, t) of the cooling medium (i.e., u(x, t)=ψ(x)Tu(t)), where ψi(x)=H(x−(i−1)π/4)−H(x−iπ/4) (i=1, …, 4) and H(·) is the standard Heaviside function. Twenty-two sensors (N=22) uniformly distributed in the space are used to measure the temperature. The sampling interval is Δt=0.01. In the modeling, the sampling interval depends on the slow/fast nature of system dynamics. For the fast system, the sampling interval should be small enough to guarantee the modeling accuracy. For the slow system, the sampling interval can be a little large. In this case, the sampling interval is selected as 0.01 because smaller sampling interval cannot significantly improve the modeling accuracy. The following sections will introduce the detailed modeling procedure in the applications.Initially, two coarse operating points are selected according to a priori knowledge. Then, the random input signals are used to excite the system. As an example, 8000 samples (La=8000) of actuator 1 with the simulation time 80 are shown in Fig. 7, where the dashed vertical line denotes the region boundary. Correspondingly, 8000 samples of the output y(x, t) as shown in Fig. 8are measured for a fine division of the operating space. Using fuzzy c-means algorithm, the operating space Φ is decomposed from coarse scale to fine scale gradually with more clusters. Finally four clusters are obtained as shown in Fig. 9, where only two dimensions of u1 and y(x11) for high-dimensional clusters are given for simplicity. As a result, four operating pointsΦ˜i(=(ussi,yssi(x)),i=1,2,3,4)are obtained as shown in Fig. 10for steady state input and Fig. 11for steady state output. The linearity evaluation of operating region is passed that is ignored for simplicity.In the modeling of local spatio-temporal kernel model (6) for each local region, the bases used in the time/space separation are designed as follows. The first four Karhunen–Loève basis functions{φi(x)}i=1n(n=4)are used as spatial output bases. The temporal bases{ϕi(t)}i=1lare chosen as Laguerre functions with the time-scaling factor ξ=4.05 and dimension l=4. The spatial input bases{ψi(x)}i=1m(m=4)are standard Heaviside functions which are determined by the spatial distribution of actuators.Then unknown parameters of local spatio-temporal kernel models are estimated using (9). The local model parameters (i.e., n, l and ξ) are adjusted until the modeling error RMSE is small enough. For easy comparison, results for all local regions are simultaneously plotted in one figure. The training results are ignored for simplicity. To test the local models, as an example, 2000 samples of the input signals u1(t) of the actuator 1 for each local region are shown in Fig. 12, where the red line denotes the steady state input uss1. Correspondingly, the measured outputs in four local regions for testing are plotted in Fig. 13. These two figures also clearly show the division of the operating space. The prediction errorse(x,t)=y(x,t)−yˆ(x,t)of four local models on the testing data are plotted in Fig. 14. Note that the t-axis in Figs. 13 and 14 has four temporal regions denoted by [0, 20]. The measured output and predicted output of four local models at the sensor 11 on the testing data are also shown in Fig. 15, where the blue line denotes the steady state output yss(x11). From these testing results, it can be shown that the obtained four local spatio-temporal models work well in their local regions.First, to train the 3D fuzzy MF, the random input signals covering four local regions are designed to excite the system dynamics, especially the transition dynamics between local regions. For example, 14,000 samples of actuator 1 with the simulation time 140 are shown in Fig. 16, where the mean (i.e., red line) of the input signals increases gradually from the region 1 to region 4 to cover four local regions and their transitions. Correspondingly, the measured 14,000 samples of the output y(x, t) as shown in Fig. 17are used to train the 3D fuzzy MF of four local models.As shown in Fig. 18, a schedule variable s(t) is constructed according to (15) to reflect the change of system states and operating points, where s(x, t) in (12) is formed with d=10. The 3D fuzzy MFs of four local models can be trained as shown in Fig. 19(for w1(x, s)) and Fig. 20(for w4(x, s)) as an example.Finally, all local models are integrated together to obtain the global multi-model. To test the performance of the obtained multi-model, the random input signals covering four local regions are designed to excite the system dynamics. For example, 14,000 samples of actuator 1 are shown in Fig. 21, where the red line denotes the mean of input signals. Correspondingly, the measured 14,000 samples of the output y(x, t) as shown in Fig. 22are used to test the multi-model. The predicted output and the spatial normalized absolute errors SNAE(t)=∫|e(x, t)|dx/∫dx of the multi-model are shown in Figs. 23 and 24respectively. Obviously, the system dynamics over four local regions can be modeled very well by the proposed multi-modeling.For comparison, a single linear kernel model is obtained using the same local kernel modeling as the multi-modeling. The prediction errors SNAT(t) of two models are shown in Fig. 25. Obviously, the single linear model works well only in a middle operating region, while the multi-model can work well in all four operating regions. Moreover, a single nonlinear model is obtained with more costly model structure selection and persistently exciting experiment. As shown in Fig. 26, the accuracy of the multi-model is better than the single nonlinear model. By decomposing the complexity of modeling and experiment, the modeling performance could be improved.The comparison with the multi-modeling approach in the previous paper (see [35] for more details) is also performed. The prediction errors SNAT(t) of two models are shown in Fig. 27. The average SNAT(t) the current and previous multi-model is 0.014 and 0.021. The accuracy of the current multi-model is better than the previous multi-model. This is because in the current approach the aggregation weights of multiple local models consider both the dynamics and spatial locations. Moreover, the operating space division of the current modeling approach is simpler and easier because it only needs one experiment and one fuzzy clustering, while the previous modeling approach needs four experiments and four local modeling. The effectiveness of the proposed method is clearly demonstrated in this application.

@&#CONCLUSIONS@&#
In this study, the modeling problem of unknown nonlinear DPS with multiple operating points is investigated. A fuzzy-based spatio-temporal multi-modeling approach is proposed. A hybrid approach based on a priori information and fuzzy clustering can decompose the operating space from coarse scale to fine scale automatically. In the local spatio-temporal modeling, to reduce the model dimension and the number of unknown parameters, the Karhunen–Loève method is used for the space/time separation. Finally, to guarantee a smooth transition between local spatio-temporal models, a 3D fuzzy integration method is used to provide a global spatio-temporal model. Both the multi-modeling and space/time separation can reduce the modeling complexity for the nonlinear DPS. With the multi-modeling, the model accuracy is better and the operating range is larger than the single local modeling. The experiment complexities become reduced compared with the single global modeling.