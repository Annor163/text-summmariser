@&#MAIN-TITLE@&#
RFID reader-to-reader collision avoidance model with multiple-density tag distribution solved by artificial immune network optimization

@&#HIGHLIGHTS@&#
An RFID reader-to-reader collision avoidance model with multiple-density tag distribution (R2RCAM-MTD) is established.An artificial immune network (AINet-MTD) is used to solve R2RCAM-MTD.Four cases with different blocks in warehouse management are investigated.The results indicate that AINet-MTD is effective and efficient.

@&#KEYPHRASES@&#
Artificial immune network,Multiple-density tag distribution,Optimization,Reader-to-reader collision,Resource allocation,

@&#ABSTRACT@&#
Radio frequency identification (RFID) is an emerging non-contact technique where readers read data from or write data to tags by using radio frequency signals. When multiple readers transmit and/or receive signals simultaneously in a dense RFID system, some reader collision problems occur. Typically, in a modern warehouse management system, the warehouse space is partitioned into blocks for storing different goods items on which RFID tags are affixed. The goods items with the equal size are placed in the same block. Because the sizes of goods items are possibly different among blocks, the density values of tags that are affixed on the goods items are different from each other. In this case, tags in each block are distributed randomly and uniformly while tags in the whole warehouse space (i.e., all blocks are considered as a whole) follow a non-uniformly random distribution. For the sake of academic research, this situation is defined as a multiple-density tag distribution. From the viewpoint of resource scheduling, this article establishes an RFID reader-to-reader collision avoidance model with multiple-density tag distribution (R2RCAM-MTD), where the number of queryable tags is used as the evaluation index. Correspondingly, an improved artificial immune network (AINet-MTD) is used as an optimization method to solve R2RCAM-MTD. In the simulation experiments, four cases with different blocks in a warehouse management system are considered as testbeds to evaluate the effectiveness of R2RCAM-MTD and the computational accuracy of AINet-MTD. The effects of time slots and frequency channels are investigated, and some comparative results are obtained from the proposed AINet-MTD algorithm and the other existing algorithms. Further, the identified tags and the operating readers are graphically illustrated. The simulation results indicate that R2RCAM-MTD is effective for reader-to-reader collision problems, and the proposed AINet-MTD algorithm is more efficient in searching the global optimal solution of R2RCAM-MTD than the existing algorithms such as genetic algorithm (RA-GA), particle swarm optimization (PSO), artificial immune network for optimization (opt-aiNet) and artificial immune system for resource allocation (RA-AIS).

@&#INTRODUCTION@&#
Radio frequency identification (RFID) is a kind of near field communication technology that enables objects to be identified without direct contact. Generally, an RFID system typically consists of multiple tags where the unique identification codes of objects are stored and a reader that communicates with tags over wireless channels [1,2]. Because RFID has such many advantages as non-contact, easy implementation, high environmental adaptation and enough durability, it has been applied compatibly in various fields, e.g., supply chain management [3,4], indoor positioning system [5,6], agricultural management [7,8] and manufacturing industry [9,10]. Therefore, RFID has been becoming a hot topic in both academic researches and industrial applications, as one of indispensable emerging technologies in Internet-of-Things (IOT) [11].To improve the identification efficiency of a stationary RFID system, multiple readers are usually installed in a group to add the tag interrogation area. In this case, when readers located closely enough operate simultaneously, the resulting reader collision problem may have negative effects on the interrogation performance of RFID system [12]. Generally speaking, reader collision problems can be divided into two kinds: reader-to-reader collision and reader-to-tag collision. Up to date, a great number of reader collision avoidance methods have been proposed for these two kinds of reader collision problems [13]. To be specific, for stationary RFID systems, there are three classes of reader collision avoidance methods: the coverage-based methods [14], the control mechanism-based methods [15] and the scheduling-based methods [16]. The coverage-based methods aim at minimizing reader collision by reducing overlapping areas of readers and thus improving the tag identification rate. The control mechanism-based methods attempt to make readers aware of the status of neighboring readers in order to mitigate reader collision. Besides, the scheduling-based methods transfer the reader collision problem as an optimization problem with respect to the allocation of communication resources [17,18]. In this case, time slots, frequency channels and power values are optimally configured among readers by using such heuristic algorithms as simulated annealing algorithm (SA) [19,20], genetic algorithm (RA-GA) [16], particle swarm optimization (PSO) [21] and artificial immune system (RA-AIS) [22,23].By investigating most of existing reader collision avoidance methods, it is easy to find out that tags are always considered explicitly or implicitly (by default) to obey a randomly uniform distribution [16,21]. For the sake of evaluation, in this case, the tag identification rate of a stationary RFID system is simply equivalent to the total effective interrogation area covered by readers. In practical applications, however, it is hard that tags are kept to distribute uniformly or regularly. For example, in a typical warehouse management system, the warehouse space is often sectionalized into several small blocks for different usages, and thus the same-size goods items can be stored into the same block. In this case, although tags affixed on the goods items distribute randomly and uniformly in a single small block, the distribution of all tags is non-uniform in the warehouse space as a whole. In reality, this is the case of multiple-density tag distribution [23]. Therefore, it is necessary that some reader collision avoidance models should be developed for such stationary RFID systems with multiple-density tag distribution.In the last decade, inspired by the biological immune system, artificial immune network has been developed as a heuristic evolutionary algorithm to solve some scientific and engineering problems. Initially, the artificial immune network was used for data clustering and multimodal function optimization [24,25]. Later, various versions of artificial immune network were issued by improving its algorithmic structures and operators (e.g., clone, mutation, suppression and recruitment). Self-reproduction, hypermutation and parallel evolution of antibodies enable artificial immune network to own powerful global search capability. Hence, it is possible that artificial immune network is applied to optimally assign communication resources to RFID readers.This paper attempts to establish a reader-to-reader collision avoidance model for stationary RFID systems with multiple-density tag distribution (R2RCAM-MTD) by considering that time slots and frequency channels are optimally allocated. By investigating several cases with different multiple-density tag distribution schemes, R2RCAM-MTD is evaluated functionally. On the other hand, an improved artificial immune network (AINet-MTD) is proposed to efficiently solve R2RCAM-MTD.The remainder of this paper is organized as follows. Section 2 describes the RFID reader-to-reader collision problem and reviews the principle of immune network. Section 3 establishes the RFID reader-to-reader collision avoidance model with multiple-density tag distribution (R2RCAM-MTD), and gives the technical details of artificial immune network (AINet-MTD). Further, a series of comparative numerical experiments are arranged in Section 4 to evaluate the performances of AINet-MTD and the other four existing algorithms. Finally, some conclusions are drawn in Section 5. In addition, some variables and symbols, supplementary figures and supplementary datasets are listed in Appendices A–C, respectively.Generally, a basic RFID system consists of one or more readers, a number of tags and an application system storing and managing data. For a stationary RFID system whose readers are fixed physically in the deployment space, the operating procedures can be described as follows. Firstly, a reader with an antenna transmits actively radio frequency (RF) signals within its effective interrogation range. Secondly, if a passive tag with an antenna is located in this range, it will be powered and activated via electromagnetic coupling signals from this reader, and will send data stored in the tag chip back to this reader at a pre-selected frequency channel. Thirdly, the reader receives data from the tag and delivers it toward the application system for further processing.To improve the interrogation capability of the stationary RFID system, however, it is necessary that multiple readers should be deployed in the same working space. In this case, the possible reader collision problems (especially the reader-to-reader collision) will result into the reduction in the interrogation area of readers. To be specific, when a desired reader attempts to receive the signals from tags correctly, the power of signal that one or more neighboring readers (also called interfering readers) transmit simultaneously is possibly larger than the power of backscatter signal from the tag. As a result, the desired reader should have a smaller effective interrogation radius.Fig. 1illustrates a simple RFID system with two stationary readers – a desired reader R1 and an interfering reader R2 – whose distance is denoted as d2,1. As shown in Fig. 1, the desired reader R1 can reach the maximum interrogation radius rmax,1 without interference from other readers (marked as a blue dashed-line circle). However, if R1 and R2 operate at the same time, and R1 locates within the interference range of R2 (i.e., the distance between R1 and R2 is less than rinterfer), the interrogation radius of R1 will decrease to r1 (marked as a black solid-line circle) so as to communicate with tags correctly. Consequently, the tags located outside the black solid-line circle cannot be identified successfully by R1. Therefore, how to avoid such reader collision is becoming a research hotspot in the field of RFID.The biological immune system (BIS) is one of fundamental evolutionary systems that the human being owns, which is capable of excreting cells/antibodies to destroy the invading antigens with the help of such mechanisms as antigen recognition, cell evolution, cell memorization, cell proliferation and cell concentration adjustment [24]. In detail, once some new antigens invade the organism, the activated B lymphocytes (B-cells) propagate a number of antibodies to destroy those antigens with the help of T lymohocytes (T-cells). During the antibody reproduction, these antibodies iteratively suffer from the somatic mutation and concentration suppression at a high rate. As this process continues, these antibodies gradually become mature and thus evolve as memory cells which have more life cycles. This process is called the primary response. Since then, if the same or similar antigens appear again in the organism, these memory cells will response more quickly, more sharply and more effectively to destroy the invading antigens. Instead of the primary response, this process is called the secondary response.Inspired by BIS, the artificial immune system (AIS) has been developed to solve real-world problems such as function optimization, intrusion detection, data mining, and pattern recognition. Up to date, AIS can be clustered into four families: clone selection series, negative selection series, danger theory series and immune network series. Especially, artificial immune networks are widely used in some specific fields. Corresponding to biological immune systems, artificial immune networks have several concepts that can be defined in terminology. For the sake of clear description, some terms in both BIS and AIS are defined in Table 1.Artificial immune network is an important branch of artificial immune systems. As a classic artificial immune network, opt-aiNet was designed for multimodal function optimization [25]. Opt-aiNet employs a uniform cloning where each antibody has a fixed number of clones, and introduces an affinity-based Gaussian mutation where the mutation degree depends on its affinity. Meanwhile, the measure of Euclidean distance is used to evaluate to what extent antibodies are similar, and the suppression threshold is used to control the concentration of antibodies. Following opt-aiNet, different variants have been developed to solve all kinds of scientific and engineering problems.Recently, an artificial immune system for resource allocation (RA-AIS) was proposed to solve RFID reader-to-reader collision avoidance model (R2RCAM) [22]. From the viewpoint of algorithmic structure, RA-AIS is in fact an artificial immune network. In RA-AIS, the antigen corresponds to the resource allocation to readers in R2RCAM, the antibody corresponds to the feasible solution with respect to resource allocation and the affinity corresponds to the effective interrogation area of readers. By resorting to powerful global search capability, RA-AIS can obtain larger effective interrogation area in solving RFID reader collision problem. However, the tediousness of the mutation operator impairs the computational efficiency of RA-AIS to some extent.As mentioned in Section 2.1, multiple RFID readers are often installed into a group and tags are affixed on the goods items in some real-world applications, such as warehouse management. To facilitate storage and management, a warehouse space is often divided into several blocks, and thus different types of goods items are placed in an independent block, respectively. If we assume that tags are distributed randomly and uniformly in each block, these tags obey a single-density tag distribution in a single block. Due to the fact that the distribution of tags is different in density for each block, the distribution of all tags in the whole warehouse space can be defined as the multiple-density tag distribution. Next, we will establish a reader-to-reader collision avoidance model with multiple-density tag distribution (R2RCAM-MTD), as far as an RFID system with multiple stationary readers that are deployed in a sectorized warehouse is concerned.Considering an example as shown in Fig. 2, the warehouse space is sectionalized into P×Q blocks. If we define ρ(p,q) be the tag density in the block located at the block coordinate (p,q), the tag density matrix of the warehouse space can be given by(1)ρ=ρ(1,1)⋯ρ(1,q)⋯ρ(1,Q)⋯⋯⋯⋯⋯ρ(p,1)⋯ρ(p,q)⋯ρ(p,Q)⋯⋯⋯⋯⋯ρ(P,1)⋯ρ(P,q)⋯ρ(P,Q),1≤p≤P,1≤q≤Q.Especially speaking, it is known from Eq. (1), if all the tag density values are equal, i.e.,(2)ρ(1,1)=⋯=ρ(p,q)=⋯=ρ(P,Q),the tags in the whole space obey a randomly uniform distribution. In this case, the tag density matrix in Eq. (1) can be defined as a single-density tag distribution matrix.Generally, if there exist two or more tag density values that are unequal, i.e., if p1,p2∈[1,P] and q1,q2∈[1,Q] satisfy(3)ρ(p1,q1)≠ρ(p2,q2)the tags in the whole space do not follow a randomly uniform distribution. Instead of the single-density tag distribution, in this case, the tag density matrix in Eq. (1) can be defined as a multiple-density tag distribution matrix.Let's assume that NReader readers are installed randomly in the warehouse space, including a desired reader Riand NReader−1 interfering readers Rj(j=1, 2, …, NReader,j≠i). As shown in Fig. 2, dj,iis the Euclidean distance between Riand Rj, and ri(k) is the effective interrogation radius of Riat the kth time slot. As well, NFreq frequency channels and NSlot time slots are available to be allocated for these readers. To successfully identify the target tag at the kth time slot, the signal-to-interference-plus-noise ratio (SINRi(k)) of a signal received by Ribackscattered from the target tag must be greater than a threshold value (i.e., SINRmin). In other words, if Riis expected to identify the tag with a distance x, SINRi(k,x) must satisfy(4)SINRi(k,x)=BPi(k,x)Ii(k)+Noisei≥SINRmin,where BPi(k,x) is the backscatter signal power received by Rifrom the tag, Ii(k) is the total interference power measured at Riat the kth time slot from the other operating readers, and Noiseiis the background noise power measured at Ri. According to [18], BPi(k,x) can be defined as(5)BPi(k,x)=αbωETagPiGTGR(PLossx−γ)2,where αbω is the normalized spectrum power, ETag is the effective power reflection coefficient of the tag, Piis the transmitting signal power of the reader Ri, GT represents the transmitting antenna gain, GR represents the receiving antenna gain, PLoss denotes the reference path loss at the distance of one meter from a desired reader, and γ is the path-loss exponent (always γ≥2). On the other hand, the total interference power Ii(k) is determined by(6)Ii(k)=∑j=1,j≠iNReaderωj(k)Ij,i(k)dj,i=hGTGR∑j=1,j≠iNReaderωj(k)Pjβmask(|CHi(k)−CHj(k)|)PLossdj,i−γ.Where, h is the fading coefficient, Pjrepresents the transmitting signal power of Rj, CHi(k) denotes the frequency channels selected by Riat the kth time slot and CHj(k) denotes the frequency channels selected by Rjat the kth time slot. Here, CHi(k)∈[1,NFreq] and CHj(k)∈[1,NFreq]. According to the definition of the spectrum mask level in EPC global Class 1 Gen 2 [26],βmask(•)is a function with respect to the frequency channel interval between two readers. Note that the fading is not considered here because the distance between readers is on the line of sight. Besides, the sign function ωj(k) satisfies(7)ωj(k)=1,ifthereaderRjoperatesatthekthslot,0,otherwise.By integrating Eqs. (4)–(7), SINRi(k,x) can be completely expressed as(8)SINRi(k,x)=αbωETagPiGTGR(PLossx−γ)2hGTGR∑j=1,j≠iNReaderωjkPjβmaskCHik−CHjkPLossdj,i−γ+Noisei,s.t.∀i∈NR,∀k∈NS,CHi(k)∈CH,where NR={1, 2, …, NReader}, NS={1, 2, …, NSlot} and CH={1, 2, …, NFreq}. If we define ri(k) be the effective interrogation radius of Riat the kth time slot, ri(k) can be obtained by solving(9)ri(k)=argmaxxSINRi(k,x)≥SINRmin.However, ri(k) must be less than or equal to the maximum interrogation radius rmax,i(k) of Riwith no interference at the kth time slot. According to [27], the maximum interrogation radius rmax,i(k) is determined by(10)rmax,i(k)=λi(k)4πPiGTGRPmin×1−Md4(1+Md)2,where λi(k) denotes the wavelength of Riat the kth time slot, Pmin is the minimum power required for the tag to operate and Mdis the modulation depth.By combining Eqs. (8)–(10), ri(k) is expressed as(11)ri(k)=minαbωETagPiGTGRPLoss2SINRminhGTGR∑j=1,j≠iNReaderωj(k)Pjβmask(|CHi(k)−CHj(k)|)PLossdj,i−γ+Noisei1/(2γ),rmax,i(k),s.t.∀i∈NR,∀k∈NS,CHi(k)∈CH.Once the effective interrogation radius ri(k) is calculated by using Eq. (11), the tag identification capability of the RFID system can be also determined. The tag identification capability can be measured by the number of tags that readers are able to query within the effective interrogation area [12]. For the sake of simplicity, it is called the total number of queryable tags. According to Fig. 2, the total number of tags that reader Rican query at the kth time slot can be mathematically defined as(12)NTi(k)=∑p=1P∑q=1Qρ(p,q)×Si(k,p,q),where Si(k,p,q) is the effective interrogation area of Riin the block of ρ(p,q) at the kth time slot. Note that Si(k,p,q)=0 means the fact that Rican identify no tags in the block of ρ(p,q) at the kth time slot.Above all, from the viewpoint of resource scheduling, the reader-to-reader collision avoidance model with multiple-density tag distribution, i.e., R2RCAM-MTD, can be modeled as the following optimization problem(13)MaximizeNT=∑i=1NReader∑k=1NSlotNTi(k),=∑i=1NReader∑k=1NSlot∑p=1P∑q=1Qωi(k)×ρ(p,q)×Si(k,p,q),∀i∈NR,∀k∈NS,CHi(k)∈CH.Especially, when ρ(p,q)=1 for all p (p=1,2,...,P) and q (q=1,2,...,Q), the tag density matrix ρ as shown in Eq. (1) becomes an all ones matrix. In this case, R2RCAM-MTD described in Eq. (13) is equivalent to the model R2RCAM given in [22].In this subsection, an improved artificial immune network for R2RCAM-MTD, i.e., AINet-MTD, is proposed to aim at optimizing the allocation of time slots and frequency channels. In the proposed AINet-MTD algorithm, the antigen corresponds to the objective optimization problem shown in Eq. (13), the antibody corresponds to the feasible allocation solution with respect to time slots and frequency channels. Accordingly, the affinity between the antigen and the antibody corresponds to the total number of queryable tags (i.e., the function value of the objective problem with respect to a feasible solution). Therefore, for this specific application of R2RCAM-MTD, the major immune operators in AINet-MTD should be redesigned or revised, where the evolved antibodies would be subject to the practical constraints of RFID systems. The technical details of the proposed AINet-MTD algorithm are described as follows.According to R2RCAM-MTD in Eq. (13), a feasible solution means a candidate antibody string in AINet-MTD. Because available frequency channels are discrete for readers, they can be denoted by integer numbers. Therefore, the antibody string can be encoded as a sequence of integer numbers, as described in Fig. 3. Seen from Fig. 3, an antibody string includes NReader segments, and each segment has NSlot bits. For example,CHi(1),...,CHi(k),...,CHi(NSlot)is used for Ri. Where, CHi(k) denotes the frequency channel allocated to Riat the kth time slot and CHi(k)∈CH. Note that CHi(k)=0 means that Ridoes not operate at the kth time slot. Clearly, an antibody has the length of NSlot×NReader bits.For such a maximization problem as R2RCAM-MTD in Section 3.1, its objective function is selected as the affinity function of the proposed AINet-MTD algorithm. This means that an affinity value corresponds to every candidate antibody (i.e., every candidate allocation solution). Therefore, we rewrite the objective function in Eq. (13) in form of the affinity function with respect to the candidate antibody string Ab, that is(14)Affinity(Ab)=∑i=1NReader∑k=1NSlot∑p=1P∑q=1Qωi(k)×ρ(p,q)×Si(k,p,q),and∀i∈NR,∀k∈NS,CHi(k)∈CH.By using Eq. (14), we can evaluate the affinity value of any candidate antibody, and then take advantage of this affinity value to guide the evolution of antibody population.In the initialization phase, some parameters of immune operators are initialized and NIni candidate antibodies are randomly produced to construct a candidate antibody population. Obviously, all candidate antibodies must be subject to the constraints in Eq. (14). Then, the affinity values of all candidate antibodies are evaluated according to the affinity function shown in Eq. (14).Clone operator means that children antibodies are reproduced from the same parent antibody. The clone strategy determines to what degree the parent antibody participates in reproduction. The uniform clone strategy used in AINet-MTD is very simple and easy to implement. In detail, NClone (a predefined multiplier) children antibodies are cloned from each parent antibody whatever its affinity is. All cloned children antibodies but the parent one undergoes the following mutation operator.Usually, it is believed that the parent antibodies may generate new antibodies with higher affinity when they experience hyper mutation. Thus, as the only and most important operator in artificial immune network, the mutation operator should be acted effectively. Considering the encoding format with integers used in AINet-MTD, the mutation operator should be redesigned carefully. According to Eq. (11), the effective interrogation radius of each reader is related with the difference between the frequency channels allocated to readers. The total interference is quite great when the same channel allocated to readers within a certain distance. Therefore, a specific allocation mechanism is used to avoid the same frequency channel from being allocated to readers within a distance less than the lower bound dmin.To start with the mutation operator in AINet-MTD, two empty sets, i.e., the waiting reader set WR and the mutated reader set MR, are predefined to store some temporary data during the mutation process. Firstly, for any candidate antibody Ab, we select randomly a bit CHi(k) to be mutated and add Riwhere CHi(k) lies into WR. Secondly, we select randomly an element Rwfrom WR, and the bit CHw(k) to be mutated is determined. Thirdly, for CHw(k), we select randomly an available frequency channel number as the mutated result CH’w(k).After mutation, the waiting reader set WR and the mutated reader set MR are updated. Firstly, we add Rwinto MR and remove Rwfrom WR. Secondly, we find the readers (i.e., elements of SR) whose mutual distance from Rwis less than dmin and whose allocated channel is the same as CH’w(k), and add these readers into WR. The iterative process above is repeated until the waiting reader set WR is empty. For the sake of clear description, the pseudocode of the mutation operator is shown in Fig. 4.By executing the cloning operator and the mutation operator, it is possible that antibodies become similar in antibody encoding and thus their affinity is almost equal. Their effects are redundant in searching the global optima of the objective function. In this case, the concentration of antibodies is used as a measure index to evaluate the similarity degree of antibodies in the immune network. The higher concentration means that those antibodies are more similar. According to the immune network theory [24], those antibodies with high affinity and low concentration should be promoted, and antibodies with low affinity and high concentration should be suppressed in order to guarantee the diversity of antibodies. Thus, the suppression operator offers a chance to remove the redundant antibodies and improve the diversity of antibodies. Because redundancy of similar antibodies reduces the diversity of antibodies, the suppression operator plays a role of adjusting the concentration of antibodies. The suppression operator will be triggered only when there is no significant difference in the average affinity of candidate antibodies during two neighboring generations. In AINet-MTD, the similarity-based suppressor is employed. For any two candidate antibodies, the one with lower affinity will be removed if their Euclidean distance is less than a suppression threshold Ths. By measure of the concentration of the population, the suppression threshold Thscan be adjusted dynamically which follows(15)ThS=min(Du,v,u≠v)+ζ×(max(Du,v,u≠v)−min(Du,v,u≠v)).Whereζ∈(0,1]is a controlling factor which is used to adjust the threshold and Du,vis the Euclidean distance between the candidate antibodies Abuand Abv.After the suppression operator is executed, a certain number of antibodies satisfying the constraints are reproduced randomly and recruited into the antibody population. Note that the size of the candidate antibody population size should be less than or equal to the upper limit Nmax.When the number of iterations reaches the predefined maximum generations, the proposed AINet-MTD algorithm terminates.For clarity of clear description, the complete flowchart of the proposed AINet-MTD algorithm is given in Fig. 5.This section investigates the effects of the number of time slots and frequency channels, and compares the performance between the proposed AINet-MTD algorithm and four existing methods, i.e., genetic algorithm (RA-GA), particle swarm optimization (PSO), artificial immune network for optimization (opt-aiNet) and artificial immune system for resource allocation (RA-AIS).In the experimental simulations, readers are deployed randomly in a warehouse space of 100m×100m, and their detailed positions are listed as supplementary datasets in Appendix C. Following EPCglobal Class 1 Gen 2 protocols [26], a reader communicates with its target tags at the same frequency channel. For the sake of clarity, the parameters in R2RCAM-MTD are set as in Table 2, while the parameters in the proposed AINet-MTD algorithm are set as in Table 3. Besides, for all compared algorithms, the initialized population size is set to be 40 and the maximum number of iterations is set to be 500, respectively. All experimental simulations are run repeatedly for 30 trials in Matlab Platform with Microsoft Windows XP, Intel Core(TM) i3 CPU 2.4GHz and 2GB RAM memory.In the simulations, four test cases standing for different warehouse management schemes are used to evaluate the effects of time slots and frequency channels, as well as the performances of different algorithms. Fig. 6(a)–(d) gives the illustrations of these four test cases, i.e., case A (1×1 block), case B (1×2 blocks), case C (2×2 blocks) and case D (3×3 blocks), respectively. Seen from Fig. 6, if ρ0is the reference distribution density of tags, the tag density matrices of four cases are described as follows.(16)CaseA,ρA=ρ0,(17)CaseB,ρB=5ρ0ρ0,(18)CaseC,ρC=5ρ0ρ02ρ010ρ0,and(19)CaseD,ρD=5ρ0ρ06ρ02ρ010ρ03ρ07ρ04ρ09ρ0.To investigate the effects of different number of time slots, the number of available frequency channels is set to be 10. For each case, we evaluate the total number of queryable tags when different numbers of times slots are considered (increasing from 3 to 13 with an increment of 2). Therefore, for a specific case with a certain number of readers, we can plot a curve that reflects the relationship of the total number of queryable tags with the number of times slots. Meanwhile, different numbers of readers (e.g., NReader=4, 8, 12, 16, 20 and 24, respectively) are taken into account in four cases. Fig. 7(a)–(d) illustrates the effects of different numbers of time slots for four cases, respectively. It is observed from Fig. 7, the total number of queryable tags grows up almost linearly as the number of time slots increases, whichever case we consider. The reason is that there are more time slots for readers to select to identify tags so that their total number of queryable tags can become larger.On the other hand, as you see in Fig. 7, for a specific number of time slots, the total number of queryable tags firstly increases and then decreases as the number of reader varies from 4 to 24. For the example in Fig. 7(c), the curve of the total number of queryable tags with 8 readers always lies above other curves whatever the number of time slots is. To be specific, there is a rise in the curve of the total number of queryable tags if the number of readers increases from 4 to 8, while there is a decline if the number of readers increases from 8 up to 24. Specially, the curve of the total number of queryable tags with 24 readers always lies below all the other curves. In this scenario, fewer readers mean less reader collision while denser readers mean more reader collision.In summary, whichever case is considered, we can find that the more time slots are, the greater the total number of queryable tags is. However, when too many time slots are considered, the identification rate at which a reader queries tags is lower, because it has to wait more before the next interrogation. Thus, without loss of generality, 5 time slots are used in the following simulations.Similarly, to investigate the effects of different numbers of frequency channels, 5 time slots are used. As the number of available frequency channels increases from 6 to 16 with an increment of 2, we evaluate the total number of queryable tags for different numbers of readers (e.g., 4, 8, 12, 16, 20 and 24 readers, respectively) in four cases. Fig. 8shows the effects of frequency channels.Seen from Fig. 8, when there are few readers (e.g., 4 or 8 readers), the total number of queryable tags grows up slowly as more available frequency channels are provided. The reason is that there are such enough frequency channels to be allocated to readers that readers can escape from reader collision. Specially, for NReader=4, the curves are almost straight lines in all four cases with the increasing of frequency channels, which indicate that four readers can always be allocated at different channels to operate at each time slot when 6 or more frequency channels are available. On the contrary, when there are more readers (such as 16, 20 and 24 readers), the total number of queryable tags increases quickly with the increasing of the number of available frequency channels. This is because that more frequency channels imply more potential for readers to avoid reader collision, as a result, the total number of queryable tags increases indeed.For few frequency channels (e.g., 6 channels), on the other hand, the total number of queryable tags firstly increases and then decreases as more readers are given. However, for more frequency channels, e.g., 16 channels in Fig. 8(a), (b) and (d), we can find that the more readers are, the larger the total number of queryable tags is. The reason is that more available frequency channels are helpful for readers to mitigate reader collision and further make more readers operate simultaneously, so as to improve the total number of queryable tags. Without loss of generality, 10 frequency channels are used in the following simulations.To investigate the algorithmic performances, a series of comparative simulations are executed among the proposed AINet-MTD algorithm and the existing algorithms such as RA-GA, PSO, opt-aiNet and RA-AIS. In these simulations, four cases shown in Fig. 6 are considered, respectively. Note that the reference tag density ρ0 is set to be 1 tag per square meter without loss of generality. As a result from Section 4.2, 5 time slots and 10 frequency channels are available. The performance metrics with respect to the total number of queryable tags are obtained by the best, the worst, the mean and the standard deviation (std) of 30 times. To make it more clearly, the t-test is used to evaluate the effectiveness and the accuracy of different search algorithms. As a result, the 95% confidence intervals are also calculated from each group of data samples output from different algorithms.Tables 4–7give the numerical simulation results in four cases. For the sake of clear observation, the best results are typed in bold. Seen from Tables 4–7, there is a similar trend in the total number of queryable tags as the number of readers increases from 5 to 30. In detail, when the number of readers NReader increases from 5 to 30 (with an increment of 5), the total number of queryable tags performs firstly increasing and then decreasing. Therefore, there must exist a peak when NReader equals some specific value. Here, when NReader=10, the average total number of queryable tags obtained by AINet-MTD is 6549.2665, 22,470.868 and 41,384.978 for cases A, B and C, respectively. It is clear that a peak occurs with 10 readers for case A, B or C. On the contrary, when NReader=15, there exists a peak of 41,255.568 captured by AINet-MTD in the average total number of queryable tags for case D. In this case, the 95% confidence interval is (39,518, 42,993). These results demonstrate that more readers can contribute to the total number of queryable tags; however, when the number of reader reaches a certain value, the total number of queryable tags begins to decline due to the heavier collision problem among readers.Table 4 gives the comparison results of case A (with only one block) from different algorithms. Case A is a special example with single-density tag distribution, and looks like a uniformly random tag distribution as shown in [23]. Because of single-density tag distribution, it is evident that the total number of queryable tags is proportional to the total effective interrogation area. Seen from Table 4, the best, the worst and the mean values of the total number of queryable tags optimized by the proposed AINet-MTD algorithm are greater than those by RA-GA, PSO, opt-aiNet and RA-AIS. For example, when NReader equals 25, the mean total number of queryable tags optimized by AINet-MTD is 4695.04; while there are 906.44 by RA-GA, 646.02 by PSO, 434.67 by opt-aiNet and 2283.19 by RA-AIS, respectively. Correspondingly, compared to other existing algorithms, the proposed AINet-MTD algorithm harvests an improvement by 417.96%, 626.76%, 980.14% and 105.64%, respectively. These results demonstrate that the proposed AINet-MTD algorithm has more promising performance in solving R2RCAM-MTD when compared with the other four algorithms.Similarly, Tables 5–7 show the comparison results of cases B, C and D, whose tag density matrices are ρB, ρC and ρD, respectively. Seen from Tables 5–7, the proposed AINet-MTD algorithm is still more efficient in optimizing R2RCAM-MTD than RA-GA, PSO, opt-aiNet and RA-AIS, whichever is considered among cases B, C and D. By taking case C as an example, known from Table 6, if NReader equals 5, AINet-MTD harvests improvements in the mean total number of queryable tags by 23.01%, 102.09%, 111.06% and 33.02%, respectively, when it is compared with RA-GA, PSO, opt-aiNet and RA-AIS. Similarly, if NReader equals 30, it obtains improvements by 444.36%, 527.79%, 935.91% and 57.67%, respectively. By taking case D as another example, seen from Table 7, if NReader equals 10, AINet-MTD has improvements in the average total number of queryable tags by 94.49%, 296.00%, 345.40% and 37.27%, respectively, by comparison with RA-GA, PSO, opt-aiNet and RA-AIS. Similarly, if NReader equals 20, it has improvements by 332.30%, 638.90%, 886.49% and 100.35%, respectively. These results demonstrate that the proposed AINet-MTD algorithm can effectively capture better allocation scheme than RA-GA, PSO, opt-aiNet and RA-AIS.Alternatively, for the sake of clearer observations, these 95% confidence intervals shown in Tables 4–7 are represented graphically as supplementary figures in Appendix B.To further describe the optimal allocation with respect to time slots and frequency channels, it is necessary to graphically display the operating readers and the identified tags. On the basis of results in Section 4.3.1, the most complex tag distribution of case D (9 blocks) is considered for graphical explanation, whose tag distribution matrix is shown in Eq. (19). For the sake of visual observation, Fig. 9(a)–(e) depicts the graphical representations of tags identified by 15 readers at all time slots for RA-GA, PSO, opt-aiNet, RA-AIS and the proposed AINet-MTD algorithm, respectively. Note that in Fig. 9(a)–(e), a small black square box denotes a reader, i.e., solid for the operating reader and hollow for the idle reader, and a small black circle denotes a tag, i.e., solid for the tag that readers can query and hollow for the tag out of interrogation range. On the other hand, all dashed-line circles are used to represent the effective interrogation range of readers, and colors are used to differentiate which time slot is considered. In detail, for example in Fig. 9(a)–(e), red dashed-line circles are used for the first time slot, blue for the second time slot, black for the third time slot, green for the fourth time slot and pink for the fifth time slot. For Nreader=15 in case D, the number of queryable tags (marked as small black solid circles) by using AINet-MTD is 14535 while these figures are 11232 by RA-GA, 7184 by PSO, 2917 by opt-aiNet and 6806 by RA-AIS, respectively. By scaling down by a ratio of 1/25, the queryable tags and the unqueryable tags are displayed, respectively, as shown in Fig. 9. For the sake of clear illustration, the interrogation ranges of readers at each time slot obtained by RA-GA, PSO, opt-aiNet, RA-AIS and AINet-MTD are given as supplementary figures in Appendix B, respectively. Obviously, it can be further concluded that the proposed AINet-MTD algorithm has better performance in solving R2RCAM-MTD than RA-GA, PSO, opt-aiNet and RA-AIS.

@&#CONCLUSIONS@&#
This paper established a reader-to-reader collision avoidance model with multiple-density tag distribution (R2RCAM-MTD) from the viewpoint of resource scheduling, and proposed an efficient artificial immune network (AINet-MTD) to solve R2RCAM-MTD. In the simulation experiments, the effects of such parameters as time slots and frequency channels are investigated, and the algorithmic performance comparisons are conducted among the proposed AINet-MTD, RA-GA, PSO, opt-aiNet and RA-AIS. Based on the theoretical analyses and simulation results, some conclusions can be made. (a) The established reader-to-reader collision avoidance model with the multiple-density tag distribution (R2RCAM-MTD) is actually an optimization problem with respect to resource allocation. It is compatible with the existing reader collision avoidance models that the single-density tag distribution is considered. (b) The total number of tags that readers can query increases almost linearly as more available time slots are provided. Meanwhile, the total number of tags that readers can query grows up nonlinearly as more available frequency channels are provided. (c) The total number of queryable tags firstly increases and then decreases as the number of reader increases. Accordingly, there always exists a peak for a proper number of readers. (d) The RFID system in which AINet-MTD is used to solve R2RCAM-MTD can query more tags than those by using other algorithms (i.e., RA-GA, PSO, opt-aiNet and RA-AIS). In other words, the reader-to-reader collision can be effectively avoided or alleviated.However, some potential research issues on RFID reader collision problem in the future are possibly focused on. (a) How to reduce the time consumption caused by evolutionary algorithms. (b) How to mitigate the reader collision problem with fixed and/or mobile readers. (c) How to allocate again the communication resources to readers when there are additional or abnormal readers. (d) How to extend the multi-density tag distribution toward broader RFID applications.