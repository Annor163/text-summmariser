@&#MAIN-TITLE@&#
A single vehicle routing problem with pickups and deliveries, continuous random demands and predefined customer order

@&#HIGHLIGHTS@&#
We study a specific vehicle routing problem with deliveries and pickups.The customers are served according to a particular sequence.The demands of each customer are continuous random variables.The optimal routing strategy can be found by a dynamic programming algorithm.The optimal strategy has a specific threshold structure.

@&#KEYPHRASES@&#
Logistics,Dynamic programming,Routing with pickup and deliveries,Continuous demands,

@&#ABSTRACT@&#
This paper extends the results of a particular capacitated vehicle routing problem with pickups and deliveries (see Pandelis et al., 2013b) to the case in which the demands for a material that is delivered to N customers and the demands for a material that is collected from the customers are continuous random variables instead of discrete ones. The customers are served according to a particular order. The optimal policy that serves all customers has a specific threshold-type structure and it is computed by a suitable efficient dynamic programming algorithm that operates over all policies having this structure. The structural result is illustrated by a numerical example.

@&#INTRODUCTION@&#
In the capacitated vehicle routing problem with stochastic demands the objective is to find the optimal routing of a single vehicle with finite capacity or of a fleet of vehicles with finite capacity that originate from one or several depots and deliver products to N geographically scattered customers, whose demands for the products are random variables. Many exact and heuristic algorithms have been developed for various versions of this problem (see Chepuri & Momem-de-Mello, 2005; Goodson, Ohlmann, & Thomas, 2012; Haugland, Ho, & Laporte, 2007; Kyriakidis & Dimitrakos, 2008; Lei, Laporte, & Guo, 2011; Marinakis, Iordanidou, & Marinaki, 2013; Mendoza, Castanier, Gueret, Medaglia, & Velasco, 2010; Novoa & Storer, 2009; Rei, Gendreau, & Soriano, 2010; Secomandi & Margot, 2009; Tan, Cheong, & Goh, 2007). A dynamic programming approach has been proposed in various capacitated single vehicle routing problems with stochastic discrete demands in which the customers are serviced according to a predefined sequence (see Minis & Tatarakis, 2011; Pandelis, Karamatsoukis, & Kyriakidis, 2013a, 2013b; Pandelis, Kyriakidis, & Dimitrakos, 2012; Tatarakis & Minis, 2009; Yang, Mathur, & Ballou, 2000).In this paper we modify a specific stochastic capacitated vehicle routing problem with pickups and deliveries studied by Pandelis et al. (2013b) by assuming that the demands of the customers are continuous random variables instead of discrete ones. We give below the description of the modified problem for the case in which only one material is delivered to the customers. The results can easily be extended if the vehicle delivers K > 1 materials, although the required computations are excessive.We assume that a vehicle of capacity Q > 0 starts its route from a depot loaded with a quantity of material 1 that is smaller or equal to Q and visits N customers according to a predefined order 1 → 2 → ⋅⋅⋅ → N. The vehicle delivers some quantity of material 1 to each customer and collects some quantity of material 2 according to his/her demands. The vehicle is allowed during its route to return to the depot to empty the collected quantity of material 2 and to restock with material 1. When the vehicle returns to the depot for restocking it is not always preferable to load it to its full capacity with material 1, as there needs to be some space available in order to accommodate the collected quantities of material 2 from next customers. Let ξjandψj,j=1,…,N,be the demand of customer j for material 1 and the quantity of material 2 that is collected from customer j, respectively. We suppose that ξjandψj,j=1,…,N,are continuous random variables such that max 1 ≤ j ≤ Nξj≤ Q and max 1 ≤ j ≤ Nψj≤ Q. Let ϕj(x, y) be the joint probability density function of ξjand ψj. For each customer the actual demand for material 1 and the actual quantity of material 2 that must be picked up are revealed only when the vehicle arrives at the customer's site. When the vehicle visits customerj∈{1,…,N}for the first time it satisfies as much demand for material 1 as possible and collects the largest possible quantity of material 2. If part of the demand for material 1 is not satisfied and/or there is not enough space for the whole quantity of material 2 that must be collected, the vehicle goes to the depot, empties material 2, restocks with material 1, and returns to customer j. The vehicle returns to the depot after the completion of the service of all customers. Let cj0 andc0j,j=1,…,N,be the travel cost from customer j to the depot and the travel cost from the depot to customer j, respectively. Let alsocj,j+1,j=1,…,N−1,be the travel cost from customer j to customerj+1.It is reasonable to assume that these costs satisfy the symmetric property and the triangle inequality, i.e.cj0=c0j,j=1,…,N,andcj,j+1≤cj0+c0,j+1,j=1,…,N−1.Our objective is to find a vehicle routing strategy that minimizes the total expected cost for the service of all customers. A realistic example that fits to this problem could be the optimal routing of a vehicle that visits a sequence of buildings that are under construction, and delivers lime, which is material 1, and collects garbage, which is material 2. Another practical application of the problem could be the so-called ex-van sales, in which the driver of the vehicle acts as a salesman. Suppose that his customers are fruit stores that are supplied with a particular kind of fruit, for example cherries, according to a particular order. It is reasonable to assume that the demands of each fruit store for fresh fruits and the quantities of expired fruits are not known in advance but they are revealed as soon as the vehicle arrives at a fruit store. If the demand of a fruit store for fresh fruits exceeds the quantity that is loaded in the vehicle or if the quantity of expired fruits exceeds the empty space in the vehicle, the driver has to go to the depot to unload the expired fruits and to replenish with fresh ones.Note that the determination of the optimal routing strategy is achieved by an appropriate dynamic programming approach as in the case of discrete demands that was studied in Pandelis et al. (2013b). However in the present problem the state space after the visit of the vehicle to each customer is a continuous set. We propose a suitable discretization of the state space in order to make the dynamic programming method applicable.In next section we give a structural property of the optimal routing strategy and we show how it can be computed by implementing a special-purpose dynamic programming algorithm. In Section 3 we give a numerical example and the conclusions of the paper are presented in the last section.Following the same approach as in Pandelis et al. (2013b), we choose as decision epochs of the problem, the epochs at which the vehicle visits for the first time each customer and has satisfied as much of the customer's demand for material 1 as possible and has picked up as much of material 2 as possible. Note that it is possible at these decision epochs to have some demand for material 1 that has not been satisfied if the quantity of material 1 carried by the vehicle is not sufficient. It is also possible at these decision epochs to have some quantity of material 2 that has not been collected by the vehicle due to lack of empty space. Letz∈[−Q,Q]be the load of material 1 carried by the vehicle after the first visit at a customer's site, and letr∈[−Q,Q]be the empty space in the vehicle. Negative values for z and r denote the unsatisfied demand for material 1 and lack of empty space for material 2. When z ≥ 0 and r ≥ 0 (demand for material 1 and collection of material 2 fully satisfied) the vehicle has two choices: (i) it proceeds directly to the next customer and (ii) it goes to the depot, empties the collected quantity of material 2, restocks with load θ ∈ [0, Q] of material 1, and then visits the next customer. When z < 0 and/or r < 0, the vehicle goes to the depot, empties material 2, and restocks (if z < 0) the owed quantity−zof material 1. Then it has the following choices: (i) it loads an additional quantity θ ≥ 0 of material 1 so that at least−r(if r < 0) empty space remains after delivering the owed quantity−z,that isθ≤Q+min(z,r),returns to the customer, satisfies the remaining demand and/or picks up the remaining quantity of material 2, and then proceeds to the next customer and (ii) returns to the customer, satisfies the remaining demand for material 1 and/or collects the remaining quantity of material 2, makes a second trip to the depot where it empties the collected quantity of material 2, restocks with load θ ∈ [0, Q] of material 1 and proceeds to the next customer. It can be seen that, when z < 0 and/or r < 0, the vehicle makes either one or two trips to the depot before proceeding to the next customer.Letfj(z,r),z,r∈[−Q,Q],be the minimum expected total cost from customer j to the end of the route, if the load of material 1 carried by the vehicle after visiting customer j for the first time is equal to z and the empty space is equal to r. Forj∈{1,…,N−1},this quantity satisfies the following dynamic programming equations (see e.g. Chapter 6 in Ross, 1992):(1)fj(z,r)=min{Hj(z,r),Aj},0≤z,r≤Q,and(2)fj(z,r)=2cj0+min{H˜j(z,r),Aj},ifz<0and/orr<0,where,(3)Hj(z,r)=cj,j+1+∫0Q∫0Qfj+1(z−x,r+min(z,x)−y)ϕj+1(x,y)dxdy,(4)H˜j(z,r)=cj,j+1+minθ∈[0,Q+min(z,r)]∫0Q∫0Qfj+1(θ−x,Q+min(0,r)−θ+min(θ,x)−y)ϕj+1(x,y)dxdy,(5)Aj=cj0+cj+1,0+minθ∈[0,Q]∫0Q∫0Qfj+1(θ−x,Q−θ+min(θ,x)−y)ϕj+1(x,y)dxdy.The boundary conditions are(6)fN(z,r)=cN0if0≤z,r≤Q,and(7)fN(z,r)=3cN0ifz<0and/ofr<0.The first term in the curly brackets in (1) and (2) corresponds to choice (i) and the second term corresponds to choice (ii). The minimum total expected cost isf0=c10+minθ∈[0,Q]∫0Q∫0Qf1(θ−x,Q−θ+min(θ,x)−y)ϕ1(x,y)dxdy.It can be shown by induction on j in a similar way as in Pandelis et al. (2013b) that Hj(z, r) andH˜j(z,r)are non-increasing in each of their arguments. This result enables us to prove the following proposition that describes the structure of the optimal vehicle routing strategy after its first visit to customerj∈{1,…,N−1}.Part (i) of the proposition is a consequence of Hj(z, r) being non-increasing in its arguments and Parts (ii)–(iv) follow fromH˜j(z,r)being non-increasing in its arguments.Proposition 1After the first visit to customerj∈{1,…,N−1}there are four cases:(i)For each z ∈ [0, Q] there exists a critical numbers1j(z)∈[0,Q−z]such that it is optimal for the vehicle to proceed to customerj+1if and only ifr∈[s1j(z),Q−z].Moreover, s1j(z) is non-increasing in z.There exists a critical numberrj∈[−Q,0]such that if z ∈ [0, Q] and r < rj it is optimal for the vehicle to make two trips to the depot, while if z ∈ [0, Q] and rj≤ r < 0 it is optimal to make one trip to the depot.There exists a critical numberqj∈[−Q,0]such that if r ∈ [0, Q] and z < qj it is optimal for the vehicle to make two trips to the depot, while if r ∈ [0, Q] and qj≤ z < 0 it is optimal to make one trip to the depot.For eachr∈[−Q,0)there exists a critical numbers2j(r)∈[−Q,0)such that it is optimal for the vehicle to make two trips to the depot if and only ifz∈[−Q,s2j(r)].Moreover, s2j(r) is non-increasing in r.The state space after the first visit of the vehicle to customerj∈{1,…,N}is the setS={(z,r):−Q≤z,r≤Q,z+r≤Q}.A discretization of the state space is necessary for the implementation of the dynamic programming algorithm. Let ρ be a relatively small number (e.g.ρ=0.05orρ=0.01).We discretize S by restricting our attention only to its points (kρ, lρ),k,l=−Q/ρ,−Q/ρ+1,…,Q/ρ−1,Q/ρ.The minimum expected cost fN(kρ, lρ),−Q/ρ≤k,l≤Q/ρ,is found by using (6) and (7) withz=kρandr=lρ.The minimum expected costfj(kρ,lρ),−Q/ρ≤k,l≤Q/ρ,and the corresponding optimal decision are found, recursively, forj=N−1,N−2,…,1by using the dynamic programming Eqs. (1) and (2) withz=kρandr=lρ.The double integrals in (3)–(5) are computed approximately. The parameter θ in (4) and (5) takes values in the set{uρ:u=0,1,…,Q/ρ+min(k,l)}and in the set{0,ρ,…,Q−ρ,Q},respectively. For example, if k < 0 and/or l < 0 the quantityH˜j(kρ,lρ)is computed as follows:H˜j(kρ,lρ)=cj,j+1+minθ∈{0,ρ,…,Q+min(kρ,lρ)}∑x=0Q/ρ−1∑y=0Q/ρ−1fj+1(θ−xρ,Q+min(0,lρ)−θ+min(θ,xρ)−yρ)ϕj+1(xρ,yρ)ρ2.In view of  Proposition 1, the optimal policy, i.e. the critical numbers s1j(kρ) ≥ 0, 0 ≤ k ≤ Q/ρ,s2j(lρ)<0,−Q/ρ≤l≤−1,rj≤0and qj≤ 0 for each customerj∈{1,…,N−1}can be found by the following dynamic programming algorithm:Algorithm for the determination of the critical numbersrj, qj, s1j(kρ), 0 ≤ k ≤ Q/ρ,s2j(lρ),−Q/ρ≤l≤−1, for customerj∈{1,…,N}Step 0. SetfN(kρ,lρ)=cN0,fork,l=0,…,Q/ρsuch thatk+l≤Q/ρ.SetfN(kρ,lρ)=3cN0,fork,l=−Q/ρ,…,Q/ρsuch thatk<0and/orl<0.Setj=N−1.Step 1. Setrj=r−ρ.Step 2. (Determination of critical numberrj)IfH˜j(0,r)>Aj,do the following:1. Setrj=r+ρ2. Setfj(kρ,lρ)=2cj0+H˜j(0,lρ),0≤k≤Q/ρ,rj/ρ≤l<0.3. Setfj(kρ,lρ)=2cj0+Aj,0≤k≤Q/ρ,−Q/ρ≤l<rj/ρ.4. Go to Step 3.Otherwise, setr=r−ρ.Ifr=−Q−ρ,do the following:1. Setrj=−Q.2. Setfj(kρ,lρ)=2cj0+H˜j(0,lρ),0≤k≤Q/ρ,−Q/ρ≤l<0.3. Go to Step 3.Otherwise, go to Step 2.Step 3. Setz=−ρ.Step 4. (Determination of critical numberqj)IfH˜j(z,0)>Aj,then do the following:1. Setqj=z+ρ.2. Setfj(kρ,lρ)=2cj0+H˜j(kρ,0),qj/ρ≤k<0,0≤l≤Q/ρ.3. Setfj(kρ,lρ)=2cj0+Aj,−Q/ρ≤k<qj/ρ,0≤l≤Q/ρ.4. Go to Step 5.Otherwise, setz=z−ρ.Ifz=−Q−ρ,do the following:1. Setqj=−Q.2. Setfj(kρ,lρ)=2cj0+H˜j(kρ,0),−Q/ρ≤k<0,0≤l≤Q/ρ.3. Go to Step 5.Otherwise, go to Step 4.Step 5. Setz=0.Step 6. Setr=Q−z.Step 7. (Determination of critical numbers1j(kρ))IfHj(z,r)>Aj,do the following:1. Sets1j(z)=r+ρ.2. Setfj(z,lρ)=Aj,0≤l≤s1j(z)/ρ−1.3. Setfj(z,lρ)=Hj(z,lρ),s1j(z)/ρ≤l≤(Q−z)/ρ.4. Setz=z+ρ.Ifz≤Qgo to Step 6. Otherwise, go to Step 8.Otherwise, setr=r−ρ.Ifr=−ρ,do the following:1. Sets1j(z)=0.2. Setfj(z,lρ)=Hj(z,lρ),0≤l≤(Q−z)/ρ.3. Setz=z+ρ.Ifz≤Q,go to Step 6. Otherwise, go to Step 8.Otherwise, go to Step 7.Step 8. Setr=−ρ.Step 9. Setz=−ρ.Step 10. (Determination of critical numbers2j(lρ))IfH˜j(z,r)>Aj,do the following:1. Sets2j(r)=z.2. Setfj(kρ,r)=2cj0+Aj,−Q/ρ≤k≤s2j(r)/ρ.3. Setfj(kρ,r)=2cj0+H˜j(kρ,r),s2j(r)/ρ+1≤k≤−1.4. Setr=r−ρ.Ifr≥−Q,go to Step 9. Otherwise, go to Step 11.Otherwise, setz=z−ρ.Ifz=−Q−ρ,do the following:1. Sets2j(r)=−Q−ρ.2. Setfj(kρ,r)=2cj0+H˜j(kρ,r),−Q/ρ≤k≤−1.3. Setr=r−ρ.Ifr≥−Q,go to Step 9. Otherwise, go to Step 11.Otherwise, go to Step 10.Step 11. Setj=j−1.Ifj≥1go to Step 1. Otherwise, stop.As illustration we present the following example.Example. Suppose thatN=8,Q=6.The travel costs between customers j andj+1,j=1,…,7,are given by:c12=30,c23=26,c34=18,c45=25,c56=20,c67=18andc78=26.The travel costs between customers j,j=1,…,8,and the depot are given by:c10=25,c20=22,c30=25,c40=20,c50=17,c60=21,c70=24andc80=28.Note that these costs satisfy the triangle inequality. We assume that, for each customerj∈{1,…,8}the demand ξjfor material 1 and the quantity ψjof material 2 that is collected are independent continuous random variables which follow the Gamma distribution right-truncated in the interval [0, Q]. Their probability density functions are given by:hj(x)=[F1(Q)]−1λ1α1xα1−1Γ(α1)e−λ1xandwj(x)=[F2(Q)]−1λ2α2xα2−1Γ(α2)e−λ2x,x∈[0,Q],respectively, where, αi, λi> 0, i ∈ {1, 2},Γ(α)=∫0∞e−uuα−1du,α>0andFi(x)=[Γ(αi)]−1∫0λixe−uuαi−1du,x ≥ 0. The Gamma distribution seems to be a reasonable choice for the demand for material 1 and for the quantity of material 2 that is collected since, as mentioned in p. 442 in the book of Tijms (2003), in inventory applications the Gamma distribution is often used to model demand distributions. Due to independence of ξjand ψj,φj(x,y)=hj(x)wj(y).We setα1=5,λ1=4andα2=3,λ2=2.We chooseρ=0.05so that the discretized state space after the first visit of the vehicle to each customer is the set{(k×0.05,l×0.05):k,l=−120,…,120andk+l≤120}.We implemented the initial dynamic programming algorithm based on (1)–(7) and the special-purpose dynamic programming algorithm by running the corresponding Matlab program on a personal computer equipped with an Intel Core 2 Duo, 2.5 GHz processor and 4 GB of RAM. In Fig. 1below, we present the optimal decisions after the first visit to customer 5. The structure of the optimal policy, as expected, is of threshold-type described in Proposition 1. The action of proceeding directly to the next customer is coloured by dark blue, the action of returning to the depot once is coloured by red and the action of making two trips to the depot is coloured by light green. The value of the minimum total expected cost f0 is found to be approximately equal to 298.04. The computation time of the special-purpose dynamic programming algorithm is 9112 seconds. It is considerably smaller than the computation time of the initial dynamic programming algorithm which is 12554 seconds.Both algorithms enable us to determine the optimal quantity of material 1 that is loaded in the vehicle when it returns to the depot for replenishment. For example, if after the first visit of the vehicle to customer 5 the state is(z,r)=(−2.75,2),then the optimal decision for the vehicle is to go to the depot to empty the quantity of material 2 that it carries and to load the owed quantity of material 1 which is equal to 2.75. Then, it loads an additional quantity of material 1 which is equal to 2.9, returns to customer 5, satisfies the remaining demand of material 1 and then proceeds to customer 6. If after the first visit of the vehicle to customer 5 the state is(z,r)=(−5,−2.5),the optimal decision is to go to the depot to empty the quantity of material 2 that it carries and to load the owed quantity of material 1 which is equal to 5. Then, it returns to customer 5 to deliver the owed quantity of material 1 and pick up the remaining quantity of material 2 which is equal to 2.5, makes a second trip to the depot, empties the remaining quantity of material 2, loads a new quantity of material 1 equal to 3.2 and then proceeds to customer 6.

@&#CONCLUSIONS@&#
In this paper we considered a simple capacitated vehicle routing problem with pickups and deliveries. It was assumed that (i) the vehicle visits each customer according to a predefined sequence, (ii) each customer demands a quantity of material 1 that is a random variable and (iii) each customer gives to the vehicle a quantity of material 2 that is also a continuous random variable. It was assumed that these random variables are continuous with known distributions and their actual values become known only when the vehicle arrives at each customer's site. Assumption (i) together with a suitable choice of decision epochs enabled us to develop a dynamic programming algorithm for the determination of the routing strategy with the minimum total expected cost. We also gave a structural property of the optimal routing strategy according to which the state space is divided to three subsets. If at a decision epoch the state belongs to the first subset then the vehicle proceeds to the next customer, if it belongs to the second subset then it makes one trip to the depot before proceeding to the next customer and if it belongs to the third subset then it makes two trips to the depot before proceeding to the next customer. This characterization of the optimal policy enabled us to design an efficient special-purpose dynamic programming algorithm for its computation by restricting our attention only to those policies having the above structural property. The state space, that corresponds to each customer, is continuous and it was discretized before applying the dynamic programming algorithms to specific numerical examples.