@&#MAIN-TITLE@&#
A simple robust and accurate a posteriori sub-cell finite volume limiter for the discontinuous Galerkin method on unstructured meshes

@&#HIGHLIGHTS@&#
New sub-cell finite volume limiter for DG schemes on unstructured meshes in 2D and 3D.Simple a posteriori troubled zones indicator.Fully automatic sub-grid generation via nodes known from high order iso-parametric FEM.The new limiter maintains the DG sub-grid resolution property even at discontinuities.Element-wise checkpointing and restarting allows to cure floating point errors (NaN) at runtime.

@&#KEYPHRASES@&#
Arbitrary high-order discontinuous Galerkin schemes,A posteriori sub-cell finite volume limiter,Unstructured triangular and tetrahedral meshes,Conservation laws and hyperbolic PDE with non-conservative products,Element-wise checkpointing and restarting,MOOD paradigm,

@&#ABSTRACT@&#
In this paper we propose a simple, robust and accurate nonlinear a posteriori stabilization of the Discontinuous Galerkin (DG) finite element method for the solution of nonlinear hyperbolic PDE systems on unstructured triangular and tetrahedral meshes in two and three space dimensions. This novel a posteriori limiter, which has been recently proposed for the simple Cartesian grid case in [62], is able to resolve discontinuities at a sub-grid scale and is substantially extended here to general unstructured simplex meshes in 2D and 3D. It can be summarized as follows:At the beginning of each time step, an approximation of the local minimum and maximum of the discrete solution is computed for each cell, taking into account also the vertex neighbors of an element. Then, an unlimited discontinuous Galerkin scheme of approximation degree N is run for one time step to produce a so-called candidate solution. Subsequently, an a posteriori detection step checks the unlimited candidate solution at timetn+1for positivity, absence of floating point errors and whether the discrete solution has remained within or at least very close to the bounds given by the local minimum and maximum computed in the first step. Elements that do not satisfy all the previously mentioned detection criteria are flagged as troubled cells. For these troubled cells, the candidate solution is discarded as inappropriate and consequently needs to be recomputed. Within these troubled cells the old discrete solution at the previous timetnis scattered onto small sub-cells (Ns=2N+1sub-cells per element edge), in order to obtain a set of sub-cell averages at timetn. Then, a more robust second order TVD finite volume scheme is applied to update the sub-cell averages within the troubled DG cells from timetnto timetn+1. The new sub-grid data at timetn+1are finally gathered back into a valid cell-centered DG polynomial of degree N by using a classical conservative and higher order accurate finite volume reconstruction technique.Consequently, if the numberNsis sufficiently large (Ns≥N+1), the subscale resolution capability of the DG scheme is fully maintained, while preserving at the same time an essentially non-oscillatory behavior of the solution at discontinuities. Many standard DG limiters only adjust the discrete solution in troubled cells, based on the limiting of higher order moments or by applying a nonlinear WENO/HWENO reconstruction on the data at the new timetn+1. Instead, our new DG limiter entirely recomputes the troubled cells by solving the governing PDE system again starting from valid data at the old time leveltn, but using this time a more robust scheme on the sub-grid level. In other words, the piecewise polynomials produced by the new limiter are the result of a more robust solution of the PDE system itself, while most standard DG limiters are simply based on a mere nonlinear data post-processing of the discrete solution. Technically speaking, the new method corresponds to an element-wise checkpointing and restarting of the solver, using a lower order scheme on the sub-grid. As a result, the present DG limiter is even able to cure floating point errors like NaN values that have occurred after divisions by zero or after the computation of roots from negative numbers. This is a unique feature of our new algorithm among existing DG limiters.The new a posteriori sub-cell stabilization approach is developed within a high order accurate one-step ADER-DG framework on multidimensional unstructured meshes for hyperbolic systems of conservation laws as well as for hyperbolic PDE with non-conservative products. The method is applied to the Euler equations of compressible gas dynamics, to the ideal magneto-hydrodynamics equations (MHD) as well as to the seven-equation Baer–Nunziato model of compressible multi-phase flows. A large set of standard test problems is solved in order to assess the accuracy and robustness of the new limiter.

@&#INTRODUCTION@&#
The Discontinuous Galerkin (DG) finite element method was introduced for the first time in a seminal paper by Reed and Hill [117] in the context of linear scalar neutron transport equations. A well-known series of papers by Cockburn and Shu [33,32,31,29,34] has subsequently established a solid background for its application to general nonlinear systems of hyperbolic conservation laws in one and multiple space dimensions. A remarkable property of the DG method is that it satisfies a local cell entropy inequality even for higher orders of accuracy, provided that the numerical flux used at the element boundaries is a monotone entropy flux. From the local cell entropy property, it is trivial to prove that the DG method is stable inL2norm, see the paper by Jiang and Shu [81] for the nonlinear scalar case and its subsequent extensions to nonlinear systems [18,77]. However, despite this very interesting nonlinear stability property, the DG method is still a linear scheme in the sense of Godunov [71], hence even the DG method needs some sort of nonlinear limiting to avoid the spurious oscillations, i.e. Gibbs phenomenon, in the presence of discontinuities.In most cases, the DG method is used in the so-called method of lines (MOL) framework, i.e. first only a spatial discretization is carried out, while time is still kept continuous. The resulting semi-discrete scheme leads to a nonlinear ODE system, which is then typically advanced in time via explicit TVD Runge–Kutta schemes, see the work of Shu & Osher [125,126] and Gottlieb & Shu [72]. The resulting method is consequently called Runge–Kutta DG (RKDG) scheme. For an overview of existing DG schemes see [30,35,74]. However, explicit RKDG schemes suffer from a very severe time step restriction, where the maximum admissible Courant number typically scales as approximately1/(2N+1), if N denotes the polynomial degree of the approximation of the DG scheme. Alternative explicit time discretizations for DG methods have been proposed, which lead to so-called fully-discrete one-step schemes that do not require any intermediate Runge–Kutta stages. The resulting methods are the Lax–Wendroff DG method [112], the ADER-DG11ADER stands for arbitrary high order derivatives. The method was proposed by Toro and Titarev in [134] for the approximate solution of the generalized Riemann problem that consists of piecewise smooth initial data separated by a discontinuity.method [129,56,47] and the STE-DG method [98,70]. For a detailed comparison of different explicit one-step time discretizations of DG schemes see [69]. Unfortunately, all the fully-discrete DG schemes mentioned before suffer from an even more severe stability restriction than the RKDG method. A space-time discontinuous Galerkin scheme has been introduced by Van der Vegt et al. in [135,136,92] and has subsequently been analyzed by Feistauer et al. in [66,27]. The space-time DG method is theoretically of arbitrary high order of accuracy in both space and time and is provably unconditionally stable. However, these schemes are implicit, they require the solution of a global nonlinear system for the unknown degrees of freedom, which might result difficult for big meshes, large PDE systems or for high polynomial approximation degrees. In order to reduce the complexity of globally implicit space-time DG schemes, a local space-time DG approach has been forwarded in [51,75,47]. This method is only locally implicit and therefore requires only the solution of small nonlinear systems that can be easily handled element-wise. The local space-time DG approach leads again to an explicit scheme that is subject to a CFL condition on the time step for explicit one-step DG schemes, but it replaces the cumbersome Cauchy–Kovalewski procedure that has been previously used in Lax–Wendroff DG, ADER-DG and STE-DG schemes.There is a vast literature on limiters for the discontinuous Galerkin finite element method, and only a very short and non-exhaustive review on this topic can be given here. A common point of many DG limiters is to apply first an unlimited DG scheme and to evolve the discrete solution to the new time level. Then, an appropriate indicator detects so-called troubled cells, i.e. those elements of the computational domain that need limiting, see for example [84,94,97,138]. For detected troubled cells, the degrees of freedom of the discrete solution are then typically modified by some sort of nonlinear postprocessing after each time step, e.g. by a TVD/TVB limiting [33,32,31,29], or via a nonlinear ENO/WENO/HWENO reconstruction [115,113,114,6,146,87,86,148,147,83,76,6] or by a so-called moment limiting [116,2,94,97,101,141,42–44].A completely different and historically much older approach to limiting numerical schemes for nonlinear hyperbolic systems is the artificial viscosity (AV) method. It dates back to von Neumann and Richtmyer [107], who developed the AV approach in the 1940's at Los Alamos National Laboratory. The basic idea of AV techniques is to add a purely artificial dissipative mechanism to the difference equations. The dissipation should be strong enough so that the shock transition would become a smooth one, hence spreading the shock over a small number of cells. In the context of discontinuous Galerkin finite element schemes, the artificial viscosity concept has become popular again, and the reader is referred to [118,110,17,99,36,45] for details.Recently, a new concept to the problem of limiting has been proposed in the finite volume context, the so-called Multi-dimensional Optimal Order Detection (MOOD) approach. The key idea is to run first a spatially high order accurate but unlimited finite volume scheme. This step produces a so-called candidate solution. Then, the validity of this candidate solution is tested a posteriori against a set of predefined admissibility criteria. The cells which pass all these criteria are marked as ‘acceptable’, while those who fail to pass an admissibility criterion are marked as ‘troubled’. The troubled cells and their neighbors are subsequently recomputed locally using a polynomial reconstruction of lower degree. In that way, a new candidate solution is obtained, which is then again tested against the admissibility criteria and, where necessary, the polynomial degree of the reconstruction is locally reduced again. In the worst case, a cell is updated with a robust and stable first order accurate Godunov-type finite volume scheme, which is supposed to produce always a valid (monotone and positivity-preserving) solution under CFL condition. For more details about the MOOD paradigm in the finite volume context, the reader is referred to [28,40,41,100]. There is an obvious link between the MOOD concept in the finite volume framework and the typical strategy adopted in a classical DG limiter: in both approaches first a candidate solution is computed using a high order accurate unlimited scheme. Then, troubled cells are detected based on some criteria and the discrete solution is corrected. However, there is a fundamental difference: within a typical DG limiter the candidate solution is only postprocessed, either by a nonlinear TVD/TVB or an ENO/WENO/HWENO reconstruction or by some other sort of moment limiting. Classical DG limiters furthermore work only on one time level in order to detect and correct troubled cells. The MOOD approach on the other hand uses two time levels (the old one and the current one) for the detection of troubled cells. Second, the MOOD method really discards the candidate solution and recomputes a new one by starting again from the discrete solution at the old time level and by using a different and more robust numerical scheme. In technical terms this means that the code applies in the troubled cells in each time step an element-wise checkpointing and restarting, invoking at the restart a different scheme that is more adequate to handle shock waves and other nonlinear phenomena. The detection being based on two time levels and the local checkpointing and restarting makes the MOOD method [28,40,41,100] an a posteriori detection and correction approach.Very recently, a high order one-step ADER Discontinuous Galerkin (DG) scheme that has been stabilized with a novel a posteriori sub-cell finite volume limiter for hyperbolic systems of conservation laws has been developed on simple uniform as well as on adaptive Cartesian grids in [62,143,142]. However, in more complex situations that typically arise in engineering and geo-sciences, the use of an unstructured mesh may be mandatory due to the geometrical complexity of the computational domain. For this reason, it is the goal of this paper to extend the a posteriori sub-cell finite volume limiter originally developed in [62] to the case of unstructured meshes in two and three space dimensions, as well as to the case of non-conservative hyperbolic PDE. We will furthermore illustrate that the new sub-cell limiter is able to maintain the extraordinary resolution capabilities of the DG method not only in regions where the solution of the PDE is smooth, but also in the vicinity of steep fronts, shock waves and other discontinuities. With this new approach, it is indeed possible to resolve a shock wave or a contact discontinuity well within one single cell. For alternative subcell limiters in the context of high order discontinuous Galerkin finite element schemes, the reader is also referred to the work of Huerta et al. [80,23], Sonntag and Munz [128], Fechter and Munz [65] and Meister and Ortleb [103]. However, to the knowledge of the authors, none of the above mentioned methods has ever been extended and applied to high order DG schemes on unstructured tetrahedral meshes in three space dimensions.The rest of the paper is organized as follows. In Section 2 we describe the governing PDE systems to be discretized in this article, as well as the unlimited ADER-DG scheme. In the following Section 3 we present the a posteriori detection of problematic cells along with the sub-cell finite volume scheme that is used to recompute the discrete solution in troubled cells at the aid of a more robust scheme that is used at the sub-grid level. Section 4 is entirely dedicated to the numerical experiments which have been carried out. A large set of test problems has been simulated for three important PDE systems, namely the Euler equations of compressible gas dynamics, the ideal magnetohydrodynamics equations (MHD) and the seven-equation Baer–Nunziato model of compressible multi-phase flows. Some test problems involve smooth solutions in order to check, whether the designed high order of accuracy of our new method is achieved. Other tests contain discontinuities in order to assess the robustness of our method. We show in these examples that the sub-scale resolution capability of the DG method is properly maintained by the new a posteriori stabilization technique. The paper closes with some concluding remarks given in Section 5.In this paper we will consider general non-linear systems of hyperbolic PDE, which can be expressed in the following compact form:(1)∂Q∂t+∇⋅F(Q)+B(Q)⋅∇Q=0,whereQ=Q(x,t)∈Rνis the state vector;x=(x,y,z)∈Ωis the vector of spatial coordinates and Ω denotes the computational domain;F(Q)=(f,g,h)is the nonlinear flux tensor that contains the conservative part of the PDE system andB(Q)⋅∇Qis a genuinely non-conservative term. When written in quasilinear form, the system (1) becomes(2)∂Q∂t+A(Q)⋅∇Q=0,where the matrixA(Q)=∂F(Q)/∂Q+B(Q)contains both, the Jacobian of the conservative flux, as well as the non-conservative product. The system (2) is hyperbolic if for any unit-normal vector n with‖n‖=1the matrixAn=A(Q)⋅n=Rn(Q)Λn(Q)Rn−1(Q)is diagonalizable with a diagonal matrixΛn=diag(λ1,λ2,…,λi,…,λν)of real eigenvaluesλiand a complete set of linearly independent right eigenvectorsRn.The PDE system (1) is solved at the aid of a high order one-step ADER-DG method [112,47,50], which provides at the same time high order of accuracy in both space and time in one single step, without the need of any intermediate Runge–Kutta stages. The construction of fully-discrete high order one-step schemes is typical of the ADER approach, which was forwarded by Toro and Titarev in the finite volume context, see [134,131,132]. The scheme is written under the form of a one-step predictor corrector method [69], where the predictor step solves (1) within each element in the small (see also [73]) by means of an element-local space-time discontinuous Galerkin scheme. The corrector step is obtained by directly integrating a weak form of the governing PDE in time at the aid of the predictor. In the following we only summarize the main steps, while for more details the reader is referred to [47,60,75,69,16].The computational domain Ω is discretized by an unstructured mesh composed of conforming simplex elements denoted byTi, where the index i ranges from 1 to the total number of elementsNE. TheTiare triangles in two space dimensions and tetrahedra in the three-dimensional case. The union of all elements represents the triangulation (tetrahedrization) of the computational domain,(3)TΩ=⋃i=1NETi,and is also called the main grid in the following. We will further denote the cell volume by|Ti|=∫Tidx. The discrete solution of PDE (1) is denoted byuh(x,tn)∈Uhand is represented by piecewise polynomials of maximum degreeN≥0. Within each cellTiwe have(4)uh(x,tn)=∑lMΦl(x)uˆl,in:=Φl(x)uˆl,in,x∈Ti,where we have introduced the classical Einstein summation convention over two repeated indices. The approximation spaceUhof piecewise polynomials up to degree N is spanned by the basis functionsΦl=Φl(x). Throughout this paper we use the orthogonal Dubiner-type basis for simplex elements, which is a so-called modal basis, detailed in [46,89,30]. The symbolMdenotes the number of degrees of freedom per element and is given byM=(N+1)(N+2)/2in two space dimensions and byM=(N+1)(N+2)(N+3)/6in three space dimensions, respectively. The basis functions are conveniently defined in a reference simplex elementTe, defined by the nodesΞ1=(0,0),Ξ2=(1,0)andΞ3=(0,1)in the two-dimensional case and byΞ1=(0,0,0),Ξ2=(1,0,0),Ξ3=(0,1,0)andΞ4=(0,0,1)in the three-dimensional case, respectively. The vertices that defineTiin the physical coordinate system are denoted byX1,X2,X3andX4, respectively. The mapping from the reference element to the physical element is then given in the general 3D case by the simple linear transformation(5)x=X1+(X2−X1)ξ+(X3−X1)η+(X4−X1)ζ,whereξ=(ξ,η,ζ)is the coordinate vector in the reference system and from which the 2D case can be obtained by simply settingζ=0.The discrete solutionuh(x,tn)is now evolved in time according to an element-local weak formulation of the governing PDE in space-time, see [51,47,75,60,69,16]. The local space-time Galerkin method is only used for the construction of an element-local predictor solution of the PDE in the small, hence neglecting the influence of neighbor elements. This predictor solution will subsequently be inserted into the corrector step described in the next section, which then provides the appropriate coupling between neighbor elements via a numerical flux function (Riemann solver) and a path-conservative jump term for the discretization of the non-conservative product. To simplify notation, we define(6)〈f,g〉=∫tntn+1∫Tif(x,t)g(x,t)dxdt,[f,g]t=∫Tif(x,t)g(x,t)dx,which denote the scalar products of two functions f and g over the space-time elementTi×[tn;tn+1]and over the spatial elementTiat time t, respectively. Within the local space-time predictor, the discrete solution of equation (1) is denoted byqh=qh(x,t). We then multiply (1) with a space-time test functionθk=θk(x,t)and subsequently integrate over the space-time control volumeTi×[tn;tn+1]. Insertingqh, the following weak formulation of the PDE is obtained:(7)〈θk,∂qh∂t〉+〈θk,∇⋅F(qh)+B(qh)⋅∇qh〉=0.The discrete representation ofqhin elementTi×[tn,tn+1]is assumed to have the following form(8)qh=qh(x,t)=∑lθl(x,t)qˆl,in:=θlqˆl,in,whereθl(x,t)is a space-time basis function of maximum degree N. For the basis functionsθlwe use the nodal basis given in [47], that consists in the Lagrange interpolation polynomials passing through a set of pre-defined space-time nodes. In principle, any basis can be used. However, the use of a nodal basis is computationally more efficient compared with a modal basis. After integration by parts in time of the first term, eqn. (7) reads(9)[θk,qh]tn+1−[θk,uh(x,tn)]tn−〈∂∂tθk,qh〉+〈θk,∇⋅F(qh)+B(qh)⋅∇qh〉=0.Note that the high order polynomial data representation of the DG schemeuh(x,tn)is taken into account in (9) as initial condition of the element-local Cauchy problem in the small in a weak sense by the term[θk,uh(x,tn)]tn. This corresponds to the choice of a numerical flux in time direction, which is nothing else than upwinding in time, according to the causality principle. Note that due to the DG approximation in space-time, we may haveqh(x,tn)≠uh(x,tn)in general, hence the choice of a numerical flux in time direction is necessary. Note further that in (9) we have not used integration by parts in space, nor any other coupling to spatial neighbor elements. The integrals appearing in the weak form (9), as well as the space-time test and basis functions involved are conveniently written by making use of a space-time reference elementTe×[0;1].The solution of (9) yields the unknown space-time degrees of freedomqˆl,infor each space-time elementTi×[tn;tn+1]and is easily achieved with a fast converging iterative scheme, see [47,75,60] for more details. The above space-time Galerkin predictor has replaced the cumbersome Cauchy–Kovalewski procedure that has been initially employed in the original version of ADER finite volume and ADER discontinuous Galerkin schemes [123,130,134,131,56,129,55].At the aid of the local space-time predictorqh, a fully discrete one-step ADER-DG scheme can now be simply obtained by multiplication of the governing PDE system (1) by test functionsΦk∈Uh, which are identical with the spatial basis functions, and subsequent integration over the space-time control volumeTi×[tn;tn+1]. Due to the presence of non-conservative products, the jumps ofqhacross element boundaries are taken into account in the framework of path-conservative schemes put forward by Castro and Parés in the finite volume context [25,109] and subsequently extended to DG schemes in [119] and [50,52], where also a generalization to the unifiedPNPMframework has been provided. All these approaches are based on the theory of Dal Maso, Le Floch and Murat [102], which gives a definition of weak solutions in the context of non-conservative hyperbolic PDE. For open problems concerning path-conservative schemes, the reader is referred to [26] and [1].If n is the outward pointing unit normal vector on the surface∂Tiof elementTiand the path-conservative jump term in normal direction is denoted byD−(qh−,qh+)⋅n, which is a function of the left and right boundary-extrapolated data,qh−andqh+, respectively, then we obtain the following path-conservative one-step ADER Discontinuous Galerkin (ADER-DG) scheme, see [50]:(10)(∫TiΦkΦldx)(uˆln+1−uˆln)+∫tntn+1∫∂TiΦkD−(qh−,qh+)⋅ndSdt+∫tntn+1∫Ti\∂TiΦk(∇⋅F(qh)+B(qh)⋅∇qh)dxdt=0.The element mass matrix appears in the first integral of (10), the second term accounts for the jump in the discrete solution at element boundaries and the third term takes into account the smooth part of the non-conservative product. In general we use the simple Rusanov (local Lax Friedrichs) method [120], or the more sophisticated Osher-type scheme recently proposed in [58,59,24] as approximate Riemann solver at the element boundaries, although any other kind of Riemann solver could be also considered, see [133] for an overview of state-of-the-art Riemann solvers. At that point we would also like to point out the new general reformulation of the HLLEM Riemann solver of Einfeldt and Munz [63,64], within the setting of path-conservative schemes recently forwarded in [48].The Rusanov jump term reads(11)D−(qh−,qh+)⋅n=12(F(qh+)−F(qh−))⋅n+12(B˜⋅n−smaxI)(qh+−qh−),with the maximum signal speed at the element interfacesmax=max⁡(|Λ(qh+)|,|Λ(qh−)|)and the matrixB˜⋅ngiven by the following path-integral along a straight line segment path ψ:(12)B˜⋅n=∫01B(ψ(qh−,qh+,s)⋅nds,ψ(qh−,qh+,s)=qh−+s(qh+−qh−).The path-conservative Osher-type Riemann solver based on the same straight line segment path ψ reads(13)D−(qh−,qh+)⋅n=12(F(qh+)−F(qh−))⋅n+12(∫01(B(ψ(qh−,qh+,s)⋅n−|A(ψ(qh−,qh+,s)⋅n|)ds)(qh+−qh−),with the usual definition|A|=R|Λ|R−1. According to the suggestions made in [50,52,58,24,59], the path-integrals can be conveniently evaluated numerically by the use of a classical Gauss–Legendre quadrature formula on the unit interval[0;1]. For an alternative choice of the path, see [104,105].This completes the brief description of the unlimited ADER-DG scheme used for the discretization of the governing PDE system (1).The discrete representation of the solution within a general simplex elementTiis denoted byuh(x,tn)at the beginning of a time step. At the next time leveltn+1we first calculate a so-called candidate solution, denoted asuh⁎(x,tn+1), which results from the unlimited ADER-DG scheme (10) described in the previous section. From these data the a posteriori sub-cell limiter acts in two stages [62]:•Detect troubled cells in the candidate solution, that is attn+1, which are not acceptable according to some user-defined or developer-given physical and numerical detection criteria. This step is similar to existing troubled zones indicators used in classical state-of-the-art DG limiters [29,34,84].Discard the candidate DG solution in these troubled cells and recompute the discrete solution locally, starting again from the previous time leveltn, but this time using a more robust Finite Volume (FV) scheme operating on a sufficiently large number of sub-cells, as to conserve the intrinsic subcell resolution capability of a high order DG scheme. The feature that the solution is locally recomputed by starting again from a valid discrete solution at the previous time level is radically different from existing classical DG limiters.This stabilization technology is based on two salient remarks:•The subscale resolution capability of the DG method that is intrinsically embedded in its piecewise high order polynomial data representation should not be destroyed by a limiter. In other words: a limiter should not act on the characteristic length scale h of the main grid, but on a length scale that is less thanh/(N+1).As an illustration, in 1D, aPNpolynomial hasN+1degrees of freedom. These degrees of freedom can be either theN+1coefficients needed to developuhin a polynomial basis up to degree N, or, equivalently, the projection ofuhonto a set ofNsfinite volume sub-cells. If the number of sub-cells is large enough (Ns≥N+1) we can retrieve the DG polynomial back from these finite volume data via a standard reconstruction operator. Consequently, the data contained inside a polynomial of degree N can be also alternatively represented by a set of sub-cell averages on a sub-grid. Concerning the information content, it is therefore equivalent to substitute DG polynomials on elements of the main grid by FV cell averages on the sub-cells. The gain is that finite volume schemes are notoriously much simpler to stabilize at strong shocks than DG schemes, by means of a vast number of well established techniques: slope and flux limiters, ENO/WENO reconstruction, the MOOD approach [28,40,41] or, more drastically, by simply employing a first order Godunov-type finite volume scheme with its large numerical viscosity.The observation of a problematic numerical solution in a cell is much easier than the prediction of its occurrence. In other words, given a computed candidate solution attn+1it is relatively easy to determine if the numerical solution fits our expectations, or, where it fails to. Contrarily, it seems more difficult to ensure that, given a solution attn, the numerical method will produce a valid solution after its evolution during one time step. This illustrates the difference between a posteriori checking the validity of a numerical solution versus building a numerical method which, a priori, ensures the validity of a solution, that is without the knowledge of any data at the future timetn+1.22In the Online Encyclopedia of Philosophy (http://www.iep.utm.edu/apriori[85]) an article written by J.S. Baehr states that “A priori” and “a posteriori” refer primarily to how, or on what basis, a proposition might be known. In general terms, a proposition is knowable a priori if it is knowable independently of experience, while a proposition knowable a posteriori is knowable on the basis of experience. The distinction between a priori and a posteriori knowledge thus broadly corresponds to the distinction between empirical and nonempirical knowledge.Our DG sub-cell limiter is therefore constructed taking into account these two remarks. First, any DG polynomial on a given cell can be equivalently represented by a collection of piecewise constant finite volume data on a sub-grid of the cell and vice-versa. Second, at the end of the timestep the numerical solution of the DG scheme has to pass a set of detection tests to be considered as a valid solution. If it does not, this candidate DG solution in these so-called troubled/problematic cells is simply discarded and recomputed with a finite volume scheme acting on a sub-cell mesh of the troubled cell.Assume that cellTionto which a DG polynomialuhis defined has been detected as problematic. Then we first pave it with a sub-grid made of(Ns)dsub-cellsSi,j, withj=1,⋯,(Ns)d, whereNs=2N+1, see Fig. 1for the two dimensional case and Fig. 2for the three dimensional case, respectively. The numberNsdefines into how many sub-edges an edge of the simplex elementTiis divided. This means that the characteristic length scale of the sub-grid ish/Ns, if h is the characteristic size of an element on the main grid.The motivation for our particular choice ofNsis given in detail in [62]. The two main reasons for usingNs=2N+1are first the quality of the resolution of discontinuities on the sub-grid and second the fact that in this way the time step condition of the finite volume scheme on the sub-grid (CFLFV≤1) matches the one of an explicit RK-DG scheme on the main grid (CFLDG≤1/(2N+1)). The fact that the finite volume scheme on the subgrid is run with the maximum admissible CFL number means that the phase and amplitude errors are minimized, see [57] for a detailed analysis in the case of the 1D linear scalar advection equation.The nodes that define the sub-grid are simply given by the standard nodes of classical high order conforming finite elements on simplex meshes. On the reference element, the sub-node coordinatesξare(14)ξk,l=(kNs,lNs),andξj,k,l=(jNs,kNs,lNs),for the two- and the three-dimensional case, respectively, with0≤l≤Ns,0≤k≤Ns−land0≤j≤Ns−l−k. We therefore haveMs=(Ns+1)(Ns+2)/2subnodes in 2D andMs=(Ns+1)(Ns+2)(Ns+3)/6subnodes in 3D.The connectivity for the sub-grid on the triangle is trivial. There are only two types of sub-triangles, the upward pointing sub-trianglesSk,luand the downward pointing sub-trianglesSk,ld, whose connectivity is given by the formulae(15)Sk,lu=(ξk,l,ξk+1,l,ξk,l+1),Sk,ld=(ξk+1,l+1,ξk,l+1,ξk+1,l).In 3D, the connectivity is slightly more complex. There are again upward-pointing sub-tetrahedraSj,k,luand downward-pointing sub-tetrahedraSj,k,ld. However, in the 3D case there arises a set of intermediate octahedron holes, each of which needs to be closed by four additional types of sub-tetrahedra, namelySj,k,lI,Sj,k,lII,Sj,k,lIIIandSj,k,lIV, respectively. The detailed 3D sub-grid connectivity is given by(16)Sj,k,lu=(ξj,k,l,ξj+1,k,l,ξj,k+1,l,ξj,k,l+1),Sj,k,ld=(ξj+1,k,l+1,ξj+1,k+1,l+1,ξj+1,k+1,l,ξj,k+1,l+1),Sj,k,lI=(ξj+1,k,l,ξj+1,k+1,l,ξj,k+1,l,ξj,k+1,l+1),Sj,k,lII=(ξj+1,k,l,ξj+1,k,l+1,ξj,k+1,l+1,ξj,k,l+1),Sj,k,lIII=(ξj,k+1,l,ξj,k+1,l+1,ξj,k,l+1,ξj+1,k,l),Sj,k,lIV=(ξj+1,k,l,ξj+1,k+1,l,ξj,k+1,l+1,ξj+1,k,l+1).In the following, we will replace the multi-index(k,l)and(j,k,l)again by one mono-index j, hence writingSi,j, where i refers again to the elementTion the main grid and j to the corresponding element number on the sub-grid. Note that the sub-grid connectivity is the same for each elementTi, since all sub-elements are defined on the reference elementTeand are then simply mapped to physical coordinates via the linear mapping (5).For alternative sub-cell divisions on simplex meshes, see [80,103] and the work by Wang et al. on spectral finite volume schemes [138,139,96]. However, the divisions proposed in [80,103,139,96] are rather complex and difficult to code in an automatic way for very high orders of accuracy, compared to the very simple set of formulae (14), (15) and (16) used here.An alternative data representationvh(x,tn)on the sub-cells is now expressed by a set of piecewise constant sub-cell averagesvi,jn. Those are computed as theL2projection ofuhonto the space of piecewise constant functions onSi,j, i.e. they are the simple cell average ofuhonSi,jgiven by:(17)vi,jn=1|Si,j|∫Si,juh(x,tn)dx=1|Si,j|∫Si,jϕl(x)dxuˆln,∀Si,j∈Si,where we denote bySi=⋃jSi,jthe set of all sub-cells insideTi. The projection operator (17) above is in the following also abbreviated byvhn=P(uhn).Using the new data representationvh(x,tn)(i.e. piecewise constant datavi,jnon sub-cells) as initial conditions, the discrete solution at timetn+1,vh(x,tn+1), is re-computed by means of a robust one-step finite volume scheme on the sub-grid. Any scheme from the finite volume family can be considered as long as it is sufficiently robust for the PDE system under consideration; 1st order FV, 2nd order TVD, 3rd/5th order WENO, etc. In this paper we adopt a second order ADER finite volume scheme [55], based on a second order TVD reconstruction that uses the standard Barth & Jespersen [19] slope limiter on unstructured meshes. For the second order scheme, the necessary time evolution based on the Cauchy–Kovalewski procedure is trivial. As a particular feature of our sub-grid finite volume scheme, we apply the Barth & Jespersen limiter also to the slope in time direction, i.e. to the time derivative that results from the Cauchy–Kovalewski procedure. However, it is also possible to use a very simple first order Godunov-type scheme. This is the crudest choice, but it is a very cheap and still viable option, as long as the number of sub-cells is sufficiently large. Some numerical results will assess this statement. In the following, we will denote the update ofvhvia the second order ADER TVD finite volume scheme on the subgrid simply by(18)vhn+1=A(vhn).The initial condition and the boundary conditions needed by the operatorA(vhn)on the boundaries∂Tiof elementTiare provided similar to [62] in the following way:(19)vhn(x,tn)={P(uh(x,tn))ifβkn=0,A(vh(x,tn−1))ifβkn=1,x∈Tk,∀Tk∈Ni,whereNidenotes only the direct Neumann neighborhood of elementTi, i.e. all elements which share a common edge (2D) or face (3D) with elementTi. The troubled zones indicatorβknindicates an unlimited cell forβkn=0and a troubled cell forβkn=1. More details on the computation ofβknare given below in Section 3.2. Relation (19) states that if a cellTkwas unlimited at timetn, the sub-grid data are computed by the projection operatorPapplied to the DG polynomialuh, whereas for a troubled cell the sub-cell finite volume averages that have been computed insideTiby the operatorA(vh(x,tn−1))and which have been subsequently stored there, are directly taken as initial and boundary conditions for the operatorA(vh(x,tn)). We emphasize that the alternative solution representationvhnneeds to be stored only in troubled cells, i.e. in cellsTiwithβin=1. For unlimited cells,vhncan be computed at any time on demand by the projection operatorP. Note that in the Cartesian case [62], a third order ADER-WENO finite volume scheme was used on the subgrid and hence required the entire Voronoi neighborhoodViof elementTi, i.e. it involved all neighboring elements that have a common vertex withTi. In contrast, the second order ADER TVD finite volume scheme used at the subcell level only requires the direct edge/face neighbors ofTi. This makes our limiter compact on the main grid and thus fits very well into the philosophy of DG schemes that work on the minimal stencilNi. This is particularly true thanks to the use of fully-discrete one-step ADER-DG schemes on the main grid and ADER finite volume schemes on the subgrid, since they carry out one entire high order time step on the minimal stencilNi, while Runge–Kutta time discretizations have a larger effective stencil per time step due to the necessary intermediate Runge–Kutta stages. We stress that in the ADER framework, also the limiter itself is only applied once per time step, and not in each Runge–Kutta stage again. Similar observations have been already made by Qiu et al. in [112].To obtain a conservative scheme, we emphasize that also the neighbors of troubled cells need to be updated, taking into account the new fluxes that arise across element interfaces due to the finite volume scheme used in the troubled cells.Once a robust sub-cell solutionvh(x,tn+1)has been recomputed for a troubled cellTi, the piecewise polynomial solution of the DG scheme on the main grid must be recovered. This is achieved by requiring that the sub-cell solutionvi,jn+1inSi,jbe equal to theL2projection of the unknown DG polynomialuh(x,tn+1)ontoSi,j(20)∫Si,juh(x,tn+1)dx=∫Si,jvh(x,tn+1)dx,∀Si,j∈Si.The previous equation is equivalent to solving(21)1|Si,j|∫Si,jϕl(x)dxuˆln+1=vi,jn+1,∀Si,j∈Si,which is a standard reconstruction problem arising in the finite volume context. Since we useNs=2N+1the resulting system (21) is overdetermined, and is solved via a constrained least-squares reconstruction operator [54], with the linear constraint(22)∫Tiuh(x,tn)dx=∫Tivh(x,tn)dxthat requires the reconstruction to be conservative on cellTi. The reconstruction operator (20) and (22) is in the following abbreviated byuhn+1=R(vhn+1). It can be seen easily that by construction the reconstruction operator and the projection operator fulfill the conditionR∘P=I, whereIis the identity operator. With these operators, the DG limiter foruhn+1in troubled cells formally reads(23)uhn+1=R(A(vhn)),withvhngiven by (19).This section has described in detail the projectionPand the reconstructionRoperator, as well as the sub-cell based finite volume updateAof troubled DG cells. It remains to detect those troubles cells, i.e. we need to define the troubled zones indicatorβin.The appearance of possible spurious oscillations due to the effect of Gibbs phenomenon renders the candidate DG solution not acceptable everywhere in the computational domain. Some cells may demand more numerical dissipation. Our sub-cell limiting strategy, like any limiting strategy, must design a mechanism to detect troubled/problematic/bad cells. In this work we construct a number of detection criteria which are devoted to promote the candidate DG solution in good cells to 'acceptable', and, more important, to list the troubled cells. As already mentioned in the Multi-dimensional Optimal Order Detection (MOOD) paradigm [28,40,41,100], the detection of troubled cells is based on physical considerations and it mostly consists of checking ifuh⁎(x,tn+1)verifies some physical admissibility constraints for the cellTi. Those are dictated by the system of PDEs resolved and are denoted as the Physical Admissibility Detection criteria (PAD). For the hydrodynamics equations these constraints are mainly related to the positivity of density and pressure, whereas, for instance, in a relativistic magneto-hydrodynamics context the boundedness of the velocity by the speed of light is also mandatory [100]. Furthermore, the candidate solutionuh⁎(x,tn+1)is explicitly checked for the occurrence of floating point errors, i.e. not-a-number (NaN) values that may have been produced by unphysical divisions by zero or by taking roots of negative numbers. In FORTRAN, this is conveniently done with the ISNAN command. As a result, floating point errors are not only immediately found by the present a posteriori detection procedure, but thanks to the a posteriori limiting framework, they can even be subsequently cured in the more robust sub-cell finite volume scheme. Its ability to cure floating point errors a posteriori is a unique feature of our DG limiter that distinguishes it from all other existing DG limiters. It is made possible because the sub-cell finite volume scheme will start again from physically admissible data that were saved at the previous time leveltn. This very particular feature can also be seen as an element-by-element checkpointing and restarting of the solver. It is obvious that this significantly enhances the robustness and fault tolerance of the high order DG scheme proposed in this paper.The second set of detection criteria deals with numerical issues, such as spurious oscillations, and is referred to as Numerical Admissibility Detection criteria (NAD). NAD rely on relaxed discrete maximum principle (DMP) in the sense of polynomialsuh(x,tn)as(24)miny∈Vi⁡(uh(y,tn))−δ≤uh⁎(x,tn+1)≤maxy∈Vi⁡(uh(y,tn))+δ∀x∈Ti,where the setVicontains the current cellTiand its Voronoi neighborhoodVi, i.e. the cells that share at least a common node withTi. The use of a DMP in the sense of polynomials has been inspired by the work on positivity preserving schemes of Zhang and Shu, see [144,145,79]. Eqn. (24) expresses the fact that the polynomial representing the candidate solutionuh⁎(.,tn+1)in cellTimust remain between the minimum and the maximum values of the polynomials representing the solution at the previous time stepuh(.,tn)in the setVi. The small number δ in (24) is a parameter used to relax the discrete maximum principle thus allowing for very small undershoots and overshoots, which permits to maintain a good accuracy when dealing with smooth extrema. The value used in [62] and adopted in this work is(25)δ=max⁡(ϵ0,ϵ(maxy∈Vi⁡(uh(y,tn))−miny∈Vi⁡(uh(y,tn)))),where we usually setϵ=10−3andϵ0=10−4. In other words, parameter δ defined by (25) allows the occurrence of new extrema the values of which do not exceed one thousandth of the local jump present attnin the neighborhood of the current cell. The valueϵ0is needed in the case where the jump is zero.From a practical point of view dealing with (24), that is, inequalities defined on possibly high order polynomials, is complex. Instead we use the alternative data representations (17)vh(x,tn)andvh⁎(x,tn+1)on the sub-cells respectively corresponding to initial datauhnand candidate solutionuh⁎. Consequently (24) becomes for a given cell index i(26)mink∈Vi,l∈Sk⁡vk,ln−δ≤vi,j⁎,n+1≤maxk∈Vi,l∈Sk⁡vk,ln+δ,∀j∈Si.Analogous to (26), also the point values of the discrete solution on the sub grid are tested against the DMP. In practice, if a cell does not fulfill the PAD criteria, then it is flagged as problematic and must be recomputed. Next the NAD criteria are tested for the remaining cells which may or may not be flagged as problematic. The result of this step is a list of problematic cells along with a patch of surrounding neighbor cells; these form the so-called troubled cells which are re-computed with the sub-cell FV scheme described previously. In our approach each conserved variable is tested for the DMP, but also other variables like the primitive variables or the entropy could be tested for the satisfaction of the DMP.In this approach, physical and the numerical criteria are totally independent. Consequently the relaxation of the maximum principle never affects the positivity of the solution. More important, the detection is performed at time leveltn+1, but using the extrema at the old time leveltn, whereas classical indicators typically use information from only one time level, generally eithertnortn+1. This subtle but crucial difference allows for a ‘simple’ observation of problems which have occurred during the timestep, contrarily to classical finite volume limiting strategies that use data at timetn, and which must solve the more difficult problem of predicting their occurrence.For most test cases presented in this section we have employed the ADER Discontinuous Galerkin method (10) with piecewise approximation polynomials of degreeN=4orN=5, referred to as ADER-DG-PNin the following. This unlimited DG scheme is then supplemented with the new a posteriori sub-cell limiter (SCL) on unstructured simplex meshes proposed in this paper. If not stated otherwise, the scheme acting at the sub-cell level is always a second order TVD finite volume scheme with Barth and Jespersen [19] slope limiter. In one case, we also use a simple first order Godunov-type scheme, in order to assess its performance against the more sophisticated second order TVD scheme on the sub-grid level. By default the numerical flux function and the path-conservative jump term used in most of the simulations is the simple Rusanov scheme (11).Since each variable inside a computational cell is represented by a polynomial of degreeN>0, we plot the numerical solutionuh(x,tn)as point values evaluated on a sub-grid made ofNp=N+1sub-points per edge, if the cell is unlimited.33Note that for a DG-P5scheme the number of degrees of freedom per cell is 56 in 3D, 21 in 2D, and 6 in 1D. The size of the sub-grid used for the visualization ofuh(x,tn)in unlimited cells must therefore also adapt to these numbers.The topology of the visualization subgrid is the same as the one used for the subcell limiter, depicted in Figs. 1 and 2, but with less sampling points. For troubled cells, we plot the alternative representation of the solutionvh(x,tn)on the sub-grid used for the limiter withNs=2N+1. For a more sophisticated alternative visualization technique of piecewise polynomial data see [21].We systematically represent the cells detected as troubled in red, while valid cells are colored in blue when the limiter is shown.For 1D cuts we usually take equidistant samples at sub-grid level of the solution representationsuh(x,tn)andvh(x,tn), respectively. This is important to verify that the subscale structure of the DG polynomials really represents a physically valid state within one large cell. As such a limiter for the DG method should be able to maintain smooth solutions, and, more importantly, keep the ability of the DG scheme to reproduce discontinuous profiles at shock waves and steep fronts without spurious oscillations. This must hold for the entire discrete solutionuh(x,tn), and not only for its mean values on the main grid.In this section we solve the Euler equations of compressible gas dynamics(27)∂∂t(ρρvρE)+∇⋅(ρvρv⊗v+pIv(ρE+p))=0,with the ideal gas EOS(28)p=(γ−1)(ρE−12ρv2).Here, ρ denotes the fluid density,v=(u,v,w)is the velocity vector, p is the fluid pressure, I denotes the identity matrix and ρE is the total energy density. The PAD criteria, which depend on the underlying physics, that is the system of PDEs solved, are the positivity of density and pressure for the Euler equations.The isentropic vortex problem was introduced in [7,78] to test the accuracy of numerical methods, since the exact solution is smooth and has an analytical expression. The computational domain is the squareΩ=[0;L]×[0;L]of lengthL=10. The ambient base flow far from the vortex is characterized byρ∞=1.0,u∞=1.0,v∞=1.0,w∞=0.0,p∞=1.0, with a normalized ambient temperatureT∞⁎=1.0. A ratio of specific heats ofγ=1.4is considered. A vortex is centered at(xvortex,yvortex)=(5,5)and is added as a perturbation to the ambient gas at the initial timet=0withu=u∞+δu,v=v∞+δv,w=w∞,T⁎=T∞⁎+δT⁎whereδu=−y′β2πexp⁡(1−r22),δv=x′β2πexp⁡(1−r22),δT⁎=−(γ−1)β8γπ2exp⁡(1−r2),withr=x′2+y′2andx′=x−xvortex,y′=y−yvortex. The vortex strength isβ=5.0and the initial density is defined by(29)ρ=ρ∞(T⁎T∞⁎)1γ−1=(1−(γ−1)β8γπ2exp⁡(1−r2))1γ−1.Periodic boundary conditions are prescribed everywhere, so that at the final timetfinal=10the vortex is back to its original position.This problem has a smooth solution and thus must be solved with effective high-order of accuracy by any high order scheme. Consequently, we compute the discreteL1,L2andL∞error norms between the exact solution and the numerical solutionuhfor the density variable on a sequence of successively refined triangular grids. This allows us to compute the effective numerical order of accuracy of the schemes which are tested. The unstructured meshes are constructed so that the edge length of the triangles on the boundary of Ω ish=L/Nx, starting fromNx=8(coarse grid) up toNx=128(fine grid). In Table 1we report the obtained error norms and the corresponding rates of convergence for ADER-DG-PNschemes with N varying from 2 to 6. We would like to emphasize that the a posteriori sub-cell limiter is active for all schemes, but, as expected, the PAD and NAD criteria are either not detecting any troubled cells, or only extremely few, as the underlying fluid flow is smooth and if the mesh is fine enough. Consequently the DG schemes are essentially run in their unlimited form and the presence of the a posteriori sub-cell limiter does not destroy the formal order of convergence of the underlying DG scheme if the order is high enough and if the mesh is sufficiently refined. To quantify this statement, we run the sixth order ADER-DG-P5scheme three times: once with the limiter completely switched off, once with the limiter active according to the PAD and NAD criteria specified above, and once with the limiter switched on artificially for all cells. The resulting convergence rates are shown in Table 2. One can observe that the error norms with active limiter and without limiter are exactly the same, while the convergence rate clearly reduces to between first and second order of accuracy in the case if the limiter is activated for all cells, as expected.In this section, we simulate the steady flow over a circular cylinder. This test case has been used, for example, by Bassi & Rebay [20] and by Krivodonova & Berger [93] in order to assess the performance of high order discontinuous Galerkin finite element schemes in the presence of curved solid wall boundaries. The computational domain of our setup is the squareΩ=[−5,5]2, in the center of which there is a circular cylinder of radiusR=1. The exact solution for the radial and tangential velocity componentsvrandvϕas well as the pressure field p of the underlying potential flow problem (which is valid only in the limitM∞→0), is given in polar coordinates(r,ϕ)by:(30)vr(r,ϕ)=M∞γp∞ρ∞(1−R2r2)cos⁡ϕ,vϕ(r,ϕ)=−M∞γp∞ρ∞(1+R2r2)sin⁡ϕ,(31)p(r,θ)=p∞(1+12γM∞2)−12ρ∞(vr2+vθ2).For our test case, we use a free stream Mach number ofM∞=0.38, as suggested in [20,93], a free stream density and pressure ofρ∞=γandp∞=1, respectively, and the ratio of specific heats is chosen asγ=1.4. The incoming flow is parallel to the x-axis. In this subsonic flow regime the potential flow is still a reasonable approximation of the flow field and for isentropic compressible flows, the density can be computed as(32)ρ=ρ∞(pp∞)1/γ.In our simulations, we use the exact solution above as initial and boundary conditions and use an ADER-DG-P2scheme on a sequence of successively refined meshes of characteristic sizeh=1,h=1/2,h=1/4andh=1/10, respectively. Furthermore, the same test is run with an ADER-DG-P4method on a sequence of meshes with sizeh=3/4,h=1/2,h=1/3andh=1/4, respectively. For this test we setϵ=ϵ0=10−2. In order to discretize the curved boundaries, we use high order isoparametric elements, where the geometry is represented by the same polynomial degree as the discrete solution for the PDE, as suggested in [20]. The resulting relative entropy errors(33)ϵS=pp∞(ρ∞ρ)γ−1and the associated convergence rates are reported in Table 3. In Fig. 3the Mach isocontour lines are shown, together with the streamlines and a sketch of the unstructured mesh around the cylinder. During the entire simulation, no element has been flagged as troubled.Here, we run the planar Sod and the classical Lax shock tube problems on a 2D and 3D unstructured mesh. These problems are used to assess the ability of the numerical method to capture one-dimensional simple waves on coarse unstructured meshes. Indeed, the size of the main grid cells is not the characteristic length scale on which one wishes to capture the shock wave, but one rather desires to capture the shock on a scale of the orderh/(N+1), which corresponds to the effective resolution of a high order DG scheme. The proposed a posteriori sub-cell FV limiter spreads such simple waves only over one or two sub-cells, thanks to the use of a high resolution shock capturing TVD scheme at the sub-grid level.The initial conditions are listed in Table 4. The other velocity components are initialized with 0. The ratio of specific heats isγ=1.4and for both problems the initial discontinuity is located inx=0. The exact solution for these one-dimensional Riemann problems can be found in [133]. For the two-dimensional setup, the computational domain is given byΩ=[−0.5;0.5]×[−0.05;0.05]and is paved with an unstructured mesh with characteristic mesh size ofh=1/100and composed of 2226 triangles, see Fig. 5. For the three-dimensional setup, the domain isΩ=[−0.5;0.5]×[−0.05;0.05]2, while the corresponding tetrahedral mesh with characteristic grid sizeh=1/100consists of 67711 elements. In the 2D case, an ADER-DG-P5scheme has been used, while we use an ADER-DG-P4scheme for the 3D case. In all cases, the second order a posteriori sub-cell finite volume limiter is employed. Dirichlet boundary conditions are imposed in x-direction, while periodic boundaries are applied in y and z direction, respectively.In Fig. 4the density, the x component of the velocity and pressure are presented for the 2D case at the final time for both problems. The 3D results for the Sod shock tube problem are presented in Fig. 6. In all cases we can observe that the numerical results obtained for the shock waves and the contact discontinuities are extremely sharp. In the 3D simulations one can observe some spurious oscillations in the velocity, which is a derived quantity and not a conserved variable. In order to reduce these oscillations, one could consider to check the DMP also on the primitive variables.Also from Figs. 5 and 6we find that the a posteriori limiter is acting at the shock waves, where it is expected, whereas the great majority of the remaining part of the computational domain is essentially simulated with the unlimited high order ADER-DG scheme. Due to the high resolution shock capturing TVD scheme acting as sub-cell limiter, the shock wave is truly captured on a sub-grid scale, and is able to move across a coarse cell on the main grid without generating spurious numerical oscillations. Note that the limiter does not act on the contact wave any more for large times, since the contact discontinuity is a linearly degenerate field, which can be correctly propagated by an unlimited DG scheme once it has been sufficiently smeared by the subcell limiter in the initial phase of the Riemann problem. This is an important feature of our a posteriori detector and limiter and has already been observed in [62,143] in the Cartesian grid case.In order to assess the influence of the choice of the finite volume scheme used on the sub-grid level, in Fig. 5 a direct comparison of the numerical results obtained for the 2D case with a first order and with a second order sub-grid finite volume scheme is shown. At least for these two test problems, the numerical results seem to indicate that the use of a very simple first order finite volume scheme on the sub-grid level is possible and leads only to a rather small increase of the numerical diffusion at shocks and contact discontinuities.Let us consider the 2D double Mach reflection problem of a strong shock, first proposed by Woodward and Colella in [140]. This test problem involves a Mach 10 shock in a perfect gas withγ=1.4which hits a ramp at 30° with the x-axis. Using Rankine–Hugoniot conditions we can deduce the pre- and post-shock initial conditions(34)(ρ,u,v,p)(x,t=0)={1γ(8.0,8.25,0.0,116.5),ifx<0.0,(1.0,0.0,0.0,1γ),ifx≥0.0.Reflecting wall boundary conditions are prescribed on the bottom and on the top of the domain, while the exact solution according to the Rankine–Hugoniot relations is imposed on the left and on the right boundary.The computational domain is depicted in Fig. 7and the unstructured mesh is built using a characteristic mesh size ofh=1/200, leading to a total of 359016 triangular elements. This problem is solved with an ADER-DG-P4scheme, in combination with the a posteriori sub-cell finite volume limiter. The computational results are depicted at timet=0.2in Fig. 7, where the density contour lines as well as the distribution of the troubled cells are plotted. We observe that the limiter is mostly acting at the shock waves, apart from some spurious activations in the post-shock regions of the incident and the reflected shock wave. To improve this situation, one could consider the recent boxplot outlier approach forwarded by Vuik and Ryan in [137], instead of the simple discrete maximum principle (DMP) used in this paper.Next we consider the so called forward facing step (FFS) problem, also proposed by Woodward and Colella in [140]. It is a Mach 3 wind tunnel with a step. The initial condition consists in a uniform gas with densityρ=γ, pressurep=1, velocity componentsu=3,v=0andγ=1.4. The computational domain is given byΩ=[0;3]×[0;1]\[0.6;3]×[0;0.2]. Reflective boundary conditions are applied on the upper and lower boundary of the domain, whereas inflow and outflow boundary conditions are applied at the entrance and the exit. The solution of this problem involves shock waves interacting with the wall boundaries. The unstructured mesh consists of 56972 triangular elements of sizeh=1/100and the simulation is run up to a final time oft=4. In Fig. 8we present the results obtained with an ADER-DG-P4scheme with a posteriori second order sub-cell finite volume limiter. For this test problem we can observe that the shock waves are clearly identified, while the shear layer in the upper part of the domain is essentially unlimited and starts to roll up already on this rather coarse mesh.Here, we consider a cylindrical as well as a spherical explosion problem in 2D and 3D, respectively. The computational domain isΩ={x:‖x‖≤R}, i.e. the circle (sphere) of radiusR=1. In the 3D case, only the half-sphere withx≥0and symmetry boundary condition atx=0is considered, while the 2D simulation considers the entire circle. The computational setup represents a cylindrical/spherical extension of the classical Sod problem [127], with initial conditions given by(35)(ρ,u,v,w,p)={(1,0,0,0,1)for‖x‖≤Rd,(0.125,0,0,0,0.1)for‖x‖>Rd,whereRd=0.5denotes the radius of the initial discontinuity. An ideal-gas equation of state with adiabatic indexγ=1.4is considered. The reference solution can be obtained solving an equivalent one dimensional PDE in the radial direction with geometric source terms by using a standard finite volume scheme on a very fine mesh, see [133] for details. An ADER-DG-P5scheme combined with the second order a posteriori sub-cell finite volume limiter has been employed. In the 2D case the computational mesh is composed of 68324 triangles with characteristic mesh spacingh=1/100, while the 3D mesh is very coarse and consists only of 877298 tetrahedra with characteristic mesh spacingh=1/40. In the 3D case, this leads to a total number of 17,545,960 spatial degrees of freedom per variable of the PDE system.Fig. 9shows the profiles of the density, velocity, pressure and internal energy along the x- axis at timet=0.2, for the two-dimensional case, together with the reference solution. In Fig. 9 we also show a plot of the troubled cells, which are essentially concentrated at the circular shock front, while the intermediate circular contact wave results are unlimited at timet=0.2. Again, this is due to the fact that the contact wave has already undergone some limiting, and hence smearing, during the initial phase of the explosion problem, and can subsequently be transported as a smooth feature by the unlimited ADER-DG scheme, without the production of spurious oscillations. From the zoom depicted on the top right of Fig. 9 one can clearly observe that the shock wave is properly resolved within one single element on the main grid. The circular structure of the shock front is furthermore well preserved without noticeable mesh imprinting. The obtained results therefore show that our a posteriori sub-cell limiter is able to maintain the sub-cell resolution capabilities of the DG method, while providing robust and non-oscillatory results at shock waves. The numerical results for the three-dimensional case (obtained with an ADER-DG-P4scheme) are depicted in Fig. 10, from which the same conclusions as in the 2D case can be drawn.In order to assess the computational overhead of our new limiter, we run a mild version of the 2D explosion problem that can be successfully computed also with an unlimited version of the ADER-DG method. The inner state is given byρ=p=1, while the outer state isρ=p=0.5. The velocity isv=0everywhere. The problem is run on the same mesh as before, using an ADER-DGP3scheme. The first simulation is performed with the unlimited version of the scheme and the second one with the a posteriori subcell limiter. Compared to the unlimited scheme, the total CPU time was increased by 50% when the limiter was active.As a last example for the compressible Euler equations, we solve the problem of a Mach 3 flow over a sphere. The computational domain consists of an inner sphere of radiusR=0.5, at which no-slip wall boundary conditions are applied, and an outer sphere or radiusR=1, at the left of which a uniform flow of densityρ=γ,v=(3,0,0)andp=1is imposed. The right outflow boundary is obtained by subtracting a sphere of radiusR=3, centered inx=(3,0,0)from the previous configuration. The computational grid is composed of 341583 tetrahedral elements of characteristic mesh spacingh=0.033. A sketch of the 3D mesh, together with the troubled cells highlighted in red is plotted in the top left panel of Fig. 11. Furthermore, a cut through the numerical solution in the planez=0is drawn, where the distribution of troubled cells, as well as the contour levels for density and pressure are drawn. We can observe a very sharp resolution of the shock wave.In this section we present the results obtained for the classical ideal MHD system that reads(36)∂∂t(ρρvρEBψ)+∇⋅(ρvρv⊗v+(p+18πB2)I−14πB⊗B[(ρE+p+18πB2)I−14πB⊗B]⋅vB⊗v−v⊗B+ψIch2B)=0,where again the ideal gas EOS is used:(37)p=(γ−1)(ρE−12ρv2−18πB2).Like in the case of the compressible Euler equations, ρ denotes the fluid density, v is the velocity vector, p is the fluid pressure and ρE is the total energy density; the magnetic field is denoted by B. The PDE system (36) is the so-called augmented MHD system, which arises from the hyperbolic divergence-cleaning approach of Dedner et al. [38] and Kemm [91] that is needed to satisfy the constraint∇⋅B=0approximately at the discrete level. For a detailed explanation of the origin of such divergence errors in the context of resonant hyperbolic PDE systems, see the recent paper by Kemm [90]. The divergence cleaning is achieved by the scalar ψ, which transports divergence errors with the artificial speedch, so that they cannot accumulate locally. For alternative exactly divergence-free schemes for the MHD equations see, for example, [8,5,67,68,9,16,13]. For this system of PDEs the PAD criteria are the positivity of density and pressure which is not always obvious to maintain due to the presence of magnetic pressure in (37).For the numerical convergence studies in 3D, we solve a 3D version of the vortex test problem proposed by Balsara in [5]. The computational domain is given by the boxΩ=[0;12]2×[0;5]and six periodic boundary conditions are imposed on the domain boundaries. The initial condition is given in terms of the vector of primitive variablesV=(ρ,u,v,w,p,Bx,By,Bz,Ψ)Tas(38)V(x,0)=(1,1+δu,1+δv,0,1+δp,δBx,δBy,δBz,0)T,withδv=(δu,δv,δw)T,δB=(δBx,δBy,δBz)Tand(39)δv=κ2πeq(1−r2)ez×rδB=μ2πeq(1−r2)ez×r,δp=164qπ3(μ2(1−2qr2)−4κ2π)e2q(1−r2).We haveez=(0,0,1),r=(x−5,y−5,0)andr=‖r‖=(x−5)2+(y−5)2. The divergence cleaning speed is chosen asch=3. The other parameters areq=12,κ=1andμ=4π, according to [5]. Simulations are run until the final timet=1, where the exact solution is given by the initial condition shifted by(1,1)along the x and y axis, respectively. A representative tetrahedral mesh is depicted in Fig. 12, together with the pressure andBycontour surfaces. The obtained convergence rates are listed in Table 5, showing that the ADER-DG method with a posteriori subcell limiter achieves its designed order of accuracy well also on three-dimensional unstructured tetrahedral meshes.This problem consists of a cylindrical loop of magnetic field with a very low magnetic pressure compared to the gas pressure. The magnetic pressure is constant inside the loop and falls abruptly to zero at the loop's boundary which is initially set up at a radius of 0.3 units. The details of the set-up are described in Gardiner and Stone [67] and are not repeated here. The computational domain is given by the cubeΩ=[−0.5;0.5]3, where six periodic boundary conditions have been imposed. The divergence cleaning speed is set toch=3, and the problem is run to a final time oft=1.0with a fourth order ADER-DG-P4scheme and second order TVD sub-cell finite volume limiter. At the final time, the loop has been advected for one period, so that it must return to its initial location. The characteristic mesh size wash=1/25, leading to a total number of 132745 tetrahedral elements, see also Fig. 13for a view of the unstructured mesh and for a contour plot of the magnitude of the magnetic field. In the case of an unstructured tetrahedral mesh, the field loop is in general not aligned with the element faces, hence it is not necessary to tilt the 3D field loop as suggested in [68] for the case of a simple Cartesian grid. A two-dimensional cut through our computational results is presented in the right panel of Fig. 13. We find that the isotropic shape of the field loop is perfectly preserved after one periodic passage through the computational domain. Similar results have been obtained very recently with an exactly divergence-free ADER-WENO finite volume scheme in [13], but on a much finer mesh. We find that for this problem, the sub-cell limiter is activated only in the beginning of the simulation. Once the solution (which consists in the propagation of a linearly degenerate wave field) has been sufficiently smeared, it is propagated with the unlimited scheme for the rest of the simulation.We now consider the well-known vortex system of Orszag and Tang [108], see also [111] and [37] for more details on the physics of the problem. Let us recall the setup of the problem: the computational domain isΩ=[0;2π]2, the same parameters of the computation of Jiang and Wu [82] are used, however, scaling the magnetic field by4πdue to the different normalization of the governing equations. The initial condition of the problem is given by(40)(ρ,u,v,p,Bx,By)=(γ2,−sin⁡(y),sin⁡(x),γ,−4πsin⁡(y),4πsin⁡(2x)),withw=Bz=0andγ=53. The final time istfinal=3.0and the divergence cleaning speed is set toch=2.0, see [47]. We use an ADER-DGP4scheme with second order a posteriori finite volume sub-cell limiter. The unstructured triangular mesh consists of 90126 elements with characteristic mesh spacingh=2π200. In Fig. 14the results are reported at different output timest=0.5,2.0and 3.0. The pressure contour levels are plotted on the left, while the troubled zones are highlighted in red on the right. Unlimited cells are by convention shown in blue. On can observe that the limiter is mainly activated only when and where the shock waves start to form, while in the rest of the domain the unlimited DG scheme is used. The computational results agree qualitatively well with those presented elsewhere in the literature, see e.g. [82,47,61,100,143,13].This last MHD test case is the classical MHD rotor problem proposed by Balsara and Spicer in [8]. It consists of a rapidly rotating fluid of high density embedded in a fluid at rest with low density. Both fluids are subject to an initially constant magnetic field. The rotor produces torsional Alfvén waves that are launched into the outer fluid at rest, resulting in a decrease of angular momentum of the spinning rotor. The computational domain Ω is a circle with radiusr=12, the density inside the rotor isρ=10for0≤r≤0.1while the density of the ambient fluid at rest is set toρ=1. The rotor has an angular velocity ofω=10. The pressure isp=1and the magnetic field vector is set toB=(2.5,0,0)Tin the entire domain. As proposed by Balsara and Spicer we apply a linear taper to the velocity and to the density in the range from0.1≤r≤0.105so that density and velocity match those of the ambient fluid at rest at a radius ofr=0.105. The speed for the hyperbolic divergence cleaning is set toch=2andγ=1.4is used. Transmissive boundary conditions are applied at the outer boundaries of the disk. We use an unstructured triangular mesh composed of 71046 triangles of characteristic sizeh=1/200. The computational results obtained with the ADER-DG-P4scheme supplemented with second order a posteriori sub-cell finite volume limiter are displayed in Fig. 15. The results for the logarithm of the density, the pressure, the flow Mach number and for the magnetic pressure (|B|2/(8π)) are presented. We also show the troubled cells in red, while unlimited cells are depicted in blue.Overall, we find a good agreement of our computational results with those obtained by standard WENO finite volume schemes published previously in the literature, see e.g. [47,61,100,143,13]. Further research will concern the extension of the present DG scheme to exactly divergence-free MHD based on the genuinely multi-dimensional Riemann solvers forwarded in [11,10,15,12,14] and using the novel constrainedL2projection technique recently proposed in [13] for the finite volume context.As last prototype PDE system of this paper we now consider the full seven-equation Baer–Nunziato model for compressible two-phase flows. The original model has been described in [4] and has been successively modified in [121,122]. It has also been subsequently reduced to a five equation model, see [88,106]. The original Baer–Nunziato model has been proposed for the description of the deflagration–detonation transition in high-energy reactive materials composed of solid powder and compressible gas. The homogeneous model without relaxation terms [3,124,39,106] is given by the following non-conservative hyperbolic PDE system:(41)∂∂t(ϕ1ρ1)+∇⋅(ϕ1ρ1u1)=0,∂∂t(ϕ1ρ1u1)+∇⋅(ϕ1(ρ1u1⊗u1+p1I))−pI∇ϕ1=0,∂∂t(ϕ1ρ1E1)+∇⋅[ϕ1(ρ1E1+p1)u1]−pIuI⋅∇ϕ1=0,∂∂t(ϕ2ρ2)+∇⋅(ϕ2ρ2u2)=0,∂∂t(ϕ2ρ2u2)+∇⋅(ϕ2(ρ2u2⊗u2+p2I))−pI∇ϕ2=0,∂∂t(ϕ2ρ2E2)+∇⋅[ϕ2(ρ2E2+p2)u2]−pIuI⋅∇ϕ2=0,∂∂tϕ1+uI⋅∇ϕ1=0.In the above PDE systemϕjdenotes the volume fraction of phase number j, withj∈{1,2}, and the constraintϕ1+ϕ2=1. Furthermore,ρj,uj,pjandρjEjrepresent the density, the velocity vector, the pressure and the total energy per unit mass for phase number j, respectively. Alternatively, the first phase is also called the solid phase (index s) and the second phase the gas phase (index g), respectively.The model (41) is closed by the stiffened gas equation of state (EOS) for each phase(42)ej=pj+γjπjρj(γj−1),and the definition of the total energy density(43)ρjEj=ρjej+12ρjuj2,whereγjis the ratio of specific heats andπjis a material constant. In this paper, we chooseuI=u1for the interface velocity and the interface pressure is assumed to bepI=p2. This corresponds to the original choice proposed in [4] and which has also been adopted in [3,124,39,52,59,53]. However, alternative choices are also possible, see [121,122]. For this system of PDEs the PAD criteria used in the detection procedure of our subcell limiter consider the positivity of partial densities and pressures. Partial volume fractionϕ1is checked for boundedness so that0≤ϕ1≤1.To study the convergence of our high order DG scheme supplemented with a posteriori sub-cell finite volume limiter also in the non-conservative case, we first run the smooth Baer–Nunziato vortex problem first proposed in [52]. It admits a non-trivial exact solution of the time-dependent Baer–Nunziato system (41) that is smooth. It is therefore well suited for the purpose of a numerical convergence test. The details of the computational setup are given in [52] and are not repeated here. The computational domain is the squareΩ=[−10;10]2on which four periodic boundary conditions have been applied. The final simulation time ist=2, for which the exact solution is given by the initial condition shifted by[2,2]to the top and to the right. The numerical convergence results obtained for third to seventh order schemes are reported in Table 6. From the results one can conclude that the designed order of accuracy is also reached in the case of non-conservative PDE. Note that for this test problem the a posteriori limiter has detected a small number of troubled cells on some of the coarse meshes, while it does not detect any troubled cell on sufficiently fine meshes. That is the reason why for this test problem one can note a sudden decrease of the error between one grid resolution and the next one, leading to a spurious increase of the observed order of accuracy. Once the troubled zone detector starts to work properly, the method reaches its designed order as expected.In this section we run two Riemann problems for the Baer–Nunziato system, whose initial conditions are detailed in Table 7. The same problems have also been solved in [52,53,49,22] using high order WENO finite volume schemes on unstructured meshes, on space-time adaptive Cartesian grids (AMR) and on moving meshes, respectively.For details on the exact Riemann solver of the homogeneous system (41) see the papers by Andrianov & Warnecke [3], Schwendeman et al. [124] and Deledicque & Papalexandris [39].An unstructured mesh made of 2226 triangular elements with characteristic mesh spacingh=1/100has been used. In Figs. 16 and 17the results of the ADER-DG-P5scheme with second order a posteriori sub-cell finite volume limiter are presented. In both figures the mesh is shown, together with the troubled cells in red and the unlimited cells in blue. Furthermore, the volume fraction for phase 1, the density, the x velocity component and the pressure are shown for each phase in a 1D cut through the discrete solutionuhalong the x axis. The exact 1D reference solution provided by [39] is also plotted for comparison. We observe that the troubled cells are properly detected in the vicinity of the shock waves in both phases. From the 1D plots one can note that the location of the waves, the flat plateaus and even the tiny waves are properly captured without spurious oscillations.We use the same initial condition given for the Riemann problems in Table 7 to solve two cylindrical explosion problems with the compressible Baer–Nunziato model (41). The computational domain Ω is a circle of radiusR=1that has been discretized with a characteristic mesh size ofh=1/100, leading to a total number of 68324 triangular elements. In all cases the initial stateQ(x,0)is assigned by taking(44)Q(x,0)={Qi,if|x|<rcQo,else,withrc=0.5representing the location of the initial discontinuity. The left state reported in Table 7 is assumed to be the inner stateQi, while the right state represents here the outer stateQo.A radial reference solution can be obtained by solving an equivalent 1D balance law with geometric source terms, see [52] for all details. The computational results obtained with an ADER-DG-P5scheme are reported together with the reference solution in Figs. 18 and 19. For problem EP1 we have employed the Osher-type method (13), while the second problem EP2 has been run with the new path-conservative extension of the HLLEM method proposed in [48]. As usual, troubled cells are highlighted in red, while unlimited cells are plotted in blue. One finds that all discontinuities are resolved very sharply, without spurious oscillations. The limiter is only activated in a few cells, mostly close to the shock waves in each phase. Some false positive activations of the limiter in smooth regions can be noted for the second problem in Fig. 19.In this section we solve the non-convex scalar model problem proposed by Kurganov et al. in [95]. The governing PDE is given by(45)∂u∂t+∂sin⁡(u)∂x+∂cos⁡(u)∂y=0,with initial data(46)u(x,0)={3.5,πif|x|≤1,0.25,πif|x|>1.The computational domain is a circle of radiusR=2, centered inxc=(0,−0.5)and discretized with a rather coarse grid composed of 11056 triangles. Simulations are carried out with an ADER-DGP3scheme up to a final time oft=1.0. The simple Rusanov flux (11) has been used for this test problem. The computational results for u are depicted in Fig. 20, together with the limited cells in red and the unlimited cells in blue. One can observe that the numerical solution corresponds to the correct entropy solution identified in Kurganov et al. (see Fig. 5.9 left and Fig. 5.11 left in [95]), while second order TVD schemes with compressive limiters or higher order WENO schemes have been shown in [95] to converge to a wrong solution that does not satisfy the entropy principle. Our computational results confirm once more the accuracy and robustness of our simple high order ADER-DG scheme with a posteriori subcell TVD finite volume limiter also for this nontrivial test problem of a non-convex scalar conservation law. In particular, compared with Fig. 5.11 right in [95], our scheme needs less limiting.

@&#CONCLUSIONS@&#
