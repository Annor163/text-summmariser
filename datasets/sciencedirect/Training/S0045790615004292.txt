@&#MAIN-TITLE@&#
Conditional speculative mixed decimal/binary adders via binary-coded-chiliad encoding

@&#HIGHLIGHTS@&#
Decimal arithmetic adders that accept BCC (radix-1000) encoded operands and produce BCC results are proposed.Six different conditional speculation options are studied.The best proposed design show advantages in area (17%), power (13%) and PDP (14%) measures, over the best previous relevant work.

@&#KEYPHRASES@&#
Decimal computer arithmetic,Speculative decimal addition,Mixed decimal/binary adder,Binary coded chiliad encoding,Densely packed decimal encoding,

@&#ABSTRACT@&#
Graphical abstractImage, graphical abstract

@&#INTRODUCTION@&#
Research on hardware realization of decimal arithmetic has been revived in the past two decades (e.g., [1–7]), in response to new demands for high performance decimal computations. Some recently commercialized general-purpose digital processors include hardware decimal units and decimal arithmetic instruction subsets. For example, IBM included a decimal floating-point hardware unit in the chips of z-196 [8] servers and has doubled these units in the newest z13 servers [1]. Also, Fujitsu announced the new Sparc64 X processor which include an accelerator, called “software on chip (SWoC)”, to speed up operations in cryptography and decimal calculations [5]. The IEEE 754-2008 standard for floating-point decimal arithmetic [9] includes two encodings of decimal numbers. The one that is commonly used for storage of decimal operands and hardware realization of decimal arithmetic operators (e.g., [1,8,10]) is called densely packed decimal (DPD), which packs each three binary coded decimal (BCD) digits as a 10-bit DPD encoding. For example, the 16-digit BCD significand of an IEEE single precision radix-10 floating-point number is packed as five DPD declets, while the most significant BCD digit is encoded together with the exponent in the combination field of the decimal64 representation. Such representation cannot be directly carried out by decimal arithmetic operators, and is subject to unpacking to 16 BCD digits and 10-bit exponent. The IEEE 754-2008 discussions [11] include a proposal for 10-bit radix-1000 packing of three BCD digits in [0, 999] (e.g.,BCD=100B+10C+D), which was named as binary coded millennium. This encoding, which was not approved, is as storage efficient as DPD and can be as arithmetic efficient as BCD, since it can be directly manipulated by radix-1000 arithmetic operators, with no prior unpacking to three BCD digits and post packing, as is required in the DPD case. However, this binary-coded-chiliad11Chiliad is aptly named because it demonstrates a group that contains 1000 elements.encoding (BCC as is called in [12]) has been rarely used for realization of decimal arithmetic (e.g., [12,13]).Since packing and unpacking of DPD declets entails considerable delay and power dissipation overhead, which is not the case for BCC representation of decimal numbers [14], we are motivated to design and implement BCC arithmetic operators.The only work on BCC addition that we have encountered [12] extends the conditional speculative mixed BCD/binary addition scheme of [15,16] to radix-1000 operands. The conditional speculation is done via manipulating the seven most significant bits of equally weighted digits of addition operands in order to decide on+24(=210−103)speculation.In this paper, we study all other possible speculation options (i.e., five cases based on 2-6 bits, besides the 7-bit case of [12]) to provide a spectrum of area-delay-power tradeoff for mixed BCC/binary adders. However, for fair comparison, since no simple speculative mixed BCC/binary adder has been reported, we were also motivated to design such adder based on the mixed BCD/binary simple speculative adder of [15].The rest of this work is organized as follows. Section 2 provides a background on speculative and conditional speculative mixed decimal/binary and the only instance of mixed BCC/binary adders. Details of six practically useful conditional speculation options and corresponding mixed BCC/binary adders are discussed in Section 3. Implementation details are provided in Section 4, where the best speculation option and the corresponding adder design is selected. Comparison with previous mixed BCD/binary and BCC/binary adders, based on synthesis results, is covered in Section 5. Finally, Section 6 draws our conclusions.

@&#CONCLUSIONS@&#
Hardware realization of decimal arithmetic, in accordance to IEEE-754-2008 standard, usually uses the densely-packed-decimal (DPD) encoding of decimal numbers that is used for storage in secondary and primary memories and register files. Pre/post conversions, to/from arithmetic-friendly decimal encodings (e.g., BCD) are required, per each arithmetic operation, which results in delay/power overhead. While abiding to DPD standard for storage and decimal data exchange, we observe that the intrinsically manipulatable binary-coded-chiliad (BCC) encoding can be preferred for internal representation of decimal numbers in view of following properties:•Storage of BCC operands, in primary memory and registers, with the same encoding efficiency as DPD.Obviating the need for pre/post conversions per each arithmetic operation that leads to reduced latency, and power savings up to 14%.Prospects for at least equi-efficient BCC arithmetic in comparison to the corresponding BCD or other radix-10 arithmetic, as we even achieved better performance in the case of addition.Equi-width registers for BCC-single (BCC-double) operands and double (quadruple) precision binary operands, which is important for decimal/binary hardware sharing.To design mixed BCC/binary adders, we studied six different conditional speculation options (including the one of a previous relevant work). Analytical and synthesis based performance evaluations favored one particular new option. As such, the proposed design was compared with the best previous BCC and BCD mixed decimal/binary adders to show advantages in area (17%), power (13%) and PDP (14%) measures. Note that these improvement figures are exclusively due to BCC addition and do not reflect the extra savings and additional speed that are achieved due to no DPD-to-BCC and the reverse conversions before and after each arithmetic operation.Research is ongoing to study the impact of the proposed adder on unified add/subtract unit, multiplier, divider, and decimal floating-point units.