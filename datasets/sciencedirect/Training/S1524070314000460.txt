@&#MAIN-TITLE@&#
Total curvature variation fairing for medial axis regularization

@&#HIGHLIGHTS@&#
Method for regularization of a medial axis of a planar domain.Boundary curve of domain is smoothed by a new fairing method.Fairing is based on total variation regularization.

@&#KEYPHRASES@&#
Medial axis regularization,Planar domain,Fairing,Closed B-spline curve,Total curvature variation,

@&#ABSTRACT@&#
We present a new fairing method for planar curves, which is particularly well suited for the regularization of the medial axis of a planar domain. It is based on the concept of total variation regularization. The original boundary (given as a closed B-spline curve or several such curves for multiply connected domains) is approximated by another curve that possesses a smaller number of curvature extrema. Consequently, the modified curve leads to a smaller number of branches of the medial axis. In order to compute the medial axis, we use the state-of-the-art algorithm from [1] which is based on arc spline approximation and a domain decomposition approach. We improve this algorithm by using a different decomposition strategy that allows to reduce the number of base cases from 13 to only 5. Moreover, the algorithm reduces the number of conic arcs in the output by approx. 50%.

@&#INTRODUCTION@&#
The medial axis of a planar domain, which was introduced in 1967 by Blum [2], is a highly useful concept in geometry processing for describing the shape of the domain in an efficient way. The range of possible applications of the medial axis (transform) is huge and includes shape recognition, path planning, mesh generation, offset curve trimming, and font design; cf. [3–7].Depending on the type of the boundary representation of the domain, there exist different algorithms for the construction of its medial axis. In case of curved boundaries, the computation of the medial axis is a nontrivial problem. Some existing algorithms performing this computation are [1,8–12]. In this work, we will use a slightly improved version of the method described in [1], which is based on domain decomposition and an arc spline approximation of the given B-spline boundary of the domain.The medial axis of a connected planar domain is an embedded planar graph, typically with curved edges. For such a domain with aC2-smooth boundary (with counter-clockwise orientation for the outer boundary, and clockwise orientation for boundaries of holes), each leaf (i.e., each vertex of degree 1) of the medial axis is induced by a local curvature maxima of the boundary curve. More precisely, a curvature maxima generates a leaf if and only if the curvature is positive and the osculating circle is contained in the interior of the domain. Consequently, the number of leafs can be reduced by decreasing the number of curvature maxima and by decreasing the values of the curvature at the remaining maxima. When considering a domain that is bounded by a smooth curve with a high number of local curvature maxima, the medial axis has a large number of branches. Such complicated medial axes are not well suited for certain applications, such as shape recognition. Regularization methods that lead to a simplified medial axis are therefore of interest.For instance, when a non-regularized medial axis is used for object recognition in Computer Vision, this may falsify the result of this operation. Similarly, when it is used for “blocking” (segmentation) in the context of quadrilateral mesh generation, then the structure of the resulting mesh will be unnecessarily complicated.The present paper addresses the following problem: Consider a connected planar domain whose boundary is given by one (or several) closed B-spline curve(s). Due to the variations of the curvature (in particular the number of extrema), the medial axis possesses a large number of branches, see Fig. 1(a). We present a regularization method that simplifies this medial axis by removing unwanted branches (leafs), see Fig. 1(b).The existing methods for regularizing the medial axis of a simply connected domain can roughly be classified into two approaches: direct and indirect methods. Indirect methods simplify the boundary of the domain to obtain a simpler medial axis, whereas direct methods deal with the initial medial axis to regularize it. The main steps of both methods are summarized in Fig. 2.A group of direct methods are the so-called pruning techniques. The amount of existing literature about these methods is large. The papers [13,14] present surveys of different existing pruning algorithms.One such example is the method in [15], which describes a concept for computing a regularized medial axis of a domain, called the λ-medial axis. The λ-medial axis is a subset of the medial axis, which is homotopy equivalent to the domain, provided that the parameter λ is chosen sufficiently small. In some situations, however, the parameter λ has to be selected larger to obtain a good pruning result, which would lead to a loss of important information of the medial axis about the shape of the domain.More generally, when using the pruning approach, the direct geometric connection between the shape of the domain and its medial axis is lost, since the simplified medial axis is no longer the medial axis of the given domain, and sometimes (depending on which pruning method is used) not even of a simplified domain derived from it.A direct method, which can usually overcome the problem of losing important information of the medial axis, is the concept of scale axis transform [16]. First, the medial axis transform of the initial domain is computed and is used to extend the domain by enlarging the maximal disks by a factors>1. This extended domain possesses now a simpler medial axis compared to the initial one. By shrinking the maximal disks of the medial axis transform of the extended domain by the same factor s, a domain is obtained which is “close” to the initial one and having the same regularized medial axis as the extended domain. This concept has been extended to discrete three-dimensional shapes in [17].For most direct techniques, the resulting error of the simplified approximated domain can be controlled only indirectly via simple parameters. A recently investigated direct method, which possesses a direct control of the error, is presented in [18]. The idea is to regularize the medial axis by repeatedly removing endpoints of the medial axis until the resulting one-sided Hausdorff distance is greater than some chosen tolerance. Furthermore, the obtained medial axis is approximated by several spline curves in such a way that the distance between the boundary of the initial domain and of the simplified domain is minimized.Another disadvantage of direct techniques is that most direct methods require the computation of the full medial axis of the initial domain to be able to regularize it. This is in contrast to indirect methods, where the medial axis of the initial domain is not needed for its simplification.The class of indirect methods mainly consists of algorithms for smoothing the boundary of the domain. A smoothing algorithm that is suitable for medial axis regularization should reduce the number of local curvature extrema, while keeping the resulting approximation error as small as possible.The process of smoothing a B-spline curve with respect to its curvature (“fairing”) has been studied thoroughly. The classical approach to fairing is based on the minimization of the integral of the squared (first derivative of the) curvature or of the integral of the squaredℓth derivative of the given B-spline curve for computing the modified curve,ℓ=2,3,4. Some examples are [19–27] , which include local and global fairing methods.For instance, Eck and Hadenfeld [19] describe a very efficient iterative and local fairing algorithm. They minimize the integral of the squaredℓth derivative of the given B-spline curve by modifying exactly one control point in each iteration step. Since the resulting minimization problem is linear, the method is fast and simple.An example of a global fairing strategy is explained in [21], where the so-called minimum variation curves are constructed by minimizing the integral of the squared first derivative of the curvature of the B-spline curve.A recent alternative approach for fairing a given (spline) curve is explained in [28], where the curve is approximated by piecewise clothoid curves.The existing fairing methods, however, are not well suited for the regularization of the medial axis, since the number of remaining curvature maxima of the boundary curve remains still too high after modifying the given spline curve.We present now a new fairing method which is especially tailored to the needs of medial axis regularization. The algorithm has been inspired by the concept of total variation regularization in image processing (cf. [29,30]). Similar to this approach, our fairing method minimizes a linear combination of a least squares approximation term and the integral of the absolute value of the first derivative of the curvature of the B-spline curve. The latter term plays the role of the total variation term. The aim of our approach is to support the creation of fewer monotonic pieces of the curvature (i.e., spiral segments). This allows a substantial reduction of the number of local curvature extrema (maxima) while keeping the approximation error relatively small. Our method is a global optimization strategy which uses the gradient descent method for solving the minimization problem.Variational fairing methods for level set curves are described in [31–33]. These algorithms are not directly applicable to B-spline curves and rely on the minimization of the arc length (or higher order functionals) for smoothing.The remainder of the paper is organized as follows. We start with some basic definitions in Section 2. In particular, we introduce a class of simply connected planar domains, whose boundaries are represented by closed smooth B-spline curves. We also recall the concept of medial axes and describe a method for the medial axis computation. More precisely, we present an improved version of the algorithm from [1] that will be used in our work. In addition, we summarize the main idea of total variation regularization which has originated in image processing.Section 3 presents a new method for fairing closed B-spline curves by reducing the number of local curvature extrema via total variation regularization. We compare our fairing algorithm with the method of Eck and Hadenfeld [19] (the “E&H method”). For this purpose we demonstrate the effect of the two different fairing algorithms by several examples. In order to make the paper self-contained, the E&H method is summarized in Appendix A.Section 4 uses our method for fairing the boundary curve of a domain to obtain a simplified structure of its medial axis. We show a few examples of generated medial axes for several domains and compare them again with the results obtained by the E&H fairing method.We describe the class of connected planar domains that will be considered in this work. Moreover, we give a short overview of the concept of medial axes and explain the algorithm that we will use for medial axis computation. Finally, we recall the concept of total variation regularization which has originated in image processing.LetΩ⊂R2be the closure of a connected bounded open domain, whose boundary∂Ωis described by one (or several) regular, simple, and closedC3-smooth B-spline curve(s)pof degreed⩾4. More precisely, the curvepis given by the B-spline representation(1)p(t)=∑i=0mNid(t)ci,t∈[0,1],with control pointsci∈R2andm⩾2d-1. The basis functions(Nid(t))i=0,…,mare B-splines of degree d with respect to an increasing knot sequenceT=(ti)i=0,…,m+d+1withtd=0andtm+1=1. In order to ensure aC3-connection at the closing pointp(0)=p(1), i.e.dkdtkp(t)t=0=dkdtkp(t)t=1,fork∈{0,…,3}, it suffices to require that the first d control points coincide with the last d control points, i.e.ci=ci+m-d+1,fori∈{0,…,d-1}, and the knots satisfyti+1-ti=tm+2+i-ti+m+1,fori∈{0,…,d-1}.An example of a domain Ω, whose boundary∂Ωis given by such a closed B-spline curvep, is shown in Fig. 3(a).We recall that the curvature κ of the (closed) B-spline curvepis given byκ(t)=ṗ1(t)p¨2(t)-ṗ2(t)p¨1(t)(ṗ12(t)+ṗ22(t))32,t∈[0,1],wherep1andp2are the first and second coordinate function of the curvep, respectively. The dotṡand̈denote the derivatives with respect to the curve parameter t. Since the B-spline curvepis regular and at leastC3-smooth, the curvature κ is at leastC1.Fig. 4(see also Examples 2 and 3 below) shows three examples of planar domains, their curvature distribution, the medial axis, and the curvature distribution of an arc spline approximation. (The latter approximation will be discussed later.)We recall the notion of the medial axis, which was introduced by Blum in [2].A diskDr(z)⊂R2with radiusr>0and centerz∈R2is the setDr(z)={x∈R2|||x-z||⩽r}.We say that a diskDr(z)⊆Ω, which is inscribed into (i.e., contained in) Ω, is maximal, if there does not exist another inscribed diskDr¯(z¯)withDr¯(z¯)≠Dr(z)andDr¯(z¯)⊆Ω, which containsDr(z), i.e.Dr(z)⊂Dr¯(z¯). The set of all maximal inscribed disksDr(z)⊆Ωis called the medial axis transform of Ω and is denoted byMAT(Ω). The medial axis of Ω, denoted byMA(Ω), is simply the set of centers of all disks inMAT(Ω).Equivalently, the medial axisMA(Ω)can be defined as the (closure of the) set of all points in Ω, that have at least two closest points on∂Ω.Our assumptions on the domain Ω imply that the medial axisMA(Ω)is an embedded planar graph with finitely many edges and vertices. In detail, the edges are the bisector curves (branches) of the medial axisMA(Ω). The internal vertices, which are also called branching points, are the intersections of these curves; and the non-internal vertices, which are also called leafs, are induced by local curvature maxima of the boundary curvep. Moreover, the branching points are vertices of valencyn⩾3and the leafs are vertices of valency one. Fig. 3(b) shows a simple example of a medial axis of a simply connected domain, where the three types of components (i.e. bisector curves, branching points and leafs) are identified.Our strategy for the regularization of the medial axis in Section 4 will be based on the approximation of the boundary curvepby a curve with a smaller number of local curvature maxima to reduce the complexity of the medial axis, see Section 3. It should be noted, however, that some of the local curvature maxima ofpdo not generate a leaf. More information about the theoretical background of medial axes is available in the rich literature on this topic, e.g. [4,6,34].A fast and simple method for the medial axis computation of a simply connected domain is explained in [1]. It has later been extended to the case of planar domains of general topology [35]. In this work, we will use a modified algorithm for generating the medial axes, which leads to a smaller number of base cases and a reduced data volume.As a preprocessing step, the boundary of the domain, which is given by a simple closed B-spline curvep, is approximated by spiral biarcs, see [36]. Boundary segments with vanishing curvature (line segments) are kept unchanged. The use of spiral biarcs implies that the arc spline approximation of the boundary preserves the local curvature extrema of the initial boundary curve.Fig. 4 also shows the curvature distribution of the arc spline approximation. The curvature is now piecewise constant, but the distribution of the extremal values has been preserved due to the use of spiral biarcs.Now, following the approach in [1], we use the randomized Divide & Conquer algorithm medial-axis for computing the exact medial axis of the approximated boundary. It is based on the Domain Decomposition Lemma from [4], which provides a tool for splitting the domain into subdomains in such a way that the union of the medial axes of the subdomains is the medial axis of the whole domain.Algorithm 1medial-axisIn the divide step, a maximal disk D is chosen that splits the boundary∂Ωintok⩾2chains. This is handled by the algorithms maximal-disk fork=2and maximal-disk∗ fork>2. Then the chains are closed with artificial arcs that lie on∂D, which leads to new, separate domainsΩ0…Ωk.Algorithm 2maximal-diskmaximal-disk∗This disk D is constructed by randomly selecting a curvebof the boundary and finding the maximal disk D touching one of the endpoints ofbinstead of the middle point ofbas suggested in [1]. In this way,bdoes not have to be subdivided and therefore the number of the newly introduced curves on the boundary is brought down by one in each step. To ensure that this step reduces the size of the problem, each boundary∂Ωishould consist of less curves than the original boundary∂Ω. Disks which do not fulfill this condition are called “non-reducing” and cannot be used. Hence, a different disk has to be found. The divide step is applied to the single resulting domainsΩ0…Ωkas long as no base case is reached.The difference in the selection of the point and the fact that also every branching point will be found by maximal-disk∗ lead to a reduction of the number of base cases from 13 (as in [1]) to only 5, see Fig. 5. To verify that a given boundary chain is a base case, the following three criteria have to be fulfilled:•The number of non-artificial curves is < 3.The number of artificial arcs is < 3.There are no concave vertices in the chain.If all resulting domainsΩiare base cases, then the conquer step is applied. First, the medial axes of the base cases are computed directly. Second they are glued together at the centers of the maximal disks, which were chosen in the divide step, to obtain the medial axis of the original domain Ω.We have implemented the algorithm medial-axis with the help of the commercial Parasolid™ kernel and used it to generate the regularized medial axes of our examples in Section 4.By using the concept of generalized domains from [35], our implementation can also deal with domains that are multiply connected. Due to space limitations we do not present the details of this approach.Total variation regularization is a well known concept in image processing (cf. [29,30]). The idea is to approximate the original functionu0(x)(e.g. a noisy image) by a functionu(x), which minimizes the total variation of u, i.e.∫|∇u(x)|dx.In order to keep the unknown function u as close as possible to the original functionu0, the least squares (orL2) approximation term∫12(u(x)-u0(x))2dx,is added to the minimization problem. Summing up, the function u is computed by minimizing the objective functionminu∫12(u(x)-u0(x))2dx+α∫|∇u(x)|dx,which depends on the regularization parameterα>0.As a useful property, total variation regularization encourages the creation of larger monotonic pieces of the newly constructed functions u compared to other minimization methods, while keeping the approximation error relatively small. Indeed, if we consider the set of all functions on an interval[0,1]with prescribed boundary valuesu(0)=u0,u(1)=u1, then the minimum of the total variation equals|u0-u1|and it is realized by any monotonic function. We will demonstrate this effect of using total variation regularization on the basis of an example, and we will compare the results with the ones obtained by three other minimization methods.Example 1We consider the periodic uniformC3-smooth B-spline functionu0(t)of degree 4 with 84 control points given in Fig. 6(blue function). We will construct periodic uniform B-spline functionsu(t)of degree 4 with 24 control pointscˆ=(cˆ0,…,cˆ23)which minimize the objective function(2)cˆ=argmin∫0112(u(t)-u0(t))2dt+α∫01η(u)dtfor different smoothing termsη(u), given by(a)η(u)=|ddtu(t)|,(b)η(u)=(ddtu(t))2,(c)η(u)=(d2dt2u(t))2, and(d)η(u)=(d3dt3u(t))2.The optimization problem (2) combined with the term(a)is now exactly the total variation regularization problem. For this minimization problem we generate a periodic B-spline function u, see Fig. 6(a) (black function), which has an approximation term with the valueν=0.0289. In addition, we compare this function with the resulting functions obtained by minimizing (2) combined with the terms (b–d), see Fig. 6(b–d) (black functions). In order to obtain comparable results we choose the parameter α for the different optimization problems in such a way that we get the same values for the approximation terms. One can see that the total variation regularization creates fewer and larger monotonic segments of the function u compared to the other three minimization methods.In the next section we will modify this concept for fairing planar B-splines curves. We reduce the number of local curvature extrema by reducing the number of monotonic segments of the curvature.We describe a method for fairing the boundary curvepwith respect to the number of local curvature extrema. This will be achieved by adapting the concept of total variation regularization, which originated in image processing (see [29,30] and Section 2.4), to the curve fairing problem.Later we will use this method in Section 4 to regularize the medial axisMA(Ω). Using a modified boundary curve that possesses a smaller number of local curvature extrema reduces the number of leafs, branching points and edges of the medial axisMA(Ω).The total curvature variation (TCV) fairing algorithm generates a simple closed B-spline curveq:[0,1]→R2which approximates the given curvepand possesses a reduced number of local curvature extrema compared to the original curvep. The newly constructed curveqshould have the same degree d, the same number of control points m, the same knot sequenceT, and therefore also the same smoothness as the original curve.The curveqis constructed as follows. Letc¯=(c¯0,…,c¯m)be the unknown coefficients of the curveq, which are computed by solving the minimization problem(3)c¯=argminf(c¯),subject to the constraintc¯i=c¯i+m-d+1,fori∈{0,…,d-1}, wheref(c¯)=ω1∫01(q(t)-p(t))2dt︸g(c¯)+ω2∫01|κ̇(t)|dt︸h(c¯),whereκ̇is the first derivative of the curvature function of the unknown curveq. The parametersω1>0andω2>0are used to control the relative influence of the approximation termg(c¯)and of the curvature termh(c¯)in the minimization process, respectively. The curvature termh(c¯)extends the idea of the total variation (TV) term that is used in TV regularization in image processing.Since the optimization problem (3) is highly nonlinear and the objective functionf(c¯)isC1-smooth in the generic case, we use a simple gradient descent method to solve it. Starting with the initial coefficientsc¯(0)=cof the given B-spline curvep, we iteratively compute the coefficientsc¯(k+1)by(4)c¯(k+1)=c¯(k)-λ(k)▽f(c¯(k))where the step sizeλ(k)is generated in each iteration step with the help of the backtracking line search strategy (cf. [37]). We repeat the step (4) until•||c¯(k+1)-c¯(k)||is smaller than some chosen tolerance,theL2error (i.e., the approximation term of the objective function) is reduced within a user-defined threshold, oruntil the number of iterations exceeds a user-specified number.The following example demonstrates the effect of our fairing algorithm and compares the generated boundary curves with the boundaries obtained by the E&H method (cf. [19] and Appendix A).Example 2We consider the three different domains Ω given in Fig. 4, whose boundaries are given by a simple closed B-spline curvepof degree 4 with a uniform knot sequence. For the first two domains, the boundary curve consists of 84 control points, for the third domain of 164 control points. For all three domains, the corresponding curvature plots show that the curvatures oscillate strongly which means that the single boundary curves have a high number of local curvature extrema.In order to regularize the medial axis, we want to fair the boundary curves with respect to the number of local curvature extrema by using our total variation-based method and compare the resulting curves in Figs. 7–9with the ones obtained by the E&H method. More precisely, we use(a) the total variation-based method,(b) the total variation-based method combined with the E&H method, and(c) the E&H method.For all methods (a–c), the user-defined parameters are reported in Table 1.First we apply the total variation-based fairing method (a) to the given boundary curvesp. The resulting curvesqpossess curvature functions, having a better behavior with respect to two properties: On the one hand, for each curve the number of local curvature extrema is much smaller. On the other hand, the amplitudes of the curvature functions have been reduced significantly. TheL2-norm approximation error, i.e.∊=∫01(q(t)-p(t))2dt12,for each curve is still relatively small, see Table 2.But since the resulting curves (a) still possess a quite high number of “small” local curvature extrema, we continue the fairing process of these curves by means of the E&H method with the parameters reported in Table 1. This allows to reduce the number of these extrema even further, while only slightly increasing theL2-norm approximation error, compare Table 2. We obtain modified boundary curves (b) with curvature functions having a reduced number of local curvature extrema and having a nicer and more smoothed shape in comparison with the corresponding curves (a) and especially by contrast with the original curves from Fig. 4.We compare these results (for methods (a) and (b)) with the ones obtained by fairing the boundaries only with the help of the E&H method to generate smoothed boundary curves (method (c)).In order to obtain comparable results, we choose the parameters of the algorithm for the different examples in such a way that we obtain a similarL2-norm of the approximation errors, see Tables 1 and 2.When using the E&H method (c), the curvature functions of the resulting boundary curves exhibit much stronger and higher amplitudes (2–3-times higher compared to the methods (a) and (b)). Moreover, and even more important for medial axis regularization, the curves (c) possess higher numbers of local curvature extrema compared to the curves (b).The algorithms (a–c) were implemented in C++. All occurring integrals are computed numerically by using the trapezoidal rule with a variable number of sampling points, see Table 1, and the gradients are obtained with the help of numerical differentiation. The computing times for the construction of the different examples in Figs. 7–9 are reported in Table 2. The computations were performed on a workstation running the Gentoo Linux operating system (Intel Core i7-3770 CPU @ 3.40GHz, 4 cores, 32GB RAM, 64bit). The deviation of the modified boundary curves from the original ones are shown in the first rows of Figs. 7–9. Note that the deviation has been amplified by a factor of 3 in order to make it visible.Summing up, the combination of TCV fairing with the E&H method (b) leads to the best results with respect to the number of local curvature extrema. If one uses only TCV fairing (a), the global shape of the resulting curvature function becomes nice but some “small” local curvature extrema remain. The E&H method can easily eliminate those, while maintaining a good approximation, see Table 2.However, using only a standard fairing algorithm (c) – such as the E&H method – does not give satisfactory results. The resulting curvature functions possess more and larger oscillations. Clearly, the better performance of TCV fairing comes at a price: the minimization of the non-linear objective function by the gradient descent method is much more costly than the simple quadratic optimization of the E&H method.The fairing method from the previous section enables us to regularize the computation of the medial axis of planar domain Ω, whose boundary is described by one (or several) simple closed B-spline curve p given by (1). More precisely, we generate a modified boundary curve, which possesses a reduced number of local curvature maxima. This significantly simplifies the structure of the medial axis of the domain, see Section 2.2. Recall that we compute the medial axes using a modified version of the Divide-and-Conquer-type algorithm of [1], see Section 2.3.On the basis of Example 2, we will demonstrate the potential of our regularization method. Again, we will compare the results obtained by the three different approaches (a–c).Example 3We consider again the three different domains Ω given in Fig. 4, whose boundaries are given by a simple closed uniform B-spline curve of degree 4 with 84 or 164 control points, respectively. For all three domains, the medial axes of the initial domains possess a lot of small branches, which occur because of the high number of local curvature maxima of the corresponding boundary curves. Therefore we use the modified boundary curves of these domains computed in Example 2 to generate regularized medial axes of the initial domains with the help of the algorithm medial-axis, see Figs. 7–9.For all three domains, the total variation-based method (a) and the total variation-based method combined with the E&H method (b) lead to regularized medial axes of similar quality. Both methods perform significantly better than using solely the E&H method (c).Since the computations of the medial axes are based on the spiral biarc approximations of the modified boundary curves (cf. Section 2.3), we have also visualized the corresponding curvature plots of the used biarc approximations. Due to the use of spiral biarcs, these approximations preserve the curvature distribution of the modified boundaries.The computing times for biarc approximation and medial axis computation as well as the number of leafs of the resulting medial axes are reported in Table 3. The calculations were performed on a workstation running the SUSE Linux Enterprise Desktop 11 operating system (Intel Xeon E3-1240 CPU @ 3.30GHz, 4 cores, 16GB RAM, 64bit). Note that we used the Parasolid™ geometry kernel to perform the geometric operations.The following example will demonstrate that our regularization method can also deal with multiply connected domains, whose boundaries are described by several simple closed B-spline curvespgiven by (1). The idea is as follows. We first separately smooth the single boundary curves of the multiply connected domain. Then we compute the medial axis by means of the modified version of the algorithm from [1], described in Section 2.3, by using the concept of generalized domains from [35].Example 4We consider the multiply connected domain given in Fig. 10(a), whose inner and outer boundary of the domain are represented by simple closed uniform B-spline curves of degree 4 with 164 points. The medial axis of the multiply connected domain possesses a large number of branches, which implies that the two boundary curves have a high number of local curvature extrema.We separately fair the two boundary curves of the domain to reduce the number of local curvature extrema of each curve to obtain a regularized medial axis. More precisely, we apply the same three fairing methods as in Examples 2 and 3 to smooth the two single boundary curves and compare the resulting medial axes, see Fig. 10(b–d). In order to obtain comparable results we generate boundary curves with a similarL2-norm approximation error by using the different methods. Again, the total variation-based method (b) and the total variation-based method combined with the E&H method (c) lead to significantly better results than using solely the E&H method (d).In practice, our regularization method can be applied to any domain, provided that the boundary curves areC3smooth. If the boundary is not described by a simple closed B-spline curve by (1), or if the smoothness of the boundary is too low, one may approximate the boundary by a quartic B-spline curve with the help of least squares fitting (cf. [38]).In the following example we will regularize the medial axes of two simply connected domains, which are represented as point clouds. The used data has been provided by the authors of the recent paper [18], which describes an error-controlled method for medial axis regularization.Example 5We consider the two initial domains given in Fig. 9(a) and (b) from [18]. The two domains, i.e. the example of the car and dolphin, consist of 1000 and 800 points, respectively, and possess medial axes with a large number of small branches. As first step, we use least squares fitting to generate closed uniform B-spline curves of degree 4, which approximate the initial point clouds and which will be used later as initial curves in the TCV fairing process. Fig. 11shows that the resulting boundaries of the domains have already quite regularized medial axes, since least squares fitting produces fairly regular boundary curves. Then we continue the smoothing of the boundaries by applying the total variation-based method combined with the E&H method. By choosing appropriate parameters we obtain regularized medial axes of similar quality compared to the method in [18], see Fig. 11.For this example, we slightly modified the TCV method in such a way that the approximation termg(c¯)in the minimization problem (3) is replaced by the least squares fitting termg̃(c¯)=∑i(q(τi)-pi)2,wherepiare the initial points with the corresponding parametersτi. The advantage of this modification is that we still compare the approximation error of the resulting curveqwith the initial point cloud.Moreover, we compare the resulting approximations errors by using the TCV +E&H method with the errors obtained by the method in [18]. Since in [18] the approximation error is measured by the one-sided Hausdorff distance∊̃, i.e.∊̃=maxi{min{||pi-q(t)||:t∈[0,1]}},we will also use this distance for error comparison in this example, see Table 4. Although the TCV method is controlled by another approximation error, namely by theL2-norm approximation error, the resulting one-sided Hausdorff distance approximation errors∊̃are in the same order of magnitude as for the results of the method described in [18].

@&#CONCLUSIONS@&#
