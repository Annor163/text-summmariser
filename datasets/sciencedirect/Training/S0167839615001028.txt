@&#MAIN-TITLE@&#
Curve network interpolation by C

@&#HIGHLIGHTS@&#
Interpolation of a B-spline curve network by a surface based onC1quadratic B-splines on criss–cross triangulations.Proof of the existence and uniqueness of the surface and constructive algorithm for its generation.Numerical and graphical results and comparisons with other spline methods.

@&#KEYPHRASES@&#
Interpolation,B-spline surface,Curve network,

@&#ABSTRACT@&#
In this paper we investigate the problem of interpolating a B-spline curve network, in order to create a surface satisfying such a constraint and defined by blending functions spanning the space of bivariateC1quadratic splines on criss–cross triangulations. We prove the existence and uniqueness of the surface, providing a constructive algorithm for its generation. We also present numerical and graphical results and comparisons with other methods.

@&#INTRODUCTION@&#
The interpolation of a curve network by a smooth parametric surface has been a well-studied problem in literature since the second half of last century. Indeed it is easier and more intuitive to describe a complicated 3D free-form surface by creating a curve network than to directly manage surface control points.Given a curve network, in the literature this interpolation problem is faced up by considering different approaches. For instance a classical one is based on blending-function methods (Barnhill, 1976; Bos et al., 1996; Delvos and Schempp, 1989; Gordon, 1969, 1971, 1993). Some other ones consist in the interpolation of the curve mesh either by a smooth regularly parametrized surface with one polynomial piece per facet (Peters, 1991) or by subdivision schemes (Conti and Dyn, 2005).We recall that, in general, most surface fitting methods fall into one of two categories: global or local methods. A global method represents a surface by a ready available expression on the whole parametric domain and it is generally obtained either by solving a system of equations or by other schemes, for instance the ones based on the quasi-interpolation, that do not require to solve any system of equations. Local methods are more geometric in nature, constructing the surface patch-wise, using only local data for each step and imposing the required smoothness patch by patch.Moreover it is well known that NURBS, based on rectangular patches, are a widely used computational geometry technology in CAGD, thanks to their many good properties. Tensor product B-spline surfaces are a specific kind of NURBS (Hoschek and Lasser, 1989; Piegl and Tiller, 1995). However, sometimes the above surfaces can create unwanted oscillations and some inflection points on the surface, due to their high coordinate degree. An example of tensor product B-spline surface interpolating a B-spline curve network is proposed in Piegl and Tiller (1995, Chap. 10). It is obtained from a blending-function method based on a special application of Gordon type schemes (Gordon, 1969, 1971, 1993), constructing three different surfaces expressed by means of B-spline functions belonging to different spaces, so that the bivariate resulting one is not defined on the rectangular grid associated to the knot vectors of the curve net, since a knot refinement is required.NURBS on triangulations can avoid the unwanted oscillations, since they have a total degree lower than the one of NURBS based on rectangular patches. Therefore they can be very useful in CAGD (Wang and Li, 2004a, 2004b, 2004c).In this paper we want to combine the advantageous features of the above cited techniques, proposing a new global method, to generate a surface interpolating a given B-spline curve network and using as blending functions bivariate B-splines on a criss–cross triangulationTmnof the parametric domain. In particular, we considerC1quadratic B-spline curve networks and we define a parametric surface that satisfies the above interpolation constraint and it is based on the B-spline functions spanning the spaceS21(Tmn)of all quadraticC1splines onTmn.We remark that this space has been widely studied, with reference to its dimension, local basis, approximation power, etc. and it has been used in many applications (see Dagnino and Lamberti, 2008, 2007; Dagnino et al., 2012, 2013; Lamberti, 2009; Sablonnière, 2003a, 2003b; Wang, 2001; Wang and Li, 2004a and references therein). This paper wants also to be a further contribution to the researches on the surface construction based on above blending functions spanningS21(Tmn).The structure of this paper is the following.In Section 2 we define the B-spline curve network with its compatibility conditions.In Section 3 we give necessary and sufficient conditions for the existence of the B-spline interpolating surface and we prove its uniqueness. Moreover, we propose a constructive algorithm for its generation and some notes on the behaviour of the surface control points generation process with respect to the round-off error.Finally, in Section 4 we present some numerical and graphical applications. In particular we numerically validate the uniqueness of the surface interpolating the given B-spline curve network and we compare our method with two other ones, based on classical biquadratic tensor product B-spline functions. Moreover we underline that the rectangular topology of the parametric domain is not a too tight constraint for the object shape.Let{Pj(r)}j=0n+1,r=0,…,mand{Qi(s)}i=0m+1,s=0,…,n,Pj(r),Qi(s)∈R3, be the control points of two given sets ofC1quadratic B-spline curves(1)ϕr(v)=∑j=0n+1Pj(r)Bj(v|V),r=0,…,m,v∈[c,d]⊂R,ψs(u)=∑i=0m+1Qi(s)Bi(u|U),s=0,…,n,u∈[a,b]⊂R,where we assume that the curves (1) satisfy the following compatibility conditions:C1.as independent sets, they are compatible in the B-spline sense, that is, all theψs(u)are defined on a common parametric knot vector(2)U={a=u−2≡u−1≡u0<u1<⋯<um≡um+1≡um+2=b}and all theϕr(v)are defined on a common parametric knot vector(3)V={c=v−2≡v−1≡v0<v1<⋯<vn≡vn+1≡vn+2=d}.In our notation the B-splinesBi(u|U)andBj(v|V)have supports[ui−2,ui+1]and[vj−2,vj+1], respectively (Sablonnière, 2003a, 2003b).Moreover, we assume(ξi,vs), with(4)ξi=ui−1+ui2,i=0,…,m+1and(ur,ηj), with(5)ηj=vj−1+vj2,j=0,…,n+1as the pre-image ofQi(s)for all s andPj(r)for all r, respectively (Fig. 1). We recall thatξiandηjare known as Greville abscissae;(6)Irs=ϕr(vs)=ψs(ur),r=0,…,m,s=0,…,n.Although we suppose the curve network is given, however we remark that a curve network satisfying the condition C2. always exists. Indeed, from the property of B-spline local support, we notice that forr=1,…,m−1ands=1,…,n−1, the condition C2. is equivalent to(7)Ps(r)Bs(vs|V)+Ps+1(r)Bs+1(vs|V)=Qr(s)Br(ur|U)+Qr+1(s)Br+1(ur|U).Since we have (de Boor, 2001, Chap. X; Chui, 1988, Sect. 1.5)Br(ur|U)=σr+1,Br+1(ur|U)=σr+1′,Bs(vs|V)=τs+1,Bs+1(vs|V)=τs+1′,where, for0≤r≤m+1and0≤s≤n+1,(8)σr+1=hr+1hr+hr+1,σr′=hr−1hr−1+hr,τs+1=ks+1ks+ks+1,τs′=ks−1ks−1+ks,withhr=ur−ur−1,ks=vs−vs−1andh−1=hm+2=k−1=kn+2=0(when in (8) we have00, we set the corresponding value equal to zero), therefore, the condition (7) can be written as follows(9)τs+1Ps(r)+τs+1′Ps+1(r)=σr+1Qr(s)+σr+1′Qr+1(s).By a similar argument, we can prove that, fors=0,nandr=1,…,m−1, the condition C2. is equivalent to(10)σr+1Qr(0)+σr+1′Qr+1(0)=P0(r),σr+1Qr(n)+σr+1′Qr+1(n)=Pn+1(r)and, forr=0,mands=1,…,n−1, it is equivalent to(11)τs+1Ps(0)+τs+1′Ps+1(0)=Q0(s),τs+1Ps(m)+τs+1′Ps+1(m)=Qm+1(s).Moreover, it results(12)Q0(0)=P0(0),Qm+1(0)=P0(m),Q0(n)=Pn+1(0),Qm+1(n)=Pn+1(m).Then, since from (1), the number of curve network control points is(m+1)(n+2)+(m+2)(n+1)and, from (9)–(12), the number of constraints is(m+1)(n+1), a curve network satisfying the condition C2. always exists and several control points can be arbitrarily chosen to define it.LetTmnbe the criss–cross triangulation of the parameter domainΩ=[a,b]×[c,d], based on the knotsU×V, given in (2) and (3) (Fig. 2).LetBmn={Bij(u,v),(i,j)∈Kmn}, withKmn={(i,j):0≤i≤m+1,0≤j≤n+1}be the collection of(m+2)(n+2)bivariate B-splines (Chui and Wang, 1984; Dagnino and Lamberti, 2008; Sablonnière, 2003a, 2003b; Wang, 2001), spanning the spaceS21(Tmn), i.e. the space of allC1quadratic splines whose restriction to each triangle ofTmnis a bivariate polynomial of total degree two. It is well known that dimS21(Tmn)=(m+2)(n+2)−1(Chui and Wang, 1984; Wang, 2001).By means ofBmn, we can define aC1quadratic B-spline parametric surface of the form(13)S(u,v)=(Sx(u,v),Sy(u,v),Sz(u,v))T=∑i=0m+1∑j=0n+1CijBij(u,v),(u,v)∈Ω,interpolating the curve network (1). In order to do it, we have to get the control pointsCij∈R3,i=0,…,m+1,j=0,…,n+1, whose pre-images in Ω are the points(ξi,ηj), defined in (4) and (5), respectively (Fig. 2).Thus, we interpret the curves (1) as isoparametric curves ofS, i.e.(14)S(ur,v)=ϕr(v),r=0,…,m,(15)S(u,vs)=ψs(u),s=0,…,nand in Theorem 3.1 we deduce the constraints that have to be satisfied by the surface control points{Cij}, in order to satisfy (14) and (15).Theorem 3.1The curves(1)are isoparametric curves ofSif and only if the control points{Cij}in(13)satisfy the following conditions:(16)σr+1Cr,j+σr+1′Cr+1,j=Pj(r),r=1,…,m−1,j=1,…,n,(17)τs+1Ci,s+τs+1′Ci,s+1=Qi(s),s=1,…,n−1,i=1,…,m,(18)Ci0=Qi(0),i=0,…,m+1,(19)Ci,n+1=Qi(n),(20)C0j=Pj(0),j=0,…,n+1,(21)Cm+1,j=Pj(m).ProofFrom the locality of the bivariate B-splines ofBmn,Bij(ur,v)≡0fori<r,i>r+1and any j. Then, from (13), we can write(22)S(ur,v)=∑i=0m+1∑j=0n+1Ci,jBi,j(ur,v)=∑j=0n+1(Cr,jBr,j(ur,v)+Cr+1,jBr+1,j(ur,v)).Considering the Bernstein–Bézier (BB-)coefficients ofBrj(ur,v),Br+1,j(ur,v)andBj(v|V), forr=1,…,m−1andj=0,…,n+1(Dagnino et al., 2008, 2012), we get(23)Br,j(ur,v)=σr+1Bj(v|V),Br+1,j(ur,v)=σr+1′Bj(v|V).Then, from (22) and (23), we obtain(24)S(ur,v)=∑j=0n+1(σr+1Cr,j+σr+1′Cr+1,j)Bj(v|V).Therefore, from (14), (1) and (24), we get (16).Now, by the same argument, since(25)S(u0,v)=∑i=0m+1∑j=0n+1Ci,jBi,j(u0,v)=∑j=0n+1C0,jB0,j(u0,v)andB0,j(u0,v)=Bj(v|V)(Dagnino et al., 2008, 2012), from (14), (1) and (25), we get (20).Similarly, by settingu=umin (13), (21) holds.By using the same logical scheme, from (15), we can show (17), (18) and (19).  □From Theorem 3.1 we can immediately get thatC00=Q0(0)=P0(0),Cm+1,0=Qm+1(0)=P0(m),C0,n+1=Q0(n)=Pn+1(0),Cm+1,n+1=Qm+1(n)=Pn+1(m).Now we want to show that the surfaceSis unique and it can be expressed as a linear combination of theBij's, with coefficients depending only on the curve network control points{Pj(r)}j=0n+1and{Qi(s)}i=0m+1.Firstly we need the following lemma.Lemma 3.1If curves(1)are isoparametric curves for the surface(13), then for anyC11∈R3(26)Cij=Γij+(−1)i+jC11hih1kjk1,i=1,…,m,j=1,…,n, with(27)Γij=∑r=1i−1(−1)r+1(hi−r+hi−r+1)hihi−rhi−r+1Pj(i−r)+(−1)ihih1∑s=1j−1(−1)s(kj−s+kj−s+1)kjkj−skj−s+1Q1(j−s)and∑ℓ=10⋅=0.ProofApplying repeatedly (17), fori=1, we can write (Fig. 3)(28)C1,j=∑s=1j−1(−1)s+1Q1(j−s)τj−s+1′∏k=1s−1τj−k+1τj−k+1′+(−1)j+1C11∏s=1j−1τj−s+1τj−s+1′,where∏ℓ=10⋅=1andj=1,…,n.Then, similarly, from (16), it results (Fig. 3)(29)Ci,j=∑r=1i−1(−1)r+1Pj(i−r)σi−r+1′∏k=1r−1σi−k+1σi−k+1′+(−1)i+1C1j∏r=1i−1σi−r+1σi−r+1′,wherei=1,…,m. Sinceσℓσℓ′=hℓhℓ−1,τℓτℓ′=kℓkℓ−1,then(30)∏r=1i−1σi−r+1σi−r+1′=hih1,∏k=1r−1σi−k+1σi−k+1′=hihi−r+1,∏s=1j−1τj−s+1τj−s+1′=kjk1,∏k=1s−1τj−k+1τj−k+1′=kjkj−s+1.Taking into account (30) and substituting (28) into (29), we get (26) and (27).  □Remark 3.1In case of uniform partitions, i.e.hi=handkj=k, for any i, j, the control points{Cij}in Lemma 3.1 have the following simpler expression:Cij=Γij+(−1)i+jC11,i=1,…,m,j=1,…,n, withΓij=2[∑r=1i−1(−1)r+1Pj(i−r)+(−1)i∑s=1j−1(−1)sQ1(j−s)].Now we are able to give an expression of the surfaceS, depending only on the curve network control points{Pj(r)}j=0n+1and{Qi(s)}i=0m+1.Theorem 3.2Given the B-spline curve network(1), satisfying the compatibility conditions C1. and C2., there is a unique surface(13), having(1)as isoparametric curves. It is independent ofC11choice and it can be written as follows:(31)S(u,v)=Sb(u,v)+SΓ(u,v),whereSb(u,v)=∑j=0n+1(Pj(0)B0j(u,v)+Pj(m)Bm+1,j(u,v))+∑i=1m(Qi(0)Bi0(u,v)+Qi(n)Bi,n+1(u,v)),SΓ(u,v)=∑i=1m∑j=1nΓijBij(u,v),withΓijdefined in(27).ProofFrom Theorem 3.1 and Lemma 3.1, the surface (13) can be written as(32)S(u,v)=∑j=0n+1(Pj(0)B0j(u,v)+Pj(m)Bm+1,j(u,v))+∑i=1m(Qi(0)Bi0(u,v)+Qi(n)Bi,n+1(u,v))+∑i=1m∑j=1nΓijBij(u,v)+C11h1k1∑i=1m∑j=1n(−1)i+jhikjBij(u,v).We recall that, inS21(Tmn), theBij's are linearly dependent, the dependence relationship being (Wang, 2001; Wang and He, 1985):∑i=1m∑j=1n(−1)i+jhikjBij(u,v)=0.Therefore, from (32), we obtain (31), i.e. the interpolating surfaceSis unique and it is independent ofC11choice.  □Now, we want to study the behaviour of theCijgeneration process by (26), with respect to the round-off error growth. Linear growth of error is usually unavoidable, while exponential growth should be avoided, since this leads to unacceptable inaccuracies (Burden and Faires, 2005, Chap. 1, p. 32). In the following theorem, we show that such a growth is linear.Theorem 3.3If the sequence of partitions{U×V}of Ω is A-quasi uniform, i.e. there exists a constantA≥1such that0<maxi,j⁡{hi,kj}/mini,j⁡{hi,kj}≤A, then the round-off error growth is linear.ProofSuppose thePj(r)'s andQi(s)'s are affected by some perturbations (random noise), sayϵPj(r)andϵQi(s), with‖ϵPj(r)‖∞,‖ϵQi(s)‖∞≤ϵ,∀i,j,r,s.Then, from (26) and (27), instead of{Cij}, the following sequence{C‾ij}is generated:(33)C‾ij=Γ‾ij+(−1)i+jC11hih1kjk1,i=1,…,m,j=1,…,n, with(34)Γ‾ij=∑r=1i−1(−1)r+1(hi−r+hi−r+1)hihi−rhi−r+1(Pj(i−r)+ϵPj(i−r))+(−1)ihih1∑s=1j−1(−1)s(kj−s+kj−s+1)kjkj−skj−s+1(Q1(j−s)+ϵQ1(j−s)).Whence, from (18)–(21), (33) and (34), we get‖Cij−C‾ij‖∞=‖Γij−Γ‾ij‖∞=‖∑r=1i−1(−1)r+1(hi−r+hi−r+1)hihi−rhi−r+1ϵPj(i−r)+(−1)ihih1∑s=1j−1(−1)s(kj−s+kj−s+1)kjkj−skj−s+1ϵQ1(j−s)‖∞.Since{U×V}is A-quasi uniform, we get‖Cij−C‾ij‖∞≤ϵ[∑r=1i−12(maxi⁡{hi})(mini⁡{hi})+maxi⁡{hi}mini⁡{hi}∑s=1j−12(maxj⁡{kj})(minj⁡{kj})]≤2ϵ(A(i−1)+A2(j−1))≤A¯(i+j−2)ϵ,withA¯=2A2. Therefore, the round-off error growth is linear.  □We can remark that if the sequence of partitions{U×V}is uniform, i.e.A=1, then Theorem 3.3 holds.In this section we present several applications.In the first one we validate the theoretical results of Theorem 3.2, i.e. we verify that the surface (13) is unique and it is independent ofC11choice.In the second one we propose a comparison with two other methods based on biquadratic tensor product B-splines.Finally, with the third one we want to underline that the rectangular topology does not limit the shape of the curve network. Indeed we will consider a curve net where three-sided and four-sided facet are present.It is easy to verify numerically that the given curve networks in all above applications are isoparametric curves of the generated surfaces.It is well known that the control points of a spline surface usually should give an idea of its shape and its possible symmetries. In (26)–(27) we obtain all control points of the spline surface interpolating the network (1) depending on the curve control points and onC11. Then different choices ofC11lead to different surface control points, some of which do not respect such shape property. However in this application we are not interested in the surface control point shape, because here we just want to underline the uniqueness of the surface (13), interpolating (1). For this reason in the following example we take two differentC11that provide two quite different control point sets, but the same surface interpolating the curve network, as proved in Theorem 3.2.We considerm=18,n=4, the two knot vectorsU={ui}i=−220,V={vj}j=−26, as in (2) and (3), withui=i,i=0,…,18andvj=j,j=0,…,4and the B-spline curve network of type (1) shown in Fig. 4with given control points{Pj(r)}j=05,r=0,…,18and{Qi(s)}i=019,s=0,…,4,Pj(r),Qi(s)∈R3.The same quadratic spline surface (13), interpolating the above curve net and defined by the bivariate B-splines spanningS21(T18,4), is obtained both assumingC11=(1.5,1.5,32)(Fig. 5(a)) and assumingC11=(1,0,30)(Fig. 5(b)), as we have also numerically verified. Moreover, we can note how very different are the surface control points corresponding to the different choices ofC11. In particular, in order to obtain a control net that gives an idea of the surface shape, we chooseC11by minimizing the area of the bilinear surface representing the control net, as done for obtaining the net shown in Fig. 5(a).In this section we compare our method with two other ones, based on classical biquadratic tensor product B-splines: i) the first one provides a tensor product B-spline surface after a minimization process; ii) the second one consists in the construction of a Gordon-typeC1biquadratic B-spline surface (Piegl and Tiller, 1995, Chap. 10).i) We assume the classical biquadratic tensor product B-splines on{U×V}as blending functions for the surface, interpolating the curve network (1).LetRmnbe the rectangular partition ofΩ=[a,b]×[c,d], based on the knots{U×V}, defined in (2), (3), and letS2,21,1(Rmn)be the space of all biquadraticC1tensor product splines, whose restriction to each subrectangle ofRmnis a bivariate polynomial of coordinate degree two. It is well known that dimS2,21,1(Rmn)=(m+2)(n+2)and its B-spline basis is the set{Bij⁎(u,v)=Bi(u|U)⋅Bj(v|V),i=0,…,m+1,j=0,…,n+1}, withBi(u|U)andBj(v|V)defined in Section 2.In this case, we want to construct aC1biquadratic spline surface(35)T(u,v)=(Tx(u,v),Ty(u,v),Tz(u,v))T=∑i=0m+1∑j=0n+1Cij⁎Bij⁎(u,v),interpolating the curve network (1).We can easily verify that results analogous to those of Theorem 3.1 and Lemma 3.1 still hold forT, by substitutingCijwithCij⁎andBij(u,v)withBij⁎(u,v), while the corresponding results of Theorem 3.2 do not hold any more. Indeed, since for tensor product quadratic B-splines(36)T1(u,v)=∑i=1m∑j=1n(−1)i+jhikjBij⁎(u,v)is different from zero, because theBij⁎'s are linearly independent, then we can write(37)T(u,v)=Tb(u,v)+TΓ(u,v)+C11⁎h1k1T1(u,v),withT1defined in (36) andTb(u,v)=∑j=0n+1(Pj(0)B0j⁎(u,v)+Pj(m)Bm+1,j⁎(u,v))+∑i=1m(Qi(0)Bi0⁎(u,v)+Qi(n)Bi,n+1⁎(u,v)),TΓ(u,v)=∑i=1m∑j=1nΓijBij⁎(u,v),whereΓijis defined as in (27).Therefore, the surfaceTis not unique, because it depends on the choice ofC11⁎∈R3, that can be performed imposing several kinds of constraints.Here, we chooseC11⁎such that the surface is “smooth”, i.e. the energy of a thin plate described by the surface is minimal, as reported in literature, for instance in Hadenfeld (1995). Therefore, we can consider an approximation Π of the thin plate energy given byΠ=∫ab∫cd[(Tuu(u,v))2+2(Tuv(u,v))2+(Tvv(u,v))2]dudv,withTuu(u,v)=∂2T(u,v)∂u2,Tuv(u,v)=∂2T(u,v)∂u∂v,Tvv(u,v)=∂2T(u,v)∂v2and chooseC11⁎by minimizing Π with respect toC11⁎. By settingdΠdC11⁎=0, we obtain(38)C11⁎=−h1k1∫ab∫cd[(Tbuu+TΓuu)T1uu+2(Tbuv+TΓuv)T1uv+(Tbvv+TΓvv)T1vv]∫ab∫cd[(T1uu)2+2(T1uv)2+(T1vv)2].It is easy to verify that such a point is the one minimizing Π.Since in each subrectangle[ui,ui+1]×[vj,vj+1],Tis a biquadratic polynomial surface, we can exactly evaluate the integrals appearing in (38), for instance by using a composite tensor-product Gauss–Legendre quadrature formula with3×3nodes.We notice that results similar to the ones of Remark 3.1 and Theorem 3.3 also hold for the surfaceT, given in (37).ii) The second considered approach consists in the construction of a Gordon-typeC1biquadratic B-spline surface, written as a boolean sum (Piegl and Tiller, 1995, Chap. 10)(39)G(u,v)=L1(u,v)+L2(u,v)−TG(u,v),whereL1,L2are two skinned surfaces andTGis a tensor product surface interpolating a given set of points. More precisely, in our case, given the curve network (1), satisfying the compatibility conditions C1. and C2., such surfaces are defined in the following way:•the skinned surface (Piegl and Tiller, 1995, Chap. 10)L1(u,v)=∑i=0m∑j=0n+1CijL1B¯i(u|U¯)⋅Bj(v|V),defined onU¯×V, withU¯the knot vector obtained from U, given in (2), by the averaging technique (Piegl and Tiller, 1995, Chap. 9), interpolates the curvesϕr(v), given in (1), at the nodesur,r=0,…,m, i.e.L1(ur,v)=ϕr(v);similarly, the skinned surfaceL2(u,v)=∑i=0m+1∑j=0nCijL2Bi(u|U)⋅B¯j(v|V¯),defined onU×V¯, withV¯the knot vector obtained from V, given in (3), by the averaging technique, interpolates the curvesψs(u), given in (1), at the nodesvs,s=0,…,n, i.e.L2(u,vs)=ψs(u);the tensor product surfaceTG(u,v)=∑i=0m∑j=0nCijTGB¯i(u|U¯)⋅B¯j(v|V¯),defined onU¯×V¯, interpolates the pointsIrs, given in (6), at the nodes(ur,vs),r=0,…,m,s=0,…,n, i.e.TG(ur,vs)=Irs.Following Piegl and Tiller (1995, Chap. 10), we give a standard B-spline representation of the surfaceG(u,v), given in (39). In order to do it, since the three surfacesL1,L2andTGare defined by B-spline functions belonging to different spline spaces, we need the three surfaces to be compatible in the B-spline sense, i.e. defined on the same knot vectors. Then, by mergingU,U¯andV,V¯, we obtain the two knot vectorsU˜andV˜of length2m+3and2n+3, respectively, and we apply the knot refinement algorithm toL1,L2andTG.Therefore, we get the new control points{C˜ijL1},{C˜ijL2}and{C˜ijTG}of the three surfaces and we can writeG(u,v)=∑i=02m−1∑j=02n−1C˜ijB˜ij(u,v),whereB˜ij(u,v)=B˜i(u|U˜)⋅B˜j(v|V˜), withB˜i(u|U˜)andB˜j(v|V˜)univariate quadratic B-splines defined on the knot partitionsU˜andV˜, respectively, and(40)C˜ij=C˜ijL1+C˜ijL2−C˜ijTG.Now, we propose an example, in order to compare our method with the above ones, from the graphical and numerical points of view.Given a bidirectional curve network, we generate the three surfacesS, defined in (13),T, defined in (35), andG, defined in (39), withm=n=3,Ω=[0,1]×[0,1],U=V={0,0,0,13,23,1,1,1}. In this caseU¯=V¯={0,0,0,12,1,1,1},U˜=V˜={0,0,0,13,12,23,1,1,1}.In Fig. 6we show the curve network and the B-spline surfaceS, whereC11=(1,0,3)has been arbitrarily chosen, while in Fig. 7we display the biquadratic B-spline surfaceTwithC11⁎=(1.11,−0.15,3)obtained by (38) and the Gordon-type biquadratic B-spline surfaceG, where the control points are written as in (40).We can remark that the shapes of the generated surfaces are comparable from the graphical point of view.Moreover, we have also compared them from a numerical point of view. Indeed, let G be a57×57uniform rectangular grid of evaluation points in Ω. Then we get‖S−T‖∞=maxν=x,y,z⁡{max(t1,t2)∈G⁡|Sν(t1,t2)−Tν(t1,t2)|}=3.7879(−2),‖S−G‖∞=maxν=x,y,z⁡{max(t1,t2)∈G⁡|Sν(t1,t2)−Gν(t1,t2)|}=4.4409(−15),‖T−G‖∞=maxν=x,y,z⁡{max(t1,t2)∈G⁡|Tν(t1,t2)−Gν(t1,t2)|}=3.7879(−2).We remark that the surfacesSandGseem to have the same behaviour. However, we have to note that the constructions both ofTand ofGare computationally more expensive than the one of the surfaceS, here proposed. Indeed, the generation ofTrequires a minimization process to evaluateC11⁎in (38), while for the generation ofGwe have to construct three different surfaces by using B-splines belonging to different spline spaces, so that the bivariate resulting surface is not defined on the rectangular grid associated to the knot vectors of the curve network, since knot refinement is required.Here we want to underline that the rectangular topology of the parametric domain Ω does not constrain the curve network to have a 4-sided facet.In the following test we interpolate the B-spline curve network shown in Fig. 8(a), where three-sided and four-sided facet are present.Consideringm=5,n=3,Ω=[0,5]×[0,3]and the two knot vectorsU={ui}i=−27,V={vj}j=−25, as in (2) and (3), withui=i,i=0,…,5andvj=j,j=0,…,3, by means of the B-spline functions inS21(T5,3)we construct the interpolating B-spline surface (13) that is shown in Fig. 8(b), withC11=(1.5,1,1)arbitrarily chosen.Indeed, if in (1) we assumeQi(0)=Q(0)andQi(3)=Q(3),i=0,…,6, then we getψ0(u)=∑i=06Qi(0)Bi(u|U)=Q(0)∑i=06Bi(u|U)=Q(0),ψ3(u)=∑i=06Qi(3)Bi(u|U)=Q(3)∑i=06Bi(u|U)=Q(3)withu∈[0,5]. This means that all curvesϕr(v),r=0,…,5,v∈[0,3]begin atQ(0)and they end atQ(3), i.e. from (6)ϕr(vs)=ψs(ur)=Q(s)withs=0,3andr=0,…,5.In Fig. 9we show another example withm=5,n=4,Ω=[0,5]×[0,4]and the two knot vectorsU={ui}i=−27,V={vj}j=−26, as in (2) and (3) withui=i,i=0,…,5,vj=j,j=0,…,4, andC11=(0.5,0.5,3.5).In this paper we have investigated the problem of interpolating a B-spline curve network, in order to create a surface satisfying such a constraint and defined by blending functions spanning the spaceS21(Tmn). We have proved the surface existence and uniqueness, providing a constructive algorithm for its generation.We have also presented numerical and graphical results and comparisons with tensor product B-spline surfaces.According to Piegl and Tiller (1995, Chap. 10), we have restricted the curves of the network to be nonrational. Theoretically, the construction, discussed in this paper, can be carried out in homogeneous space for rational curves, but it is generally not practical to do so and the three-dimensional results can be unpredictable. If rational curves are involved, it is recommended using constrained approximation techniques to obtain nonrational approximations of the rational curves to within necessary tolerances.Finally, we remark that an interesting open problem could be the construction of B-spline surfaces interpolating a curve network of the following formϕr(v)=∑j=0n+1Pj(r)Bj(v|V)r=0,…,R,ψs(u)=∑i=0m+1Qi(s)Bi(u|U)s=0,…,S,withm≥Randn≥S, i.e. not all surface isoparametric curves, corresponding to the knots in U and V, are curves of the network. In this case we would have free parameters that could be managed, in order to model the interpolating surface, for example by optimization techniques.

@&#CONCLUSIONS@&#
