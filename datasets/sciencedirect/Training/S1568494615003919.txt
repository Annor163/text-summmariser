@&#MAIN-TITLE@&#
A new intelligent hardware implementation based on field programmable gate array for chaotic systems

@&#HIGHLIGHTS@&#
This paper presents a new intelligent hardware implementation for chaotic systems.Intelligent hardware is based on the wavelet decomposition and neural network (NN).Wavelet decomposition was used for extracting feature and NN was used for modeling.Configurations have been simulated and tested under ModelSim Xilinx software.The best configuration has been implemented under the Xilinx Virtex-II Pro chip.

@&#KEYPHRASES@&#
Intelligent hardware implementation,The intelligent system model,MVPDOC,FPGA,

@&#ABSTRACT@&#
In the present study, a new intelligent hardware implementation was developed for chaotic systems by using field programmable gate array (FPGA). The success and superior properties of this new intelligent hardware implementation was shown by applying the Modified Van der Pol–Duffing Oscillator Circuit (MVPDOC). The validation of intelligent system model was tested with both software and hardware. For this purpose, initially the intelligent system model of MVPDOC was obtained by using the wavelet decompositions and Artificial Neural Network (ANN). Then, the intelligent system model obtained has been written in Very High Speed Integrated Circuit Hardware Description Language (VHDL). In the next step, these configurations have been simulated and tested under ModelSim Xilinx software. And finally the best configuration has been implemented under the Xilinx Virtex-II Pro FPGA (XC2V1000). Furthermore, the High Personal Simulation Program with Integrated Circuit Emphasis (HSPICE) simulation of MVPDOC has been carried out under ModelSim Xilinx software for comparison with proposed intelligent system. The results obtained show that the proposed intelligent system simulation has much higher speed in comparison with HSPICE simulation.

@&#INTRODUCTION@&#
The FPGA-based approach uses the advantages of both hardware and software models. FPGA have many consistent advantages such as reliable, flexible, fast response rapid prototyping, adaptation, reduced cost, simplicity of design, and programmable architecture [1–3]. Recently, FPGA are becoming more and more popular and are used in many applications such as system modeling, signal processing, fault-tolerant, and computing feature extraction [4,5]. FPGA has been successfully utilized in motor control and robotic systems [6,7]. Wen et al. [8] introduced analysis of two-phase stepper motor driver based on FPGA. Fobel et al. [9] investigated the feasibility of using hardware acceleration, in the form of FPGAs, to improve the performance of placement algorithms. An integrated hardware and software design method is developed to implement an MPC algorithm on FPGA chip by Yang et al. [10]. FPGA model can be easily reprogrammed and is completely customizable. Users can use hardware description language (HDL) such as VHDL or Verilog, to modify the FPGA model code. VHDL is one of the most widely used techniques for programming hardware [11], and it is the programming language of choice for defining mixed analogy/digital systems. The usage of VHDL provides a number of advantages, such as speedy, high capacity, and redesigns [12,13].Neural networks (NN) have become very important tool for modeling the non-linear input–output characteristics for the devices [14]. The parallel structure of the NN is very important feature for real-time implementations. FPGA-based application is proper for parallel realizations and, is a good solution for the complex problem. In literature, there are various ANN applications on FPGA [15,16]. Cavuslu et al. [17] introduced hardware implementation of ANNs with learning ability on FPGA for dynamic system identification. An approach to implement a general regression neural network (GRNN) based on FPGA is presented by Polat and Yildirim [18]. Wavelet transform is used for the modeling and simulation of Chua's circuit [19]. Switched circuits are modeled based on wavelet decomposition and NN [20]. In [21], Lin and Tsai presented implementation of a wavelet neural network (WNN) with learning ability on FPGA. Fotsin and Woafo [22] designed a controller, which enables both the synchronization of two unidirectional coupled MVPDOC and the estimation of unknown parameters of the drive oscillator by using adaptive control. In another study, chaos synchronization between two chaotic systems consisting of MVPDOC and Chua oscillators has been provided by Fotsin et al. [23].This paper is aimed to develop a new intelligent hardware implementation for chaotic systems. Wavelet decompositions and ANN approach has been used in the present study to develop an intelligent system model. Wavelet decomposition was used for extracting feature and multi layer perceptron (MLP) was used as a modeling method. The intelligent system model for MVPDOC was proposed and applied into FPGA Xilinx Virtex-II Pro FPGA (XC2V1000). The effectiveness of proposed intelligent system model is tested on five different data. For this aim, performance analysis of the HSPICE simulation with proposed intelligent system method is performed for simulation speeds by using ModelSim Xilinx software. The simulation results obtained show speed and superiority of the proposed intelligent system in hardware implementation for chaotic systems.The rest of the paper is organized as follows. Section 2 provides a brief overview on the description of the modified Van der Pol–Duffing oscillator system. Section 3 presents FPGA-based implementation of ANN. Section 4 presents proposed methodology. Section 5 presents results and discussion. Finally, Section 6 also reports the conclusion.King and Gaito developed the MVPDOC, which is a model of an autonomous chaotic system introduced in 1992 [24]. The electrical model of the MVPDOC can be represented by the electrical circuit of Fig. 1. The difference in their characteristics of dynamical behavior lies only on the physical realization of the non-linear resistance (N), and on the selection of parameters. The physical realization of the MVPDOC and physical realization of the non-linear resistance that belongs to the MVPDOC are shown in Fig. 2[23,24]. The differential equations are obtained as follows by using Kirchhoff's laws for the equivalent circuit in Fig. 2(1)x˙=−mx3−∝x−y+μ(2)y˙=x−y−z(3)z˙=βy−γzThe artificial neuron is one of the most important fundamental components of the NN. The neuron computation methods consist of calculating the pondered sum function and updating the state of the neuron with applying the activation function. Neuron computation methods are carried out in three stages. These stages consist of artificial neuron implementation, data representation and sigmoid activation function approximation. The various steps for the practice of the ANN on FPGA are presented in the following paragraphs.The processing of the multiplication and addition of parallel inputs and weights is done in the first stage. And the second stage is the non-linear sigmoid function for the output signal. For the first stage, several types of adders can be used to achieve the weighted sum of states: combinatorial, in series, dynamic, carry look ahead, Manchester, Wallace tree, etc. [25]. Likewise, several ways can be used to realize the multiplication, the mostly used are as following: in serial, serial/parallel, and completely parallel. The multiplier–accumulator (MAC) is carried out by a multiplier related to an adder looped on it in order to acquire an accumulation. Structure of MAC is shown in Fig. 3. In case of using a completely parallel NN, we need 20(7 _ 12) MAC's in the hidden layer and 5(12 _ 1) in the output layer in our study.A signed real numbers are needed for the computation of NN. The fixed-point representation and the floating-point representation are used to define the position of the decimal point. The floating point is more dynamic than the fixed-point. It allows the encoding of a greater number of real values for the same number of bits [26]. The fixed point representation is preferred in various applications. Fixed-point arithmetic is used for encoding the parameters and performing the computations [27]. In this study, a fixed-point representation of 18 bits (9 bits for integer part, and 9 bits for real part) was choosen. This facilitates the MAC (multiplier–accumulator) realization, which is the main element of the NN [28].The direct application of the sigmoid activation function on an FPGA is very difficult. Because, the non-linear sigmoid function has an infinite exponential series. This non-linear sigmoid function can be applied directly using digital techniques. Digital simulation of the activation function requires a large computation time. Hence, usually computationally simplified version of sigmoid function is used. To approximate the sigmoid function with use of FPGA design, there are three practical approaches consisting of direct approximation, lookup table approximation, and piece-wise linear approximation. The direct approximation approach was chosen in this study. Because it consumes less memory space and has better precision. To explain this situation, a comparison was made between the desired function with Matlab and estimated function with VHDL for three approaches. The obtained simulation results are shown in Fig. 4by using the ModelSim Software and Matlab.The above figure indicates that the direct approximation function provides a reasonable approximation for the hardware realization of the sigmoid function. As seen in the figure, the obtained direct approach curve with VHDL shows more fit than the other approaches. Furthermore, in Table 1, synthesis results belonging to the hardware realization on FPGA are given for these three approximation.As can be seen from Table 1 the proposed direct approach is implemented at a lower rate compared to other approaches in terms of hardware resource consumption. Thanks to low hardware resource consumption, the more efficient use of hardware resources has been allowed. The synthesis results given in the table are an indication of the less memory consumption and better precision owing to low hardware resource consumption of the proposed approach.The sigmoid activation functions can be carried out by a series of shift and add operations. Structural diagram of the approximated sigmoid function is shown in Fig. 5. f(yj) is applied by one binary shift, one binary addition, and one multiplication [29].A software and hardware design method is described to implement the intelligent system model on a FPGA chip. For this purpose, initially an intelligent system model developed is written in VHDL. In the next step, these configurations is simulated and tested under ModelSim Xilinx software. Then the best configuration is implemented under the Xilinx Virtex-II Pro FPGA (XC2V1000) chip of Xilinx. The intelligent system model was obtained using the wavelet decomposition and ANN structure. Wavelet decomposition was used in the analysis layer. And, ANN was used in the modeling layer. Each stage of the modeling structure is described in Fig. 6.The block diagram of intelligent system developed is showed in Fig. 7. It consists of two parts, including signal processing and modeling with MLP. The purpose of the signal processing is to manufacture new signals which are used for safer intelligent modeling, from input signals. The aim of the modeling is to indicate the effectiveness of the proposed signal processing method. For these purposes, the wavelet decomposition and NN structures are used. The state variable signals of MVPDCOC are rich in detail and extremely unstable. Two steps are suggested in this paper to describe the type of this waveforms using MATLAB with the wavelet toolbox and the NN toolbox.In this study, first, the input signals of wavelet layer are acquired by numerical solution of the state variables of the MVPDOC. For this purpose, fourth-order Runge–Kutta method is used to solve the systems of differential equations (1), (2) and (3). In addition, a time step of size 0.001 is employed. The parameters are chosen to m=100, α=0.35, β=300 and γ=0.2. The initial conditions of chaotic system are chosen as x1 (0)=0.2, y1 (0)=0.4, z1 (0)=0.5. And then, the input signals of MLP layer are acquired from outputs of wavelet layer consisting of the one approximation coefficient (cA) and three detail coefficients (cDs). Because, the decomposition structure at level 3 is realized. Daubechies-1 wavelet filter is used for discrete wavelet transform phase of intelligent system. For the input signals of wavelet layer, 1500 simulated signals have been generated by using the numerical solve of differential equation systems (1, 2, and 3) in MATLAB Toolbox. A feed-forward ANN architecture is used for identification of the MVPDOC. The input–output data sets for ANN model training are obtained by using the intelligent system developed. The input data to ANN model for MVPDOC are one approximation coefficient (cA3) and three detail coefficients (cD1, cD2, cD3), while the output data are the state variable signal (S) of MVPDOC. The neuron architecture, which is the essential element for application of ANN-–MVPDOC based on VHDL simulation is shown in Fig. 8. The ANN model of MVPDOC is formed by using the software Matlab Ver. 7.9.0.529 (R2009b). For this purpose, the number of hidden layers and the number of neurons within these layers are optimized through the training process. In this study, the mean square error (MSE) performance criterion is used for the training process. A proper computing program is applied for the prediction of the MVPDOC based on the Levenberg–Marquardt (LM) algorithm. To obtain the best performance, the structure of the ANN and training parameters are obtained as shown in Table 2after several different experiments.A database of 4500 patterns is divided into two parts to constitute the intelligent system model of the MVPDOC. A dataset of 3000 patterns are used for the learning phase, and other dataset of 1500 patterns are used for the testing phase. For the implementation of the intelligent system model on the FPGA. Firstly, the biases and weight values of the ANN formed were obtained. Then, these values stored in the read-only memory (ROM). In the same manner, previously the obtained input data from outputs of wavelet layer are stored in random-access memory (RAM). The proposed intelligent system is obtained with use of wavelet decomposition and NN. The input signals of MLP layer are obtained by using the output signals of wavelet layer. This layer is responsible for modeling of chaotic circuit. The flow diagram of hardware realization of proposed methodology is shown in Fig. 9. The design of an integrated circuit can be made at the four abstraction levels. Firstly, suitable VHDL models are improved at behavior level. Next, circuit models are formed at the register transfer level. Then, synthesized VHDL models of the predictor structure are performed and tested with simulation at physical abstraction level. After the latest circuit behavior is validated, the FPGA is synthesized and configured in a private apparatus.The application of online training algorithms, the obtaining of the activation function and the coefficient values of connection weight are important for hardware implementation of NN. For constructing of the NN, the elementary neuron used in this study is created. Neuron inputs, previously written to the block RAM, are read from the RAM memory. And likewise, the weights and biases values, previously written to the block ROM, are read from the ROM memory. For the basic neuron computation, firstly, the multiplication result of the neuron input and weight are obtained. In the next step, a bias value is added to them (adder and multiplier). And then, results of these processes are subjected to a unit that approximates an activation function tansig. Finally, Activation function generates the neuron output by processing the results of these processes.The basic neuron computation scheme in NN based on VHDL is shown in Fig. 10. The architecture of the ANN–MVPDOC model contains one input layer, one output layer, two hidden layers within 7 neurons in the first hidden layer, and 12 for the second hidden layer, Mux_18×4×1, Mux_18×8×1, Mux_18×16×1, and the control unit.

@&#CONCLUSIONS@&#
