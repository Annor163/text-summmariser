@&#MAIN-TITLE@&#
A simple algorithm for computing positively weighted straight skeletons of monotone polygons

@&#HIGHLIGHTS@&#
We study the characteristics of the straight skeleton (SK) of monotone polygons.We devise an algorithm to compute the SK of monotone polygons inO(nlog⁡n)time.This algorithm can also compute the positively weighted SK inO(nlog⁡n)time.

@&#KEYPHRASES@&#
Computational geometry,Weighted straight skeleton,Monotone polygon,Lower envelope,

@&#ABSTRACT@&#
We study the characteristics of straight skeletons of monotone polygonal chains and use them to devise an algorithm for computing positively weighted straight skeletons of monotone polygons. Our algorithm runs inO(nlog⁡n)time andO(n)space, where n denotes the number of vertices of the polygon.

@&#INTRODUCTION@&#
The straight skeletonS(P)of a simple polygonPwas introduced by Aichholzer et al. [1] and is defined by considering the propagation of a so-called wavefront. Each edge ofPemits a wavefront-edge moving at unit speed towards the polygon's interior in a self-parallel manner. During this propagation process, the topology of the wavefront changes due to self-interaction: (i) In an edge event an edge of the wavefront shrinks to zero length and thus vanishes. (ii) A split event happens when a vertex of the wavefront moves into the interior of a non-incident wavefront edge. (iii) For input that is not in general position even more complex interactions such as vertex-events or multi-split-events are possible [2,3]. The straight skeleton is the union of the traces of wavefront vertices over the entire time of the wavefront propagation, see Fig. 1.The weighted version of the straight skeleton, where edges no longer move at unit speed, was first mentioned by Eppstein and Erickson [2] and studied in detail by Biedl et al. [4,5]. Several algorithms are known for constructing unweighted straight skeletons, such as those by Aichholzer et al. [1], Eppstein and Erickson [2], Cheng and Vigneron [6], Huber and Held [3], or Vigneron and Yan [7].Das et al. [8] suggested an algorithm for constructing the (unweighted) straight skeleton of monotone polygons, which they claim runs inO(nlog⁡n)time, where n denotes the number of vertices of the polygon. However, we have simple examples that show that their Lemmas 5, 6, and 7 do not hold for all valid inputs. In particular, their approach hinges upon the assumption that no event introduces a new reflex vertex during the wavefront propagation process, which is clearly incorrect for general input. (See the node marked in green in Fig. 2, on the right-hand side of the lower chain.) Note that a perturbation of the input in order to avoid such a vertex event, as suggested by Das et al. [8], cannot be applied as the straight skeleton changes discontinuously [2].Our algorithm can compute the positively weighted straight skeleton of a monotone polygon inO(nlog⁡n)time andO(n)space, which constitutes a significant improvement over theO(n17/11+ϵ)worst-case time and space complexity of the currently best algorithm for arbitrary simple polygons by Eppstein and Erickson [2]. (The algorithm by Vigneron and Yan [7] achieves an expectedO(n4/3log⁡n)time complexity but is only applicable if no multi-split events occur.) Furthermore, our algorithm does not require complex data structures and is easy to implement.LetCbe a polygonal chain strictly monotone with respect to the x-axis. We constructC′as a chain consisting of the same line segments asCexcept that we extend the first and the last segment to rays to the west (x→−∞) and the east (x→+∞), respectively. Thus,C′partitions the plane into an upper and lower portion. In the following we continue to call such an unbounded chain a polygonal chain.We start by considering the unweighted wavefront propagation ofC′where all edges ofC′emanate a self-parallel wavefront edge towardsy→−∞, which we call the south. (We discuss extensions to positive weights and non-strict monotonicity later on.) We denote the wavefront at time t byWC(t). For the initial wavefront, att=0, the chainsWC(t)andC′are geometrically identical. Again, the first and last segments are rays to infinity. For small values of t and prior to the first event, the edges ofWC(t)are in one-to-one correspondence to the edges ofC′and occur in the same order.We denote byAC(t)=⋃0≤t′≤tWC(t′)the area swept by the wavefront until time t. The roof modelT(C)is a three-dimensional structure: We assign to every point ofAC(∞)the time when it was swept by the wavefront. The resulting structureT(C)=⋃0≤t(WC(t)×{t})is a terrain; it helps us in studying the wavefront over its entire propagation period.Lemma 1The wavefrontWC(t)of a strictly x-monotone chainCis a strictly x-monotone chain for all times t. Furthermore, every change in the topology of the wavefront is witnessed by an edge collapsing to zero length.ProofWe will show this claim by induction: The monotonicity ofWC(t)is unaffected by the southwards propagation at least as long as its topology does not change. Since the initial wavefront is identical toC′, which is strictly x-monotone, it follows thatWC(t)is also strictly x-monotone for sufficiently small t such that no event has happened yet.The topology ofWC(t)can only change as a result of the wavefront interacting with itself, when vertices ofWC(t)become incident to other elements ofWC(t)which they were previously not incident to. Assume that at a certain point in the propagation process a vertex v becomes incident to either a different vertexv′or to an edge e that it was not previously incident to. If prior to the change the wavefront was a strictly monotone polygonal chain, then it follows that the only way that v could have become incident tov′or e is for all segments between v andv′or e to have shrunk to zero length.Segments that shrink to zero length in an event are removed from the wavefront. Removing one or more such collapsed segments of a strictly x-monotone chain and then connecting the remaining pieces together yields a strictly x-monotone chain again.Therefore, each event is witnessed by an edge collapse and it transforms one strictly x-monotone wavefront into another strictly x-monotone wavefront, resulting inWC(t)being strictly x-monotone for all times t.  □Note that we say that each change is witnessed by an edge collapse instead of an edge event. We do this in order to also include non-elementary changes of the wavefront, such as vertex events.Theorem 2The straight skeletonS(C)of a strictly monotone polygonal chainCcan be computed in timeO(nlog⁡n), where n is the number of edges ofC.ProofWe maintain a priority queue to keep track of the edge collapses, which witness all topological changes. The total number of propagating wavefront edges initially is n. We can compute the initial collapse times of all these edges inO(n)time and fill a priority queue in totalO(nlog⁡n)time.We keep fetching the next edge collapse from the priority queue. We have to re-compute the collapse times of the two incident edges and adapt their entries in the priority queue inO(log⁡n)time. Collapse times of other edges are not affected by such a change. Note that the number of wavefront edges decreases with each event because no split events occur.Since all topological changes of the wavefront are witnessed by such edge collapses (Lemma 1), no event is missed. Therefore, we can construct the straight skeletonS(C)in totalO(nlog⁡n)time.  □Lemma 3Each wavefront edge ofWC(t)has area already swept by the wavefront to its immediate north and unswept area to its south.ProofThe part of the plane that has already been swept,AC(t), lies betweenC′andWC(t). SinceWC(t)is strictly x-monotone, each element ofWC(t)has swept area to its north and unswept area to its south.  □Lemma 4LetT(C)be the roof of a strictly monotone chainCthat emanated a wavefront southwards. Then, on any point on the surface ofT(C), the elevation of the roof increases when moving due south.ProofThis holds for each individual face ofT(C)because of Lemma 3. Since the roof is continuous, it also holds when moving between faces.  □To compute the unweighted straight skeleton of a strictly monotone polygonP, which we assume to be monotone with respect to the x-axis, we splitPinto two chains, the northern or top (upper) chainCuand the southern or bottom chainCb. The common western and eastern vertices are denoted byvwandve, respectively. Both chains ofPemanate their wavefronts inwards, that is,Cuemanates its wavefront southwards,Cbnorthwards. We compute the straight skeleton and roof for both chains independently and denote these byS(Cu),S(Cb),T(Cu),T(Cb).Definition 1LetMbe a polygonal chain inR3. We sayMis strictly 3D-monotone with respect to the x-axis if every plane parallel to the yz-plane intersectsMin at most one point.Lemma 5LetMbe a polygonal chain inR3that is strictly 3D-monotone with respect to the x-axis. Then projectingMonto the xy-plane yields a polygonal chainM′that is strictly x-monotone.Let h be an arbitrary line in the xy-plane orthogonal to the x-axis (i.e., parallel to the y-axis). To establish thatM′is x-monotone, we need to show that h intersectsM′in at most one point.Let H be a plane parallel to the yz-plane such that h lies within H. By assumption, H intersectsMin at most one point. Thus, the projection ofMonto the xy-plane intersects h in at most one point.  □Lemma 6The two roofsT(Cu)andT(Cb)intersect in a polygonal chainMinR3that is strictly 3D-monotone with respect to the x-axis. This merge chain starts invwand ends inve.ProofMonotonicity of the merge chainMfollows from Lemma 4: Let Π be an arbitrary plane parallel to the yz-plane that intersectsWCb(0)inpbandWCu(0)inpu. If Π intersects the polygonPthenpbis the southern intersection andputhe northern intersection of Π andP.The intersection of Π withT(Cb)is a piecewise linear terrain function in Π that starts at pointpb, wherez=0, and strictly monotonically increases its z-coordinate as the y-coordinate increases towardsy→+∞. Similarly, the intersection of Π withT(Cu)is a strictly monotonically decreasing function starting aty→−∞and positively infinite z-coordinate and ending at pointpuwherez=0.Two such functions coincide in exactly one point ifpuis north ofpb, as is the case if Π intersects the polygon. If the intersection of Π andPis empty, thenpbis north ofpuand the two terrain functions do not intersect at all. Therefore,Mis strictly 3D-monotone with respect to the x-axis.Verticesvwandveare the start and end points of the chain because they are the common vertices of both chains. Since both roofs consist of planar faces, the intersection consists of line segments.  □In the merge step, we construct a new polyhedronTby stitching together the faces ofT(Cu)betweenCuandMand the faces ofT(Cb)betweenCbandM. Note that this polyhedron is a terrain above the interior ofPand its intersection with the xy-plane is equal toP. Furthermore,Tis piecewise-linear and continuous and each face is incident to one edge ofP. It remains to show that this roofTis equivalent to the straight-skeleton induced roofT(P)ofP.Lemma 7All edges introduced by our merge step, i.e., the edges ofM, are ridges inT, not valleys.Each edge e ofMis incident to one facefuof the northern roof on its north side, and incident to one facefbof the southern roof to its south. By Lemma 4,fuis sloping downwards towards north, andfbis sloping downwards towards south. Thus, e is a ridge.  □Theorem 8LetTbe the roof constructed by mergingT(Cu)andT(Cb)as described. ThenTis the roof induced byS(P).ProofIn the following we will only consider the roof aboveP. Note thatTis the unique lower envelope ofT(Cu)andT(Cb). LetT(P)denote the roof induced byS(P). We need to show thatT(P)also is the lower envelope ofT(Cu)andT(Cb).AsS(P)is a tree, there is a unique pathMS′betweenvwandve. This is exactly the path that separates the union of faces incident toCuand the union of faces incident toCb. Hence,MS′comprises exactly the straight-skeleton arcs that have faces of different chains on either side. From that it follows thatMS′is x-monotone.We build vertical slabs above the edges ofMS′, resulting in the intersectionMSwithT(Cb). All straight-skeleton nodes ofS(P)south ofMS′originate from topological changes withinCb. Hence, their lifted counterparts inT(P)coincide with vertices ofT(Cb). Likewise, every vertex inT(Cb)south ofMShas its counterpart as a node ofS(P)south ofMS′. In other words,T(Cb)andT(P)coincide south ofMS′. With the same argument,T(Cu)andT(P)coincide north ofMS′. In particular,MS=T(Cb)∩T(Cu).Finally, we observe that every path onT(P)fromMSstrictly to the north or the south is descending. On the other hand, a path onT(Cu)to the south is ascending. The same is true for paths onT(Cb)to the north. Hence,T(P)is indeed the lower envelope ofT(Cu)andT(Cb).  □Fig. 2 illustrates the merge by showing a polygonPand its straight skeletonS(P)as well as the straight skeleton of the bottom chainS(Cb).Corollary 9ProjectingTonto the xy-plane yields the straight skeleton of the input polygonP.We construct the intersectionMof the northern and southern roofs. The roofs and intersections that appear in this problem have special properties, and we can, thus, findMinO(nlog⁡n)time.Since in the end we are only interested in the projection ofMonto the xy-plane, we only construct this projectionM′in 2D. The three-dimensional chainMcan be extracted fromM′by raising each vertex by its orthogonal distance to the edges defining its incident faces.LetCuconsist of the edgeseu,1,eu,2,eu,3,…,eu,Nu, in order from west to east, andCbof the edgeseb,1,eb,2,eb,3,…,eb,Nb. Furthermore, letM′consist of vertices and edgesv0=vw,m1,v1,m2,v2,m3,v3,…,vNm−1,mNm,vNm=ve.We constructM′incrementally, starting atvwand adding line segmentsmiuntil we reachve. At each step in the process we keep track of the faces ofS(Cu)andS(Cb)thatmilies in. We denote these faces byfu,iandfb,i. Note thatmilies on the bisector of the input edges definingfu,iandfb,isinceM′traces the intersection of the northern and southern roofs.The initial merge segmentm1starts atv0=vw. The northern and southern faces aref(eu,1)andf(eb,1), wheref(e)denotes the face incident to edge e in the corresponding straight skeleton. The supporting line ofm1will intersect arcs ofS(Cu)andS(Cb)in loci other thanv0. Letv1be the intersection east ofv0that minimizes the length of the edgem1=v0v1¯.Assumev1was the intersection of the supporting line ofm1with an arc a of the northern straight skeletonS(Cu). We set the northern facefu,2to be the other face incident to a. The southern face does not change and thusfb,2=fb,1. Should the intersection have occurred for an arc of the southern face, we setfu,2andfb,2accordingly. The next segment,m2, then lies on the bisector of the input edges definingfu,2andfb,2. This segment starts inv1and we determine the next vertexv3in turn.Since the segments ofmialways lie between the northern and southern chain, and sinceM′is monotone, this process will, eventually, end up inveand we will have completed the merge chain.In order to quickly find the next intersection ofmiwith an arc of eitherS(Cu)andS(Cb)we compute trapezoidations ofS(Cu)andS(Cb)by adding vertical line segments as required.In the incremental step, when we are looking forvi, i.e., the eastern vertex ofmi, we can use the trapezoidations of bothfu,iandfb,ito findvi: We sweep through the cells from west to east until we find one where the supporting line ofmiintersects an arc on a cell's boundary, thus findingvi. During that switch we enter a new face in either the northern or the southern straight skeleton and we start anew. When searching forvi+1in this next step, we no longer need to consider the cells that we already visited.At every stage we intersectmiwith the boundary of the currently active northern and southern cells to either findvior to move forward in one of the trapezoidations. We can charge each such set of intersection tests to the one cell we move out of. The number of total trapezoidation cells is linear in the input size, and, therefore, given a trapezoidation, the complete merge step can be achieved in time linear in the input size.A plane sweep allows to compute the trapezoidation of a planar straight-line graph such asS(Cu)inO(nlog⁡n)time, where n is the size of the input graph. Since the size of the straight skeleton is linear in its input, the total cost of creating both trapezoidations therefore also is inO(nlog⁡n).By Theorem 2, the northern and southern straight skeletons can be found inO(nlog⁡n)time, and they can also be merged inO(nlog⁡n)time. Therefore, the unweighted straight skeleton of a strictly monotone polygon can be computed inO(nlog⁡n)time. Obviously, all data structures require space linear in the input size.We now consider a wavefront propagation where not all edges move at the same speed. Recently Biedl et al. [4] showed that many of the seemingly obvious properties of straight skeletons no longer hold when weights are not unit weights. Therefore, diligent consideration is required when extending existing proofs to weighted straight skeletons.None of the proofs of any statement leading up to and including Theorem 2 used the fact that wavefront edges move at unit speed or any properties which depend on unit speeds.Thus, Theorem 2 still holds and the positively weighted straight skeleton and roof of a polygonal chain can be computed inO(nlog⁡n)time.Since we consider only positive weights, the wavefront of a strictly monotone chain still propagates southwards everywhere. Thus, Lemma 3 and Lemma 4 still hold, and the straight-skeleton induced roof is still a terrain.For strictly monotone polygons the positively weighted straight skeleton can also be constructed in the way described in Sections 3 and 4. Since Lemma 4 still holds, the intersection of the northern and southern roofs again produces a 3D-x-monotone polygonal chain that consists of ridges only. Therefore, Lemmas 6 and 7 also hold for positively weighted input. Biedl et al. [4] showed that for simple polygons and positive weights the straight skeleton is still a tree. Thus, Theorem 8 still applies and therefore also Corollary 9. Hence, our algorithm is also correct for positively weighted straight skeletons.

@&#CONCLUSIONS@&#
