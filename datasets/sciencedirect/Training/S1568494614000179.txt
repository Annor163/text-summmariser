@&#MAIN-TITLE@&#
On the use of multiobjective optimization for solving the Location Areas strategy with different paging procedures in a realistic mobile network

@&#HIGHLIGHTS@&#
We analyze the performance of the Location Areas strategy with four of the most popular paging procedures in a realistic mobile environment.We present our versions of two well-known multiobjective evolutionary algorithms (NSGAII and SPEA2) applied to this mobile network problem.We compare our versions of NSGAII and SPEA2 with other single-objective algorithms published in the literature.We conclude that our approach is very interesting because it allows us to select the configuration of Location Areas and the paging procedure that best meet the real state of the signaling network considering the maximum paging delay pre-established beforehand.

@&#KEYPHRASES@&#
Mobile location management,Location Areas scheme,Paging procedure,Multiobjective evolutionary optimization,Mobile network,

@&#ABSTRACT@&#
In this paper we research the location management, a vital task that controls the subscribers’ mobility in the mobile communication networks. This management task defines a multiobjective optimization problem with two objective functions: minimize the number of location updates and minimize the paging overhead. In this work, the first objective function is described following the Location Areas strategy (because it is widely used in current mobile networks) and the second one is expressed following different paging procedures. Furthermore, the different location management strategies studied in this work are optimized with our versions of two well-known multiobjective evolutionary algorithms (the Non-dominated Sorting Genetic Algorithm II and the Strength Pareto Evolutionary Algorithm 2). This study is a novel contribution of our research which will allow us to select the most suitable configuration of LA-PA (Location Areas with a specific paging procedure) depending on the real state of the signaling network. Experimental results also show that our proposals are very competitive because they outperform the results obtained by other optimization techniques proposed in the literature.

@&#INTRODUCTION@&#
The mobile location management is a vital task in any Public Land Mobile Network (PLMN). This management task is being recently researched with novel metaheuristics due to the exponential growth in the number of mobile subscribers that has occurred in the last decade. The main goal of these research is to reduce the signaling load of the location management strategies that we can find in current mobile networks without affecting their operating mode. Commonly, a PLMN has a hierarchical architecture with three levels [1], see Fig. 1. The first level is known as Mobile Subnet and is constituted by the subscriber terminals (or Mobile Stations, MS). The second level is called Access Subnet. This subnet is designed taking into account that every PLMN must provide telecommunications services to a huge number of mobile subscribers with few radio-electric resources. That is possible because the desired coverage area is divided into several smaller regions (known as cells) among which these resources are distributed and reused. A usual feature of the Access Subnet is the coexistence of cells of different size depending on the traffic density. For it, the size of the cells is reduced to cope with a higher service demand, i.e. the resource reuse factor is higher in those areas with higher traffic demand. Every network cell is served by a Base Station (BS, the network entity that provides radio access to the Mobile Stations), and several BSs are controlled by one Base Station Controller (BSC). Another entity of the Access Subnet is the Base Station System (BSS), which is constituted by a BSC and its BSs. And finally, the third level is the Core Network. This last level includes all the systems and registries related to the network tasks. For example, the systems and registries that control the location management task are the Mobile Switching Centers (MSCs), the Home Location Registries (HLRs), and the Visitor Location Registries (VLRs). Every MSC is connected to several BSSs and manages tasks as mobile location, paging, and interoperability with other networks. The HLR is the registry that stores information of all the subscriber terminals (e.g. identification code, subscriber number, current cell in which it is located, etc.). And the VLR is a specific registry of an MSC in which the subscribers served by this MSC are temporarily registered.This cell-based architecture allows an efficient spectrum usage but it requires of a management system that tracks the subscribers’ movement. This system is the Location Management System, and it controls two main tasks: the subscriber location update (LU) and the paging procedure (PA) [2,3]. The subscriber location update is the procedure whereby the mobile network tracks the subscribers’ movement (in terms of visited cells). This procedure is initiated by the subscriber terminal according to a predefined method, for example: never update, whenever it moves to a new cell (always update), whenever it moves to a new area (Location Areas), etc. On the other hand, the paging procedure is used to know the cell in which a mobile station is located when it has an incoming call. This last procedure is initiated by the mobile network and consists in sending broadcast paging messages around the last known location. The different strategies of paging can be classified into two main groups: simultaneous paging and sequential paging. In the simultaneous paging, as its name suggests, all the network cells that have to be paged are simultaneously polled. And in the sequential paging, the network cells that have to be paged are grouped into paging areas that are polled sequentially (the cells within the same paging area are polled simultaneously). In real-world applications, the paging procedure must be performed within a fixed time constraint, so the maximum number of cycles (and hence the maximum number of paging areas) is commonly restricted to be lower or equal to three [3]. Examples of sequential paging are: sequential paging based on the last updated location, and sequential paging based on the cell dwell time [4]. A detailed explanation of these two procedures is presented in Section 2.2.This work focuses on optimizing the Location Areas (LAs) strategy with our versions (i.e. the standard MOEA with our evolutionary operators specific to optimize the Location Areas Planning Problem) of two well-known MultiObjective Evolutionary Algorithms (MOEAs) in a realistic mobile network and for different paging procedures. The reason why we research the Location Areas strategy is because this method is being widely used in current mobile networks and it presents planning issues similar to those that we will find in next-generation mobile networks (e.g. Tracking Areas in Long Term Evolution). Section 2.1 shows an in-depth description of the Location Areas strategy. There are several works in which different metaheuristics have been applied to optimize the Location Areas Planning Problem (LAPP). P. Gondim argued that the LAPP is an NP-hard combinatorial optimization problem due to the huge size of the objective space. That is why he proposed the use of a Genetic Algorithm (GA) for finding quasi-optimal configurations of Location Areas [5]. P. Demestichas et al. researched the LAPP in different environments with three different metaheuristics (Tabu Search (TS), Simulated Annealing (SA), and Genetic Algorithm) [6]. J. Taheri and A.Y. Zomaya implemented several optimization algorithms (Hopfield Neural Network (HNN) [7], Simulated Annealing [8], Genetic Algorithm [9], and combinations of GA with HNN [10]) to study the LAPP in their test networks. These test networks were also studied in our first work [11] and in [12,13], where S.M. Almeida-Luz et al. proposed the algorithms Differential Evolution (DE) [12] and Scatter Search (SS) [13]. R. Subrata and A.Y. Zomaya in [14] researched the LAPP in a realistic mobile network with a dynamic and individualized Location Areas strategy, which requires to modify the operation mode of the location management system. This dynamic strategy allows to reduce the number of location updates, but not the signaling load because the mobile network must calculate and transmit a personalized configuration of Location Areas whenever a subscriber moves out of its current Location Area. Furthermore, a higher storage capacity is needed because the network has to store a configuration of Location Areas per subscriber. The realistic network studied in [14] was developed by the Stanford University (Stanford University Mobile Activity TRAce or SUMATRA) [15]. This mobile activity trace was also studied by S.M. Almeida-Luz et al. with the algorithms DE [16] and SS [17], and it is the mobile network studied in this work (see Section 5.1).In all of these previous works, the objective functions of the Location Areas Planning Problem were linearly combined with the aim of simplifying the optimization problem. However, the linear aggregation of the objective functions has several important drawbacks (see Section 2.1). That is why we propose the adaptation of two well-known multiobjective optimization algorithms. A multiobjective algorithm allows us to avoid these drawbacks and, at the same time, it provides a set of solutions among which the network operator can select the one that best meets the real state of the signaling network. On the other hand, the main contribution of our work is the study of the Location Areas scheme with several paging procedures. This study will allow us to determine the configuration LAs-PA (Location Areas with a specific paging procedure) that best optimizes the signaling load of the location management system. To the best of the authors’ knowledge, there are no other works in the literature that tackle the Location Areas strategy with multiobjective optimization algorithms considering different paging procedures.A preliminary version of this manuscript was presented at the conferences [11,18]. These previous works have been considerably extended and improved with: the multiobjective study of the Location Areas Planning Problem with different paging procedures (in particular, we have analyzed the blanket polling paging, the 2-cycle sequential paging based on the last updated location, the sequential paging based on the cell dwell time, and the 3-cycle sequential paging based on the last updated location), a multiobjective analysis of the signaling load generated by each location management strategy, the inclusion of other multiobjective optimization algorithm (the Strength Pareto Evolutionary Algorithm 2), an in-depth statistical comparison between the results obtained by our proposals, a rigorous study of the different paging procedures by means of three well-known multiobjective indicators (Hypervolume, Set Coverage, and ϵ-indicator), an analysis of the convexity of the different optimization problems that are addressed in this work, and the use of a recent heuristic (NOMAD: Non-linear Optimization with the Mesh Adaptive Direct search [19]).The paper is organized as follows. Section 2 presents a formal definition of the Location Areas Planning Problem and the different paging procedures studied. Section 3 shows a brief discussion of the main features of a Multiobjective Optimization Problem, and the multiobjective quality indicators that we have used in this paper. Our versions of the Non-dominated Sorting Genetic Algorithm II (NSGAII) and the Strength Pareto Evolutionary Algorithm 2 (SPEA2) are presented in Section 4. Results and comparisons are discussed in Section 5. Finally, Section 6 summarizes our conclusions and future work.The mobile location management is a vital task in any Public Land Mobile Network that allows locating a subscriber terminal and automatically routing an incoming call to it [20]. For it, the mobile location management task consists of two main procedures: the subscriber location update (LU) and the paging (PA). The LU procedure is used to track the subscribers’ movement across the mobile network. In this work, we study the location update procedure based on the Location Areas (LAs) because of it is widely used in current mobile networks. In this location update strategy, every Base Station (BS) periodically broadcast its Location Area Code (LAC, the identification code of its Location Area). This broadcast information is gathered and stored by the mobile stations. And a location update procedure is automatically initiated whenever a subscriber terminal detects a new LAC. On the other hand, the paging procedure is performed to determine the exact cell in which the callee subscribers are located. Due to the fact that the mobile network knows the exact Location Area (LA) in which every subscriber is located, the paging procedure is only performed within the cells of the last updated LA. In this last procedure, the BSs send a broadcast paging message and wait the reply of the callee mobile station.Section 2.1 presents a formal definition of the Location Areas Planning Problem. The different paging procedures studied in this work are discussed in Section 2.2.The mobile location management based on Location Areas (LAs) is one of the most used strategies to automatically track the subscribers’ movement. By definition, a Location Area (LA) is a continuous and non-overlapped group of network cells. The main goal of this strategy is to delimit the procedures of location update (LU) and paging (PA). For it, the mobile station only updates its location (or cell in which it is currently located) when it moves to a new LA, and the paging is only performed in the network cells within the last updated LA [2]. Therefore, the main challenge of the Location Areas Planning Problem is to find the configuration of LAs that minimizes the number of location updates (or Location Update cost, LUcost) and the number of paging messages (or PAging cost, PAcost). Note that these two costs are conflicting: the LUcost is reduced to a minimum when all the network cells belong to the same LA (i.e. when there is no location update, or never update), but this strategy leads to the maximum value of the PAcost because every callee subscriber must be searched in the whole network. And vice versa, the number of paging messages is reduced to a minimum when the network knows the exact cell in which every subscriber is located (i.e. when each network cell belongs to a different LA, or always update), which leads to a maximum value of the LUcost because every mobile station performs a location update whenever it moves to a new cell. So, we can conclude that the Location Areas Planning Problem is a Multiobjective Optimization Problem (MOP) with two objective functions: minimize the number of location updates and minimize the number of paging messages. These two objective functions can be formally expressed as Eqs. (1) and (2) respectively, where γt,iis a binary variable that is equal to 1 when the mobile station i moves to a new LA in the time t, otherwise γt,iis set to 0. [Tini, Tfin] is the time interval during which the location update cost and the paging cost are calculated. Nuseris the number of mobile subscribers. Andct,ijis the paging cost of the subscriber i in the time t when the paging procedure j is used.(1)f1=minLUcost=∑t=TiniTfin∑i=1Nuserγt,i,(2)f2j=minPAcostj=∑t=TiniTfin∑i=1Nuserct,ij.In previous works, these two objective functions were linearly combined into a weighted objective function with the aim of using Single-objective Optimization Algorithms (SOAs), see Eq. (3) whereβ∈Ris a weight coefficient used to assign more priority to one of the two costs. The linear aggregation of the objective functions allows simplifying the optimization problem but it has several drawbacks. Firstly, a very accurate knowledge of the problem is required in order to properly configure the weight coefficient (β). Secondly, the proper value of β might vary in time due to the dynamic behavior of the signaling network load. And thirdly, due to the fact that a single-objective optimization algorithm only provides one solution (the one that best meets its objective function), an independent run of the optimizer should be performed for every change in the value of β. That is why we propose the adaptation of two well-known multiobjective optimization algorithms to study the Location Areas strategy. Furthermore, a multiobjective approach provides us a wide range of solutions (each one related to a specific value of the weight coefficient) among which the network operator could select the one that best adjusts to the real state of the signaling network.(3)fSOAj(β)=β·f1+f2j.The paging procedure (PA) is used to determine the exact cell in which every callee subscriber is located in order to redirect the incoming calls [1]. In a location update strategy based on Location Areas (LAs), the mobile network must only poll the network cells within the last updated Location Area. The different paging procedures can be classified in two groups: simultaneous paging and sequential paging [4].In the simultaneous paging (also known as Blanket Polling, BP-PA) all the cells within the last updated Location Area (LA) are polled simultaneously. This paging procedure is characterized by a minimum paging delay (only one paging cycle), but requires a significant cost in radio bandwidth utilization (because the whole LA must be paged). The paging cost associated with the Blanket Polling procedure (per subscriber i and per unit time t) can be formally represented as:(4)ct,iBP−PA=ρt,i·NA[LAt[i]],where ρt,iis a binary variable that is equal to 1 when the subscriber i has an incoming call in the time t, otherwise this variable is equal to 0. NA is a vector that stores the size of every Location Area (in terms of number of cells). And LAtis a vector that stores the Location Area in which every subscriber is located in the time t.In the sequential paging, some network intelligence is used to group the cells in paging areas, which are polled sequentially. The main goal of the sequential paging is to reduce the signaling load associated with the Blanket Polling procedure. For it, the paging areas are determined by means of the probability of finding the callee subscriber in a specific cell, i.e. the first paging area is composed by the network cells in which the callee subscriber is more likely to be located. The main drawback of the sequential paging is the increment in the time required to find a callee subscriber (known as paging delay). Due to the fact that the time delay is a very important parameter in Public Land Mobile Networks, the sequential paging must be performed within a fixed time constraint (known as maximum paging delay). In real-world implementations, the maximum number of paging cycles (and hence the maximum number of paging areas) is commonly lower or equal to three [3]. Two are the most popular ways to determine the probability of finding a subscriber in a specific cell: based on the last updated location, and based on the cell dwell time.The sequential paging based on the last updated location assumes that the last updated cell and its surroundings constitute the most probable cells to find a mobile station. In this work, this sequential paging is studied with two and three cycles. We denominate these two procedures as Geo-2CPA and Geo-3CPA respectively. The Geo-2CPA is a paging procedure in which the callee subscriber is firstly searched in his/her last updated cell, and if the subscriber is not found in that cell, the remaining cells of the Location Area are polled simultaneously [14]. This paging procedure can be formally expressed as:(5)ct,iGeo−2CPA=ρt,i(αt,i+α¯t,i·NA[LAt[i]]),where αt,iis a binary variable that is equal to 1 when the mobile station i is inside its last updated cell in the time t, otherwise this variable is equal to 0. The other variables or vectors in Eq. (5) have been defined before (see Eq. (4)). And the Geo-3CPA is a paging procedure in which the callee subscriber is successively searched in concentric rings surrounding the last updated location [4]. Fig. 2(a) shows an example of this paging procedure, which can be formally defined as:(6)ct,iGeo−3CPA=ρt,i(αt,i+κt,i·α¯t,i·NC[Ct[i]]+α¯t,i·κ¯t,i·NA[LAt[i]]),where κt,iis a binary variable that is equal to 1 when the mobile station i is located in the neighborhood of its last updated cell (second paging area in Fig. 2(a)) in the time t, otherwise this variable is equal to 0. NC is a vector that stores the number of neighboring cells of every network cell. And Ctis a vector that stores the cell in which every subscriber is located in the time t.On the other hand, the sequential paging based on the cell dwell time (we denominate this procedure Tp-2CPA) uses the average time that a subscriber spends in a specific cell to determine the configuration of paging areas [3]. That is, the first paging area consists of the network cells with a dwell time (T) of the callee subscriber higher or equal to the root mean square of dwell times (Trms) among all cells of the current Location Area. And the remaining cells of the Location Area constitute the second paging area (see Fig. 2(b)). This last paging procedure is formally defined in Eq. (7), where λt,iis a binary variable that is equal to 1 when the subscriber i is inside the first paging area in the time t, otherwise this variable is equal to 0. And μjis a binary variable that is equal to 1 when the cell j belongs to the first paging area, otherwise this variable is equal to 0.(7)ct,iTp−2CPA=ρt,i·λt,i∑j=1NA[LAt[i]]μj+ρt,i·λ¯t,i·NA[LAt[i]].A Multiobjective Optimization Problem can be defined as the optimization problem in which two or more conflicting objective functions must be optimized simultaneously under certain constraints [21], e.g. the Location Areas Planning Problem. In the following, and without loss of generality, we assume a minimization MOP with two objective functions. Due to the fact that the objective functions are conflicting, the main goal of any multiobjective optimizer is to find a wide set of solutions (x*∈Xf, Xfis the set of solutions that meet the problem constraints and it is commonly known as feasible decision space), where each solution is related to a specific trade-off among objectives (i.e. related to a specific value of β in Eq. (3)). These solutions are called non-dominated solutions and their image in the feasible objective space (z*∈Zf) is known as Pareto Front (PF={z*=[f1(x*), f2(x*)]:x*∈Xf}). By definition, a solution x1 is said to dominate another solution x2 (x1≺x2) if and only if∀i∈1,2,zi1≤zi2∧∃i∈1,2:zi1<zi2, wherezi=[z1i=f1(xi),z2i=f2(xi)]is the objective vector of the solution xi(i.e. the vector that stores the value of the objective functions of the solution xi). In the literature, there are several multiobjective indicators to measure the quality of a Pareto Front. Section 3.1 shows the multiobjective indicators that we have used in this work.Multiobjective indicators are an essential tool to know the quality of the Pareto Front obtained by a multiobjective optimization algorithm. Generally, a multiobjective indicator calculates a real number that is related to: the number of solutions of the Pareto Front (PF), the proximity to the true Pareto Front (PFtrue, the perfect Pareto Front) or other set of points, or certain characteristics of the Pareto Front (e.g. diversity and uniformity of solutions) [21]. In this work, we use three of the most popular multiobjective indicators: the Hypervolume (Section 3.1.1), the Set coverage (3.1.2), and the ϵ−indicator (Section 3.1.3).The HypervolumeIH(A)is a unary multiobjective indicator that, in a two-objective MOP, measures the area of the objective space that is dominated by the Pareto Front A, and is bounded by the reference points [21]. Therefore, the IH(A) evaluates the diversity of the Pareto Front and the closeness to the true Pareto Front. So, the set A⊆Zfis said to be better than the set B⊆Zfif IH(A)>IH(B). In the Location Areas Planning Problem, the reference points are calculated by using the extreme configurations of Location Areas, i.e. when all cells belong to the same Location Area([LUcostmin,PAcostmax])and when every cell belongs to a different Location Area([LUcostmax,PAcostmin]). With these minimum and maximum costs, we can obtain the reference points. Fig. 3shows an example of the IH(A) calculation, which can be described mathematically as Eq. (8). In this equation, aiis a solution of the Pareto Front A and areaiis the area of the objective space between aiand one of the reference points (represented by an square in Fig. 3).(8)IH(A)=⋃iareai∣ai∈A.The Set Coverage (SCA,B) is a binary indicator that calculates the proportion of solutions of the Pareto Front B⊆Zfthat are weakly dominated by the solutions of the Pareto Front A⊆Zf, where the solution x1 is said to weakly dominate the solution x2 (x1⪯x2) if and only if∀i∈1,2,zi1≤zi2[21]. Mathematically, this indicator can be expressed as in Equation 9. In this equation, |·| represents the number of solutions in a Pareto Front or the number of solutions that satisfy a given condition. Note that this metric establishes that the set A⊆Zfis better than the set B⊆Zfonly when SC(A, B)>SC(B, A).(9)SC(A,B)=|b∈B;∃a∈A:a⪯b||B|.The ϵ-indicator (Iϵ(A, B)) is a binary multiobjective indicator that evaluates the minimum distance that the set B must be translated in Zfto be weakly dominated by the set A[22]. This metric can be formally expressed as:(10)Iϵ(A,B)=min{ϵ∈R|∀b∈B∃a∈A:a⪯ϵb}where a solution x1 is said to ϵ-dominate another solution x2 (x1⪯ϵx2) when∀i∈1,2,zi1≤ϵ·zi2. This indicator establishes that the Pareto Front A⊆Zfis better than the Pareto Front B⊆Zfwhen Iϵ(A, B)<Iϵ(B, A).A MultiObjective Evolutionary Algorithm (MOEA) is a population-based metaheuristic that iteratively uses the evolutionary operators of biological systems (recombination of parents or crossover, mutation, and natural selection) with the aim of improving a set of feasible solutions [23]. A population-based algorithm means that the optimizer manages one or more populations of individuals, where every individual is an encoded solution of the problem xi. Fig. 4shows the task decomposition of any MOEA. The first task is the initialization and evaluation of the first population of parents, where every parent is a feasible solution of the problem. And then, an iterative method is applied to improve these initial solutions. Firstly, a population of offspring is obtained from the parent population by using the crossover operation (or recombination of parents). The goal of the crossover operation is to find new solutions by mixing the genetic information of the parent population. The crossover operation used in this work is discussed in Section 4.4. Secondly, the mutation operation is applied to change the genetic information of one or more offspring. This evolutionary operator allows us to explore unknown regions of the objective space. Our mutation operations are defined in Section 4.5. Commonly, a chromosomal repair function is applied after these two evolutionary operators. The main reason of this is because the new solutions might be outside the feasible objective space (Zf), and therefore, we need a function to transform invalid solutions into feasible solutions. And finally, the best solutions found so far are stored and selected as the parent population of the next iteration. This last operation is known as natural selection. The procedures of natural selection of the multiobjective algorithms studied in this work are explained in Section 4.6.Algorithm 1Pseudo-code of our version of NSGAII1% Initialize the parent population2Ind ← Initialization (Npop);3% Evaluate the parent population4Ind ← ObjectiveFunctionsEvaluation (Ind);5Ind ← FitnessEvaluation (Ind);6% Main loop7whilestop condition ≠ TRUEdo8% Crossover operation9Off ← Crossover (Ind, PC, Npop);10% Mutation operation11Off ← Mutation(Off, PM);12% Evaluate the offspring13Off ← ObjectiveFunctionsEvaluation(Off);14% Evaluate all the individuals15Ind,Off←FitnessEvaluation (Ind, Off);16% Selection of the fittest individuals17Ind ← NaturalSelection (Ind, Off);18endIn this work we present our versions of two well-known MOEAs: the Non-dominated Sorting Genetic Algorithm II (NSGAII) and the Strength Pareto Evolutionary Algorithm 2 (SPEA2). With the aim of performing a fair comparison, both algorithms use the same evolutionary operators, with the exception of the natural selection because every MOEA has its own definition of this operator. Section 4.1 and Section 4.2 present the algorithms NSGAII and SPEA2 respectively. The individual representation and our process of initialization is presented in Section 4.3. Our evolutionary operators are discussed in Section 4.4 (crossover operation) and in Section 4.5 (mutation operations). And Section 4.6 shows the natural selection used by each MOEA (NSGAII and SPEA2).The Non-dominated Sorting Genetic Algorithm II (NSGAII) is the multiobjective evolutionary algorithm proposed by K. Deb et al. [24]. Basically, the NSGAII is an elitist genetic algorithm with a fitness evaluation procedure that arranges and classifies the solutions according to their quality in the multiobjective context. This procedure is part of the natural selection, which is defined in Section 4.6. The pseudo-code of our version of NSGAII is shown in Algorithm 1, where Npop is the population size, PC is the crossover probability, and PM is the mutation probability. As we can observe, this pseudo-code follows the methodology defined before (see Fig. 4). In this work, we use the same stop condition as in [16,17]: the maximum number of generations.Algorithm 2Pseudo-code of our version of SPEA21% Initialize the parent population2Ind ← Initialization (Npop);3% Evaluate the parent population4Ind ← ObjectiveFunctionsEvaluation (Ind);5% Create the archive6Arch ← EmptyArchive (Narch);7% Main loop8whilestop condition ≠ TRUEdo9% Evaluate all the individuals10Ind,Arch←FitnessEvaluation (Ind, Arch);11% Copy the fittest individuals in the archive12Arch ← NaturalSelection (Ind, Arch);13% Crossover operation14Ind ← Crossover (Arch, PC, Npop);15% Mutation operation16Ind ← Mutation (Ind, PM);17% Evaluate the offspring18Ind ← ObjectiveFunctionsEvaluation (Ind);19endThe Strength Pareto Evolutionary Algorithm 2 (SPEA2) was proposed by E. Zitzler et al. in [25]. The SPEA2 is also an elitist genetic algorithm with a fitness function that arranges the solutions according to their quality in the multiobjective context. Two are the main differences between NSGAII and SPEA2. Firstly, each MOEA uses its own fitness evaluation procedure (see Section 4.6). And secondly, SPEA2 defines an archive of configurable size in which the best solutions found so far are stored. This technique allows controlling separately the sizes of the two populations (the parent population and the offspring population). Algorithm 2 shows the pseudo-code of our version of SPEA2, where Npop is the population size, Narch is the size of the archive, PC is the crossover probability, and PM is the mutation probability. As we can observe, this pseudo-code also follows the methodology represented in Fig. 4.In this work, every individual (an encoded solution of the problem) is a vector that stores the Location Area assigned to each network cell. In order to obtain the first population of parents, every vector is filled with a random pattern of 0s and 1s. And then, this random pattern is used to determine the corresponding configuration of Location Areas. For it, and according to the definition of Location Area (see Section 2.1), every Location Area is composed by a continuous group of cells with the same value of vector. Fig. 5(a) shows an example of individual initialization.The crossover (or recombination of parents) is an evolutionary operator that is performed with probability PC. The main goal of this operator is to generate a new population of Npop individuals (the offspring population). This is done by using the following procedure: for each offspring, four individuals of the parent population are randomly chosen and grouped in pairs. Then, the best individual of each group is cut and recombined with the best individual of the other group. In this work, we have implemented a crossover operation in which the number of crossover points is randomly determined in the range [1, 4]. This operation provides two offspring, but only the best individual will be stored in the offspring population. Fig. 5(b) shows the crossover operation that we have used in this work.The mutation operation is performed with probability PM. In this work, we have defined two mutation operations: gene mutation (GM) and merge-LA mutation (MLAM). In the gene mutation, a boundary cell (a cell that is frontier among two or more Location Areas) is randomly selected, and then, it is merged with its neighboring Location Area of lowest size (in terms of number of network cells). This is shown in Fig. 5(c). And the merge-LA mutation consists in merging the smallest Location Area with its neighboring Location Area of lowest size, see Fig. 5(d). Note that the main goal of our mutation operations is to gradually increase the size of the Location Areas with the aim of exploring regions of the feasible objective space with high paging cost. The reason of this is because the crossover operation (defined in Section 4.4) provides solutions with a lot of Location Areas, i.e. solutions with high location update cost.The natural selection is the procedure whereby the fittest individuals are selected as the parent population of the next generation. For it, every MOEA has its own method to determine the quality of a solution in the multiobjective context. In this section we present the methodology used in NSGAII and SPEA2.The authors of NSGAII define a fitness evaluation procedure with two main functions: the non-dominated sorting and the crowding distance [24]. The non-dominated sorting is used to arrange the solutions in groups (or fronts) according to the dominance concept. In this way, the best solutions will be inside the non-dominated front. In case only some solutions of a front have to be selected, we apply the crowding distance to determine what are the best solutions of that front. The crowding distance is an estimation of the density of solutions. With the aim of having a good spread of the Pareto Front, the solutions with the higher value of the crowding distance will be those that: have the highest and lowest values of the objective functions, or are more separated from their neighboring solutions in the feasible objective space.On the other hand, the authors of SPEA2 propose a fitness function to determine the quality of a solution, see Eq. (11)[25]. This fitness function consists of two terms: the density estimation and the row fitness. The density estimation of a solution ziis an estimation of the number of solutions that surround ziin the feasible objective space (Zf). This term is calculated by using the Euclidean distance between ziand its k-nearest solution in Zf(d(zi, zk)), where k is commonly configured ask=Npop+Narch. And the raw fitness of a solution ziis defined as the sum of “strengths” of its dominating solutions (zj≺zi), where the “strength” of a solution zjis the number of its dominated solutions (S(zj)). In Eq. (11), Pt is the set of solutions stored in the population at the time t, andPtarchis the set of solutions stored in the archive at the time t.(11)ffitnessSPEA2zi=12+d(zi,zk)+∑j∈Pt+Ptarch,zj≺ziS(zj).

@&#CONCLUSIONS@&#
In this work, we study one of the most important tasks in any Public Land Mobile Network: the mobile location management. In previous works from other authors, the mobile location management problem was optimized by using single-objective metaheuristics. For it, the objective functions involved were linearly combined into a single objective function. This allows simplifying the optimization problem, but it has several important drawbacks. That is why we propose the use of multiobjective metaheuristics. A multiobjective optimization algorithm avoids these drawbacks, and it also provides a wide range of solutions among which the network operator could select the one that best adjusts to the network real state. Therefore, the main challenge of our research is to optimize (in a multiobjective manner) the location management tasks without affecting the common operating mode of the Location Management System. In this work, we present our versions (in terms of our evolutionary operators specific to solve the Location Areas Planning Problem) of two well-known multiobjective evolutionary algorithms: the Non-dominated Sorting Genetic Algorithm II (NSGAII), and the Strength Pareto Evolutionary Algorithm 2 (SPEA2). Furthermore, with the aim of analyzing the behavior of our algorithms in a realistic mobile environment, we have studied the real-time mobile activity trace developed by the Stanford University [15]. Experimental results show that our version of NSGAII is better than our version of SPEA2, and that both algorithms outperform other algorithms of other authors [14,16,17,19]. The main contribution of this work is the study of the mobile location management problem with different paging procedures. This study allows us to select the configuration of LAs-PA (Location Areas with a specific paging procedure) that best meets the real state of the signaling network considering the maximum paging delay pre-established by the network operator. A comparative study shows that (for this mobile activity trace) the sequential paging based on the cell dwell time performs better than the sequential paging based on the last updated location when the network operator requires of large Location Areas. Otherwise, the sequential paging based on the last updated location performs better than the sequential paging based on the cell dwell time.In future work, it would be a good challenge to study other multiobjective optimization techniques and compare them with our versions of NSGAII and SPEA2. Furthermore, it would be interesting to study other location management strategies and other mobile activity traces. Finally, the application of other heuristics to address the LAPP is also an interesting future research line. In particular, techniques based on homotopy and charts/atlases could be implemented and evaluated.