@&#MAIN-TITLE@&#
Optimizing ore–waste discrimination and block sequencing through simulated annealing

@&#HIGHLIGHTS@&#
The paper attempts to solve ore–waste discrimination and sequencing problems.The problem is minimization of violations between rates and capacities.Block sequencing is first solved by CPLEX.This solution is submitted to SA module with ore–waste discrimination.The findings show that the approach can be used to generate mining schedules.

@&#KEYPHRASES@&#
Simulated annealing,Goal programming,Block sequencing,Ore–waste discrimination,Mine planning,

@&#ABSTRACT@&#
This paper attempts to solve ore–waste discrimination and block sequencing problems for given capacities through a combination of goal programming (GP) and simulated annealing (SA). The problem is firstly formulated in a goal programming form, which is expressed as the minimization of the violations between the production rates and the installed capacities under access, metal quantity and the required net present value (NPV) constraints. In the model, block sequencing is first solved by CPLEX. The violations from the capacities are allowed under a cost because actual grade and tonnage values of blocks cannot be known. The violations can be accepted to some extent because mines are planned and designed on the basis of simulated/estimated grades. This solution is then submitted to the SA module such that ore–waste discrimination is incorporated into the modeling. A case study was carried out to demonstrate the approach. The findings show that the approach gives rise to the profitability and can be used to generate mining schedules.

@&#INTRODUCTION@&#
Mining industry witnessed significant changes in last three decades. Increasing global competition, the industry deregulation, emerging financial instruments related to mining products, changing shareholder behavior in the business aura, initiating new technologies and high volatility on commodity prices, interest rates and exchange rates force the mining companies to put a specific emphasis on mine planning. The determinations of production rates, ore–waste discrimination and block sequencing are main sub-problems of mine planning. Input of mine planning is generated by geostatistical simulation using sparse drill data. The simulations provide the possible images of mineral deposit. Mines are planned and designed on the basis of these images. In current industry practice, the problems are solved in a sequential way because of large size problem. As a matter of fact, these sub-problems are interdependent and should be solved simultaneously. The sequential approach may undervalue the project due to:-Using a priory marginal cut-off gradesUsing production rates that are not compatible with deposit heterogeneityMine production planning creates a strategic blueprint to make a decision whether mining should proceed or not at the feasibility stage. Mine production planning may be also seen as a guide to mineral exploitation, while offering assistance in operational decision making.Mine planning approaches can be classified into four groups:a.Graph theory and network flows based approachesLerchs and Grosmann (LG) [1] published a seminal paper, which founded the fundamentals of current practice. Picard [2] converted the graph to a network, and then solved the maximum closure in the graph by a maximum flow algorithm based on Ford and Fulkerson algorithm [3]. Faaland et al. [4] recommended another flow algorithm operating directly on the graph for the maximum closure. The model was based on the partitions of slices for orebodies, which are confined within sharply defined geological boundaries. Giannini [5] used the modified Dinic's Maximum Flow algorithm along with efficient data reducing technique. Gamache and Auger [6] analyzed different maximum flow algorithms and some appropriate strategies were proposed. Underwood and Tolwinski [7] and Underwood and Tolwinski [8] showed that an approach combined with graph theoretic and mathematical programming viewpoints had the improved convergence properties and very efficient data structure. Hochbaum and Chen [9] described the maximum flow push-relabel algorithms to solve the problem using dynamic trees, which is efficient in running time. Hochbaum [10] established a link between the LG algorithm and the maximum flow problem in such a way that efficient parametric analysis is allowed. Picard and Smith [11] used a parametric maximum flow analysis to show how to reach the ultimate pit limit (UPL) in order to maximize benefit/cost ratio.Mixed integer programmingAs an alternative to the UPL – nested pits and pushback design, mixed integer programming (MIP) for extraction sequencing has then become a popular technique because of swiftly expanding computer and software technologies [12–15]. MIP is also capable of incorporating capacities and cut-offs into the model. However, significant computational difficulties still arise from the use of MIP. Size reduction in large MIP models is one of main focuses. Djilani and Dowd [16] reduce the problem considering a waste stripping module. Caccetta and Hill [17] used the branch and cut method that simplifies the mixed integer formulation. Boland et al. [18] integrated the slope and capacity constraints in a manner that form the structure of 0-1 knapsack inequalities. Boland et al. [19] used the aggregated mining units to reduce the problem size and then developed an iterative disaggregation technique in such a way as to obtain block size corresponding processing units.Dynamic programmingDynamic programming (DP) has been another method to solve block sequencing. Tolwinski and Underwood [20] developed a DP combining with a strong heuristic. Onur and Dowd [21] used a different DP model through a moving cone algorithm.MetaheuristicsDenby and Schofield [22] introduced genetic algorithm approach for mine production planning. Kumral and Dowd [23] solved mine production scheduling problem by using of multi-objective SA. Ant colonies optimization is another metaheuristics to solve the problem proposed by Sattarvand and Neimann-Delius [24].The objective is find optimal sequence of blocks under capacity and access constraints for given production rates and cut-off grades in such a way as to minimize the deviations from capacities. The problem is formulated in goal programming form. The model is given below.i=1,2,…,TT denotes the number of periodsj=1,2,…,NN denotes the number of blockss=1,2,…,SS denotes the number of simulationsVariablexijBinary variable (if block j is extracted in period i, the variable is 1. Otherwise, it is zero)δsi+andδsi−Violation of the mining capacity for simulation s in period iρsi+andρsi−Violation of the processing capacity for simulation s in period i.ParametersVijmNet present value of block j in period i depending on the classification mLjThe set of blocks that must be extracted prior to the mining of block jnDiscount ratewi−,wi+andψi−,ψi+Penalty weights arising from violations of mining and processing capacities for period i, respectively.dsjOre tonnage of block j in simulation sE(dj)The expected tonnage of block jE(gj)The expected grade of block jMQThe required metal quantityvsjWaste tonnage of block j in simulation sCMining capacityAMineral processing capacityE(Vijm)The expected NPV of block j in period iNPVThe required NPV of projectI(A,C)Investment cost required for capacities A and C(1)Min∑s=1S∑i=1T(wi+δsi++wi−δsi−)−∑s=1S∑i=1T(ψi+ρsi++ψi−ρsi−)Subject toI. Capacity violations. The magnitude of violations depends on penalty weights.(2)∑j=1N(dsj+vsj)xij−C=δsi+−δsi−i=1,…,Tands=1,…,S(3)∑j=1Ndsjxij−A=ρsi+−ρsi−i=1,…,Tands=1,…,SII. Access constraint(4)xil≥xiji=1,…,T;j=1,…,Nandl∈LjIII. Expected minimum NPV(5)∑i=1T∑j=1NE(Vijm)xij≥NPV+I(A,C)IV. Expected metal quantity to be extracted at minimum(6)∑j=1NE(dj)E(gj)xij≥MQi=1,…,TV. Each block is extracted in one period(7)∑i=1Txij≤1j=1,…,NVI. Binary constraint(8)xij∈0,1i=1,…,Tandj=1,…,NVII. Positiveness(9)wi+,wi−andψi+,ψi−≥0i=1,…,Twhere(10)m=1ifthegradeofblockj≥cut-offi0otherwise(11)Vij1=([price×recovery×oretonnageofblockj×gradeofblockj]−[(miningcost+mineralproc.cost)×tonnageofblockj])×(1+n)−i(12)Vij0=−(miningcost×tonnageofblockj)×(1+n)−iThis model has two problems. First, it uses a priory marginal cut-off grade, which may undervalue the project. The second is at Eqs. (5) and (6) because of the use of the expected values, which cause information loss. On the other hand, if full information of the simulations was used, the model would be very conservative. In other words, the required NPV and metal quantity have to be satisfied for each simulation.The SA is a stochastic method for solving combinatorial optimization problems [25–27]. Suppose that a cost function in many variables is to be minimized. A simple and iterative local search could be performed to find the minimum cost. During the local search process, an initial solution is given and then a new solution is selected at random. If the cost of the new solution is lower than that of the current solution, the current solution is replaced by the new solution. Unfortunately, a local search may get stuck at local minima. Let f: X→P be a function to be minimized over X, where X is a finite, but very large set. A neighborhood N(x)⊂X is associated with each element x∈X. Iterations can be defined by first selecting a starting point and then repetitively selecting y∈N(x) and comparing successive values. The SA allows the choice of y to be governed by the following stochastic rule:(13)pxy(R)=min1,e−(Δf/R)R is a parameter known as temperature, pXY(R) is the acceptance probability of a transition at temperature R, As R approaches zero, only improving choices are accepted and the method reduces to a pure local search. For very large values of R all y solutions chosen in the neighborhood are accepted. The solution space tends to increase with regard to the number of variables. Therefore, the required running time to find a good solution will also increase.The SA algorithms have been improved over time by various modifications and/or hybridization. For example, job shop scheduling and incapacitated facility location problems were solved through an evolutionary simulated annealing algorithm and its distributed version because the SA may not guarantee the optimum or a useful near optimum result in an affordable time [28]. Therefore, the SA is either hybridized or parallelized with another heuristic such as the GA. The searching mechanism of the SA was improved by introducing orthogonal arrays into neighborhood functions of the SA such that main effect and interactions were considered for design optimization [29].In mining context, as the number of blocks, simulations and time periods increase, the problem size can be prohibitively difficult to solve. The SA can deal with large optimization problem iteratively. Given that actual values of block grades are not known, the use of a strict cut-off grade for ore–waste discrimination should be discussed. Imagine that marginal cut-off grade is 0.75g/ton. In this case, a block whose grade simulation is 0.74g/ton, will be waste. Likewise, a block, whose grade simulation is 0.76g/ton will be ore. Simulation generates only one possibility. Moreover, cut-off grade itself is also problematic because ore price, processing cost and recovery are uncertain. Therefore, a flexible way for ore–waste discrimination can be more rationale. The SA gives an opportunity to implement a flexible ore–waste discrimination through the transition mechanism. The blocks classified as ore or wastes with high probability are firstly fixed. Other blocks are candidate blocks, whose classification can be changed through transition mechanism. If a block is assessed as ore at least 80% of multiple simulations, it fixed as ore. Similarly, if a block is assessed as waste at least 80% of multiple simulations, it fixed as waste. For example, if a block is assessed as ore at 9 out of 10 simulations, this will flagged as ore in the SA and this block will not be candidate in transition to change the classification. Other blocks are candidates to be changed in the classification.Another possibility is on the treatment of Constraints 5 and 6 by the SA. As can be seen, the expected values are used in these constraints. If simulation values were used instead of the expected values, problem size would increase and would be very conservative in the sense that the schedule generated should be larger than the required NPV or metal quantity for all simulations. The proposed SA provides flexibility in such a way as to be compatible with risk perception of decision maker in comparison to exact methods. These constraints are treated as follows:seth=0dos=1,…,Sif∑i=1T∑j=1NVsijm≥NPV+I(A,C)thenh←h+1enddoifh>=nnconstraintissatified,otherwisesolutionisrejectedwhere nn is minimum allowable pre-defined number of accepted solutions for NPV. Similarly,setl=0dos=1,...,Sif∑j=1NE(dj)E(gj)xij≥MQi=1,...,Tthenl←l+1enddol←l+1constraintissatified,otherwisesolutionisrejectedwhere mm is minimum allowable pre-defined number of accepted solutions for metal quantity. As previously defined, the nn and mm were taken as 80%.Another advantage of the SA is on the treatment of access constraint. In optimization model, the access constraint is the hardest constraint and increases the number of constraints vastly. During the transition mechanism in the SA, block transferability should obey the access constraint. This is guaranteed by creating an upward or downward cone to check accessibility. If a block is transferred from lower period to higher period, a downward cone is created and it is checked whether all blocks within the cone belongs to same or higher periods to be extracted. Likewise, if a block is transferred from higher period to lower period, an upward cone is created and it is checked whether all blocks within the cone belongs to same or lower periods to be extracted. This is much easier than access constraint of exact method models. Moreover, treatment of access constraint in this way allows us to consider variable slopes. In genetic algorithms (GA) and particle swarm optimization (PSO), it is very difficult to adapt updating generation to mine production scheduling in such a way as to formulate access constraint. In other words, the update of generations in the GA and the PSO are very time consuming.Moreover, the SA structure coincides with the problem characteristics in comparison to some other meta-heuristics, which require a population in the GA (or particles in the PSO) comprising the solutions being equal to the number of pre-defined solution pool. However, the SA can be implemented on using only one solution. Given that the size of block sequencing and ore–waste discrimination problems are large, simultaneously working with many solutions will make the problem prohibitively difficult to solve.Finally, the generation of many feasible initial solutions can be also hard. Given large number of blocks, many simulations and multi-period under capacity and access constraints, the generation of initial solutions is difficult in the GA and the PSO. The SA requires only one initial feasible solution. This can be manageable using a mine planning software, which cannot guarantee the optimality. However, for the GA and PSO, there is no clear answer how to generate initial feasible solutions.Transition mechanism is used for generating new solution by perturbation of current solution. In the proposed SA, two types of transition are used. The first transition is about block sequencing and the second is ore–waste discrimination. A random number is generated between {0, 1}. If random number is 0, transition Type 1 is implemented. Otherwise, transition Type 2 is implemented as follows.Randomly selected blocks are transferred to the next or the previous scheduling periods under accessibility and capacity constraint. A random number among {1 to maximum allowable number of blocks to be transferred} is drawn to determine the numbers of blocks transferred, without violating the access constraint. Another random number is then generated among {1, T} to determine the periods to be perturbed. A binary {0,1} random number is also generated to decide the block-transferring direction. The blocks corresponding to the random number are transferred to a neighboring (either the next or the previous) period. The block transition mechanism is simply illustrated on a vertical section through the pit as two dimensionally in Fig. 1(a). Each number denotes the production period of the block in this figure. First of all, the cost value of the schedule on the left side is calculated. In this schedule, the block shown with the arrow is extracted in period 2. Then, the schedule is perturbed by the mechanism described above. The block will be extracted in period 3. Thus, a new schedule is created. The transferability of blocks determined by the transition mechanism is checked by searching upward and downward cones (Fig. 2).When the blocks determined by the transition mechanism are transferred from high period to lower periods:(14)xic≤xizi=1,...,Tandc∈UWjWhen the blocks determined by the transition mechanism are transferred from lower periods to higher periods:(15)xiy≥xizi=1,...,Tandy∈DWjwhere z is the block under consideration, c is the set of blocks within upward cone UWjover block z and y is the set of blocks within downward cone DWjbelow block z.In this type, the classifications of some blocks are changed. A random number is drawn between {1, maximum allowable numbers of blocks to be changed in the classification}. Then, using block index number, the blocks to be changed in classifications are determined. This is illustrated in Fig. 1(b). As can be seen the figure, a block assessed as waste previously is converted to ore and vice versa. This is applied to randomly determined blocks. Thus, a new solution is generated. The most important advantageous of this transition is to allow easier accessibility different region of deposit. When some blocks assessed as ore previously are converted to waste, additional capacity obtained by this conversion in terms of mineral processing capacity can allow going to different region of deposit.There is no clear rule for the selection of acceptance criteria because the success of the algorithm is problem-specific. General acceptance criterion is given as:(16)Acceptancecriterion=pXY(R)=min1,e−∑i=1nobjλiqiwhere(17)qi=costi(Y)−costi(X)/costi(X)Rand∑i=1nobjλi=1where nobj is the number of objectives (there are two objectives as minimizations of violation of mining and mineral processing capacities), X is current solution and Y is new solution. The deviation qiis calculated between the objective values at the current solution X and the new solution Y.Johnson et al. [30] pointed out that the exponentiation,e−Δf/R,takes almost one-third of the running time in their annealing case. Therefore, it is suggested that(1−Δf/R)should be used to approximate the exponential. A better approach, however, is to use a discrete approximation represented by a look-up table. First, note that the ratio between the smallest uphill move and the largest uphill move is no more than 1000. In other words, an acceptance probability 0.995 has R/200 being equal toΔfwhereas an acceptance probability 0.0067 has 5R being equal toΔf:(18)R200≤Δf≤5RFirstly, the approximation is obtained by rounding200Δf/Tdown to the nearest integer to obtain an index value denoted by IndexNumber. Then, a table of pre-computed exponential values is used. Each exponential value has an associated IndexNumber value. If the index exceeds 1000, it is automatically rejected. The idea can easily be adapted to the multi-objective case by using:(19)IndexNumber=200T∑i=1nobjwiΔfi(20)probability=e(−0.005×IndexNumber)Kirkpartick et al. [31] used Rk+1=αRkfor the decrement function, where α is accepted as 0.80–0.95. This decrement form reduces the temperature very rapidly and most of the running time is spent at low temperatures. Lundy and Mees [32] recommended an extreme scheme, where there is only a single iteration at each temperature. As iterations progress, slower cooling takes place. In this research, a more gradual process was used. Every time a move is accepted the system cools according to the functionR←R/(1+βR),and every time a move is rejected the system is heated according to the functionR←/(1−αR).If β=kα the system will need to go through k heating iterations to balance one cooling. If the ratio of rejected moves to accepted moves is greater than k, the system heats up and vice versa. Thus, this schedule theoretically tends to converge to a situation in which the ratio is about k. This was also used as stopping (termination) criterion. k should be governed by the size of the neighborhoods around these minima. Therefore, sufficient number of iterations was allowed around these minima. In order to find a balance between heating the system enough to avoid being prematurely trapped in a local optima and cooling to allow convergence to a good solution, the experiments were conducted on various β and α combinations. Finally, it was decided that β=0.0005 and α=0.000015 would be used. Using these parameters, the cost value decreased slowly at the beginning of the procedure and reached a stable situation so that the benefit of starting from a good solution was not lost. Number of iterations for each temperature is 3000 in this research.The initial value of the temperature is a significant parameter for the performance of the SA algorithm. If it is set too high, the algorithm may spend a long time on poor solutions. If it is set too low, then the algorithm may not perform better than any local improvement heuristic. Initial temperature should be selected in such a way as to keep the advantage of using of a good initial solution. Therefore, the selection of the ratio of the numbers of rejected moves to accepted moves is important. The experiments were conducted on determining the ratio, which produces an initial temperature that yields good solutions in shorter running time in comparison with other initial temperatures. This ratio was taken as 250. It is observed that the advantage of the use of a good initial solution was lost when it took a value above this ratio. Initial temperature was selected as 0.00024 to yield the required ratio.A case study is implemented on a gold deposit to approve the approached proposed. 10 simulations are used as input parameters. The parameter file used in this research is given in Table 1. There are 32,760 blocks. The number of periods to be scheduled is five. The images of four simulations are given in Fig. 3. In this case study, there are 1,638,000 decision variables. Even though this is a medium size mine, the problem size is large. For large mines, problem size can be prohibitively difficult. If exact techniques are used, various aggregation–disaggregation or clustering techniques to be researches to reduce size of problem. In this paper, main reason behind using the SA is to deal with large size mine planning problem to some extent.First of all, a cut-off grade is calculated and this is then applied to all blocks, which are identified as ore or waste. Using price, mining and mineral processing costs, recovery and block tonnages, block economic values are calculated for ore blocks. For waste blocks, the mining cost is incurred. The blocks characterized in economic values are used as an input in the goal programming model given through Equations 1-12 and an initial solution is generated. This solution does not consider ore–waste discrimination. There are also some shortcomings in this model. In some constraints of the model, the expected ore tonnages and grades are used to avoid from risk-averse conservative form. Furthermore, a priory cut-off grades are used. It takes away from the optimality because, as mentioned earlier, it is very difficult to set a cut-off grade due to uncertainties and assumptions. Therefore, this solution can be enhanced and is submitted to SA module. Unlike the solution approach based on the goal programming, the SA model can utilize full information of simulations. Moreover, instead of the fixed block classification, the changes in the classification of some blocks are allowed. This may provide an opportunity to easier access to high-grade areas by overcoming capacity requirements.Production rates are given for each simulation in Fig. 4and Fig. 5. As can be seen, production rates fluctuate around the installed capacities. The magnitude of these fluctuations depends on penalty values. The violations above capacities are less than the violations below capacities. This emerges from using more weight for overcapacity, which is unfeasible. As penalty values increase, the fluctuations decrease. The penalty values also reflect balance between mining and mineral processing rates in such a way as to reduce to one objective. In this research, processing rates have more weights because it is more important.In terms of metal quantities to be produced, they are in descending order (Fig. 6). This results from discounting, which forces valuable blocks to be extracted in earlier periods. Metal quantity to be produced is between 212.8 and 222.3tons gold at the end of project depending upon the simulations. As can be seen Fig. 7, NPV follows similar pattern to metal quantities. The project NPV is between $4,735,318,303 and $5,124,703,708 depending upon the simulations. Because of high gold prices, the project is very profitable.Cross-sections of initial solution resulted from goal programming and final schedule obtained by the SA are given in Fig. 8, respectively. In this figure, each production period is represented with a color. Flexible ore–waste discrimination allows reaching easier to rich areas of the deposit through more configurations in such a way as that the NPV of venture increases. Initial schedule was obtained approximately 20h. Final schedule through the SA was obtained in approximately 3.5h. Given size of the problem, these are acceptable computational time.

@&#CONCLUSIONS@&#
This paper presents a combined approach of goal programming and the SA procedures to solve ore–waste discrimination and block sequencing under access, capacity and the required monetary constraints. The problem is first formulated as a minimization of the violations of mining and mineral processing capacities. The reason why the violations are allowed is that ore and waste quantities and grades cannot be known precisely because mines are planned on the basis of simulations/estimations generated by sparse data. Fundamental motivation for the use of the SA is to allow more flexible optimization and to consider grade uncertainty in ore–waste discrimination. Initial schedule is generated by using CPLEX. This schedule is submitted to the SA. If all simulations were used in the goal programming model, the generated schedule would be very conservative in sense of risk averse. However, in contemporary finance, risk is thought as a potential and the SA model takes advantage of this potential. Therefore, the expected NPV and metal quantity constraints are modified in a manner that if 80% of solutions generated from simulations satisfy the constraints, they are accepted. The SA solved block sequencing and ore–waste discrimination problems simultaneously. The case study showed that the SA could improve the schedule generated previously in terms of the profitability and capacity satisfaction. Future research can orient to three aspects: (i) the adaptation of new SA cooling mechanisms, (ii) the incorporation stochastic optimization techniques into the modeling process and (iii) dealing with size reduction.