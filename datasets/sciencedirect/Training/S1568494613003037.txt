@&#MAIN-TITLE@&#
Semi-supervised change detection using modified self-organizing feature map neural network

@&#HIGHLIGHTS@&#
A semi-supervised change detection method is proposed using modified self-organizing feature map.Training of the self-organizing feature map is initially performed using a few labeled patterns.The membership of each unlabeled pattern is determined using the concept of fuzzy set theory.A heuristic method has been suggested to select some patterns from the unlabeled ones for training.Iterative learning is carried out using the labeled and selected unlabeled patterns.

@&#KEYPHRASES@&#
Semi-supervised learning,Change detection,Fuzzy set,Self-organizing feature map,

@&#ABSTRACT@&#
In the present article, semi-supervised learning is integrated with an unsupervised context-sensitive change detection technique based on modified self-organizing feature map (MSOFM) network. In the proposed methodology, training of the MSOFM network is initially performed using only a few labeled patterns. Thereafter, the membership values, in both the classes, for each unlabeled pattern are determined using the concept of fuzzy set theory. The soft class label for each of the unlabeled patterns is then estimated using the membership values of its K nearest neighbors. Here, training of the network using the unlabeled patterns along with a few labeled patterns is carried out iteratively. A heuristic method has been suggested to select some patterns from the unlabeled ones for training. To check the effectiveness of the proposed methodology, experiments are conducted on three multi-temporal and multi-spectral data sets. Performance of the proposed work is compared with that of two unsupervised techniques, a supervised technique and two semi-supervised techniques. Results are also statistically validated using paired t-test. The proposed method produced promising results.

@&#INTRODUCTION@&#
Change detection is a process of detecting temporal effects of multi-temporal images [1–3]. This process is used for finding out changes in a land cover over time by analyzing remotely sensed images of a geographical area captured at different time instants. The changes can occur due to natural hazards (e.g., disaster, earthquake), urban growth, deforestation. Change detection is one of the most challenging tasks in the field of pattern recognition and machine learning [4]. There are various applications of change detection like land use change analysis [5,6], monitoring urban growth [7,8], burned area identification [9], etc.Change detection can be viewed as an image segmentation problem, where two groups of pixels are to be formed, one for the changed class and the other for the unchanged one. Process of change detection can be broadly classified into two categories: supervised [10–12] and unsupervised [13–21]. Supervised techniques have certain advantages like they can explicitly recognize the kinds of changes occurred and are robust to different atmospheric and light conditions of acquisition dates. Various methodologies exist in literature to carry out supervised change detection e.g., post classification method [1,11,22], direct multi-date classification method [1], kernel based method [12]. Besides several advantages, applicability of supervised methods in change detection is poor due to mandatory requirement of sufficient amount of ground truth information which is expensive, hard and monotonous. On the contrary, in unsupervised approach [13–20], there is no need of additional information like ground truth. Due to depletion of labeled patterns, unsupervised techniques seem to be compulsory for change detection. Generally, three consecutive steps are followed for unsupervised change detection. These are image preprocessing, image comparison and image analysis [1]. Images of the same geographical area captured at different time instants constitute the input of the change detection process. In the preprocessing step, these images are made compatible by operations like radiometric and geometric corrections, co-registration and noise reduction [1]. After preprocessing, image comparison is carried out, pixel by pixel, to generate a difference image (DI) which is used for change detection. There are various methods for generating DI like univariate image differencing, change vector analysis (CVA), image ratioing [1]. In the present work, CVA technique [1] is used for creation of DI. Unsupervised change detection process can be of two types: context insensitive [1,15] and context sensitive [13,14,16–19]. Histogram thresholding [1,15] is the simplest unsupervised context insensitive change detection method which has the main disadvantage of not considering spatial correlation between neighborhood pixels in the decision process. To overcome this difficulty, context sensitive methods using Markov random field (MRF) [16,17] are developed. These techniques also suffer from certain difficulties like requirement of the selection of proper model for statistical distribution of changed and unchanged class pixels. On the contrary, change detection methodologies based on neural networks are free from such limitations. Work along this direction is already being carried out employing neural networks for change detection, both using supervised and unsupervised learning [13,14,18,20].In change detection, a situation may occur where the categorical information of a few labeled patterns can be collected easily by the experts. If the number of these labeled patterns is less, then this information may not be sufficient for developing supervised methods. In such a scenario, knowledge of labeled patterns, though not much, may be completely unutilized if unsupervised approach is considered. Under this circumstance, semi-supervised approach [23–25] can be opted instead of unsupervised or supervised ones. Semi-supervision uses a small amount of labeled patterns with abundant unlabeled ones for learning, and integrates the merits of both supervised and unsupervised strategies to make full utilization of collected patterns [23,24]. Semi-supervision has been used successfully for improving the performance of clustering and classification [26–34] when insufficient amount of labeled data are present. Semi-supervised learning using neural networks is explored in various domains [35–38]. Though research is carried out using multilayer perceptron (MLP) for change detection [39] in semi-supervised classification framework, there is no such application of neural network using semi-supervised clustering approach for change detection problem. This motivated us to pursue the present study using neural networks to improve the performance of change detection process.In one of the earlier works, the self-organizing feature map (SOFM) network [40,41] was modified (named as, modified self-organizing feature map (MSOFM) [42]) and was used for unsupervised context sensitive change detection [14]. In the proposed methodology semi-supervised learning is incorporated within the said MSOFM framework [14]. The network architecture considered is similar to the one used in [14]. The network consists of two layers: input and output. For each feature of the input pattern, there is a neuron in the input layer. The output layer is two dimensional and each (i, j)th neuron in the output layer represents the (i, j)th pixel position in the difference image (DI). Here, we have a few labeled patterns. So, some neurons in the output layer correspond to these labeled patterns (labeled neuron); others corresponds to unlabeled patterns (unlabeled neurons). There is a weighted connection between each neuron in the output layer and all the neurons in the input layer. In the present work, connection weights are initialized differently for labeled and unlabeled neurons. The weight vectors for unlabeled neurons are initialized randomly in [0, 1]. The weight vectors for labeled neurons are initialized by the normalized feature values of the corresponding labeled patterns (to introduce the effect of supervision). To normalize the feature values of the input patterns between [0, 1], a mapping function (Eq. (2)) is used.At the onset, the network is learned by the labeled patterns only. Then, the unlabeled patterns are passed through the network and the membership values of the unlabeled patterns for the changed and the unchanged classes are calculated (from the trained network) depending on some pre-fixed threshold value. If the similarity measure between an unlabeled pattern and the weight vector of the corresponding neuron in the output layer is greater than the said threshold, then the membership value of that unlabeled pattern in the changed class will be more than that of the unchanged class; and vice versa. A method is also suggested for computing the membership values of unlabeled patterns for both the classes. In [14] a correlation based and an energy based techniques were used for selecting suitable thresholds. In the proposed methodology, the threshold selection process is the same as it was used in [14]. Thereafter, soft class label (or, target value) of each of the unlabeled patterns is updated using the membership values of K nearest neighbors [39] of the corresponding pattern. After each training step, the unlabeled patterns, which are more likely to belong to the changed class, are selected and the MSOFM network is re-iterated by considering the labeled patterns along with these selected unlabeled patterns. Thus, learning of the MSOFM network and modification of soft class labels for the unlabeled patterns are continued iteratively until a given convergence criterion is satisfied or the number of training steps exceeds a certain value.To assess the effectiveness of the proposed method, experiments are carried out on three multi-temporal and multi-spectral data sets of Mexico area, Island of Sardinia and the southern part of the Peloponnesian Peninsula, Greece and the results are compared with those of the existing unsupervised method based on MSOFM [14], a robust fuzzy clustering technique [43], a supervised method based on MLP [41], a semi-supervised technique based on MLP [39] and constrained k-means algorithm [44] (a semi-supervised clustering algorithm).The rest of the article is organized into five sections. Section 2 describes the methodology of the proposed semi-supervised change detection technique. Description of the data sets used to carry out the investigation is provided in Section 3. In Section 4, implementation details and experimental results are discussed. Conclusion is drawn in Section 5. The performance measures used for investigation are concisely explained in Appendix A.In some of our earlier works, we have developed different change detection techniques [13,14,19,43] in unsupervised framework. In [13,14], context-sensitive change detection techniques were proposed using unsupervised learning based neural networks i.e. Hopfield-type neural network and modified self-organizing map neural network. Various fuzzy clustering techniques (i.e. fuzzy c-means and Gustafson–Kessel clustering) are used for unsupervised change detection in [19]. These fuzzy clustering based change detection techniques are further improved by incorporating local information in [43]. We have also developed a semi-supervised change detection technique in [39] by modifying the learning of supervised neural network (i.e., multilayer perceptron) in such a way that it can utilize the abundant unlabeled patterns along with a few labeled patterns during learning. As already mentioned, no research work is carried out in this direction using unsupervised neural network when a few labeled patterns are available. In the present work, modified self-organizing map neural network is integrated with the concept of semi-supervised learning for better change detection. Detailed description of the proposed change detection technique is presented in the subsequent sections.The difference image D={lmn, 1≤m≤p, 1≤n≤q} is produced by the CVA technique [1] from two co-registered and radiometrically corrected γ-spectral band images Y1 and Y2, each of size p×q, of the same geographical area captured at different times T1 and T2. Here, gray value of the difference image D at spatial position (m, n), denoted as lmn, is calculated as,(1)lmn=(int)∑α=1γ(lmnα(Y1)−lmnα(Y2))2,wherelmnα(Y1)andlmnα(Y2)are the gray values of the pixels at the spatial position (m, n) in the αth band of the images Y1 and Y2, respectively.From the difference image D, the input pattern for a particular pixel position is generated by considering the gray value of the said pixel as well as those of its neighboring ones to exploit (spatial) contextual information from neighbors. In the present methodology, 2nd order neighborhood system is used. Here, each input pattern consists of nine features, one gray value of its own and eight gray values from its neighbors.The y-dimensional input pattern of the (m, n)th pixel position of DI is denoted byXmn→=[xmn,1,xmn,2,…,xmn,y]. Here, a mapping algorithm is used to normalize the feature values of the input pattern in [0, 1]. The ith feature value (i=1, 2, …y) of the y-dimensional input pattern,Xmn→, is normalized as(2)xmn,i=xmn,i−cmincmax−cmin,where cmaxand cmin, respectively, are the maximum and the minimum gray values of DI.The self-organizing feature map network (SOFM) [40,41] uses the concept of competitive learning. It has two layers: input and output. The output layer is two dimensional (see Fig. 1). There is a weighted connection between each neuron in the output layer and all the neurons of the input layer. The y-dimensional weight vector between the (m, n)th neuron of the output layer and all the input neurons is represented byWmn→=[wmn,1,wmn,2,…,wmn,y]. The neurons in the output layer are competing among themselves. The SOFM is learned iteratively and it gradually generates topological map of the input patterns. The SOFM follows three steps during learning: compete, co-operation and update weight (learn). In competition step, similarity measure between a given input patternXmn→and the weight vector of all the output neurons is computed. Then, the (i, j)th output neuron is selected as winner where the similarity measure is maximum. Let, hkl,ij(itr) be the topological neighborhood function between the wining neuron (i, j) and its topological neighborhood (k, l) at iteration number itr and this function shrinks after each iteration. It can be of any form like Gaussian, rectangular, etc. The weight updating for (k, l)th output neuron is performed as(3)Wkl→(itr+1)=Wkl→(itr)+hkl,ij(itr)η(itr)(Xmn→−Wkl→(itr)),where η(itr) denotes the learning rate in the itrth iteration and it decreases with the increase of itr. The weight vectors of the wining neuron and its neighborhood neurons gradually move towards the input pattern under consideration.As mentioned earlier, the modified SOFM (MSOFM) network [42] was used for unsupervised context sensitive change detection [14]. In the present work, a similar MSOFM network architecture is used. Like SOFM, in the MSOFM network [14,42] the output layer is two dimensional and there is a representative neuron corresponding to each pixel position of DI. The number of neurons in the input layer is the same as the number of features of the input pattern. There is also a weighted connection between each neuron in the output layer and all the neurons in the input layer.In [14], the input pattern for every pixel position in DI is passed through the MSOFM network. Thereafter, the similarity measure between the given input patternXmn→and the weight vectorWmn→of the (m, n)th output neuron, is computed. If the similarity is more than a pre-fixed threshold then the concerned output neuron is the winner and the weight updating is performed for that neuron and its neighbors, using Eq. (3). In the SOFM network, the same input pattern is applied to all the output neurons for selecting the winning neuron. On the other hand, in the MSOFM network, different inputs are given to different output neurons and the selection of the winner (neuron) is done depending on a pre-defined threshold value. A correlation based and an energy based methods are also suggested to select suitable thresholds.Semi-supervised learning of the MSOFM network requires a small amount of labeled patterns. The labeled patterns can be collected in many ways. In the present technique, for experimental purpose, labeled patterns are picked up from the ground truth for both the classes with equal percentage.After collecting the labeled patterns, weight initializations for the labeled and the unlabeled neurons are done differently. If the class label of the (m, n)th pixel of DI is known, then the weight vector for the (m, n)th output neuron, denoted asWmn→, is initialized with the normalized feature values of the corresponding labeled pattern; whereas weight vector for others is initialized randomly between [0, 1].During training, the input patternsXmn→are passed to the MSOFM network consecutively. Each time, the dot product, d(m, n), betweenXmn→andWmn→is calculated as,(4)d(m,n)=Xmn→·Wmn→=∑k=1yxmn,k·wmn,k.At the beginning of the training phase, the connection weights of the network are updated in the following manner using the labeled patterns only. If the class label of the (m, n)th pixel position is known, then the weight vectorWij→for all neighboring unlabeled neurons (defined by hij,mn(·)) of the (m, n)th output neuron is updated using Eq. (3). The weight vector is gradually shifted towards the given input pattern through updating. This is done because the input patterns of the same class have similar feature values and the neighboring pixels of a given input pattern have high probability to belong to the same class as that of the input pattern. In the proposed method, the weight updating process, using labeled patterns, brings their neighboring unlabeled pixels to their respective classes, if they originally belong to the same class. On the other hand, the weight vector for labeled neuron is initialized with its own feature values and is not updated during entire learning process; otherwise during learning the weight vector might move closer to the class in which the labeled pattern does not originally belong to. Learning using labeled patterns is continued iteratively until convergence. To check convergence, the output of the MSOFM network, O at each iteration ‘itr’ is calculated as,(5)O=∑d(m,n)≥θd(m,n),where θ is a pre-defined threshold value. The network converges for any value of θ (proof is given in [42]). In the present work, similar threshold selection techniques (correlation maximization criterion and energy based criterion) are used as it was used in the existing unsupervised change detection method [14]. Weight updating is preformed until the difference between output O in two consecutive iterations is less than δ, where δ is a small positive quantity. The value of θ lies within [0, 1]. The components of the weight vectorWmn→are normalized in the following way so that the dot product d(m, n) lies in [0, 1]:(6)wmn,k=wmn,k∑k=1ywmn,k.After each epoch, the learning rate η(itr) and the size of the topological neighborhood h(itr) is decreased.After each training step, the unlabeled patterns are presented to the network and their soft class labels are calculated using the concept of fuzzy set theory. Let us consider that there exists two fuzzy sets: one for the changed class and the other for the unchanged one. The membership values of each unlabeled pattern for both the classes can be determined. For each (i, j)th unlabeled pattern, d(i, j) is computed by Eq. (4); if, d(i, j)≥θ, then the (i, j)th pattern is more likely to belong to the changed class than the unchanged one; otherwise it is from the unchanged class. Let, μ(i, j)=[μ1(i, j), μ2(i, j)] be the membership value of the (i, j)th unlabeled pattern, where μ1(i, j) and μ2(i, j) are the membership values of the (i, j)th pattern in the unchanged class and the changed class, respectively. These values can be calculated as,(7)[μ1(i,j),μ2(i,j)]=[min(d(i,j),1−d(i,j)),max(d(i,j),1−d(i,j))],ifd(i,j)≥θ[max(d(i,j),1−d(i,j)),min(d(i,j),1−d(i,j))],otherwise.After that, the target value (or, soft class label) of the unlabeled pattern is updated in the same way using K-nearest neighbor technique as it was done in [39]. For each unlabeled pattern, its K nearest neighbors are determined. To search for the K number of nearest neighbors, instead of using all the patterns, we considered only those which lie within a window around that unlabeled pattern. This is done to reduce time requirement for searching. Let, M be the set of K nearest neighbors of the (i, j)th unlabeled pattern. Now, the target value t(i, j)=[t1(i, j), t2(i, j)] of the (i, j)th unlabeled pattern is estimated as,(8)t(i,j)=∑Xsl→∈Mμ1(s,l)K,∑Xsl→∈Mμ2(s,l)K.It is to be noted that for the labeled patterns, both of t(i, j) and μ(i, j) are either [1, 0] or [0, 1].Initially, learning considers only labeled patterns; and the soft class labels of the unlabeled patterns are obtained by Eqs. (7) and (8). Then, the unlabeled patterns for which the estimated target value in changed class is greater than unchanged class, are selected for training of the MSOFM network again. The process of training the MSOFM using the labeled patterns and the selected unlabeled patterns continue until convergence. Training of the network and re-estimation of soft class labels of the unlabeled patterns using Eqs. (7) and (8) are continued iteratively until the network is stabilized. The stability of network (for DI of size p×q) is checked by computing the sum of square error, ξ, after each training step as:(9)ξ=∑i=1p∑j=1q∑k=12(μk(i,j)−tk(i,j))2.Learning is continued until the difference of error ξ between two consecutive training steps is less than ϵ (where ϵ is a small positive quantity) or the number of training steps exceeds a certain number. After convergence, the hard class labels are assigned to the unlabeled patterns depending on their target values. The algorithmic representation of the proposed methodology is given in Table 1.To evaluate the effectiveness of the proposed methodology, experiments are carried out on three multi-temporal remotely sensed images corresponding to the geographical areas of Mexico, Sardinia Island of Italy and Greece.This data set consists of two multi-spectral images of the Landsat-7 satellite captured by the Landsat Enhanced Thematic Mapper Plus (ETM+) sensor over an area of Mexico taken on 18th April 2000 and 20th May 2002. From the entire available Landsat scene, a section of 512×512 pixels has been selected as test site. A fire destroyed a large portion of the vegetation in the considered region between two acquisition dates. Initially, we performed some trials in order to determine the most effective spectral bands for detecting the burnt area in the considered data set. On the basis of the results of these trials, band 4 is observed to be more effective to locate the burnt area. Fig. 2(a) and (b) shows the band 4 images corresponding to April 2000 and May 2002, respectively. The difference image (Fig. 2(c)) created by spectral band 4 using CVA technique is only used for further analysis. For evaluation of the proposed approach, a reference map (Fig. 2(d)) was used. The reference map contains 25,599 changed and 236,545 unchanged pixels.Two multi-spectral images are acquired by the Landsat Thematic Mapper (TM) sensor of the Landsat-5 satellite in September 1995 and July 1996. The test site of 412×300 pixels of a scene includes the lake Mulargia on the Island of Sardinia (Italy). The water level of the lake increased (see lower center part of the image) between two acquisition dates. Fig. 3(a) and (b) , respectively, shows the 1995 and 1996 images of band 4. We applied CVA technique on spectral bands 1, 2, 4, and 5 of the two multi-temporal images to generate the difference image (Fig. 3(c)), as elementary experiments show that the above channels contain useful information on the changes of water body. In the reference map (Fig. 3(d)), 7480 changed and 116,120 unchanged pixels were identified.This data set is composed two images captured by a passive multi-spectral scanner installed on a satellite (i.e., the Wide Field Sensor (WiFS) mounted on board the IRS-P3 satellite) on the southern part of the Peloponnesian Peninsula, Greece, in April 1998 and September 1998. From the entire available WiFS scene, a section of 492×492 pixels has been selected as test site. Fig. 4(a) and (b) shows the respective images for NIR band (i.e., near-infrared spectral channel). Various wildfire destroyed a large portion of vegetation in the said area between two acquisition dates. Fig. 4(c) and (d), respectively, shows the corresponding difference image and the reference map which are obtained by the same process as used in the case of the previously mentioned data sets. The reference map contains 5197 changed and 236,867 unchanged pixels.As mentioned in Section 1, to investigate the effectiveness of the proposed semi-supervised technique, experiments are conducted on three different multi-temporal and multi-spectral data sets and the results obtained using the proposed methodology are compared with those of the unsupervised approach using MSOFM [14], a robust fuzzy c-means clustering technique (RFCM) [43], a supervised method using MLP, a semi-supervised change detection technique using MLP [39], and constrained k-means algorithm [44] (a semi-supervised clustering algorithm).To implement the proposed algorithm, during training of MSOFM network, the learning rate η in each iteration ‘itr’ is computed as η(itr)=1/(1+itr) to ensure its value to lie within the range of 0 to 1 (i.e., 0<η≤1). The topological neighborhood, h(itr) was considered to be a rectangular window with initial size 11×11 and after each epoch, the window size was gradually reduced until it attained a size of 3×3; thereafter its size was kept constant till convergence. For each unlabeled pattern, to search for its K nearest neighbors, although we experimented with different window sizes and K values, finally, the window size was taken as 51×51 and the value of K was fixed at 8. The similar threshold calculation methods (optimal, correlation based and energy based) are adopted in our experiments as they were employed in [14]. Weight initialization of the network connections (for both MSOFM and MLP) and the training (labeled) patterns used are different for different simulations. For experimentation, three different percentages of training patterns (0.1%, 0.5%, and 1%) are considered and 10 simulations are conducted. At the beginning of the training phase, the labeled patterns are obtained from the reference map and a target value is assigned to each labeled pattern depending on its class label. The target value of each of the training patterns is fixed to its class label while testing.To assess the effectiveness of the proposed methodology, various performance measuring indices are considered in our investigation and these are as follows: the number of missed alarms (MA), the number of false alarms (FA), the number of overall error (OE), micro averaged F1 measure (MicroF1), macro averaged F1 measure (MacroF1), Kappa measure (Kappa) and error probability (PE). Except the cases of missed alarms and false alarms, the average (Avg.) and standard deviation (written in brackets in the tables) values (over 10 simulations) of all other performance measuring indices are considered for comparative analysis. The best results (denoted by ‘Min’ in the tables) and the worst results (denoted by ‘Max’ in the tables) for MA, FA and OE, considering all the simulations, are also provided in the tables. Results of Mexico data set, Sardinia data set and Greece data set are put in Tables 2–6, Tables 7–11, and Tables 12–16, respectively. Results obtained using unsupervised MSOFM, supervised, constrained k-means algorithm, a robust fuzzy clustering algorithm, semi-supervised MLP and the proposed semi-supervised techniques for Mexico data set are given in Tables 2, 3, 4, 5 and 6, respectively. The corresponding results for Sardinia data set are depicted in Tables 7–11 and for Greece data set the results are put in Tables 12–16.From Tables 2 and 6, it is noticed that for Mexico data set, the proposed semi-supervised method (considering all the percentages of training patterns) outperforms the corresponding unsupervised version for most of the cases except the cases of missed alarms. It has also been observed that in case of the proposed strategy the average values of almost all the measuring indices are significantly better than those of the corresponding unsupervised method, but the standard deviations are little more. This might be due to the fact that different training patterns are used for different simulations in case of semi-supervised technique. By comparing the standard deviation values of Tables 2, 3 and 6, it has been found that for all the performance measurements MLP based supervised technique produces much higher values than those obtained using unsupervised and semi-supervised approaches. This may be due to the unavailability of sufficient number of training samples to carry out any supervised method and it might be a typical example of any real life scenario. From Tables 3 and 6, it is also seen that the maximum overall error (worst case) over 10 simulations using the proposed approach are lower than the corresponding supervised method for the cases of optimal and energy based threshold; whereas the minimum overall error (best case) using the proposed strategy are not better for most of the cases for Mexico data set. It may be due to the fact that the supervised framework with good representative labeled patterns (covering the underline pattern distribution properly) can obtain better results than the corresponding semi-supervised approach. But, such good training patterns may not be available for most of the cases, especially when there is a circumstance of inadequacy of labeled patterns. This is also justified by the attainment of higher standard deviation values for the supervised method over the unsupervised and semi-supervised ones. It has been also found that for the proposed method out of a total of 18 cases (considering different threshold values with different percentages of training patterns used for both maximum and minimum overall error), missed alarms and false alarms are less in 8 cases and 12 cases, respectively. For Kappa measure, in all cases the results obtained using the semi-supervised method are better than those of the corresponding supervised method. It has been also observed that out of a total of 9 cases (considering different threshold values with different percentages of training patterns), average values of overall error, micro averaged F1 measure, macro averaged F1 measure, error probability are more in 5 cases, 4 cases, 4 cases and 5 cases, respectively. From Tables 4 and 6, it has been observed that the proposed technique is better than constrained k-means algorithm in terms of all the measuring indices except the case of false alarms. By analyzing the results in Tables 5 and 6, it has been found that the proposed technique using optimal threshold (considering all the three different percentage of training patterns) outperforms the robust fuzzy clustering (RFCM) technique in all the cases except the case of false alarms. From Tables 5 and 6, it is also seen that the proposed approach using all the three different threshold values is significantly better than Semi-supervised MLP in most of the cases.Comparative analysis of results of the unsupervised (in Table 7) and the proposed semi-supervised (in Table 11) techniques, for Sardinia data set, reveals a similar findings as in Mexico data set. By analyzing the results depicted in Tables 8 and 11, it is observed that the proposed methodology is always better than the supervised approach in terms of maximum, minimum and average overall error, micro averaged F1 measure, macro averaged F1 measure, Kappa measure, error probability and standard deviation. In cases of missed alarms and false alarms, it is seen that out of 18 cases (considering different threshold values along with different percentages of training patterns in terms of maximum and minimum overall error) the proposed strategy is better in 15 cases and 12 cases, respectively. From Tables 9 and 11, it is noticed that the proposed technique is better than constrained k-means algorithm in terms of all the measuring indices except the case of missed alarms. By comparing the results displayed in Tables 10 and 11, it has been found that the proposed approach considering all threshold values is significantly better than the robust fuzzy c-means clustering in most of the cases except the case of missed alarms and standard deviation. It has been also noticed that the proposed semi-supervised approach is better suited for change detection than the semi-supervised approach using MLP in terms of almost all the measuring indices.From Tables 12 and 16 it is seen that for Greece data set the proposed methodology is providing better results than the corresponding unsupervised version in terms of false alarms, overall error and error probability. It has also been observed that the semi-supervised approach is not being able to improve the performance for the cases of missed alarms. These results also corroborate our findings for the other two data sets. It is also noticed that the performance of the proposed method using micro averaged F1 measure is better than the corresponding unsupervised methodology considering the optimal and the energy based threshold values. In case of correlation based threshold with 0.5% and 1% training patterns (and not with 0.1% training patterns), micro averaged F1 measure provided better results than those obtained using unsupervised method. Among the three different threshold selection techniques used in the present article, for Kappa measure and macro averaged F1 measure the proposed technique produces better results than the unsupervised version only for the case of energy based threshold. By comparing the results of the supervised and the semi-supervised approaches, for Greece data set (in Tables 13 and 16), it has been found that the proposed method is always better than the supervised method in terms of overall error, kappa measure and error probability. It has been also noticed that for the proposed method out of total 18 cases (considering different threshold values with different percentages of training patterns used for both maximum and minimum overall error), missed alarms and false alarms are less in 5 cases and 15 cases, respectively. Out of total 9 cases (considering different threshold values with different percentages of training patterns), average values of micro averaged F1 measure and macro averaged F1 measure are higher in 8 cases and 7 cases. From Tables 14 and 16, it is noticed that the proposed technique is better than constrained k-means algorithm in terms of all the measuring indices except the case of missed alarms. From Tables 15 and 16, it has been found that the results obtained using the proposed approach for all the three different thresholding techniques are significantly better than those obtained using a robust fuzzy clustering approach and the semi-supervised MLP in almost all cases. In case of Greece data set, the performance of the semi-supervised MLP [39] and the fuzzy c-means algorithm [43] are noticeably worse. By this observation, it can be concluded that the semi-supervised MLP and RFCM are not robust for all the datasets, used for experimentation; whereas the proposed semi-supervised approach performed well for all the data sets.From Tables 6, 11 and 16 (considering the results obtained using semi-supervised approach under different conditions), it is also observed that the performance measurement indices are mostly attaining better values with an increase of percentages of training patterns. Robustness of the proposed methodology (as evident from the standard deviation) is slightly worse than the unsupervised approach but far better than the supervised technique. To sum up, considering the results obtained for 10 different performance measures with different data sets, different thresholding techniques and different percentages of training patterns (wherever applicable), the proposed semi-supervised methodology, has an edge over the unsupervised as well as supervised ones when a small number of labeled patterns are available.To test the significance of results statistically (in terms of Kappa measure) of the investigation, paired t-test [45] has been performed with the proposed semi-supervised approach versus the other unsupervised, supervised and semi-supervised methods at 5% level of significance and the results of t-test in terms of p-score are reported in Table 17. For typical illustration, we have considered the results (over 10 simulations) obtained using optimal threshold and 0.5% training patterns. Statistically significant results in terms of p-score of the paired t-test (at 5% level of significance) are marked as bold in Table 17. By analyzing the results, in all the cases, significant improvement has been found by the proposed method as compared to the other methods.For visual illustration, the change detection maps are displayed in figures, corresponding to the minimum overall error (obtained over 10 simulations), using unsupervised method, supervised method, constrained k-means algorithm and the proposed semi-supervised method. The change detection maps obtained using these four approaches for Mexico, Sardinia and Greece data sets are shown, respectively, in Figs. 5, 7 and 9. The error maps (highlighting the difference between the change detection map and the reference map) are also displayed in Figs. 6, 8 and 10. It has been observed that the change detection maps obtained using the proposed method are more accurate (resemblance of the reference map) in all cases. From the maps, it is clearly visible that erroneous classification of the unchanged areas as changed ones (i.e., false alarms) has been significantly reduced by the proposed methodology. But, it failed to detect some of the small and scattered changed areas (i.e., missed alarms), where the pixels are on the boundary or the area is surrounded by a vast amount of unchanged regions. This is obviously due to the neighboring effect.Graphs of error-rate obtained using different unsupervised, supervised and semi-supervised techniques on three data sets are displayed in Figs. 11–13. For typical illustration, we have considered the results obtained using optimal threshold and 0.5% training patterns. From the graphs, the rate of change in terms of overall error with increasing epoch or training step has been noticed in a particular simulation in which the minimum overall error is obtained. In the figures, it has been noticed for all the data sets that after initial fluctuations, the overall error is becoming either steady or decreases with increasing epochs (or training step) in case of most of the techniques except the case of constrained k-means.

@&#CONCLUSIONS@&#
