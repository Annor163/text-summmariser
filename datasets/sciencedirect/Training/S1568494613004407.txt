@&#MAIN-TITLE@&#
Hybrid-fuzzy modeling and identification

@&#HIGHLIGHTS@&#
A survey on identification of both hybrid systems and hybrid-fuzzy systems is presented.The definition of the identification problem of the class of hybrid-fuzzy models considered in the paper.A hierarchical methodology based on the same principles of conventional Takagi–Sugeno identification (principal components and fuzzy clustering), that first determines the hybrid behavior of the system and then all the other non-linearities.Two examples, one more academic one, and based on real data measured from a traffic process.

@&#KEYPHRASES@&#
Fuzzy identification,Hybrid systems,Fuzzy clustering,Principal component analysis,Switching regression models,

@&#ABSTRACT@&#
In this paper a class of hybrid-fuzzy models is presented, where binary membership functions are used to capture the hybrid behavior. We describe a hybrid-fuzzy identification methodology for non-linear hybrid systems with mixed continuous and discrete states that uses fuzzy clustering and principal component analysis. The method first determines the hybrid characteristic of the system inspired by an inverse form of the merge method for clusters, which makes it possible to identify the unknown switching points of a process based on just input–output (I/O) data. Next, using the detected switching points, a hard partition of the I/O space is obtained. Finally, TS fuzzy models are identified as submodels for each partition. Two illustrative examples, a hybrid-tank system and a traffic model for highways, are presented to show the benefits of the proposed approach.Hybrid systems represent a class of dynamical systems that contain continuous and discrete/integer variables. Different types of models can be used to represent hybrid systems [1,2], for example mixed logical dynamic (MLD) models, complementarity systems, piece-wise affine (PWA) models, max–min plus scaling systems, timed or hybrid Petri-nets, differential automata, switched systems, hybrid inclusions, and real-time temporal logics, among others. Each sub-class has its own advantages over the others. For example, control techniques have been developed for MLD hybrid models, stability criteria for PWA systems, and conditions of existence and uniqueness of solution trajectories for linear complementarity systems (see [3,4] and the references within).For non-linear systems, a broad family of identification methodologies are available, for fuzzy, neural networks, neuro-fuzzy models [5–9]. However, few methodologies consider non-linear models with continuous and discrete variables, i.e. identification of hybrid systems. In general, the identification of hybrid systems requires to solve two issues: to classify the different modes of operation (discrete behavior) and to estimate the parameters for each mode. Assuming prior knowledge about the discrete modes is not the interest of this paper, because the identification of the model parameters for each mode can be performed straightforwardly using conventional identification techniques. In the literature, the identification methods for hybrid systems mainly focus on Piecewise AutoRegressive eXogenous (PWARX) systems. In [10] an extensive comparison between some of those methods and their drawbacks is presented, and in [11] a recent and complete review of identification methods for hybrid systems (including among other topics like system description, state estimation, control, etc.) can be found. Next, some of those procedures are briefly described.Ferrari-Trecate et al. [12] propose a methodology for the identification of discrete-time hybrid systems in the PWA form, formulated as a discontinuous PWA map. The algorithm is based on clustering, linear identification, and pattern recognition techniques. An algebraic identification procedure to cope with the identification problem of Switched AutoRegressive eXogenous (SARX) systems was proposed by Ma and Vidal [13]. Multiple ARX models are encoded in a single polynomial expression that decouples the determination of parameters from the switching mechanism. The Bayesian procedure for the identification of Piecewise AutoRegressive eXogenous (PWARX) systems proposed by Juloski et al. [14], exploits some prior knowledge about the discrete states and parameters of the submodels. The parameters of submodels are treated as random variables, and described through their probability density functions. A bounded-error procedure was proposed by Bemporad et al. [15] in order to identify PWARX systems. The main feature of the method is to ensure that the identification error is bounded for all data points. Nakada et al. [16] address the problem of identifying PWARX systems by using statistical clustering. The method consists of clustering the measured data, while estimating the boundary hyperplane and the parameters. Gegundez et al. [17] present an identification method for PWA systems based on fuzzy clustering and competitive learning. The method estimates the number of submodels of the system, the parameters corresponding to each submodel, and the regions in the regression space. Lauer et al. [18] propose a nonlinear hybrid system identification method based on kernel functions in order to estimate arbitrary nonlinearities without prior knowledge.Many advances in fuzzy systems identification and applications are available in the literature [19–24], including observers [25,26] and control methods [27,28]. Nefti et al. [29] present a method for merging fuzzy sets based on clustering in the parameter space. The fuzzy sets are replaced by the most compatible prototypical fuzzy set, which is determined from a inclusion-based clustering algorithm. Hadjili and Wertz [30] propose an identification method for Takagi–Sugeno (TS) models, incorporating the selection of optimal rules and input variables. The subtractive clustering algorithm, based on compactness and the separation of clusters, is performed in order to determine the number of rules. Roubos and Setnes [31] propose a complexity-reduction algorithm based on genetic-algorithm optimization procedures to find redundancy among the rules with a criterion based on maximum accuracy and maximum set similarity. In addition, Kim et al. [32] present a combined identification method, based on the TS and Sugeno–Yasukawa models. The approach implements fuzzy regression clustering for initial tuning of the parameters and a gradient-descent method to adjust them accurately. In Abonyi et al. [33] a modified Gath–Geva fuzzy clustering algorithm for the identification of TS models is proposed to directly obtain the parameters of the membership functions. A linear transformation of the input variables makes it possible to recover accurately the fuzzy partition of the antecedents. Li et al. [34] propose a new fuzzy c-regression model clustering algorithm where the clustering prototype in fuzzy space partition is a hyperplane. The new clustering algorithm is used in the identification of TS fuzzy model, obtaining good results in the identification of the premise parameters of the model.For hybrid-fuzzy models, stability analysis and control designs have been proposed in the literature [35,36]. Regarding the identification of hybrid-fuzzy systems, although most of the developments have been made in conventional fuzzy systems, a few hybrid-fuzzy identification methods have been proposed. Palm and Driankov [37] present a hierarchical identification approach for fuzzy switched systems. The proposed method considers a black-box fuzzy identification approach by using fuzzy clustering and measurable discrete states in order to obtain the hybrid-fuzzy model. Although good performance is obtained, prior knowledge about the discrete modes is required. Next, Girimonte and Babuška [38] describe two structure-selecting methods for non-linear models with mixed discrete and continuous inputs. The first method, based on fuzzy clustering, uses fuzzy sets to obtain the relevant inputs. The second approach involves an induction algorithm included in a search method. The results show that fuzzy clustering is faster in terms of computation time. Zeng et al. [39] propose a new representation theorem for hierarchical systems when a discrete input space is considered. The theorem states that one-to-one mappings for low-level functions are required to obtain a flexible hierarchical representation. Moreover, they demonstrate that flexible hierarchical fuzzy systems satisfy the universal approximation property, which allows us to estimate any hierarchical function to any degree of accuracy. A new hierarchical structure of hybrid systems integrating modeling and control is presented by Cheng et al. [40], where the fuzzy controller is synthesized based on the identification of continuous and discrete components. The authors of [40] assume that measurements of the discrete components are available, which allows the use of fuzzy adaptive identification techniques or other ways to directly learn a TS model by clustering or by identifying a neuro-fuzzy model for each of the separate regions. In our paper, direct measurements of the discrete component are not available, and as a consequence it is not possible to do an experimental contrast within those other hybrid-fuzzy identification frameworks.In this paper, a new identification method is proposed for non-linear hybrid systems that identifies first the discrete transitions and then all other non-linearities through fuzzy models only using input–output data of the process, where the main difference with the literature is that prior knowledge of the discrete modes is not required. Next the hybrid-fuzzy models and the identification problem are presented.For the modeling of hybrid systems two of the most popular model types used in the literature are piecewise affine (PWA) systems and mixed logical and dynamical (MLD) systems [11]. In this paper the use of another type of model called hybrid-fuzzy systems is proposed, which combine the characteristics of fuzzy models to represent nonlinearities, and of hybrid systems to include quantized variables.A hybrid discrete-time nonlinear dynamic system is considered with inputu(t)∈ℝm, and to explain the identification method a single outputy(t)∈ℝis assumed (the method is easily extendible for multiple outputs). Letut−1=[uT(t−1),…,uT(t−nb)]T∈ℝm·nbbe past inputs, andyt−1=[y(t−1),…,y(t−na)]T∈χ⊂ℝnabe past outputs, up to time t−1, where naand nbare the model orders (given a priori). The class of hybrid systems considered is described as:(1)y(t)=∑i=1sfi(yt−1,ut−1)ϱi(yt−1),ϱi(yt−1)=1,ifyt−1∈χi0,otherwise,where s is the number of discrete modes (submodels). The local behavior of the system is described by the functions fi(·) and the discrete mode ϱi(yt−1) is a binary variable that equals 1 if yt−1 belongs to the region ofχi⊂ℝna, and 0 otherwise. The regions χiform a complete partition of the regressor set χ, i.e.⋃i=1sχi=χand χi∩χj=∅, ∀i≠j. Note that discrete dynamics (transitions) of the system are assumed to occur when yt−1 satisfies some conditions, and they will not depend on the inputs. The aim in this work is to present a systematic method for determining the functions fi(·) and the regions χigiven only the input–output data of the process. The functions fi(·) could be any non-linear function that will be identified by the TS models and the regions χiare assumed to be convex polyhedra, described by(2)χi={yt−1∈Rna:Hiyt−1⪯hi}where Hi∈Rqi×na, hi∈Rqii=1, …, s, and ⪯ denotes componentwise inequality, where some inequalities are strict to prevent the boundaries of the regions from overlapping. Note that qiis the number of linear inequalities defining the ith polyhedral region. In this paper, as a consequence of the algorithm, the resulting Hi, i=1, …, s, are diagonal matrices, so the partition will be a box (hyperrectangle). To assume the partition is a box will be sufficient to model a limited class of hybrid systems; however, when the model does not fit this characteristic (like in more general classes of hybrid systems [44]), the partition can be can approximate arbitrarily close at the cost of increased complexity. Optimization-based and other techniques could be applied to solve this issue, to obtain more general partitions, and then to model a larger class of hybrid systems [45,46].The system given by (1) can be represented by a two-level fuzzy model, which was described by Tanaka et al. [47]. The corresponding two levels are the local fuzzy level and the discrete/quantized level. The local fuzzy level is a set ofsˆTS fuzzy models with local validity in one region of an estimated partitionχˆi,i=1,…,sˆ. The discrete/quantized level is given by a set of crisp functions δi(yt−1), which activate the ith local TS model if yt−1 is inχˆi.Assume that input–output data is available: (y(t), yt−1, ut−1), t=1, …, N. The structure of a hybrid-fuzzy model to be identified for the variable y(t) is described as:(3)y(t)=∑i=1sˆfiTS(zt−1,yt−1,ut−1)δi(yt−1),δi(yt−1)=1,ifyt−1∈χˆi0,otherwise,(4)fiTS(zt−1,yt−1,ut−1)=∑j=1Riβij(zt−1)yij(yt−1,ut−1),yij(yt−1,ut−1)=(aij)Tyt−1+(bij)Tut−1+rij,βij(zt−1)=∏r=1pAij,r(zr(t−1))∑j=1Ri∏r=1pAij,r(zr(t−1)),where the vector of the premises is zt−1=[z1(t−1), …, zp(t−1)]Tand p is the number of inputs at the premises. The premises variables are permitted to be inputs or outputs, and in this paper we will assumezt−1=[(yt−1)T,(ut−1)T]T, so p=na+m·nb. Moreover, (aij)T, (bij)T, rijare the parameters of the fuzzy modelfiTS(·)for the region i in rule j, Riis the number of rules of the fuzzy model at the ith region, Aij,r(zr(t−1)) is the membership degree for the input zr(t−1) in premise r at the ith region and rule j, and βij(z(t−1)) is the activation degree of the jth rule that belongs to the fuzzy model of the ith region.The hybrid-fuzzy model can be seen as a multimodel [48], where the validity indices (relevance degree of each model) are the on/off conditions that define whether a point belongs to a region of the complete partition of the system; as a consequence of the fusion principle, only one model (the most dominant) represent the dynamics in that region. Fig. 1shows a simple scheme of the hybrid-fuzzy model structure (3).Remarks:•Note that the model given by (3) and (4) is a Takagi–Sugeno fuzzy model, withsˆ·Rirules and activation degree βij(zt−1)δi(yt−1). One of the most important parts of the hybrid-fuzzy model is the fuzzy rule base. The rule i, j is the following: Rij:ifyt−1∈χˆiand z1(t−1) is Aij,1and z2(t−1) is Aij,2and…and zp(t−1) is Aij,pthen yij(t)=(aij)Tyt−1+(bij)Tut−1+rij,j=1,..,Ri,i=1,…,sˆ.The first component of the fuzzy rule (yt−1∈χˆi) evaluates the binary membership function δi(yt−1). This component explicitly incorporates the discrete transitions of the system.By only using a finite input–output data set of the process (y(t), yt−1, ut−1), t=1, …, N, the identification problem of a hybrid-fuzzy model given by (3) and (4) consists of estimating the following parameters: the number of regionssˆ, the partitionχˆi,i=1,…,sˆ, and for each TS model, the number of rules Ri, the parameters of the membership functions Aij,r(·), and the parameters (aij)T, (bij)T, rij. Usually an identification procedure is carried out by minimizing a cost function with respect to the unknown parameters [15]:(5)VN=1N∑t=1NVy(t)−∑i=1sˆfiTS(zt−1,yt−1,ut−1)δi(yt−1)where V is a penalty function for the error, typically a quadratic function. The optimization problem should also include additional terms to avoid overfit (to limit for examplesˆor Ri), or the premises may be obtained by using a specific clustering method. The minimization of (5) is in general a non-convex non-linear mixed-integer optimization (MINLP) problem. Therefore, in the next section, an identification procedure for hybrid-fuzzy systems based on well-known principles (avoiding to solve the MINLP problem) is described.As a motivation example, the hybrid tank system in Fig. 2is considered, which is a modified version of the one used in [17] for PWA identification. In the figure, A1, A2 and A3 are the cross-section of the tanks, S1, S2 and S3 are the cross-section of the outlet holes, g is the acceleration due to gravity, Q(t) is the input flow at time t, and h(t) is the level of the tank. The hybrid tank system is divided into three regions because the cross-section of the tank is larger when the level is higher than h1 or h2.Thus, for a fixed input flow, it will take more time to increase the level h(t) when it is higher than h1 or h2, because the cross-section is larger. This means that the level values h1 and h2 are switching points in the sense that those levels are the boundaries of the three different operating regions, the dynamics of which are different. In order to avoid complicated optimization-based methods, we propose to detect the switching point by analyzing the principal component of the clusters’ variance matrices, as provided by the Gustafson–Kessel (G–K) algorithm [41]. The G–K algorithm is typically used in the identification of TS models [43], so no extra information is required to perform the algorithm. The cluster slopes are analyzed by using the principal components, to be able to identify switching points of systems whose discrete behavior is reflected in the data by an abrupt variation of the spatial orientation of clusters. The method presented is interpretable as an “inverse” form of the merge method of clusters presented in [42,49], where, instead of merging similar clusters, clusters that differ a lot are used to detect switching points and to define a complete partitionχˆi,i=1,…,sˆ, over the regressor space. The slope changes concept has been used recently for the statistical monitoring of nonlinear profiles in [50].Once the partition is known, the local TS modelsfiTS(·),i=1,…,sˆ, are identified by classifying the data according to the rule: the datum (y(t), yt−1, ut−1) is used for the identification offiTS(·)ifyt−1∈χˆi.Throughout this paper, we assume that a sequence of N input/output data have been collected:(6)Φ=y(1)(y0)T(u0)Ty(2)(y1)T(u1)T⋮⋮⋮y(N)(yN−1)T(uN−1)TN,na+m·nb+1,where N denotes the number of data samples.The identification procedure consists of seven steps. In the Step 1, based on the G–K algorithm, the information of the clusters (center, covariance matrices, eigenvectors and eigenvalues) is obtained. Then, in Step 2 the principal components are extracted. Next, with the projections on the regressors space obtained in Step 3 and in Step 4, the cluster slopes are calculated. With the cluster slopes, in Step 5 the switching points are determined. In Step 6 the partition is generated, and finally in the Step 7 the local fuzzy models are identified. The details of each step are explained next.Step 1: Clustering. Determine the fuzzy clusters over the data Φ, using the G–K algorithm [41]. This algorithm includes fuzzy covariances in an n-dimensional space, and closely resembles maximum likelihood estimation on mixture densities. It is suitable for the identification of hybrid-fuzzy models because the consequents of hybrid-fuzzy models are hyperplanes in the premise-consequent product space. The algorithm will cluster the data given a specified number of clusters c, the parameters for the cluster fuzziness, and the stopping criterion. The G–K algorithm provides the centers of the clustersvl=[vl1,…,vlna+m·nb+1]T, a covariance matrix for each fuzzy cluster l, with na+m·nb+1 eigenvectorsφ1,l,…,φna+m·nb+1,l, and with the corresponding eigenvaluesλ1,l,…,λna+m·nb+1,l.It is well known that the G–K algorithm does not give an indication of the correct number of clusters c needed. A large number of clusters will result in a complicated rule-base model, while a small number of clusters will result in a poor model. So to obtain the optimum number of clusters, the use of a compatible cluster merging method is proposed, just like it is suggested for the identification of TS models in [42,49]. This method works as follows: let the center of two clusters bevl1andvl2, withφ1,l1andφ1,l2the eigenvectors associated with the minimum eigenvalueλ1,l1andλ1,l2respectively. The criteria to merge the clusters proposed in [49] consider that the nearly parallel major axes of consecutive clusters should be merged (|φ1,l1·φ1,l2|≥k1, with k1 close to 1) and also the cluster centers should be sufficiently close for merging (∥vl1−vl2∥2≤k2, with k2 close to 0). In this step we could also use a set of cluster validity metrics like fuzzy entropy, fuzzy hypervolume, etc.Step 2: Principal components. First select the eigenvectorφl*=[ϕl1,ϕl2,…,ϕl1na+m·nb+1]Tassociated with the maximum eigenvalueλl*for each cluster l=1, …, c:(7)λl*=max{λ1,l,λ2,l,…,λna+m·nb+1,l}.The switching points are obtained by analyzing the most important eigenvectors (the principal vectors or the principal components), in the direction of which the most information is given. Inspired by the merge method for clusters [49], instead of merging clusters with nearly-parallel major axes, we will split the output-regressor space when those consecutive clusters are very different (i.e. the angle between the hyperplanes is big). It is assumed that the switching points are defined by the outputs, so the analysis is done for each component of the output-regressor space y(t−k), k=1, …, na.Step 3: Projections. For every cluster l=1, …, c and every component of the output regressor space y(t−k), k=1, …, na, calculate the vectorπˆlk, which represents the projection of the eigenvectorφl*on the subspace given by the inputs and the output y(t−k), and which is given by:(8)πˆlk=Φkφl*∥Φkφl*∥2,∀l=1,…,c,∀k=1,…,na,whereφl*is the eigenvector chosen in Step 2 and Φkis the matrix of dimension (na+m·nb+1)×(na+m·nb+1), the elements of which are defined as:(9)(Φk)ℓ,℘=1ifℓ=℘=k+1,1ifℓ=℘andℓ>na+1,0ifotherwise.Note that the vector is normalized, so∥πˆlk∥2=1. Note also that (7) is just the projection of the eigenvector on the sub-space generated by the inputs and the output y(t−k).For every vectorπˆlkdetermineπˆlkuwhich represents the projection ofπˆlkin the subspace generated by the inputs, and which is obtained in the following way:(10)πˆlku=Φuπˆlk∥Φuπˆlk∥2,∀l=1,…,c,∀k=1,…,na,whereπˆilis the vector obtained in Step 3, and Φuis the matrix of dimension (na+m·nb+1)×(na+m·nb+1), the elements of which are defined as:(11)(Φu)ℓ,℘=1ifℓ=℘andℓ>na+1,0ifotherwise.Note that the vector is normalized, so∥πˆlku∥=1. Note also that in (10) we are just projecting (7) on the subspace generated by the inputs. This vector is used to define the angle we need to estimate the switching point.Step 4: Cluster slope. Letγˆlkbe the estimation of the angle betweenπˆlkandπˆlku. It is possible to obtain this angle by calculatingarccos(πˆlkTπˆlku). Then, for each cluster l and every output variable y(t−k), compute the cluster slopeΓlk=tan(γˆlk)given by:(12)Γlk=tan(arccosπˆlkTπˆlku)=|πˆlkTπˆlku|πˆlkTπˆlku1(πˆlkTπˆlku)2−1,∀l=1,…,c,∀k=1,…,na,As an example consider Fig. 3with yt−1=y(t−1), ut−1=u(t−1). Fig. 3a shows the data with the corresponding clusters, and the lines inside the cluster represent the vectorsφl*associated with the maximum variance for each cluster. Fig. 3b shows the projections of the vectorsφl*and the anglesγˆlk.Step 5: Switching points. In this step the switching points candidates are determined for each variable y(t−k), k=1, …, na. Consider two consecutive clusters l1 and l2, with centersvl1andvl2in descending order for the component k of the vector related with the variable y(t−k), (vl1k<vl2k).The candidate switching point should be in between the coordinatesvl1kandvl2k. A good estimator of the switching point could be the coordinatevl1k+λl1*ϕl1k, which is interpretable as the coordinate obtained when running from the center of the ellipsoid cluster l1, given byvl1k, through the kth axis, up to the edge of the ellipsoid. The valueλl1*is the eigenvalue obtained in Step 2 corresponding to cluster l1, andϕl1kthe kth coordinate of the corresponding eigenvector. For the same reason, if the cluster l2 is used, which is on the other side of the switching point, the valuevl2k−λl2*ϕl2kcan be chosen as a candidate switching point. Then, for estimating the location of the switching pointVkl1l2, a weighted sum of those coordinates is proposed:(13)Vkl1l2=((vl1k+λl1*ϕl1k)/λl1*)+((vl2k−λl2*ϕl2k)/λl2*)(1/λl1*)+(1/λl2*),whereϕl1kandϕl2kare the kth coordinates of the corresponding eigenvectors. The weighted sum represents the fact that from experiments we found out that the switching points are usually closer to the cluster with the smaller eigenvalue. Better methods to estimate the switching point location can be further investigated.The next step is to choose the switching point candidatesVkl1l2the rateΔΓl1l2kof which satisfies a criterion. The rateΔΓl1l2kis given by:(14)ΔΓl1l2k=Γl1k−Γl2k.One criterion could be to select ratesΔΓl1l2kthat are larger than a given threshold. For example, a threshold could be the mean value ofΔΓl1l2k(denoted asΔΓ¯k), plus two times its standard deviation (σΔΓk). So, if all the rates are similar, this means that there is not a switching point in the variable y(t−k). Otherwise, just the clusters with a larger variation will be considered. The main advantage of this method is the chance to obtain a good estimation of all the switching points in a row, without any further analysis. The main drawback in this criterion is the possibility to miss switching points (or include not switching points) if the threshold is not appropriate.As an alternative to the threshold criterion, a sensitivity analysis could be performed to evaluate if the inclusion of a switching point improves the performance of the prediction model while keeping the complexity of the model reduced. If so, one extra switching point will be included, the corresponding hybrid-fuzzy model identified, and then Step 5 is analyzed again, to determine the inclusion of another switching point. The process will finish once a the performance of the hybrid-fuzzy model does not improve significantly (within some thresholds) by the inclusion of new switching points. So, let us assume we have generated a partition{χˆi}i=1sˆ−1. We now analyze the inclusion of a new switching point in the model, by splitting the regionχˆiinto two new regions defined by the new switching point. So, let consider the switching point candidate, with the maximum rate, given by:(15)Vsˆ={Vk¯l1¯l2¯:(l1¯,l2¯,k¯)=argmax{ΔΓl1l2k}}.Step 6: Generation of the partition. The regionχˆiis divided into two new regions. Recall that the regionχˆiis defined as follows:(16)χˆi={yt−1:Hiyt−1⪯hi},where Hi∈Rqi×nais diagonal, hi∈Rqii=1, …, s, the symbol ⪯ denotes componentwise inequality, where some inequalities are strict to avoid the boundaries of the regions to have multiple values. Given the new switching pointVsˆin the variable y(t−k), the two new regions are defined as follows:(17)χˆ1i={yt−1:Hiyt−1⪯hi∧y(t−k)≤Vsˆ}.(18)χˆ2i=yt−1:Hiyt−1⪯hi∧−y(t−k)<−Vsˆ.Step 7: Fuzzy identification. For the sub-regionsχˆ1iandχˆ2i, a local TS model is identified. First, the data belonging to the regionχˆiis split into the two new regions, by the rule: ify(t−k)≤Vsˆthen(y(t),(yt−1)T,(ut−1)T)∈χˆ1i, else(y(t),(yt−1)T,(ut−1)T)∈χˆ2i, t=1, …, N. Then, for each new partition, just considering data that belongs to the subregion, the number of rules Riand the membership functions Aij,r(·) are obtained with a clustering method (G–K). Each TS model is optimized for the number of fuzzy clusters and their regressor structure is obtained by a sensitivity analysis (see [30,29,51]).The next step is to identify the consequent parameters of each rule of the TS model (see [52–54,34]). Let us write the consequent parameters for the fuzzy rule j in the region i as follows:(19)Θij=aijbijrij,An identification procedure is carried out by minimizing the following cost function with respect to the unknown parameters Θij:(20)VNij=1Nij∑t=1Nij(βij(zt−1))2(y(t)−[(yt−1)T(ut−1)T1]Θij)2where Nijis the number of input–output data pairs corresponding to the rule j of the region i considering only the data that belongs to the region i and for which βij(z(t−1))≥δ, with δ a small positive number.The model parameters for the rule j of region i can be obtained using the least squares identification method as follows:(21)Θij=(ΨijTΨij)−1ΨijTYijwhere the matrices Ψijand Yijare as follows:(22)Ψij=βij(z0)[(y0)T(u0)T1]βij(z1)[(y1)T(u1)T1]⋮βij(zNij−1)[(yNij−1)T(uNij−1)T1],(23)Yij=βij(z0)y(1)βij(z1)y(2)⋮βij(zNij−1)y(Nij),By the identification of each rule (not the overall model), and also by weighting the data for the corresponding activation degree of each rule βij, a better conditioning of the matrices is obtained, compared to the conditioning of the whole data matrix. This approach leads to a better estimation of the hybrid-fuzzy model parameters as the data close to the center of the cluster will be more important to minimize than the data at the borders. This fact can help with the problem of misclassification of data, where due to errors in the estimation of the switching points or due to the noise of the system, a data point belonging to one region is considered to belong to another.Remarks:•The proposed generation of the partition (2) is quite limited as it is defined by diagonal matrices Hi, i=1, …, s. Systems defined by another kind of partitions like polyhedral (Hiyt−1−hi⪯0 with Hinon diagonal), or a non-linear partition (Hi(yt−1)⪯0 with Hia non-linear function), will not fit into this configuration. The proposed method improves the monitoring and prediction capabilities in some processes, but the analysis and algorithms for a more general case is topic for the further research.Note that, as we first perform the identification of the discrete transitions, our method can be adapted for use as a key element in other modeling methods for hybrid systems. For instance, other modeling tools can be used instead of a fuzzy system like neural networks, PWA systems, etc., to create subsystems models after the successful identification of the discrete modes.Next, an illustrative experiment on a hybrid-tank system is described. Then, as an empirical validation of the method, based on real-life data measured on a part of a highway in the Netherlands, the results of the hybrid-fuzzy identification of a first-order traffic model is presented.Let us consider the hybrid tank system shown in Fig. 2. The following non-linear equations describe the dynamics of the tank system:(24)dhdt=1A1(Q(t)−Q1(h(t)))ifh(t)≤h11A2(Q(t)−Q2(h(t))))ifh1<h(t)≤h21A3(Q(t)−Q3(h(t)))ifh2<h(t),where h(t) [m] is the level of the tank at time t, u(t)=Q(t) [m3/s] is the input flow,Q1(h(t))=S12gh(t)is the outflow of the first part of the tank, the outflow of the second part isQ2(h(t))=S22g(h(t)−h1)+Q1(h(t),Q3(h(t))=S32g(h(t)−h2)+Q2(h(t))+Q1(h(t))is the outflow of the third part, A1=0.0154 [m2] is the cross-section of the first part of the tank, the cross-sections of the second and third parts are given by A2=3A1, A3=9A1, S1=S2=S3=0.0005m2 are the cross-sections of the outlet holes, and g=9.81m2/s is the acceleration due to gravity, h1=0.2m and h2=0.4m. We will assume that just input–output data shown in Fig. 4are available for identification and validation. For the input Q(t) a uniformly distributed random signal with minimum value 0, maximum value 0.005, and sample time 0.1s was used. The experiment was designed in a way to just have a good number of h1 and h2 crossings. A total of 4000 samples were used as identification set, and 4000 as the validation set. The results presented next were obtained with signals sampled with Ts=0.1s.The identification problem is to find the relation between h(t) and Q(t) considering the input/output data. The main goal is to find the number of switching regions and the switching points (in this case h1=0.2m and h2=0.4m), that define the partition. After an optimization of the order of the models, first-order model is considered good enough to predict the dynamics of the system, so the input/output data vectors considered are yt−1=h(t−1) as the output and ut−1=Q(t−1) as the input. In order to evaluate the performance of the hybrid-fuzzy model (with one and two switching points detected) and a TS model (with no switching point included), the Root Mean Squared (RMS) error is used.The G–K algorithm was used to obtain the clusters. The premises were obtained by denormalization of the cluster parameters given by the G–K algorithm with normalized data. The consequent parameters were obtained using the method explained in Step 7. The number of clusters obtained from a sensitivity analysis was six. The number of clusters can be increased if a smaller RMS is needed; however, the complexity of the model will then also increase. Just to be fair in the comparison with the hybrid-fuzzy model, the number of rules will be the same as the TS model.The TS model is given by:Rj:if h(t−1) is Aj,1and Q(t−1) is Aj,2then h(t)=aj1h(t−1)+bj1Q(t−1)+rj, j=1, …, 6. whereAj,l(zl(t−1))=e−0.5(c1,j,l(zl(t−1)−c2,j,l))2.The parameters of the premises and the consequents of the TS model are listed in Table 1.The same procedure based on the G–K algorithm used for TS model is performed. Using the covariance matrices, given by the G–K algorithm from Step 1, the eigenvalues and eigenvectors associated with each cluster are determined. Each cluster has 3 eigenvalues and 3 eigenvectors. Then, the eigenvector(φl*)associated with the largest eigenvalue for each cluster is considered. The projections of the eigenvectors obtained from Step 2 are determined and the slopes of the projected eigenvectors with respect to the coordinate h(t−1) were computed. The rates of consecutive clusters are calculated. Each rate is associated with the estimated switching point in the coordinate h(t−1), by using (13). A switching point was estimated to be in h(t−1)=0.2037m (the real value is 0.2). After splitting the data into the new regions h(t−1)≥0.2037 and h(t−1)<0.2037, the rates between consecutive clusters belonging to each region are calculated again, the second switching point being estimated to be in h(t−1)=0.4018m (the real value is 0.4).Two hybrid-fuzzy models are identified. The first one (hybrid-fuzzy 1) considering one estimated switching point h(t−1)=0.2037. The second model (hybrid-fuzzy 2) considers switching points h(t−1)=0.2037 and h(t−1)=0.4018. For the model hybrid-fuzzy 1 there are two subregions (sˆ=2): the first one isχˆ11, where h(t−1)≥0.2037. The second isχˆ12, where h(t−1)<0.2037. For the model hybrid-fuzzy 2 There are three subregions (sˆ=3): The first one isχˆ21, where h(t−1)<0.2037. The second isχˆ22, where h(t−1)<0.4018 and h(t−1)≥0.2037. The third isχˆ23, where h(t−1)≥0.4018. Finally, using the proposed identification method, local TS models for the corresponding switching regions are computed, optimizing the number of clusters per region. In total six rules are used in each hybrid-fuzzy model, so the results will be comparable with the 6 rules of the TS model obtained before. Finally, the structure of hybrid-fuzzy model with two switches (three subregions) is given by:R1j: ifh(t−1)∈χˆ21and h(t−1) is A1,j,1and Q(t−1) is A1,j,2, then h(t)=a1j1h(t−1)+b1j1Q(t−1)+r1j, j=1, 2.R2j: ifh(t−1)∈χˆ22and h(t−1) is A2,j,1and Q(t−1) is A2,j,2, then h(t)=a2j1h(t−1)+b2j1Q(t−1)+r2j, j=1, 2R3j: ifh(t−1)∈χˆ23and h(t−1) is A3,j,1and Q(t−1) is A3,j,2, then h(t)=a3j1h(t−1)+b3j1Q(t−1)+r3j, j=1, 2 whereAij,r(zr(t−1))=e−0.5(c1,ij,r(zr(t−1)−c2,ij,r))2.The parameters for hybrid-fuzzy models are given in Tables 2(hybrid-fuzzy 1) and 3(hybrid-fuzzy 2).Fig. 5contains the RMS for the TS model, hybrid-fuzzy model with one switch (hybrid-fuzzy 1) and hybrid-fuzzy model with two switches (hybrid-fuzzy 2), considering the validation data set for Npstep-ahead predictions. Fig. 6shows the measured output and the predicted modes using hybrid-fuzzy model 2, in the case of 200 step-ahead-prediction.The switching points detected at h(t−1)=0.4018 and h(t−1)=0.2037 are a fairly good estimation. From Figs. 5 and 6, the main advantage of hybrid-fuzzy modeling are its fuzzy rules, which can be used directly to detect the modes of the system as shown in Fig. 6.The three-level tank system is a simple example to show the benefits of the new identification method. In a real-world implementation of this system some effects like turbulence and boundary-layer effects in the transition between the tanks will be found. Next, in order to get an empirical validation using real-life data, the method is applied for the hybrid-fuzzy identification of the density in a highway.A 1.915km long stretch of the A12 freeway, in the Netherlands has been used as test field to validate the identification method. The stretch used is in the segment that crosses the Dutch province of South Holland. In Fig. 7the scheme of the stretch is depicted. In this paper, the identification procedure will be explained with a single-link case study, with no on-ramps or off-ramps.A period of 6h (5:00–11:00) representative of typical working Monday will be modeled. The data from two representative days were used for identification, and for validation another day was used. The highway is divided in 4 sections or cells (see Fig. 7). The density in the section i is denoted by ρi(t), and the density in the next section of the highway is denoted by ρi+1(t), and so on. The model structure of a typical first-order in time traffic model is considered. Then, for example, to model the density ρi(t) the regressors ρi−1(t−1), ρi(t−1), and ρi+1(t−1) are used. Note that those are the same regressors used by the cell transmission model [55]. Thus, the hybrid-fuzzy model to identify for each section i=1, …, 4 is:(25)ρi(k+1)=∑p=1sifi,pTS(ρi(k),ρi−1(k),ρi+1(k))δi,p(ρi(k))where the output is y(k)=ρi(k), the densities at the neighboring links are the inputs u(k)=[ρi−1(k), ρi+1(k)]Tand the number of switching points is si. To evaluate the model for the four segments, the densities at the boundaries ρ0(k) and ρ5(k) are considered as inputs. For simplicity, the four hybrid-fuzzy models of the freeway will have the same discrete modes representation, thus δi,p(ρi(k))=δp(ρi(k)). Next, results for the case si=3 are presented.In Fig. 8the slope rates obtained for the 4 densities of the highway. Only the two higher slope rates are used as criterion to split the data.From Fig. 8, the switches (sorted from the most relevant) are ρi(k)=30.17 and ρi(k)=22.06. In Fig. 9the predicted density for each segment and the estimated modesδi(k)=∑s=1siδi,s(k)are shown. The most relevant part of the hybrid-fuzzy models is the estimation of the modes, not only because the method suggests a natural classification of the operational modes of the system, (in this case three modes, congested if ρi(k)>30.17, free flow if ρi(k)<22.06, otherwise transition mode), but also because the prediction model is good enough to estimate the densities in current mode.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
In this paper a new identification method for non-linear hybrid systems that identifies discrete transitions by using only input–output data has been presented. A hybrid-fuzzy model was identified that consists of a local fuzzy level and a discrete/quantized level. Thus, the hybrid-fuzzy model incorporates explicitly the hybrid behavior of the process. Moreover, the method was implemented and applied to a hybrid tank system and a first-order traffic model. The use of principal component analysis demonstrated to be very useful in the detection of switching points. In the simulation results we obtain a small prediction error using the hybrid-fuzzy model. However, we must point out that the main advantage of hybrid-fuzzy modeling are the fuzzy rules with explicit information about the modes of the plant, which can be used directly to detect the discrete transitions of the system.In further research, new approaches of hybrid-fuzzy identification will be analyzed such as a fuzzy clustering that generates the partitions (for the fuzzy rules together with the hybrid behavior). With the fuzzy clustering approach, the switching point candidates are located close to the border of the ellipsoid clusters. Therefore, further research should focus on different methods to characterize this phenomenon. Also, after the successful identification of the discrete modes, other models instead of fuzzy systems could be used to create the subsystem models (neural networks, linear models, PWA, among others). State-space model identification and estimation is also an interesting topic for this class of non-linear systems. Online clustering, or learning methods could be also applied in a further stage.