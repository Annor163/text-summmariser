@&#MAIN-TITLE@&#
Skeleton-based intrinsic symmetry detection on point clouds

@&#HIGHLIGHTS@&#
We propose an intrinsic symmetry detection algorithm over imperfect point clouds by leveraging recent advances in curve skeleton extraction from point clouds.We employ the electors voting scheme where the symmetry electors are pruned with a cascade of symmetry filters.Our method works with raw scans as well as the low quality point clouds captured by Microsoft Kinect.We apply our method to repair incomplete scans based on the detected intrinsic symmetries.

@&#KEYPHRASES@&#
Symmetry detection,Intrinsic symmetry,Skeleton,Point clouds,Self-isometry,

@&#ABSTRACT@&#
We present a skeleton-based algorithm for intrinsic symmetry detection on imperfect 3D point cloud data. The data imperfections such as noise and incompleteness make it difficult to reliably compute geodesic distances, which play essential roles in existing intrinsic symmetry detection algorithms. In this paper, we leverage recent advances in curve skeleton extraction from point clouds for symmetry detection. Our method exploits the properties of curve skeletons, such as homotopy to the input shape, approximate isometry-invariance, and skeleton-to-surface mapping, for the detection task. Starting from a curve skeleton extracted from an input point cloud, we first compute symmetry electors, each of which is composed of a set of skeleton node pairs pruned with a cascade of symmetry filters. The electors are used to vote for symmetric node pairs indicating the symmetry map on the skeleton. A symmetry correspondence matrix (SCM) is constructed for the input point cloud through transferring the symmetry map from skeleton to point cloud. The final symmetry regions on the point cloud are detected via spectral analysis over the SCM. Experiments on raw point clouds, captured by a 3D scanner or the Microsoft Kinect, demonstrate the robustness of our algorithm. We also apply our method to repair incomplete scans based on the detected intrinsic symmetries.

@&#INTRODUCTION@&#
Symmetry is a universal phenomenon in nature, science, and art. Recently, symmetry analysis and symmetry-aware shape processing have been intensively studied in computer graphics, where the vast majority of existing works have been on extrinsic symmetry detection over complete shapes represented by polygonal meshes [1]. In this paper, we are interested in the problem of intrinsic symmetry detection over point cloud data. In particular, the input point cloud is assumed to be imperfect with noise and missing data, which are typical results of acquisition via 3D capture/scanning devices.Intrinsic symmetry is defined as a region over a shape that possesses a self-map that preserves geodesic distances. Naturally, existing approaches to intrinsic symmetry detection have relied on geodesic distances in one way or another and they have all been applied to closed meshes [2–5]. One exception is the work by Ovsjanikov et al. [6] which detects symmetries in signature space defined by the eigenfunctions of the Laplace–Beltrami operator. However, this method also works on meshes and cannot deal with substantial topological defects. However, accurate geodesic distance computation over a point cloud is challenging in general [7], making it difficult to adapt existing symmetry detection schemes on meshes to work on imperfect point clouds.The key idea in this paper is to take advantage of the recent success on robust curve skeleton extraction from imperfect point cloud data [8–12] and transform the symmetry detection problem from an input point cloud to its extracted curve skeleton. Given an imperfect point cloud, we expect curve skeleton extraction to be an easier problem than that of intrinsic symmetry detection since the former relies primarily on local geometry analysis and the latter is a global problem that is particularly susceptible to missing data. That being said, imperfect point clouds typically result in imperfect skeletons, which pose challenges to the ensuing symmetry analysis. For 3D scans of human body obtained by a RGBD camera such as Microsoft Kinect, a pre-computed skeleton is fitted to the scan in real time, which can be directly used in our symmetry detection pipeline. The detected symmetry information can in turn be used to complete the low quality scans of Kinect.In the paper, we propose an intrinsic symmetry detection algorithm over imperfect point clouds by exploiting several properties resulting from robust curve skeleton extraction [9,10,12]: (i) homotopy to the input shape; (ii) approximate isometry-invariance; and (iii) skeleton-to-surface mapping. In our work, by isometry, we mainly refer to articulated deformation (or skeletal deformation) of the input shape which is approximately isometric.Given a point cloud, our algorithm returns a set of self-symmetric regions, as well as a set of pairs of symmetric regions, if any. Each detected symmetry represents a partial intrinsic symmetry and together they constitute a global intrinsic symmetry of the input shape, see Fig. 1(4). To accomplish this, we compute symmetry electors, each of which is composed of a set of node pairs filtered by a cascade of pruning tests. The electors are then used to vote for symmetric node pairs indicating the symmetry map on the skeleton. The symmetry map is transferred to the point cloud, leading to a symmetry correspondence matrix over which we perform spectral analysis to extract the final symmetry regions for the point cloud.

@&#CONCLUSIONS@&#
We have presented a novel and practical algorithm for intrinsic symmetry detection on imperfect point clouds based on accurate curve skeletons. The various experiments demonstrate the robustness of our method in terms of handling raw point clouds with severe noise, under-sampling, and missing data. The detected symmetry can be applied to repair the scanned data by filling the missing regions.Our current algorithm and implementation still leave much room for improvement. First and foremost, we would like to investigate how to detect symmetric node pairs for the independent partial intrinsic symmetries appearing on a shape, e.g. the Neptune model in Fig. 15. Another interesting venue is finding more efficient filtering mechanisms for the symmetry electors tailored for curve skeletons. We would also like to improve the performance of our algorithm, especially for the construction of SCM. Parallelization is obviously possible since the entries in the SCM can all be computed in parallel. Finally, it is desirable to more intelligently combine the symmetry criteria (Eq. (1)) with the conventional measures used in mesh segmentation problem, and develop an optimization-based framework for symmetry detection.