@&#MAIN-TITLE@&#
Random sampling: Billiard Walk algorithm

@&#HIGHLIGHTS@&#
New sampling algorithm giving fast convergence to uniform distribution is proposed.We extend billiard trajectories with random change of directions.Performance is tested in comparison with Hit-and-Run algorithm.

@&#KEYPHRASES@&#
Sampling,Monte-Carlo,Hit-and-Run,Billiards,

@&#ABSTRACT@&#
Hit-and-Run is known to be one of the best random sampling algorithms, its mixing time is polynomial in dimension. However in practice, the number of steps required to obtain uniformly distributed samples is rather high. We propose a new random walk algorithm based on billiard trajectories. Numerical experiments demonstrate much faster convergence to the uniform distribution.

@&#INTRODUCTION@&#
Generating points uniformly distributed in an arbitrary bounded regionQ⊂Rnfinds applications in many computational problems (Tempo, Calafiore, & Dabbene, 2004; Rubinstein & Kroese, 2008).Straightforward sampling techniques are usually based on one of the three approaches: rejection, transformation, and composition. In the rejection approach, the region of interest Q is embedded into a region with available uniform sampler B (usually a box or a ball). At the next step, samples that do not belong to Q are rejected. Assume Q is the unit ball, and the bounding region B is the box[-1,1]n. Then forn=2k, the ratio of the volumes of the box and the ball is equal toq=Vol(Q)Vol(B)=πkk!2k, thusq≈10-8forn=20, so that one has to generate∼108samples to obtain just a few of them in Q. For polytopes this ratio can be much smaller. Another way to exploit pseudo-random number generator for a simple region B is to map B onto Q via a smooth deterministic function with constant Jacobian. For instance, to obtain uniform samples inQ={x:xTAx<1}, A being a positive definite matrix, it suffices to generate samples y uniformly in the unit ball||y||2<1and transform them asx=A-1/2y. Unfortunately, such a transformation exists just for a limited class of regions. In the composition approach, the set Q is partitioned into a finite number of sets that can be efficiently sampled. For instance, a polytope can be partitioned into simplices, but the large number of them makes the procedure computationally hard.Other sampling procedures use modern versions of the Monte Carlo technique based on the Markov Chain Monte Carlo (MCMC) approach (Gilks, Richardson, & Spiegelhalter, 1996; Diaconis, 2009). For instance, efficient algorithms for computing volumes using random walks can be found in Dyer, Frieze, and Kannan (1991), Lovasz and Somonovits (1993), Lovasz and Deak (2012). One of the most famous and efficient algorithms of the MCMC type is Hit-and-Run (HR), which was originally proposed by Turchin (1971) and independently by Smith (1984). The brief description of the HR algorithm is as follows. At every step HR generates a random direction uniformly over the unit sphere and picks the next point uniformly on the segment of the straight line in the given direction in Q. HR is applicable to various control and optimization problems (Polyak & Gryazina, 2008; Polyak & Gryazina, 2011; Dabbene, Shcherbakov, & Polyak, 2010) as well as to simulation-based multiple criteria decision analysis (Tervonen, van Valkenhoef, Basturk, & Postmus, 2013). Unfortunately, even for simple “bad” sets, such as level sets of ill-posed functions, HR techniques fail or become computationally inefficient.A variety of applications and drawbacks of the existing techniques provides much room for improving and developing new sampling algorithms. For instance, there were attempts to exploit the approach proposed for interior-point methods of convex optimization (Nesterov & Nemirovsky, 1994) and to combine it with MCMC algorithms. As a result, the Barrier Monte Carlo method (Polyak & Gryazina, 2010) generates random points with better uniformity properties as compared to the standard Hit-and-Run. On the other hand, the complexity of every iteration is in general high enough (the calculation of∇2F(x)-1/2is required, whereF(x)is a barrier function of the set). Moreover, the Barrier Monte Carlo method does not accelerate convergence for simplex-like sets.In this paper we propose a new random walk algorithm motivated by physical phenomena of gas diffusing in a vessel. A particle of gas moves with a constant speed until it meets the boundary of the vessel, then it reflects (the angle of incidence equals the angle of reflection) and so on. When a particle hits another one, its direction and speed change. In our simplified model we assume that the direction changes randomly, while the speed remains the same. Thus our model combines the ideas of the Hit-and-Run technique and use of the billiard trajectories. There exists a vast literature on mathematical billiards, and many useful facts can be extracted from there (Tabachnikov, 1995; Galperin & Zemlyakov, 1990; Sinai, 1970; Sinai, 1978; Kozlov & Treshchev, 1991). The traditional theory addresses the behavior of one particular billiard trajectory in different billiard tables, their ergodic properties, and the conditions for the existence of periodic orbits. In stochastic analogs of the classical billiard (Evans, 2001), a direction after reflection is chosen randomly uniformly. Shake-and-Bake algorithms are based on stochastic billiards and generate points on the boundary of a convex set (Boender et al., 1991). The recently proposed version of the Shake-and-Bake algorithm (Dieker & Vempala, xxxx) exhibits polynomial-time convergence to the uniform distribution. Our algorithm is aimed at sampling the interior of a set (actually, later in the text we consider open regions). Besides that, we extend billiard trajectories of random length keeping the standard reflection law. Such an incorporation of randomness also improves the ergodic properties.The paper is organized as follows. In Section 2 we present a novel sampling algorithm and prove that it produces asymptotically uniformly distributed samples in Q. In Section 3 we pay much attention to some properties of the Billiard Walk (BW), implementation issues are discussed as well. Simulation of BW for particular test domains is presented in Section 4. Much attention is devoted to the capability of BW to get out of the corner, in comparison with HR. Here we consider just the most demonstrative types of geometry. In Section 4.6 we briefly discuss possible applications of the algorithm.Assume there is a bounded, open connected setQ⊂Rn,n⩾2, and a pointx0∈Q. Our aim is to generate asymptotically uniform samplesxi∈Q,i=1,…,N.The new BW algorithm generates a random direction uniformly over the unit sphere. Then the next sample is chosen as the end-point of the billiard trajectory of lengthℓ. This length is chosen randomly; i.e., we assume that the probability of collision with another particle is proportional toδtfor small time instancesδt, this validates the formula forℓin the algorithm below. The scheme of the method is given in Fig. 1, while the precise routine is as follows.1.Takex0∈Q;i=0,x=x0.Generate the length of the trajectoryℓ=-τlogξ,ξbeing uniform random on [0,1],τis a specified constant parameter of the algorithm.Pick a random directiond∈Rnuniformly distributed over the unit sphere (i.e.,d=ξ/‖ξ‖, whereξ∈Rnhas the standard Gaussian distribution). Construct a billiard trajectory starting atxiand having initial direction d. When the trajectory meets the boundary with internal normals,||s||=1, the direction is changed asd→d-2(d,s)s,where(d,s)is the scalar product.If a point with nonsmooth boundary is met or the number of reflections exceeds R, go to step 2. Otherwise proceed until the length of the trajectory equalsℓ.i=i+1, take the end-point asxi+1and go to step 2.The algorithm involves two parametersτand R and we discuss their choice below.We prove asymptotical uniformity of the samples produced by BW for convex and nonconvex cases separately. The requirements on Q are different for these two cases, while the sampling algorithm remains the same. Consider the Markov Chain induced by the BW algorithmx0,x1,…. For an arbitrary measurable setA⊆Q, denote byP(A|x)the probability of obtainingxi+1∈Aforxi=xby the BW algorithm. ThenPN(A|x)is the probability to getxi+N∈Aforxi=x. We also denote byp(y|x)the probability density function forP(A|x), i.e.P(A|x)=∫Ap(y|x)dy.Theorem 1Assume Q is an open bounded convex set inRn, the boundary of Q is piecewise smooth. Then the distribution of pointsxigenerated by the BW algorithm tends to the uniform one over Q, i.e.limN→∞PN(A|x)=λ(A)for any measurableA⊆Q,λ(A)=Vol(A)/Vol(Q)and any starting point x.First, the algorithm is well-defined: at step 4 with zero probability the algorithm sticks at a point with nonsmooth boundary. On the other handℓand d are chosen in such a way that, with positive probability,xi+1is obtained by less than R reflections (see detailed discussion of “bad” situations in SubSections 3.1 and 3.2).In view of Theorem 2 in Smith (1984) based on the asymptotic properties of Markov Chains, the two assumptions onp(y|x)imply that the uniform distribution over Q is a unique stationary distribution, and it is achieved for any starting pointx∈Q. The first assumption requires the existence ofp(y|x)and its symmetry; the second assumption claims its positivityp(y|x)>0for allx,y∈Q.Now we show that there exists a probability density function; i.e. for anyx,y∈Q, the transition probability from x to a small neighborhoodδyof y is proportional to the volume ofδy. Among the trajectories proceeding from x toδy, there exist a conic bundle of trajectories with no reflections, as well as some trajectories with1,2,…,Rreflections. For a bundle of trajectories with no reflectionsP(δy|x)∼P(δθ)P(δℓ), whereP(δθ)is the probability of choosing the spatial angle andP(δℓ)is the probability of choosing a certain trajectory lengthℓ∈δℓwhilep∼qmeans “p is proportional to q”.P(δθ)is proportional to the volume of the base of the cone,P(δℓ)∼δℓ, thusP(δy|x)∼vol(δy).The bundles of trajectories with reflections are also cones with small spatial angleδθ. The area of reflection with a smooth boundary can be approximated as plain region. Then reflection does not change the geometry of the bundle, and the proof for this situation remains the same as for the bundle of trajectories with no reflections. Hence,p(y|x)exists for allx,y∈Q.For convex bodies, the positivity ofp(y|x)is obvious, all the points are reachable by a trajectory with no reflections.The symmetry of the probability density function follows from the uniformity of the distribution of the directions and reversibility of a billiard trajectory due to the reflection law: the angle of incidence is equal to the angle of reflection. Therefore, all the assumptions onp(y|x)are satisfied, and the distribution of pointsxigenerated by the BW algorithm tends to the uniform distribution on Q.□Assume Q is a bounded and open set, the boundary of Q is piecewise smooth and for allx,y∈Qthere exists a piecewise-linear path such that it connects x and y, lies inside Q and has no more than B linear parts (B is an arbitrary positive integer). Then the distribution of pointsxigenerated by the BW algorithm tends to the uniform distribution on Q in the same sense as inTheorem 1.Again, the algorithm is well defined: with probability one a pointxi+1≠xiis found for arbitraryxi∈Q.All the constraints on Q are important. The existence of a piecewise-linear path implies connectedness and guarantees that, starting from any point, we can reach a measurable neighborhood of any other point in Q. Boundedness is necessary to define the uniform distribution on Q and to prevent the trajectories to go to infinity. Openness allows us to connect any two points with a tube of nonzero measure. Hence, there exists a piecewise linear trajectory connecting two arbitrary points.ConsiderpN(y|x), the probability density function ofPN(A|x). The inequalitypN(y|x)>0holds for all integerN>B. The equalityp(xi+1|xi)=p(xi|xi+1)(reversibility) holds for every pair of consecutive points due to the reflection law: the angle of incidence is equal to the angle of reflection. Therefore,pN(y|x)=pN(x|y).Hence, the distribution of the subsequencex0,xN,x2N,…, tends to the uniform one forN>B. The same is true for every subsequencexi,xN+i,x2N+i,…. Since all the subsequences have asymptotically uniform distribution, the distribution of pointsxigenerated by the BW algorithm tends to the uniform distribution on Q.□There exist plenty of nonconvex domains that satisfy the conditions of Theorem 2. For instance, an estimate of B for the toroid is given in Subsection 4.8. Note that the constant B characterizes the geometry of Q.

@&#CONCLUSIONS@&#
