@&#MAIN-TITLE@&#
A fuzzy model for managing natural noise in recommender systems

@&#HIGHLIGHTS@&#
Focus on natural noise management in collaborative filtering recommender systems.The natural noise management is improved through fuzzy tools.The proposal detects the noisy ratings by analysing the user's and item's tendencies.Noisy ratings are corrected by predicting their value with a noise free dataset.The proposal is evaluated on three widely-used recommendation datasets on movies domain and it shows improvements compared with other techniques.

@&#KEYPHRASES@&#
Recommender systems,Natural noise,Fuzzy logic,Computing with words,

@&#ABSTRACT@&#
E-commerce customers demand quick and easy access to products in large search spaces according to their needs and preferences. To support and facilitate this process, recommender systems (RS) based on user preferences have recently played a key role. However the elicitation of customers preferences is not always precise either correct, because of external factors such as human errors, uncertainty and vagueness proper of human beings and so on. Such a problem in RS is known as natural noise and can bias customers recommendations. Despite different proposals have been presented to deal with natural noise in RS none of them is able to manage properly the inherent uncertainty and vagueness of customers preferences. Hence, this paper is devoted to a new fuzzy method for managing in a flexible and adaptable way such uncertainty of natural noise in order to improve recommendation accuracy. Eventually a case study is performed to show the improvements produced by this fuzzy method regarding previous proposals.

@&#INTRODUCTION@&#
The development of the e-commerce has made available huge quantities of information and items that customers cannot filter effectively. Therefore, the facilitation of finding out quick and easily items that fits their preferences and needs is an important challenge nowadays. Recommender systems (RS) are probably the most successful tool to support personalised recommendations [1,2]. Currently, they are widely used in different scenarios like e-commerce [3], e-learning [4,5], e-government [6], tourism [7,8], web pages [9], and digital games [10].Different approaches have been used in RS, being the content-based (CBRS) [11] and the collaborative filtering (CFRS) [1] the most widespread. CBRS methods are based on items’ descriptions to generate the users’ recommendations, meanwhile CFRS have performed this task just using users ratings about items.CFRS are currently the most popular type of RS in real world because they perform very well even when items descriptions are not available. In spite of this, the necessity of customers preferences has produced some problems that limit their performance, such as cold start and sparsity[1,12], and more recently new related problems regarding the quality of the rating data [13–15]. Specifically, Ekstrand et al. [16] pointed out that the rating elicitation process is not error-free, hence the ratings can contain noise. They mentioned that such a noise, previously coined natural noise in [17], could be caused by human error, mixing of factors in the rating process, uncertainty and other factors. They stated that its detection and correction should provide more accurate recommendations.Thereby several approaches have been introduced for managing these rating inconsistencies in recommendation scenarios depending on the information available, such as user dependent approaches [14], item-attributes dependent approaches [18], and also approaches that manage natural noise only using the rating values [15]. They all perform generally better that base algorithms, but they present an important limitation to deal with inherent uncertainty and vagueness of preferences because they solely represent and manage them by means of crisp values that may imply lack of robustness.Therefore, this paper aims at developing a more flexible approach for dealing with natural noise in RS, that properly models such vagueness and uncertainty by means of fuzzy tools such as fuzzy sets [19], fuzzy linguistic approach [20,21] and computing with words [22,23] that have provided successful results modelling that type of uncertainty in other problems [24–26]. Hence, the main objective of this paper is to improve accuracy of RS by managing natural noise with a novel fuzzy-based method that manages the uncertainty present in natural noise by using fuzzy tools [19] that provide a greater flexibility in the characterisation process of elements in the recommendation system, leading to improvements in the recommendation accuracy.The remainder of this paper is structured as follows. First, Section 2 provides the required background for the current research. Section 3 focuses on the novel fuzzy approach for dealing with natural noise in CFRS. Section 4 then presents an experimental procedure to evaluate the performance of the approach in relation to the previous works. Finally, Section 5 concludes the article and remarks further work.This section provides the required background for the current research, including basics about CFRS, a review of natural noise processing in CFRS, and a description of the fuzzy logic tools used in the proposal.A recommender system (RS) has been defined as “any system that produces individualised recommendations as output or has the effect of guiding the user in a personalised way to interesting or useful objects in a large space of possible options” [27]. Therefore, the main tasks of a RS are: (i) to gather information about the users’ needs and interests, and (ii) to present the items that might satisfy such needs and interests. Therefore, the recommendation problem can be formally defined as finding the most suitable item, or set of items, for a target user, which maximises the rating prediction:(1)Recommendation(I,uj)=argmaxik∈I[Prediction(uj,ik)]being I={i1, …, in} the set of all the items and Prediction(uj, ik) is a function to predict how satisfied would be the user ujwith the item ik, regarding the data available about ujand ik.Different approaches have been proposed in the literature to recommend, such as content-based [28,29], knowledge-based [30], or demographic-based [31]. However, collaborative filtering (CFRS) is the most widespread approach in RSs [1,2,16,32], because of its ability to provide effective recommendations only requiring minimal information [33]. This information is usually composed by explicit or implicit feedback from the users. This work is focused on CFRS with explicit feedback preferences,ruj,ik(see Table 1), which are given by user's preference values over a subset of items.Among the approaches for CFRS, two pioneer and yet effective methods are the user-based and item-based collaborative filtering approaches [34]. Both methods rely on the nearest neighbours algorithm. Due to the fact that, both represent key methods in the CFRS research, both of them will be used as the base for the evaluation of the natural noise fuzzy approach proposed in this paper.Additionally, it will be also used two slope one methods, proposed by Lemire and Mclachlan [35], which represent popular and widely used approaches due to their simplicity and appropriate performance [36,37].Several authors have pointed out that the user preferences in RS could be inconsistent due to several reasons [17]. These inconsistencies have been classified in two main groups: (i) malicious noise, when the inconsistencies are intentionally inserted to bias the recommendation [38], or (ii) natural noise, when the inconsistencies appear without malicious intentions [39]. While the malicious noise received much attention since the beginning of the use of RS [40,41], natural noise has attracted less attention from researchers.The concept of natural noise was introduced by O’Mahony et al. [17], in which the authors focus on discovering noisy ratings, both malicious and natural noisy. Amatriain et al. [39] performed a user study to obtain a better understanding about how natural noise tends to appear. Afterwards in [42] they propose strategies to correct the inconsistent preferences. More recently, Pham and Jung [14] proposed the use of item attributes, such as genre, actors, or director, in the case of movies, to detect and correct natural noisy ratings. They focus on finding a preference model based on this information for each user, and then identify as anomalous those positive ratings that do not match the model. The inconsistent ratings are then corrected using the information associated to other users identified as experts.While the previous methods focus on the detection of noisy ratings, Li et al. [13] propose the discovery of noisy but non-malicious users by detecting user's self-contradictions, following the principle that highly-correlated items should be similarly rated. This study focuses on noise detection at user level, which could not be detailed enough in some scenarios. In this direction, Yera et al. [15] proposes a method for correcting noisy preferences that only relies on the ratings and it processes them at a rating level. This approach follows the principle that users and items have their own tendency giving or receiving ratings. Once the tendencies have been identified, the ratings that contradict such tendencies can be classified as possibly noisy.All previous methods manage natural noise in CFRS in different ways, for instance O’Mahony et al. [17] and Li et al. [13] remove noisy information from the dataset. Others use additional information beyond the rating matrix, such as Pham and Jung [14] and Amatriain et al. [42]. Eventually Yera et al. [15] corrects ratings without additional information.A common limitation of the natural noise processing methods is their rigid management of the noise. As proved in other domains [43,44], the noise cannot be properly managed just like that, due to its inherent uncertainty and vagueness. Therefore, this paper presents an approach that properly manages these features by using fuzzy tools based on fuzzy logic and fuzzy linguistic approach. These approaches have risen to facilitate the information modelling and enhance the reliability and flexibility of classical models. This approach will focus on the natural noise correction just using ratings, and leads to an improvement in the recommendations.There are certain real world concepts that cannot be defined in a precise way, such as old person, comfortable seat or good taste. Fuzzy sets and fuzzy linguistic approach [19–21] allow to model uncertain or vague information, through the definition of a fuzzy set over the universe of discourse. Fuzzy sets were proposed by Zadeh [45] to extend the notion of a set by introducing the degree of membership of elements. This establishes a correspondence between the elements of the universe of discourse X into the interval [0, 1], which is given by a membership function:μA˜:X→[0,1]This way, a fuzzy setA˜defined over the domain X is represented by a set of pairs of the element x and its membership:(2)A˜=(x,μA˜(x))x∈X,μA˜(x)∈[0,1]Once defined a fuzzy set, the notions of intersection and union over traditional sets are extended to be defined for fuzzy sets [46,47].A straightforward and natural tool to model inherent uncertainty and vagueness or characterise preferences is the use of linguistic descriptors. The fuzzy linguistic approach [19,21] based on the fuzzy sets theory [46] provides a direct way to represent and manage such an uncertainty. The use of linguistic information implies to operate with such a type of information. Hence, different computational models and methodologies have been presented in the literature to operate with linguistic information, within the fuzzy theory stands out the Computing with Words (CW) methodology whose roots are based on the fuzzy logic and fuzzy linguistic approach, and provides a direct way to accomplish linguistic computational processes [22,48]; finally it enhances the reliability and flexibility of crisp models to deal with uncertainty with linguistic information [49].This paper applies previous fuzzy tools to the natural noise management process, by applying them to user, item and rating profiling.Natural noise in RS may bias recommendations, here it is introduced a new fuzzy approach to deal with it that unlike previous rigid proposals, this new approach uses fuzzy tools for managing in a more flexible way the inherent uncertainty of customers preferences/needs. The general scheme of this fuzzy approach for managing natural noise is depicted in Fig. 1(amplified in Figs. 2, 5a and 6) and consists of the following steps:(a)Fuzzy profiling: To manage the uncertainty of ratings, they are fuzzyfied and represented by fuzzy linguistic labels to obtain the fuzzy profiles for users, items and ratings.Noise detection: From the previous fuzzy profiles, the ratings are classified as noisy or not noisy, performing first a pre-filtering step that discards unclear profiles and then a noise classification process is applied to.Noise correction: Ratings classified as noisy are processed to be corrected if necessary.Output: It is a database free of natural noisy ratings which can be used in the recommendation process to improve the recommendation results.Following sections describe in further detail previous steps. But for the sake of clarity, first it is introduced the notation used in the fuzzy approach:•U is the set of users u in the database, U={u1, …, um}.I is the set of items i in the database, I={i1, …, in}.ruiis the rating for user u and item i.S={low, medium, high} is the set of fuzzy labels to characterise ratings.Ruis the set of ratings associated to user u, also applicable to Rifor the item i, and Ruifor the rating rui.pRuis the fuzzy profile associated to user u (also applicable topRi(for the items i), andpRui(for the rating rui)).pRu*is the corrected fuzzy profile (also applicable topRi*andpRui*).pRu,l*is the membership value of a corrected profile to a given label l∈{low, medium, high}.R− is the set of ratings referred to a given user, item or rating.pR−*is the corrected profile associated to a given user, item, or rating.d(pR−*,pR•*)is the distance between profilespR−*andpR•*.nuiis the new rating prediction for user u and item i.rui*is the finally corrected rating.The main idea of our proposal is the proper managing of the vagueness of user's preferences and their possible noise in the elicitation process. The first step of the fuzzy approach consists of a fuzzy linguistic representation of ratings, producing user's, item's and rating's fuzzy profiles that will be then transformed by using CW into modified profiles that boost their tendencies in a flexible way. These modified profiles will be used to characterise ratings as noisy or not noisy (see Fig. 2).Consequently, membership functions that characterise the ratings over its universe of discourse are defined. These functions are respectively associated to the fuzzy labels S={low, medium, high}, whose fuzzy semantics are shown in Fig. 3.Remark 1The rating domain is specific to the recommendation problem, the most common one is from one to five stars, but could be easily extended to other domains.Once the ratings are represented by fuzzy linguistic terms [20], they are used to build the users’, items’, and ratings’ profiles. The aim of the profiles is to highlight the rating tendency of each element and allow a deeper and more flexible analysis.Specifically, a user's profilepRuis computed in terms of the fuzzy representation of user's ratings denoted by Ru(see Eqs. (3) and (4)).(3)μlow(Ru)=∑rui∈Ruμlow(rui)|Ru|,μmedium(Ru)=∑rui∈Ruμmedium(rui)|Ru|,μhigh(Ru)=∑rui∈Ruμhigh(rui)|Ru|(4)pRu=(μlow(Ru),μmedium(Ru),μhigh(Ru))For items their profiles are built similarly to users and in the rating profile,pRui, for rating rui. It is only used the rating ruiitself, i.e., Rui={rui}.This representation facilitates an initial tendency characterisation of the profiles. According to the terms defined in Fig. 3 and the impossibility of having high membership values for the three terms, it is proposed six different tendencies for the profiles:1.Low profiles: Profiles with high membership values for μlow(Ru) or μlow(Ri).Medium profiles: Profiles with high membership values for μmedium(Ru) or μmedium(Ri).High profiles: Profiles with high membership values for μhigh(Ru) or μhigh(Ri).Low–medium profiles: Profiles with high membership values for μlow(Ru) and μmedium(Ru) (for users), or μlow(Ri) and μmedium(Ri) (for items).Medium–high profiles: Profiles with high membership values for μmedium(Ru) and μhigh(Ru) (for users), or μmedium(Ri) and μhigh(Ri) (for items).Low–high profiles: Profiles with high membership values for μlow(Ru) and μhigh(Ru) (for users), or μlow(Ri) and μhigh(Ri) (for items).However, in some occasions profiles present similar membership values for all terms,pRu≈(13,13,13),pRi≈(13,13,13), being impossible to characterise a tendency. Hence to boost tendencies and attenuate unclear cases, our approach makes use of a CW process [19,21] that transforms profiles by increasing high membership values and discarding low ones. Multiple functions can be used to model this behaviour, as depicted in Fig. 4, however, the most suitable for this modification is f1, given that it performs a softer modification of the values above the k value. The function f1 has the parameter k, whose value must be greater than13to allow certain flexibility. In this case it is set k=0.35.Once the transformation function has been defined, Eq. (5) shows how to generate the modified profiles through the function f1. For the sake of clarity in the rest of the work, the membership value of a modified profile to a label l∈S is denoted aspR−,l*.(5)pR−*=(pR−,low*,pR−,medium*,pR−,high*)=(f1(μlow(R−)),f1(μmedium(R−)),f1(μhigh(R−)))Remark 2In the case of a rating profile, the function f1 does not alter the ratings’ profiles, given that they are composed by just one rating value, and thenpRui*=pRui.Once it has been obtained the modified profiles it is necessary to check if ratings ruiare noisy by analysing the rating tendency of its user u and item i (see Fig. 5a).Consequently, in the noise detection phase, the profilespRu*,pRi*andpRui*are computed for the user, the item, and the rating, respectively, and used to determine whether the rating matches the user's and item's tendencies (the rating is classified as not noisy in such a case), or it lies out of the tendency that it should follow (in this case the rating may be noisy). Keeping in mind this behaviour, the noise detection phase consists of two main steps (graphically in Fig. 5b):1.Rating pre-filtering: Ratings are analysed to determine whether it is eligible for the noise classification step by comparing the user's and item's profiles with a distance function, and determining if they are close enough.Noisy rating classification: Each rating initially included in this phase compares its profile with the user's and item's profile. If the rating's profile is far enough from both of them, it is classified as noisy.These steps are further detailed in the sections below.For detecting noisy ratings it is analysed the rating tendency of both user, u, and item, i, associated to the rating, ruiunder study. Specifically, it is interesting to search for those cases in which the user's rating tendency is similar to the item's rating tendency. In these cases, searching for natural noise makes sense, since a rating that lies out of a matching user-item rating tendency is prone to be noisy. On the other hand, when the user's and item's rating tendencies do not match, there is no clear rating tendency that the rating should follow, therefore it is difficult to detect natural noise in those cases.Therefore, when analysing the rating rui, it is compared the user's and the item's rating tendency to determine if they are similar enough by using the δ1 threshold.(6)d(pRu*,pRi*)<δ1→ruiiselegiblefornoiseclassificationThere are different similarity measures.11As the similarity between two objects can be defined from a given distance between those objects, we will use distance function as synonym of dissimilarity measure.In Appendix A there is an analysis about the most widespread similarity measures that justifies the use of the Manhattan distance, Eq. (7), to compare the profiles in our proposal.(7)d(pRu*,pRi*)=∑l∈S|pRu,l*−pRi,l*|<δ1It is necessary to define the δ1 threshold value to decide at what point the user's and item's profiles are similar enough. With this aim, in Appendix B is shown that the valued(pRu*,pRi*)are always in the interval [0,2], hence it is set δ1=1 in order to consider similar profiles those ones whose dissimilarity is lower than the 50% of the possible distance values (see Eq. (7)).Remark 3Additional experiments were executed to empirically find the best value for the parameter δ1, concluding that for δ1=1 the proposal obtains a similar performance to the optimal value.In certain cases the user and/or the item do not show a clear tendency, according to the six possible tendencies presented previously. This kind of profile is called variable profile. Regarding the profile definition explained in Section 3.1, the fuzzy transformation function f1 facilitates the detection of these particular profiles as those having zero membership for all the labels (see Eq. (8)). For these cases, it is difficult to make assumptions about the tendency that the rating should follow, thus the ratings associated to variable profiles are not candidates for the noise detection and correction, and they are not then checked according to Eq. (6).(8)pRx*=(0,0,0)→pRx*isvariableAfter the ratings having similar user's and item's profiles are detected, the next step is to analyse, just for these ratings, the rating value and determine whether it is noisy or not. In these cases, the rating's profile should be close to the corresponding user's or item's profiles to consider the rating as not-noisy. In other words, a not-noisy rating should be supported by the user's or the item's rating tendency. However, when the rating does not follow either the user's or the item's rating tendencies, it is prone to be noisy.The user, item and rating profiles represent the rating tendencies, it is then checked how far is the closest of both user's and item's profiles to the rating's profile and compare the distance with δ2 threshold, to decide whether the rating is noisy or not:(9)min(d(pRu*,pRui*),d(pRi*,pRui*))≥δ2→ruiisnoisyRegarding the δ2 threshold, similarly to δ1 threshold, its value is set to one, since the rating's profile is defined similarly to user's and item's profiles. Hence, δ2=1.The result of this phase is a classification of all ratings as noisy or not noisy.The noisy ratings have been already detected, the goal is to correct them for decreasing the noise (see Fig. 6).Our proposal not only fixed noisy ratings but also it provides a noisy degree of each rating that makes much more flexible and adaptable the rating correction. Therefore ratings with a low degree of noise should be slightly modified meanwhile ratings with a high degree of noise should be greatly modified. To define the noise degree of a noisy rating, it is needed to use the normalised Manhattan dissimilarity [50] between profiles:(10)dissimilarity(pRx*,pRy*)=d(pRx*,pRy*)−dmindmax−dmin=d(pRx*,pRy*)−1wherepRx*andpRy*are the two profiles being compared, and dminis the minimum value distance between two profiles. As the profiles distances are compared with δ2 threshold, dmin=1. dmaxis the maximum value of the distance between profiles, which in our context is dmax=2, as shown in Appendix B.Definition 1LetpRui*,pRu*andpRi*be the rating, user and item profiles. The noisy degree of the noisy rating is defined as the dissimilarity between profiles:(11)NoiseDegreerui=T(dissimilarity(pRu*,pRui*),dissimilarity(pRi*,pRui*))being T the t-norm between the user-rating and the item-rating profiles dissimilarity.In our context, the minimum is used as the t-norm [51].Once it is known the noise degree of the rating, rui, a new rating value, nui, for the same user and item is predicted, through a traditional CFRS using only the not noisy ratings. Finally, noisy ratings are corrected as follows:(12)rui*=rui*(1−NoiseDegreerui)+nui*NoiseDegreeruiwhere ruiis the original value of the rating, nuiis the rating prediction for user u and item i by using the available data without the noisy ratings, andNoiseDegreeruiis the noise degree of the rating being corrected.The correction is performed to all noisy ratings providing a de-noised dataset that can be used in the RS to offer more accurate recommendations. Because of this approach does not need additional information (only the original dataset), the noise detection and correction processes can be applied as a pre-processing step, prior to compute recommendations requested to the RS.The previous fuzzy approach aims at improving recommendations of CFRS, but it is necessary to clarify the architecture and the implementation of this approach to develop a RS with this approach.Fig. 7shows the integration of the fuzzy approach managing natural noise in the general scheme of a RS. It seems reasonable to facilitate such an integration with an existing RS that the system would be wrapped by the natural noise approach. Thus, the ratings are analysed and corrected prior to the recommendation computation. It is clear that the noise correction should not be applied every time that the wrapped recommender system is used, but its application should be carried out by an off-line process from time to time in order to clean the rating database of natural noisy ratings.The implementation of this fuzzy natural noise management method is available in the website http://sinbad2.ujaen.es/works/recommender-systems/nn-fuzzy in which all source code is accessible and licensed under the terms of the GNU General Public License.22http://www.gnu.org.The UML design model for a better understanding of the performance of this code is shown in Fig. 8, in which the different packets developed for each phase of the method are briefly described.This section describes the experiments developed to evaluate the effect of our proposal on the improvement of the recommendation accuracy. Hence our proposal is specified and then compared with other methods that deal with noise in the ratings. First, the datasets (MovieLens, MovieTweeting and Netflix Tiny) in which experiments have been performed are detailed in Section 4.1. Then a specification of the fuzzy method applied in the case study is provided in Section 4.2. After that, the evaluation protocol and the experimental setup are detailed in Sections 4.3 and 4.4. The discussion over the results is included in Section 4.5, and finally a further statistical analysis about the results is presented in Section 4.6.To perform a complete case study, the methods are evaluated using three well-known datasets in the field of CFRS: MovieLens33http://grouplens.org/datasets/movielens/.(ml-100k), MovieTweetings44https://github.com/sidooms/MovieTweetings, version of November 2013.(mt), and Netflix Tiny55Netflix Tiny is a small version of Netflix dataset, available in the Personalised Recommendation Algorithms Toolkit (PREA) website http://www.prea.gatech.edu/.(netflix-t) datasets. Each dataset has specific features (see Table 2) that affect the performance of different techniques, such as the rating domain, the sparsity or the relation between the number of users and items.According to the general scheme introduced in Fig. 1, the specification of the fuzzy method presented for this case study is the following one:Ratings for MovieLens 100k and Netflix Tiny datasets assessed in [1,5] are transformed to fuzzy representations as follows:(13)low(rui)=1if1≤rui≤1.5−2*rui+4if1.5≤rui≤20if2≤rui≤5(14)med(rui)=0if1≤rui≤1.52*rui−3if1.5≤rui≤21if2≤rui≤3−rui+4if3≤rui≤40if4≤rui≤5(15)high(rui)=0if1≤rui≤3rui−3if3≤rui≤41if4≤rui≤5Ratings of MovieTweeting dataset are assessed in [0,10] then:(16)low(rui)=1if0≤rui≤3−rui+4if3≤rui≤40if4≤rui≤10(17)med(rui)=0if0≤rui≤3rui−3if3≤rui≤41if4≤rui≤6−rui+7if6≤rui≤70if7≤rui≤10(18)high(rui)=0if0≤rui≤6rui−6if6≤rui≤71if7≤rui≤10Now the profiles for each user, item and rating are obtained from their set of ratings in the following way:(19)μlow(R•)=∑rui∈R•μlow(rui)|R•|μmed(R•)=∑rui∈R•μmed(rui)|R•|μhigh(R•)=∑rui∈R•μhigh(rui)|R•|The CW process to boost tendencies and remove unclear cases are carried out by using function f1 (see Fig. 10), obtaining the modified profiles,pR•*:The ratings are classified as noisy or not noisy. First in the pre-filtering process profiles without a clear tendency are discarded (variable profiles).(20)pR•*=(0,0,0)→pR•*isvariableRatings whose user and item profiles are too far,d(pRu*,pRi*)>δ1=1(being d Manhattan distance), are discarded due to an unclear user-item rating tendency, otherwise are eligible for the noise detection phase in which they are classified as noisy or not noisy according to Eq. (9)Each noisy rating obtained in the noise detection phase is corrected by computing its noisy degree according to Eqs. (10) and (11), and obtaining a corrected rating,rui*, by Eq. (12) in which it is used a new rating nui, predicted by using UKNN predictor with: (i) neighbourhood size: 60, (ii) similarity measure: Pearson correlation coefficient and (iii) prediction method: weighted average.The datasets are prepared according to the procedure proposed by Gunawardana and Shani [52]. To build training and test sets, they suggest to select a group of users from the original dataset and to randomly hide nuratings for each user u, where nuis also randomly selected for each user. These hidden ratings compose the test set, and the remaining ones are chosen to be the training set. To ensure that the results are not biased due to the partitions constructed, the partitioning process is performed several times and the results are averaged. Using the training and the test set, the methods’ performance is evaluated through the following steps:1.To apply a noise correction method over the training set, obtaining the modified training set.To recommend with a given recommendation method using the modified training set, which is a de-noised version of the original training set.To evaluate the recommendation results using different evaluation measures.To compare different natural noise approaches based on their recommendation results.Several evaluation metrics have been used to evaluate CFRS in the literature, highlighting different aspects of the recommendations. In this case we use two widespread metrics [52]: the Mean Absolute Error (MAE), which focuses on how well the recommendation technique predicts the hidden ratings; and the F1 score, which combines the precision and recall of the recommendations to evaluate how accurate is the recommender system at recommending liked items. The F1 score can be measured at different recommendation list sizes, in this case it is computed for the top 5 (F1@5) and top 10 (F1@10).Our evaluation also depends on a rating prediction approach, which is used in the second step of the evaluation. In this case four widespread CFRS methods are employed, previously referred in Section 2.1: the user-based CFRS, the item-based CFRS [34], the weighted slope one, and the bi-polar slope one [35]. In the rest of the case study they will be respectively named as UKNN, IKNN, SlopeOne, and BPSlope. For UKNN and IKNN methods, Pearson's correlation coefficient is used as similarity measure. Also for UKNN and IKNN, the number of neighbours in the prediction calculation are fixed to k=60.For evaluating our proposal, it is compared with previous works. Specifically, it is compared with the baseline, which computes the recommendations without performing a noise preprocessing; and with three approaches conceived to process natural noise. Therefore, five different methods for dealing with noise in recommender systems are considered:•Base: The recommendation predictor results are computed with the original dataset. The Base method is included in the experiments to establish a minimum performance of the noise preprocessing methods.DiffBased: It eliminates the ratings whose difference with a new prediction for the same user and item is higher than one unit in the rating scale [17].NNMU: It eliminates the top noisiest users, which are detected by discovering contradictions when they rate similar items [13]. In the experiments, up to ten users are eliminated. In the case that a prediction is requested for an eliminated user, the global rating bias is assigned [53].NN-Crisp: It corrects ratings whose value lies out of the user-item detected category and the difference between the original and a prediction exceeds one [15].NN-Fuzzy: It corrects ratings detected as noisy by checking the distances between the user's, item's, and rating's profiles, which are defined using fuzzy sets. The prediction of new ratings nuiis performed using the user-based CFRS approach.

@&#CONCLUSIONS@&#
