@&#MAIN-TITLE@&#
GPCR–drug interactions prediction using random forest with drug-association-matrix-based post-processing procedure

@&#HIGHLIGHTS@&#
The evolutionary feature of GPCR sequence and the wavelet-based molecular fingerprint feature of drug are integrated to form the discriminative feature for a GPCR–drug pair.A novel drug-association-matrix-based post-processing procedure is developed to reduce potential false positive or false negative of predictions.The implemented webserver, called TargetGDrug, is freely available for academic use at http://csbio.njust.edu.cn/bioinf/TargetGDrug.

@&#KEYPHRASES@&#
GPCR–drug interactions,Random forest,Drug association matrix,Machine learning,

@&#ABSTRACT@&#
G-protein-coupled receptors (GPCRs) are important targets of modern medicinal drugs. The accurate identification of interactions between GPCRs and drugs is of significant importance for both protein function annotations and drug discovery. In this paper, a new sequence-based predictor called TargetGDrug is designed and implemented for predicting GPCR–drug interactions. In TargetGDrug, the evolutionary feature of GPCR sequence and the wavelet-based molecular fingerprint feature of drug are integrated to form the combined feature of a GPCR–drug pair; then, the combined feature is fed to a trained random forest (RF) classifier to perform initial prediction; finally, a novel drug-association-matrix-based post-processing procedure is applied to reduce potential false positive or false negative of the initial prediction. Experimental results on benchmark datasets demonstrate the efficacy of the proposed method, and an improvement of 15% in the Matthews correlation coefficient (MCC) was observed over independent validation tests when compared with the most recently released sequence-based GPCR–drug interactions predictor. The implemented webserver, together with the datasets used in this study, is freely available for academic use at http://csbio.njust.edu.cn/bioinf/TargetGDrug.

@&#INTRODUCTION@&#
Protein–ligand interactions are indispensable for biological activities and play important roles in virtually all biological processes (Alberts, 2008; Kokubo et al., 2011; Gao and Skolnick, 2012). The accurate identification of protein–ligand interactions is of significant importance for both protein function analysis and drug design (Schmidtke and Barril, 2010; Yang et al., 2013). Much effort has been made to reveal the intrinsic mechanism of protein–ligand interactions (Roy and Zhang, 2012; Nagarajan et al., 2013), and many effective methods (Glaser et al., 2006; Le Guilloux et al., 2009; Yu et al., 2013a,b) have been developed during the past decades.Membrane proteins are proteins that interact with biological membranes. Membrane proteins are encoded by 20–35% of genes and fulfill many essential functions in the eukaryotic cell (Krogh et al., 2001). Previous studies have demonstrated that membrane proteins are implicated in many diseases because they are positioned at the apex of signaling pathways that regulate cellular processes (Hopkins and Groom, 2002; Kunji et al., 2005). G-protein-coupled receptors (GPCRs) are plasma membrane proteins that feature a common topology consisting of seven-transmembrane helices. As the largest family of cell surface receptors (Zhang and Zhang, 2010), GPCRs are involved in many diseases, such as cancer, diabetes, neurodegenerative, inflammatory and respiratory disorders, and are pharmacologically important target proteins for new drug development (Roth et al., 1998; Chou, 2005a,b). In fact, GPCRs have been the targets of approximately 40% of all modern medicinal drugs (Chou, 2005a,b; Xiao et al., 2013). Hence, accurately identifying GPCR–drug interactions is of significant importance for modern drug design and development (Knowles and Gromo, 2003).Considerable effort has been made to predict protein–drug interactions, and many promising methods have been developed. Roughly speaking, according to the features they used, these methods can be divided into structure-based and sequence-based methods. The structure-based methods, such as docking simulations (Chou et al., 2003; Cheng et al., 2007) and literature text mining (Zhu et al., 2005), are structure-based and require protein tertiary structures as inputs to predict protein–drug interactions. The sequence-based methods, such as iGPCR-Drug (Xiao et al., 2013), are computational methods for predicting interactions between GPCRs and drugs only based on the corresponding sequence-based features.Among the above-mentioned two methods, the structure-based methods directly predict the GPCR–drug interactions with ground-truth 3D structures or predicted structure (Yu et al., 2015), they can provide deeper insight into the underlying mechanism of interactions if compared with non-structural prediction methods (Yamanishi et al., 2008). However, the intrinsic hydrophobicity of GPCRs makes resolving their tertiary structures a time-consuming and costly work with regular wet-lab experimental methods. During the past decades, much progress has been made in resolving crystal structures of GPCRs (Granier and Kobilka, 2012; Tate, 2012). In addition, as there are lots of highly conserved residues in GPCR sequence (Tate, 2012), many homologous techniques (Chou, 2005a,b; Eswar et al., 2006; Worth et al., 2011) can help acquire the 3D modeling of GPCR by using various bioinformatics tools (Chou, 2004), such as BLAST (Schaffer et al., 2001). Despite of the big progress made in resolving 3D structure and 3D modelling of GPCR, currently, we still have only modest and patchy coverage of GPCR structural space. Together with the fact that the receptors (GPCRs) are rather flexible, thus resolving and/or modelling the 3D structure of a GPCR is still a very challenging task.Hence, developing a computational sequence-based method that can predict the interactions between drugs and GPCRs solely from primary GPCR sequences will be especially useful. The sequence-based methods, such as the combination of chemical structure and genomic sequence information (Yamanishi et al., 2008; He et al., 2010; Xiao et al., 2013), are popular for predicting GPCR–drug interaction recently. There are many tools for extracting the useful sequence information, such as PseAAC (Shen and Chou, 2008) (available at http://www.csbio.sjtu.edu.cn/bioinf/PseAAC/), are developed. Additionally, the chemical fingerprint information of drug is also employed by sequence-based methods for GPCR–drug interactions prediction. The most advantages of the sequence-based methods are that the prediction performance is appreciable and the prediction speed is very fast without protein structure information.He et al. (2010) and Yamanishi et al. (2010) carried out a series of studies on the prediction of GPCR–drug interactions. Their results demonstrated the feasibility of performing GPCR–drug interactions prediction from GPCR sequences. Recently, Xiao et al. (2013) developed a predictor, called iGPCR-Drug, which is a sequence-based predictor specifically designed for predicting GPCR–drug interactions. The iGPCR-Drug performs GPCR–drug interactions prediction by utilizing the combined features extracted from a GPCR–drug pair and a fuzzy K-Nearest Neighbor (FKNN) classification algorithm (Keller et al., 1985). More specifically, for a query GPCR–drug pair, iGPCR-Drug first extracts the pseudo amino acid composition feature (PseAAC) (Chou, 2001) based on the grey model theory and the Fourier-transformed 2D molecular fingerprint (FT2DMFP) (O’Boyle et al., 2011) for the GPCR sequence and the drug contained in the query pair, respectively. The two features are then combined to form the discriminative feature of the query GPCR–drug pair. Finally, a fuzzy K-Nearest Neighbor (FKNN) classification algorithm (Keller et al., 1985) is utilized to determine whether the query GPCR–drug pair is interactive.Although iGPCR-Drug achieved great success in predicting GPCR–drug interactions, we were motivated to further analyze the algorithm for three reasons. First, to the best of our knowledge, the evolutionary information contained in GPCRs, especially, highly conserved residues of GPCRs, has not been well investigated in GPCR–drug interactions prediction; second, the relationship between one drug with each other, which is one of the most important information for predicting the interactions between GPCRs with drugs, has been ignored by iGPCR-Drug; third, although iGPCR-Drug has achieved satisfactory prediction performances, there is still room for further improvement.In view of these three important issues, we developed a new sequence-based method for prediction of GPCR–drug interactions with high performance. In the proposed method, the 140-D pseudo-position-specific scoring matrix (PsePSSM) feature that encodes the evolutionary information of the GPCR sequence (Chou and Shen, 2007) and the 128-D wavelet-based molecular fingerprint (WaveletMFP) feature of the drug are combined to form the discriminative feature of a query GPCR–drug pair. The combined feature is then fed to a trained random forest (RF) (Breiman, 2001) classifier to perform the initial prediction. Finally, a novel drug-association-matrix-based post-processing procedure, which can extract the relationship information between one drug with each other, is applied to reduce potential false positive or false negative resulting from the initial prediction.Cross-validation tests and independent validation tests on different benchmark datasets demonstrate the efficacy of the proposed method. An improvement of 15% in terms of the Matthews correlation coefficient (MCC) was observed over independent validation tests when compared with the most recently released sequence-based GPCR–drug interactions predictor, i.e., iGPCR-Drug (Xiao et al., 2013), demonstrating the better generalization capability of the proposed method.To objectively evaluate the proposed method and fairly compare it with existing sequence-based GPCR–drug interactions prediction methods, two datasets that have been used in previous studies were chosen as cross-validation benchmark datasets.Each of the two benchmark datasets can be formulated as(1)V=V⁡+∪V⁡−whereV⁡+represents the positive subset that consists only of the interactive GPCR–drug pairs, whileV⁡−is the negative subset that consists of only the non-interactive GPCR–drug pairs, and the symbol∪is the union in the set theory.The first dataset, which consists of 314 interactive GPCR–drug pairs(V⁡+)(http://cbio.ensmp.fr/∼yyamanishi/pharmaco/), was constructed by Yamanishi et al. (2008, 2010),). We artificially synthesized 628 non-interactive pairs(V⁡−)with the same procedure described in (He et al., 2010). The obtained datasetV=V+∪V−contains 84 distinct GPCR sequences and 105 distinct drugs and is denoted as D84.The second benchmark dataset, which was a larger dataset collected by He et al. (2010), contains 1860 GPCR–drug pairs, among which 620 and 1240 GPCR–drug pairs constitute the positive subsetV⁡+and negative subsetV⁡−, respectively. The 620 pairs inV⁡+, which have been experimentally verified as “interactive”, were collected from the KEGG database (Kanehisa et al., 2006) at the time of writing their paper. The 1240 “non-interactive” GPCR–drug pairs inV⁡−were artificially synthesized as follows: (a) each of the pairs inV⁡+was separated into a single GPCR and drug; (b) each of the single GPCRs was re-coupled with each of the single drugs into synthesized pairs in such a way that none of the synthesized pairs appeared inV⁡+; and (c) the synthesized pairs were randomly selected until the number of selected pairs was twice the number of pairs inV⁡+. The final datasetV=V+∪V−contains 92 distinct GPCR sequences and 217 distinct drugs and is denoted as D92 for the convenience of subsequent description. However, as increasing GPCR–drug pairs are discovered and updated by the broad availability of GPCR assays and widespread drug repositioning efforts, we found that 15 GPCR–drug pairs in the positive subset of D92 are falsely labeled as “non-interactive” by checking the recently released KEGG database (Kanehisa et al., 2006). As we known, less mistaken information contained in the training dataset may lead to that a better predictor will be developed (Quince et al., 2011). Therefore, we refined D92 by moving the 15 falsely labeled GPCR–drug pairs from the negative subset to the positive subset of D92 to enhance the effectiveness of our proposed method. The obtained dataset is denoted as D92M, which consists of 635 “interactive” and 1225 “non-interactive” pairs.Note that D84 is an early constructed dataset which consists of 314 positive pairs and 628 negative pairs, while D92M is a much larger dataset built after the construction date of D84. In fact, D92M include 313 out of the 314 positive pairs in D84 and 322 newly annotated positive pairs. There are only 42 negative pairs shared by D84 and D92M. We used D84 because we need to compare the proposed method with several existing GPCR–drug interaction predictors that have been evaluated on D84.Evaluating a newly developed predictor by comparing it with existing predictors using the same datasets may potentially lead to optimistically biased results in the sense that the new predictor’s characteristics over-fit the used datasets (Boulesteix, 2010). It has become a routine procedure to evaluate the generalization capability of a predictor with an independent validation test. We therefore constructed an independent-validation dataset. The positive subset of the independent validation dataset is constructed as follows:Step 1: all protein–drug pairs that interact with any one of the 217 distinct drugs in D92M are extracted from the KEGG database (Kanehisa et al., 2006) (http://www.genome.jp/kegg/). At the time of writing, the number of extracted protein–drug pairs is 904.Step 2: all pairs, among which the protein components are not GPCRs, are removed from the extracted protein–drug pairs obtained in Step 1; whether a protein is a GPCR can be determined by searching the protein code against the GPCRDB database available at http://www.gpcr.org/7tm/.Step 3: all pairs that appeared in the positive subset of D92M are removed from the GPCR–drug pairs obtained in Step 2, and the remaining 130 interactive pairs constitute the positive subset.Furthermore, we artificially synthesized 260 non-interactive pairs to constitute the negative subset of the independent validation dataset with the same procedure used to generate the negative subset of D92M. To guarantee the independence of the validation dataset, none of the 260 non-interactive pairs appears in the negative subsets of D84 and D92M. The final independent validation dataset, denoted as Check390, consists of the 130 interactive pairs and 260 non-interactive pairs obtained above.Table 1summarizes the detailed data statistics of the three benchmark datasets. All the data listed in Table 1 can be found in Supporting information S1.One of the critical steps in designing a machine-learning based predictor is to effectively transform the targets into fixed-length feature vectors. In this study, for each GPCR–drug pair, we extracted the pseudo position specific scoring matrix (PsePSSM) feature and the wavelet-based molecular fingerprint (WaveletMFP) feature for the GPCR sequence and the drug, respectively; the feature vector of a GPCR–drug pair is then obtained by combining its corresponding PsePSSM and WaveletMFP features.The pseudo position specific scoring matrix (PsePSSM) feature encodes both evolutionary and sequence-order information of a protein sequence (Chou and Shen, 2007) and has been widely used in related protein attribute prediction problems (Yu et al., 2012, 2013a,b; Zia-Ur-Rehman and Khan, 2012; Nanni et al., 2014). We extracted PsePSSM feature of a GPCR sequence as follows:For a GPCR sequencePwithLamino acid residues, we obtained itsL×20position specific scoring matrix (PSSM), denoted asPPSSM, using PSI-BLAST (Schaffer, 2001) with default parameter settings as follows:(2)PPSSM⁡=[xi,j]i=1,2,3,…L;j=1,2,3,…,20wherexi,jrepresents the score of the amino acid residueiin the GPCR sequence being mutated to amino acid typejduring the evolution process. Note that here we use the numerical code 1, 2,…, 20 to represent the 20 native amino acid types according to the alphabetical order of their single-character codes. Then, each elementxcontained inPPSSMis normalized by the logistic functionf(x)=1/(1+e−x)(i.e.,xi,jNormalized=1/(1+e−xi,j)) and the normalized PSSM is obtained as follows:(3)PPSSMNormalized=[xi,jNormalized]i=1,2,3,…L;j=1,2,3,…,20Next, we extract fixed-length PsePSSM feature of a GPCR sequence from its correspondingPPSSMNormalizedas follows:First, the 20-D PSSM composition feature, denoted asFPSSM¯, is calculated fromPPSSMNormalizedas follows:(4)FPSSM¯=(x¯1,x¯2,…,x¯20)Twhere(5)x¯j=1L∑i=1Lxi,jNormalizedlnFPSSM¯,x¯jrepresents the average score of the amino acid residues in a GPCR sequence being mutated to amino acid typejduring the evolution process.As shown in Fig. 1, we extract the sequence-order information contained inPPSSMNormalizedby calculating the correlation factor of each column of aPPSSMNormalizedas follows:(6)θξ=(θ1ξ,θ2ξ,…,θ20ξ)Twhereθjξ=1L−ξ∑t=1L−ξ(xt,jNormalized−xt+ξ,jNormalized)2,1≤j≤20,0≤ξ≤G, andG<L. The scalar quantityθjξis the correlation factor obtained by coupling the ξ-most contiguous scores inPPSSMNormalizedalong the GPCR sequence for the amino acid typej.Finally, the PsePSSM feature is obtained by combiningFPSSM¯andθξas follows:(7)fPsePSSMξ=(FPSSM¯θξ)=(x¯1,x¯2,⋯,x¯20,θ1ξ,θ2ξ,⋯,θ20ξ)TNote thatfPsePSSMξdegenerates toFPSSM¯whenξ=0.According to the original definition of PsePSSM given by Chou and Shen (2007), a protein sequence can be represented by a set of PsePSSM feature vectors, denoted as{fPsePSSMξ}ξ=0G, with different values ofξ. However, two disadvantages exist if the feature information represented by{fPsePSSMξ}ξ=0Gis directly utilized (Yu et al., 2013a,b): first, the combined feature vector will contain redundant information, as each PsePSSM encodes aFPSSM¯; second, the dimensionality of the combined feature vector is very high. To avoid these two disadvantages, a more compact PsePSSM feature vector was proposed as follows (Yu et al., 2013a,b):(8)fPsePSSMG=(FPSSM¯θ1⋮θG)Accordingly, the dimensionality of the compact PsePSSM feature vector represented by Eq. (8) is20+G×20. Because there is no theoretical justification for determining the optimal value ofG, we empirically set the value ofGto be 6 in this study.Molecular fingerprints are bit-string representations of molecular structures and properties (Eckert and Bajorath, 2007). Previous studies have demonstrated the efficacy of molecular fingerprints for the prediction of drug–target interactions. In this study, we also use molecular fingerprints to represent drug molecules, as reported by Xiao et al. (2013). The molecular fingerprint of a drug can be extracted as follows:For a given drug, its MOL file, which contains the detailed chemical structural information of the drug, is obtained from the KEGG database (http://www.kegg.jp/kegg/) using its drug code; then, the obtained MOL file is converted into a 2D molecular fingerprint file format using OpenBabel (O’Boyle et al., 2011) software (available at http://openbabel.org/). OpenBabel can generate four types of fingerprints: FP2, FP3, FP4 and MACCS. In this study, the FP2 fingerprint format is used. The FP2 fingerprint encodes each drug into a 256-bit hexadecimal string, among which each component is an integer between 0 and 15.As we know, the original molecular fingerprint feature may contain some noise and redundant information which may incur negative impacts to the performance of a prediction model. To remove these useless information and dig out the most discriminative feature from a drug’s molecular fingerprint (the experimental support for this claim could be found in Section 3.2), we perform single-level discrete 1-D wavelet transform (Villasenor et al., 1995) on the original 256-bit hexadecimal string. For the convenience of subsequent descriptions, a 256-bit hexadecimal string is considered as a discrete signal, denoted ass(t).The wavelet transform of a signals(t)is defined as the summation of the full time frame of the signals(t)multiplied by a scaled and shifted version of the mother wavelet functionψ(t)(Qiu et al., 2009). The coefficientCs(a,b)of the wavelet transform of the signals(t)is calculated by the formula defined as follows:(9)Cs(a,b)=1a∫0xs(t)ψ(t−ba)¯dt,⁡a∈ℝ+,b∈ℝwhereaandbrepresent the scaling and shifting values, respectively,xis the length of the signal, andψ(⋅)¯is the conjugate function of the wavelet function. The discrete wavelet transform (DWT) has the ability to decompose the signals(t), i.e., the original drug molecular fingerprint feature in this study, into coefficients at different dilations, and discard the noise contained in the original signal. The DWT can be economically implemented by computing on a dyadic grid of points (Mallat, 1989a,b; Qiu et al., 2010). In this study, we set a=2 and b=1 for DWT implementation. Consequently, there is a binary dilation of2−mand a dyadic translation ofn2−m, which can be formulated as follows:(10)ψm,n(t)=2−m/2ψ(2−mt−n)where m=1, 2,…, and n=0, 1, 2,…. The coefficientCs(a,b)of the signals(t)can then be obtained by the following formula:(11)Cs(a,b)=〈s(t),ψa,b(t)〉=2−m/2∫0xs(t)ψ(2−mt−n)¯dtFurthermore, the coefficientCs(a,b)can be divided into two parts: one is the set of approximation coefficients, denoted as{A(j)(n)}, representing the high-scale and low-frequency components ofs(t)at the j-th decomposition level; the other is the set of detail coefficients, denoted as{D(j)(n)}, representing the low-scale and high-frequency components ofs(t)(Mallat, 1989a,b; Qiu et al., 2009). An efficient algorithm has been proposed by Mallat (1989a,b); Mallat (1989a,b) to construct the approximation coefficients and detail coefficients of the DWT as follows:(12)A(j)(n)=∑k∈ℤ⁡hk−2n¯A(j−1)(k)(13)D(j)(n)=∑k∈ℤ⁡gk−2n¯D(j−1)(k)wherehandgare the high pass and low pass filters, respectively.In this study, the Haar mother wavelet proposed by Haar (1910) is utilized asψ(t)to perform the DWT on the drug molecular fingerprint feature, and the decomposition leveljis set to 1 according to our preliminary local tests. Under these configurations, the set of approximation coefficients, denoted as{A(1)(n)}, is considered as useful information, and the set of detail coefficients,{D(1)(n)}, is regarded as useless noise. Finally, we obtain the 128-D wavelet-based molecular fingerprint feature, denoted asfWaveletMFP, formed by concatenating the 128 approximation coefficients contained in{A(1)(n)}.The final feature vector for a GPCR–drug pair is the weighted combination of the PsePSSM feature and the WaveletMFP feature of GPCR and drug, respectively, contained in the pair:(14)f=(fPsePSSMGλ·fWaveletMFP)whereλis a weight value. In this study, the value ofλis set to be 0.004 after an optimization procedure performed on the training dataset over cross-validation.For a given prediction task, the performance will depend not only on the feature used but also on the classifier selection. In this study, four popular classifiers (i.e., optimized evidence theoretic K nearest neighbor algorithm (OET-KNN) (Zouhal and Denoeux, 1998; Shen and Chou, 2007), QuickRBF (Ou, 2005; Chen et al., 2011), support vector machine (SVM) (Vapnik, 1998; Fan et al., 2005; Wong et al., 2013), and random forest (RF) (Breiman, 2001; Kandaswamy et al., 2010) that have been widely used in bioinformatics fields are chosen for consideration.According to our comparison study (refer to Section 3), random forest (RF) achieves the best prediction performance with the feature developed in the above section using the benchmark datasets. In view of this, we will take RF as the classifier engine in implementation of the web server of the proposed method.The random forest algorithm (Breiman, 2001; Liaw and Wiener, 2002) is an ensemble learning method based on decision trees that adds an additional layer of randomness to bagging. Decision trees in a RF are gradually developed (trained) using a random selection of inputs and random feature selection strategy (Hamby and Hirst, 2008). In a trained RF, the decision trees then vote on the class for a given input.The randomness strategy used in RF has been demonstrated to be very effective compared with many other classifiers and is robust against over-fitting (Breiman, 2001; Liaw and Wiener, 2002). RF can be used to perform both classification and regression. In this study, a random forest classification model is used. We utilized the RF code, which is freely accessible at https://code.google.com/p/randomforest-matlab/, to evaluate and implement the proposed method. Two parameters, i.e., the number of trees to grow (nTree) and the number of dimensions randomly sampled as candidates at each split (mTry), were set to be 100 and 25, respectively.For a query GPCR–drug pair, the predicted probability of being “interactive” by a trained RF can be obtained as follows:Let nP be the number of trees in the trained RF that predict a query GPCR–drug pair to be “interactive”; then the predicted probability of being “interactive” for the query GPCR–drug pair is (nP/nTree)×100%.To further reduce predicted false positives and false negatives, we propose a post-processing procedure based on the drug association matrix (DAM). Details of the post-processing procedure are described as follows:LetV+andV−be the positive and negative subsets consisting of interactive and non-interactive GPCR–drug pairs, respectively. LetD={di}i=1NdandG={gi}i=1Npbe the set of distinct drugs and GPCR sequences that appear in the positive subsetV+, whereNdandNpare the number of distinct drugs and GPCR sequences, respectively. The drug association matrix (DAM) is aNd×Ndsymmetric matrix, among which the value of each element, denoted asDAM(i,j), measures the association degree between drugdianddj. For the convenience of later description, we termD={di}i=1Ndas the association drug set of aDAM.For any drugdianddj(i≠j)inD, the knowledge that drugdianddjinteract with the same GPCR protein is evidence that increases the likelihood that the two drugs have some type of association. Based on this hypothesis, theDAMfor a given training dataset can be calculated as follows: first, theDAMas aNd×Ndzero matrix is initialized; then, the value ofDAM(i,j)is set to be the number of distinct GPCR sequences in the positive subsetV+that interact with both drugsdianddj(i≠j); similarly, for each elementDAM(i,i)in the diagonal of theDAM, its value is set to be the number of distinct GPCR proteins that interact with drugdifound inV+. Fig. 2shows an example of how to calculate DAM according to a given GPCR–drug interaction network.We calculated theDAMon the D92M dataset. Because there are 217 distinct drugs in the D92M dataset, the obtainedDAMis a 217×217 symmetric matrix. Fig. 3plots theDAMas a gray image by transforming the value of each element inDAMto the range of [0,1].We believe that the proposedDAMreflects the knowledge of association degrees between drugs buried in a training dataset, and can be utilized as prior knowledge for post-processing to further improve the performance of GPCR–drug interactions prediction, which will be demonstrated in the subsequent experimental section.Based on the proposedDAM, we developed a post-processing procedure (PPP) that can potentially reduce predicted false positives and false negatives.LetRFmodel(f,PRFmodel)be the trained RF prediction model, wherefis the input feature vector (i.e., the combination of PsePSSM and WaveletMFP features in this study) for a query GPCR–drug pair, andPRFModelis the set of optimized model parameters.RFmodel(f,PRFmodel)outputs a real scalar value, denoted asp, representing the possibility of being interactive for the query pair. During the initial prediction, a GPCR–drug pair is marked as interactive when its predicted possibilitypis larger than the prescribed thresholdT.However, a query pair may potentially be predicted as false positive or false negative if directly applying the above-mentioned prediction modelRFmodel(f,PRFmodel). Considering this, we developed the post-processing procedure, which aims to reduce false positive or false negative for a query pair predicted by the initial prediction modelRFmodel(f,PRFmodel).Fig. 4shows the flowchart of the proposed post-processing procedure (PPP). Next, we describe the five steps of the proposed PPP to illustrate how the PPP works.Letq=<g,d>be a query GPCR–drug pair,fqbe the feature vector of the query pair,DAMbe the drug association matrix, andD={di}i=1Ndbe the association drug set of theDAM.Step 1: deciding whether the drug in a query pair exists in the association drug setThe query GPCR–drug pair are separated into a single GPCR sequence and drug, denoted asgandd, respectively.If the drugdin the query pair exists in the association drug set of theDAM, go to Step 2; otherwise, the decision can be directly made with the initial prediction modelRFmodel(f,PRFmodel). In other words, the decision is made without using the subsequent post-processing procedure when the drugdin the query pair does not exist in the association drug set. The underlying reason is that there is no corresponding knowledge of association degrees between the drugdand the other drugs in the association drug set that can be used for further post-processing.Step 2: deciding whether to perform PPPFirst, each of theNddrugs in the association set ofDAMare recoupled with the separated GPCR sequencegin the query pair into pairs:{<g,di>}i=1Nd;Second, feature vectors are extracted for all re-coupled GPCR–drug pairs:(15){fi}i=1Nd⟵FeatureExtraction({<g,di>}i=1Nd)Third, the possibilities of being interactive for all the re-coupled pairs are predicted using the trained prediction modelRFmodel(f,PRFmodel):(16){Pi}i=1Nd⟵Predict(RFmodel(f,PRFmodel),{fi}i=1Nd)LetBbe the set of those drugs in the association drug set that are predicted as interactive with the GPCR proteing:(17)B={di|Pi≥T,1≤i≤Nd}Then,Bis considered as the query-driven knowledge base that can be further used to reduce potential false positive or false negative.IfBis empty (i.e.,B=Φ), then directly make the decision according to the relationship betweenPqandTas described in Step 1, because there is no query-driven knowledge available for further post-processing; otherwise go to Step 3.Step 3: determining to reduce false positive or false negativeAccording to the non-empty query-driven knowledge baseB, we determine to reduce possible false positive or false negative as follows:If the drugdin the query pairq=<g,d>belongs toB(i.e.,d∈B), then the query pair has the possibility of being mistakenly predicted as false positive by the initialRFmodel. Hence go to Step 4 to reduce possible false positive.If the drugddoes not belong toB, then the query pair has the possibility of being mistakenly predicted as false negative by the initialRFmodel. Hence go to Step 5 to reduce possible false negative.Note that before entering Step 4 or 5, the score for each element, denoted assdi, contained inBis computed by using following sub-routine:FOR eachdi∈Bsdi=0FOR eachdj∈Bsdi=sdi+DAM(i,j)END FOREND FORThe obtained score set is denoted asS={sdi|di∈B}.Note that the larger the scoresdi, the higher the association degree between the drugdiand the other drugs contained in the query-driven knowledge baseB.Step 4: reducing possible false positiveLetsdbe the score of the drugdcontained in the query pairq=<g,d>ands⁡maxbe the maximum in the score setS={sdi|di∈B}obtained in Step 3.Ifsd<α⋅s⁡max, the query pair may possibly be mistakenly predicted as false positive by the initialRFmodeland should be reassigned as negative (“non-interactive”) as follows:(18)label(q)={non-interactive, ifsd<α·s⁡maxinteractive, elsewhereα∈(0,1)is a prescribed parameter for reducing possible false positive.Step 5: reducing possible false negativeLetB˜be the set of drugs whose scores are the first m-maximal inS, wheremis a prescribed parameter for reducing possible false negative.Then, we reduce possible false negative as follows: for eachdj∈B˜, if the drugdin the query pairq=<g,d>has a non-zero association degree withdj, then the query pair may have the possibility of being mistakenly predicted as false negative by the initialRFmodeland should be reassigned as positive (“interactive”).(19)label(q)={interactive, ifdhasnon−zeroassociationdegreewitheverydruginB∼non-interactive, elseIt has not escaped our notice that the proposed PPP may also potentially reassign a true positive as a false negative, and a true negative as a false positive. Nevertheless, experimental results in Section 3 statistically demonstrate that the overall prediction performance can be further improved by incorporating the proposed PPP.Fig. 5illustrates the architecture of the proposed method, called TargetGDrug, for prediction of GPCR–drug interactions. For a query GPCR–drug pair, TargetGDrug first extracts PsePSSM and WaveletMFP features of the GPCR and the drug contained in the query pair, respectively; then, the two extracted features are combined and fed to the trained random forest (RF) classifier to perform the initial prediction; subsequently, the output of RF will be further processed with the proposed post-processing procedure (PPP) to obtain the final prediction result.In this study, the confusion matrix, also known as a contingency table or an error matrix (Stehman, 1997), will be used to represent the prediction performance of a predictor. Fig. 6illustrates an exemplary confusion matrix, whereTP,FP,TN, andFNare the abbreviations for true positives, false positives, true negatives, and false negatives, respectively. For the convenience of subsequent descriptions, we will use [TPFN;FPTN] to represent a confusion matrix:From a confusion matrix, five routinely used evaluation indices in this field, i.e., specificity(Sp), sensitivity (Sn), accuracy (Acc), strength (Str), and the Matthews correlation coefficient (MCC), can be computed as follows:(20)Sp=TNTN+FP(21)Sn=TPTP+FN(22)Acc=TP+TNTP+TN+FP+FN(23)Str=Sp+Sn2(24)MCC=TP×TN−FP×FN(TP+FP)×(TP+FN)×(TN+FP)×(TN+FN)For a soft-type classifier, i.e., a classifier that outputs a continuous numeric value to represent the confidence of a sample belonging to the predicted class, its confusion matrix will vary within the classification threshold chosen. Gradually adjusting the classification threshold will produce a series of confusion matrices (He and Garcia, 2009). In other words, the five indices listed above (i.e.,Sp,Sn,Acc,Str, andMCC) are threshold dependent. Considering that the MCC provides the overall measurement of the quality of the binary predictions (Yu et al., 2013a,b), we thus reported these threshold-dependent evaluation indices by choosing the threshold, denoted asTMaxMCC, which maximizes the MCC value of the predictions. More specifically, we first identify the threshold that maximizes the value of MCC of the predictions on the training subset (e.g., D92M) over cross-validation, and the identified threshold was then used to evaluate the performance of the proposed method on the corresponding independent validation subset, i.e., Check390.As described in Section 2.1, the number of GPCR–drug pairs is continuously increasing under the efforts made by researchers and many GPCR–drug pairs that were previously labeled as non-interactive are recently identified as interactive. Thus, refining training dataset with newly discovered GPCR–drug pairs should be necessary for improving the performance of a prediction model, which will be demonstrated as follows:We benchmarked the performances of four widely used classifiers, i.e., OET-KNN, QuickRBF, SVM, and RF on D92 and D92M, where D92M is a refinement of D92. More specifically, for each of the considered classifiers, we trained two corresponding classification models on D92 and D92M, respectively; then we tested the two models with the sequences in the independent validation dataset Check390. The comparison results are listed in Table 2.By observing Table 2, we can find that the performance of each of the considered classifiers obtained on D92M is consistently better than that obtained on D92 concerning Str and MCC, which are two overall evaluation indexes. Averaged improvements of 3.3% and 6.0% on Str and MCC, respectively, were observed after refining D92 to D92M. Results in Table 2 empirically demonstrated that refining training dataset with newly discovered GPCR–drug pairs is necessary because it will help to improve the generalization capability of a trained model.It has been widely acknowledged that the classification/prediction performance depends not only on the feature’s discriminative ability but also on the classifier being used. In this section, we will illustrate which classifier is relatively better under the developed feature representation. Table 3lists performance comparisons between the four considered classifiers on D84 and D92M over leave-one-out cross-validation.From Table 3, we find that all the four considered classifiers achieve satisfactory classification performances with MCC>0.60 and Str>0.80 on both the D84 and D92M datasets, suggesting that it is feasible to perform GPCR–drug interactions prediction using machine-learning based methods. RF consistently performs better, although not significantly, than the other three considered classifiers, (i.e., OET-KNN, QuickRBF, and SVM). Thus, RF is a better choice for GPCR–drug interactions prediction under the proposed feature representation on the two benchmark datasets. In view of this, we will take RF as the classifier in all subsequent experiments, including the implementation of the web server.Here, we also demonstrated the necessity of performing 1-D wavelet transform for improving the discriminative capability of the original chemical fingerprint feature by comparing the performances between different classifiers under with- and without- wavelet transform on D92M over leave-one-out cross-validation. Experimental results are listed in Table 4. From Table 4, we can find that the prediction performances are consistently improved for all of the four considered classifiers after performing wavelet transform on the chemical fingerprint feature. Averaged improvements of 6.5% and 12.5% were observed concerning Str and MCC, which are two overall evaluation indexes. We believe the underlying reason is that the wavelet transform can help to reduce some noise and redundant information contained in original chemical fingerprint so that the following classifier (i.e., RF classifier) can require higher performance.In this section, we will demonstrate the efficacy of the proposed post-processing procedure for further improving the performance of GPCR–drug interactions predictions. We perform performance comparisons between without and with the post-processing procedure on each of the three benchmark datasets, i.e., D84 and D92M, as follows:Experiment I: leave-one-out cross-validation is performed without the post-processing procedure and the results with the threshold(TMaxMCC)that maximizes the MCC of the predictions are reported;Experiment II: we re-perform leave-one-out cross-validation with the post-processing procedure and the results with the same threshold(TMaxMCC)identified in Experiment I are reported.Table 5illustrates the performance comparisons between without and with the post-processing procedure on D84 and D92M over leave-one-out cross-validation. From Table 5, we can find that the prediction performances on both two benchmark datasets are improved after incorporating the proposed post-processing procedure. An average improvement of 3% in MCC, which is the overall measurement of the quality of the binary predictions, is observed on the two considered benchmark datasets. The Str of the method with PPP is about 1.6% better than that of the method without PPP on average. Taking the results on D92M as an example, the confusion matrix without the post-processing procedure is [486 149; 87 1138]; while that with the post-processing procedure is improved to [506 129; 88 1137]. Although the number of false positives is increased 1, the number of false negatives is reduced from 149 to 129, respectively. Similar improvements can also be observed on the other two benchmark datasets. Results listed in Table 5 demonstrate the effectiveness of the proposed post-processing procedure for enhancing the performance of GPCR–drug interactions prediction. As mentioned above, the results listed in Table 5 are obtained with a specific threshold(TMaxMCC)that maximizes the MCC of the predictions without the post-processing procedure. To systematically investigate the efficacy of the proposed post-processing procedure, we gradually adjust the threshold value from 0 to 1 with a step size of 0.01, and plot the curve of MCCversus threshold both with and without the post-processing procedure. Fig. 7(a) and (b) illustrates the curves on D84, and D92M, respectively.From Fig. 7, two observations can be made.First, on the two benchmark datasets, the values of MCC after incorporating the post-processing procedure are consistently higher than those without the post-processing procedure, with thresholds varying from 0 to 1. This demonstrates the robustness of the proposed post-processing procedure for GPCR–drug interactions prediction.Second, on the two benchmark datasets, the amplitude of improvement of MCC tends to increase when the thresholdTdeviates away fromTMaxMCC, denoting that the proposed post-processing procedure can potentially reduce more false positives and/or false negatives under a threshold that is far away fromTMaxMCC.In this section, we compare the proposed method with several recently published sequence-based GPCR–drug interactions predictors, including iGPCR-Drug (Xiao et al., 2013) and the method by He et al. (2010). Note that in the subsequent descriptions, unless otherwise stated, the proposed method means that the feature representation developed in Section 2.2 is used as the model input, and RF with the post-processing procedure, denoted as RF+PPP, is used as the prediction engine.Table 6summarizes performance comparisons between the proposed method and other sequence-based GPCR–drug interactions predictors on the D84 and D92M datasets over leave-one-out cross-validation. Because iGPCR-Drug (Xiao et al., 2013) does not report its results on the D84 and D92M datasets, we re-implemented this method and then performed leave-one-out cross-validation on D84 and D92M. From the results listed in Table 6, we find that the proposed method achieves the highest values of MCC and Accon the three benchmark datasets and acts as the best performer. Taking MCC as an example, improvements of 12% and 2% are achieved by the proposed method compared with the second-best performer, iGPCR-Drug (Xiao et al., 2013), which is the most recently released sequence-based predictor specifically designed for GPCR–drug interactions prediction.To demonstrate that the proposed method has not been over-optimized on the training datasets, an independent validation dataset as constructed in Section 2.1 is used to compare the generalization capability between the proposed method and the other predictors. Note that for the purpose of fair comparisons, the same threshold that maximizes the value of MCC for predictions on the training dataset over leave-one-out cross-validation is used for the proposed method to perform an independent validation test. Table 7lists the performance comparisons between different methods on the independent validation dataset.By carefully analyzing the results listed in Table 7, several observations can be made as follows:First, the proposed method again achieves the best performance on the independent validation dataset with the highest values of Str (0.813) and MCC(0.60), which are 7.4% and 15% higher than that of iGPCR-Drug (Xiao et al., 2013), respectively. These results demonstrate better generalization capability over the considered iGPCR-Drug predictor. The OET-KNN method achieves the best performance on Sp (84.2%) while having the lowest performance on Sn (67.7%), denoting that too many false positives are introduced during the predictions.Second, we find that the prediction performance on the independent validation dataset can be further improved by incorporating the post-processing procedure (PPP) into the RF model. Str and MCC improvements of 3% and 6% are achieved by RF+PPP, respectively. This observation further demonstrates the effectiveness of the proposed post-processing procedure for GPCR–drug interactions prediction.According to the experimental results in previous sections, it is easy to find that our method, called TargetGDrug, is better than iGPCR-Drug, at least on the considered benchmark datasets. In this section, we will seek to explain why the proposed TargetGDrug perform much better than iGPCR-Drug. The iGPCR-Drug employs PseAAC and FT2DMFP features, FKNN classifier, and without-PPP method. Our proposed TargetGDrug uses PsePSSM and WaveletMFP features, RF classifier, and with-PPP method.Table 8summarizes the performance comparisons between different methods on the independent validation dataset Check390. From Table 8, several observations can be made as follows: First, PsePSSM encodes both the evolutionary and sequence-order (positional) information of a GPCR sequence. Comparing with PseAAC of iGPCR-Drug, the dimensionality of PsePSSM is much higher thus possibly captures more useful information for classification.Second, the wavelet transform is the better method than the flourier transform for processing the molecular fingerprint feature of a drug; and the learning ability of RF classifier is much better than that of FKNN.Third, the drug-association-matrix-based post-processing procedure helps to reduce potential false positive or false negative of the initial predictions.We believe these three points account for the superiority of the proposed TargetGDrug over iGPCR-Drug.In order to demonstrate the effectiveness of PPP method, two interactive GPCR–drug pairs (i.e., “hsa:3358–D01358” and “hsa:1132–D00525”) and one non-interactive GPCR–drug pair (i.e., “hsa:5732–D02356”), which have not been utilized for training the prediction model, were used for case study.We tested the three GPCR–drug pairs using a RF model trained on D92M without PPP procedure. Unfortunately, the three pairs are all mistakenly predicted by RF model, as listed in Table 9. After applying PPP to the initial prediction of RF, we find two pairs, i.e., “hsa:3358–D01358” and “hsa:5732–D02356” were correctly predicted. However, “hsa:1132–D00525 was still mistakenly predicted even after applying PPP. We speculate that the underlying reasons for this phenomenon are as follows:We find drugs D01358 and D02356 show very promiscuous profiles, i.e., they interact with a number of GPCRs. For example, drug D01358 and D02356 interact with four and seven GPCRs, respectively, in D92M. On the contrary, D00525 interact with only one GPCR in D92M. In other words, there exist much historical information about drug D01358 and D02356, which can be utilized by PPP to effectively rectify those predictions related to D01358 and D02356. Since the historical information about drug D00525 is little, the PPP can not rectify the prediction of “hsa:1132–D00525”.In this study, we developed a novel sequence-based GPCR–drug interactions predictor with reasonable accuracy. Experimental results on benchmark datasets demonstrate the superiority of the proposed method over existing sequence-based predictors. The good performance of the proposed method comes from the use of the combined discriminative features of the GPCR–drug pair, the powerful RF classification algorithm, and particularly the post-processing procedure that can potentially reduce predicted false positives and false negatives. A user-friendly web server for the proposed method, called TargetGDrug, has been established and is available at http://csbio.njust.edu.cn/bioinf/TargetGDrug.It should be pointed out that the modality (or mechanism) of the GPCR–drug interaction action, e.g., agonist/antagonist/inverse agonist, allosteric/orthosteric (Garland, 2013; Wang and Lewis, 2013), has not yet been extensively explored in this paper. We will try to further investigate the modality of the GPCR–drug interaction in our future work. In addition, we will also continuously update our prediction model with new identified data from publicly available datasets such as ChemBl (Gaulton et al., 2012) (https://www.ebi.ac.uk/chembl/).

@&#CONCLUSIONS@&#
