@&#MAIN-TITLE@&#
The trading on the mutual funds by gene expression programming with Sortino ratio

@&#HIGHLIGHTS@&#
One method for guiding the investment in mutual funds is proposed.The buying timing and selling timing are decided by the trading functions generated by GEP.The funds in the portfolio are selected by the ranking of Sortino ratios.EQ and MV models are for capital allocation, and the annual profit higher than 12% in both models.SPA test for ensuring our method can earn positive returns without data snooping.

@&#KEYPHRASES@&#
Mutual fund,Gene expression programming,Sortino ratio,Mean variance model,Superior predictive ability test,

@&#ABSTRACT@&#
The aim of this paper is to combine several techniques together to provide one systematic method for guiding the investment in mutual funds. Many researches focus on the prediction of a single asset time series, or focus on portfolio management to diversify the investment risk, but they do not generate explicit trading rules. Only a few researches combine these two concepts together, but they adjust trading rules manually. Our method combines the techniques for generating observable and profitable trading rules, managing portfolio and allocating capital. First, the buying timing and selling timing are decided by the trading rules generated by gene expression programming. The trading rules are suitable for the constantly changing market. Second, the funds with higher Sortino ratios are selected into the portfolio. Third, there are two models for capital allocation, one allocates the capital equally (EQ) and the other allocates the capital with the mean variance (MV) model. Also, we perform superior predictive ability test to ensure that our method can earn positive returns without data snooping. To evaluate the return performance of our method, we simulate the investment on mutual funds from January 1999 to September 2012. The training duration is from 1999/1/1 to 2003/12/31, while the testing duration is from 2004/1/1 to 2012/9/11. The best annualized return of our method with EQ and MV capital allocation models are 12.08% and 12.85%, respectively. The latter also lowers the investment risk. To compare with the method proposed by Tsai et al., we also perform testing from January 2004 to December 2008. The experimental results show that our method can earn annualized return 9.07% and 11.27%, which are better than the annualized return 6.89% of Tsai et al.

@&#INTRODUCTION@&#
Investors usually transact many kinds of financial products, including the mutual funds. However, the financial market is so complex with nonstationary and chaotic data series, thus it is usually of much risk. It is difficult for investors who lack comprehensive investment information and knowledge to manage the portfolio for earning return and decreasing the unsystematic risk in the market. To earn high return in the financial market, some researchers have applied the machine learning techniques and soft computing methods such as support vector regression (SVR) [14,36] and artificial neural network (ANN) [17,18] to the prediction of the value in the future, support vector machine (SVM) [13,14,24] to the prediction of the fluctuation in the next trading interval, genetic algorithm (GA) [17,35], genetic programming (GP) [25] and gene expression programming (GEP) [9] to the optimization of the trading functions, and so on. By using these methods, investors may be able to dig out the rules or the patterns hidden in the market. However, these methods usually do not consider how to manage the portfolio and some of them, such as SVR, ANN and SVM, are not able to generate the observable trading rules. In this paper, we propose a combined method for generating observable and profitable trading rules, managing portfolio and allocating capital.The assumption of the efficient market hypothesis (EMH) is that the prices of traded assets already reflect all known information, therefore they reflect unbiased prospect of all investors in the future [8]. The EMH implies that the price reflects all relevant information so that it is impossible to earn excess return by using any information already available to the public. However, the hypothesis is still highly disputed, and it seems not to completely convince some of researchers. From statistical, behavioral and empirical [12,30] points of view, some researchers attempted to invalidate the EMH and showed evidence on the predictability of financial market by using technical analysis and machine learning techniques.In behavioral finance view, some psychological factors may sometimes affect investors’ investment decision. For example, investors are often affected by rumors and news. Endowment effect [15,33] describes that people often demand much more to give up an object than they are willing to pay to acquire it. Status quo bias [16,26] describes that the endowment effect causes people to have the tendency to like things staying relatively the same. Investors often give a higher value on the funds in their portfolio, but when suffering loss in the investment, they tend to refuse changing current portfolio or changing portfolio reluctantly. Such a behavior usually makes investors suffer more loss or miss the best time to reaction. Loss aversion [15] describes that giving up an object is greater than the utility associated with acquiring it. Sunk cost effect [33] says that if a cost has already been incurred, then it cannot be recovered. While investors suffer loss in investing in a fund, they tend not to realize the loss and they spend more capital in the fund to expect to get the lost capital back. Disposition effect [29] states the tendency of investors that they sell assets whose price has increased, but they keep assets which have dropped down in value. Systematic trading rules can help investors avoid these cognitive biases and make rational decisions for earning returns and reducing risk.Technical analysis is a popular method for generating trading rules. However, Timmermann and Granger [34] state that once an anomaly has become public knowledge, it would be expected to disappear or to self-destruct in future samples. With this observation, the trading rules generated by statically profitable technical analysis, such as described in [32], may not be able to earn return persistently. Hence, we adopt an evolving method to generate the trading rules.In this paper, we confine our investment to mutual funds. A fund pools money from many investors, and then the fund managers invest the money in stocks, bonds, securities, futures, or some combination of these financial products. To earn high return, we desire to study how to decide the trading timing, how to constitute the portfolio for each trading interval, and how to allocate the capital to the portfolio.The appropriate timing for buying or selling funds may avoid the systemic risk. Tsai et al. [35] proposed the global trend indicator (GTI) to evaluate the trend of mutual funds in the market, and then they applied GA to the selection of funds. The return of their method is better than the buy-and-hold strategy and the 4433 rule. In this paper, we assume that GTI can be bought and sold. To determine the trading (buying or selling) timing, our method applies gene expression programming (GEP) [9] and superior predictive ability (SPA) test [11] to the historical data series of GTI to generate effective trading functions without data snooping.To constitute a good portfolio, we rank the available funds in the market by their Sortino ratios[31]. We choose the funds with higher Sortino ratios into our portfolio. The Sortino ratio, a modification of the Sharpe ratio[28], only penalizes the return that is negative or below the user-defined target value. The Sortino ratio has better performance than the Sharpe ratio as a measurement of portfolio risk when the distribution of excess return of the asset is skewed [3].According to the portfolio theory, investors may reduce the unsystematic risk by investing their money in a wide variety of funds. After the portfolio is built, we perform the capital allocation by the equal principle (EQ model) or the mean variance model (MV model) [21]. The former divides the capital for the funds in the portfolio equally. The MV model for allocating the capital to funds can reduce the unsystematic risks as much as possible.To evaluate the effectiveness of our method, we perform experiments on a dataset of mutual funds. The dataset contains only equity funds which can be bought and sold in Taiwan with U.S. dollars as their trading currency. The data were extracted from FundDJ [10] in the duration from 1999/1/1 to 2012/9/11. There are totally 112 funds on 1999/1/1 and 718 funds on 2012/9/11. The data from 1999/1/1 to 2003/12/31 are utilized as the training set for building the trading functions and related parameters, and the other data from 2004/1/1 to 2012/9/11 are utilized for testing the return performance.The rest of this paper is organized as follows. In Section 2, we will present some background knowledge, including global trend indicator, gene expression programming, superior predictive ability test, Sortino ratio, and mean variance model. In Section 3, we will present the flowchart and our method for the investment. In Section 4, we will present some experimental results to show that our method can get stable returns by adopting effective trading signals generated by the gene expression programming. Finally, the conclusion will be given in Section 5.To evaluate the price change trend of mutual funds in the market, Tsai et al. [35] proposed the global trend indicator (GTI), whose equation is given as follows:(1)Ri(t)=NAVi(t)NAVi(t−1)−1,i∈Ft,GTI(t)=GTI(t−1)×1+∑i∈FtRi(t)∑i∈Ft|Ri(t)|,GTI(0)=100(base value),where Ft, NAVi(t), and Ri(t) represent the funds that can be invested on day t, the net asset value of fund i on day t, and the daily return of fund i on day t, respectively. GTI is used to demonstrate the trend of the fund market. In this paper, we calculate GTI since 1995/1/1.Furthermore, Tsai et al. [35] defined the monitoring indicator (MI), derived from GTI and its five simple moving average indicators, to measure whether the fund market is in the bull or bear state. The intervals of the five moving averages are 1, 3, 5, 7 and 9, denoted as SMA1(t), SMA3(t), SMA5(t), SMA7(t) and SMA9(t), respectively. The equation of MI is given as follows:(2)MIwin(t)=∑1≤x<y≤5{y−x|SMA2x−1(t)>SMA2y−1(t)}20,MIlose(t)=−∑1≤x<y≤5{y−x|SMA2x−1(t)≤SMA2y−1(t)}20,MI(t)=MIwin(t)+MIlose(t).If MI(t) is equal to 1 or close to 1, the current market is bull market (rising price), and if the MI(t) is equal to −1 or close to −1, the current market is bear market (falling price).The gene expression programming (GEP) [9] is an evolutionary algorithm which extends the genetic programming (GP) [19,20] by using linear structures to describe nonlinear structures such as trees. Similar to GP, GEP optimizes the population by the principles of natural selection, and it simulates that native creatures with the fittest to the environment would survive. Therefore, GEP can be applied to finding optimal solutions for various problems with some specific constraints. Some researches [2,4,7] have shown that GP has good performance in classification and regression problems. Zhou et al. [38] showed that GEP has superior accuracy in classification problems to GP. Also, in some researches [5,6,25], GP was utilized to generate the trading rules for trading financial assets. Sermpinis et al. [27] showed that the GEP method gets higher annualized return in the testing set than GP. According to these research results, we adopt GEP as the optimization tool for generating trading rules.In GEP, a chromosome may contain one or more genes of equal length, where each gene is composed of a head and a tail. Each allele of a gene is constructed from a predefined set of functions and variables. The head part of one gene may contain functions and variables, and its length is decided by the user, while the tail part may contain only variables to keep the gene valid. The length of the tail is decided by the head length and the maximum arguments of the predefined functions as shown in Eq. (3).(3)t=h×(n−1)+1,where t, h, and n represent the tail length, the head length, and the maximum number of the function arguments in the function set, respectively.Once the head length and the set of functions have been set, the length of a gene is also decided accordingly. The gene of GEP can be transformed into an expression tree (ET) by the level-order traversal, and these genes within one chromosome are connected by a user-specified linking function, which can be further explained by the user. The chromosome in this paper will be decoded as a trading function.For example, Fig. 1illustrates a chromosome with two genes, where the head length of each gene is four, and the predefined functions are {+, −, ×, /} and the variables are {A, B, C, D}. The left gene represents the left subtree, which is B−(B×C). The remaining part of the left gene is ignored since they are not valid. The two genes evolve within the chromosome simultaneously, while they can be interpreted as two trading rules joined by a user-specified linking function.The user-specified fitness function of GEP is utilized to measure the goodness of a chromosome in the population. One chromosome with higher fitness score has higher opportunity to be chosen to progress step. Furthermore, to apply the GEP, users have to specify the parameters and the termination criteria. The parameters include the head length, the number of genes, the population size, the number of generations, the number of replications, the mutation rate, the transposition rate, the recombination rate, and the inversion rate. The termination criteria generally depend on the generations, and the convergence of the fitness scores. When the GEP terminates, the best function is represented by the chromosome with the best fitness score.The flowchart of GEP is illustrated in Fig. 2, and the evolution steps of GEP are given as follows.1.Initialization: It creates an initial population of chromosomes, which are generated randomly subject to the pre-specified population size.Elitists selection: The higher fitness score a chromosome has, the more likely the chromosome is selected to produce offspring.Evolutionary operations: The evolutionary operations include the following.•The replication operation is to copy a chromosome with high fitness score to the new population.The mutation operation is applied to one chromosome, and it increases the diversity of the population. To ensure that the gene can be translated to a valid ET, the alleles in the head can be replaced by the elements in the function set or the terminal set, and the alleles in the tail can be replaced only by the elements in the terminal set.In a transposition of insertion sequence (IS transposition) operation, a short fragment is inserted into a random position of the head of another randomly chosen gene, and then the fragment is inserted into a random position of the head of another randomly chosen gene except for the first position.In a root transposition (RIS transposition) operation, a short fragment is randomly selected from the head of a randomly chosen gene, and then the fragment is inserted into the first position of the gene, where the fragment must start with a function symbol.In a gene transposition operation, a randomly selected gene is entirely inserted into the root of the chromosome.In a 1-point recombination operation, two chromosomes randomly chosen from the population crossover at a randomly chosen point.In a 2-point recombination operation, two substrings are exchanged between two chromosomes.In a gene recombination operation, two randomly chosen genes in two chromosomes are entirely exchanged to generated new offspring.In an inversion operation, the alleles in the head of a randomly chosen gene in a chromosome will be re-allocated in the reverse order. These operations facilitate the generation of a variety of offspring.Termination criteria: When the termination criteria are satisfied, the outcome is designated as the best solution for the asked problem. If the termination criteria are not fulfilled, GEP executes Steps 2 and 3 iteratively until the termination criteria are satisfied.We apply the python software pygep[23] for generating the trading functions in our method.Data snooping is the inappropriate use of data mining or statistics to induce misleading relationships in data, which usually occurs when a given set of data is used more than once for purposes of inference or model selection. When such data reuse occurs, there exists the possibility that any satisfactory results obtained may simply be due to chance rather than to any merit inherent in the method yielding the results [37].White [37] proposed the reality check (RC) test to check if there exists at least one model which is able to beat the benchmark without data snooping. Hansen [11] proposed the superior predictive ability (SPA) test that utilizes a sample-dependent null distribution to avoid the least favorite configuration in the RC test.Given m models, let dk,t, 1≤k≤m and 1≤t≤n, represent the performance measure of the kth model related to the benchmark model at time t, where n represents the number of intervals in the time series.Assume that for each model k, for all t, E(dk,t)=μk, where E(·) represents the expectation operator, and μkrepresents the mean of performance measure of the kth model, the null hypothesis is to determine whether the model outperforms the benchmark model. The null hypothesis is shown as follows:(4)H0k:μk≤0,where1≤k≤m.The RC statistics [37] is given as follows:(5)RCn=max1≤k≤mndk¯,wheredk¯=∑t=1ndk,t/n. White chose the least favorite configuration (LFC) μ=0 to obtain the null distribution. Usually, LFC is too conservative, and it is not able to describe data truthfully. Therefore, Hansen proposed the SPA test to solve this problem [11]. The SPA statistics is given as follows:(6)SPAn=maxmax1≤k≤mndk¯ωˆk,0,whereωˆkdenotes the consistent estimator of the standard deviation of performance measure of the kth model. The main argument for the normalization is that it will improve the power. Since the test uses a data-dependent value for μ instead of μ=0, it is usually a more powerful test. In SPA test, E(dk,t)=μkis estimated as follows:(7)μkˆ=dk¯·1(ndk¯≤−ωˆk2loglogn),where 1{·} is the indicator function.We use the Sortino ratio [31] to rank the available funds. The Sortino ratio considers only the downside volatility as the unpleasant part of price fluctuation. The equation of the Sortino ratio is given as follows:(8)SVi2=1Nb×∑t=1,Rit<RMARTe(Rit−RMAR)2,(9)Sortinoi=E(Rit)−RMARSVi,where E(·), RMAR, Ritand Nbrepresent the expectation operator, the minimum acceptable return, the historical daily returns of the ith asset at time t (obtained from the historical price series), and the total number of daily return of the ith asset in the past Tedays whose values are below RMAR, respectively. With the Sortino ratio, we can find out those funds whose performance is better in the past. These selected funds should have higher probability to earn return in the future, so they are put into our portfolio.Investment is a tradeoff between return and risk. The risk in the investment can be represented by the downside variance of the expected return or the average of negative return. Investors usually prefer to have their return as high as possible, but to have the risk as low as possible at the same time. However, an investment with high return usually accompanies with high risk.The portfolio problem is to determine the capital allocation among a set of funds. Markowitz [21,22] proposed the mean variance model (MV model) to solve the problem. The principle of the MV model is to use the expected return of a portfolio as the investment return, and to use the covariance of returns of the portfolio as the investment risk. The MV model is based upon the foundation that the price fluctuation can be diversified by allocating capital among funds having opposite trends.The definition of the MV model [21,22] is described as follows:(10)minimizeλ∑i=1n∑j=1nwi·wj·σij−(1−λ)∑i=1nwi·E(Rit),subject to∑i=1nwi=1andwi≥0∀i,where E(·),wi, σij, Rit, n, and λ (0≤λ≤1) represent the expectation operator, the weight of capital allocated to the ith asset, the covariance of the returns between the ith and jth assets, the historical daily return of the ith asset, the size of the portfolio (number of assets), and the risk inclination of the investor, respectively.In the extreme cases of the MV model, λ=1 represents that the investor is risk-averse, which results in less expected return and lower risk of the portfolio. In contrast, λ=0 represents that the investor is risk-willing, which results in more expected return and higher risk of the portfolio.For the timing of buying and selling the portfolio, our method refers to the signals generated by the GEP. The funds which can be invested are ranked with the Sortino ratio, and some of these funds are selected as our portfolio. Then, we apply two capital allocation models to the portfolio. In the first model, the capital in the portfolio is divided equally (EQ model), and in the second model, the capital is allocated with the MV model. The unsystematic risk of the portfolio can be reduced with the MV model by allocating different weights of capital to the selected funds.The flowchart and corresponding pseudocode of our method are shown in Fig. 3and Procedure GEPInvestment, respectively. In each trading interval (here we adopt one week), we check whether the fund market is open or not by checking the function isMarketOpen(t) [35]. The function isMarketOpen(t) returns “true” if the number of tradable funds in the market on day t is greater than 10% of all funds in the market issued before day t. Otherwise, this function returns “false”. If isMarketOpen(t) returns “true”, we will invoke the trading function evolved by GEP that generates signals for deciding the timing of buying or selling. If isMarketOpen(t) returns “false”, we will skip day t and check the result of the next trading day isMarketOpen(t+1).In bull market, we buy or replace the funds. Before investing, the ranks of funds are determined by the Sortino ratio. Then, according to the fund ranks, inferior funds in our portfolio will be replaced by superior ones. In bear market, all funds in our portfolio will be redeemed.Procedure: GEPInvestment(N, td, γ, buying rule, selling rule)Input:N: the portfolio size (number of funds).td: training days.γ: the replacement threshold.buying rule: the buy rule trained from GEP.selling rule: the sell rule trained from GEP.Output:Rcum: cumulative return of the portfolio.μneg: risk of the portfolio.begint← the first trading day;Rtw←0, μneg←0, signal(t)←0, signal(t−1)←0;while (t in the investment period) doif (isMarketOpen(t)=True) then/*Get the timing of buying or selling by the function trained from GEP*/signal(t)← TradingSignal (γ, buying rule, selling rule, signal(t−1));/* Check current market situation   */Rtw←MarketSituation (N, td, γ, signal(t), signal(t−1));endt←t+1;endendCompute Rcumand μneg, and stop;Procedure: TradingSignal(γ, buying rule, selling rule, signal(t−1))Input:γ: the replacement threshold.buying rule: the buy rule trained from GEP.selling rule: the sell rule trained from GEP.signal(t−1): signal of the previous trading day.Output:signal(t): signal of the current trading day.begin/*Get the timing of buying or selling by the function trained from GEP*/T← the values of terminal variables in the GEP at day t;if (buying rule(T) > 0 and selling rule(T) ≤ 0) thensignal(t)←1;else if (buying rule(T) ≤ 0 and selling rule(T) > 0) thensignal(t)←0;elsesignal(t)←signal(t−1);elseOutput signal(t);elseProcedure: MarketSituation(N, td, γ, signal(t), signal(t−1))Input:N: the portfolio size.td: training days.γ: the replacement threshold.signal(t): signal of the current trading day.signal(t−1): signal of the previous trading day.output:Rtw: return of the portfolio at trading day t.begin/* Check current market situation */if(signal(t) = 1 and signal(t-1) = 0) or (signal(t) = 1 and signal(t-1) = 1))then/*buy or replace */Rank available funds with Sortino ratios using past tddays NAVs;Redeem inferior fund holdings according to the threshold γ, and invest in superior funds to form a new portfolio;Allocate capital to the portfolio;else if(signal(t) = 0 and signal(t-1) = 1)then/* sell */Redeem all fund holdings;else;/* wait, do nothing */endComputeRtwand output it;endTo earn more stable return, the buying timing and selling timing are determined by the trading functions trained by GEP with the global trend indicator (GTI). Once the buying signal appears, a portfolio (a subset of funds) is formed. However, when we determine to buy funds each time, the portfolio may change, so we cannot train the trading functions with the time series of a certain fund. Moreover, since the investment targets are all available funds, not a single fund, it is too risky if the trading function is decided by a single fund. GTI on day t is composed of the average return of the funds which are tradable on day t. Thus, GTI represents the trend of the fund market. If GTI goes up, a large of these tradable funds also goes up. Since the selected funds in the portfolio are highly related to trend of GTI, after the buying timing is decided, the trading function of GTI can be applied to the portfolio.To simplify the procedure of determining the trading timing, we assume that we can buy and sell GTI. Here, the transaction fee 3% in each transaction is involved. The fitness function of GEP is to maximize the return of GTI in the training period.The function set of GEP contains the operators ‘>’, ‘<’, ‘=’, ‘≥’, ‘≤’. Our trading interval is one week, thus we put the weekly monitor indicator (MIw) [35] in the terminal set of GEP, which can be viewed as the feature of market situation.In the evolution, each chromosome consists of two genes as illustrated in Fig. 1, one for buying rule and the other for selling rule. Each gene is represented by an ET, thus we use a two-tree scheme in GEP. The trading function, combining the results from the two ETs by putting the variables at time t to the corresponding location, will generate the trading signal.If the buying rule and the selling rule are of opposite signals, which means that the two rules have the same opinions, then the value of the trading signal is either 1 or 0. Signal 1 means the timing for buying and signal 0 means the timing for selling. Otherwise the market situation is considered as ambiguous, and the current trading signal remains the same as the previous signal.Next, the trading signals and their corresponding actions are determined in the following way.•buying: If the trading signal of t is 1 and the trading signal of (t−1) is 0, then we select the funds with higher Sortino ratios as our portfolio.selling: If the trading signal of t is 0 and the trading signal of (t−1) is 1, then we redeem all the funds in our portfolio.replacing: If the trading signals of both t and (t−1) are 1, we replace the inferior funds with the superior ones according to Sortino ratio.waiting: If the trading signals of both t and (t−1) are 0, we do nothing, which means that we are waiting for the buying timing.After getting the profitable trading functions, generated by GEP for GTI in the training duration, we apply the functions to our portfolio in the testing duration. This procedure will be performed every week.When a buying signal appears, we pick out superior funds according to the Sortino ratios from current available funds as our investment objects, and put them into the portfolio with size N. That is to say, exactly N funds are invested. When a selling signal appears, the simple job is to redeem all held funds.If we get a replacing signal, some inferior funds in the current portfolio are replaced by superior ones with the replacement method proposed by Tsai et al. [35]. Here we define a replacement threshold, denoted as γ, for removing inferior funds from the current portfolio. For example, suppose there are 120 available funds and γ=60%. Once the Sortino rank of a certain fund falls outside top 72 (=120×60%), this fund will be replaced by a one with higher Sortino rank. The portfolio is updated every week if the replacing signal remains unchanged.We assume that the initial capital is fixed. Since the real investment targets are the available funds, we should allocate the capital among these funds. We apply two models to capital allocation in the portfolio. The first model, called the EQ model, distributes the capital to each fund equally. In the second model, the capital is allocated with the MV model.To allocate our capital with the MV model, it is assumed that the returns of the funds of the portfolio in the future depend on their historical price series. The price fluctuation of the portfolio can be diversified by allocating capital among funds having opposite trends.If λ=1.0 is set in Eq. (10), it means that the inventor is very conservative. There should be higher return with λ<1 because the higher risk accompanies the higher return. Hence the parameter λ=1.0 serves the lower bound of the return in the MV model.We can solve Eq. (10) by using python software CVXOPT[1] to get the best capital weights of the funds in the portfolio. The capital is reallocated when some funds are redeemed and some new funds are added into the portfolio.

@&#CONCLUSIONS@&#
