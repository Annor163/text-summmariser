@&#MAIN-TITLE@&#
Fractional-order load-frequency control of interconnected power systems using chaotic multi-objective optimization

@&#HIGHLIGHTS@&#
Multi-objective optimization-based fractional-order PID controller is designed.NSGA-II algorithm is augmented with chaotic Logistic and Henon map.Load disturbance rejection and controller effort are minimized as two conflicting objectives.FOPID controller outperforms the PID controller in suppressing frequency deviation.Better trade-off is obtained for load-frequency control of power systems with FOPID.

@&#KEYPHRASES@&#
Two-area load-frequency control (LFC),Power system control,Fractional-order PID controller,Control trade-off design,Chaotic NSGA-II,

@&#ABSTRACT@&#
Fractional-order proportional-integral-derivative (FOPID) controllers are designed for load-frequency control (LFC) of two interconnected power systems. Conflicting time-domain design objectives are considered in a multi-objective optimization (MOO)-based design framework to design the gains and the fractional differ-integral orders of the FOPID controllers in the two areas. Here, we explore the effect of augmenting two different chaotic maps along with the uniform random number generator (RNG) in the popular MOO algorithm—the Non-dominated Sorting Genetic Algorithm-II (NSGA-II). Different measures of quality for MOO, e.g. hypervolume indicator, moment of inertia-based diversity metric, total Pareto spread, spacing metric, are adopted to select the best set of controller parameters from multiple runs of all the NSGA-II variants (i.e. nominal and chaotic versions). The chaotic versions of the NSGA-II algorithm are compared with the standard NSGA-II in terms of solution quality and computational time. In addition, the Pareto optimal fronts showing the trade-off between the two conflicting time domain design objectives are compared to show the advantage of using the FOPID controller over that with simple PID controller. The nature of fast/slow and high/low noise amplification effects of the FOPID structure or the four quadrant operation in the two inter-connected areas of the power system is also explored. A fuzzy logic-based method has been adopted next to select the best compromise solution from the best Pareto fronts corresponding to each MOO comparison criteria. The time-domain system responses are shown for the fuzzy best compromise solutions under nominal operating conditions. Comparative analysis on the merits and de-merits of each controller structure is reported then. A robustness analysis is also done for the PID and the FOPID controllers.

@&#INTRODUCTION@&#
Large-scale power system networks comprise of several interconnected subsystems representing particular geographical areas. Each of these subsystems has their own generation capability and has variable load demand. These sub-systems are connected by tie lines which control the flow of power between the different areas [1]. A sudden load demand in a certain area results in a drop in system frequency which is detrimental for connected electrical loads. To ensure proper power quality, the load-frequency controllers in the interconnected power system regulate the flow of power among the different areas through the tie lines and balance the load and the drop in frequency. The LFCs balance the mismatch between the frequencies of the interconnected areas and schedule the flow of power through the tie lies, helping the interconnected power system to overcome the aberrations introduced due to varying load demand, generation outage, etc. Recently, the LFCs are gaining more importance due to the integration of renewables in the grid which have an inherent stochastic characteristic due to the vagaries of nature unlike those of the base load thermal power plants [2,3]. Thus, proper design and operation of the LFCs are very important for the stable and reliable operation of large-scale power systems. Control of interconnected power system considering various aspects has been a topic of intense research in the recent past. Different type of generating units and their effects have been studied, e.g. thermal with reheat [4], generation rate constraint (GRC) [5], reheat and battery energy storage both the areas [6], hydro turbine and hydro-governor in both the areas [7], thermal with reheat turbine along with hydro and gas turbine plants in both the areas [8], etc.Traditionally a proportional-integral (PI) or a proportional-integral-derivative (PID) controller is used for the LFCs [9] and a variety of different methods exist for proper tuning of the controller parameters. Many robust control design techniques have been applied to the LFC problem so that the designed controller is able to handle uncertainties of the system. Some variants of robust designs include an adaptive output feedback-based robust control [10], adaptive robust control [11], decentralized robust control using iterative linear matrix inequalities (LMIs) [12], decentralized control [13], etc. Optimal control designs using linear quadratic regulator (LQR) technique has been reported in [14]. Several other popular control philosophies like the model predictive control (MPC) [15], sliding mode control [16], singular value decomposition (SVD) [17], etc. have also been applied in decentralized LFC of multi-area power systems.Many computational intelligence-based techniques have been employed in the design of LFCs as well. Global optimization techniques using evolutionary and swarm intelligence has been used to tune the PID controller parameters in various literatures. Genetic algorithm (GA) has been used in the design of LFCs in [7]. A variable structure controller has been designed for LFCs using GA in [18]. Fuzzy logic-based gain scheduling has been done in [19] to obtain improved control strategy for LFC. The application of neural networks in the problem of load-frequency control has been investigated in [20,21]. There are other literatures which employ robust control techniques like H∞ loop shaping [22], μ-synthesis [23] and LMI approaches [12,22] with intelligent genetic algorithms to obtain robust controllers. A detailed review of the existing design methodologies in LFC has been documented in [24–26]. Other intelligent algorithms like Bacterial foraging algorithm [27], fuzzy logic [28], and recurrent fuzzy neural network [29] have also been applied in LFC of multi-area inter-connected power systems.Fractional-order controllers have been gaining popularity in recent years due to added capability to handle control design specifications [30,31]. Fractional-order PID controllers have been applied in a wide variety of control systems and have generally proved to be better than their integer order (IO) counterparts [32]. Recently, fractional-order controllers have been applied to power systems and favourable results have been obtained. In [33], a fractional order controller has been designed for an automatic voltage regulator (AVR) with particle swarm optimization (PSO) algorithm to show that the FO controllers have more robustness to tackle uncertainties than the conventional IO-PID controller. Alomoush [34] has applied fractional-order controllers for LFC of a two-area interconnected power system and an automatic generation control for an isolated single-area power system. It has been shown in [34] that the fractional-order PID controller has more flexibility in design and can adjust the system dynamics better than the IO-PID controller. FOPID controllers are also shown to be robust and competitive to IO-PID controllers [35–38]. In these previous literatures, only a single objective intelligent optimization has been employed to design the control system. However, it is well known that there exists multiple trade-offs among different design specifications in control [39] and similar system design [40]. It is not possible to simultaneously minimize all design objectives using a particular control structure and different controller structure may yield different trade-offs depending on the choice of the conflicting control objectives [41,42]. Thus, there is a requirement of multi-objective approach for addressing different conflicting objectives in the control system design [42]. In [42–44], time and frequency domain multi-objective formulation have been used to study the design trade-offs among various conflicting FOPID design objectives in an automatic voltage regulator (AVR) system. It has been shown in [42–44] that sometimes the FOPID and at other times the PID controller performs better depending on the choice of the conflicting objective functions. This concept of MOO for FO controllers has been extended in this paper for two-area LFC problem. In this paper, FOPID controllers in the two-area LFC are designed using chaotic multi-objective NSGA-II algorithm. Set point tracking and low control signal are chosen as the two conflicting objectives for the MOO-based tuning of FOPID/PID controllers and the performance improvement due to the FOPID compared to the PID is illustrated by numerical simulations.The main highlights of the paper include:•Augmenting the NSGA-II algorithm with different chaotic maps (like Logistic and Henon maps) to obtain better Pareto optimal solutions.Using Pareto metrics like hyper-volume indicator, spacing metric, Pareto spread and diversity metric [45–47], to assess the performance of the chaotic MOO algorithms.Use of FOPID controller to obtain better system performance for the two-area LFC.Demonstration of conflicting time-domain trade-offs in the controller performances for the FOPID and the PID controller and use of a fuzzy-based mechanism for selecting the best compromise solution.Robustness study of FOPID as LFC over that with PID, under system parametric uncertainty and random change in load patterns.The rest of the paper is organized as follows. Section 2 gives a brief description of the two-area LFC problem in the interconnected power system. Section 3 introduces the basics of fractional calculus, FOPID controller and its flexibility over PID. Section 4 outlines the conflicting time-domain criteria-based MOO for the design of the LFC system. Section 5 introduces the chaotic versions of the multi-objective NSGA-II algorithm. Different MOO measure-based selection of the best optimizer and the controller are enunciated in Section 6, along with the respective time-domain responses. In Section 7, the effect of uncertainty in the synchronizing coefficient and the effect of randomly changing load patterns in both areas are explored. The paper ends with the conclusions in Section 8 followed by the references.The main functionalities of the LFC area)To keep the operating power system frequency within specified tolerance limits to ensure power qualityTo ensure proper load sharing between the generators of the interconnected systemTo honour the pre-specified load exchange constraints by controlling the power flow between the interconnected areas.A schematic diagram for the two-area LFC is depicted in Fig. 1. The parameters of the various units of the system are shown in Table 1[23]. The area control error (ACE) in each area is a function of the frequency deviation (Δf) and the inter area tie-line power flow (ΔPtie). The ACE is fed as an input to the FOPID controller where it calculates the appropriate control signal to be applied. This control signal is fed into the amplifier and then the actuator to produce an appropriate change in the mechanical torque of the turbine (prime mover). This produces a change in the active power output of the generator to compensate the power flow in the system and thus Δf and ΔPtie are kept within desired limits. The tasks of the PID/FOPID controller in each area are to ensure faster damping of individual ACEs and also damping the inter-area power oscillation ΔPtie.Each area includes steam turbine, governor, reheater stages along with GRC nonlinearity in the turbine and dead-band in the governor. The power systems (PS) are represented by first-order transfer functions. The tie-line power is also affected by the choice of synchronizing coefficient (T12). There are different configurations like primary and secondary LFCs as described in [34]. In the primary LFC control, load change in one area is not corrected by a controller in that area or in other areas. For the secondary LFC loop, the tie-line is represented by the accelerating power coefficient (Ps=2πT12). Any change in the demand-load (ΔPL) will result in deviation of frequency in both the areas and the tie-line power flow. The ACE for the ith area can be expressed as(1)ACEi=∑j=1MΔPij+BiΔfiwhere ΔPijis the deviation in tie-line power flow from its scheduled values between the ith area and the jth area, Δfiis the frequency aberration in the ith area and M is the number of areas connected to area i. The frequency bias factor (Bi) can be expressed as a combination of the speed regulation (Ri) and the damping coefficient (Di) and is given by(2)Bi=1Ri+DiIn the present model, significant effect of nonlinearity is studied in the form of dead-zone in the governors and GRC in the turbines. The GRC keeps the rate of change of power within a specified limit of δ=±0.005 which is implemented by replacing the linear model of the turbine (ΔPR/ΔXG) by the nonlinear one as shown in Fig. 1. The governor dead-band affects the speed control under disturbances and has been chosen as 0.06% in each area. For the present simulation study, both the areas are subjected to step-load disturbance of PL1=0.02pu and PL2=0.008pu, respectively. In contemporary literature, there were several studies on the dynamics of nonlinearities like GRC [5,29,37,36] and dead-zone [15] along with reheat turbine [48], but their MOO-based FO control design has not been investigated yet, which is the main motivation of the present paper.The generalized fractional differentiation and integration has mainly three definitions, the Grunwald–Letnikov definition, Riemann–Liouville definition and Caputo definition. The Grunwald–Letnikov formula is basically an extension of the backward finite-difference formula for successive differentiation. This formula is widely used for the numerical solution of fractional differentiation or integration of a function. The Riemann–Liouville definition is an extension of n-fold successive integration and is widely used for analytically finding fractional differ-integrals. In the FO systems and control-related literatures, mostly the Caputo's definition of fractional differ-integration is referred. This typical definition of fractional derivative is generally used to derive fractional-order transfer function models from fractional-order ordinary differential equations with zero initial conditions. According to Caputo's definition, the αth-order derivative of a function f(t) with respect to time is given by (3) which is used in the present paper for realizing the fractional integro-differential operators of the FOPID controllers:(3)Dtα0Cf(t)=1Γ(m−α)∫0tDmf(τ)(t−τ)α+1−mdτ,α∈ℝ+,m∈ℤ+,m−1<α<mThe FOPID controller is an extension of the IO-PID controller with non-integer choice of integro-differential orders along with the conventional PID controller gains. The transfer function representation of an FOPID controller is given as(4)C(s)=Kp+Kisλ+KdsμThis typical controller structure has five independent tuning knobs, i.e. the three controller gains {Kp, Ki, Kd} and two fractional order integro-differential operators {λ, μ}. For λ=1 and μ=1, the controller structure (4) reduces to the classical PID controller in parallel structure. Fig. 2shows the schematic representation of the FOPID controller in the integro-differential (λ–μ) plane and its relation with the conventional integer order P, PI, PD and PID controllers. Several other special cases of the FO controller structure can also be defined in the λ–μ plane like PIλ, PDμ, PIλD, PIDμ, etc. It has been shown in [31] that increasing the integral order above λ>1 amplifies the low-frequency components thus making the closed-loop system oscillatory. Similarly, an increase in the derivative order μ>1 increases the high-frequency gain, thus amplifying the measurement noise and high-frequency random components. The extension of ‘points to plane’ has led to the concept of FOPID or PIλDμ controllers as shown in Fig. 2 which can be further refined to define regions of low/high noise amplification and slow/fast time response depending on the range of values for μ and λ, below/above 1. Fig. 2 shows how different trade-offs could be achieved by selecting the range of operation in the four quadrants of the λ–μ plane (instead of only one quadrant with {λ,μ}<1), for different application of FOPID controller. For the present power system control application, the controller selection problem is divided in two parts—fast FOPID (λ>1 or 1st/2nd quadrant operation) and slow FOPID (λ<1 or 3rd/4th quadrant operation). Additionally, for choice of speed (λ), four other combinations of the controllers in the two areas are explored, depending on the derivative order μ>1 or μ<1. Within the present MOO framework, considering similar or different controller structure in both the areas, the best non-dominated solution generated by the four controller combinations is selected. The choice of the controller within the MOO framework has been shown in (5).(5)SelectslowFOPIDλ1,λ2<1,inboththeareaschoice1:μ1<1,inarea1andμ2<1,inarea2choice2:μ1<1,inarea1andμ2>1,inarea2choice3:μ1>1,inarea1andμ2<1,inarea2choice4:μ1>1,inarea1andμ2>1,inarea2selectionbyMOOSelectfastFOPIDλ1,λ2>1,inboththeareaschoice1:μ1<1,inarea1andμ2<1,inarea2choice2:μ1<1,inarea1andμ2>1,inarea2choice3:μ1>1,inarea1andμ2<1,inarea2choice4:μ1>1,inarea1andμ2>1,inarea2selectionbyMOOTherefore, within the slow and fast family of FOPID controllers, different levels of noise amplification in the respective areas are selected automatically by the MOO which results in non-dominated Pareto front.Few recent research results show that band-limited implementation of FOPID controllers using higher-order rational transfer function approximation of the integro-differential operators gives satisfactory performance in industrial automation. Here, the Oustaloup's recursive approximation has been used to implement the integro-differential operators in frequency domain is given by (6), which represents a higher-order analogue filter:(6)sα≃K∏k=−NNs+ω′ks+ωkwhere the poles, zeros and gain of the filter can be recursively evaluated as(7)ωk=ωbωhωb(k+N+(1+α)/2)/(2N+1),ω′k=ωbωhωb(k+N+(1−α)/2)/(2N+1),K=ωhαThus, the area control errors (ACEs) can be passed through the filter (6) and the output of the filter can be regarded as an approximation to the fractionally differentiated or integrated signal Dαf(t). These FO differentiated or integrated signals are weighted by the respective gains to form the final control signal which goes to the governor in Fig. 1. In (6) and (7), α is the order of the differ-integration, (2N+1) is the order of the filter and (ωb, ωh) is the expected frequency fitting range. In the present study, fifth-order Oustaloup's recursive approximation is implemented to approximate the integro-differential operators within the frequency band of ω∈{10−2, 102} rad/s for the constant-phase elements (CPEs) of the FOPID controller.It is well known that a single controller structure cannot give good results for all design specifications. For example, a fuzzy logic controller is good at coping with uncertainty in the loop, whereas a model predictive controller is good for tackling large time delays in process control. For specific applications, different controller structures would give a trade-off solution among conflicting design specifications. Hence, for effective comparison of different controller structures, it is essential to know the limits of performance of each of the individual controllers for conflicting design specifications. In [42–44], a similar approach has been taken to compare the efficacy of the FOPID controller vis-à-vis the IOPID one for several conflicting time and frequency domain objectives, respectively. In the present case, the disturbance rejection and controller effort are considered as the conflicting objectives and expressed in (8) and (9):(8)J1=∑i=1MITSEi=∑i=1M∫0∞t⋅ei2(t)dt(9)J2=∑i=1MISDCOi=∑i=1M∫0∞(Δui(t))2dtwhere ITSE represents the integral of the time multiplied squared error, ISDCO represents integral of the squared deviation in controller output, ei(t) represents the error signal (ACE) in area i, ui(t) represents the control signal and M represents the total number of areas.The reason for considering these two as conflicting objective functions can be briefly explained as follows. To achieve a faster damping of ACEs and the grid frequency oscillation, it is essential that the controller gains should be higher. In other words, the controller must be able to exert much more control action on the power generating system so that the frequency oscillation settles within a short amount of time. However, the control signal should ideally be smaller to prevent actuator saturation and minimize the cost associated with sizing of a larger actuator. It can be inferred that both these objectives of small control signal, as well as faster damping of load disturbances cannot be ideally obtained by a fixed set of parameters of the PID/FOPID controller. Thus, there would exist a range of values for the tuning parameters of the controller {Kp, Ki, Kd, λ, μ}, where the controller would show good load disturbance rejection at the cost of higher control signal and vice versa. After a large number of trade-off solutions between the two chosen objectives are obtained, a compromise solution could be selected next for deciding the most optimal controller setting [42,49].A generalized multi-objective optimization framework can be defined as follows:Minimize F(x)=(f1(x), f2(x), …, fm(x))(10)F(x)=(f1(x),f2(x),…,fm(x))such that x∈Ω, where Ω is the decision space,ℝmis the objective space andF:Ω→ℝmconsists of m real-valued objective functions.Let u={u1, …, um} andv={v1,…,vm}∈ℝmbe two vectors. u is said to dominate v ifui<vi∀i∈{1,2,…,m}and u≠v. A point x*∈Ω is called Pareto optimal if x|x∈Ω such that F(x) dominates F(x*). The set of all Pareto optimal points, denoted by PSMOO is called the Pareto set. The set of all Pareto objective vectors,PF={F(x)∈ℝm,x∈PSMOO}, is called the Pareto front or the set of non-dominated solutions. This implies that no other feasible objective vector exists which can improve one objective function without simultaneous worsening of some other objective function.Multi-objective evolutionary algorithms (MOEAs) which use non-dominated sorting and sharing have higher computational complexity. They use a non-elitist approach and require the specification of a sharing parameter. The non-dominated sorting genetic algorithm (NSGA-II) removes these problems and is able to find a better spread of solutions and better convergence near the actual Pareto optimal front [50,51].The NSGA-II algorithm converts different objectives into one fitness measure by composing distinct fronts which are sorted based on the principle of non-domination. In the process of fitness assignment, the solution set not dominated by any other solutions in the population is designated as the first front F1 and the solutions are given the highest fitness value. These solutions are then excluded and the second non-dominated front from the remaining population F2 is created and ascribed the second highest fitness. This method is iterated until all the solutions are assigned a fitness value. Crowding distances are the normalized distances between a solution vector and its closest neighbouring solution vectors in each of the fronts. All the constituent elements of the front are assigned crowding distances to be later used for niching. The selection is achieved in tournaments of size 2 according to the following logic:a)If the solution vector lies on a lower front than its opponent, then it is selected.If both the solution vectors are on the same front, then the solution with the highest crowding distance wins. This is done to retain the solution vectors in those regions of the front which are scarcely populated.The optimization variables for the fractional-order PID controller are the proportional-integral-derivative gains and the differ-integral orders, i.e. {Kp, Ki, Kd, λ, μ} for both the areas. For the IO-PID controller, the optimization variables are the gains only, i.e. {Kp, Ki, Kd} for both the areas. In other words, the dimension of the decision space Ω is 5 for the FOPID controller and 3 for the PID controller. The population size is taken as 15×nvar and the algorithm is run until the cumulative change in fitness function value is less than the function tolerance of 10−6 or the maximum generations (200×nvar) are exceeded. Here, nvar of parameters to be tuned by the MOO algorithm in both the areas and given bynvarPID=6andnvarFOPID=10for the two controller structures. The crossover fraction is taken as 0.8 and an intermediate crossover scheme is adopted. The mutation fraction is chosen as 0.2 and the Gaussian scheme is adopted. For choosing the parent vectors based on their scaled fitness values, the algorithm uses a tournament selection method with a tournament size of 2. The Pareto front population fraction is taken as 0.7. This parameter indicates the fraction of population that the solver tries to limit on the Pareto front [51]. For the MOO problem, the limits of {Kp, Ki, Kd} are chosen as [0,10] and the bounds of the differ-integral orders {λ,μ} are chosen within the range [0,2] which is described in (5).The uniformly distributed RNG is normally used for the crossover and mutation operations in the standard version of the NSGA-II algorithm [50,51]. However, since the strength of evolutionary algorithms lies in the randomness of the crossover and mutation operators, many contemporary researchers have focussed on increasing the efficiency of these algorithms by incorporating different random behaviours through various techniques like stochastic resonance and noise [52], chaotic maps [53], etc. These different strategies can be classified as special cases of a broader principle of diversification which essentially entails a trade-off between exploration and exploitation [54]. In [55], it has been shown that the performance of single objective evolutionary algorithms increase if different types of chaotic maps are introduced instead of the uniform RNG for the crossover and mutation operations. It has also been demonstrated in [55] that, in general, using chaotic systems for the RNG in the crossover and mutation operations may yield better result than using RNG from a noisy sequence in terms of convergence and effectiveness of the algorithms in finding global minima. In [56–58], it has been shown that the multi-objective NSGA-II algorithm can be improved by using chaotic maps and gives better result than the original NSGA-II algorithm in terms of convergence and efficiency. This is due to the fact that the chaotic process introduces diversity in the solutions. In this paper, we adopt similar policy and use chaotic Logistic map and chaotic Henon map to obtain comparable solutions and convergence with respect to the standard NSGA-II algorithm. The Logistic map is one of the simplest discrete time dynamical systems exhibiting chaos. The equation for the Logistic map is given as(11)xk+1=axk+1(1−xk)The Henon map is a discrete time dynamical system that exhibits chaotic behaviour. Given a point with coordinatesxn,yn, the Henon map transforms it to a new pointxn+1,yn+1using the set of equations(12)xn+1=yn+1−axn2yn+1=bxnThe map is chaotic for the parameters a=1.4 and b=0.3. It is actually a simplified model of the Poincare section of the Lorenz system. The output yn+1 varies in different ranges depending on the initial seed {x0,y0}. Since the Henon map is used here as a random number generator, it must produce a random number in the range [0,1]. Hence the output of the map for different initial conditions have been scaled in the range [0,1] as also done in [59].The initial seed of the Logistic map (x0) in (11) has also been chosen randomly for the fixed parameter a=4 exhibiting chaos, similar to that studied in [60]. For the implementation of the chaotic versions of the MOO algorithms, the outputs of the chaotic maps are scaled and multiplied with a uniform RNG which generates numbers in the range [0,1]. The first 500 samples of uniform RNG, the scaled output of the Henon map and the Logistic map and the outputs obtained by multiplying them with the uniform RNG are shown in Fig. 3. It also shows the histogram of the respective cases with 10,000 samples. It can be seen that even though the Logistic map and the Henon map have different distributions, the corresponding distributions obtained by multiplying them with a uniform RNG is highly skewed with lower values occurring more often than higher values. However, it is to be noted that even though both the histograms show similar skewed characteristics, it does not capture the time-domain evolution like randomness and autocorrelation of the numbers. Therefore, this generation mechanism with chaotic maps is different than simply drawing a random number from such skewed probability distributions each time.Due to the stochastic nature of the NSGA-II algorithm and also its two chaotic versions, the final Pareto fronts obtained at the end of each independent run would be slightly different with respect to one another. Therefore, multiple runs are conducted to assess the convergence characteristics of the algorithms. There are several measures to compare multiple Pareto fronts apart from the non-domination criteria. In most realistic problems, two Pareto fronts under comparison could intersect with each other which indicates that in one region one set of solutions are more non-dominated in terms of one objective whereas for the other conflicting objective the other Pareto front would be more non-dominated. Especially in such cases of weak dominance, it could be difficult to judge the quality of the MOO solutions from a global perspective. In the case of strong Pareto dominance where one front dominates the other in all objectives, such problem is avoided due no intersection between multiple Pareto fronts. In order to avoid such case-dependent strategy formulation, several generic metrics have been proposed in [45], which may indicate towards the quality of MOO solutions. In this paper, four different Pareto measures, viz. minimum hypervolume indicator, maximum diversity metric, maximum Pareto spread, minimum spacing metric are explored. Since none of the measures can capture all necessary properties of the best possible Pareto front for the controller parameters [39,61], a composite criteria is used to choose the best Pareto front.The hypervolume indicator is given by the total area/volume/hypervolume under the Pareto front with respect to the reference point as the origin. Therefore, a Pareto front closest to the origin will have the minimum hypervolume indicator showing a strong nondominance over other set of solutions [62]. The hypervolume indicator for two dimensions with reference to the origin is given by(13)HI=∑i=1N(xi−xi−1)(yi−yi−1)where N is the number of points on the Pareto front, x and y are the two dimensions, and x0 and y0 correspond to the projections of the end points of the Pareto front on the two axes, respectively. This has to be minimized to obtain a better non-dominated Pareto front.The spacing metric measures the distance between the variance of neighbouring data points on the Pareto set [63,64], which is given by(14)SP=1S−1∑i=1S(d¯−di)2where the distancedi=minj∑k=1m|xki−xkj|,{i,j}=1,2,…,Sandd¯is the mean value of di. Here, S is the number of non-dominated solutions and m is the number of objectives.The total Pareto spread is given by the Euclidean distance between the extreme points of the Pareto front [65]. The total Pareto spread helps in understanding the span of the solutions along different conflicting objectives. For two dimensions, if (x1,y1) and (x2,y2) are the coordinates of the end points of the Pareto front, then the Pareto spread is given by(15)Pspread=(x1−x2)2+(y1−y2)2The moment of inertia-based diversity metric is another popular measure to judge the quality of the Pareto fronts [66]. Let there be Spt number of points in the m-dimensional objective function space. Then the centroid for ith dimension is given by(16)Ci=∑j=1SptxijSpt,fori=1,2,…,mwhere xijdenotes the ith dimension of the jth point. Then, the diversity metric can be calculated as(17)I=∑i=1N∑j=1S(xij−Ci)2Generally, the best, worst, mean and standard deviation of the diversity metric and other measure are compared for different MOO algorithms [46,47]. In the present paper, we also report the box-plots of each of the four measures to ascertain the best Pareto front amongst 30 independent runs of each variant of the NSGA-II—nominal and chaotic. Additionally, we report the comparison of the convergence times for different controller settings and optimizers.After selecting the best Pareto front out 30 independent runs depending each of the four criteria, i.e. minimum hypervolume indicator, maximum diversity metric, maximum Pareto spread, minimum spacing metric, a best compromise solution on the Pareto front has been obtained using a fuzzy based mechanism. In [43,44], the median solution has been reported amongst all solutions on the Pareto front which has been improved here with a fuzzy-based systematic choice of the best compromise solution [46,47]. The designer may have imprecise goals for each objective function which can be encoded in the form of a fuzzy membership function μF. Here,μFifor each objective function i is taken to be a strictly monotonic and decreasing continuous function expressed as(18)μFi=1ifFi≤Fimin(Fimax−F)/Fimax−FiminifFimin≤Fi≤Fimax0ifFi≥FimaxThe value ofμFirepresents the degree to which a particular solution has satisfied the objective Fi. The membership function lies between zero and one implying worst and best satisfaction of the objective, respectively. The degree of satisfaction of each objective by each solution can be represented as(19)μk=∑i=1mμik∑j=1S∑i=1mμijwhere m is the number of objectives and S is the number of solutions on the Pareto front. The best compromise solution on the Pareto front has been chosen in such a way for which (19) reaches its maximum.Similar to [23], the system in Fig. 1 is simulated with a step input ΔPL1 of 0.02pu in the first area and the ΔPL2 of 0.008pu in the second area. The PID/FOPID controllers have been tuned using time-domain performance indices in (8) and (9) under an MOO framework to handle these load inputs. Three different controller structures are considered—traditional PID controller, slow FOPID controller (0<λ<1) and the fast FOPID controller (1<λ<2). Each of these cases are run with three different optimization algorithms—the standard NSGA-II, the Logistic map adapted NSGA-II and the Henon map adapted NSGA-II. These 9 cases (3 controllers×3 MOOs) are run for 30 times each and the statistics of the simulation time and Pareto metrics (like hypervolume indicator, diversity metric, Pareto spread and spacing metric) are calculated. The corresponding statistics are shown in the box-plots in Figs. 4–8. From Fig. 4, it can be observed that the median time taken by the chaotic versions of the NSGA-II is higher than that of the normal NSGA-II for all the controllers. This is due to the additional computational time taken by the chaotic maps in the various crossover and mutation operators which employ RNG.Fig. 5 shows the box plots of the hypervolume indicator for the three different algorithms and controller structures. From the minimum and median values, it is evident that the performance of the FOPID controller is better than the PID controller. The hypervolume indicator shows that the median values obtained using the traditional NSGA-II algorithm is better than the chaotic versions for the FOPID controllers but is worse for the PID structure.Fig. 6 shows the box plot of the moment of inertia-based diversity metric for 30 runs of all the cases. A higher value of diversity metric indicates a better Pareto front. It can be observed that the Pareto fronts obtained for the FOPID controllers using the chaotic NSGA-II algorithms have a higher value of the diversity metric. But for PID controllers, the NSGA-II gives better results. It can also be seen that the slow FOPID controller has a higher range of the diversity metric than the PID controller. This is possibly due to the extra degrees of freedom of the FO integro-differential orders of the FOPID controller which has a larger search space and thus allows more diverse solutions. The fast FOPID has a very small value of diversity metric, indicating that most of the stable solutions belong to a small region of the search space. For all the other cases, the solutions are either unstable or dominated.Fig. 7 shows the box plots of the total Pareto spread for 30 runs of all the cases. It is observed that the chaotic versions of the NSGA-II are able to obtain a wider Pareto spread for the FOPID controllers, indicating a more diverse set of solutions. However, for the PID structure, the traditional NSGA-II gives a better Pareto spread. Fig. 8 shows the box plots of the spacing metric for 30 runs of all the cases. The original NSGA-II is found to give a more uniform distribution of different solutions on the Pareto front.It is therefore clear that none of the algorithms are better than their counterparts in all the metrics individually. Also each metric represents different characteristics of the Pareto front and finding the best Pareto front must leverage on some of these criteria taken together. The diversity metric, Pareto spread and spacing metric reflect the distribution of the solutions on the Pareto front. The hypervolume criterion which indicates the non-domination of the different fronts directly affects the quality of the obtained solutions and a better non-domination implies a better control system performance. Hence non-domination is one of the most important metric among these. Therefore, for comparison, the best Pareto front which is obtained by each of the different Pareto metrics is found out of each of the 30 runs.It can be observed that for all the different Pareto metrics (hypervolume indicator, diversity metric, Pareto spread and spacing metric) the chaotic version of the NSGA-II (either Logistic map assisted or Henon map assisted) gives the best non-dominated Pareto front. This can be verified from the superimposed Pareto fronts in Figs. 9–11for the three controller structures, respectively. In most of the cases, the Logistic map-assisted NSGA-II gives better performance than the others. In Figs. 9–11, the best Pareto front (out of 30 runs) according to each of the four Pareto measures is shown. According to each criteria like the minimum hypervolume indicator, maximum diversity metric, maximum Pareto spread and minimum spacing metric, the chaotic NSGA-II versions give wider and non-dominated Pareto spreads over that with the standard NSGA-II.Next, for the sake of comparison amongst the best controller structures, the non-dominated Pareto fronts according to each of the Pareto metrics is identified from Figs. 9–11 and are superimposed in Fig. 12. It can be observed that under the nominal operating condition of the power system, the slow FOPID controller structure is more non-dominated and is therefore capable of resulting in better control performance. Although in all the four cases in Fig. 12, the slow FOPID gives the non-dominant Pareto front but depending on different criteria the best compromise solution may perform better/worse. Therefore, we here report all the best compromise solution of the three controller structures for each of the Pareto fronts in Fig. 12 (4 metrics×3 controllers=12 solutions in total). The corresponding algorithm which gives the best non-dominated Pareto front and along with the optimum controller parameters and objective functions have been reported in Table 2.The time-domain performance of the best compromise controller parameters reported in Table 2 are now compared for the four Pareto metrics (hypervolume indicator, diversity metric, Pareto spread and spacing metric). Since depending on the spread of the Pareto front in Fig. 12, the best compromise solution may be having different time-domain characteristics. The time-domain responses of the grid frequency oscillation in both the areas, tie line power flow and the control signals, have been reported for each Pareto metrics in Figs. 13–16.The time responses of the power system with the fuzzy-based best compromise solution have been shown in Fig. 13 according to the solution obtained with hypervolume indicator criterion. In other words, these solutions for the three different controller structures are obtained by calculating the best compromise solution with the fuzzy-based mechanism for each of the Pareto fronts in Fig. 12a. It is observed that the time-domain performance of the PID (for suppressing the oscillations in Δf1, Δf2 and ΔPtie) lies between those of the slow and the fast FOPID, but the control signal required by the PID controller is much higher. The slow FOPID results in less oscillations and overshoot and also has a smaller control signal. Hence it outperforms the other two controller structures. The next exploration tries to understand whether a similar response is observed if the controllers are selected based on a different Pareto metric.Fig. 14 indicates towards a similar conclusion which shows that the time-domain performance of the fuzzy-based best compromise solution obtained from the Pareto fronts of Fig. 12b, which is based on the maximum diversity metric criterion. The PID controller is found to have larger oscillations and overshoot in the time-domain performance of Δf1, Δf2 and ΔPtie along with a large value of control signal. The slow FOPID controller is found to outperform both the other two controller structures.Fig. 15 shows the time-domain performance of the fuzzy best compromise solution obtained from the Pareto fronts of Fig. 12c, which is based on the maximum Pareto spread criterion. The fast FOPID controller has a smaller control signal but has a very sluggish time response. The slow FOPID controller has a faster time response than the fast FOPID but this comes at the cost of a higher control signal. However, the slow FOPID is better than the PID in terms of both the peak overshoot and the control signal.Fig. 16 shows the time response of the fuzzy best compromise solution obtained from the Pareto fronts of Fig. 12d, which is based on the minimum spacing metric criterion. The slow FOPID controller is found to outperform the other two structures in terms of both time-domain performance and low value of control signal.It is desirable that the designed controllers should work in a wide range of operating conditions without significant deterioration in performance. In other words, the controllers should be robust with respect to changes in system parameters. To illustrate this, the fuzzy best compromise solutions for the slow FOPID, fast FOPID and the PID controllers for two different Pareto metrics (minimum hypervolume indicator and maximum diversity metric), are simulated by varying the synchronization coefficient (T12). The corresponding time response curves for Δf1, Δf2,Δu1, Δu2 and ΔPtie are plotted in Figs. 17 and 18, respectively. A similar study for the single objective FOPID controller has also been done in [34].From the time response characteristics of Δf1, Δf2 and ΔPtie in Fig. 17 with increase in T12 by a factor of 2, it might appear that the PID controller performs better than the FOPID versions as the latter introduces small oscillations and do not settle to a steady-state value quickly. However, the control signals are drastically higher for the PID controller and have sharp jumps which might be detrimental for the governor.Fig. 18 shows the robustness of the fuzzy best compromise solutions for the case of the maximum diversity metric criterion with increase in T12 by a factor of 2 and 3. It can also be observed that the fast FOPID controller is better than the slow FOPID and the PID controller when T12 is increased gradually. For the latter two controllers, the system becomes unstable, while the fast FOPID controller is still able to maintain a time response almost similar to the nominal case which proves the superiority of the FOPID in LFC over the PID.Simulation reported so far has been done with the nominal system parameters (in Section 6) and under uncertain parameters of the power system (Section 7). The capability of the three controller structures to damp grid frequency oscillations even in the presence of a random change in load pattern in both the areas [29] is explored next. Fig. 19shows the time response of the system obtained by different controllers where the load patterns are randomly changing within PL1=0.02pu and PL2=0.008pu [37]. In terms of fast settling time and low controller effort, the slow FOPID controller is found to be better than the other two controller structures.Overall, both the designed solutions using the PID and the FOPID controllers show sufficient robustness to system parameter variations and random load change with FOPID variants outperforming the PID. Therefore, the FOPID as load-frequency controller could be applied in a practical setting where significant uncertainty exists with respect to system parameters as well as the change in load pattern.The following points summarize the main findings of the reported simulations in the paper.Irrespective of the chosen MOO metric (like hypervolume indicator, total Pareto spread, etc.), the Pareto front obtained by the chaotic NSGA-II algorithm always results in a better set of solutions (in terms of non-domination). In other words, even though all the algorithms produce a set of non-dominated solutions as the output, those that are obtained from the chaotic NSGA II are more non-dominated vis-à-vis those obtained from their non-chaotic counterparts. For the present LFC problem, in most cases, the Logistic map-assisted NSGA-II works better than the corresponding Henon map-assisted version unlike [43].Under nominal conditions and random load change, slow FOPID performs better in terms of control system performance as indicated from the fast settling time and keeping the maximum values of Δf1, Δf2, Δu1, Δu2 and ΔPtie low.When the system parameters are perturbed (e.g. synchronizing coefficient is changed), either the fast or the slow FOPID controller is better depending on the chosen Pareto metric, but it is always better than the PID controller.In this paper, multi-objective design of an FOPID controller is done for LFC of a two-area power system with GRC in turbine, reheater stages and dead-band in the governor. The NSGA-II algorithm and its chaotic versions are employed for the MOO task. Different Pareto metrics are calculated and the optimization algorithms are evaluated based on multiple Pareto metrics taken together. Numerical simulations show that the chaotic versions of the NSGA-II algorithm gives better Pareto solutions over the ordinary NSGA-II algorithm. In general, the chaotic Logistic map-assisted NSGA-II performs better over the chaotic Henon map-assisted NSGA-II. It is also shown that the FOPID controller outperforms the PID controller for multi-objective designs of the two-area LFC problem. Thus, the FOPID controllers are a viable alternative to the conventional IO-PID controllers in load-frequency control of inter-connected power systems.

@&#CONCLUSIONS@&#
