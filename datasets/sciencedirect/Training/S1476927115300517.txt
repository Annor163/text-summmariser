@&#MAIN-TITLE@&#
MOEPGA: A novel method to detect protein complexes in yeast protein–protein interaction networks based on MultiObjective Evolutionary Programming Genetic Algorithm

@&#HIGHLIGHTS@&#
A method of multiobjective problem based on network topological property is proposed.A method of identifying protein complexes based on MOEPGA in PPI network is proposed.Results show MOEPGA is superior to several prediction algorithms.

@&#KEYPHRASES@&#
Protein–protein interaction (PPI) network,Protein complex,Multiobjective evolutionary,Normalized clustering score,

@&#ABSTRACT@&#
The identification of protein complexes in protein–protein interaction (PPI) networks has greatly advanced our understanding of biological organisms. Existing computational methods to detect protein complexes are usually based on specific network topological properties of PPI networks. However, due to the inherent complexity of the network structures, the identification of protein complexes may not be fully addressed by using single network topological property. In this study, we propose a novel MultiObjective Evolutionary Programming Genetic Algorithm (MOEPGA) which integrates multiple network topological features to detect biologically meaningful protein complexes. Our approach first systematically analyzes the multiobjective problem in terms of identifying protein complexes from PPI networks, and then constructs the objective function of the iterative algorithm based on three common topological properties of protein complexes from the benchmark dataset, finally we describe our algorithm, which mainly consists of three steps, population initialization, subgraph mutation and subgraph selection operation. To show the utility of our method, we compared MOEPGA with several state-of-the-art algorithms on two yeast PPI datasets. The experiment results demonstrate that the proposed method can not only find more protein complexes but also achieve higher accuracy in terms of fscore. Moreover, our approach can cover a certain number of proteins in the input PPI network in terms of the normalized clustering score. Taken together, our method can serve as a powerful framework to detect protein complexes in yeast PPI networks, thereby facilitating the identification of the underlying biological functions.

@&#INTRODUCTION@&#
Proteins are critical components of cell activities and are essential to our understanding of molecular function as well as biological process. In biological organisms, proteins are usually organized into a protein complex, in which they carry out specific biological functions cooperatively (Zhang et al., 2013). For example, proteins YDL105W, YDR288W, YEL019C, YER038C, YLR007W, YLR383W, YML023C, and YOL034W form a complex “Smc5-Smc6” and regulate both recombination and kinetochore sumoylation to promote chromosomal maintenance during growth process (Yong-Gonzales et al., 2012). Therefore, studies have been focused on elucidating protein functions in PPI networks based on their interacting partners (Girvan and Newman, 2002; Jin et al., 2015; Mering et al., 2002), which further strengthen our biological knowledge on protein assembly processes for cellular organization.Although there are a number of ways to detect protein complexes experimentally, such as yeast-two-hybrid (Zhang et al., 2013) and tandem affinity purification with mass spectrometry (Chen and Wu, 2013; Zhang et al., 2013), they were shown to have certain limitations (Li et al., 2005). Specifically, PPI data derived from high-throughput experiments usually have high false-positive and false-negative rates, which substantially affects the accuracy of the experiment results (Chen and Wu, 2013). Therefore, computational approaches to detect protein complexes are developed as useful complements to the experimental methods.Several methods based on density have been proposed to identify densely connected subgraphs in PPI networks, where subgraphs with density above a pre-defined threshold were considered as protein complexes, such as MCODE (Bader and Hogue, 2003), DPClus (Altaf-UI-Amin et al., 2006), NEMO (Rivera et al., 2010), SPICi (Jiang and Singh, 2010), and graph entropy based algorithms (Chen, 2013; Kenley and Cho, 2011). Notably, such methods tended to discard the peripheral proteins as they connected to the core clusters with weak links. Nevertheless, these peripheral proteins can display true interactions that have been experimentally validated (Luo et al., 2007; Pizzuit and Rombo, 2012). Another type of approaches for identifying protein complexes employed tradition hierarchy clustering techniques, which were mainly based on the distance between proteins to identify significant clusters (Pizzuit and Rombo, 2012) and include such methods as HC-PIN (agglomerative approach) (Wang et al., 2011) and G-N algorithms (divisive approach) (Girvan and Newman, 2002). In Wang et al. (2011), HC-PIN showed strong performance with high accuracy because it mainly depended on the local metric of edge clustering value. In addition, there were some variants of network topology features. For example, Nepusz et al. (2012) proposed a ClusterONE algorithm based on the notion of the cohesiveness score to identify protein complexes in PPI networks. Such cohesiveness showed that proteins in a complex displayed strong and frequent connections within the complex and weak and rare connections to proteins out of the complex. Liu et al. (2012) proposed an algorithm based on the clique percolation and distance restriction to identify protein complexes in PPI network, which can effectively identify middling scale protein complexes and compensate for the drawback of clique structure. Although a variety of computational approaches have been introduced during the past decade, it still remains a challenge to effectively identify protein complexes by means of network topological features, especially for those methods which only take single network topological property into account.To address this issue, we develop a novel method for protein complex prediction called MultiObjective Evolutionary Programming Genetic Algorithm (MOEPGA) based on multiple network topological properties, namely, density, size, and characteristic path length (CPL). Our algorithm first analyzes these common network topological characteristics of known protein complexes in yeast PPI networks, and then formulates the objective function according to the distribution of the network topological features, finally we describe our algorithm, which mainly consists of three steps, population initialization, subgraph mutation and subgraph selection operation. To evaluate the performance of our method, we apply MOEPGA as well as several state-of-the-art algorithms on two well-studied yeast PPI network of DIP and GAVIN. The experiment results show that our method can not only cover a certain number of proteins in the input PPI network in terms of the normalized clustering score but also achieve higher accuracy in terms of fscore. The remainder of this paper is organized as follows: Section 2 presents the terminologies used in this study and describes the MOEPGA approach for protein complex prediction in detail. Section 3 shows the evaluation metrics and the experimental results. Finally, we draw some conclusions and address our future work.We first present the relative terminologies used in our experiments and then describe the MOEPGA algorithm in detail.A PPI network can be denoted by a simple undirected graph G=(V,E), where nodes V represent proteins in the PPI network, and edges E correspond to an interaction between two different proteins. A subgraph S is a subset of G, which is described as S⊂G, where S=(V′,E′), V′⊂V, E′⊂E). Protein complexes are usually supposed to be subgraphs of PPI networks. The density of a subgraph S (Chen and Wu, 2013) is defined as the ratio of the number of edges within S to the maximum number of possible edges, which is described as Eq. (1).(1)Density(S)=2×NeNv×(Nv−1)where Ne is the number of edges in S, and Nv is the number of vertices within it. For a subgraph S, the size of subgraph denoted by Size(S) (Shelokar et al., 2014) is the sum of edges Ne and vertices Nv in the subgraph,(2)Size(S)=Ne+NvThe subgraph S of the CPL (Watts and Strogatz, 1998) is defined as the average number of edges in the shortest paths between all vertex pairs given by(3)CPL(S)=∑i>jDij(1/2)×Nv×(Nv−1)In Eq. (3), the numerator indicates the sum of the shortest paths between all vertex pairs (Vi,Vj), whereas the denominator presents the number of the all possible edges within subgraph S. In our experiment, the shortest path is evaluated using the Floyd algorithms (Shier, 1981).In this section, motivated by Shelokar et al. (2014), which employs mulitobjective evolutionary programming method for mining three-objective (i.e., support, size, and diameter of subgraph) frequent subgraphs, and is tested on five synthetic as well as the world scientogram database, the results highlight the application of the method proposed in Shelokar et al. (2014) and discover more diversified subgraphs, we propose MOEPGA for identifying protein complexes from PPI networks with the aim of solving the defects of the single network topological property. First, we present the problem description of multiobjective in terms of identifying protein complexes from PPI networks. Second, we achieve the calculation formula of the objective function by analyzing protein complexes in benchmark dataset. Third, we describe the MOEPGA in detail. MOEPGA generates next generation subgraphs with edge mutation and selection operation, and extracts nondominated subgraphs (Shelokar et al., 2014) by optimizing the three objective functions at each evolutionary process and then saves them to the Archive. Finally, our algorithm is performed on yeast PPI network of DIP and GAVIN, and the identified protein complexes are evaluated by using fscore, clustering score, and normalized clustering score. The framework is illustrated in Fig. 1.We first define the objective functions of the MOEPGA in terms of identifying protein complexes from PPI networks. Given a graph G, we extract the nondominated subgraphs representing all the connected subgraphs in G defined by three user-defined objectives from formulas (1)–(3):(4)F(S)=(f1(S),f2(S),f3(S))wheref1(S)=Max. densityf2(S)=Min. sizef3(S)=Min. CPLS∈XF(S)∈YThe solution x is no worse than x′ in all objectives.The solution x is strictly better than x′ in at least one objective.If any of the above conditions is violated, the solution x does not dominate solution x′. To mine the all possible nondominated subgraphs from PPI networks, we employ the linear summation of objective function values obtained from every subgraph. Based on the analysis of the single topological structures as well as a large number of experiments, we find that the combination of three objectives can compensate for the shortcoming of single objective, which lead to improve quality of the identified protein complexes. Finally, we construct the following formula:(5)F(S)=f1(S)+3f2(S)+1f3(S)We set 3 with f2(S) in the numerator to fix the value of 3/f2(S) in (0, 1].The MOEPGA algorithm roughly consists of three steps. First, MOEPGA initiates the subgraph population and preprocesses data from PPI networks. Second, MOEPGA performs the mutation procedure to generate the child population. Finally, MOEPGA executes subgraph selection and produces the next generation of subgraphs.In the first step, MOEPGA first initiates subgraph population R with graph G, i.e., one-edge subgraphs from the original PPI network and then judges whether overlapping vertices exist between subgraphs. If no overlap exists, we extract and discard these nondominated subgraphs in R.In the second step, MOEPGA performs the mutation operation to generate child subgraphs. To generate a child subgraph S′, a mutation operation is executed on a subgraph S encoded in a parent individual in the population R. If an overlapping vertex exists between two parent subgraphs, the mutation creates child subgraphs by extending all instances of the parent subgraph S in the dataset G by an edge. Fig. 2a shows an example of mutation through an edge. In Fig. 2a, the parent subgraph “” in level 1 creates two child subgraphs “”, “” by an edge “”, “”, respectively.If more than one edge may be extended between two subgraphs, mutation will be executed by randomly selecting an edge (see Algorithm 1). For example, in Fig. 2b, for subgraph S1, S2, the three subgraphs below are reasonable child subgraphs. Mutation is applied to all parent individuals in R to create the child population Qgen. Every child subgraph in Qgen is assessed using F(S) in Eq. (5).In the third step, MOEPGA constructs a new parent population R with temporary population R∪Qgen. To create the next generation, MOEPGA first sorts all subgraphs in R∪Qgen according to F(S) and then removes the repeat subgraphs. The next generation subgraphs with probability Ps are finally generated from the temporary population. In Fig. 2a, only one subgraph is present in level 3 because the other two subgraphs are removed. Notably, MOEPGA can generate some nondominated subgraphs during evolutionary, such as “” in Fig. 2a. In order to store the nondominated subgraphs, MOEPGA apply an external archive Archive which is updated at the end of each generation (see Algorithm 2). The output of MOEPGA is the set of nondominated subgraphs saved in Archive after the algorithm is run. The description of MOEPGA algorithm is presented in Table 1.Algorithm 1Mutation operator.Mutation (Qgen, R, Pm)Input:Parent subgraphs set R;Output:Child subgraphs set Qgen1.total=size(R)×Pm;2.for(i=1; i≤total; i++)3.{4.for(j=i+1; j≤total; j++)5.{6.if (V=Vi∩Vj)≠∅ then//Si=(Vi, Ei), Sj=(Vj, Ej)7.{8.VtTemp.push_back(V),9.Random_shuffle(VtTemp),//shuffle randomly the order of the set V10.v=VtTemp[0],//extract a vertex with equal probability in VtTemp11.if|V′={v1|v1∈Vj,(v,v1)∈Ej,Sj=(Vj,Ej)}|≥1then12.{13.VtTemp.push_back(V′),14.Random_shuffle(VtTemp),15.v′=VtTemp(0),16.Ei=Ei∪(v,v′), //mutate Siwith edge(v,v′)17.}18.}19.}20.Qgen=Qgen∪Si,21.}22.Return QgenUpdate archive operator.UpdateArchive(Archive,Qgen)Input:Child subgraphs set Qgen;Output:Archive, Qgen;1.for (i=1; i≤size(Qgen); i++)2.{Si→m_bIsNonDominateSubgraph=ture;}3.for (i=1; i≤size(Qgen); i++)4.{5.for(j=i=1; j≤size(Qgen); j++)6.if (V=Vi∩Vj)≠∅ then //Si=(Vi, Ei), Sj=(Vj, Ej)7.{8.Si→m_bIsNonDominateSubgraph=false;9.break;10.}11.if (Si→m_bIsNonDominateSubgraph=ture)12.{13.Add(Si, Archive);14.Del(Si, Qgen);// Delete subgraph Sifrom Qgen15.}16.}17.ReturnArchive, Qgen

@&#CONCLUSIONS@&#
Protein complex identification is an important analysis method that enables us to uncover and understand the cellular organizations and biological functions in PPI networks. Generally, existing approaches mainly identify protein complexes by using a single network topological property, such as density, distance, and so on. However, a single objective makes it difficult to find more protein complexes. After analyzing the three network topological characteristic of benchmark protein complexes in PPI networks, we propose MOEPGA to identify protein complexes by integrating single network topological property. MOEPGA requires three parameters, namely, maximum iteration times MaxIter, mutation probability Pm, and selection probability Ps. We set MaxIter=50, Pm=0.1, and Ps=0.9. MOEPGA obtained satisfactory experimental results. MOEPGA is implemented in C++, and all experiments are performed on an Intel Xeon(R) X5670 with 2.93GHz and 56GB RAM running Windows 7.0.We compare the performance of our algorithm MOEPGA with that of several other algorithms based on single network topological property: MCODE, DPClus, NEMO, SPICi, HC-PIN, and ClusterONE. The experimental results show that MEOPGA can identify a greater number of predicted protein complexes and achieve the highest value of fscore. In addition, MOEPGA outperforms the MCODE and HC-PIN algorithms on the DIP dataset in terms of the normalized clustering score.In the future, we will apply our approach to study other types of biological networks, such as transcriptional regulatory networks and metabolic networks. Furthermore, we also aim to apply the proposed method to study weighted biological networks further.