@&#MAIN-TITLE@&#
Self-adaptive check and repair operator-based particle swarm optimization for the multidimensional knapsack problem

@&#HIGHLIGHTS@&#
We propose a novel self-adaptive check and repair operator (SACRO).Particle swarm optimization (PSO) is utilized to cooperate with the idea of SACRO.The SACRO based algorithms were tested using 137 benchmarks from OR-Library.The SACRO is competitive and robust than traditional check and repair operator.The SACRO based algorithms rival other state-of-the-art PSO and other algorithms.

@&#KEYPHRASES@&#
Combinatorial optimization,Self-adaptive check and repair,Multidimensional knapsack problem,Particle swarm optimization,Pseudo-utility ratio,OR-Library,

@&#ABSTRACT@&#
The multidimensional knapsack problem (MKP) is a combinatorial optimization problem belonging to the class of NP-hard problems. This study proposes a novel self-adaptive check and repair operator (SACRO) combined with particle swarm optimization (PSO) to solve the MKP. The traditional check and repair operator (CRO) uses a unique pseudo-utility ratio, whereas SACRO dynamically and automatically changes the alternative pseudo-utility ratio as the PSO algorithm runs. Two existing PSO algorithms are used as the foundation to support the novel SACRO methods, the proposed SACRO-based algorithms were tested using 137 benchmark problems from the OR-Library to validate and demonstrate the efficiency of SACRO idea. The results were compared with those of other population-based algorithms. Simulation and evaluation results show that SACRO is more competitive and robust than the traditional CRO. The proposed SACRO-based algorithms rival other state-of-the-art PSO and other algorithms. Therefore, changing different types of pseudo-utility ratios produces solutions with better results in solving MKP. Moreover, SACRO can be combined with other population-based optimization algorithms to solve constrained optimization problems.

@&#INTRODUCTION@&#
The 0–1 multidimensional knapsack problem (MKP) is a well-known NP-hard optimization problem. MKP is one of the most intensively studied discrete programming problems [1]. Many practical problems are commonly modeled as MKPs [2,3]. MKP can be mathematically formulated as follows:(1)maxz=∑j=1ncjyj(2)s.t.∑j=1naijyj≤bi,i=1,2,…,m,(3)yj∈{0,1},j=1,2,…,n,where n is the number of items and m is the number of knapsack constraints, with the capacity bifor i=1, 2,…,m. Each item j requires aijunits of resource consumption in the ith knapsack and yields cjunits of profit upon inclusion. The goal is to find an item subset that yields the maximum profit without exceeding the resource capacity. All entries are naturally nonnegative.MKP is a combinatorial optimization problem [4]. From the perspective of computation, the different proposed algorithms for approaching the MKP can be broadly grouped into two classes: exact algorithms and heuristic/metaheuristic algorithms. Exact techniques included the Lagrangian methods, surrogate relaxation techniques, special enumeration techniques and reduction schemes, and the branch-and-bound methods. Exact algorithms are not practical for MKP because the search space grows exponentially with the problem size and exhaustive search is infeasible. Therefore, several modern heuristic algorithms, such as simulated annealing [5], Tabu search [6], genetic algorithms [7], ant colony algorithms [8], particle swarm optimization (PSO) [9,10], and other heuristics [11], were developed to solve MKP.Many works have not successfully proved that crude heuristic algorithms were an effective tool for the MKP. Most of them cannot solve large-scale problems effectively and efficiently. Very recently, some works [12,13] proposed and designed heuristics with new repair operator particularly for large-scale problems by restricting the algorithms to search only the feasible space. Due to the significance of the MKP in academic research and real applications, it is important to develop novel algorithms with satisfactory performances.PSO is a promising alternative to other population-based optimization algorithms [14–18] for solving combinatorial optimization problems. This conventional heuristic approach was designed by Kennedy and Eberhart [19] to optimize various continuous nonlinear functions. PSO is a random search algorithm that simulates natural evolutionary processes to solve complex optimization problems. The PSO prototype is restricted to the real number space. However, many optimization problems are set in a space with discrete or qualitative distinctions between variables. Kennedy and Eberhart [20] developed a discrete version of the algorithm to address this problem.PSO has been successfully applied to various areas, such as the traveling salesman problem [21], inspection policy [22], classification problem [23], economic statistical control chart design [24], reliability networks [25], multi-modal problems [26], feature selection [27], multi-objective optimization [28], supplier selection [29], production design and manufacturing [30], structure design [31], vehicle crashworthiness [32], and MKP [33].This study proposes a self-adaptive repair mechanism to convert infeasible solutions to feasible ones for PSO. The proposed mechanism and algorithms are compared with state-of-the-art PSO algorithms to solve the MKP using the available test datasets in the OR-Library [34].The rest of the paper is organized as follows: Section 2 provides the basic concepts of PSO algorithm. The proposed self-adaptive repair mechanism and PSO algorithms are presented in Sections 3 and 4, respectively. Section 5 summarizes the simulation and evaluation results of the proposed algorithms on the test datasets. The conclusion is presented in Section 6.

@&#CONCLUSIONS@&#
A novel SACRO was proposed to improve the efficiency of PSO algorithms for solving MKPs. We introduced SACRO into two existing PSO algorithms, namely, SACRO–BPSO–TVAC and SACRO–CBPSO–TVAC. A total of 137 benchmark problems (including low- and high-dimensional knapsack problems) from the OR-Library were tested. The results were then compared with those of other existing population-based algorithms. The simulation and evaluation results show that SACRO is more competitive and robust than the simple or improved CROs. The proposed SACRO-based algorithms (i.e., SACRO–BPSO–TVAC and SACRO–CBPSO–TVAC) also rival other state-of-the-art population-based algorithms. Therefore, changing different types of pseudo-utility ratios produces final solutions that yield good results in PSO. Further research is necessary to establish the proposed method and algorithm for general use. First, SACRO can be combined with other population-based optimization algorithms to solve the MKP. Population-based SACRO algorithms must also be evaluated over other binary test problems to show their robustness in handling other problem types. These research topics are helpful in establishing the population-based SACRO algorithms for general use.