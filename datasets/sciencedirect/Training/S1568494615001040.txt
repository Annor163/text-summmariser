@&#MAIN-TITLE@&#
Two parameter tuned multi-objective evolutionary algorithms for a bi-objective vendor managed inventory model with trapezoidal fuzzy demand

@&#HIGHLIGHTS@&#
We present a bi-objective inventory model for a supply chain problem.We consider trapezoidal fuzzy demand and two constraints in the modeling.We employ MOEA to optimize a bi-objective integer nonlinear programming problem.The parameters of metaheuristics are tuned by the Taguchi method.

@&#KEYPHRASES@&#
Vendor managed inventory,Trapezoidal fuzzy demand,NSGA-II,NRGA,Parameter tuning,Taguchi method,

@&#ABSTRACT@&#
This paper presents a bi-objective vendor managed inventory (BOVMI) model for a supply chain problem with a single vendor and multiple retailers, in which the demand is fuzzy and the vendor manages the retailers’ inventory in a central warehouse. The vendor confronts two constraints: number of orders and available budget. In this model, the fuzzy demand is formulated using trapezoidal fuzzy number (TrFN) where the centroid defuzzification method is employed to defuzzify fuzzy output functions. Minimizing both the total inventory cost and the warehouse space are the two objectives of the model. Since the proposed model is formulated into a bi-objective integer nonlinear programming (INLP) problem, the multi-objective evolutionary algorithm (MOEA) of non-dominated sorting genetic algorithm-II (NSGA-II) is developed to find Pareto front solutions. Besides, since there is no benchmark available in the literature to validate the solutions obtained, another MOEA, namely the non-dominated ranking genetic algorithms (NRGA), is developed to solve the problem as well. To improve the performances of both algorithms, their parameters are calibrated using the Taguchi method. Finally, conclusions are made and future research works are recommended.

@&#INTRODUCTION@&#
Inventory management, one of the main issues in supply chain environments, plays an important role in reducing total system cost. While there are several models available in the literature to control inventories, the most well known is the classical economic order quantity (EOQ) formula proposed by Harris in 1913 [1]. Although the EOQ model was used in many practical applications due to its ease of use and simplicity, many researchers tried to extend it under real-world conditions since it involves several restrictive assumptions. Interested readers are referred to Pentico and Drake [2] for an overview of deterministic inventory models.Several approaches such as continuous replenishment (CR), advanced continuous replenishment (ACR), quick response (QR), and vendor managed inventory (VMI) were proposed in the retailer-supplier partnerships of multi-echelon inventory systems to control demand variability [3]. Among them, the VMI approach, which was applied by successful retailers like Wal-Mart and Kmart, is the most popular one because of its benefits [3]. The VMI is an approach that controls the inventories of the retailers to reduce their total inventory cost considering the shared sale information from them. Yao et al. [4] and Sari [5] investigated supply chain improvements using the VMI policy. Elvander et al. [6] developed a framework to apply the VMI strategy better. Goyal [7] presented a single-vendor single-retailer supply chain model in production environments and Hill and Omar [8] extended it by considering different shipments made to the retailers. Moreover, Zavanella and Zanoni [9] developed the VMI model for a single-vendor multi-retailer system in which the consignment stock (CS) policy was utilized.The EOQ formula can be used in the VMI modeling with respect to certain demand and lead-time [8]. To name a few, Yao et al. [4] modeled the VMI problem for single-vendor single-retailer supply chain; showing the advantages of using the VMI policy. Van der Vlist et al. [10] considered the costs of shipments from the supplier to the buyers for the model that was presented by Yao et al. [4]. Darwish and Odah [11] investigated a VMI model for the single-vendor multi-retailer supply chain in which the vendor pays a penalty if items exceed definite bounds. Besides, they applied a solution algorithm that reduces the computational efforts significantly. Pasandideh et al. [12] proposed a one-vendor one-retailer VMI model with two constraints for a two-echelon supply chain in which shortages were backordered. They applied a parameter-tuned genetic algorithm (GA) to find a near optimum solution of the complicated model developed in their research. Afterward, Cárdenas et al. [13] improved the model in [12] by taking into account a constraint in which the backorder level could not be more than the order quantity.Sadeghi et al. [14] were the first who developed a VMI model considering the replenishment frequency at which retailers are replenished by the vendor. They developed a GA with its parameters tuned using the response surface methodology (RSM), to solve the problem. Furthermore, Yu et al. [15] provided a VMI model with respect to perishable goods, and applied a golden search algorithm for optimization. Moreover, Kristianto et al. [16] studied an adaptive fuzzy VMI model in which the Bullwhip effect is reduced. For a good review on the VMI implementations, interested readers are referred to Marqus et al. [17].Many researchers including Nachiappan and Jawahar [18], Gupta et al. [19], Yang et al. [20], Pasandideh et al. [12], and Sadeghi et al. [14] developed meta-heuristics to solve some integer nonlinear programming (INLP) problems that could not be solved by exact methods in a reasonable time. In addition, while there are several methods such as the single aggregate objective function (AOF) and multi-objective evolutionary algorithms (MOEAs) to optimize multi-objective problems, MOEAs that apply Pareto-based ranking have become a popular approach. However, most probably the only research that uses a MOEA in the VMI literature is due to Liao et al. [21] who presented a non-dominated sorting genetic algorithm (NSGA-II) to optimize a multi-objective location-inventory model, in which the parameters of their algorithm were not calibrated.Considering the EOQ approach, this paper formulates a bi-objective VMI problem of a single-vendor multi-retailer supply chain with a central warehouse. In this problem, the annual demand is assumed trapezoidal fuzzy number (TrFN) so that the centroid defuzzification is used to defuzzify the fuzzy output functions in all calculations. The first objective is to determine the replenishment rate of the vendor, the replenishment frequency of the retailers, and the order sizes to minimize the total inventory cost. Optimizing the warehouse space is the second objective. In addition, the number of orders and the available budget of the vendor are the two constraints of the problem. We show the model is of a bi-objective integer nonlinear programming (INLP) type so that the use of a multi-objective evolutionary algorithm to find Pareto front solutions is justified. Consequently, a non-dominated ranking genetic algorithm (NSGA-II) is developed to find Pareto fronts of the proposed bi-objective VMI (BOVMI) problem. Since there is no benchmark available in the literature to validate the results, another MOEA, namely non-dominated ranking genetic algorithms (NRGA) is developed as well. Since the parameters of MOEAs affect the quality of the solutions obtained, the parameters of both algorithms are calibrated using the Taguchi method.Presenting a BOVMI model with one central warehouse under fuzzy demands and constrained number of orders and budget are the main innovation of this paper. Furthermore, applying two parameter-tuned MOEAs to optimize the BOVMI problem is another innovation in solution algorithms.The remainder of the paper is organized as follows. In the next section, the notations and the assumptions are described. The BOVMI model and the solution algorithms are presented in Sections 3 and 4, respectively. Section 5 contains the tuning procedure of the parameters. Section 6 evaluates the meta-heuristics. Finally, conclusions and recommendations are presented in Section 7.Assumptions and notations used in this paper are as follows:•i an index used for a retailer; i=1, 2, …, rr number of retailersD˜ithe total annual fuzzy demand for retailer iD˜the total annual fuzzy demand for the vendor and warehouse:D˜=∑i=1rD˜iAiordering cost for retailer iAvordering cost of the vendorAwordering cost of the warehousehiholding cost for retailer ihvholding cost of the vendorH holding cost for warehouseR reorder pointn replenishment frequency of retailers by vendor (a decision variable)m replenishment frequency of vendor by warehouse (a decision variable)qiorder quantity for retailer i (decision variables)q order quantity for all retailers:q=∑i=1rqiQvthe annual vendor's total order quantity:Qv=nqQwthe annual total order quantity of the warehouse:Qw=mQvTicycle time for retailer iTRcycle time for retailersTvvendor cycle timeTwcycle time for warehousef space required storing one unit of the productN maximum number of orders for vendorc unit purchase price of the productC available budget for vendorF the warehouse spaceTC minimum total cost in the VMI systemSimilar to Darwish and Odah [11] it is assumed that retailers share a unique consumption interval, that is Ti=TR; i=1, 2, …, r. In other words, the retailers are replenished at the same time resulting in(1)qiD˜i=q1D˜1⇒qi=q1D˜i/D˜1;i=2,3,…,rwhere q1 is the quantity delivered to retailer 1.The vendor delivers a batch of sizeq=∑i=1rqiin each cycle of length TR. In addition, everyTvtime the vendor's order quantity can be obtained by(2)Qv=nq⇒Qv=nq1D˜/D˜1where n is the replenishment frequency for retailers by the vendor. In other words, all retailers are replenished in n parts, each with quantity q.Similarly, Eq. (3) shows the total order quantity of the warehouse everyTwtime:(3)Qw=mQvwhere m is called the replenishment frequency of vendor by warehouse.In summary, the vendor accepts full responsibility for ordering costs and hence retailers face only holding cost. Besides, based on the EOQ policy, it is assumed that there is an instantaneous replenishment for the vendor and retailers and the reorder point is zero (R=0). Further, the system will lose extra demand and does not permit any surplus shipment. It is also assumed that the retailers sell all of the products transferred by the vendor. Hence,D˜=∑i=1rD˜i,whereD˜is called the vendor's fuzzy annual demand with the trapezoidal fuzzy number (TrFN). In addition, the vendor delivers all products from the warehouse to the retailers inTwtime, makingD˜the annual demand for both the vendor and the warehouse. Finally, there are two constraints on the vendor, namely the number of orders, and budget. Fig. 1shows inventory levels in a supply chain consisting of a single-warehouse, a single-vendor, and two retailers.Based on the assumptions and derivations made in the previous section, a bi-objective VMI model is developed here. The objectives are (1) minimization of total inventory cost and (2) minimization of the warehouse space.The total inventory cost of the chain is given in Eq. (4)(4)TCVMI=THCR+TOCv+THCv+TOCw+THCwwhere THCRis retailers’ holding cost, andTOCvandTHCvare the vendor's ordering and holding costs, respectively. Similarity,TOCwandTHCware called the ordering and holding costs of the warehouse, respectively. Moreover, Eq. (5) shows the required warehouse space as the second objective:(5)F=fQvwhere f is called the space required storing one unit of the product.In order to derive the first objective, the total holding cost of all retailers per unit time (everyTwtime) is(6)THCR=∑i=1rhiqi2Moreover, the total ordering cost of the vendor per unit time that consists of retailers and vendor ordering costs can be shown to be(7)TOCv=mAv+mn∑i=1rAiD˜QwNote thatTOCvis multiplied byD˜/Qwto obtain the total annual cost.Since the vendor's inventory is reduced by a batch of products delivered to retailers, based on Yao et al. [4] his average inventory is obtained as(8)Iv=((Qv−q)+(Qv−2q)+(Qv−3q)+⋯+(Qv−(n−1)q)+0)n(9)Iv=nQvn−qn∑(1+2+3+⋯+(n−1))(10)Iv=Qv−qn×(n−1)n2(11)Iv=Qv−q(n−1)2Note that the vendor's inventory reduces to(Qv−q)when a shipment of q products is delivered to retailers. Then, replacing Eq. (2) into Eq. (11), the average inventory of the vendor becomes(12)Iv=q(n+1)2As a result, the total holding cost of the vendor per unit time is(13)THCv=hIvIn addition, the total ordering cost of the central warehouse per unit time is obtained by(14)TOCw=AwD˜QwThus, the total holding cost of the warehouse per unit time can be written as(15)THCw=HwQv(m+1)2As previously stated, the vendor faces two constraints: (1) number of orders is limited to N that results in inequality (16) and (2) a maximum available budget of C that leads to inequality (17):(16)∑i=1rD˜iQv≤N(17)cQv≤Cwhere c is the unit purchase price of the product.With the above derivations, the BOVMI model with fuzzy demand becomes(18)MinTC=Av+n∑i=1rAiD˜D˜1D˜nq1+(n+1)hvD˜q12D˜1+q1D˜1∑i=1rhiD˜i2+AwD˜D˜1D˜mnq1+(m+1)HD˜nq12D˜1(19)MinF=fD˜nq1D˜1s.t.(20)D˜D˜1D˜nq1≤N(21)cnq1D˜D˜1≤C(22)int:n,m,q1>0where due to the fuzzy nature of the demandD˜/D˜cannot be simplified.In the next section two multi-objective meta-heuristics are proposed to obtain Pareto front solutions on the number of retailers’ and vendor's replenishments along with the order quantities of the retailers.Since the developed fuzzy VMI model is bi-objective, a MOEA of NSGA-II is proposed in this section to find Pareto fronts. Besides, to validate the results obtained another MOEA, namely NRGA, is proposed for comparison purposes. These MOEAs use the centroid defuzzification (also called center of gravity) procedure to evaluate Pareto sets. Fig. 2shows a graphical representation to employ these algorithms in optimizing the developed BOVMI model.Considering a set of Pareto optimal solutions, MOEAs optimize two or more conflicting objectives. Deb et al. [22] presented the non-dominated sorting genetic algorithm-II (NSGA-II) as one of the best technique to obtain Pareto frontiers. NSGA-II generates randomly population P1 with respect to population size Np. The chromosomes in P1 are then sorted into several fronts of non-dominated solutions. Next, the tournament selection operator selects chromosomes to create offspring population O1 considering a crossover rate Pcand a mutation rate Pm. Afterward, NSGA-II merges P1 and O1 to form Rtand then sorts Rtin several non-dominated fronts Firegarding coverage and fitness function. These Fis form the next population, namely Pt+1, where the best Fis make Pt+1. Since the size of Pt+1 should be equal to the one in Pt, perhaps all elements of Ficannot be in Pt+1. Therefore, crowding sorting is employed to complete Pt+1 by a front that is added incompletely regarding the crowding distance approach, in which the needed population is made by top of the front elements without losing good solutions (elitism). Fig. 3shows a graphical representation of this algorithm.NSGA-II makes Ot+1 from Pt+1 similar to Ot. Then, the above stages are iterated to obtain the best Pareto solutions considering a stopping criterion. Interested readers are referred to [22,23] for more details on NSGA-II.Instead of the tournament selection operator used in NSGA-II, the roulette wheel selection strategy is employed in the non-dominated ranking genetic algorithm (NRGA) proposed by Al Jadaan et al. [24]. In NRGA, there are two tiers ranked. The first tier is to select the front, and the second is to select a solution from the front. The probability of selecting the ith front is obtained by(23)Pi=2×RankiNF(NF+1);∀i=1,…,NFwhere NFis the number of fronts and Rankiis called the rank of front i. Note that the highest-rank front has the highest chance (in the case of a maximization problem) of being selected. Moreover, Eq. (24) obtains the probability of selecting the jth individual of the ith front:(24)Pij=2×RankijIi(Ii+1);∀i=1,…,NF;∀j=1,…,Iiwhere Iiis the number of individuals in front i.In NRGA, desired number of individuals are presented by roulette wheel selection operator after determining Piand Pij. Besides, the fronts and their individuals are ranked based on their crowding distance and the non-dominated rank, respectively.In this paper, a fixed number of generations is used to stop both solution algorithms. This number is obtained based on the Taguchi parameter tuning method described in the next section. Furthermore, the death penalty approach is utilized to make sure the solutions satisfy the constraints of the BOVMI model. Besides, these MOEAs use a one-point crossover on the chromosomes with integer numbers shown in Fig. 4.Since the parameters of a MOEA play an important role in the quality of a solution obtained, in this section the Taguchi method is used for tuning. In order to determine the significant factors (here the parameters) affecting a response (here the solution), Taguchi developed a special type of fractional factorial experiments (FFEs) to reduce a large number of experiments required in a full factorial experiments [25]. There are two kinds of factors in the Taguchi method; noise factors N, and controllable factors S. Moreover, Taguchi suggested a procedure for N to reduce the variation around the target. Considering orthogonal arrays used, the design, which is impressed less by N, is selected as the robust design.There are two suggested ways in the Taguchi method to analyze the results. First, analysis of variance that is used for experiments that repeat once, and second, signal to noise ratio (S/N) for experiments with multiple runs [25]. Since MOEAs have multiple runs to obtain better solutions, S/N is used in this research to analyze the results. Interested readers are referred to TQEH [26] for more information on the Taguchi method.There are four parameters in both MOEAs to be calibrated; the population size (Npop), the number of iterations to stop the algorithms (It), and the crossover and mutation rates (Pcand Pm, respectively). These parameters, each with three levels, are shown in Table 1to run the experiments based on the Taguchi L9 orthogonal arrays design.While several metrics are proposed in the literature to evaluate MOEAs, four measures, namely the best solution (BestSol), spacing (S), general distance (GD), and number of Pareto solutions (NPS), are used in this paper. In order to determine BestSol, the set of solutions are first normalized based on the linear dimensionless method in multi-attribute decision-making (MADM). Next, both of the objectives, which are weighted 0.5 each, are summed. The highest sum is chosen afterwards as the best solution (similar to the simple additive weighting algorithm (SAWA) in multi-criteria decision making (MCDM) approaches). On the one hand GD and S with lower values show better efficiency of MOEAs. On the other hand, NPS and BestSol with higher values demonstrate better efficiency. Interested readers are referred to [23] for more details.Table 2contains initial data on a supply chain problem with one vendor, five retailers, and one warehouse, in whichD˜i;i=1,2,…,5shows the trapezoidal fuzzy number of the ith retailer's demand andD˜in the last column is their sum.Using the data in Table 2, the coded MOEAs were executed five times based on the Taguchi's (L9) design. The resulted metrics are first normalized (by the linear dimensionless in the MADM) and then are merged into a single value (using SAWA in the MCDM approach with equal weight). As an example, Table 3shows the values of the metrics obtained based on different combinations of the parameters in the first run of the NSGA-II execution. The results are normalized in Table 4, where the last column, namely Sum, is the summation of the four normalized metrics that will be used as the response in the Taguchi method. Note that the highest Sum is the best value in evaluating MOEAs in terms of the merged metrics using the SAWA method.The aim of the Taguchi method is to find maximum S/N defined in Eq. (25):(25)SN=−10log1n∑i=1n1Sumi2where Sumiis the response in the Taguchi method, and n is the number of replications (n=5). The results that are given in Tables 5 and 6are also shown in Figs. 5 and 6.Since the biggest S/N value corresponds to the best combination of the parameter values, the population size can be easily selected at its third level, i.e. 75, for both algorithms (see Figs. 5 and 6). However, since the mean S/Ns for the other parameters are very close to each other, the relative percentage deviation (RPD) defined in Eq. (26) is used to determine the optimal levels of these parameters:(26)RPD=Maxsol−AlgsolMaxsol100where Maxsolis the biggest solution obtained and Algsolis an obtained solution. According to Eq. (26), RPDs with bigger values illustrate better combinations of the parameters. The mean RPD for the other three parameters are shown in Tables 7 and 8for NSGA-II and NRGA, respectively, where the underlined numbers corresponds to a parameter level in the optimal combination level. As a result, the optimal values of the parameters are given in Table 9.Note that depending on problem sizes in terms of the number of retailers, Npopand It may vary. Note also that Figs. 5 and 6 are obtained by Minitab 15.1.30.0.In addition to the metrics defined in Section 5, the CPU Time required to obtain a solution is used in order to evaluate and to compare both solution algorithms. To do this, each algorithm first solves every problem 10 times, and then the best solution is chosen to compare the algorithms. Again, the SAWA approach involving an equal weight of 0.2 for the five criteria is employed to find the best solution. The problems range between 3 and 20 retailers and are shown in the first column of Table 10. The results in this table not only show that NSGA-II requires less Time on the average (38% less), but also it has better overall performances in terms of all the other metrics. In other words, there are 23 and 22 percent improvement in the GD and the S metrics, respectively. Besides, the proposed MOEAs have almost equal performances in terms of the best solution obtained. For the “03_retailers” problem, the Pareto fronts obtained by the two algorithms are shown in Fig. 7. Besides, Table 11contains the objective values of the solutions obtained. Note that both MOEAs are implemented using MATLAB 2010b on a PC with 2.2GHz Intel Core 2 Duo CPU, and 4 GB of RAM memory.When a multi-objective optimization algorithm (MOA) is used to optimize a bi-objective mathematical model, a set of Pareto solutions is provided for a decision maker (DM) to select a solution. As this decision is similar to the ones in multi-attribute decision making (MADM) problems, one of the methods used in MADM such as technique for order preference similar to an ideal solution (TOPSIS) [27], the fuzzy hierarchical TOPSIS [28], simple additive weighting (SAW) [29], the fuzzy SAW [30], the linear programming technique for multidimensional analysis of preference (LINMAP), and fuzzy LINMAP [31] can be employed to choose a single preferred solution obtained by NSGA-II.In this paper, a bi-objective vendor managed inventory (BOVMI) model was developed for a supply chain consisting of several retailers, one vendor with a central warehouse, in which demands were assumed trapezoidal fuzzy numbers. The aims were to find optimum replenishment frequencies of the vendor and the retailers along with the order quantities of the retailers such that both the total inventory cost and the warehouse space are minimized while the constraints on the vendor, namely the number of orders and the available budget, are satisfied.Since the VMI problem was formulated into a bi-objective integer non-linear programming problem under fuzzy demands, two multi-objective evolutionary algorithms (MOEAs), namely non-dominated sorting genetic algorithm-II (NSGA-II) and non-dominated ranking genetic algorithms (NRGA), each with calibrated parameters (using the Taguchi method), were developed to determine Pareto front solutions. The comparison results based on several problems of different sizes showed that NSGA-II was the better algorithm in terms of all five MOEA metrics used. This research is most probably the first in single-vendor multi-retailer supply chain supply under VMI policy with fuzzy demands that uses two tuned MOEAs to find Pareto front solutions. For future research, we recommend the followings:1.The model can be extended for a multi-vendor multi-warehouse case.The model can be extended to be suitable for the economic production quantity policy.Discounts and shortages can be considered as well.Response surface methodology (RSM) can be used to tune the parameters.

@&#CONCLUSIONS@&#
