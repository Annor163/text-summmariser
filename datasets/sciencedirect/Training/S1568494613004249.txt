@&#MAIN-TITLE@&#
Spatial Plateau Algebra for implementing fuzzy spatial objects in databases and GIS: Spatial plateau data types and operations

@&#HIGHLIGHTS@&#
We provide an implementation concept called Spatial Plateau Algebra for fuzzy points, fuzzy lines, and fuzzy regions.Spatial plateau objects are described by collections of crisp spatial objects like crisp points, lines, and regions.Spatial plateau operations are expressed as combinations of crisp spatial operations and are thus directly executable.The new data types can be embedded as attribute data types in a database schema.The operations can be incorporated into queries formulated in an extension of SQL, the standard database query language.

@&#KEYPHRASES@&#
Spatial fuzziness,Spatial vagueness,Fuzzy spatial object,Spatial plateau object,Spatial plateau operation,Executable specification,

@&#ABSTRACT@&#
Many geographical applications have to deal with spatial objects that reveal an intrinsically vague or fuzzy nature. A spatial object is fuzzy if locations exist that cannot be assigned completely to the object or to its complement. Spatial database systems and Geographical Information Systems (GIS) are currently unable to cope with this kind of data. Based on an available abstract data model of fuzzy spatial data types for fuzzy points, fuzzy lines, and fuzzy regions that leverages fuzzy set theory and fuzzy point set topology, this article proposes a Spatial Plateau Algebra that provides spatial plateau data types as an implementation of fuzzy spatial data types. Each spatial plateau object consists of a finite number of crisp counterparts that are all adjacent or disjoint to each other, are associated with different membership values, and hence form different plateaus. The formal framework and the implementation are based on well known, exact models and implementations of crisp spatial data types. Spatial plateau operations as geometric operations on spatial plateau objects are expressed as a combination of geometric operations on the underlying crisp spatial objects. This article offers a conceptually clean foundation for implementing a database extension for fuzzy spatial objects and their operations, and demonstrates the embedding of these new data types as attribute data types in a database schema as well as the incorporation of fuzzy spatial operations into a database query language.

@&#INTRODUCTION@&#
Spatial databases as the data management foundation of Geographical Information Systems (GIS) represent geometries such as point, line, and region objects by special data types called spatial data types[41]. These data types can be used in the same way as attribute data types as integers, floats, or characters. Their objects have the fundamental and tacitly assumed property that they are crisp, that is, they have a definite extent, boundary, and shape. However, many, or even most, spatial objects in reality cannot be described by crisp concepts since they are inherently fuzzy, vague, or indeterminate. A spatial object is fuzzy if it contains locations that cannot be assigned completely to the object or to its complement. Hence, spatial fuzziness captures the property of objects that do not have sharp boundaries and crisp interiors but rather vague or indeterminate boundaries and interiors. Examples are natural, social, or cultural phenomena like oceans, pollution areas, and English speaking regions. It is, for example, impossible to say with precision where the Indian Ocean ends and the Arabian Sea begins since the transition between them is smooth and seamless. So far, available spatial database systems and GIS are unable to represent indeterminate spatial objects.From a modeling standpoint, especially the GIS community has propagated the use of fuzzy set theory[56] to characterize and describe indeterminate spatial data. The spatial database community has produced a few approaches to the conceptual modeling of such data through fuzzy spatial data types. In previous work [42], at an abstract, fuzzy point set theoretic and fuzzy point set topological level, we have defined fuzzy points, fuzzy lines, and fuzzy regions by assigning a membership value ranging from 0 to 1 to each point of such an object by an appropriately defined and application-specific membership function. A membership value indicates how strongly or weakly a point belongs to an object. From an implementation standpoint, adequate implementation approaches to the representation of fuzzy spatial data types in spatial database systems and GIS are lacking. A first main reason is that the sole approximation of the fuzzy boundary of a fuzzy spatial object is insufficient since the interior of such an object is usually fuzzy too. A second main reason is that each of the infinitely many points of the interior of a fuzzy spatial object can have a different membership value and that a finite representation of such a constellation is challenging and difficult.The goal of this article is to propose an appropriate implementation concept for these types that enables their efficient representation, querying, and manipulation in a database context. Our approach introduces an executable algebra (or type system) called Spatial Plateau Algebra that bases the implementation of fuzzy spatial data types, operations, and predicates on a plateau concept. The idea is to provide spatial plateau data types that approximate a fuzzy point, fuzzy line, or fuzzy region object by a plateau point, plateau line, or plateau region object respectively. Each spatial plateau object consists of a finite number of crisp and finitely representable counterparts ((that is, crisp point, line, or region objects) that are all adjacent or disjoint to each other and that are associated with different membership values which form plateaus and which determine the degree of belonging to the fuzzy spatial object. A main benefit of the Spatial Plateau Algebra is that its formal framework and its implementation are based on well known, general, and exact models and implementations of crisp spatial data types. This enables its own exact and robust definition and implementation. Geometric operations (like geometric union, intersection, and difference) on spatial plateau objects are called spatial plateau operations and are expressed as a combination of corresponding operations on the underlying crisp spatial objects. Hence, our approach enables executable specifications of the spatial plateau operations such that they can be immediately used as implementations. The spatial plateau data types are, in particular, closed under spatial plateau operations. Further, spatial plateau objects are represented as compact storage structures (arrays) that are directly processed by geometric algorithms, avoid any serialization and deserialization cost, and thus enable an efficient object transfer between main memory and database. This article offers a precise and conceptually clean foundation for implementing a database extension for fuzzy spatial objects and operations, and demonstrates the embedding of these new data types as attribute data types in a database schema as well as the incorporation of fuzzy spatial operations into queries formulated in a database query language. Spatial plateau predicates implementing fuzzy topological predicates and fuzzy directional predicates as well as metric plateau operations implementing fuzzy metric operations are not considered in this article.Section 2 discusses related work on the fuzzy approach to spatial data handling, both from a conceptual and an implementation perspective. It also briefly reviews crisp spatial data types as the underlying basis of our Spatial Plateau Algebra. Section 3 introduces spatial plateau objects as an implementation concept for fuzzy spatial objects and provides a formal definition of the spatial plateau data types. Section 4 focuses on the specification of spatial plateau operations for their fuzzy counterparts in terms of their crisp counterparts. An emphasis is on the plateau versions of the fuzzy geometric set operations fuzzy union, fuzzy intersection, and fuzzy difference. These versions are named plateau union, plateau intersection, and plateau difference. Fuzziness can be expressed in different ways. Hence, beside an established and predefined understanding of fuzziness for our spatial plateau operations, we also present a variation of these operations that is context-dependent and lets the application or user select an appropriate interpretation of fuzziness. Section 5 shows a few application scenarios and queries that leverage the operations of the Spatial Plateau Algebra. Section 6 discusses implementation aspects of the Spatial Plateau Algebra. Section 7 draws some conclusions and considers future work.

@&#CONCLUSIONS@&#
In this article, we have dealt with the problem of implementing spatial objects and operations afflicted with the feature of spatial vagueness in a database context. Spatial vagueness or spatial fuzziness is inherent to many database applications in the geosciences and in Geographical Information Systems. Our solution presented in this article is the Spatial Plateau Algebra that implements a fuzzy spatial algebra (like one of those described in [18,42]) and can be embedded into any extensible and commercially or publicly available database system and its query language SQL. This algebra is a type system that provides the spatial plateau data types fpoint, fline, and fregion together with a comprehensive collection of spatial plateau operations. A special characteristic of our approach is that these data types and operations rest on well known concepts, data structures, algorithms, and implementations of their crisp counterparts. This leads to executable specifications that can be directly implemented with minimal effort. Further, spatial plateau data types are closed under spatial plateau operations. To the author's knowledge, the Spatial Plateau Algebra provides the first approach to an implementation of a fuzzy spatial algebra in general and in a database context in particular.For future work, we plan to extend the Spatial Plateau Algebra by metric operations and topological predicates on spatial plateau objects as the implementation of their counterparts on fuzzy spatial objects.