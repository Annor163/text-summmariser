@&#MAIN-TITLE@&#
An unsupervised approach to generating generic summaries of documents

@&#HIGHLIGHTS@&#
We model document summarization as a quadratic Boolean programming problem.We create a modified differential evolution to solve the optimization problem.Experimental study shows that the model improves the summarization results.

@&#KEYPHRASES@&#
Maximum relevance,Minimum redundancy,Optimization model,Differential evolution algorithm,Combined similarity measure,

@&#ABSTRACT@&#
We present an optimization-based unsupervised approach to automatic document summarization. In the proposed approach, text summarization is modeled as a Boolean programming problem. This model generally attempts to optimize three properties, namely, (1) relevance: summary should contain informative textual units that are relevant to the user; (2) redundancy: summaries should not contain multiple textual units that convey the same information; and (3) length: summary is bounded in length. The approach proposed in this paper is applicable to both tasks: single- and multi-document summarization. In both tasks, documents are split into sentences in preprocessing. We select some salient sentences from document(s) to generate a summary. Finally, the summary is generated by threading all the selected sentences in the order that they appear in the original document(s). We implemented our model on multi-document summarization task. When comparing our methods to several existing summarization methods on an open DUC2005 and DUC2007 data sets, we found that our method improves the summarization results significantly. This is because, first, when extracting summary sentences, this method not only focuses on the relevance scores of sentences to the whole sentence collection, but also the topic representative of sentences. Second, when generating a summary, this method also deals with the problem of repetition of information. The methods were evaluated using ROUGE-1, ROUGE-2 and ROUGE-SU4 metrics. In this paper, we also demonstrate that the summarization result depends on the similarity measure. Results of the experiment showed that combination of symmetric and asymmetric similarity measures yields better result than their use separately.

@&#INTRODUCTION@&#
With the rapid growing popularity of the Internet and electronic government, obtaining the desired information within a short amount of time becomes a serious problem in the information age. As such, new technologies that can process information efficiently are in great need. Automatic document summarization is an essential technology to overcome this obstacle [1]. Automatic document summarization is one of the tasks that have long been studied in natural language processing. This task is the process of automatic creation of a concise version of a text containing the main content of the original document [2–4].According to the type of information which they contain, the summaries can be differently classified. For example, Tucker [5] categorizes summaries as descriptive, evaluative, indicative and informative. A descriptive summary can describe both the form and content of a source text. An evaluative summary offers some kind of critical response to the source, thereby evaluating it in some way. Indicative summaries give abbreviated information on the main topics of a document. They should preserve its most important passages and are often used as the end part of the information retrieval systems, being returned by search system instead of full document. Thus, an indicative summary is aimed at helping the user to decide whether to read the information source, or not. By contrast, informative summaries provide a digest for full document, retaining important details, while reducing information volume [6]. The summary type factor is similar to the style output factor defined by Karen Jones [2]. She identified three of the types of summary proposed by Tucker, indicative, informative and critical, and an additional one, aggregative, in which varied sources are set out in relation to each other.Depending on the number of documents to be summarized, the summary can be a single-document or a multi-document. Single-document summarization can only condense one document into a shorter representation, whereas multi-document summarization can condense a set of documents into a summary. Multi-document summarization can be considered as an extension of single-document summarization and used for precisely describing the information contained in a cluster of documents and facilitate users to understand the document cluster. Since it combines and integrates the information across documents, it performs knowledge synthesis and knowledge discovery, and can be used for knowledge acquisition [4,7–9].Furthermore, there are two approaches for document summarization: supervised and unsupervised [2,4,6,9,10]. Supervised approaches treat document summarization as a classification. And then use classification models to identify which sentences should be included into the summary. However, they require training samples. The unsupervised methods usually utilize clustering algorithms to score the sentences in the documents by combining a set of predefined features [7,10–15].The summarization task can also be categorized as either generic or query-oriented. A query-oriented summary presents the information that is more relevant to the given queries, while a generic summary gives an overall sense of the document's content [16,17]. Generally, automatic document summarization methods can be divided into two categories: abstractive and extractive. Abstraction can be described as “reading and understanding the text to recognize its content which is then compiled in a concise text” [18]. In general, an abstract can be described as a summary comprising concepts/ideas taken from the source which are then ‘reinterpreted’ and presented in a different form, whilst an extract is a summary consisting of units of text taken from the source and presented verbatim [18]. In fact, majority of researches have been focused on summary extraction, which selects pieces such as keywords, sentences or even paragraph from the source to generate a summary.In this paper, we focus on the unsupervised generic text summarization, which generates a summary by extracting key textual units in given document. Automatic document summarization that provides users with a condensed version of the original text, tries to release our reading burden, and most summarization today still relies on extraction of sentences from the original document. This is because the grammaticality at the sentence level is guaranteed. In extractive or abstractive automatic summarization, the common challenges are content selection and linguistic quality (readability) control. For content selection, it includes how to identify the important content, remove the redundant content and keep the high content coverage. For linguistic quality, keeping the content coherent and fluent is very significant. In our research, we just focus on the extractive content selection and do not do anything about linguistic quality.In general, a document contains a major topic, and the major topic consists of several subtopics. The summary sentences should cover most of the subtopics. Therefore, when doing summarization, if only focusing on the sentences with higher relevance scores to the whole document, the extracted summary sentences are inclined to cover the subtopics whose sentences are widely distributed. Moreover, the subtopics whose sentences are widely not distributed will be ignored. On the other hand, simply selecting sentences with high relevance scores may cause redundancy, i.e., some of those selected sentences may provide the same or similar information. This problem becomes more critical in multi-document summarization. For this reason, when extracting summary sentences, we not only focus on the relevance scores of sentences to the whole document, but also the sentence-to-sentence relation. Motivated by recent progress in optimization-based document summarization [19–25], in this paper we propose a novel optimization-based document summarization model which simultaneously considers content coverage and redundancy. Finally, to solve the optimization problem we created a novel differential evolution (DE) algorithm with self-adaptive crossover and mutation strategies.The rest of this paper is organized as follows. Section 2 introduces the brief review of the document summarization methods. The proposed generic text summarization model is presented in Section 3. Section 4 presents the algorithm to solve the optimization problem. The experiments and results are given in Section 5. Finally, Section 6 concludes the paper.

@&#CONCLUSIONS@&#
