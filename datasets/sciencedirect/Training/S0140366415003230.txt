@&#MAIN-TITLE@&#
Beacon-based channel assignment and jammer mitigation for MANETs with multiple interfaces and multiple channels

@&#HIGHLIGHTS@&#
working for multi-interface multi-channel MANETsbeing totally distributed i.e. no CCC or central entityenhancing throughput and reducing interferenceimproving connectivity by balancing stations that are in the same vicinity and using the samechannelperforming adaptive channel assignment against jamming

@&#KEYPHRASES@&#
Ad-hoc networks,Channel assignment,Multiple interfaces,Jamming,

@&#ABSTRACT@&#
The capability of accessing multiple channels through multiple interfaces improve network capacity and is desirable for future Mobile Ad-Hoc Networks (MANETs). However, due to the presence of jammers as well as mobility and ad-hoc features, MANETs require distributed and efficient resource management for channel assignment. To address the channel assignment problem, which is a non-deterministic polynomial-time hard (NP-hard) problem, we propose a heuristic algorithm called Channel Assignment and JAmmer Mitigation (CA-JAM). The CA-JAM algorithm assigns a distinct channel for every interface of one station, and then all stations exchange the assignment information through beacon frames on every individual interface. When one station receives a beacon, the station organizes the information into tables. Therefore, each station, distributively, uses the table to reduce the number of neighboring stations using the same channel to avoid interference which in turn improves the throughput. The tables are also used to learn the disconnected neighbors due to jamming so as to mitigate the effect of jamming and maintain connectivity. CA-JAM is fully distributed with no use of control channel or central entity; thus, it improves connectivity and reduces interference by balancing stations over the available channels while mitigating jamming effects from multi channel multi interface MANETs. We confirm that CA-JAM outperforms existing protocols using the OPNET simulator.

@&#INTRODUCTION@&#
Mobile ad-hoc networks (MANETs) provide flexibility and scalability to set up a network compared to infrastructure networks. Such networks can be used in military combat, disaster relief or large construction sites. All MANET stations with a single interface or radio11Throughout the text, the terms interface and radio are used interchangeably.should belong to the same service set on a single channel to stay connected, even if the interface can switch between channels [1]. As the number of MANET stations increases, interference and collision among them increase as well. This degrades network capacity, flexibility and scalability. Unlike other networks, MANETs are designed to have minimal manual configuration, low cost of hardware, and tolerance to jamming attacks and mobility [2].Jamming is caused by high powered devices intentionally designed to attack a wireless network, which is referred to as intentional jamming. Also, jamming can arise unintentionally from non-compatible standards, e.g. 802.11 and 802.15.1 operating in the 2.4GHz ISM band, which is mostly referred to as interference. Another type of jamming in MANETs is caused by denial-of-service (DoS) attacks [3] where malicious stations transmit false messages to consume network resource and starve other stations. To mitigate jamming, first we need to detect it and then avoid using the jammed channel. Under the assumption that such jamming attacks are detectable, stations can dynamically switch from one channel to another [4] as in dynamic spectrum access, where stations search for a new channel when the current operating channel is unavailable.Due to the reduction of radio cost, it is now easier to fit multiple interfaces in one station, as seen in Wi-Fi devices that work for both 2.4GHz and 5GHz. Therefore, our aim is to exploit this advantage to enhance the network capacity and flexibility of MANETs with the help of Multiple Interfaces of stations operating on Multiple Channels (MIMC) [5] by proposing a new channel assignment scheme. In addition, the channel assignment algorithm should overcome the jamming problem as well.In this paper, we first formulate the channel assignment problem as graph partitioning problem that minimizes the number of adjacent vertices on the same partition, and then propose a distributed and heuristic channel assignment algorithm called Channel Assignment and JAmmer Mitigation (CA-JAM), because the problem is found to be non-deterministic polynomial-time hard (NP-hard). In CA-JAM, first, each station determines a distinct random channel for all of its interfaces and exchanges beacons on each interface for a simple rendezvous process. To enhance the rendezvous process, algorithms described in [6] and [7] can be used. Up on receiving beacons from neighbors, stations organize the information into two tables: an interface table and a neighbor table. To avoid interference, stations look up the number of neighbors per interface from its interface table and check whether it has multiple links with all neighbors on this interface. If these conditions are satisfied, the station switches to another channel to organize a less congested network and seek more connectivity.When a channel is jammed, the following steps are performed: (1) neighbors that are exclusive to the jammed interface are selected, i.e., neighbors with a single link; (2) channel information about the unjammed interfaces of these neighbors is inferred; and (3) the channel that is shared among most neighbors is selected and assigned to the jammed interface. Then, the interface switches to the assigned channel to re-establish communication with its neighbors to recover the lost connection due to the jammer presence. CA-JAM is a beacon-based fully distributed channel assignment scheme resistant to jamming attacks, where there is neither control channel nor a central unit. To make our algorithm off-the-shelf 802.11-compatible, we only slightly modified the beacon type that was defined in the IEEE 802.11 standard.The rest of the paper is organized as follows. In Section 2, related work is presented, and in Section 3, our problem statement is described. In Sections 4 and 5, the proposed CA-JAM algorithm and our simulation results are described, respectively. Our conclusion is presented in Section 6.

@&#CONCLUSIONS@&#
