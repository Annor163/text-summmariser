@&#MAIN-TITLE@&#
A study of user behavior in online VoD services

@&#HIGHLIGHTS@&#
We discover a quite consistent user early departure pattern for different sets of view records, over different time periods, for videos of different popularity.We show the distribution of the number of videos a user transition through. This understanding helps construct a more realistic user behavior model.We show seeks can be considered as part of video browsing, and explain what users are doing using seek: either emulating fast-forwarding or looking for some specific content.We measure a user-level video switching and early departure behavior.We explore the online video popularity, and users’ seek behavior.

@&#KEYPHRASES@&#
User behavior,VoD service,Measurement,

@&#ABSTRACT@&#
A big portion of Internet traffic nowadays is video. A good understanding of user behavior in online Video-on-Demand (VoD) systems can help us design, configure and manage video content distribution. With the help of a major VoD service provider, we conducted a detailed study of user behavior watching streamed videos over the Internet. We engineered the video player at the client side to collect user behavior reports for over 540 million sessions. In order to isolate the possible effect of session quality of experience (QoE) on user behavior, we use only the sessions with perfect QoE, and leave out those sessions with QoE impairments (such as freezes). Our main finding is that users spend a lot of time browsing: viewing part of one video after another, and only occasionally (around 20% of the time) watching a video to its completion. We consider seek (jump to a new position of the video) as a special form of browsing – repeating partial viewing of the same video. Our analysis leads to a user behavior model in which a user transitions through a random number of short views before a longer view, and repeats the process a random number of times. This model can be considered an extension, and a more detailed alternative to the closed queueing network formulation introduced by Wu et al. (2009) [1]. As an application of our user behavior model, we use it to measure video popularity. We study the similarity of our approach to subjective evaluation and simple view count based metric, and conclude our approach gives results closer to subjective evaluation.

@&#INTRODUCTION@&#
Significant traffic on the Internet today can be attributed to video content distribution [2]. Increasingly people choose some online service such as Netflix and Hulu for watching movie and TV (in US), and use YouTube to share video clips. On-line video services are also very popular in China. Tencent Video [3], Youku and Tudou are some of the most popular service providers.Understanding user behaviors in watching Internet video is helpful for improving system design and configuration. For example, a recent paper used user engagement to identify the quality of experience (QoE) factors that affect the users most [4], thus identifying which QoE factors should be addressed first in system design, and even attached a dollar value to the consequences. Our work focuses on studying user’s natural behavior during online videos viewing, by excluding those session reports with QoE impairments in the collected dataset. Using this approach, we can initially disassociate the effect of QoE on user behavior, and add it later on.Our purpose of studying user behavior is to build a user behavior model to help study system performance and design issues. To this end, our main finding is that the user demand on a VoD streaming service is mainly video browsing; namely, sampling videos partially before selecting a video to view to completion. Based on a detailed model of this behavior, we can improve system design and configuration in various ways. For example, we can design progressive downloading algorithms that will minimize wastage, the amount of downloaded video that is never viewed; we can also optimize what content we replicate at different servers; and design new features to help users search for the content that interest them more effectively.Sometimes it is convenient to use an abstract user behavior model, especially in analytical studies. The closed-queueing-network model (WLR) proposed in [1] to study multi-channel live streaming is a good example. In this model, users pick (next) videos to watch based on a transition matrix, and watch each video for an exponential amount of time. While WLR is elegant and analytically convenient, it is not detailed and accurate enough for studying some performance problems. In this paper, our measurement-based exploration of user behavior will also let us build a load model, but with more details, and based on what is observed in a practical system.For our study, the dataset comes from our collaborator Tencent Video, one of the largest video streaming service providers in China. They have more than 45 million active users on a daily basis, and more than 1.5 million users online concurrently during busy hours. Their video content includes movie, TV episodes, music/entertainment video, as well as many short clips of news and sports. The online VoD service is delivered via HTTP/TCP. We collected a large set of user viewing records over one month period from their large-scale real-world VoD system. The total size of data records are 490GB. We use a Hadoop system to process this big data and perform our analysis of various video browsing behavior.The main results can be summarized as follows: (1) We discover a quite consistent user early departure pattern for different sets of view records, over different time periods, for videos of different popularity. We propose a generic model for user departures (that is different than simple exponential departures in [1]). (2) We show the distribution of the number of videos a user transition through. This understanding helps construct a more realistic user behavior model as an open-loop queueing system. (3) We show seeks can be considered as part of video browsing, and explain what users are doing using seek: either emulating fast-forwarding or looking for some specific content. (4) Based on the above, we build a user-level model for the video browsing behavior. We discuss how such a user-behavior model can be used as a load model in system performance studies. (5) We apply the observation of user behavior to explore the online video popularity.The paper is organized as follows. In Section 2, we describe the system we measured, and how we did the measurement. In Section 3, the meat of this paper, we summarize all the measurement results. Also, we discuss the video popularity based on user behavior study in Section 4. Section 5 gives a brief discussion of related works, and we conclude and briefly discuss directions for future works in the last section.We begin by fixing some terminology. We have users and videos. A user watches one or multiple videos. A view (record) is the information associated with the viewing by a user of a single video. The information includes things like whether the user viewed a portion or the full video, and how often/long the events of pause, freeze and seek occurred. Videos are categorized into types according to their content. They are also partitioned into two groups – popular and unpopular – according to view counts. The basic format of a view record is shown as follows:date‖user id‖video‖play timestamp‖stop timestamp‖pause‖freeze‖seek.We study user behavior by collecting a large set of views. A user’s actions during a viewing session include various events: arrival, play, pause, seek, and departure. A view with impaired QoE (indicated by freezes) during playback is discarded in our analysis.1We note that the QoE for VoD streaming usually consist of video quality, initial buffering time, seek-induced delay, freeze frequency and freeze durations. We take the freeze as a major factor of the impaired QoE.1A common user behavior is merely represented by a large set of views with similar pattern of events.To collect view records, the VoD service platform is instrumented with the following capabilities: (1) the video player at the client side embeds a module to report the user behavior information in each view; (2) a distributed data collection system is set up to receive huge amount of the view records for later processing. Also, a distributed data processing system is built to analyze the collected data.Since Tencent’s video service covers a large geographical region (mostly within China), the data collection involves many edge servers running in parallel in different places. All reported data will be aggregated into a datacenter, and stored in an unstructured database. To implement bigdata analysis, we introduce a distributed data processing system and analyze collected data in different time scale and quantity scale dimensions.We collected over 540 million viewing records with perfect QoE over one month. These viewing records are generated and reported by around 48.9 million different users. The users come from all geographical regions in China according to commercial precise IP-geolocation mapping database. The videos sampled are of different genre and length.In this study, we focus on four types of videos: (1) Movie (60∼180mins); (2) TV episode (30∼60mins); (3) Music video (3∼10mins); (4) Sport video clips (30s∼10mins). The number of viewing sessions for Movie and TV videos is more than the short ones in our collected reports. We believe this combination of video types is typical for video watched over the Internet. The proportion of these four types of views in our dataset is6:9:1:2.To study the video browsing behavior, we need to group the views by individual users. The IP address cannot reliably identify a single user since IP addresses may be dynamically assigned to users, or multiple users may share a common IP due to traversing NAT. Cookies are used to identify requests from the same user, but it can be cleared or disabled. In the system we study, we are able to identify each user by their social network identity. This important feature allows us to identify all views by the same user to study user behavior on a per-user basis.

@&#CONCLUSIONS@&#
