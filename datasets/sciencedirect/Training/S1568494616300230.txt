@&#MAIN-TITLE@&#
Interactive algorithms for improving incomplete linguistic preference relations based on consistency measures

@&#HIGHLIGHTS@&#
The incomplete LPRs are improved by interacting with experts.An interactive algorithm is presented to reach weak consistency.Missing entries are estimated by a consistency-based interactive algorithm.A self-adaptive evolution algorithm is developed to obtain consistent LPRs.

@&#KEYPHRASES@&#
Decision analysis,Incomplete linguistic preference relation,Interactive algorithm,Consistency measure,Hesitant fuzzy linguistic term sets,

@&#ABSTRACT@&#
Incomplete linguistic preference relations (InLPRs) are generally inevitable in group decision making problems due to several reasons. Two vital issues of InLPRs are the consistency and the estimation of missing entries. The initial InLPR may be not consistent, which means that some of its entries do not reflect the real opinions of the experts accurately. Thus, there are deviations between some initial provided values and real opinions. Therefore, it is valuable to elicit the providers to realize and repair the deviations. In this paper, we discuss the consistency and the completing algorithms of InLPRs by interacting with the experts. Servicing as the minimum condition of consistency, the weak consistency of InLPRs is defined and a weak consistency reaching algorithm is designed to guarantee the logical correctness of InLPRs. Then two distinct completing algorithms are presented to estimate the missing entries. The former not only estimates all possible linguistic terms and represents them by the extended hesitant fuzzy linguistic terms sets but also keeps weak consistency during the computing procedures. The later can automatically revise the existing entries using the new opinions supplemented by the experts during interactions. All the proposed algorithms interact with the experts to elicit and mine their actual opinions more accurately. A real case study is also presented to clarify the advantages of our proposal. Moreover, these algorithms can serve as assistant tools for the experts to present their preferences.

@&#INTRODUCTION@&#
Decision making problems which consist of individual and group of individuals acting to select the best alternative(s) among all feasible ones with respect to a set of criteria is referred to as individual decision making and group decision making (GDM), respectively. The majority of GDM problems include some procedures [28]: (1) defining the problem; (2) analyzing the problem; (3) identifying a set of alternatives; (4) identifying criteria and experts; and (5) deriving the solution by a selection process. Each expert may express his/her opinions by either absolute measurements or relative measurements [40]. In relative measurements, preference information can be collected by a category of preference relations (PRs), such as multiplicative preference relations (MPRs) [12,39], fuzzy preference relations (FPRs) [15,57] and linguistic preference relations (LPRs) [5,8,16,17,23,26,27,36,67,68]. LPRs, associated with some linguistic representation techniques of computing with words (CWW) [63,65], are commonly used in qualitative cases where it is difficult to express preferences by means of precise and exact values. Hence, we discuss LPRs in this paper.It is common that there must be n(n−1)/2 comparisons in a complete PR if n objects are involved in. However, the experts may provide PRs with incomplete information because of: (1) the time pressure and the limitation of cost [11,56], (2) the expert's limited expertise of the problem and information processing capabilities [24,56], and (3) the convenience and/or necessity to skip some direct critical comparisons [20,50]. Thus, incomplete PRs have received great attention over the past decades. Generally, completions of incomplete PRs (either FPRs or LPRs) can be done by two distinct strategies [42,43]:(1)Completing without the participation of the experts. This strategy makes use of mathematical techniques, such as iterative approaches and optimization approaches, to fill incomplete PRs based on the hypothesis that the known entries possess high consistency level and are coincident with actual values of the expert's subjective preferences. That is why the objective functions of many optimization approaches are derived by minimizing the inconsistency level. Another evidence can be found in some iterative approaches where the PR is completed based on only n−1 known entries and the resultant complete PR is strictly consistent. The advantage of the strategy is that it would not bring additional work to the experts once an incomplete PR is provided. However, if the incomplete PR is not consistent or acceptable consistent, some artificial approaches have to be put out to revise it. The revised version owns high consistent level but may not coincide with the expert's actual opinions. A detailed review of this strategy is given hereinafter.Completing by interacting with the experts. This strategy completes an incomplete PR by absorbing new opinions from the experts to ensure that the derived PR is highly coincident with their actual preferences. It seems as if this strategy produces additional work for the experts and makes the speed of completion be very slow. In fact, there are at least three reasons for this interactive strategy. First, this strategy can be started along with the procedure of giving original incomplete PRs. It would make the original version more “accurate”. Second, if incompletion is caused by the first reason mentioned above, it may be necessary to ask the experts to improve the incomplete version to enhance reliabilities of the decision. For example, to access the security of the energy channels of China, it is advised to consider five attributes under the criterion of the sea control capability, i.e., the military bases, the number of garrison, reconnaissance capabilities, military support capabilities and the logistical capacity. Several military experts are asked to present their opinions concerning to what extent ones attribute is more important than another. Obviously, the most important issue is the correction and rationality of the obtained PRs although some more work and time may be consumed. However, some of the attributes are qualitative and cannot be evaluated by objective data. Thus if some experts have hesitancy during the judgments, it would be helpful if there is an interactive system that can help completing the required assessments and elicit to figure out possible logical inconsistencies. Finally, algorithms based on this strategy can stop whenever no new information is provided even if not all missing entries are filled. In this case, the output of algorithms may be incomplete as well.Most of the existing endeavours focus on the first strategy. The developments of incomplete PRs mainly lie on the following two aspects. The first aspect is the consistency and the consensus measures of incomplete PRs. Some studies discussed the additive consistency [8,20,25,33,49] and multiplicative consistency [48] of incomplete FPRs. The consensus measures are statistically analyzed by Chiclana et al. [13]. In linguistic setting, Xu [56] introduced the additive consistency of incomplete LPRs (InLPRs). Whereas there may be contradictory even if a PR passes the consistent test successfully [30]. Therefore, serving as the minimum required condition of a consistent PR, Fedrizzi and Giove [50] investigated the weak consistency of incomplete FPRs. On the other aspect, most of the studies focused on the missing information of the incomplete PRs. Millet [34] discarded the incomplete information directly. Ebenbach and Moore [19] penalized negatively the experts providing incomplete preferences. However, the incomplete PR constructed by randomly deleting as much as 50% of the entries of a complete PR provides good results without compromising accuracy [10]. In addition, incomplete information is not equivalent to low quality information or inconsistent information. Thus, it is more desirable to manage incomplete information using the information provided by other experts [29], or only by his/her own assessments and consistency criteria. The latter has been a kind of techniques extensively applied in both individual decision making and GDM. By the predefined consistencies, these techniques estimate the missing values of incomplete PRs through two ways. The first is to design iterative algorithms to complete the PRs [2,6,9,31]. The other makes use of optimization approaches to estimate the missing values [20,66] or to estimate the weighting vectors directly [18,22,33,55,59].Only a few studies have focused on the interactive strategy. Xu [58,60,61] and Chuu [14] proposed the interactive approaches for GDM to revise the experts’ LPRs with relatively low degree of consistency. But they only considered the complete LPRs. Xu [62] dealt with the incomplete FPRs in GDM, but the proposed interactive approach does not focus on the completing of incomplete FPRs. The interactive model proposed by Herrera-Viedma et al. [23] included a feedback mechanism to give advice to the experts to revise their PRs. However, in order to calculate the pre-defined consensus degrees and proximity measures, this model can only deal with the complete PRs. Wu et al. [47] proposed an interactive model to build consensus among the group based on InLPRs. Alonso et al. [1] developed a decision support system to aid the experts for completing the incomplete FPRs. In fact, as the idea of Alonso et al. [1], tolerances and deviations may exist when the experts express their preferences by InLPRs, but there is not any procedure to check the existences and revise the tolerances. One possible reason is the time pressure of a decision making task. If interactions are taken into account, the experts are required to devote more time to reach a desirable version of their preferences. This may lead to some extra work to the experts. However, the cost and risk of the decision making problems are huge and significant and the time costing is not so important in some cases, as illustrated in the example mentioned previously. Therefore, it is rational and meaningful to develop interactive algorithms to improve the incomplete PRs by interacting with the experts. For one thing, if the provided entries are highly coincident with the experts’ actual opinions, we can calculate the possible values of the missing entries and then feedback to the experts. Thus, an incomplete PR can be improved after an acknowledgement and/or selection procedure interacting with the experts. For another, if there is a tolerance between the provided value and the expert's actual preference, which is possible in practice, it is hard for him/her to discover and revise the tolerances directly. But the tolerance will be delivered to unknown entries during the completing procedures. Thus it is possible for the expert to realize the presence of the tolerance when he\she is asked to acknowledge and select the output values of the unknown entries derived by pre-designed algorithms. Any opinions expressed in this step will be helpful to improve the incomplete PRs.Based on this idea, in this paper, we focus on the interactive algorithms for improving the InLPRs. We begin the discussion with an acceptable InLPRs given by the experts. As the weak consistency is the basic condition that PRs should satisfy, we develop the corresponding definition of InLPRs and then present an algorithm to ensure that a given InLPRs is of weak consistency. Then we design two algorithms for the completion of weak consistent InLPRs. The first algorithm computes all possible linguistic terms of each unknown entry to form an extended hesitant fuzzy linguistic term set (HFLTS) [37,44] by both additive consistency and weak consistency for the experts to acknowledge and select the most appropriate value(s). Its output is generally an extended hesitant fuzzy linguistic preference relation (EHFLPR). The second algorithm is developed for a special case when only the first row of an InLPR is prepared. The entries can be revised automatically if the experts acknowledge or revise the recommended values during the interaction, thus it is more flexible to catch and mine the actual opinions of the experts. Different from the existing interactive approaches, we only focus on pre-processing the information in GDM problems, i.e., improving InLPRs. The aim of this study is close to Alonso et al. [1], but we consider the linguistic setting rather than numerical setting.The rest of the paper is organized as follows: Some necessary preliminaries are reviewed in Section 2. The interactive algorithms for weak consistency reaching and for completing InLPRs are presented in Sections 3 and 4, respectively. Section 5 presents a real case study. Then some discussions are given in Section 6, and Section 7 concludes the paper.In this section, we first introduce some basic concepts related to the linguistic representation models. Then we review the concepts related to LPRs and InLPRs, as well as two consistency measures.In many real-world situations, the experts might feel more comfortable and confident to use words by means of linguistic terms than to use exact numbers. Based on the ordinal linguistic term setS˜={si|i=1,2,⋯,g}[64], Xu [52] redefinedS˜by a subscript-symmetric additive linguistic term set:(1)S={sα|α=−t,⋯,t}where t is a positive integer, sαowns the following characteristics:(1)The set is ordered: si≥sjif i≥j;The negation operator is defined: neg(sα)=s−α, especially neg(s0)=s0.A set of nine linguistic terms could be:S={s−4=extremely poor, s−3=very poor, s−2=poor, s−1=slightly poor, s0=fair, s1=slightly good, s2=good, s3=very good, s4=extremely good}.Obviously, s0 represents an evaluation of “indifference”. Given a discrete linguistic term set S, Xu [54] further extended it to a continuous form:(2)S¯={sα|α∈[−q,q]}to preserve all given information during computation, where q(q>t) is a sufficiently large positive integer. If sα∈S, sαis called an original term; otherwise, sαis a virtual term. The semantics of virtual terms can be constructed according to the semantics of the original terms [32]. Fig. 1shows the semantics of two virtual terms s−2.3 and s1.4 based on S of Example 1.To facilitate computing, given sα,sβ∈S¯, the following operation law is useful in this paper,(3)sα⊕sβ=sα+β;It is noted that the operational law holds only from a theoretical point of view. Another function I(·) can be defined to obtain the subscript of a given term sα, such that(4)I(sα)=α.Based on the characteristic of hesitant fuzzy sets (HFSs), Rodriguez et al. [37] proposed the following HFLTSs to enrich the linguistic computational models.Definition 1[37]. Let S be a linguistic term set, then a HFLTS,H˜S, is an ordered finite subset of consecutive linguistic terms of S.A transformation function associated with a context-free grammar was developed in Rodriguez et al. [37] to elicit HFLTSs from linguistic expressions. In GDM problems, Wang [44] and Zhang and Wu [69], respectively, extended the concept of HFLTSs to a more general case where the experts hesitate among several possible consecutive or non-consecutive linguistic terms.Definition 2[44]. Let S be a linguistic term set, then an ordered subset of linguistic terms of S, that is,(5)HS(x)={sα|sα∈S}is called an extended hesitant fuzzy linguistic term set (EHFLTS).The relationship between HFLTSs and EHFLTSs is described by Wang [44]. For the convenience of information processing in this paper, an ordered finite subset of linguistic terms inS¯is referred to as an EHFLTS as well. Usually, an EHFLTS represents one complex evaluation with uncertainties. The linguistic terms that appear in an EHFLTS can be considered as a generalized linguistic term. Formally, let X be a fixed set, for x∈X, Hs(x) can be represented as the following 2-tuple:(6){<x,hS(x)>|x∈X},where hs(x) is a set of p linguistic terms in S (orS¯), i.e.,(7)hS(x)={sα1,sα2,…,sαp}For a given x, hs(x) is abbreviated as hs, represents all possible linguistic terms, and thus is referred to as extended hesitant fuzzy linguistic term (EHFLT). For simplicity, a linguistic term sαis considered as an EHFLT {sα}. An arithmetic operation for EHFLTs based on virtual terms is defined as follows:Definition 3[44]. Given two EHFLTshS1andhS2, then:(8)hS1⊕hS2=∪sα1∈hS1,sα2∈hS2{sα1⊕sα2}=∪sα1∈hS1,sα2∈hS2{sα1+α2}.To compare information included in EHFLTSs, Wang [44] presented the following definition:Definition 4[44]. Given an EHFLT hS,E(hS)=(1/#hS)(⊕sα∈hSsα)is called the expected linguistic term of hS, where #hSis the number of linguistic terms sα, in hS.In linguistic contexts, an expert's preference is usually represented by an ordered set of linguistic terms. A LPR P on a finite set of alternatives X={xi|i=1, 2, …, n} is characterized by a linguistic membership function μP:X×X→S, μP(xi, xj)=pij∈S, where pijindicates the preference degree of the alternative xiover xj. Specifically, pij=s0 indicates indifference between xiand xj, pij>s0 means that xiis superior to xjand pij<s0 indicates that xjis superior to xi. Formally, we have:Definition 5[56]. Let P=(pij)n×nbe a LPR, then P is called a complete LPR if(9)pij∈S,pij⊕pji=s0,pii=s0,for alli,j.In the case when the experts are unable to provide preference values for all pairs of comparisons, the concept of InLPRs is as follows:Definition 6[56]. Let P=(pij)n×nbe a LPR, then P is called an InLPR if some of its elements cannot be given by the experts, which we denote by the unknown variable “x”, and the others can be provided by the experts, which satisfy:(10)pij∈S,pij⊕pji=s0,pii=s0,for alli,j.If the experts have hesitancy when providing pair-wise comparison judgments of alternatives by linguistic term set S, Rodríguez at al. [38] introduced the concept of HFLPRs using HFLTSs. Wang and Xu [45] extended the concept by EHFLTSs as follows:Definition 7[45]. An EHFLPR H is presented by a matrix H=(hij)n×n⊂X×X, wherehij={sαijl|l=1,…,#hij}(#hijis the number of linguistic terms in hij,sαijlis the lth linguistic term of hij) is an EHFLT, indicating preference degrees to which xiis superior to xj, such that(11)sαijl⊕sαjil=s0,hii=s0,#hij=#hji,for all l=1, …, #hij, i, j=1, 2, …, n and i<j.Note that in Definition 7, the linguistic terms in the upper triangular elements hij(i<j) are arranged in ascending order, and the linguistic terms in the lower triangular elements are arranged in descending order. Wang and Xu [45] proved that the expected linguistic term of hijis equal to that of hji. Similar to Definition 6, we present the concept of incomplete extended hesitant fuzzy linguistic preference relations (InEHFLPRs) in the next definition:Definition 8An EHFLPR H=(hij)n×n⊂X×X is called an InEHFLPR if some of its elements cannot be given by the experts, which we denote by the unknown variable “x”, and others can be provided by the experts, which satisfy(12)sαijl⊕sαjil=s0,hii=s0,#hij=#hji,for all l=1, …, #hij, i, j=1, 2, …, n and i<j, wherehij={sαijl|l=1,…,#hij}is an EHFLT, indicating preference degrees to which xiis superior to xj.Obviously, a LPR P=(pij)n×ncan be considered as the special case of an EHFLPR H=(hij)n×n, where hij={pij}. In the rest of the paper, LPRs may be transformed into EHFLPRs according to this relationship.Considering a LPR, Xu [56] defined the acceptable InLPR by checking if every alternative is compared at least once.Definition 9[56]. Let P=(pij)n×nbe an InLPR, P is acceptable if there exists at least one known element (except diagonal elements) in each line or each column of P, i.e., there exist at least n−1 judgments provided by the experts.We only discuss the acceptable InLPRs in this paper. Some studies related to the unacceptable PRs can be found in Refs. [4,51]. The concept of acceptable InEHFLPRs can be defined similarly.The concept of additive consistency of LPRs was introduced by Xu [53] as follows:Definition 10Let P=(pij)n×nbe a LPR, then P is called an additive consistent LPR if(13)pij=pik⊕pkjhold for any i, j, k=1, 2, …, n.Xu [53] also defined the additive consistency of InLPRs by letting Eq. (13) hold for any known elements. A better idea to define the additive consistency is to take the completeness of the InLPRs into account (see Ref. [25] for detail). The weak consistency is usually discussed by digraphs. We review some relative concepts defined by Wang and Xu [45].Definition 11Let P=(pij)n×nbe a LPR, then the preference relation graph (P-graph) associated with P is a weighted digraph GP=(X, AP) such that the set of vertices X={x1, x2, …, xn}, the set of arcs AP={(xi, xj)} where arc (xi, xj) joins the vertex xito the vertex xjif pij≥s0, associated with its weight w(xi, xj)=I(pij), i≠j, i, j=1, 2, …, n.In a P-graph, X represents the set of alternatives considered in the LPR, an arc (xi, xj) indicates that xiis superior to xjwith the degree sw(xi, xj)=pij. If the comparison “indifference” is not taken into account, then there are n(n−1)/2 arcs in GP, the underlying graph of GP is a simple and complete graph.Definition 12Let P=(pij)n×nbe a LPR, then the symmetric preference relation graph (S–P-graph) associated with P is a symmetric weighted digraph GS–P=(V, AS–P), where V={v1, v2, …, vn} is the set of vertices and A={(vi, vj)|i≠j, i, j=1, 2, …, n} is the set of arcs, and arc (vi, vj) joins the vertex vito the vertex vj, with its weight being w(vi, vj)=I(pij), i≠j, i, j=1, 2, …, n.Obviously, the S–P-graph keeps all preference information as the weights of arcs. There are n(n−1) arcs in GS–P. The indegree and outdegree of each vertex viare equal to n−1.Definition 13Let H=(hij)n×nbe an EHFLPR, then the hesitant preference relation graph (HP-graph) associated with H is a weighted digraph GHP=(X, AHP) such that the set of the vertices X={x1, x2, …, xn}, the set of arcsAHP={(xil,xjl)}where there is an arc(xil,xjl)that joins the vertex xito the vertex xjifsαijl≥s0, associated with its weightwl(xi,xj)=αijl, l=1, 2, …, #hij, i≠j, i, j=1, 2, …, n.Generally, there may be multiple arcs which come out of the vertex xiand enter into the vertex xjif #hij≥2. Note that the arcs(xil,xjl)are numbered according to the order of the corresponding hesitant elements emerged in hij.If a LPR (or an EHFLPR) is incomplete, its P-graph (or PH-graph) can be seen as a subset of the graph of a complete version. Thus we use the above definitions in InLPRs and InEHFLPRs directly.Some relative denotations of graphs are listed in this paragraph [21]. Given a digraph G=(X, A), a walk of a sequence of the form:(14)(xi1,(xi1,xi2),xi2,…,(xik−1,xik),xik)where k is an integer, k≥0,xi1,xi2,…,xik∈X,(xi1,xi2),…,(xik−1,xik)∈A. A walk is a path if its verticesxi1,xi2,…,xikare pairwise distinct. A path is a cycle ifxi1andxikcoincide. Given a weighted digraph, the length of a path, denoted bylen(xi1,(xi1,xi2),xi2,…,(xik−1,xik),xik), is defined by the sum of the weights of its arcs. The distance from xito xj, denoted by d(xi, xj), is the shortest length of the paths from xito xjin the weighted digraph.A LPR is said to be weak consistent if pik≥s0 and pkj≥s0 can result to pij≥s0 for all i, j, k∈{1, 2, …, n}, i≠j≠k. According to the definitions of P-graph and PH-graph, the weak consistency can be tested by the presence of cycles. A cycle(xi1,(xi1,xi2),xi2,…,(xik−1,xik),xik,(xik,xi1),xi1)with k vertices and k arcs is denoted by k-cycles, where 3≤k≤n. A k-cycle may lead to weak inconsistency of a given LPRs. We refer it to as illogical k-cycle in the following definition:Definition 14A k-cycle(xi1,(xi1,xi2),xi2,…,(xik−1,xik),xik,(xik,xi1),xi1)of a P-graph (or PH-graph) is an illogical k-cycle if there exists at least an arc (xi, xj) in the k-cycle such that w(xi, xj)>0.Based on Definition 14, the weak consistency of complete LPRs and EHFLPRs can be redefined by the absence of illogical 3-cycles. When it comes to InLPRs and InEHFLPRs, the weak consistency cannot be checked by the presence or absence of illogical 3-cycles. Any illogical k-cycles would lead to dissatisfactory weak consistency, where 3≤k≤n. Thus we have the following definitions:Definition 15Let P=(pij)n×nbe an InLPR, then P is said to be of weak consistency if there exists no illogical k-cycle (3≤k≤n) in its P-graph.Let H=(hij)n×nbe an InEHFLPR, then H is said to be of weak consistency if there exists no illogical k-cycle (3≤k≤n) in its PH-graph.As the first task of decision supporting is to ensure the InLPRs provided by the experts are logically rational, i.e., weak consistent. Thus, we develop an interactive algorithm to detect and repair inconsistencies of InLPRs.The most significant procedure of weak consistency detection is to find out k-cycles in the P-graph of an InLPR. Xu et al. [50] developed an algorithm to search for k-cycles based on the numerical matrix of incomplete FPR. In this paper, weak consistency is tested based on the P-graph. We utilize the elementary cycle (EC) algorithm from Tiernan [41] to list all k-cycles because it can be implemented by programming languages directly. The EC algorithm returns a list of k-cycles of a given digraph. The pseudocode of the EC algorithm is cited in Appendix A.When the k-cycles of a P-graph are figured out, we should give some advices for the exerts to repair weak inconsistencies. Two classes of arcs which appear in k-cycles might be illogical judgments with high possibilities. The first class includes those who appear most frequently in the list of k-cycles. If this class of arcs is repaired, k-cycles would be removed maximally. Another class is those who possess smaller weights. It is clear that only the direction of arcs can influence the weak consistency. Considering the provided pijand the actual value in the experts’ mindpij*, it is rational to hypothesize that the deviation between them are random. Thus ifpij*is close to s0, the pijfalls into a range nearby s0, which results to the direction of arc defined by pijmay be opposite to that defined bypij*. In the following interactive algorithm, we suggest the experts to consider revising the two classes of arcs in the P-graph. The criterion of deriving the recommended values is to revise the direction of the corresponding arc. Specifically, if an illogical entry pij>s0 needs revision, then pijshould be revised to any term of {s−t, …, s0}, and pjishould be revised to the corresponding term of {s0, …, st}. The interactive weak consistency reaching (WCR) algorithm is described as follows:WCR algorithmGiven an InLPR P=(pij)n×n, its P-graph GP=(X, V).Step 1.m=0, P(m)=P,GP(m)=GP.Step 2. Find all k-cycles (3≤k≤n) inGP(m)by the EC algorithm. Remove the logical cycles whose weights of arcs are equal to 0. The resultant set of cycles is denoted by C.Step 3. If #C=0, then P(m) is weak consistent, where #C is the cardinality of C, go to Step 7; else go to Step 4.Step 4. Find the arc(s) (xi, xj) which is the most frequent in C. The set of position indices of entries need to be revised is denoted by E. Let E={(i, j)|(xi, xj) is the most frequent arc in C}. Find the arc(s) whose weight is the closest (not equal) to 0. Let E=EU{(i, j)|w(xi, xj) is the closest to 0 in C}.Step 5. For each (i, j)∈E, recommend hij={s0, …, st} to the experts. The experts should choose the entry with the highest confident level to revise, using one of the recommended linguistic terms in hji. If the experts choosepji*∈hjias the revised value of sji, i.e.,pji=pji*(correspondingly,pij=neg(pij*)), the new InLPR is denoted by P(m+1) and its G-graph is denoted byGP(m+1).Step 6.m=m+1, go to Step 2.Step 7. End.The following theorem can be easily obtained from the procedure of the WCR algorithm:Theorem 1The WCR algorithmWCR algorithm is finite and returns the weak consistent InLPR of a given InLPR.(1) The finiteness of the WCR algorithm is proven at first by clarifying that the number of k-cycles would be decreased once the direction of an arc is revised. Suppose that the algorithm revises the direction of the arc (vi, vj), and consider that there is a path from vlto vm, then there can be three possible relations between the arc (vi, vj) and the path from vlto vm, which is illustrated in Fig. 2. In Case 1 and Case 2, the original cycles, which include (vi, vj), are removed from the P-graph, and no new cycle emerges. Whereas in Case 3, it seems a new cycle raises up when (vi, vj) is revised to (vj, vi). In fact, if the original cycle includes (vi, vj), there must be another cycle including the path (vi(vi, vl), vl, …, vm, (vm, vj), vj). Thus the arc (vi, vj) is suggested to revise only because its weight is close to 0. After revision, a new cycle (vi(vi, vl), vl, …, vm, (vm, vj), vj, (vj, vi), vi) is constructed and (vj, vi) would not be recommended any more. The relation between a recommended arc and another path can be transformed to Cases 1 and 2, which completes the proof of the finiteness of the WCR algorithm.(2) The weak consistency can be immediately obtained by the procedure of the algorithm. □We further present a numerical example to illustrate the validity of the WCR algorithm.Example 2Suppose an InLPR is provided by an expert as follows (based on S in Example 1)Step 1.m=0, P(0)=P1,GP(0)=GPis shown in (a) of Fig. 3.Step 2. There are a 3-cycle (x2, (x2, x3), x3, (x3, x6), x6, (x6, x2), x2), a 4-cycle (x1, (x1, x5), x5, (x5, x4), x4, (x4, x2), x2, (x2, x1), x1) and a 6-cycle (x1, (x1, x5), x5, (x5, x4), x4, (x4, x2), x2, (x2, x3), x3, (x3, x6), x6, (x6, x1), x1) inGP(0). Thus there are three elements in C.Step 3. #C=3, then go to Step 4.Step 4. The arcs (x1, x5), (x5, x4), (x4, x2), (x2, x3) and (x3, x6) appear twice. The arcs (x2, x3) and (x4, x2) possess the smallest weights, w(x2, x3)=w(x4, x2)=1. Therefore E={(1, 5), (5, 4), (4, 2), (2, 3), (3, 6)}.Step 5. For each (i, j)∈E, recommend hji={s0, …, st} to the experts. Suppose that the experts realize that p32 should be s1 (correspondingly, p23=s−1), the new InLPR is denoted by P(1) and its G-graph, which is shown in (b) of Fig. 3, is denoted byGP(1).Step 6.m=1, go to Step 2.Step 2. There is only one 4-cycle inGP(1)and C={x1, (x1, x5), x5, (x5, x4), x4, (x4, x2), x2, (x2, x1), x1}.Step 3. #C=1, then go to Step 4.Step 4. The arcs (x1, x5), (x5, x4), (x4, x2) and (x2, x1) appear twice. The arc (x4, x2) possesses the smallest weight, w(x4, x2)=1. Therefore E={(1, 5), (5, 4), (4, 2), (2, 1)}.Step 5. For each (i, j)∈E, recommend hji={s0, …, st} to the experts. Suppose that the experts realize that p24 should be s1 (correspondingly, p42=s−1), the new InLPR is denoted by P(2) and its G-graph, which is shown in (c) of Fig. 3, is denoted byGP(2).Step 6.m=2, go to Step 2.Step 2. There is no cycle inGP(2), thus C is empty.Step 3. #C=0, then P(2) is weak consistent, go to Step 7.Step 7. End.Note that the weak inconsistency of InHFLPRs can be detected and repaired by a completely similar way to the above algorithm. Further, if the experts are enabled to have hesitancy on the recommended linguistic terms, then the InLPR becomes an InHFLPR during the interaction. A similar algorithm can be developed to suit this situation.Given a weak consistent InLPR, in this section, we introduce some interactive algorithms to complete it for supporting decision making in this section.Some denotations are declared at first. For a given InLPR P=(pij)n×nassociated with its P-graph GP=(X, AP) and S–P-graph GS–P=(X, AS–P), the set of all possible arcs is denoted by(15)A={(xi,xj)|i,j=1,2,…,n,i≠j}The set of known arcs of GP is(16)EAP={(xi,xj)∈A|(xi,xj)∈AP}The set of known arcs of GS–P is(17)EAS−P={(xi,xj)∈A|(xi,xj)∈AS−P}The set of missing arcs of GS–P is(18)MAS−P=A\EAS−PTwo useful sets of lower indices are(19)Jik(WC)={j|(xi,xj),(xj,xk)∈EAP}(20)Jik(AC)={j|(xi,xj),(xj,xk)∈EAS−P}and the operation # calculates the cardinality of a set.The additive consistency and weak consistency-based interactive algorithm (ACWC algorithm) is developed by considering multiple possible linguistic terms, represented by EHFLTSs, based on both the additive consistency and the weak consistency of LPRs.For a missing entry pik, if there exists j such that pijand pjkare known then pikcan be estimated by pij⊕pjkaccording to the definition of additive consistency. This is the very approach presented by Xu [56]. However, the InLPR may be not strictly additive consistent. Thus if there exist j1 and j2 such thatpij1,pj1k,pij2andpj2kare known, butpij1⊕pj1kmay be not equal topij2⊕pj2k, the existing methods calculate the averaging value of the two results by some means. Moreover, when presenting a LPR by pair-wise comparisons, the experts may have deviations between the provided values and their actual opinions. In this case, it is rational to elicit them to seek out the deviations by a third-party object (alternative). Thus we first calculate all the possible linguistic terms for the missing elements of an InLPR, and recommend these values to the experts. The experts can select the most possible term(s) to complete the InLPR. We use EHFLTSs in the procedure of the ACWC algorithm as they can represent all possible linguistic terms simultaneously. Thus the output of this algorithm is generally an EHFLPR.The main advantage of this idea is the consideration of all possible linguistic terms and the recommendation to the experts for completing InLPRs by interaction. However, an InLPR may be not weak consistent any more if the missing entries are completed only by the additive consistency because some of the “possible” linguistic terms may be illogical. These illogical terms should be removed from the estimated sets of linguistic terms.Therefore, when estimating a missing entry, the proposed ACWC algorithm calculates the possible linguistic terms according to weak consistency and then computes the possible terms based on the criterion of additive consistency. The intersection of these two classes of possible terms serves as the set of recommended values of a missing entry. The procedure of the ACWC algorithm is presented as follows:ACWC algorithmGiven a weak consistent InLPR P=(pij)n×n, the algorithm outputs a weak consistent EHFLPR H=(hij)n×n.Step 1. Initiate H by P, where(21)hij={pij},ifpijisknown{},ifpijisunknownStep 2. If H is complete (or MAS–P is empty), go to Step 7; else go to Step 3.Step 3. For any (xi, xk)∈MAS–P, if#Jik(WC)>0, then there should be an arc from xito xk, thus the weak consistent estimated value ishˆik(WC)={s0,s1,⋯,st}(hˆki(WC)={s−t,⋯,s0}), EAP=EAP∪{(xi, xk)}; else if#Jki(WC)>0, there should be an arc from xkto xi, thushˆki(WC)={s0,s1,…,st}(hˆik(WC)={s−t,…,s0}), EAP=EAP∪{(xk, xi)}. Repeat the procedures till no new arc is added into EAP,hˆik(WC)=hˆki(WC)={s−t,…,st}, where (xi, xk)∉EAP and (xk, xi)∉EAP, i≠k.Step 4. For any (xi, xk)∈MAS–P, if#Jik(AC)>0,hˆikj=hij⊕hjkfor allj∈Jik(AC), then the additive consistent estimated value ishˆik(AC)=∪j∈Jik(AC)hˆikj.Step 5. The estimated value of hikishˆik=hˆik(WC)∩hˆik(AC), where (xi, xk)∈MAS−P.Step 6. Recommend all the estimated values to the experts and suggest acknowledging the entry with the highest confident level. If a subset ofhˆik, denoted by hik, is selected by the experts, then hikis the confirmed value of xiover xkand hkiis obtained by Definition 7. EAS−P=EAS−P∪{(xi, xk), (xk, xi)}, MAS−P=MAS−P\{(xi, xk), (xk, xi)}; If hik≥s0, EAP=EAP∪{(xi, xk)}, if hki≥s0, EAP=EAP∪{(xk, xi)}; go to Step 2. If the experts fail to determine which one(s) should be selected, go to Step 7.Step 7. Output H.Step 8. End.It is apparent that the ACWC algorithm is finite and its output is weak consistent. The algorithm enables the experts to complete only one missing entry at each interaction to keep the weak consistency of the given InLPR. Note that some estimated possible linguistic terms may lie outside the interval [s−t, st]. Thus the following transformative function f is introduced to normalize the extreme values:(22)f(sα)=s−t,ifsα<s−tst,ifsα>stsα,otherwiseBelow we present a numerical example to illustrate the validity of the AC algorithm:Example 3Given the following weak consistent InLPR resulted from Example 2:Step 1. Initiate H by Eq. (21), that isH={s0}{s−2}{}{}{s3}{s−3}{s2}{s0}{s−1}{s1}{}{s−3}{}{s1}{s0}{}{}{s4}{}{s−1}{}{s0}{s−3}{}{s−3}{}{}{s3}{s0}{}{s3}{s3}{s−4}{}{}{s0}Step 2.H is not complete, go to Step 3.Steps 3–5. Take (x1, x3)∈MAS–P for example. We have#J13(WC)=0,#J31(WC)=2andJ13(AC)={2,6}, thenhˆ31(WC)={s0,s1,⋯,s4}(hˆ13(WC)={s−4,⋯,s0})andhˆ13(AC)can be estimated byhˆ13(AC)=(h12⊕h23)∪(h16⊕h63)={s−2⊕s−1}∪{s−3⊕s−4}={s−7, s−3}. Obviously, s−7 is out of [s−4, s4], then using the function f of Eq. (22),hˆ13(AC)={s−4,s−3}. The estimated value of h13 ishˆ13=hˆ13(WC)∩hˆ13(AC)={s−4,s−3}. Similarly, other missing arcs (in the upper triangular) are calculated and shown in Table 1.Step 6. Suppose that the experts select h34={s2} with the highest confident level, go to Step 2.Step 2.H is not complete, go to Step 3.Steps 3–5. The estimating procedure and recommended values are shown in Table 2.Step 6. Suppose that the experts select h13={s−4, s−3}, h14={s4}, h25={s1}, h35={s4}, h46={s−4} and h56={s−4} respectively, in the next interactions. Go to Step 2.Step 2.H is complete, go to Step 7.Step 7.H is completed to the following form:H={s0}{s−2}{s−4,s−3}{s4}{s3}{s−3}{s2}{s0}{s−1}{s1}{s1}{s−3}{s4,s3}{s1}{s0}{s2}{s4}{s4}{s−4}{s−1}{s−2}{s0}{s−3}{s−4}{s−3}{s−1}{s−4}{s3}{s0}{s−4}{s3}{s3}{s−4}{s4}{s4}{s0}Step 8. End.We can see that the outcome is generally an EHFLPR with weak consistency. The proposed algorithm recommends all possible values, which are calculated by additive consistency and subjected to weak consistency, to the experts to complete the InLPR.The ACWC algorithm improves an InLPR based on not only additive consistency but also weak consistency. By which we enable the experts to take part in the interactions. An InLPR is completed by both objective computing based on certain criteria and the experts’ subjective information elicited by interactions. However, there are some drawbacks in the algorithm. We aim to mine the actual values of the experts’ preferences, but the experts’ can only select terms from some possible values provided by algorithms. When completing the InLPR by interaction, the experts may realize the appearance of deviations between existing entries and their minds. Then the experts’ preferred values may be not included in the recommended set. Thus the first drawback of the ACWC algorithm is that the experts cannot provide preference values not included in the recommended set. Furthermore, when a subset of recommended values is selected by the experts, it means that other values are not appropriate to express the preferences. Therefore, some existing entries should be revised based on this new opinion to increase the consistency level of the preference relation. In this section, we develop an interactive algorithm to construct a complete LPR with additive consistency.It is natural to assume that the experts begin comparisons from the first row (column) of the LPR. As the minimum condition of an acceptable InLPR is n−1 pair-wise comparisons should be given (and each object should be compared at least once), we begin the following discussion based on the assumption that the first row and column of the LPR is completely provided by the experts. For the convenience of description, we define a new operation of linguistic terms as follows:Definition 17Given three linguistic terms sα, sβand sγ∈S, then we denote sγ=sα⊝sβif and only if sγ⊕sβ=sα.In fact, the subtraction can be done by the lower indices, that is sα⊝sβγ=sα−β. For example, s−1⊕s2=s1, thus we have s−1=s1−s2=s1−2. Moreover, we have pij⊕pji=s0 in an LPR P. It means pij=s0⊝sji, thus pij⊕pkl=pkl⊕(s0⊝pji)=pkl⊝pjiholds for any pkl∈P. Consequently, this new operation enables us to focus on the upper triangle of P because of the relationship between the upper triangle and the lower triangle. In the rest of this section, only the elements in the upper triangle are focused on.Given a weak consistent InLPR:(23)P=(pij)n×n=p11p12⋯p1np21x⋯x⋮⋮⋱⋮pn1x⋯xThen for any missing entry (x2, xk)∈MAS–P, k≥3,∃j=1∈J2k(AC)such that (x2, x1), (x1, xk)∈EAS–P, hence p2kcan be estimated bypˆ2k=p21⊕p1k, or equivalentlypˆ2k=p1k⊝p12. If the estimated values of the second row are returned to the experts, there might be the following cases:(1)The experts believe thatpˆ2kis the actual value of p2k, then the entry is completed byp2k=pˆ2k.The experts argue thatpˆ2kis not the actual value of p2k, and insist that another linguistic termp˙2kis more suitable, then the entry is completed byp2k=p˙2k. Furthermore, the provided termp˙2kindicates that there are deviations when evaluating p12 and/or p1k. Thus, the experts should revise p12 and/or c according to their knowledge and experiences. If the experts think p12 should bep′12, then p12 should be automatically revised top′1kso as to satisfyp′1k=p′12⊕p˙2k. Similarly, if the experts revise p1ktop′1k, then p12 should be automatically changed top′1kso thatp′12=p˙2k⊝p′1k. In addition, the entry p12 was used to estimate the values of the second row. We have to estimate the second row again byp′12.Based on the above idea, we develop the following interactive algorithm with self-adaptive evolution (SAE algorithm) to complete an InLPR row by row.SAE algorithmGiven a weak consistent InLPR P=(pij)n×n, the first row p1j(j=1, 2, …, n) are known. The algorithm outputs an additive consistent LPR.Step 1. Let i=1.Step 2. Estimate the (i+1)th row of P bypˆi+1,j=pij⊝ pi,i+1 for all j=i+2, …, n.Step 3. Recommendpˆi+1,j(j=i+2, …, n) to the experts.Step 4. Let j=i+2.Step 5. If the experts agree withpˆi+1,j, thenpi+1,j=pˆi+1,j, go to Step 7; else, go to Step 6;Step 6. Assume that the experts insist that the actual value of pi+1,jisp˙i+1,j, thenpi+1,j=p˙i+1,j, wait for the experts to adjust pijand/or pi,i+1. If the experts inputp˙ijas the adjusted value of pij, thenpij=p˙ij,pi,i+1=p˙ij⊝p˙i+1,j; if the experts inputp˙i,i+1as the adjusted value of pi,i+1, thenpi,i+1=p˙i,i+1,pij=p˙i,i+1⊕p˙i+1,j. Adjust the (i+1)th column by pl,i+1=pli⊕pi,i+1 and the jth column by plj=pl,i+1⊕pi+1,j, where l∈{1, …, i−1}. Re-estimate the (i+1)th row bypˆi+1,l=pil⊝ pi,i+1, where l∈{i+2, ⋯, n}\{j}.Step 7. If j<n, then j=j+1, go to Step 5; else, go to Step 8.Step 8.i=i+1. If i≥n−1, go to Step 9; else go to Step 2.Step 9. For any j>i, pji=neg(pij); pii=s0; Output P.Step 10. End.The flowchart of the SAE algorithm is shown in Fig. 4. The additive consistency of the output P can be clarified by the following theorem:Theorem 2The LPR P outputted by the SAE algorithmSAE algorithm is additive consistent.Assume that P is not additive consistent, then there exists k such that Kij={k|pij≠pik⊕pkj} is not empty. Without loss of generality, let i<j.If pijis determined by the recommended value, then we have pij=pik⊕pkjaccording to Step 2 and Step 5.If sijis determined by the experts, then according to Step 6, pij=pik⊕pkjholds after the procedure of adjustments and self-adaptive evolution is finished.Thus we have Kij=Φ, which is contradictory to the assumption. Thus, P is additive consistent. □The SAE algorithm is further demonstrated by the following example:Example 4Given the following weak consistent InLPR (based on S in Example 1).Step 1. Let i=1.Step 2. Estimate the second row of P3, for example,pˆ23=p13⊝ p12=s−1⊝s1=s−2. The first two rows of P3 is:s0s1s−1s2s3s0s−2s1s2Step 3. Recommendpˆ2j(j=3,4,5)to the experts.Step 4. Let j=3.Step 5. Suppose that the experts do not agree withpˆ23=s−2. They insist that s−1 is more suitable. Go to Step 6;Step 6.p23=s−1, wait for the experts to adjust p13 and/or p12. If the experts consider that p13 is not necessary to revise, then p12 should be revised to p12=p13⊝p23=s−1⊝s−1=s0. Thus, the second row is re-estimated as:s0s0s−1s2s3s0s−1s2s3Step 7.j<n, let j=4; go to Step 5;Step 5. Suppose that the experts agree withpˆ24=s2, then p24=s2. Go to Step 7;Step 7.j<n, let j=5; go to Step 5;Step 5. Suppose the experts agree withpˆ25=s3, then p25=s3. Go to Step 7;Step 7.j≥n; go to Step 8;Step 8.i=2; go to Step 2 to estimate the third row of P3.Run the algorithm till i=4, and then go to Step 9.Step 9.P3 might be completed as:P3=s0s0s−0.5s1s3.5s0s0s−0.5s1s3.5s0.5s0.5s0s1.5s4s−1s−1s−1.5s0s2.5s−3.5s−3.5s−4s−2.5s0Step 10. End.Energy channels, which are used to transport oil, natural gas, electricity and other resources, play an important role in the economic and social development of any country. However, the safety of energy channels is threatened by various terrorist forces, such as piracy, in recent years. More than 80% of Chinese international trades rely on South Sea, Strait of Malacca, Gulf of Aden and etc. An institute including 100 military experts is authorized to evaluate the level of risk of energy channels related to Chinese international trades in order to provide the support for the military deployment and emergency response. By means of data collection and case study, a network analysis model is formed for the problem. The model includes five clusters of elements, which are Piracy, Sea control capability, Island chain blockade capability, Risk elements and Energy channels. Specifically, the elements in Sea control capability (C) are Military bases (C1), Number of garrison (C2), Reconnaissance capabilities (C3), Military support capabilities (C4) and Logistical capacity (C5); the elements in Energy channels (E) are South Sea (E1), Strait of Malacca (E2), Indian Ocean (E3), Gulf of Aden (E4), East Africa (E5), Cape of Good Hope (E6), Arafura Sea (E7) and Okhotsk (E8). When conducting pair-wise judgments, some PRs can be derived by the existing objective data, while most of PRs can only be obtained by subjective opinions of the experts because of the absence of necessary data and various kinds of uncertainties. To obtain decision information with high confident level, the military experts are given enough time to provide their opinions.Because what we concern in this paper is to obtain LPRs as accurate as possible based on InLPRs, we do not plan to solve the whole problem here. Only two specific cases are presented to illustrate the proposed algorithms as well as to compare with the existing techniques.Case 1 Compare five elements of the cluster C with respect to E1.Suppose that an expert uses the following linguistic term set S for pair-wise judgments: S={s−2=very poor, s−1=poor, s0=fair, s1=good, s2=very good}, and the initial InLPR is:PC_E1=s0xs−2s−1xxs0s2xs2s2s−2s0s1xs1xs−1s0s2xs−2xs−2s0Obviously, it is a weak consistent InLPR. Using the proposed ACWA algorithm, the estimated values of the missing entries are:hˆ12={s−2},hˆ15={s1},hˆ15={s1},hˆ24={s0,s2},hˆ35={s0,s2}.If the expert chooses h24={s0} in this interaction, then the estimated values of the second round are:hˆ12={s−2,s−1},hˆ15={s1},hˆ35={s0,s2}.When the algorithm is over, the output LPR might be:PC_E1(1)=s0s−2s−2s−1s1s2s0s2s0s2s2s−2s0s1s1s1s0s−1s0s2s−1s−2s−1s−2s0Moreover, there are several studies focusing on managing missing preference values of incomplete PRs, which can be divided into two different strategies: the iterative approaches and the optimization approaches. There are not any studies using optimization approaches in linguistic setting because of the difficulty of forming optimal models using linguistic terms directly. Herrera-Viedma et al. [25] proposed anadditive consistency based iterative procedure to estimate the missing preference values of incomplete FPRs. Motivated by which, Alonso et al. [2] proposed a method for incomplete 2-tuple LPRs which converts a 2-tuple LPR into a FPR and estimates the missing values using the additive transitivity property, Alonso et al. [3] designed an iterative procedure similar to Ref. [25] to estimate the missing entries of an incomplete 2-tuple LPR, Xu et al. [51] further introduced a revised version of the iterative procedure proposed by Alonso et al. [3].If Alonso et al. [2]’s algorithm is used, it is completed as:PC_E1(2)=s0s−2s−2s−1s1s2s0s2s1.5s2s2s−2s0s1s1s1s−1.5s−1s0s2s−1s−2s−1s−2s0In this case, the same result can be derived by the Alonso et al. [3]’s algorithm and the Xu et al. [15]’s algorithm. Note that all these three algorithms stop at the first round of iteration.Case 2 Compare 8 elements of the cluster E with respect to C3.Suppose that an expert considers the linguistic term set S in Example 1 for pair-wise judgments. The initial InLPR isPE_C3=s0s2s1s−1s0s3s2s3s−2s0xxxxxxs−1xs0xxxxxs1xxs0xxxxs0xxxs0xxxs−3xxxxs0xxs−2xxxxxs0xs−3xxxxxxs0It is a weak consistent InLPR as well. Using the proposed SAE algorithm, the first two rows of PE_C3 (after estimating) are:s0s2s1s−1s0s3s2s3s0s−1s−3s−2s1s0s1If the expert does not agree with the estimated values and realizes the entry of row 1 and column 2, i.e., s2, should be s1, then the first two rows (after re-estimating) are:s0s1s1s−1s0s3s2s3s0s0s−2s−1s2s1s2When the algorithm is over, the output LPR might be:PE_C3(1)=s0s1s1s−1s0s3s2s3s-1s0s0s−2s−1s2s1s2s−1s0s0s−2s−1s2s1s2s1s2s2s0s1s4s3s4s0s1s1s−1s0s3s2s3s−3s−2s−2s−4s−3s0s−1s0s−2s−1s−1s−3s−2s1s0s1s−3s−2s−2s−4s−3s0s−1s0Moreover, Xu [56] is the first paper that presented an iterative algorithm to complete InLPRs based on additive consistency. If the Xu [56]’s algorithm is used, then the output LPR is:PE_C3(2)=s0s2s1s−1s0s3s2s3s−2s0s1s−3s−2s1s0s1s−1s−1s0s−2s−1s2s1s2s1s3s2s0s1s4s3s4s0s2s1s−1s0s3s2s3s−3s−1s−2s−4s−3s0s−1s0s−2s0s−1s−3s−2s1s0s1s−3s−1s−2s−4s−3s0s−1s0

@&#CONCLUSIONS@&#
We have focused on the InLPRs in this paper. To be easily used in application, the proposed algorithms have been integrated in a decision support system. In the decision supporting process, a weak consistency reaching algorithm, which is implemented by detecting k-cycles from the P-graphs, has been proposed to ensure the original InLPRs is (or is revised to) a weak consistent one. Then two completing algorithms, i.e., the ACWC algorithm and the SAE algorithm, have been presented to improve the InLPRs base on the additive consistency and the weak consistency. The procedures of the three algorithms interact with the experts and thus can elicit their actual opinions among alternatives.(1)The characteristics of the proposed algorithms are apparent, comparing with the similar techniques:The proposed interactive algorithms can mine the experts’ preference more accurately. The experts can supply their preference information even the original InLPRs have been submitted if any new opinions are elicited by the recommended values.The weak consistency of InLPRs is considered at first and then the additive consistency is used as the criterion of completing. The completed version of an InLPR is guaranteed to be logically correct.The ACWC algorithm enables the experts to have hesitations on some possible linguistic terms, and thus, it is flexible to elicit the experts’ opinions. Moreover, this study enriches the application of HFSs and EHFLTSs.The SAE algorithm improves the existing entries of an InLPR automatically when new opinions are acknowledged. A strictly additive consistency LPR is derived according to the algorithm.However, the proposed algorithms need more time of the experts because of the interactions.For future work, we will consider integrating several forms of preference relations in a decision support system to adapt more general GDM situations. Moreover, it would be interesting to extend the proposed algorithms to other linguistic contexts such as multi-granular linguistic context [35] and unbalanced linguistic context [7]. Finally, as what we are doing is pre-processing the information, it is very valuable to present the algorithms without the use of specific computational model because with which a linguistic term is being approximated with a numerical scale based on a number of fairly unstable assumptions.