@&#MAIN-TITLE@&#
Robust weighted vertex p-center model considering uncertain data: An application to emergency management

@&#HIGHLIGHTS@&#
Weighted p-center model is proposed for locating urgent relief distribution centers.Uncertain relief demands and delivery times are represented by fixed intervals.The objective is to optimize worst-case performances.Property of worst-case scenarios is identified and applied in the algorithm.The proposed model is applied to a real-world case based on a massive earthquake.

@&#KEYPHRASES@&#
Uncertainty modeling,Emergency logistics,p-Center model,Robust optimization,

@&#ABSTRACT@&#
This paper presents a generalized weighted vertex p-center (WVPC) model that represents uncertain nodal weights and edge lengths using prescribed intervals or ranges. The objective of the robust WVPC (RWVPC) model is to locate p facilities on a given set of candidate sites so as to minimize worst-case deviation in maximum weighted distance from the optimal solution. The RWVPC model is well-suited for locating urgent relief distribution centers (URDCs) in an emergency logistics system responding to quick-onset natural disasters in which precise estimates of relief demands from affected areas and travel times between URDCs and affected areas are not available. To reduce the computational complexity of solving the model, this work proposes a theorem that facilitates identification of the worst-case scenario for a given set of facility locations. Since the problem is NP-hard, a heuristic framework is developed to efficiently obtain robust solutions. Then, a specific implementation of the framework, based on simulated annealing, is developed to conduct numerical experiments. Experimental results show that the proposed heuristic is effective and efficient in obtaining robust solutions. We also examine the impact of the degree of data uncertainty on the selected performance measures and the tradeoff between solution quality and robustness. Additionally, this work applies the proposed RWVPC model to a real-world instance based on a massive earthquake that hit central Taiwan on September 21, 1999.

@&#INTRODUCTION@&#
The p-center model, which aims to locate p facilities to minimize maximum distance (or travel time) between demand nodes and their closest facilities (e.g., Kariv and Hakimi, 1979; Albareda-Sambola et al., 2010), has been considered particularly suitable for emergency applications (e.g., Jia et al., 2007a,b; Huang et al., 2010), among various facility location models that have been presented in the literature (e.g., Mirchandani and Francis, 1990; Daskin, 1995; Altiparmak et al., 2006). This work adapts the p-center model to locate urgent relief distribution centers (URDCs) in an emergency logistics network that aims to promptly deliver relief supplies from URDCs to all relief or medical service stations in affected areas in the aftermath of quick-onset disasters (e.g., Altay and Green, 2006; Yi and Ozdamar, 2007; Campbell and Jones, 2011).URDCs play an important role in an emergency logistics network, because they serve as hubs that seamlessly integrate and coordinate inbound and outbound emergence logistics responding to relief demands from affected areas. These hubs also have an inventory management function (i.e., risk pooling)—aggregating relief demands or their forecasts across several affected areas to reduce the adverse impact of relief demand variability and uncertainty on the system. In emergency response to quick-onset disasters, government rescue agencies typically designate existing public buildings (e.g., schools and stadiums) with little or no damage that can be promptly converted to shelters for survivors and/or warehouses for relief supplies as candidate sites of URDCs, instead of establishing new emergency facilities from scratch. Thus, the problem of locating URDCs can be considered as the vertex p-center problem which restricts the set of candidate sites to locations of existing public buildings (i.e., facility nodes). Furthermore, when relief demands faced by relief or medical stations are taken into account, the problem becomes a weighted vertex p-center (WVPC) problem (e.g., Current et al., 2002) with nodal weights reflecting relief demands from relief stations (i.e., demand nodes) in affected areas and the objective being to minimize maximum demand-weighted travel time between relief stations and their closest URDCs.The proposed WVPC model for locating URDCs explicitly accounts for uncertain relief demands from relief stations and travel (or delivery) times between URDCs and relief stations, mainly due to poor measurements based on limited information available during a disaster’s aftermath or approximations in the modeling process using aggregated demands and choosing a distance norm. Two major categories of approaches have been adopted in the literature to deal with uncertain coefficients in facility location models (Snyder, 2006), namely, stochastic programming (SP) and robust optimization (RO). The former has been used typically to deal with decision-making for facility locations in risk situations, in which the values of uncertain coefficients are governed by discrete or continuous probability distributions that are known to a decision-maker. The SP approach has been widely applied to emergency logistics for short-notice disasters (e.g., hurricanes, flooding, and wild fires) by assuming that possible impacts of these disasters can be estimated based on historical and meteorological data. The common goal of these stochastic location models is to optimize the expected value of a given objective function. A classical example of applying SP to disaster relief is the scenario-based, two-stage stochastic model proposed by Mete and Zabinsky (2010), for medical supply pre-positioning and distribution in emergency management. Other examples can be found in, for instance, Chang et al. (2007) and Balcik and Beamon (2008).On the other hand, the RO approach attempts to optimize the worst-case system performance in uncertain situations that lack any information about the probability distributions of uncertain coefficients (e.g., Kouvelis and Yu, 1997); hence, the RO approach generally describes uncertain data using pre-specified intervals or ranges. Typical robustness measures include mini-max objective value and mini-max regret in an objective value. The RO approach may be more appropriate than the SP approach in emergency response to quick-onset or no-notice disasters (e.g., earthquakes, tsunamis, and landslides). For quick-onset disasters, because of the difficulty in predicting disaster occurrence and impacts as well as a lack of historical data, probability distributions and scenario data are generally unavailable. For example, an extremely large earthquake, 9.1 on the Richter scale, which hit the northeastern coast of Japan on March 11, 2011, was never considered in the nation’s preparedness planning for earthquakes, even though Japan is widely regarded as one of the most advanced countries in earthquake preparedness. Thus, in responding to such a disaster, decision-makers may prefer an alternative method for describing uncertain data (i.e., using intervals to represent uncertain data).In the proposed RWVPC model, uncertain relief demands at relief stations in affected areas and travel times between URDCs and relief stations are represented using prescribed intervals (or ranges), rather than probability distributions. The objective of locating p URDCs is to minimize worst-case deviation in maximum demand-weighted travel time between URDCs and relief stations from the optimal solution. This work proposes a theorem that facilitates identification of the worst-case scenario for a given set of URDC locations, thereby reducing complexity of solving the problem. Since the problem is NP-hard (Averbakh, 2003), a local search-based algorithmic framework incorporating the theorem for identifying the worst-case scenarios is developed to find robust solutions within a reasonable amount of computational resources. Then, a specific framework implementation based on simulated annealing (SA) is developed to conduct numerical experiments, including a case study based on the Jiji Earthquake, which hit central Taiwan on September 21, 1999.The p-center problems with interval-represented uncertain data tend to be very difficult because of the mini-max structure. Therefore, analytical results and exact algorithms for the p-center problems with interval data have only been attained in special cases, such as locating a single facility on general networks or multiple facilities on tree networks (e.g., Averbakh and Berman, 2000; Burkard and Dollani, 2002). To the best of our knowledge, only Averbakh and Berman (1997) reported analytical results for an absolute weighted p-center problem with interval-represented nodal weights. No study has addressed absolute or vertex multi-center problems with both interval-represented edge lengths and nodal weights.This study contributes significantly to the literature by (i) modeling the URDC location problem as the WVPC problem with interval-represented edge lengths and nodal weights on general networks; (ii) providing an effective and efficient algorithmic framework for solving the problem; and (iii) shedding light on the applicability and potential benefits of the proposed model to real-world instances.The remainder of this paper is structured as follows. Section 2 describes the RWVPC problem, the representation of data uncertainty, and the property of worst-case scenarios. Section 3 presents the generic heuristic framework and a specific implementation using SA. This is followed by the numerical experiments in Section 4. Section 5 provides a case study demonstrating the applicability of the proposed model to real-world instances. Concluding remarks are given in Section 6.Consider a connected, undirected network G=(N, A), where N is the vertex set and A the arc (or edge) set. Let U be the set of candidate sites (i.e., facility nodes) for URDC locations and V be the set of relief stations (i.e., demand nodes) in affected areas; U∪V=N, and U≠V. Each possible pair of relief station i∈V and URDC j∈U is connected by an arc (i, j)∈A that is associated with a positive (real or integer) number, tij, representing travel (or delivery) time between relief station i and URDC j. Although tijdenotes the travel time, it can also be used for other measures of utility/disutility, such as distance or travel cost. Each relief station i∈V faces relief demand ξiand is serviced by a single URDC. For a given set of predetermined candidate sites, U, the WVPC problem is to locate p (p<∣U∣) URDCs and assign relief stations to these centers, thereby minimizing maximum demand-weighted travel time between relief stations and URDCs. A mixed integer linear programming (MILP) formulation of the problem is as follows (e.g., Current et al., 2002).(1)(WVPC)Minimizez,(2)Subjecttoz⩾Σj∈Uξitijyij,∀i∈V,(3)Σj∈Uyij=1,∀i∈V,(4)yij-xj⩽0,∀i∈V,j∈U,(5)Σj∈Uxj=p,(6)xj∈{0,1},∀j∈U,(7)yij∈{0,1},∀i∈V,j∈U.The decision variables are binary variables xj, ∀j∈U and yij, ∀i∈V, j∈U. xj=1 if candidate site j is selected; otherwise, xj=0. Additionally, yij=1 if relief station i is serviced by URDC j; otherwise, yij=0. The objective function (1) minimizes maximum demand-weighted travel time between relief stations and URDCs. Constraint (2) defines the lower bound of maximum demand-weighted travel time, which is being minimized. Constraint (3) requires that each relief station be assigned to exactly one URDC. Constraint (4) restricts relief station assignments only to selected URDCs. Constraint (5) stipulates that p URDCs are to be located. Constraints (6) and (7) indicate that location and allocation decision variables are binary. The WVPC problem is also known as the minimum k-supplier problem (Ausiello et al., 1999).Uncertain relief demands at relief stations and travel times between relief stations and URDCs are described using intervals or ranges. Specifically, An interval [ξli, ξui], 0⩽ξli<ξui, represents uncertain relief demand at station i, and an interval [tlij, tuij], 0⩽tlij< tuij, captures the uncertainty of travel time between station i and URDC j. Let W be the Cartesian product of intervals [ξli, ξui], ∀i∈V, and [tlij, tuij], ∀i∈V, j∈U. A scenario w∈W represents a realization of relief demands at relief stations (i.e., ξi(w)∈[ξli, ξ ui], ∀i∈V, where ξi(w) denotes relief demand at station i in scenario w) and travel times (or distances or costs) between relief stations and URDCs (i.e., tij(w)∈[ tlij, tuij], ∀i∈V, j∈U).Letτ=(x,y), wherex={xj, j∈U} andy={yij, i∈V, j∈U}, be a feasible solution to the WVPC problem (i.e., satisfying Constraints (3)–(7), and let Ω be the set of feasible solutions. In this study,τ∈Ω is called a location plan of URDCs. For a planτand a relief station i∈V, this work defines travel time between i andτin scenario w as(8)d(w,i,τ)=Min{tij(w)|xj=1,∀j∈U}.For a planτand scenario w, the maximum demand-weighted travel time between planτand relief stations in scenario w, Z(w,τ), is determined as follows:(9)Z(w,τ)=Maxi∈Vξi(w)d(w,i,τ).Thus, for a given scenario w, the deterministic WVPC problem (1)–(7) can be written as(10)WVPC(w)=Minτ∈ΩZ(w,τ).This work defines the robust deviation of planτin scenario w, DEV(w,τ), as the difference between maximum demand-weighted travel time and that of the optimal plan,τ∗(w), in scenario w.(11)DEV(w,τ)=Z(w,τ)-Z(w,τ∗(w)).Robustness cost (i.e., regret in the worst-case scenario) of a planτcan be obtained by solving the following sub-problem:(12)RC(τ)=Maxw∈WDEV(w,τ).The RWVPC problem can be stated formally as(13)(RWVPC)Minimizeτ∈ΩRC(τ).This is equivalent to findingτrobust=argMinτ∈ΩRC(τ); that is, the RWVPC problem is to find a robust solutionτrobustthat minimizes the largest (worst-case) deviation of maximum demand-weighted travel time from the optimal solution.Because the (continuous) interval representation of uncertain demands and travel times may lead to an infinite number of possible scenarios, evaluation of robustness cost RC(τ), which involves identifying the worst-case scenario of planτ, is a major challenge of solving the RWVPC problem. To efficiently evaluate RC(τ), this work reformulates the sub-problem of RC(τ), defined in Eq. (12), according to Theorem 1 below, indicating that although uncertain relief demands and travel times are described using continuous intervals, the solution to the sub-problem, RC(τ), can be found in a finite subset of scenarios, each of which corresponds to an extreme case. This reformulation increases the tractability of the problem from a combinatorial perspective.Let wk(τ) be the scenario induced by planτand associated with relief station k, such that (i) demand of station k equals its upper bound (i.e., ξk=ξuk); (ii) demand of any other station i equals its lower bound (i.e., ξi=ξli, ∀i∈V, i≠k); (iii) travel time between station k and its associated URDC j∗ (i.e., k is serviced by j∗) equals its upper bound (i.e.,tkj∗=tukj∗, forykj∗=1); and (iv) travel time between any other pair of stations and URDCs equals its lower bound (i.e., tij=tlij, ∀(i, j)∈A, i≠k, j≠j∗). Suppose ϖ={ξi(ϖ), ∀i∈V; tij(ϖ), ∀(i, j)∈A} is the worst-case scenario of planτ; that is, ϖ is an optimal solution to sub-problem RC(τ). Let relief station k=argMaxi∈Vξi(ϖ)×d(ϖ, i,τ). Then, by definition, Z(ϖ,τ)=ξk(ϖ)d(ϖ, k,τ). Additionally, denote j∗ as the URDC servicing relief station k in planτand scenario ϖ (i.e.,ykj∗=1;d(ϖ,k,τ)=tkj∗(ϖ)). For simplicity, wkand wk(τ) are used interchangeably as follows.Lemma 1With the above definitions of scenarios wkand ϖ, for a planτ, RC(τ)=Z(ϖ,τ)−Z(ϖ,τ∗(ϖ))=Z(wk,τ)−Z(wk,τ∗(wk)), whereτ∗(ϖ) andτ∗(wk) are the optimal plans in scenarios ϖ and wk, respectively.Letτ∗(ϖ) be an optimal solution to the deterministic problem WVPC (ϖ) defined in Eq. (16), and (ϖ,τ∗(ϖ)) is an optimal solution to sub-problem RC(τ).Main claim: (wk,τ∗(ϖ)) is also an optimal solution to sub-problem RC(τ); this is equivalent to claiming that wkis also a worst-case scenario of planτ, andτ∗(ϖ) is also an optimal solution to WVPC (wk). Therefore,Z(wk,τ)-Z(wk,τ∗(wk))=Z(wk,τ)-Z(wk,τ∗(ϖ))=Z(ϖ,τ)-Z(ϖ,τ∗(ϖ))=RC(τ),which implies the statement of Lemma 1. The main claim is proved by transforming ϖ into wkvia the following two steps.Step 1:Replace ξk(ϖ) andtkj∗(ϖ)with upper bounds ξukandtukj∗, respectively.Prior to this transformation of ϖ, since (ϖ,τ∗(ϖ)) is an optimal solution to sub-problem RC(τ), Z(ϖ,τ) - Z(ϖ,τ∗(ϖ))⩾0. Therefore, d(ϖ, k,τ)⩾d(ϖ, k,τ∗(ϖ)). In the first transformation step, value Z(ϖ,τ∗(ϖ)) cannot increase by more than (ξuk−ξk(ϖ))×d(ϖ, k,τ∗(ϖ))⩽(ξuk−ξk(ϖ))×d(ϖ, k,τ). Moreover, in Step 1, the value of Z(ϖ,τ)−Z(ϖ,τ∗(ϖ)) cannot decrease because ξuk⩾ξk(ϖ) andtukj∗⩾tkj∗(ϖ), and cannot increase because (ϖ,τ∗(ϖ)) is an optimal solution to sub-problem RC(τ). Therefore, this value does not change in Step 1. We can conclude that the modification in Step 1 does not change the optimality of (ϖ,τ∗(ϖ)) to sub-problem RC(τ).Replace ξi(ϖ) with the lower bound ξ li, ∀i∈V, i≠k, and tij(ϖ) with the lower bound tlij, ∀(i, j)∈A, i≠k, j≠j∗.In Step 2, replacing ξi(ϖ) with ξli, ∀i∈V, i≠k, and tij(ϖ) with tlij, ∀(i, j)∈A, i≠k, j≠j∗ does not change the values of Z(ϖ,τ) and Z(ϖ,τ∗(ϖ)). Therefore, the modification in Step 2 also does not change the optimality of (ϖ,τ∗(ϖ)) to sub-problem RC(τ). Thus, the main claim is proven, as is Lemma 1.□Lemma 1 leads to the following theorem, which significantly simplifies the formulation of sub-problem RC(τ).Theorem 1For anyτ∈Ω,(14)RC(τ)=Maxi∈V{ξui×tuij∗-Z(wi,τ∗(wi))},where j∗ is the distribution center associated with station i in planτ.The theorem follows in a straightforward manner from the proof of Lemma 1.□Since the RWVPC problem is NP-hard, to obtain robust solutions with a reasonable amount of computational resources for problem instances with practical sizes, heuristics or meta-heuristics are typically adopted. Based on Theorem 1, the following local search-based algorithmic framework is proposed.Step 1:Initialization1.1.Generate randomly an initial solutionτ0; letτ=τ0.Evaluate the robustness cost ofτ, RCost(τ), based on Theorem 1.Local searchGenerate a new solution,τnew, from the neighborhood ofτ.Evaluate the robustness cost ofτnew, RCost(τnew), based on Theorem 1.Solution acceptance or rejectionIf the rules (or aspiration rules) of solution acceptance are adopted, then letτ=τnew.Otherwise, decline the new solution,τnew.Convergence checkIf convergence criteria are satisfied, stop.Otherwise, go to Step 2.In this framework, each candidate solution has more than one neighbor solution, and the choice of which neighbor solution to move is determined using only the information about the neighborhood of the current solution (i.e., local search). When no improvement mechanisms are designed for the neighborhood search, a local search may be stuck at local optima. This issue can be resolved by applying, for instance, restarts with different initial solutions or relatively more sophisticated schemes based on iterations (e.g., iterated greedy) or memory-less stochastic modifications (e.g., SA) in Step 3 of the proposed framework.This subsection presents a specific implementation of the proposed framework based on SA, which can escape from being trapped into a local optimum by accepting, with a small probability, worse solutions during iterations. Suman and Kumar (2006) comprehensively reviewed SA-based optimization algorithms. Let T0 be the initial temperature, TFthe final temperature, Itemaxthe maximum number of iterations between two different temperatures, Nummaxthe maximum number of temperature reductions, and β the temperature reduction ratio (0<β<1). The SA-based heuristic is presented as follows.Step 0:Input data and set parameters values T0, TF, Itemax, Nummax, and β;Initialization1.1.Randomly generate the initial solutionτ0;τ≔τ0;Initialize Temp≔T0, Ite≔0, Num≔0,τrobust≔τ, RCost(τrobust)≔RCost(τ);Generate a solutionτnew, and evaluate its robustness cost, RCost(τnew); Ite≔Ite+1;ΔE≔RCost(τnew)−RCost(τ); if ΔE⩽0, go to Step 3.1; otherwise, go to Step 3.2;Letτ≔τnew;Generate a random number rand∼U(0,1);If rand<(Temp/(Temp2+ΔE2)), thenτ≔τnew;If RCost(τ)<RCost(τrobust), thenτrobust≔τ, RCost(τrobust)≔RCost(τ), Num≔0;If Ite=Itemax, then Temp≔Temp×β, Ite≔0, Num≔Num+1;If Temp<TFor Num≔Nummax, then stop; otherwise, go to Step 2.Note that the SA-based heuristic is provided only as a specific implementation for the framework, presented in Section 3.1. Any other local search-based heuristic can be adopted in the proposed framework, such as iterated greedy. Moreover, while SA is not a new approach, this work demonstrates a successful application of SA (or meta-heuristics) to solve robust combinatorial optimization problems, which is rarely seen in existing literature.In Step 2 of the SA-based heuristic, a new solutionτnew is generated in each iteration from the neighborhood of the current solutionτ. This work defines two neighborhood types. The first is called the allocation neighborhood, and involves only changes in allocation decision variables (i.e., yij, i∈V, j∈U). Both location and allocation decision variables (i.e., xj, j∈U, and yij, i∈V, j∈U) change in the second type, called the location–allocation neighborhood. Specifically, the allocation neighborhood consists of feasible solutions obtained by randomly selecting two relief stations serviced by different URDCs in the current solution, and swapping their associated URDCs (Fig. 1a). The new solutions in the location–allocation neighborhood are generated by randomly choosing two URDCs and swapping their associated groups of relief stations. In this neighborhood type, at least one chosen URDC must be an open facility. Moreover, if only one chosen URDC is open, this swap is equivalent to moving a group of relief stations from an open facility to another facility that was closed but is now open after the swap (Fig. 1b).In each iteration of the SA-based heuristic, a new solutionτnew is generated from either the allocation (with probability p1) or location–allocation (with probability p2) neighborhood of current solutionτ. Selection between the two types of neighborhood is based on probabilities p1 and p2, and p1+p2=1.

@&#CONCLUSIONS@&#
