@&#MAIN-TITLE@&#
An improved database synchronization mechanism for mobile data using software-defined networking control

@&#HIGHLIGHTS@&#
SDN based batch level synchronization.Reduced response time.Live test results of obstacle and non-obstacle mode of 2 G and 3 G networks.IDBSync consumes fewer discharging units than the existing solutions.Vendor independency.

@&#KEYPHRASES@&#
Mobile database,SDN,Synchronization,Replication,IDBSync,Batch level processing,

@&#ABSTRACT@&#
Graphical abstractImage, graphical abstract

@&#INTRODUCTION@&#
In this new era of information technology, wireless mobile communication is undergoing rapid growth triggered by information explosion and technology revolution. The next-generation wireless systems are expected to support high data rates, and several small-sized mobile devices with high computing capabilities will dominate the market [1]. According to the Cisco VNI forecast, mobile phone traffic reached 885 petabytes in the year 2012 and is predicted to reach 11.2 exabytes by the end of the year 2017 [2]. Cellular M2M connections, which have already grown into a significant market in the past years, are expected to increase annually by more than 30% from 2015 [3]. Considering these facts, the current systems lack efficient data archiving capabilities, and the incentives for data sharing are weak and conventional, which underlines the need for proper data management. The emergence of SDN has created networks free from vertical integration of the control plane and data plane in the same device [4], and thus, a decision made on an independent control plane is forwarded to devices embedded with the data planes. One of the characteristics of mobile devices is asymmetry with respect to communication. The bandwidth from server to clients is much greater than the bandwidth from clients to server. Mobile devices have limited storage capabilities and rely on battery power, and therefore, processing should be optimized such that power consumption is minimized [5]. Hence, on the mobile-side, either much less processing should be performed or the processing should be optimized. Moreover, the mobile applications cannot access as much data as web-based applications. As a result, the mobile device is supported to download the required data alone from the server, and the downloaded data are stored with the local database of the mobile device [6]. The mobile device usually downloads data required from the server through a middleware synchronization server. The synchronization server is retained as middleware to reduce the load on the server-side, hence enabling the server to process requests from the clients at a faster pace [7,8]. The synchronization server performs the process of data synchronization to maintain the integrity of the data and also to mitigate conflicts and inconsistencies during access and modification of the data. Data synchronization refers to the concept of retaining multiple copies of data that are coherent with one another to maintain data integrity [9]. Several homogeneous solutions are available and have been implemented by commercial DBMS vendors. In other words, the commercial algorithms provide solutions for server and client DBMSs from the same vendor. The solution to this situation is to employ vendor-dependent techniques such as triggers, time stamps, etc. [9]. Because triggers or stored procedures might use different formats or parameters, this method could cause dependency on a specific vendor. Next-generation mobile technologies aim to offer data management solutions that are heterogeneous. An IDBSync mechanism has been proposed that is embedded in the control plane of a remotely located synchronization server and makes decisions to instruct the synchronization of data to the data plane of the client devices and database server. As such, a complete system setup is created to improvise data synchronization between mobile devices and the synchronization server. The existing solutions are less likely to be used for next-generation technologies, and the new solutions offered must be heterogeneous in nature.Organization of the paper: The remainder of the paper is organized as follows. Section 2 describes the related works in the area of research, Section 3 describes the framework of mobile data synchronization, Section 4 describes batch-level processing, Section 5 describes how the BaSyM table is used to group similar cases from the data planes to the control plane of the synchronization server, Section 6 explains the system implementation and performance analysis, and finally, Section 7 concludes the paper.

@&#CONCLUSIONS@&#
