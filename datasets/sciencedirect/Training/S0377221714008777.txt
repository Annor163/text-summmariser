@&#MAIN-TITLE@&#
Managing an assemble-to-order system with after sales market for components

@&#HIGHLIGHTS@&#
A single product n component assemble-to-order system is studied.The problem is formulated using a Markov decision process framework.The optimal production and inventory allocation policies are characterized.The optimal production and inventory allocation policies are state dependent.Simple heuristic policies are proposed and shown to be effective.

@&#KEYPHRASES@&#
Dynamic programming,Assemble-to-order,Production/inventory management,Markov decision process,Markov chains,

@&#ABSTRACT@&#
In this paper, we consider an assemble-to-order manufacturing system producing a single end product, assembled from n components, and serving an after sales market for individual components. Components are produced in a make-to-stock fashion, one unit at a time, on independent production facilities. Production times are exponentially distributed with finite production rates. The components are stocked ahead of demand and therefore incur a holding cost rate per unit. Demand for the end product as well as for the individual components occurs continuously over time according to independent Poisson streams. In order to characterize the optimal production and inventory rationing policies, we formulate such a problem using a Markov decision process framework. In particular, we show that the optimal component production policy is a state-dependent base-stock policy. We also show that the optimal component inventory rationing policy is a rationing policy with state-dependent rationing levels. Recognizing that such a policy is generally not only difficult to obtain numerically but also is difficult to implement in practice, we propose three heuristic policies that are easier to implement in practice. We show that two of these heuristics are highly efficient compared to the optimal policy. In particular, we show that one of the two heuristics strikes a balance between high efficiency and computational effort and thus can be used as an effective substitute of the optimal policy.

@&#INTRODUCTION@&#
Assemble-to-order (ATO) production is a common manufacturing practice used by many firms. It allows a firm to shorten its response time to its customers by stocking inventory of components ahead of demand while delaying the assembly of the end products until demand materializes. Such a practice is especially common for systems where component production lead-times are much significant compared to the assembly time of the end product. Examples of ATO systems include Dell with its online ordering segment as well as the build-to-order strategies of companies such as Toyota, General Motors and BMW, to cite a few. ATO strategies are also used in systems where demand is correlated across several products. Examples include retailers that sell bundled items, order fulfillment at e-retailers, and mail order catalogs.In this paper, we consider the optimal production and inventory allocation policy for an ATO system facing demand for its end product as well as its individual components. Several manufacturing systems operate under this setting such as white goods manufacturers who not only sell end products such as dish washers, ranges and refrigerators but also sell individual components as spare or repair parts to support their after sales market. According to Cohen et al. (2006), the after sales market is a significant revenue generator, especially in the auto manufacturing and white goods industries, averaging 45 percent of gross profits. As such, managing a system facing demand for both the end product and its individual components becomes an important task. In particular, a manager of such a system faces two types of decisions: components production decision and components inventory rationing or allocation decision. Specifically, a manager has to decide on the number of components to produce and when; and also has to decide how to allocate components inventory in order to satisfy the demand for both the end product and the individual components.The literature on ATO systems is quite extensive and can be broadly categorized into two classes: one deals with periodic review models while the other deals with continuous review models. In most of the literature within the periodic review class there was no attempt to characterize the optimal operating policy rather the focus was on the performance evaluation of fixed level base-stock policies; example of research papers within this class include Hausman, Lee, and Zhang (1998), De Kok and Visschers (1999), Cheng, Ettl, Lin, and Yao (2002), Zhang (1997), Agrawal and Cohen (2001), and Frank, Ahn, and Zhang (2004). Research within the continuous review literature class is also split into two classes: one class deals with pure inventory systems in which components lead-times are assumed to be exogenous and where the system is modeled as a set of queues with infinite servers and correlated arrivals; while the second class deals with systems where components lead-times are assumed to be load-dependent and the system is viewed as a set of finite capacity queues with correlated arrivals. These systems involve making decisions about both production and inventory levels of components. Papers within the continuous review category include the work of Song (1998), Song and Yao (2002), Gallien and Wein (2001), Glasserman and Wang (1998), Song, Xu, and Liu (1999), Dayanik, Song, and Xu (2003), Zhao (2009), Lu, Song, and Yao (2010) and the references therein. An extensive review of the ATO literature is provided by Song and Zipkin (2003, chap. 13).Our paper fits the literature on ATO systems within the continuous review category. However, in our case, we model our problem using an integrated production and inventory control framework and focus on characterizing the optimal policy. Papers dealing with optimal control of integrated production and inventory systems include Ha (1997a, 1997b) and De Véricourt, Karaesmen, and Dallery (2002). These papers dealt with a single product system with multiple demand classes with either the demand being lost if not fulfilled immediately or backordered. The work in this paper is close to the work of Song et al. (1999) who studied a multi-component multi-product integrated production and inventory system where components’ inventory is controlled via independent base stock levels, the work of Benjaafar and Elhafsi (2006) who studied a single-product ATO system with multiple demand classes, the work of Elhafsi (2009) who extended Benjaafar and Elhafsi (2006) to the case of compound demands, the work of Benjaafar, ElHafsi, Lee, and Zhou (2011) who studied a general assembly system, and the work of Ceryan, Duenyas, and Koren (2012) who studied a two-stage assembly system with intermediate components demand.In particular, we consider an ATO system producing a single end product subject to demand for both the end product and individual components. Any demand, whether for the end product or the individual components, that cannot be fulfilled immediately is backordered and satisfied later when stock is available. This assumption usually reflects systems where there are contractual agreements between the manufacturer and the retailer(s) where the demand has to be satisfied (by the manufacturer) sooner or later. Since the parts are exclusively used (after sale) to repair or replace defective components of the end product, customers have no choice but to obtain the parts from the same manufacturer. Hence, in case the manufacturer cannot satisfy the demand immediately, these customers have to wait until components are available again, leading to backordered demand. As we show in the paper, such ATO system involves a sophisticated and challenging mathematical formulation requiring a much larger number of properties that are needed to characterize the optimal policy compared to the relevant literature. Our main contributions, in this paper, consist of the following: because the optimality equation turns out to be very complex, we first show that the optimal value function satisfies a set of preliminary properties. Such properties allow a great simplification of the optimality equation resulting in a major improvement in the execution of the value iteration algorithms used to numerically obtain the optimal policy. A second set of properties is then used to fully characterize the optimal policy structure. The heuristics we propose in this paper, although in the same spirit as those in Benjaafar and Elhafsi (2006), are more sophisticated and efficient. In particular, we decompose the ATO problem into single-component problems that are easier to solve individually which we then link through a correction term to account for demand correlations. We do this by approximating the distribution of the backorder level of the end product in the original n-component system through the use of the distribution of the components inventory level in the single-component system. Such distributions are obtained using effective matrix geometric techniques. This methodology results in performances within 2 percent of the optimal cost, for two of the proposed heuristics, for a very large number of randomly generated problems.The rest of the paper is organized as follows. In Section 2, we formulate the problem using a Markov Decision Process (MDP) framework. In Section 3, we characterize the structure of the optimal Policy. In Section 4, we propose three heuristic policies and compare their performance against the optimal policy. We conclude the paper with future research directions in Section 5.We consider a system with similar characteristics as those in Song et al. (1999), Dayanik et al. (2003), and Benjaafar and Elhafsi (2006). Similar to these papers, we assume that demand forms a Poisson process, assembly is instantaneous, and components are produced on separate single-server production facilities with exponentially distributed production times. The assumption of instantaneous assembly is in part motivated by the fact that production or procurement leadtimes are much longer relative to the assembly time. For example, this is the case for Dellwhere electronic components take months to procure while order processing and assembly takes only few hours. We consider a system consisting of component production as well as final assembly of a single end product. Components are independently produced, in a make-to-stock fashion in anticipation of future demand, on separate production facilities one unit at a time. Production time of components is assumed exponentially distributed with rate μkunits per unit of time. Assembly time of the end product is assumed negligible compared to the production times of individual components. Similar to other papers that treat ATO systems, this assumption is a natural one as is typical for these systems to have very long component production or procurement lead times compared to the actual assembly time of the end product. The demand for the end product occurs continuously, over time, according to an independent Poisson stream with rate λ. In addition, the system is subject to demand for individual components which occur continuously, over time, according to independent Poisson streams with rate λkfor component k (k = 1, …, n). If demand cannot be satisfied immediately (whether it is for the end product or it is for a component), it is backordered. Completed units of Component k are either placed in stock or used to reduce backorders of Component k (if any) or assembled with other components (if available) to produce a unit of the end product to satisfy its backorder (if any). In this situation, the system manager is faced with two decisions: a production decision and an inventory allocation decision. The manager must decide when to produce Component k and when to idle its production facility if there is too much stock of the component in order to reduce the inventory carrying charge. On the other hand, the manager should produce Component k when the stock level is low to avoid large penalties due to backorders of either the end product or Component k or both. Also, when demand for Component k occurs, and if stock for Component k is available, the system manager must decide whether to satisfy it or backorder it in order to reserve inventory for the end product and avoid larger future backorder penalties of the latter. Hence, a problem of inventory rationing arises.Since it is conceivable that the system may not immediately satisfy a demand for a component in order to save stock for future demand of the end product, it is possible to have stock and backorder for a component at the same time. Hence, one needs to keep track of both inventory and backorder for all components. Since the end product is assembled instantaneously, we only need to keep track of its number of units that are backordered. Therefore, we define the state of the system by the 2n + 1 dimensional vector (X(t), Y(t), Z(t)), where X(t) = (X1(t), …, Xn(t)) and Y(t) = (Y1(t), …, Yn(t)). Here, Xk(t) and Yk(t) are non-negative integers denoting the inventory and backorder level, respectively, of Component k at time t. Z(t) denotes the backorder level of the end product. Hence, the state space, S, is the Cartesian product (Z+)2n + 1 where Z+ denotes the set of non-negative integers. Let hkdenote the per unit inventory holding cost rate of Component k. Let bkdenote the per unit backorder cost rate of Component k, and b the per unit backorder cost rate of the end product. To avoid trivial policies and for the problem to be meaningful, we assume bk≥ hk. Furthermore, in this paper, we focus on the caseb≥∑k=1nbk.This is usually the case since the added value of the end product is generally higher than the combined value of its components. Hence, the penalty associated with delayed delivery (backorder penalty) of the end product should be higher than the combined penalties associated with the individual components. Furthermore, in settings where the manufacturer has contractual agreements for the end product, such agreements usually stipulate a high penalty for delayed delivery of the end product compared to that of the combined penalties of the components.Under a given policy, π, and a starting state (x, y, z) = (x1, …, xn, y1, …, yn, z), the expected discounted cost over the infinite planning horizon can be written as:(1)vπ(x,y,z)=E(x,y,z)π[∫0∞(∑k=1n(hkXk(t)+bkYk(t))+bZ(t))e−αtdt∫0∞∑k=1n].Our objective is to determine the policy π* that minimizes, for each initial state (x, y, z), the expected discounted cost in (1). To this end, let v*(x, y, z) denote the optimal expected discounted cost corresponding to policy π*. Note that because both order inter-arrivals and production times are series of exponentially distributed random variables, the system has no memory and thus we can restrict our attention to only Markovian policies (such policies depend only on the current state of the system) and formulate the problem as a MDP. Hence, given any Markovian control policy π, the process (X(t), Y(t), Z(t)) is a continuous-time Markov chain. Using uniformization (see Lippman, 1975) and time scaling so thatα+λ+∑k=1nλk+∑k=1nμk=1,then we can transform the continuous-time MDP into an equivalent discrete-time one with the optimal value function, v*, satisfying the following optimality equation:(2)v*(x,y,z)=∑k=1n(hkxk+bkyk)+bz+λRv*(x,y,z)+∑k=1nλkRkv*(x,y,z)+∑k=1nμkPkv*(x,y,z),where Operators R, Rkand Pkare defined as follows.(3)Rv(x,y,z)={v(x,y,z+1)if∏ixi=0,min{v(x−e,y,z),v(x,y,z+1)}otherwise.(4)Rkv(x,y,z)={v(x,y+ek,z)ifxk=0,min{v(x−ek,y,z),v(x,y+ek,z)}otherwise.(5)Pkv(x,y,z)={min{v(x,y,z),v(x+ek,y,z)}ifyk=0,z=0,min{v(x,y,z),v(x+ek,y,z),v(x,y−ek,z)}ifyk>0,z=0,min{v(x,y,z),v(x+ek,y,z)}ifyk=0,z>0,∏i≠kxi=0,min{v(x,y,z),v(x+ek,y,z),v(x−e+ek,y,z−1)}ifyk=0,z>0,∏i≠kxi≠0,min{v(x,y,z),v(x+ek,y,z),v(x,y−ek,z)}ifyk>0,z>0,∏i≠kxi=0,min{v(x,y,z),v(x,y−ek,z),v(x−e+ek,y,z−1)}ifyk>0,z>0,∏i≠kxi≠0.Here, eiis an n-dimensional vector of zeroes with 1 in the ith entry ande=∑i=1nei.Operator R corresponds to the optimal rationing decision upon the arrival of an end product's demand: when all components are available in stock (∏i≠knxi>0), it is optimal to satisfy an incoming end product demand if the cost saving is positive (i.e., v(x, y, z + 1) − v(x − e, y, z) > 0). Operator Rkcorresponds to the optimal rationing decision upon the arrival of Component k’s demand: when Component k is available in stock, it is optimal to satisfy its demand if the cost saving is positive (i.e., v(x, y + ek, z) − (x − ek, y, z) > 0). Operator Pkcorresponds to optimal production decision of Component k: for instance, in the case when there are end product backorders (z > 0), there are Component k backorders (yk> 0), and all other components are available (∏i≠knxi>0), it is optimal to use a produced unit of Component k to assemble one unit of the end product and satisfy the end product's backorder if the cost saving is positive (i.e., v(x, y, z) − v(x − e + ek, y, z − 1) > 0) and greater than the cost saving resulting from using the produced Component k unit to satisfy its own backorder (i.e., v(x, y, z) − v(x − e + ek, y, z − 1) > v(x, y, z) − v(x, y − ek, z)). On the other hand, it is not optimal to produce Component k, if both cost savings are negative. The other cases can be interpreted in a similar fashion. Note that in this case, we ignored the decision to produce Component k to stock since the latter is not optimal. Indeed, increasing stock by one unit increases costs by hkwhile reducing the backorder of Component k by one unit reduces the cost by bk≥ hk. As will be shown below, it is optimal to always satisfy demand for the end product when all components are available. Hence, we do not consider the case where z · ∏kxk> 0, since in this case, we just reduce the backorder of the end product by min {x1, …, xn} which brings down, at least, one of the components’ stock to zero. As a result, and in order to simplify the analysis, we only consider states that satisfy the following condition throughout the rest of the paper.(6)z·∏kxk=0.Condition (6) states that if there is backorder of the end product then some of the components necessarily have a stock of zero. This reduces the number of states to consider when using the value iteration algorithm (see below) to obtain the optimal policy resulting in a much needed reduction in computational effort.Unfortunately, optimality Eq. (2) is impossibly intractable to solve analytically. In order to characterize the structure of the optimal policy, we adopt the methodology formalized by Porteus (1982) which consists in identifying a set of structural properties and then showing, by using an inductive argument, that these properties propagate through the optimization operator, T, defined as the right-hand-side of optimality Eq. (2).Before we characterize the structure of the optimal policy, we first define some preliminary properties of the optimal cost function that will allow us to simplify Operators R, Rkand Pk. This will not only make it easier to characterize the optimal production and inventory allocation policies, but also reduce the computational effort to obtain the optimal policy numerically.Definition 1LetUbe the set of real valued functions v, onS, satisfying the following set of properties:p1:v(x−e,y,z)−v(x,y,z+1)≤0, for∏ixi≠0;v(x,y−ei,z)−v(x,y,z)≤0, foryi>0,i=1,…,n;v(x−e+ei,y,z−1)−v(x,y,z)≤0, foryi=0,z>0,∏j≠ixj≠0,i=1,…,n;v(x−e+ei,y,z−1)−v(x+ei,y,z)≤0, foryi=0,z>0,∏j≠ixj≠0,i=1,…,n;v(x−e+ei,y,z−1)−v(x,y−ei,z)≤0, foryi>0,z>0,∏j≠ixj≠0,i=1,…,n;v(x,y+ei,z)−v(x,y,z)≥0,i=1,…,n.Ifv∈U, thenRv∈U,Rkv∈U,Pkv∈U,k=1,…,nandTv∈U.The proof of Lemma 1 and all subsequent proofs are provided in Appendix. In light of properties p1–p6, OperatorsR,RkandPkcan now be simplified as follows.(7)Rv(x,y,z)={v(x,y,z+1)if∏ixi=0,v(x−e,y,z)otherwise.(8)Rkv(x,y,z)={v(x,y+ek,z)ifxk=0,min{v(x−ek,y,z),v(x,y+ek,z)}otherwise.(9)Pkv(x,y,z)={min{v(x,y,z),v(x+ek,y,z)}ifyk=0andz∏i≠kxi=0,min{v(x+ek,y,z),v(x,y−ek,z)}ifyk>0andz∏i≠kxi=0,v(x−e+ek,y,z−1)ifz∏i≠kxi≠0.In order to simplify the notation, we introduce the following difference operators.Δxiv(x,y,z)=v(x+ei,y,z)−v(x,y,z);Δyiv(x,y,z)=v(x,y+ei,z)−v(x,y,z);Δxi+xjv(x,y,z)=v(x+ei+ej,y,z)−v(x,y,z);Δyi+yjv(x,y,z)=v(x,y+ei+ej,z)−v(x,y,z);Δxi+yjv(x,y,z)=v(x+ei,y+ej,z)−v(x,y,z);Definition 2 below provides an additional set of properties that we show the optimal value function satisfies. These conditions will allow us to infer the structure of the optimal policy in terms of component production and inventory allocation upon the arrival of a demand of a particular component since as we show through property p1, the end product demand can never be backordered if there are components to assemble the end product upon arrival.Definition 2LetVbe the set of real valued functionsv∈U, onS, satisfying the following set of properties:A1:Δxiv(x+ei,y,z)−Δxiv(x,y,z)≥0;Δxiv(x+ej,y,z)−Δxiv(x,y,z)≤0,i≠j;Δxiv(x+e,y,z)−Δxiv(x,y,z)≥0;Δyiv(x,y+ei,z)−Δyiv(x,y,z)≥0;Δyiv(x,y+ej,z)−Δyiv(x,y,z)≤0,i≠j;Δyiv(x,y+e,z)−Δyiv(x,y,z)≥0;Δxiv(x,y+ei,z)−Δxiv(x,y,z)=Δyiv(x+ei,y,z)−Δyiv(x,y,z)≤0;Δxiv(x,y+ej,z)−Δxiv(x,y,z)=Δyjv(x+ei,y,z)−Δyjv(x,y,z)≥0,i≠j;Δxiv(x,y+e,z)−Δxiv(x,y,z)≤0,Δyiv(x+e,y,z)−Δyiv(x,y,z)≤0,Δxi+yiv(x+ei,y,z)−Δxi+yiv(x,y,z)=Δxiv(x+ei,y+ei,z)−Δxiv(x,y,z)≥0;Δxi+yiv(x,y+ei,z)−Δxi+yiv(x,y,z)=Δyiv(x+ei,y+ei,z)−Δyiv(x,y,z)≥0;Δxi+yiv(x+ej,y,z)−Δxi+yiv(x,y,z)=Δxjv(x+ei,y+ei,z)−Δxjv(x,y,z)≤0,i≠j;Δxi+yiv(x,y+ej,z)−Δxi+yiv(x,y,z)=Δyjv(x+ei,y+ei,z)−Δyjv(x,y,z)≥0,i≠j;Δxi+yiv(x+e,y,z)−Δxi+yiv(x,y,z)≥0;Δxi+yiv(x,y+e,z)−Δxi+yiv(x,y,z)≥0;Δxi+yiv(x+ej,y+ej,z)−Δxi+yiv(x,y,z)=Δxj+yjv(x+ei,y+ei,z)−Δxj+yjv(x,y,z)≤0.Properties A1, A2, and A3 indicate that the cost differenceΔxiv(x,y,z)is non-decreasing in the inventory levelxi, non-increasing in the inventory levelxjand non-decreasing with joint one unit increase of the inventory level of all components, respectively. Practically, Property A1 indicates that the optimal policy follows a law of diminishing return when inventory of a component is increased. In other words, the benefit of increasing the inventory level of Component i decreases as the number of units of Component i that are already in stock increases. Mathematically, A1 indicates that the value function v is component-wise convex in xi. Property A2 indicates that the value function v is submodular in the direction(xi,xj).Practically, Property A2 indicates that the benefit of increasing the inventory level of a particular component increases as the number of units in inventory of other components increases. This is so because, ultimately, the end product requires one unit from each component. Thus it would not be optimal to build a large stock for certain components while keeping other components’ stock low, resulting in an increase in the inventory charge for certain components while increasing the backorder charge for the end product due to the low stock of other components. Property A3 indicates that the benefit of increasing the inventory level of Component i decreases as we increase the inventory level of all other component simultaneously. The practical interpretation of Property A3 is similar to that of A1 since increasing the inventory level of all components results in increasing the inventory level of Component i as well. Properties B1–B3 have the same interpretation but with respect to the component's backorder level. Property C1 (C2) indicates that the cost differenceΔxiv(x,y,z)(Δyiv(x,y,z)) is non-increasing in the backorder levelyi(non-decreasing in the inventory levelxi). Practically, Property C2 indicates that the benefit of increasing the inventory level of Component i increases as the number of Component i backorders increases. Property C2 can be interpreted the same way as property C1 by inverting the roles of inventory and backorder. Property C3 (C4) indicates that the cost differenceΔxiv(x,y,z)(Δyiv(x,y,z)) is non-increasing with joint one unit increase of the backorder level of all components (is non-increasing with joint one unit increase of the inventory level of all components), respectively. Properties D1 and D2 indicate that the cost differencesΔxiv(x,y,z)andΔyiv(x,y,z)are non-decreasing with joint unit increase of both inventory and backorder level of component i. Property D3 indicates that the cost differenceΔxjv(x,y,z)is non-increasing with joint unit increase of both inventory and backorder level of component i. Property D4 indicates that the cost differenceΔyjv(x,y,z)is non-decreasing with joint unit increase of both inventory and backorder level of component i. In an effort to give a physical interpretation of properties D5–D7, one should think of the quantityxi+yias the combined inventory and backorder levels of Component i. As such, properties D5–D7 indicate that the cost differenceΔxi+yiv(x,y,z)is non-decreasing with joint one unit increase of the inventory level of all components, non-decreasing with joint one unit increase of the backorder level of all components and non-increasing with a joint one unit increase of both the inventory and backorder level of all components, respectively.The following lemma states that if the value function v satisfies the properties of Definition 2, so does Operator T.Lemma 2Ifv∈V, thenRv∈V,Rkv∈V,Pkv∈V,k=1,…,nandTv∈V.In order to simplify the exposition of the optimal policy, we define the following thresholds.(10)sk(x˜k,y,z)=min{xk|v(x+ek,y,z)−v(x,y,z)≥0},foryk=0,∏i≠kxi=0,andk=1,…,n;(11)rk(x˜k,y,z)=min{xk>0|v(x,y+ek,z)−v(x−ek,y,z)≥0},fork=1,…,n;(12)wk(x˜k,y,z)=min{xk|v(x+ek,y,z)−v(x,y−ek,z)≥0},foryk>0,∏i≠kxi=0,andk=1,…,n.Here,x˜k=(x1,…,xk−1,xk+1,…,xn)denotes the (n − 1)-dimensional vector whose elements are the stock levels of all components except that of Component k. Using the above thresholds, when there is no backorder of Component k and the inventory level of at least one the other components is zero, it is optimal to produce Component k whenxk<sk(x˜k,y,z), and not to produce it otherwise. When there is stock of Component k, it is optimal to satisfy a demand for Component k ifxk≥rk(x˜k,y,z)and to backorder it otherwise. Finally, when there is backorder of Component k and the inventory level of at least one of the other components is zero, it is optimal to produce Component k and use the unit to satisfy its backorder whenxk>wk(x˜k,y,z), otherwise produce Component k and keep the produced unit in stock.At this stage, using Lemmas 1 and 2, we have shown that the optimal value function is an element of the setV, thus it satisfies all the properties defined in Definitions 1 and 2. These properties allow us to infer the structure of the optimal policy. For example, property A1 indicates that the differenceΔxkv(x,y,z)is non-decreasing in the state variable xk. This indicates that there exists a unique threshold,sk(x˜k,y,z), below which we produce Component k (since in this casev(x+ek,y,z)≤v(x,y,z)) and above which we do not produce the component (since in this casev(x+ek,y,z)>v(x,y,z)). The following theorem summarizes the optimal operating policy. The proof of the theorem indicates how the properties of Definitions 1 and 2 are used in order to infer the structure of the optimal operating policy.Theorem 1The optimal policy is stationary and is characterized as follows:(a)For any state(x,y,z),wk(x˜k,y,z)=rk(x˜k,y−ek,z),foryk>0,∏i≠kxi=0,andk=1,…,n.Inventory rationing:1.It is always optimal to satisfy the demand of the end product as long as stock for all components is available.It is optimal to satisfy the demand for Component k whenxk≥rk(x˜k,y,z)and to backorder it otherwise.Production:1.Ifyk=0andz·∏i≠kxi=0,then produce Component k to stock ifxk<sk(x˜k,y,z)and not produce it, otherwise.Ifyk>0andz·∏i≠kxi=0,then produce Component k to stock ifxk<rk(x˜k,y−ek,z)and produce Component k to satisfy its backorder, otherwise.Ifz·∏i≠kxi>0,then produce Component k and use the produced unit to assemble one unit of the end product in order to satisfy its backorder.Furthermore, the optimal threshold levels satisfy the following properties.(i)sk(x˜k,y,z)is non-decreasing in the inventory levelxj,non-decreasing in the backorder levelyk,and non-increasing in the backorder levelyjforj≠k.rk(x˜k,y,z)is non-decreasing in the inventory levelxj,non-increasing in the backorder levelyk,and non-increasing in the backorder levelyjforj≠k.Part (a) of Theorem 1 states that when there is backorder of Component k and at least one of the other components is not available, both the production and rationing decisions are determined by the switching curve rk. This is not surprising because the production decision is essentially a rationing decision as far as backordering Component k demand is concerned. The trade-off is the cost saving resulting from reserving inventory for future demands of the end product (with higher priority) versus the saving by immediately satisfying a demand for Component k (with lower priority). In the caseyk=0andz·∏i≠kxi=0,the optimal production policy is in fact a state dependent base-stock policy since production is stopped when inventory is brought up to the base-stock levelsk(x˜k,y,z). In the casez·∏i≠kxi>0,priority is always given to the end product. When there are Component k backorders andz·∏i≠kxi=0,produced units are reserved in anticipation of future end product demand and Component k backorders are satisfied only when the stock level, xk, has been brought up to the rationing levelrk(x˜k,y,z). Part (i) indicates that the desirability to produce Component k increases when there are more units or less backorder of other components, or more backorder of Component k. Part (ii) indicates that when there are more backorders of Component k, we reserve less Component k inventory and when there are more units in stock or more backorders of the other components, we reserve more Component k inventory.Part (ii) of Theorem 1 reveals an interesting result. It states that as the inventory level of other components increases, the rationing level for Component k does not decease. This means that the more inventory of other components, the less desirability to satisfy demand from Component k. At first, this seems counter intuitive, but by Theorem 1, (i) we see that increases of inventory of other components increase the desirability to stock more of a particular component because ultimately a unit of each component is used to satisfy demand of the end product which is more expensive in terms of backorder cost. As such, both the base stock and rationing levels behave in the same way with respect to stock of other components. This result is unique to ATO systems with individual component demands and has not been observed for systems without components demands.We now focus on the average cost criterion and show that the structural characteristics of the optimal policy described for the discounted cost in Theorem 1 carry over to the average cost case. The advantage of using the average cost criterion is two-fold: first, the value iteration algorithm (Puterman, 1994) that is used to obtain the optimal policy numerically converges much faster, by comparison to the discounted cost criterion. Second, the average cost is independent of the initial state of the system and does not require a discount factor for convergence. Given a policyπ, the average cost rate is given by:(13)uπ(x,y,z)=limT→∞sup1TE(x,y,z)π×[∫0∞(∑k=1n(hkXk(t)+bkYk(t))+bZ(t))e−αtdt].A policyπ*that yieldsu*(x,y,z)=infπuπ(x,y,z)for(x,y,z)∈Sis said to be optimal for the average cost criterion. As such, we can show (see Ross, 1970) that the optimal average cost rate,γ*,and the optimal relative cost function,u*(x,y,z), satisfy the following optimality equation(14)u*(x,y,z)=−γ*+∑k=1n(hkxk+bkyk)+bz+λRu*(x,y,z)+∑k=1n(λkRku*(x,y,z)+μkPku*(x,y,z))where Operators R, Rkand Pkare as defined in (3), (4), and (5), respectively. In the following theorem, we show that, under the average cost rate criterion, the optimal policy retains all the structural properties exhibited under the discounted cost criterion as described in Theorem 1.Theorem 2Under the average cost rate criterion, the optimal policy retains all the structural properties of the optimal policy exhibited under the discounted cost criterion. Specifically, the optimal policy is characterized by two switching curves,sk(x˜k,y,z)andrk(x˜k,y,z)where component and end product inventory allocation and production are governed as described inTheorem 1, (b) and (c). Furthermore, Part (a) ofTheorem 1holds under the average cost criterion, as well.All our subsequent numerical experiments are obtained by solving the corresponding average cost rate dynamic programming equation using the value iteration algorithm (see Puterman, 1994, chap. 8). The state space, in this case, is truncated to a finite state space[0,M1]×⋯×[0,Mn]×[0,N1]×⋯×[0,Nn]×[0,L], whereMk,Nk,k=1,…,n,and L are positive integers that are gradually increased until the average cost rate is no longer sensitive to the truncation level. The value iteration algorithm is terminated once five-digit accuracy is obtained. For each state, the resulting relative value indicates the optimal control action to take in that state. Because the computational effort grows exponentially in the dimensions of the state space, solving problems with more than two components is relatively difficult. A further discussion of computational complexity and convergence of the value iteration algorithm is provided in Puterman (1994). Hence, in order to illustrate the optimal policy described in Theorem 1, we use a two-component system with the following system parameters: μ1 = 1, μ2 = 1, λ = 0.50, λ1 = 0.35, λ2 = 0.35, b1 = 5, b2 = 5, b = 25, h1 = 1, h2 = 1. Figs. 1, 2, and 3illustrate the optimal policy for Component 1 (in order not to clatter the figures) for a given triplet(y1,y2,z). The same results hold for component 2 as the system is symmetric. Fig. 4illustrates the optimal policy for both components. We note that for a two-component system, the optimal threshold levels are defined by switching hyper surfaces in five dimensions. The lines shown in Figs. 1, 2 and 4 are the result of a projection of the switching hyper surfaces on the two-dimensional subspace spanned by(x1,x2). The lines shown in Fig. 3 are the result of a projection of the switching hyper surfaces on the two-dimensional subspace spanned by(x1,y1). Here, we are abusing the notation by using the same notation used for the switching curves sk(⋅), rk(⋅), and wk(⋅) and their projection onto the two-dimensional space.Fig. 1 shows the case when there are no backorders in the system (i.e., states (x1, x2, 0, 0, 0)). In this case, it is optimal to produce Component 1 as long as its inventory is below the optimal threshold level s1(x2, 0, 0, 0). On the other hand, when a demand for Component 1 arrives, it is optimal to satisfy it only when the inventory of Component 1 is greater that the optimal threshold level r1(x2, 0, 0, 0). Otherwise, this demand is backordered. We note here, that any demand for the end product is satisfied as long as both components are available. Fig. 2 illustrates the case where there are backorders for both components and no backorders for the end product (i.e., states (x1, x2, 10, 10, 0)). Since in this case, the production decision is equivalent to a rationing one (see part a of Theorem 1), we show both switching curves w1(x2, 10, 10, 0) and r1(x2, 10, 10, 0). The optimal policy, in this case, states that it is optimal to produce Component 1 to satisfy its backorder only when the inventory of Component 1 has been built up to the threshold level r1(x2, 9, 10, 0). Otherwise, Component 1 is produced to stock. Note that because there are more backorders of Component 1, in this case, less inventory is reserved for future demands of the end product (by comparing r1(⋅) in Figs. 1 and 2) as stated in Theorem 1. Fig. 3 illustrates Component 1 optimal policy in the (x1, y1) plane for the case when x2 = 6, y2 = 6 and z = 0. Note that when y1 is zero, the optimal action is to produce Component 1, to stock, up to the level s1(6, y1, 6, 0) = 11. Fig. 4 depicts the optimal policy in the presence of backorders of both components and of the end product as well. Note in this case, because of Condition (6), the relevant regions are(0,x1)and(0,x2)only.As we can see, the optimal policy, as illustrated in Theorem 1, is complex. For each component, a manager must make not only a production decision but also an inventory rationing decision in order to decide whether to produce the component to satisfy its backorder if any or store the produced unit for future demand of the end product. Similarly, when a demand for a component materializes, the manager must decide whether to fulfill this demand or backorder it keeping the unit in stock to hedge against future demand of the end product. As shown in Theorem 1, these decisions are characterized by state dependent threshold levels. The fact that the number of states increases exponentially with the number of components makes it prohibitive to compute the optimal policy in a reasonable amount of time for practical purposes. In the next section we propose three heuristic policies and compare their performance to the optimal policy. These heuristics have the advantage of being much simpler to implement in practice and much faster to compute compared to the optimal policy.We propose three heuristic policies that emanate from the same class. Namely, we ignore the state dependency of the threshold levels and control production and inventory rationing through fixed levelss=(s1,…,sn)andr=(r1,…,rn),respectively. The distinguishing feature among the three heuristics resides in the method their fixed thresholds, s and r, are obtained. Once these thresholds are determined, the average cost rate for the corresponding heuristic, for an n-component system, can be obtained via the following dynamic programming equation:(15)vH(x,y,z)=−γH+∑k=1n(hkxk+bkyk)+bz+λRvH(x,y,z)+∑k=1n(λkRkHvH(x,y,z)+μkPkHvH(x,y,z))where Operator R is as defined in (7) and OperatorsRkHandRkHare defined as follows(16)RkHv(x,y,z)={v(x−ek,y,z)ifxk≥rk,v(x,y+ek,z)otherwise.(17)PkHv(x,y,z)={v(x+ek,y,z)ifxk<sk,yk=0,andz∏i≠kxi=0,v(x,y,z)ifxk=sk,yk=0,andz∏i≠kxi=0,v(x+ek,y,z)ifxk<rk,yk>0,andz∏i≠kxi=0,v(x,y−ek,z)ifxk≥rk,yk>0,andz∏i≠kxi=0,v(x−e+ek,y,z−1)otherwise.Heuristic H1: Here, the base stock vectorsH1and the rationing vectorrH1are determined by decomposing the original n-component problem into n single-component problems. In this case, the problem is equivalent to a single-product two-demand class system where the higher priority class corresponds to the demand of the assembled product while the lower priority class corresponds to the demand of the component. Such a system has been studied by de Vericourt et al. (2002) who analytically derive the average cost of such a system. Adapting the expression to our notation, the average cost of the single-product two-component system is given by(18)γk*(rk,sk)=hk(sk−ηk(1−ηksk−rk)1−ηk−ρk(1−ρkrk)ηksk−rk1−ρk)+bk(ηk1−ηk−ρk1−ρk)ηksk−rk+bρkrk+1ηsk−rk1−ρk,whereρk=λ/μkandηk=ρk+λk/μk. Here, the first term represents the expected holding cost of component k, the second term represents the expected backorder cost of component k, and the third term represents the expected backorder cost of the end product in the single-product two-demand class system. It is important to note that the single-component system ignores the correlation among the demands of the different components. Hence, the third term in (18) is a poor estimate of the end product's backorder cost. To correct for this deficiency and in order to have a better estimate of the expected backorder cost of the end product in the original n-component system, we use the maximum expected backorder cost of the end product of the n single-component system instead. Therefore,sH1andrH1can be determined by minimizing the following average cost rate which represents an estimate of the average cost rate of the original n-component system.(19)γH1(rH1,sH1)=∑k=1n[(sk−ηk(1−ηksk−rk)1−ηk−ρk(1−ρkrk)ηksk−rk1−ρk)hk+(ηk1−ηk−ρk1−ρk)ηksk−rkbk]+bmaxk{ρkrk+1ηksk−rk1−ρk}.Once rH1 and sH1 are obtained, they are used in (15) to obtain the average cost rate of the original n-component system under H1.Heuristic H2: H2 is similar to H1 except, in this case, we explicitly determine the steady state distribution of the inventory level of the component in the single-component system and use it to artificially reintroduce correlation among the different component demands in the original n-component system which will allow us to better estimate the expected backorder level of the end product in the original n-component system. In this case, we expect (compared to H1) this estimate to be more accurate as it takes advantage of the distribution of the inventory of components in the single-component system rather than use expectations as in expression (18).Let(IOk(t),Jk(t))represent the state of the system in the single-component problem whereIOk(t)represents the number of units of Component k that are on order (i.e., ordered but not yet received) andJk(t)represents the number of Component k backorders. We note that(IOk(t),Jk(t))is a continuous time two-dimensional Markov chain with infinite state space. In particular, given thresholdsskandrk, state(i,j)enters state(i′,j′)with a transition rateη(i,j)given as followsη(i,j)={λ+λkifi<sk−rk,i′=i+1,andj′=j=0,λifi≥sk−rk,i′=i+1,andj′=j,λkifi≥sk−rk,i′=i,andj′=j+1,μk{if0<i≤sk−rk,i′=i−1,andj′=j=0,ifi=sk−rk,i′=i,andj′=j−1,ifi>sk−rk,i′=i−1,andj′=j.0otherwise.LetPk={pk(i,j)}represent the joint steady state probability distribution of the process(IOk(t),Jk(t)). It is not difficult to check that the two-dimensional Markov chain is irreducible, thusPkexists and is unique. In order to computePk,we first notice that states (i, 0),0≤i<sk−rk,follow a birth death process with birth rateΛk=λ+λkand death rateμk. Hence, forl=1,…,sk−rk,we havepk(sk−rk−l,0)=pk(sk−rk,0)/ηkl.In order to compute the remaining steady state probabilities ((i, j) such thati≥sk−rkandj≥0), we first truncate the infinite space[sk−rk,∞)×[0,∞)to the finite space[sk−rk,sk−rk+N1]×[0,N2]whereN1andN2are positive integers that are gradually increased until the steady state probability distribution is no longer sensitive to the truncation level. We then arrange the space[sk−rk,sk−rk+N1]×[0,N2]in the lexicographic order(I0,I1,…,IN1)whereIlis a vector of dimensionN2+1corresponding to states with backorder level equal to l. Since transitions result in an increase or decrease of the state by at most one, the resulting Markov chain represents a quasi-birth-death process (see Neuts, 1981). In this case, the corresponding infinitesimal generator matrix is a block tri-diagonal matrix,Q^,given as followsQ^=[L^λI00…0μkILλI0…00μkILλI…0⋱⋱⋱⋮⋮⋱⋱⋱⋮00……μkILλI00……0μkIL˜],where I is the identity matrix of orderN2+1andL^,L, andL˜are square matrices of orderN2+1given as followL^=[−Λkλk00…0μk−μk−Λkλk0…00μk−μk−Λkλk…0⋱⋱⋮⋮⋱⋱⋮⋮00…μk−μk−Λkλk00…0μk−μk−λk],L=[−μk−Λkλk00…00−μk−Λkλk0…000−μk−Λkλk…0⋱⋱⋮⋮⋱⋱⋮⋮00…0−μk−Λkλk00…00−μk−λk],andL˜is identical to L except for entry(N2+1,N2+1)whereL˜(N2+1,N2+1)=−μk.LetP^k=[P^0k,…,P^N2k]be a row vector of order(N2+1)×(N1+1). Following Hamouda and Molle (2007), the steady state balance equations (i.e.,P^kQ^=0) can be expressed as followsP^0kL^+μkP^1k=0,λkP^i−1k+P^ikL+μkP^i+1k=0,i=1,…,N1−1.λkP^N1−1k+P^N1kL˜=0.which leads to the recursive relationshipsP^ik=P^i−1kMi,i=N1−1,…,1.whereMi=−λk(L+μkMi+1)−1,i=N1−1,…,1,andMN1=−λkL˜−1.As a result,P^0ksatisfiesP^0k(L^+μkM1)=0.Taking into account states (i, 0),0≤i<sk−rk,the normalizing condition can then be written asP^0k∑i=1N2M^ie+(1−ηksk−rk)(1−ηk)e0=1,wheree=(1,…,1)Tande0=(1,0,…,0)Tare two column vectors of orderN2+1.OnceP^0kis obtained,P^ikcan be obtained usingP^ik=P^0kM^i,whereM^i=∏l=0iMi,andM0=I.Then, Pk can be obtained by simple row transformation ofP^kand adding the steady state probabilities corresponding to states (i, 0),0≤i<sk−rk.Using the marginal steady state distribution ofIOkandJk, the backorder level of the end product is given byZ=maxk{(IOk−sk)+},the inventory level of Component k is given byIk=(sk−IOk)+,and the backorder level of Component k is given byJk. Lettingfkandgkrepresent the steady state marginal distributions ofIOkandJk, respectively, we then havePr{Z≤l}=∏k=1nPr{IOk≤sk+l}=∏k=1n∑i=0sk+lfik,l≥0.andPr{Ik=l}=Pr{(sk−IOk)+=l}={fsk−lkif0≤l≤sk,0otherwise.l=0,…,sk.Hence, the fixed thresholds,sH2andrH2,are determined by minimizing the following average cost rate.(20)γH2(rH2,sH2)=∑k=1n[hkE(Ik)+bkE(Jk)]+bE(Z)=∑k=1n[hk∑l=0sklflk+bk∑l=0∞lglk]+b∑l=1∞(1−∏k=1n∑i=0sk+l−1fik).Here, the first term represents the average holding and backorder costs of component k and the second term represents the average backorder cost of the end product.Once rH2 and sH2 are obtained, they are used in (15) to obtain the average cost rate of the original n-component system under H2.Heuristic H3: Under this heuristic, the base stock vectorsH3and the rationing vectorrH3are determined via an exhaustive search on the spaces[0,s1max]×⋯×[0,snmax]and[0,r1max]×⋯×[0,rnmax], respectively wheresimaxandrimaxare suitably chosen as noted below. Although for a large number of components H3 becomes prohibitive, because of the combinatorial nature of the search, we propose it for two reasons: First, because it does not decompose the original n-component problem and thus preserves the correlation among component demands resulting in better performance than that of H1 and H2. As a matter of fact, H3 outperforms all heuristics in the class of heuristics using fixed threshold levels r and s. Second, as we show below, the intensive computational effort required by H3 does not justify its use as it does not offer much improvement over H2 (which is much faster computationally), thus highlighting the advantage of using H2 over H3.In order to evaluate the performance of the three heuristics, we compare the average cost rate obtained from the optimal policy to that obtained from the heuristic policies. Tables 1and 2show the results for a two-component system. For these problems, we show the percentage average cost rate for Heuristics H1, H2, and H3. To better understand the influence of the system parameters on the performance of the heuristics, we analyze two systems: a symmetric and a non-symmetric system. Table 1 represents a symmetric system with respect to holding cost, backorder cost, demand rate, and production rate parameters. In order to test the performance of the heuristics, we vary the inventory holding cost, the component and end product demand rates, and the utilization of component production (ρkdefined above for Component k). To simplify the analysis, we assume that the backorder cost rate is five times the inventory holding cost rate for all components. Furthermore, we vary the individual components demand rates to reflect two cases: The case where the sales of the individual components represent a significant portion of the market relative to that of the end product and the case where most of the sales are for the end product and therefore sales of the individual components are non-significant. Finally, in order to reflect the value of the end product compared to that of the components, we evaluate the heuristics with the end product's backorder cost rate equal to 1.1, 1.5, 2.0, and 2.5 the sum of the individual components backorder rates.Table 2 shows the results for a non-symmetric system. The problems are constructed in a similar fashion as those presented in Table 1. Problem 1 represents the base case with parameters: h1 = 1, h2 = 3, λ1 = 0.5, λ2 = 0.4, λ = 0.8, ρ1 = 0.8, and ρ2 = 0.8, and b = 25. Each of the problems in Table 2 differs from the base case problem by varying one parameter value between two extreme values. Tables 1 and 2 show the Relative Percentage Difference (RPD) between the average cost of the heuristic and that of the optimal policy which is calculated as followsRelativePercentageDifference=100×(γH−γ*)γ*.As show in Table 1, for the symmetric system, the average RPD is 6.05 percent for Heuristic H1, 1.32 percent for Heuristic H2, and 1.29 percent for Heuristic H3 with a maximum RPD of 32.34 percent, 2.95 percent, and 2.95 percent for Heuristics H1, H2 and H3, respectively. As expected, H3 outperforms H2 which in turn outperforms H1. However, the improvement brought about H3 does not justify its use by comparison to the performance of H2. In fact, we observe that in most problem instances, H2 and H3 are identical in performance. Recall that H1 and H2 are basically the same except that H2 uses the explicit distribution of the expected backorder of the end product while H1 uses only the first moments (the maximum of the expected backorder of the end product of the single-component systems) as an approximation. In this case, it seems that the joint distribution of the components inventory levels and the backorder level of the end product could be used as an approximation of the optimal joint distribution, and hence could be used to calculate other performance measures such as the fill rate for instance. Clearly Heuristic H1 can exhibit poor performance as shown by the maximum RPD. This is expected since, as explained above, the heuristic does not take into account the correlation (with respect to inventory and backorder levels) among the components. We also note that, in general, the performance of the three heuristics improves as b increases especially for systems where the end product demand is higher than that of the components. The performance of the three heuristics also improves as the component production utilization increases. This suggests that for highly utilized systems, the optimal base stock and rationing levels are close to being state independent since the system is most of the time busy producing each component and hence “does not need” to coordinate component production with the inventory level of other components. For the non-symmetric system, Table 2 shows similar results with an average RPD of 9.36 percent for H1, 0.89 percent for H2, and 0.79 percent for H3.Before we close this section, it is worth mentioning that because of the required computational effort, we found the following computational strategy very effective. First, we run Heuristic H1 (since it is the fastest) and obtain the optimal parameters sH1 and rH1. To find the optimal parameters sH2 and rH2 using heuristic H2, we perform a local search to determinesiH2,andriH2,i=1,…,nin the intervals[siH1−ai,siH1+ai]and[riH1−bi,riH1+bi],respectively, whereaiandbican be chosen as small integers (our experiments showed that a value as low as three for aiand biwas sufficient to obtain the optimal threshold levels sH2 and rH2). Once sH2 and rH2 are obtained, we search forsiH3andriH3,i=1,…,nin the intervals[siH2−ci,siH2+ci]and[riH2−di,riH2+di],respectively, wherecianddiare chosen as small integers (our experiments showed that a value as low as two for diand ciwas sufficient to obtain the optimal threshold levels sH3 and rH3). In order to show that the performance of the three heuristics is consistent with the results of Tables 1 and 2, we carried out extensive additional numerical experiments by generating 50 problems, for two- and three-component systems, with system parameters drawn from a uniform distribution as follows: λ and λi∼U(0.1, 1.0), ρi∼U(0.5, 0.95), hi∼U(1.0, 5.0), bi∼hiU(1.0, 10.0), andb∼(∑ibi)·U(1.1,2.5).Table 3shows the aggregated results of this experiment where in each cell, the upper entry corresponds to the two-component system while the lower entry corresponds to the three-component system. As we can see, for the generated sample, the RPD statistics of the two-component system remain comparable to that of the three-component system. We expect these results to continue to hold for systems with higher dimensionality. Furthermore, in order to gain an appreciation of the need for the proposed heuristics, we also report the average percentage CPU time relative to that of the optimal policy (these numbers are shown between parentheses). Reporting the average CPU time has the advantage of being machine independent and better quantifies the gain obtained when using the heuristics as a substitute for the optimal policy. Note that Heuristic H1 is the fastest and Heuristic H3 is the slowest and that heuristic H2 offers the best speed-performance ratio for both, the two- and the three-component system. More importantly, given the performance of H2 remains close to that of H3 (in both the two- and three-component systems) and given the much less computational effort required by H2 compared to H3, H2 can be used as an effective substitute to the optimal policy for larger systems.We considered a system producing a single end product that is assembled from n components and serving an after sales market for individual components where the latter are produced on separate production facilities. We formulated the problem using a Markov decision process framework and characterized the optimal production and inventory rationing policies. In particular, we showed that both the optimal component production and inventory rationing policies are characterized by state dependent thresholds. Such policies are difficult to implement in practice and also, in general, are difficult to obtain numerically for large size problems.Recognizing these two facts, we proposed three simple heuristic policies and showed that two of these are highly efficient. In particular, we showed that one of these two strikes a balance between high efficiency and computational effort and thus can be used as an effective substitute of the optimal policy.This work can be extended in several directions. One extension would be to consider the case where the demand of the individual components is lost if it cannot be fulfilled immediately. This reflects systems where customers for individual components are impatient and would seek a generic substitute component elsewhere. The demand of the end product can be either lost or backordered if it cannot be fulfilled immediately. The first case reflects the case of a competitive market for the end product where customers would seek the product at other vendors if they cannot get it immediately. The second case represents the case of a monopolist or a well-known brand where customers are willing to accept deferred delivery in case the product is not available immediately. Another extension would be to consider systems producing a variety of products from different combinations of components. We expect these systems to be very complex to analyze and to compute. In this case, we suggest studying a two-product system first then maybe generalize the results once enough insight has been gained.Due to space restriction, we provide below the sketch of the proofs of Lemmas 1 and 2. However, the complete proofs can be requested from the authors.Proof of Lemma 1To prove Lemma 1, we use an inductive argument similar to Porteus (1982) where we assume that the value function v satisfies a particular property and show that when we apply one of the Operators R, Rk, or Pkto the property, the latter continues to hold. Then, using the fact that the setUis closed under addition and scalar multiplication, we show that the property also holds under Operator T.In order to show thatRv∈U,Rkv∈U,Pkv∈U, and then Tv ∈U, we first simplify OperatorsR,Rk, andPk, using the fact that v ∈U:Rv(x,y,z)={v(x,y,z+1)∏i≠kxi=0,v(x−e,y,z)otherwise.Rkv(x,y,z)={v(x,y+ek,z)xk=0,min{v(x−ek,y,z),v(x,y+ek,z)}otherwise.Pkv(x,y,z)={min{v(x,y,z),v(x+ek,y,z)}yk=0,z=0,min{v(x+ek,y,z),v(x,y−ek,z)}yk>0,z=0,min{v(x,y,z),v(x+ek,y,z)}yk=0,z>0,∏i≠kxi=0,min{v(x+ek,y,z),v(x,y−ek,z)}yk>0,z>0,∏i≠kxi=0,v(x−e+ek,y,z−1)z>0,∏i≠kxi≠0.It is clear that OperatorRsatisfies properties p1–p6. Hence, we focus on OperatorsRkandPk.For OperatorRk, notice that in the casexk=0,Rkvsatisfies properties p1–p6. Forxk≠0and assuming∏ixi≠0,by property p1, we haveRkv(x−e,y,z)=min{v(x−e−ek,y,z),v(x−e,y+ek,z)}≤min{v(x−ek,y,z+1),v(x,y+ek,z+1)}=Rkv(x,y,z+1).Hence, OperatorRksatisfies property p1. In a similar way, we show thatRksatisfies properties p2–p6 as well. Therefore,Rkv∈U. Similarly, we can show thatPkv∈U. To show thatTv∈U, we first note that the term∑k=1nhkxk+bz+∑k=1nbkyksatisfies p1–p6. For example, applying the left-hand-side of property p5 to the term∑k=1nhkxk+bz+∑k=1nbkykyields the term−∑k≠inhk−b+biwhich is clearly negative. SinceUis closed under addition and multiplication by a scalar, Tv satisfies properties p1–p6 and Tv ∈U.□The proof follows the same steps as those in Lemma 1. For the sake of brevity, we only treat OperatorRk.First, note that using C1 and D1 we haveΔxiv(x+ei,y,z)≥Δxiv(x+ei,y+ei,z)≥Δxiv(x,y,z),implying that if v satisfies C1 and D1 then v satisfies A1. Similarly, we show that A2 is implied by C2 and D3, B1 is implied by C1 and D2; B2 and D4 imply C2 is implied by B2 and D4; C1 is implied by C2 and C3; C5 is implied by D1 and D3; D1 is implied by D3 and D5; D6 is implied by D1 and D4; and D3 is implied by D4 and D7. Hence, we only need to show thatRksatisfies A3, B2, B3, C3, C4, D2, D4, D5 and D7.Forxk=0,Rksatisfies A3, B2, B3, C3, C4, D2, D4, D5 and D7. Hence, we focus on the casexk≠0and we rewrite OperatorRkas follows:Rkv(x,y,z)=v(x−ek,y,z)+min{0,Δxk+ykv(x−ek,y,z)}To show thatRksatisfies A3, we need to show thatQ(x,y,z)=Δxiv(x−ek+e,y,z)−Δxiv(x−ek,y,z)+min{0,Δxk+ykv(x−ek+ei+e,y,z)}−min{0,Δxk+ykv(x−ek+ei,y,z)}−min{0,Δxk+ykv(x−ek+e,y,z)}+min{0,Δxk+ykv(x−ek,y,z)}≥0.Casei≠k: Using D3 and D5, we haveΔxk+ykv(x−ek+e,y,z)≥Δxk+ykv(x−ek+ei+e,y,z)≥Δxk+ykv(x−ek+ei,y,z)andΔxk+ykv(x−ek+e,y,z)≥Δxk+ykv(x−ek,y,z)≥Δxk+ykv(x−ek+ei,y,z).Hence, we consider the following sub-cases1.Δxk+ykv(x−ek+ei,y,z)≥0.Hence, we haveQ(x,y,z)=Δxiv(x−ek+e,y,z)−Δxiv(x−ek,y,z)≥0.(byA3)Δxk+ykv(x−ek+ei+e,y,z)≥0≥Δxk+ykv(x−ek+ei,y,z)andΔxk+ykv(x−ek,y,z)≥0.Hence, we haveQ(x,y,z)=Δxiv(x−ek+e,y,z)−Δxiv(x−ek,y,z)−Δxk+ykv(x−ek+ei,y,z)≥0.(byA3)Δxk+ykv(x−ek+e,y,z)≥0≥Δxk+ykv(x−ek+ei+e,y,z)andΔxk+ykv(x−ek,y,z)≥0.Hence,Q(x,y,z)=Δxiv(x−ek+e,y,z)−Δxiv(x−ek,y,z)+Δxk+ykv(x−ek+ei+e,y,z)−Δxk+ykv(x−ek+ei,y,z)≥0.(byA3andD5)Δxk+ykv(x−ek+e,y,z)≥0≥Δxk+ykv(x−ek,y,z)andΔxk+ykv(x−ek+ei+e,y,z)≥0.Hence,Q(x,y,z)=Δxiv(x−ek+e,y,z)−Δxiv(x−ek,y,z)+Δxk+ykv(x−ek,y,z)−Δxk+ykv(x−ek+ei,y,z)≥0.(byA3andD3)Δxk+ykv(x−ek+e,y,z)≥0≥Δxk+ykv(x−ek+ei+e,y,z)and0≥Δxk+ykv(x−ek,y,z).Hence,Q(x,y,z)=Δxiv(x+e,y+ek,z)−Δxiv(x,y+ek,z)+Δxk+ykv(x−ek+e,y,z)≥0.(byA3)0≥Δxk+ykv(x−ek+e,y,z).Hence,Δxiv(x+e,y+ek,z)−Δxiv(x,y+ek,z)≥0.(by A3)Casei=k: The proof is similar to the casei≠k.Hence,Rksatisfies Property A3. Properties B2, B3, C3, C4, D2, D4, D5 and D7 can be shown in a similar fashion.Similarly, we can show that OperatorPksatisfies Properties A3, B2, B3, C3, C4, D2, D4, D5 and D7. For Operator T, it is straightforward to show that∑k=1nhkxk+bz+∑k=1nbkyksatisfies properties A3, B2, B3, C3, C4, D2, D4, D5, and D7. SinceVis closed under multiplication by a scalar and addition, Tv satisfies properties A3, B2, B3, C3, C4, D2, D4, D5, and D7 andTv∈V.□Part a: Consider state(x,y,z)such thatyk>0and∏i≠kxi=0,fork=1,…,n.Then forxk≤wk(x˜k,y+ek,z), we havexk−1<wk(x˜k,y+ek,z)and by definition ofwk(x˜k,y+ek,z), we havev(x−ek+ek,y+ek,z)<v(x−ek,y+ek−ek,z)or equivalentlyv(x,y+ek,z)<v(x−ek,y,z).This implies that it is optimal to backorder the demand of Component k forxk≤wk(x˜k,y+ek,z).On the other hand, for state(x,y,z)withxk>wk(x˜k,y+ek,z), we havexk−1≥wk(x˜k,y+ek,z)and thus by definition ofwk(x˜k,y+ek,z), we havev(x−ek,y,z)≤v(x,y+ek,z)which implies that forxk>wk(x˜k,y+ek,z)it is optimal to satisfy the demand of Component k. As a result, we havewk(x˜k,y,z)=rk(x˜k,y−ek,z).Part b:1.The result follows from Property P1. In particular, for state(x,y,z)with∏ixi≠0, we havev(x−e,y,z)≤v(x,y,z+1).Hence, it is optimal to satisfy demand of the end product when∏ixi≠0.The result follows from the definition ofrk(x˜k,y,z)and Property D1. In particular, we havev(x−ek,y,z)≤v(x,y+ek,z)ifxk≥rk(x˜k,y,z)andv(x,y+ek,z)<v(x−ek,y,z)ifxk<rk(x˜k,y,z).Hence, it is optimal to satisfy Component k demand ifxk≥rk(x˜k,y,z)and backorder it, otherwise.Part c:1.The result follows from the definition ofsk(x˜k,y,z)and property A1. In particular, ifyk=0andz(∏i≠kxi)=0,then by A1v(x+ek,y,z)−v(x,y,z)is non-decreasing inxk.Hence,v(x+ek,y,z)≤v(x,y,z)ifxk<sk(x˜k,y,z)andv(x,y,z)<v(x+ek,y,z)ifxk≥sk(x˜k,y,z). Thus, it is optimal to produce Component k to stock ifxk<sk(x˜k,y,z)and not to produce it, otherwise.The proof is the same as Part b) 2.Combining Properties P3, P4 and P5, we havev(x−e+ei,y,z−1)≤min{v(x,y,z),v(x+ei,y,z),v(x,y−ei,z)} ifz(∏i≠kxi)>0.Then, ifz(∏i≠kxi)>0,it is always optimal to produce Component k and use the produced unit to assemble one unit of the end product in order to decrease the end product's backorder level.Part i: The results follow from properties A2, C1 and C2, respectively.Part ii: The results follow from Properties D3, D2 and D4, respectively.□In order to show that, under the average cost rate criterion, an optimal policy exists with a finite average cost rate that is independent of the starting state, we use an argument that involves taking the limit asα→0,in the discounted cost problem. However, to apply this argument, two conditions must be satisfied (Cavazos-Cadena & Sennott 1992; Weber & Stidham, 1987): (1) there exists a stationary policy π that induces an irreducible positive recurrent Markov chain with finite average cost γπ, and (2) the number of states for which one-stage costC(x,y,z)=∑k=1n(hkxk+bkyk)+bz≤ γπis finite. In order to prove condition 1, consider policy H1. It is straightforward to show that policy H1 yields a finite average cost. It is easy to verify that condition 2 holds sinceC(x,y,z)is component-wise increasing convex in its arguments. Hence, for any positive value δ , the number of states for whichC(x,y,z)≤δis always finite. Under these conditions, Weber and Stidham (1987) showed that there exists a constantγ*and a functionu(x,y,z)such thatu(x,y,z)≥−γ*+∑k=1n(hk(xk)+bk(yk))+b(z)+λRu(x,y,z)+∑k=1nλkRku(x,y,z)+∑k=1nμkPku(x,y,z).Furthermore, the stationary policy that minimizes the right hand side of the above equation for each state(x,y,z)is an optimal policy for the average cost criterion and yields a constant average costγ*. As a result, properties of the average cost optimal policy are the same as and determined through functionu(x,y,z)in much the same way as were properties of the discounted cost optimal policy determined byv(x,y,z).□Supplementary material associated with this article can be found, in the online version, at 10.1016/j.ejor.2014.10.055.

@&#CONCLUSIONS@&#
