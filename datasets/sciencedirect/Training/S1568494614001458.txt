@&#MAIN-TITLE@&#
A two level real-time path planning method inspired by cognitive map and predictive optimization in human brain

@&#HIGHLIGHTS@&#
A two-level model is proposed for real-time path planning in a dynamic environment.At the level I, a coarse path generates based on a sensory-motor map.At the level II, the coarse path is locally developed by using a predictive method.The prediction horizon is variable and is adjusted in each step of planning.The path planning of the proposed method follows similar plan of most subjects.

@&#KEYPHRASES@&#
Sensory-motor map,Global level,Local level,Model-based prediction,Variable prediction horizon,

@&#ABSTRACT@&#
A biologically inspired two level method is proposed for real-time path planning in a complex and dynamic environment, employable in ground vehicles. This method takes the advantage of both global and local path finding procedures. In the first level, i.e., global level, the planner utilizes a neural network architecture as a sensory-motor map, similar to the cognitive map used by humans, and an optimization algorithm to produce a coarse path. In the second level, i.e., local level, the global path is improved by employing a model-based prediction method with a finite prediction horizon in a way that future information about the environment is involved in the planner's decision making. In the suggested method, the prediction horizon is variable and is adjusted in each step of the planning in agreement with the kinematic features of the closest obstacle in the visual field of the planner. We considered four different path planning tasks in a virtual dynamic environment to evaluate the performance of the proposed method against the human path planning strategy. The results demonstrate the ability of the method to plan a strategy comparable to the driving scenarios chosen by most subjects and to generate a real-time collision-free path in a dynamic environment with obstacles.

@&#INTRODUCTION@&#
Over the past years, path planning has attracted significant attention by researchers in different areas including robotics, vehicle guidance, artificial intelligence, and biological systems modeling; each studying the issue from their own point of view. In robotics and vehicle guidance, movement path planning is generally defined as the system's ability to perform automatic path planning in any simple or difficult situation. In biological systems however, the focus is on the functions of different parts of the human and animal brains for better understanding and modeling the behaviors of the cognitive centers [1–7]. Path planning is a complicated cognitive process based on the estimation of the future representation of the environment for the human beings. The most important factors in the path planning process in the human includes: mental map creation from the external world; estimation of the current and future statuses of free spaces located in visual field (environment's dynamic prediction); estimation of free spaces statuses that are not in visual field but will be evident in future (spatial associative memory); estimation of the current state of the body and movement trajectory according to body dynamic (internal model) and the optimal path selection (optimization) [8–12].Most of the research indicates the critical role of the frontal area in the human brain, especially the prefrontal cortex (PFC), in behavioral planning [1,2,6–9,12,13]. The PFC has a critical function in constituting a map among sensory inputs, thoughts and actions [8]. It is revealed that the frontal patients have unfortunate performances and strategies in complex behavioral tasks [1]. To plan a movement path, the PFC assembles and processes information from cortical and subcortical regions in the brain to represent internal states and goals required for establishing rules which are used in the planning procedure [2]. Pisapia [8] interpreted this representation of assembled information as a function of the dorsolateral PFC to conserve information in an active state. The evidence shows that this is attained by constructing on-line internal models of the external zone.Through recent years, different models and methods have been suggested for real-time path finding in a dynamic environment. Most of these approaches are presented according to the conditions and restrictions within a specific application. For instance, in path finding a ground-vehicle, a planner encounters a large volume of information processing. The planner should be aware of its own position, the condition of other objects in the environment, and road geometry. Thus, motion path planning is a collection of some active and adaptive processes that requires a frequent interaction between planner and environment [14,15]. Since the understanding of the environmental configuration and information about its objects is an important phase of path planning, many strategies have been proposed to represent the environment map. A key point in this regard is to consider the nature of the environment in the representation. One of the well-known groups of maps which are employed in map-based path planning is “cognitive map”. Many studies have shown that the strategy used by the brains of primates and rodents are based on employing a cognitive map [16–19]. Generally, the cognitive map is a robust representation of an external environment and its objects within their spatial relations, which gives the ability to handle the uncertainty of the environment. This issue was presented over sixty years ago by Tolman [16]. After two decades of studying the function of the hippocampus, O’keefe [17] realized the existence of place cells (as pyramidal cells), which play an important role in determining objects’ places and kinematic features of their movement (e.g., velocity and direction). Later, several studies have been done on the hippocampal function in path finding [19–21].Some research studies in animals’ behaviors indicated the mapping of sensory inputs to motor commands in their navigation procedure [22]. For human, spatial information (e.g., perception of action, geometric shapes, and symbols) is instructed based on the sensory-motor experiences. Cognitive map provides a supervised planning that simplifies the path planning for the planner to generate a short path between observation and goal place even in complex environments [22]. Usually, the cognitive map is assumed as a collection of basic geometric features and landmarks, which represents physical aspects and spatial relations in an environment. Moreover, this cognitive structure helps the planner to recall efficient information of the external environment and eliminate insignificant features to establish a near optimal and safe motion trajectory. Inspired by human cognitive map, Kuipers [23] proposed a spatial semantic hierarchy model of environment representation. The introduced model consists of different sensory, processing, learning and control levels to provide a successful navigation in a large-scale space. In this work, navigation through an unknown environment has been made possible by using locally distinctive cells in a grid map over the environment. Yeap and his colleagues [24] proposed cognitive mapping for a mobile robot in path finding tasks for mapping and estimating positions for robot home way finding.One of the major groups of path planning approaches, which uses a grid-based map for path finding is a neural network model. Many neural networks have been proposed for real time and collision free path generation in static and dynamic environments [25–28]. A group of these networks employs a learning process while others do not use any learning and previous knowledge. Most of the neural network models which work in the dynamic environment utilize a grid-based representation of the environment [26,27]. The functional performance of this group of networks is similar to how humans make decisions based on the mental map. Glasius et al. [25] proposed a Hopfield type neural network with nonlinear dynamic for collision free path finding in both static and dynamic environments. In another work, Glasius et al. [26] introduced a bio-inspired two-layered neural network that was able to produce a smooth path in dynamic place. Yang and Meng [27] suggested another bio-inspired neural network with a continuous dynamic based on the shunting equation of Grossberg. This model was developed to generate a real time collision free trajectory in both static and dynamic areas. Lebedev et al. [28] proposed a parameter-free model based on a dynamic wave expansion neural network (DWENN) for path finding in a dynamic environment. The principle of this network is based on wave propagation from a target to other neurons that convey information of the distance to the target place. However, most of these models suffer from computational efforts when facing fast dynamic objects in the environment.From another point of view, there are two main strategies for path planning: global and local path planning. The global path planner makes decision by employing a map of the surrounding environment. The generated path in this method is formed according to exploration among free spaces in an arranged map, based on the past and current information of the environmental configuration. A drawback of this group of planners is the weakness in path finding in dynamic environments. In contrast, the local path planners benefit from a proper operation in dynamic and clutter environments. This group locally performs the planning based on the goal position. However, a drawback of local planners is the poor performance in an expanded environment. To improve the performance of planners in both dynamic and wide environments, a combination of the two groups has been suggested by some researchers [28–33]. A primary model introduced in this respect is a hierarchical path planning method suggested by Miura and Shirai [29]. This hierarchical method consists of local and global levels. At the local level, the planner abstracts an environmental graph and searches locally for the optimal trajectory. At the global level, path smoothing is done through replacing locally optimal trajectory by straight lines, which is globally optimal. Sequeira and Ribeiro [30] proposed a two level path finder for underwater autonomous vehicles. In this approach, a rough path produced in the first level was optimized based on minimum energy in potential field. Bortoff [31] proposed a real-time two-step path planner for unmanned autonomous vehicles (UAVs) that Voronoi graph and a local exponentially stable solution are utilized in each step respectively to compute an optimal path. Another two-step structure for the motion path planning is recommended by Garrido et al. [32]. They utilize a two level planning for a safe and fast path generation for a mobile robot. Similarly, at the first level, a global route was produced based on the wave front planning strategy on Voronoi diagram. At the second level a fast marching technique was applied to develop the global and suboptimal trajectory in the settled graph. Dolgov et al. [33] suggested a novel approach for path finding for autonomous vehicles. The proposed method is attributed to the global and local path planner for producing a smooth path in an unknown environment. Some of the reviewed studies exhibit proper performance only in static environments, while the others perform well in dynamic conditions. However, since the prediction part of planning is disregarded in the latter type, they might encounter trouble in certain dynamic situations. Another challenging issue in motion path planning is complexity and spread of an environment. Most of the aforementioned works have weak performance in these states.This paper is focused on using a two-level motion path planning with the artificial intelligence approach as a convenient method in motion path generation. A biologically inspired model is proposed for real-time path planning in complex and dynamic environment applicable in ground vehicles. The proposed method consists of two phases of path generation. In the first phase, by using a sensory-motor map which is analogous to the human cognitive map, a coarse path is produced. A bio-inspired neural network based on the network suggested by Yang and Meng [27] is used to form the sensory-motor map. In the second level, the produced rough path is locally enhanced by using a model-based predictive strategy. In model-based predictive strategy the rough path is modified by applying the future presence of an environment and the model of all obvious obstacles in a finite prediction horizon. In this approach, the prediction horizon is variable and is adjusted in each step of planning according to the geometric and kinematic features of the closest obstacle in the visual field of the planner. To evaluate the efficiency of the proposed method for path planning, four experimental driving tasks designed in a virtual urban environment to study the output of the proposed method compared to the path planning method of humans. All tasks were executed in two constant velocities. The results illustrate the capability of the method to generate a real-time collision-free trajectory in a complex dynamic environment.A purposeful action is the principal component of cognitive function in the frontal cortex. Recent studies show that planning is a predictive process based on phasic dopaminergic effects as an error signal [8,9,12]. This prediction procedure in PFC causes the construction of internal models that are formed in dorsalateral PFC to keep active the necessary information. In fact, these internal models include some information about the goal status (i.e., what, where, and when) that are evaluated by a predictive process in the PFC [8].Research shows that the PFC plays a key role in the mapping among sensory inputs, thoughts and actions of individuals [1,2,8,11,13,34–36]. The purpose of this mapping is to represent the internal states (i.e., internal goals defined to reach the final goal) of the individual and to make rules which are used for the planning procedure [8]. The PFC does not have any direct input from sensory areas of the brain and receives processed sensory information from the neocortex and the hippocampus. Recent neuroscience researchers propose that the neocortex area performs pre-processing sensory information by partitioning high-dimensional sensory signals into smaller segments and modeling those based on regularities in the observations [37–39]. The processed information is entered to the hippocampus, through the entorhinal cortex. Although there is no general agreement on the function of the hippocampus, most of researchers agree that this part of the brain involves in creating new memories of the individual experienced events. Moreover, it seems that information is reprocessed in the hippocampus by prospering a coarse presentation of an external environment in this part and consequently, a spatiotemporal representation would be constructed. This procedure leads to a cognitive map formation of an external world [40]. To plan an operation, the PFC congregates data from several cortical and subcortical areas and generates a movement trajectory based on a movement and dynamic restrictions. Finally, in the motor center areas (motor cortex and cerebellum) in the brain, motor commands are generated in accordance with the planned path [8,9,11,34–36]. Fig. 1illustrates the summary of this procedure in the human brain. Based on this procedure, we proposed a two-level planning process based on a cognitive map and predictive optimization in the human brain that will be explained in details.As mentioned before, many methods (based on neural network models or two-level structure) have been suggested for the real time and the collision free path planning [24–33]. The main difficulty with this matter is to avoid collisions in complex environments with multiple and dynamic objects, especially in non-stationary environments (such as urban areas). We believe that this problem is derived from lack of knowledge of the model about the future state of the environmental configuration. This in turn inhibits the model from providing any estimation about next positions of the objects in space and possibly prevents it from planning a collision free path.To solve this problem, we propose a method based on a two-level structure, applicable to real time path planning in static and dynamic environments with fast dynamic objects. The planning procedure includes two levels: global and local levels. By adopting the human cognitive maps, a global and coarse path is produced based on the formed environmental map and the defined goal in this level. The generated path on the global level is an optimized and collision free path in a static frame of the environment based on its past and current configuration information. For path planning in a dynamic environment, the produced path in a static frame needs to be enhanced. This improvement is performed in the second level in which the global path is adjusted over a predictive approach, according to the future arrangement of the environment. In fact, by applying a model-based prediction in the second level, the coarse path will be improved in each planning step iteratively. The important advantage of the predictive approach is to increase the flexibility and robustness of path planning considering environment variations. Fig. 2shows the basic structure of the proposed method for real time path planning.In level I, by using a pre-defined map, a coarse path is generated by a simple optimization algorithm. Structurally, several maps have been proposed to represent the environmental information and to access all environment points [25,41,42] that can be classified in three groups: topological, geometric, and grid-based. The topological map represents the global information of an environment in the framework of a graph and supports only necessary information. The geometric map uses geometric shapes (e.g., points, lines, areas, surfaces, and volumes) to represent the environment. The gird-based map is another environmental model, which is the most common approach in path finding. In these kinds of maps, configuration information of the environment is represented in the frame of a metric map. Glasius et al. [25] used two types of grid-based maps inspired by biological processes for path planning. In the first proposed map, there is a sensory map to portray the sensory information of the environment. In the second one, there is a motor map to code movement commands. The configuration information of the environment projects to the motor map through a feedforward connection from sensory map. This is an unsupervised approach that generates a smooth trajectory; however, it has a huge computational cost and encounters difficulty in fast dynamic systems. Here we proposed a sensory-motor map which codes both sensory information and motor commands. It means that all inputs gathered from the current position of the planner, obstacles, target, required motion rules, and a global movement path are assembled in one map. Therefore, the computational burden reduces.In this work, a biologically inspired neural network (BNN) based on the network proposed in [27] is utilized in the first level of the proposed planner for generating a coarse trajectory. In this network, depending upon the target, obstacles, or free places in the sensory-motor map, each neuron gets specified potential value as inputs. The neural dynamic of the network is based on the shunting equation for a neuron in [43], which is principally derived from Hodgkin–Huxley's cell model. This model is defined in a finite dimensional (FD) state space that can be the Cartesian workspace of the guided-vehicle. The location of the ith neuron in the grid-based map in the FD state space, represents the vehicle position in the workspace. For each neuron a neighborhood is defined, which is a subset of state space that represents the receptive field of the each neuron in the workspace. In fact, each neuron can respond only to the stimulus within its receptive field. The dynamic of neural activity is mathematically expressed as:(1)dxidt=−Axi+(B−xi)Exi−(C+xi)lniwhere xiis the activity of the ith neuron and its value presents the status of the neuron in the network field, e.g., free space, obstacle, or target point; A, B and C are non-negative coefficients which represent the decay rate, the upper and the lower neural activities, respectively; Exiand lniare excitatory and inhibitory inputs. Depending on the last condition of a certain neuron and its neighbors, these inputs change the potential of that neuron.(2)EXi=[Ii]++∑j=1Nwij[Xj]+(3)lni=[Ii]−where [Ii]+ and [Ii]–are external inputs that are the same as the inputs in a grid model and are defined as: [a]+=max{a,0} and [a]–=max{−a,0} [27]. The connection weight function is defined as follows:(4)wij=e−γ|i−j2||i−j|≤r0|i−j|>rwhere |i−j| is the Euclidean distance between the ith and jth neuron in state space. γ is a positive constant and r is the maximum distance in the determined neural neighborhood. Each neuron has only local lateral connections to its neighboring neurons that constitute a subset in state space. According to the forward movement of vehicle in workspace, the neighborhood of each neuron is defined as Fig. 3. As it is illustrated each neuron is connected to five other ones.The considered optimization algorithm is based on the ascending gradient method in the neural activity landscape and needs neither learning processes nor prior information about the environment's layout configuration. The coarse path generation process in this level is summarized as the following steps.1) Neighborhood definitions(i,j,:,1)=[i,j+1]i∈[1,n1] and j∈[1,n2]s(i,j,:,2)=[i−1, j+1]s(i,j,:,3)=[i+1, j+1]s(i,j,:,4)=[i−2, j+1]s(i,j,:,5)=[i+2, j+1]2) Initializationinput(i,j)=Ei,jbelongtotargetplace−Ei,jbelongtoobstaclesplace0i,jbelongtofreespace[Ii,j]+=max(input(i,j),0)[Ii,j]–=max((−1)*input(i,j),0)3) Potential field distributionEx(i,j)=[Ii,j]++∑j=1Nwij[xj]+ln(i,j)=[Ii,j]–dx(i,j)=−A*x(i,j,n)+(B−X(i,j,n))*(Ex(i,j))−(D+x(i,j,n))*ln(i,j)x(i,j,n+1)=x(i,j,n)+α*dx(i,j)4) Choosing the next positionact(n)=x(px(n),py(n),n)actm=max(x(s(px(n),py(n),1,k),s(px(n),py(n),2,k),n),0) k∈[1,5]if(actm>act(n))thenpx(n+1)=s(px(n),py(n),1,i*),py(n+1)=s(px(n),py(n),2,i*),elsepx(n+1)=px(n),py(n+1)=py(n)here n1 and n2 are numbers of neurons in the defined workspace, through y and x axes, respectively; S shows neighboring neurons; E is a potential value as an input for the target and obstacles’ neurons in initial phase; Ex(i,j) and ln(i,j) are excitatory and inhibitory inputs; wijis the connection weight; x(i,j,n) is the activity of neuron (i,j) in the nth step of path planning; A is the decay rate; B and C are the upper and the lower neural activities; α is a small positive constant; px(n) and py(n) represent the position of the guided vehicle in the nth step of path planning; act is the activity of a neuron which belongs to the guided vehicle location in the nth step of path planning; i* is the index of neighbor neuron with maximum activity.Recall that the generated path by the BNN in the first level was a global and coarse trajectory for the vehicle movement. This produced path can be used in some stationary and uncomplicated environments, but it would not be applicable for a fast dynamic workspace. To improve the produced coarse path in such occasions, a model-based prediction method has been employed. In level II, by applying internal models of environmental objects and next states of the workspace, the upcoming configuration of the workspace is estimated over a finite prediction horizon. We tried to implement an internal model in this level as inspired by the formation of internal models in the human brain. Abundant research on human decision making revealed that the human employs a small scale model (in cerebellum) to use experiences to predict the future states of the external world [8]. Therefore, the planner can predict the next states of the obstacles, by using some coarse models, over a finite horizon. In each step of path planning, the predicted configuration has been applied to the BNN model to generate the next position of the vehicle based the future configuration of the environment. In fact, the course generated path in the level I, has been improved by an iterative predictive approach.The model considered for an obstacle as an internal model on the prediction process consists of geometric shapes and kinematic features including velocity and movement directions. In accordance with the dimension of each obstacle in space, a matrix of its occupied space in the environment has been defined. Considering only two dimensions of information (in keeping with vehicle movement directions), the matrix is defined as:(5)P=xdownydownxupyupwhere x and y represent the coordinates of an obstacle. For static and motionless obstacles, only taking a constant matrix would be sufficient, but for dynamic ones the information of matrix P is updated in each step according to the obstacle velocity. Fig. 4shows the determined geometrical shape for two types of obstacles.As mentioned, by adding the obstacle's model as an internal model, the planner estimates the next obstacle position in the considered environment. This estimation occurs in a finite prediction horizon that provides a predictive planning. This means that the planner makes a decision for the next step, based on some further steps in the prediction horizon. The movement path planning in the human brain is a complex and future dependent process [8,9,12]. In fact, the prediction is a mental computation in order to estimate the environmental-related changes. This prediction horizon is often considered as a constant parameter in the predictive process. In some dynamic cases however, it is preferred to utilize a variable horizon. In these situations, depending on the obstacles’ velocities and their movement directions, the finite prediction horizon can be properly adjusted over the local path planning in level II. In the proposed method, the prediction horizon is computed based on the kinematic features of the closest obstacle in front of the guided vehicle. Accordingly, the closest obstacle to the guided vehicle is first determined by calculating the Euclidean distance of all obstacles placed in front of the planner, i.e., in its visual field. Then, according to the velocity and movement direction of the closest obstacle, the prediction horizon is computed by:(6)Np=dkvwhere Npis the prediction horizon, d is a parameter proportional to distance and kvis a coefficient proportional to the velocity of the obstacle and the guided vehicle. kvfor an obstacle is obtained as follows:(7)kv−vmax(vmax−|v→veh|+ε)⋅1qˆ≤0|q→|qˆ>0whereqˆis unit vector that denotes the direction ofq→and(8)q→=((V→veh−V→obs)/(|V→veh|−|V→obs|)|V→veh|≠|V→obs|((V→veh−V→obs)/|V→veh|))|V→veh|=|V→obs|whereV→vehis the velocity vector of the guided vehicle,V→obsis the velocity vector of the closest obstacle, vmaxis the maximum permissible movement velocity of the planner, and ɛ is a small positive quantity.The parameter d is the magnitude of the projection of the distance vector on the movement axis of the obstacle and is determined by:(9)d=|a→⋅cos(α)|wherea→is the distance vector between the vehicle and the obstacle, and α is the angle between the obstacle motion direction and the distance vector. Fig. 5illustrates how the parameter d is calculated.The function of the model in this level is summarized as the following steps.1) Finding the closest obstacledi=|a→⋅cos(α)|Distance=[d1d2…dm]m=numberofobstaclesd=min(Distance)2) Estimation of the closest obstacle's velocityP(n)=x1(n)y1(n)x2(n)y2(n)ΔP=P(n)−P(n−1)V→obs=ΔP(:,1)→+ΔP(:,2)→3) Computation of prediction horizonq→=((V→veh−V→obs)/(|V→veh|−|V→obs|)|V→veh|≠|V→obs|((V→veh−V→obs)/|V→veh|))|V→veh|=|V→obs|kv−(vmax/(vmax−|V→veh|+ε))⋅1qˆ≤0|q→|qˆ>0,vmax>|V→veh|Np=d/kv4) Updating potential field distribution in NpEx(i,j)=[Ii,j]++∑j=1Nwij[xj]+ln(i,j)=[Ii,j]−dx(i,j)=−A*x(i,j,1)+(B−X(i,j,1))*(Ex(i,j))−(D+x(i,j,l))*ln(i,j)x(i,j,l+1)=x(i,j,l)+γ*dx(i,j)l=1:Np5) Choosing the next positionact(n)=x(px(n),py(n),1)actm=max(x(s(px(n),py(n),1,k),s(px(n),py(n),2,k),l),0) k∈[1,5]if(actm>act(n))thenpx(n+1)=s(px(n),py(n),1,i*),py(n+1)=s(px(n),py(n),2,i*),elsepx(n+1)=px(n),py(n+1)=py(n)here diis the magnitude of the projection of the distance vector on the movement axis of the ith obstacle; P(n) present the position of the closet obstacle; x and y are the coordinates of the obstacle;|V→obs|is the obstacle velocity vector;|V→veh|is the velocity vector of the guided vehicle;qˆis unit vector that denotes the direction ofq→; Npis the prediction horizon.Some experiments were designed to study the movement path planning method of humans in driving a car-like vehicle and to compare it with results obtained from the proposed method. The experiments were designed to investigate both the role of prediction procedure in path planning and the adjustment of the movement path due to changes in velocity and location of environment obstacles.The provided 3D virtual environment for this study created in Quest3D, is an illustration of a small urban area with a tow-lane straight street and an intersection. Sixteen subjects, half women and half men, between the ages of 20 and 30 all holding driving license, took part in this study. Before the experiments, different views of the designed environment, guided vehicle, and obstacles (their appearance and their size relative to each other) were shown to participants to provide the initial familiarity with the environment.Fig. 6displays the prepared setup for this study. Our setup includes three main parts: driving simulator, computer, and display screen. A Logitech G27 Racing Wheel was used as the interface for delivering driving information (velocity and location) to the computer. All subjects were trained to work with the driving simulator prior to the test.In this study, four driving tasks are determined in the provided virtual urban zone. The conditions that are considered for all tasks are as follows.•The start and final (target) points are cleared in all tasks. Subjects should start and end their path with these two points, without any collision.All obstacles move with constant velocities.The guided-vehicle moves with constant velocity (22km/h and 45km/h) along the x-axis.Subjects did not take into account traffic rules.Task 1: The defined environment for this task with its objects is shown in Fig. 7(a). As it is shown, there are three objects as obstacles. There is a static obstacle, a parked truck, and two dynamic obstacles, a pedestrian who moves across the street and a car which approaches from the front in the opposite lane. The movement velocities of all objects are constant; the car moves with 22km/h along the x-axis, and the pedestrian moves with 5.5km/h along the y-axis.Task 2: The environmental configuration in Task 2 was the same as in Task 1 (Fig. 7(b)), except that in Task 2 a second pedestrian moves across the street with nearly half of the velocity of the first pedestrian, i.e., 2.2km/h. The initial location of the pedestrian from Task 1 is located a little closer to the guided-vehicle than before. The status and movement velocity of the other obstacles are the same as in Task 1.Task 3: Fig. 7(c) shows the defined environmental configuration for Task 3. In this task, all the obstacles and configurations are same as in Task 2, with one exception. The pedestrian from Task 1 stands in the middle of the street (motionless) and the second pedestrian from Task 2 moves across the street with a velocity of 5.5km/h along the y-axis.Task 4: The only difference in this task compared to Task 3 is that the car is parked in place of the truck while the truck is the approaching vehicle according to Fig. 7(d). The statuses of all obstacles are the same as in Task 3 (with the same dynamics).

@&#CONCLUSIONS@&#
