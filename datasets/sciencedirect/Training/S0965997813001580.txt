@&#MAIN-TITLE@&#
Prediction of concrete compressive strength: Research on hybrid models genetic based algorithms and ANFIS

@&#HIGHLIGHTS@&#
The structured and unstructured factors which affected the concrete quality were studied.GA was used to optimize the weights and thresholds of BP-ANN.For the ANFIS two building methods were explored and promoted the application in engineering.GA based BP-ANN and ANFIS have a better performance than regression models and BP-ANN.

@&#KEYPHRASES@&#
Concrete,Compressive strength,Hybrid method,Genetic algorithms,ANFIS,ANN,

@&#ABSTRACT@&#
The management of concrete quality is an important task of concrete industry. This paper researched on the structured and unstructured factors which affect the concrete quality. Compressive strength of concrete is one of the most essential qualities of concrete, conventional regression models to predict the concrete strength could not achieve an expected result due to the unstructured factors. For this reason, two hybrid models were proposed in this paper, one was the genetic based algorithm the other was the adaptive network-based fuzzy inference system (ANFIS). For the genetic based algorithm, genetic algorithm (GA) was applied to optimize the weights and thresholds of back-propagation artificial neural network (BP-ANN). For the ANFIS model, two building methods were explored. By adopting these predicting methods, considerable cost and time-consuming laboratory tests could be saved. The result showed that both of these two hybrid models have good performance in desirable accuracy and applicability in practical production, endowing them high potential to substitute the conventional regression models in real engineering practice.

@&#INTRODUCTION@&#
Concrete is a fundamental building material widely used in civil engineering. High standard quality control of concrete is becoming a challenge to the producers. In China, the stability of concrete quality is still low in comparison with the developed countries due to the limited capacity of both equipment and human resources. The error rate of concrete compressive strength, which is the most important quality indicator in concrete industry, can be exaggerated to 10%. Fig. 1summarizes the main factors that affect the concrete production and construction process.These factors can be categorized to structured and unstructured factors. The structured factors (such as the consumption of raw materials, mix design and slumps of concrete) have been well studied and the relationship between the influencing factors and the analysis indicators have been described by fixed rules. For the unstructured factors (like the stuff skill, control precision and production condition), there is no clear relationship between the influencing factors and the analysis indicators. However, the unstructured factors could also lead to quality fluctuation. Therefore these factors should be taken into account in building quality control model.Compressive strength has been generally considered to be one of the most essential qualities of concrete. Developing accurate and reliable compressive strength prediction models could lead to saving costs and time. Therefore, many researches have been conducted to predict the concrete compressive strength.Conventional approach of predicting the concrete strength is the linear and nonlinear regression model. The general form of the regression model can be expressed as follows:y=f(ai×xi)where y, f, aiand xirepresents the strength of concrete, linear or nonlinear function, constant coefficients and structured factors of the concerned problem respectively. However, these empirical-based methods cannot achieve an accurate prediction result due to the unstructured factors. Consumption of the raw materials are typical structured factors, however, conventional regression models could not achieve ideal prediction results due to the unstable quality of raw materials, limited measurement precision, inexperience operation, etc.In order to compensate the drawbacks of traditional linear and nonlinear regression models, more attention have been paid to the Artificial intelligence (AI) techniques such as artificial neural network, fuzzy logic, genetic algorithm and hybrid models. Yeh [1] introduced BP-ANN to predict the compressive strength of concrete, demonstrating that the ANN model was more accurate than the regression model and more convenient to review the effects of the proportions on concrete mix. Demi [2] developed a fuzzy model to predict normal and high concrete strength. Fuzzy models could describe knowledge in a descriptive human-like manner using linguistic variables. Efficient model has been selected to predict concrete strength. Lim et al. [3] applied genetic algorithm to find a near optimal value in high-performance concrete mix proportioning and to verify the proposed mix design.Hybrid model employs a combination of artificial neural network, fuzzy systems and genetic algorithms. Akkurt et al. [4] applied the Mamdani fuzzy rules to predict compressive strength of concrete. The Mamdani fuzzy rules incorporating input and output variables were created by the ANN model and were laid out in the If-Then format. The estimation of the 28days cement strength data by the developed fuzzy model closely followed the actual values and the average percentage error was 2.69%. Tesfamariam and Najjaran [5] designed Adaptive Network-Fuzzy inference system to Estimate Concrete Strength Using Mix Design. The ANFIS incorporating ANN and fuzzy inference system was proposed to train a fuzzy model and estimate concrete strength. Bilgehan [6] had a comparative study for the concrete compressive strength estimation using neural network and ANFIS. The result showed that the ANFIS modeling turns out to be an efficient tool for prediction of the concrete compressive strength. However, few investigations have been focused on the initial parameters setting which is important to the prediction.Another Hybrid model ANN optimized by GA [7–10] was constructed and applied in some areas [11–16]. GA was used to optimize the weights and thresholds of BP-ANN for minimizing the error between the actual and target outputs. The advantages of GA based ANN were the unrestricted number of inputs and outputs. GA [17–20] was used to escape the local optima and acquire a global optimal solution. However, this hybrid model used to optimize the weights and thresholds of ANN in prediction of the concrete compressive strength has not been reported.This paper investigates the structured and unstructured factors that affect the concrete quality. Two hybrid models BP-ANN optimized by GA and ANFIS are constructed aiming to predict the concrete compressive strength which is an important concrete quality index.The experimental data sets were obtained from the University of California, Irvine (UCI) [21]. Totally 180 of 28days concrete compressive strength were used, in which150 were used for training and other 30 were used for testing in ANN, GA-ANN and ANFIS models. All tests were performed on 15cm cylindrical specimens of concrete prepared by using standard procedures. Table 1shows the experimental data set used in this study. Table 2illustrates the range of input and output data sets.Back-propagation algorithm is used to ANN. The input values to a neuron are obtained by multiplying the output of the connected neuron by the synaptic strength of the connection between them. The weighted sums of the input components xiare calculated by using the following equation(net)j=f∑i=1nwijxi+bwhere (net)jis the output from neuron, wijis connection’s weights, b is thresholds, n is the number of neurons or processing elements (PE) in each layer and f is the activation function as follows:Oj=f(net)j=2/(1+exp(2(net)j))-1BP-ANN operates in two steps. First, the data are fed into the input layer and processed by transfer functions through the layers until the network’s response is computed at the output layer. Second, the network’s response is compared at the target and an error is generated. Based on this error signal, connection weights between layer neurons are updated until the network reaches a pre-defined performance goal. The back-propagation algorithm is used to accelerate the convergence of this algorithm. BP algorithm adjusts the weights in the steepest descent direction where the performance function decreases more rapidly.The first sets of data were used in this experiment and there are seven neurons in the input layer as the seven input variables. The input layers are determined by the consumption amount of cement, blast furnace slag, fly ash, water, super-plasticizer, coarse aggregate and fine aggregate. One neuron of 28days compressive strength of concrete is used as the output variable.Genetic algorithms [11,14] introduced in the 1970s by Holland [22] (1975), have gained increasing popularity in solving optimization problems. It is basically inspired by natural evolution and selection. In biological systems, genetic information is stored in chromosomes. Chromosomes are replicated and passed onto the next generation with selection depending on fitness. Genetic information can, however, also be altered through genetic operations such as mutation and crossover. In GA, each “chromosome” is a set of genes, which constitutes a candidate solution to the problem. In typical implementations a population or subpopulations of “chromosomes” are used. The passage of each “chromosome” to the next generation is determined by its relative fitness. Random combinations and/or changes of the transmitted “chromosomes” produce variations in the next generation of “offspring”. The individuals that show higher fitness values (correspondence with desired properties) have greater chances of being selected for transmission. Optimal or near optimal solutions are obtained by the following steps.There are four major factors of GA:(1)Chromosome representation.Coding the chromosome is a process which creates initial population by the genetic algorithm. Each individual contains all the weights and thresholds of the ANN, which could determine a particular ANN.(2)Fitness function.The purpose of the “fitness function” is to measure the fitness of candidate solutions in the population. To calculate the fitness of an individual chromosome, we first set initial values of weights and thresholds of the neural network. Once target values are forecasted, we calculate the difference between the desired and forecasted values. Total error is used as the fitness of the individual.F=k∑i=1nabs(yi-oi)where n is the number of output-layer nodes; yiis target output value of the ith node in ANN; oiis simulates output value of the ith node; k is coefficient.(3)Selection criterion.There are lots of selection operations in GA, such as roulette wheel selection and tournament selection [23]. Roulette wheel selection is used in this research. In this selection process, weakest individual has smallest share of the roulette wheel and fittest individual has largest share. The fitter individual will tend to have a better probability of survival and will go forward to form the mating pool for the next generation.The individual selection probability piis calculated by the following equation:fi=k/Fipi=fi∑j=1Nfiwhere Fiis individual fitness value, k is coefficient; N is the number of population.(4)Crossover/mutation.Once the mating pool is generated using the selection operator, the individual in the pool are randomly paired to form parents for the next generation. Then, for each pair, the algorithm arbitrarily selects one of the available cross over operators and applies it with some degree of probability to create two child individuals by exchanging information contained in the parents. Crossover between the kth chromosome and lth chromosome occurs in jth gene is shown below:akj=akj(1-b)+aijbalj=alj(1-b)+akjbb is a random number between 0 and 1.Selection and crossover do not introduce new genetic material into the population pool. This task is performed by the mutation operators acting at the gene level to alter information contained in the gene. In this research we consider a single mutation operator. The code changes from 0 to 1, the corresponding code generated randomly within a certain range. Mutation of the jth gene on ith individual is shown below:aij+(aij-amax)×f(g),r⩾0.5aij+(amin-aij)×f(g),r<0.5where f(g)=r2(1−g/Gmax); r2 is a random number between 0 and 1; g is current iterations; Gmax is maximum evolution generations; r is a random number between 0 and 1.Fig. 2illustrates the crossover and mutation operations.Using the principle of survival of the fittest, GA was predicted with the ability to guide their search to the most promising areas of the stated space. This property can be used to find weights and thresholds of the back-propagation neural network presented in the precious section. The learning process of network is considered as the dynamic process for continuous optimization of the weights and thresholds. GA has remarkable abilities to escape the local optima and acquire a global optimal solution which can eventually yield the optimum and minimized the differences between the actual and target outputs.The ANN structure is determined by the number of input and output parameters in fitting function. GA is used to optimize weights and thresholds of BP-ANN. Each individual contains all the weights and thresholds of BP-ANN. Fitness function is used to calculate individual fitness value. Selection, crossover and mutation are employed to find individuals which have optimal fitness values. Values obtained from GA are assigned to the weights and thresholds of BP-ANN. The simulate values were obtained by training the BP-ANN. Fig. 3illustrates the network used in this study, a three-layer network consisting of one input layer, one output layer and one intermediate or hidden layers.The process of GA based BP-ANNs is illustrated in Fig. 4.Studies have shown that the number of hidden nodes is very important. The number of hidden nodes depends on the number of input neurons and ranges from n∼n+1 [24], n represent the number of input neurons. Experiments with different number of hidden nodes have been conducted to determine the number of hidden nodes.Table 3shows the relationship between the number of hidden nodes and the root-mean-square error (RMSE) of simulation value.As can be seen in table 3, with the number of hidden nodes increasing, training error decreased. However, it is not the more the better. When the number of hidden nodes rise to 11 the training error increase again.There is 1 layer in hidden layer and the number of hidden nodes is 9, it is found to be good in term of generalization (avoidance of under or over-fitting) in this experiment.The adaptive network-based fuzzy inference system was first introduced by Jang. ANFIS incorporates the human-like reasoning style of fuzzy inference systems (FIS) by the use of input–output sets and a set of IF–THEN fuzzy rules. FIS [25] has a structured knowledge where each fuzzy rule describes a local behavior of the system, however, it lacks the adaptability to deal with a changing external environment. Therefore neural network learning concepts have been incorporated in FIS, resulting in ANFIS. In the network, the basic learning algorithm, the back propagation, aims to minimize the prediction error. For the reasons above, in ANFIS, both the learning capabilities of a neural network and reasoning capabilities of fuzzy logic were combined.The architecture of ANFIS with two input variables is shown in Fig. 5and the fuzzy-reasoning mechanism illustrates as follows:Rule 1: IF x is A1 and y is B1, THEN f1=p1+q1+r1.Rule 2: IF x is A2 and y is B2, THEN f2=p2+q2+r2.The function of each layer is described subsequently:Layer 1The first layer of this architecture is the fuzzy layer. Each node of this layer makes the membership grad of a fuzzy set. Every node in this layer is an adaptive node with a node function.Oi1=μAi(x)where x is the input to node I, and Aiis the linguistic label associated with this node function. Premise parameters change the shape of the membership function.Layer 2Every node in this layer is a circle node labeled ∏, representing the firing strength of each rule, which multiplies the incoming signals and sends the product out. i.e. ∏-norm operation:Oi2=μAi(x)×μBi(y),i=1,2Layer 3Every node in this layer is a circle node labeled N, representing the normalized firing strength of each rule. The ith node calculated the ratio of the ith rule’s firing weight to the sum of all rule’s firing weights:Oi3=w¯i=wiw1+w2,i=1,2The outputs of this layer are called normalized firing strengths.Layer 4Every node in this layer is an adaptive node with a node function, indicating the contribution of the ith rule towards the overall output.Oi4=w¯ifi=w¯i(pix+qiy+ri),i=1,2wherew¯iis the output of layer 3, andpix+qiy+riis the parameter set.Layer 5The signal node in this layer is a circle node labeled ∑, indicating the overall output as the summation of all incoming signals calculated, i.e.Oi5=∑iw¯ifi=∑iwifi∑iwiThere were five layers in this model, including input, input membership function, rule, output membership function and output. The data set used in ANFIS model was the first sets of data.MATLAB R2008a with adaptive neural-fuzzy inference system toolbox was employed. There are two model building methods in MATLAB ANFIS toolbox: grid partition and subtractive clustering. With the number of inputs growing in the grid partition model, the membership function shows exponential growth. Exponential explosion leads to a paralyzed calculation system. By using the subtractive clustering method, it was easy to generate an input–output rule model and without an exponential explosion. Nonetheless, the parameter setting was arbitrary which leads to an increasing workload. There were four parameters in the subtractive clustering method: range of influence, squash factor, accept ratio and reject ratio. There was no effective instruction in setting initial parameters so far. A lot of work must be done to achieve convergence, according to training samples.The orthogonal test was conducted in this study, aiming to find out guidance on the initial parameters setting. The solution of this issue will promote the application of ANFIS.As can be seen in Table 4the orthogonal design scheme was used to find out the best initial parameters.

@&#CONCLUSIONS@&#
