@&#MAIN-TITLE@&#
Minimising total tardiness for a single machine scheduling problem with family setups and resource constraints

@&#HIGHLIGHTS@&#
We present a new single-machine scheduling problem with family setups and resource constraints.The problem is motivated from a real-life problem in the steel industry.We present mathematical formulations and heuristic approaches for two variants of the problem.The heuristics can be used for a variety of multi-stage production processes with arbitrary supply and demand rates.

@&#KEYPHRASES@&#
Single-machine scheduling,Family scheduling,Tardiness minimisation,Resource constraints,

@&#ABSTRACT@&#
This paper considers a single machine scheduling problem in which each job to be scheduled belongs to a family and setups are required between jobs belonging to different families. Each job requires a certain amount of resource that is supplied through upstream processes. Therefore, schedules must be generated in such a way that the total resource demand does not exceed the resource supply up to any point in time. The goal is to find a schedule minimising total tardiness with respect to the given due dates of the jobs. A mathematical formulation and a heuristic solution approach for two variants of the problem are presented. Computational experiments show that the proposed heuristic outperforms a state-of-the-art commercial mixed integer programming solver both in terms of solution quality and computation time.

@&#INTRODUCTION@&#
In this paper we study the problem of scheduling jobs on a single machine with the goal of minimising total tardiness. Each job has a given processing time, a due date, and belongs to a given family. The machine can only process one job at a time and each job must be processed without preemption. A setup task has to be conducted between jobs belonging to different families and during this setup the machine cannot process any job.The problem studied in this paper, each job requires a certain amount of a common resource that is supplied through upstream processes. At any time, the cumulative consumption must not exceed the cumulative supply. Therefore, jobs may have to wait due to an insufficient availability of the resource.Fig. 1 illustrates the implication of the resource constraints. The figure shows the cumulative amount of resource supplied and the cumulative amount of resource required over time. The cumulative amount of resource supplied is shown as a linear curve with a constant supply rate. The cumulative resource demand over time is shown as a piece-wise linear curve that increases whenever a job is processed. The dotted vertical lines illustrate completion times of individual jobs. Horizontal segments of the demand curve illustrate times during which the machine has not yet started processing the next job, e.g. because a setup is conducted. As the cumulative amount of resource required must not exceed the cumulative amount of resource supplied at any time and because each job must be processed without preemption, the machine may also have to be idle before starting to process a job due to limited resource availability.Our work is motivated by a practical problem arising in the continuous casting stage of steel production. A continuous caster is fed with ladles of liquid steel. Each ladle contains a certain steel grade and has orders allocated to it that determine a due date. Whenever two ladles of similar steel grade (within one setup family) are processed consecutively, no setup process is necessary. However, a setup is required whenever changing to a steel grade from another setup family. The liquid steel is produced from hot iron supplied by the blast furnace with a constant rate. The sequence of ladles, including setups between ladles of different setup families, is not allowed to consume more hot metal then supplied by the blast furnace (see e.g. Box & Herbe, 1988).Similar situations occur in multi-stage production processes, where upstream work systems supply the common resource that is consumed by the jobs produced on the machine. Examples can be found in assembly processes where parts and components provided by an upstream stage are used to assemble different products (e.g. Drótos & Kis, 2013, cutting pieces from a steel slab).The remainder of this paper is organised as follows. Section 2 gives an overview of related work. Section 3 contains a detailed description of the problem and presents MIP formulations for two variants of the problem. In Section 4 we present an iterated local search approach for solving the problem. Section 5 presents computational experiments before final remarks are given in Section 6.

@&#CONCLUSIONS@&#
