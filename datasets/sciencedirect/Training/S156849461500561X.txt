@&#MAIN-TITLE@&#
Immuno-inspired robotic applications: A review

@&#HIGHLIGHTS@&#
Immunity-based robotic applications are reviewed according to immunological models; old and new.Mathematical details of reported literature are tabulated genealogically.Issues pertaining to validity of immunological models are raised.We have suggested immunological equivalents of various support functions in these applications.Modern trends in robotics are emphasized in conjunction with those in immunology.

@&#KEYPHRASES@&#
Artificial immune systems,Mobile robots,Idiotypic network,Clonal selection,Danger theory,

@&#ABSTRACT@&#
The ability of artificial immune systems to adapt to varying pathogens makes such systems a suitable choice for various robotic applications. Generally, immunity-based robotic applications map local instantaneous sensory information into either an antigen or a co-stimulatory signal, according to the choice of representation schema. Algorithms then use relevant immune functions to output either evolved antibodies or maturity of dendritic cells, in terms of actuation signals. It is observed that researchers do not try to replicate the biological immunity but select necessary immune functions instead, resulting in an ad-hoc manner these applications are reported. On the other hand, the paradigm shift in robotics research from reactive to probabilistic approaches is also not being reflected in these applications. Authors, therefore, present a detailed review of immuno-inspired robotic applications in an attempt to identify the possible areas to explore. Moreover, the literature has been categorized according to the underlying immuno-definitions. Implementation details have been critically reviewed in terms of corresponding mathematical expressions and their representation schema that include binary, real or hybrid approaches. Limitations of reported applications have also been identified in light of modern immunological interpretations including the danger theory. As a result of this study, authors suggest a renewed focus on innate immunity, action contextualization prior to B/T cell invocation and behavior evolution instead of arbitration. In this context, a multi-tier immunological framework for robotics research, combining innate and adaptive components together is also suggested and skeletonized.

@&#INTRODUCTION@&#
The biological immune system (BIS), consisting of a large number of cells and molecules and their interconnections, works to protect its host from invading infectious agents, known as pathogens. Immune responses to invading pathogens are triggered by the recognition of antigen. The adaptive part of BIS handles the invading bacterium or viruses by adapting to varying pathogens, in an antigen-specific manner. Whereas, the innate immune system handles common bacteria in a non-antigen-specific approach. Immunologists have presented a number of models over the years and are still in a process to fully interpret the working of BIS. It is, however, obvious that a BIS possesses a wide range of useful functionalities which can be translated computationally to develop artificial immune systems (AIS) [1]. Researchers, in this context, have successfully exhibited self-organization [2,3], learning [4], adaptation [5], recognition [6,7], robustness [8] and scalability [9,10] using AIS approaches. Therefore, an AIS is defined as an adaptive system that is inspired by theoretical immunology and observed immune models, which are applied to problem solving [11,12].Robotic systems are considered a suitable choice among researchers to test the extents of their bio-inspired algorithms – including immuno-inspired approaches. Such systems can be wide ranging but mostly mobile robots are employed to navigate through different environments and scenarios e.g. mazes, maps and obstacle-filled arenas. Robot navigation, through these scenarios, can be classified as either using global path planning or local reactive approach. Global path planning [13] needs prior knowledge of the environment in which robot has to navigate. However, most real world problems are inherently unstructured and thus all the knowledge may not be known ahead of time. On the other hand, local reactive navigation approach [13] uses the local instantaneous information from sensors to help navigate the robot. It gives directives to handle the local situation in terms of steering directions, thus eliminating the need of a-priori knowledge of environment. However, this approach does not necessarily guarantees the solution nor its optimality.A typical navigation experiment demands a robot to successfully arbitrate different behaviors of wander, obstacle avoidance, target seeking, etc. Brook's subsumption architecture [14] defines a behavior-based reactive approach to control mobile robotic systems allowing intelligence to emerge from behavior arbitration. AIS can be used in conjunction with this architecture to design effective sense-act algorithms, benefiting from subsuming immune functions to perform behavior arbitration. These immune functions can be based on one of many computational interpretations of BIS11Detailed in the subsequent section.ranging from earlier clonal selection theory [15] to the most recent danger model [16], solving the problem of global path planning [17] on one hand and augmenting the behavior stack to reactively navigate the robot [18] on the other.Current trends in mobile robotics are more inclined towards heterogeneity and consequent problem of coordination/cooperation among robots of various capabilities [19–21], over and above the classic problem of navigation in unknown environments. Other problems include, but are not limited to, probabilistic robotics [22], behavior evolution [23], collaboration [24] and conflict resolution in multiple behaviors [25,26]/resources [27]. Such problems are testing the extents of control/navigation algorithms. It is, therefore, important to review immuno-inspired robotic applications in the light of emergent aspects of BIS and newer trends in robotics. It is equally important to explore the possibility of using probabilistic nature of chemotaxis, regulatory role of inflammation and hierarchical structure of immune responses, to name a few, in a synergistic way along with existing approaches, to handle the aforementioned robotic problems.The selection criterion for this review is based on Castro's layered framework [11] in which an AIS undergoes the processes of representation, affinity measures and immune algorithms to solve a problem in application domain, as shown in Fig. 1. Robotic applications, using AIS as a core algorithm, generally use the same framework. This review, in addition to using the framework as a selection guideline, also tabulates the underlying mathematical abstractions of the reported literature on a similar structural format. However, some applications do not follow the framework by either avoiding the underlying details or using AIS only as a metaphorical explanation of their algorithms; those are resultantly skipped in this review.Subsequent section aims to equip the audience with necessary immunological background and also details out the computational interpretation of various AIS models along with their corresponding general algorithms. Section 3 categorizes the reported robotic applications in terms of their AIS definitions and underlying mathematical details, in addition to identifying the pros and cons of individual approaches. Section 4 presents a discussion to identify the established results as well as the areas that require further investigation.There are a number of definitions of BIS-working and research is still being undertaken by immunologists all over the globe. The goal of immuno-inspired computational research, on the other hand, is to translate these definitions to solve problems. Clonal selection theory [15] is the oldest definition that interprets the working of B cells in a BIS. It was augmented by theory of negative-selection to describe the phenomenon when BIS chooses not to respond, to give rise to self-nonself theory [28]. Immune network theory [29], most commonly used in robotic applications, defined the working of antibody network that enables antibodies to recognize each other, in addition to antigen recognition. Recent major development in immunology is the inclusion of danger theory [16] to construct a three signal approach to handle invading pathogens in dangerous/stressed situations. Following subsections, in this context, briefly define the AIS models that are commonly employed in reported robotic applications.Clonal selection (CS) theory is one popular explanation of how B and T lymphocytes improve their response to presented-antigens in order to acquire immunity through affinity maturation. Selection is inspired by the antigen–antibody-affinity. It states that B-cells divide when an affinity is present between stimulating antigen's epitope and B-cell receptors. These cells then mature into plasma cells and secrete antibodies. Antibodies with higher affinities are then reproduced through somatic hypermutation of B-cells. Paratopes on antibodies and epitopes on antigens work as key–lock mechanism (complement cascade) to help other cells to eliminate antigens. Immune system retains some matching B-cells as memory cells. Moreover, it adapts by building up concentrations of B-cells as well as maintains a diversity in mutating these cells in the bone marrow [30]. Fig. 2, constructed from various sources including [31,32], provides a description on the working of B-cells once antigen is presented to it.It is important to mathematically interpret affinity between antigen and antibody. Selection, ordering and subsequent reselection of antibodies or mutated antibodies is solely done on the basis of affinity scores. It acts similar to fitness function in genetic algorithms (GA). AffinitiesAfiare application specific but generally can take the following form.(1)Afi=A∑i=1Ndi+cβiwhere diis distance between presented antigen and selected antibody and βican be defined in terms of available auxiliary data. Commonly, the distance is translated in terms of euclidian or hamming distances based on real or binary representations, respectively. Clonal selection is adaptive and works on the principle of antibody evolution through somatic hypermutation. The results of affinity computations, using Eq. (1), are sorted in ascending order which is followed by reselection on basis of best-population-size and subsequent maturation using Eq. (2). Each antibody in selected-and-ordered-best-population is then cloned as described in Eq. (3). These clones are then projected within the solution bounds. Affinities are computed again and resulting best clones are selected. Selected best clones then replace the antibodies in initial antibody matrix.(2)μi=K1e−K2·Afi(3)Ci=Ai+γμi·rand(.)In this expression, μiis antibody maturation rate, K1 is maturation constant and K2 is maturation decay factor. Whereas, CiandAfiare clones and affinity of ith selected antibody respectively. γ is scaling factor for random number generator in the cloning expression. There can be other variants of maturation and cloning expressions (Eqs. (2) and (3)) on the basis of corresponding representation schema.For a comprehensive computational detail on clonal selection, reader is referred to White and Garrett [33]. Garrett [34] also presented an alternative representation to combine several B-Cell representations in an attempt to combine the clonal selection and immune network approaches in a generic network.Although there are a number of variants of CS-based algorithms, following Table 1is one generic algorithm. It starts with the initialization of antibody parameters. An antibody matrix is specified at this stage by including the initial solution candidate as well as randomly generated antibodies. Best antibodies are then selected on the basis of affinity evaluation. Affinity function uses the information of antibody and antigen and calculates the affinity on the basis of selected function e.g. boolean operators, euclidian/hamming distance or a user defined function. A number of relevant string matching rules are also listed by Dasgupta [1] for interested readers. The premise of these definitions is to use a function that best incorporates the key–lock mechanism of antigen–antibody interaction. The rest of algorithm follows the procedure described in previous subsection.Clonal selection theory does not explain the working BIS in absence of invading pathogens or suppression of certain immune functions. Jerne's immune-network theory [29], also known as idiotypic network (IN), proposes the possible explanation. It suggests that an antibody possesses a unique idiotope, similar to epitope, so that other antibodies can recognize it. The group of antibodies that share common idiotope belongs to one idiotype. This theory also states that once an antibody's idiotope is recognized by paratopes of other antibodies, it is suppressed. Consequently, antibody concentration is reduced. Similarly, once an antibody's paratope recognizes idiotopes of other antibodies or epitopes of antigens, it is stimulated. Antibody concentration is increased as a result of this stimulation. In other words, this theory tries to explain the communication between antibodies via collective dynamic network of stimulative and suppressive interactions, suggesting a continuous communication even in the absence of antigens. This is in contrast to the antibody–antigen-only interactions of clonal selection theory. It is because of this notion that cells within an immune system can recognize each other, in addition to recognizing antigens, this theory is applied on a number of different applications ranging from internet security to mobile robotic systems. Fig. 3illustrates the network of antibodies using idiotypic connections.Jerne's idiotypic network theory [29] was translated into a computational model by Farmer et al. [35]. The following differential equation was proposed for antibody concentrations Aiwith respect to all the stimulatory and suppressive effects as well as the natural death rate.(4)Ai˙=αa∑j=1Namijaj−αs∑j=1Namjiaj+∑k=1Ngnikyk−λiai(5)ai=σ(Ai)=1τi+exp(−Ai),∀i=1,…,Na.It is defined for Naantibodies and Ngantigens. First sum in Eq. (4) represents the antibody-stimulation in response to the other antibodies Aj(idiotope–paratope connection). It is termed as stimulus1 in the subsequent sections. Second sum represents the suppression of antibodies Aiin response to other antibodies (paratope–idiotope connection). Third sum models the antibody-stimulation in response to all antigens (paratope-epitope connection) and is termed as stimulus2. The last term in expression shows the antibody-death-rate. The resulting antibody concentration rate depends on the collisions between antibody Aiand antibody Ajwhich is proportional to aiaj. Eq. (5) is a squashing function that controls the size of Ai.Jerne's network theory has some critics as well. It is argued that a very large antibody population limits the network size in idiotypic suppressions [36]. Similarly, the network structure in terms of its symmetry has its own share of arguments [37].There can be a number of variants of IN-based algorithms. The following Table 2is the core algorithm that generally is common to all variants.Newer definitions of self-nonself models, including the danger theory (DT) by Matzinger [16], are extensions of earlier clonal selection theory of antibody production of activated B-cells. Matzinger explains how an immune response is initiated. The theory presents a three signal model to explain the working of biological immunity in stressed situations. It describes that a co-stimulatory signal from dendritic cells activates the T-helper cells. These dendritic cells of immune system, also termed as antigen presenting cells (APCs), are themselves activated by danger signals emitted by the injured/stressed cells. Once activated, they provide a co-stimulatory signal to exhibit the innate/adaptive immune response. Furthermore, the dendritic cells can be immature, semi-mature and mature. The immature dendritic cells collect antigens along with safe and danger signals from its local environment like pathogen associated molecular patterns signals (PAMPS) and inflammatory cytokines. If the environment is safe, the dendritic cell becomes semi-mature and upon presenting antigen to T-cells it causes the T-cell-tolerance. On the other hand, if the environment is dangerous, it becomes mature and causes T-cell-reactivity. Fig. 4illustrates the maturity of APCs resulting from danger signals and consequent co-stimulation of the T-cells.Computational interpretations and consequent algorithms, inspired by the danger theory, are still in their infancy. There are two interpretations following introductory work of Aickelin et al. [38]: one is the dendritic cell algorithm (DCA) by Greensmith et al. [39] and the other is toll-like-receptor algorithm (TLR) by Twycross [40]. Both use different aspects of danger theory. DCA introduces the underlying translations of PAMPS, safe and danger signals resulting from maturity of dendritic cells with the help of co-stimulatory molecule (CSM). These signals are buffered as well as the antigen. DCA, on the basis of dendritic cell maturity and migration threshold, sets the cell context. Eq. (6), in one possible configuration of output (Op), thus contextualizes the environment which then arbitrates the immune responses. An algorithm is also presented in Table 3.(6)Op=βwP∑i=13Pi+wD∑i=13Di+wS∑i=13Si,∀pThe output (Op), for each dendritic cell in population (p), depends on pathogen associated molecular patterns (Pi), danger associated molecular patterns (Di) and safe signals (Si) as well as on weights(wX)of each signal-type (X={P, D, S}).At the heart of danger model of immunology is the antigen presenting cells (APC)/dendritic cells. The core of DCA is presented here in Table 3. It is a population based algorithm that uses the concept of immune-function-initialization in a three signal model.In literature, AIS-based robotic applications tend to simulate robot control around small, artificial environments, generally addressing the problems of behavior arbitration and autonomous navigation (e.g. [41,42]). These environments are generally programmed as fixed and depicted as arenas where robots have to perform. Subsequent discussion categorizes the reported immuno-inspired robotic applications in four categories. The first category lists the applications using clonal selection as central algorithm, the second details those with immune network, the third describes those with danger theory and the fourth category details those with hybrid/implicit definitions under other approaches in both innate and adaptive immunities. Fig. 5shows a genealogical chart of these categories according to their parent immune categories: innate or adaptive. The discussion is further augmented with the help of underlying mathematical expressions of different approaches in Tables 4–6.Only a small number of robotic applications in reported literature are inspired purely by the clonal selection theory. There exist different variants of CS-algorithms, which are mainly due to variations in the definitions of antigen–antibody strings, affinity computations and auxiliary functions. The underlying details of these CS-based robotic applications are tabulated in Table 4, according to the skeleton set forth by Castro's framework [11]. The following text briefly discusses the reported applications – one at a time – and should be read in conjunction with the details in Table 4. Computational efficiencies of these approaches are important but mainly depend on the string-lengths and population size of mutated antibodies during the process.A global path planning application was developed by Hu [17] using CS approach. In this approach, antibodies are defined as a set of nodes that represent line segments from starting point to end point. Fitness function (affinity) is defined in terms of Euclidean distance (di) and obstacle information (βi) in the arena. Paths that intersect obstacles reduce the fitness value and consequent clonal selection finds the nodes towards the final destination. Global path planning has an inherent limitation of requiring a-priori information on the environment. Robot navigation, resultantly, has gone through a paradigm shift and uses variants of reactive or hybrid approaches which perform better in unknown or partially known environments. Hu's implementation also lacks antigen representation which is a must for any AIS abstraction.Wang and Hirsbrunner [43] developed an immune-mechanism-based evolution algorithm (IMEA) in an off-line robot navigation task, in an attempt to avoid premature convergence during navigation, and compared it with a genetic algorithm approach. IMEA combines the concepts of genetic algorithms (crossover and mutation) with those of clonal selection (memory-updation and selection). It is noted that this approach uses the concept of vitality (νi) to compute fitness function and is based on the least mean squared error between two selected paths. IMEA does not use the concepts of somatic hypermutation and cloning to evolve the solution but relies on the concepts of GA, instead.Another CS-inspired application was developed by Li et el. [44] for concurrent mapping and localization (aka SLAM in modern literature) in order to search the space for possible robot maps. This approach does not use the metaphors of antigen or antibody but chooses chromosomes to represent change in distance and orientation as in GA. It then uses the CS for mutation purpose only. In its fitness function, described in Table 4,w1andw2are real numbers in the range of (0, 1) and if (Oij>0.5) then {δij=1} else {δij=0}; and if (Eij>0.5) then {ζij=1} else {ζij=0}.Wang and Hirsbrunner and Li et al. both have used GA-based crossover operators in their applications. In nature, however, BIS does not use crossover [45] which raises a question on validity of such implementations. It is worth noting that the CS-algorithm and its variants are equally effective, if not better, in optimization tasks (e.g. as reported in [33]). A framework for establishing convergence of immunity-based algorithms is also presented in [46] and a comparative analysis is presented in [47], for various test functions. The representation of antigen and antibody is also not explicitly defined and justified in Li's work [44]. The benefit of using a robotic application lies in its embodiment and it should, therefore, be reflected in corresponding representation schema.Hur [48] developed a multi-robot system, for a bomb disposal task, using CS-based antibody evolution to update a lookup table (memory) that lists solutions corresponding to different states. Three robots, named as scanner-bot, inspector-bot and diffuser-bot, maximize the number of bombs found, inspected and diffused, respectively, in addition to maintaining energy levels through affinity computations. The underlying definitions are given in Table 4 in which affinities are computed through assigning weights (wi) to a number of certain soft constraints (ni). Number of clones (Nc) is proportional to the affinity of individual antibodies in population N. Once clones are produced, it is followed by the maturation and reselection stages to update the lookup table.Some robotic applications use clonal selection principle as an auxiliary function or as a metaphor only e.g. Chingtham and Nair [49] tried a two robot line tracking system using two concentric tracks. Outer robot uses the innate immune system to help inner robot to avoid sway and inner robot uses CS to adjust its speed on track. Its literature does not describe the mathematical representation of underlying principles. A similar application by Jun et al. [50] used CS metaphors to augment an immune network, only to transfer strategy between individual robots.Immune network is the most widely used immunity-based approach in robotics because it explicitly structures all the interactions between antibodies and antigen and their resulting network. Authors have subdivided the robotic applications in this category in terms of their parent technique, as illustrated in Fig. 5. The representation schema of antigen and antibody, affinity computation and antibody selection criterion is presented in Table 5 along with the details of experiment. Table 6 provides mathematical expressions for stimulations and suppressions in the network along with the details of corresponding auxiliary functions, cloning and metadynamics. These tables along with the general algorithm for immune network, detailed in Section 2.2.2, are sufficient to recreate the specific robotic application.This subcategory deals with binary representations for antigen and antibody. Resultant networks use Hamming distance as primary criterion for affinity computation. Consequently, antibodies are selected on the basis of their respective concentrations. The underlying principle of suppressions and stimulations follow Farmer's representation with minor differences. The details of the corresponding mathematical abstractions are listed in Tables 5 and 6.The first application in this subcategory is a six legged robot developed in 1995 by Ishiguro et al. [51], using an IN-based approach to acquire a gait. Each leg is incorporated with a local immune network (LIN) having four antibodies. Each antibody represents specific gait behaviors namely: backward, retract, forward and protract. Paratopes and idiotopes of all the antibodies are pre-assigned as to either support or transfer. This LIN is evolved using GA in which a winner-takes-all approach is used to select antibodies. Two types of antigen are incorporated: one to input the situation, the other to represent the coordination among local networks. Experimentation is limited to forward movement only in which 18 iterations of GA established a no-fall situation. This work by Ishiguro et al. is considered as a first attempt towards physical application of idiotypic network but ad-hoc antibody/antigen allocation restricts such systems to low complexity.Ishiguro et al. [52,53], in 1996, also proposed a decentralized behavior arbitration scheme to navigate a mobile robot to replenish energy, avoiding obstacles in an arena. It is noted that paratopes are modeled as desirable actions with preassigned definition of action. Idiotopes are modeled as identification numbers that are assigned according to the results of an adjustment mechanism (reinforcement). Antigens are pre-massaged in terms of object information, direction of object and current energy state. Experimental results, however, show limited results of an 18-antibody network that enables the robot to avoid one obstacle to reach the charging station. Antibody selection is done using a roulette-wheel method. It is also noted that the network does not make use of antibody meta-dynamics but uses an adjustment mechanism to select an idiotope-ID.It is noted that Jerne's idiotypic theory defines the idiotype in terms of a physical connection, like that of a key–lock, to identify each other. However, a BIS can open a number of locks with one key. Although the analogy is weak, antigen/antibody allocation in Ishiguro's initial work does not incorporate this phenomenon. Moreover, his approach also avoids use of unstructured environment in simulations. Ishiguro's work was extended by Watanabe et al. [54] to include an off-line innovation function. This innovation function is based on a genetic algorithm with a mixing pot method for crossover operator. It is noted that antibodies are retained as behavior modules. The initial problem was also extended to add garbage collection behavior in addition to existing obstacle avoidance and energy replenishment behaviors. The drawback of this approach, as well as of Ishiguro's, is the definition of antibodies as behavioral modules. This approach forces one to define behaviors ahead of time with no possibility of behavior inclusion/evolution later on.Ishiguro's model was further improved by Michelan and Von Zuben [55] by incorporating a GA-based antibody evolution mechanism. In this upgradation, idiotopes are modeled as a set of stimulated antibodies for the network. Antibody affinity is computed on the basis Hamming-distance evaluation. GA-based adjustment mechanism uses a 40% crossover and 1% mutation with elitist selection. Fitness function is based on the number of collected-and-transferred garbage, recharges and collisions. It should be noted, however, that a BIS has an inherent mechanism to clone antibodies using somatic hypermutation. The above mentioned models use other algorithms for similar purposes. This raises a question on the degree of AIS implementation.The garbage collection application was once again attempted by Vargas et al. [4] using a learning classifier system in addition to the existing platform provided by Michelan and Von Zuben. This model, named CLARINET, adds a learning classifier system to classify antigens and antibodies. Antibody structure is, however, restructured in terms of antecedent and consequent parts to represent paratopes and antibody connections to represent idiotopes. This addition makes antibody network more flexible but requires more computation effort as classifiers are updated both before and after the immune network dynamics. They also implemented the GA-based immune network on Khepra robots [56].Krautmacher and Dilger [57] tried to implement a simplified rescue scenario, involving a single robot. Antigens are binary-coded information of object type and position. The algorithm then uses coordinate transformations for network dynamics in which no meta-dynamics is incorporated. The rest of the implementation is same as in Watanabe's approach.Wang et al. [58] used the IN-approach of Ishiguro in conjunction with obstacle restriction method (ORM) and reinforcement learning (RL). This application is a single-robot path-planning exercise in which two types of antibodies are defined: one to represent obstacle avoidance behavior and the other for goal-seeking. Antigens are defined as a binary-coded data of obstacles/goal in terms of task proximity (near or far). An expression similar to a T-cell metaphor, as in Luh et al. [59], is also used to help suppress either of the behaviors. This also replaces the need to define stimulus2. It is, however, noted that the network structure missed the cloning and meta-dynamics in its implementation.Tsankova et al. [60], in 2007, applied Ishiguro's network to implement stigmergy-based foraging behavior. Stigmergy is a mechanism of indirect coordination between agents or actors. The principle is that the trace left behind in the environment by an agent's previous action affects/simulates the performance of future behavior of the same or other agent. This work uses different scenarios to collect pucks with single/two robot(s), with one network for goal following behavior and one to pick and drop the pucks. The report also compares the results with Braitenberg's 3C and Q-learning robots. This research does not add to Ishiguro's interpretation however, the experimentation establishes a comparative analysis with two well-known approaches.Whitbrook et al. [61] solved the maze-world problem with extensive experimentation using three approaches: RL, RL with simple idiotypic system and RL with full idiotypic AIS. The system uses 8 predefined antigens having priority levels assigned to pre-massaged data that translates sensor info into a situation. Sixteen (16) antibodies have predefined behaviors with speed specifications. Idiotopes are fixed while paratopes are predefined that have some adjustment flexibility through reinforcement. Affinity computation is done as in Vargas et al. [4]. It is noted that antibody meta-dynamics is not implemented. Moreover, system uses a-priori information in antigen, antibody and idiotope matrices with limited adjustability of paratopes. Although results show that robot with full feedback performs better in terms of escaping traps by establishing idiotypic network, the system should be able to adjust its internal values automatically either through T-helper cells or through antibody evolution.She further extended her work by incorporating GA to evolve behaviors [62]. This GA supported long term learning (LTL) combined with short term learning (STL). The idiotypic immune network was tested against STL only approach in [63,64]. The underlying notion that AIS can only exhibit short term learning can be questioned as it is dependent of the system's meta-dynamics that can be adjusted to retain memory for a longer period.A swarm intelligence task involving multiple robots was executed by Lee et al. [65]. In this application, task density, either high, medium, low or nil, is represented as an antigen. Antibodies are defined as four distinct behaviors of aggregation, random search, dispersion and homing. Sensors detect the task concentration which is then used in a fuzzy inference system (FIS) to output a stimulus-value for Farmer's equation. The resulting concentration is then used to stimulate other robots to do the same task. Metaphors of plasma and deactivated cells are used to incorporate some level of meta-dynamics. This approach suffers from the inherent problem of a-priori behavior specification. Jun et al. [50] extended this work by incorporating T-cell metaphor to represent control parameters. This adds another layer in the network and resets the antibody concentrations once an antigen is removed.Li and Wang [66] used the idiotypic network theory to implement a sheep-and-dog problem using predefined coefficients to compute affinities. In this application, antibody network dynamics is replaced by an algebraic expression that takes into account the usual stimulations and suppressions along with a T-cell function and a linear death rate. The environment is translated into antigens by tabulating positions of dog and sheep in a matrix X. The antibody matrix Y also has previous information of actions corresponding to each entry in the antigen matrix X. Only five actions are possible. This research does not make any distinction between sheep and dog in terms of their embodiment/morphology. Moreover, the network uses a manual mechanism to perform coefficient selection that limits its adaptability.An extension of this work was performed by Duan et al. [67] to perform a predator–prey experiment with two predators and one prey, each having a small antibody network that can communicate with each other except in pursuit-domain. Antigens are of two types: one has the environment information in terms of position data and other handles the communication signals. Two different antibody structures are implemented for predator and prey robots. Predator has six actions to arbitrate from while prey has three behaviors to choose from, on the basis of synthesized immune network as in Li and Wang [66].Luh has presented three different applications that use different immune metaphors. Broadly, his approach is based on real data representation schemes, contrary to Ishiguro–Watanabe stream. This results in different matching/affinity functions. In 2002, he with Cheng [68] presented a food-foraging application that uses APC modules to assess the environment and T-cells as a RL mechanism. T-helper-cells are used as an adaptive critic. Luh et al. [59], in 2006, implemented a robot-soccer application using immune network. The antigen is sensor information mapped to have three components: the first is distance between ball and goal, the second is distance between ball and robot and the third is crowd data. Each of these components corresponds to a fuzzy function to find affinity value. Average of all three affinities, through fuzzy membership functions, is computed in terms of a 6×6 affinity matrix. A T-cell function is incorporated that acts as a reinforcement. Antibody meta-dynamics is not implemented since there is no repertoire maintained as memory. Zhang and Lu [69] reproduced this approach using four antibodies instead of six for each robot.He with Liu [41], in 2008, solved the robot navigation problem using the reactive-IN approach with fused data representation. The antigens are vectors of azimuthal angle of goal, distance information of each sensor and sensor location on the robot periphery. Antibodies are defined as steering directions (θi). Stimulation and suppression due to antibody–antibody interactions is defined as cosine of the difference between antibodies. Stimulation due to antigen interaction is defined in terms of attractive/repulsive forces of goal seeking and obstacle avoidance. In order to escape robot from trapping in local minima, a virtual target method is also used. The weighing mechanism of attractive/repulsive forces is manual. Therefore, it is not clear that how a robot manages to arbitrate the two behaviors.Dehuai et al. [70,71] modified the work of Wang et al. [58] by defining antigens in terms of task density (high, low or none) and combining antibody structure in one representation. It is also noted that Farmer's equation is not solved by an ODE solver but antibody concentration rate is related directly to behavior modules. Moreover, Hamming distance is replaced with Luh's expression of cos(Δθ) to define antibody stimulation and suppression. This application is also a single-robot path planning exercise in which two types of antibodies are defined: one to represent obstacle avoidance behavior and the other to seek goal behavior.Mitsumoto et al. [72,73] presented an IN-based approach to control a population of multiple robots according to assigned task of load transfer from one station to two storage docks. Each task assignment is treated as an antigen that disturbs the existing population of robots. The algorithm then reconfigures to attain new stability (homeostatic state) by sharing message-antigen with other robots. Each robot, treated as a B-cell, has predefined modules to set global states and their behavior strategy. Resultantly, the network is limited only to regulate robot population.Similarly, a mine detection task was accomplished by Sathyanath and Sahin [74] and Opp and Sahin [75] using a non-idiotypic approach. It performs a single objective task with fixed number of robots. Antigens are modeled as mine locations whereas antibodies are defined as robots. The communication between antibodies is a network that provides antigen-locations. Robots are, resultantly, stimulated to move toward the mines in order to defuse them. Suppression is implemented when no antigen is detected and results in random movement. This is unlike Farmer's interpretation of Jerne's idiotypic network theory that ensures communication even in absence of antigen.Generally, it is because of the notion that cells within an idiotypic network can recognize each other, in addition to recognizing antigens. The IN-approach is applied on mobile robotic systems (MRS). Any change in environment is detected as an antigen. Possible steering directions/behavior-modules are represented as antibodies. The most stimulated antibody (resulting from immune network approach and supplementary methodologies) is fed to the system as an actuation signal.Danger theory is a newer definition of BIS-working and, therefore, only a few robotic applications are reported in this category. Dendritic cell algorithm (DCA) by Greensmith [39,76,77] incorporates only one aspect of danger theory. It mimics the working of antigen presenting cells within a BIS and, therefore, requires other immuno-functions to fully implement a three signal model.Oates et al. [18] used DCA in a mobile robotic security application for classification purposes. Augmenting the subsumption architecture, the robotic DCA is implemented as a stand-alone behavioral module. DCA processes the sensor data as antigens and generates signals that are either safe, dangerous or PAMP[38]. The output of the DCA provides a base for subsuming the behavioral modules. It is to be noted that in subsumption architecture, there is a disagreement among various behavioral modules e.g. react to bumpers, recover from stall, avoid obstacles and explore. Brooks [14] suggests that this can be solved by allowing components at one level to subsume components at a lower level. It is because of this reason the approach is called subsumption architecture. This application, however, is a classification problem that does not fully incorporate the behaviors necessary for navigation through a maze.Prieto et al. [78] implemented a preliminary work that uses DT on a metaphorical level only and lacks the necessary mathematical interpretations. His application is a soccer-goalkeeper strategy in which APCs are ID of predefined strategy whereas antigens are composed form the detection of opponent and ball in the home side. Signal one, two and three correspond to the respective closeness of the ball to the goal.This section lists the robotic applications that do not fall in a single BIS category or lack the basics of a particular definition. Xiong et al. [79] implemented a multi-robot system that maps an environment on the basis of market approach. The function of immunity is limited only to optimize the strategy to select goal points during exploration. Auxiliary functions are used for other operations like Bayes theorem for data fusion and diffusivity for robot distribution in arena.Similarly, the approach of Yuan et al. [80] claims to combine artificial potential field (APF) method of Khatib [81] with Jerne's idiotypic network theory but fails to specify antibody dynamics. Representation scheme is binary valued whereas obstacles and goal are separately coded into it. It also uses antibody vitality along with a learning strategy to execute a path planning task.It is important to note that some aspects of BIS are still being investigated. Clonal selection theory, the oldest of considered theories, focuses on one-signal approach in which antigen binds with receptors on a B-cell. Danger theory, the newest in self-nonself approaches of BIS, follows a three-signal approach as shown in Fig. 4. This transition from one-signal approach of CS-theory to three-signal explanation of DT, alongside a renewed focus of innate immune system, is not always reflected in recent publications on immuno-inspired robotic applications. Moreover, one should not be overly critical of a particular choice of immunological interpretation but, at the same time, researchers should attempt to use the most recent and agreed-upon immunological model in future.There exists a researcher's dilemma to decide the extent of biological inspiration, mathematical abstraction and consequent computational cost vis-à-vis the difficulty level of the problem under consideration. The decision may become more difficult when a set of theories explain different aspects of a complex phenomenon. The same can be said for immuno-inspired applications. It is highlighted that computational replication of the whole BIS to solve a relatively simple problem is not desired but, at the same time, one should not fall victim to a single aspect of BIS as well.Literature indicates that some auxiliary functions or subsystems are also required to support the core algorithm, like reinforcement learning, fuzzy systems and/or genetic algorithms. It would be more appropriate to use a computational equivalent from within BIS, if available. For example, nature uses somatic hypermutation to evolve antibodies but some researchers have used GA instead (e.g. [4,55]). It would have been logical to use what nature has chosen for a particular purpose. Similarly, some researchers have used RL (e.g. [53,58]) when nature uses a similar approach of T-helper-cells. It is, therefore, identified that the degree of biological inspiration can be deeper than some applications show it to be. Moreover, there should be investigations to establish that BIS-inspired auxiliary function(s) can be as effective as some other(s).Authors, in Fig. 6, have constructed a bigger schematic to show the working of BIS, combining all the aforementioned immunological approaches. Here, the ellipses with identification symbols indicate the general area of inspiration for a specific stream of publications. It is visible that the reported approaches only partially implement the immune-functions. In later discussion, the idea of an all-encompassing immunological framework will be introduced in this context as well.The following subsections illustrate the general findings pertaining to afore-mentioned AIS approaches. It is highlighted once again that individual merits and limitations of each approach have already been discussed in Section 3.Wang and Hrisbrunner [43] and Li et al. [44] used GA-based crossover operators in their applications. In nature, however, BIS does not use crossover; it uses somatic hypermutation to alter the clones, instead [45]. Without sounding like a purist, this raises a question on validity of such auxiliary functions. Especially when it has been established that CS-algorithm and it variants are equally effective, if not better, in optimization tasks (e.g. [33]). A framework for establishing the convergence of immune algorithm is also presented in [46] and a comparative analysis is presented in [47] for various test functions. It is also observed, in some of the applications, that the representation of antigen and antibody is not explicitly defined and justified. The benefit of using a robotic application lies in its embodiment and it should be reflected in corresponding representation schema.The major bulk of publications follows the idiotypic network theory. A generic structure of IN is shown in Fig. 7in the context of idiotypic connections in a typical robotic application. Antibodies are either evolved or generated by evaluating affinity functions. Mapping schema, affinity definitions and antibody specifications vary from application to application. The question, however, is to justify the use of a particular theory (idiotypic theory in this case) and to what extent a theory is applied.Major criticism on Jerne's idiotypic network theory is in relation to the size of its network [36]. This criticism arises from a basic argument that how can each antibody recognize every other antibody in a possible network of millions of cells (with current estimates of more than 1012 lymphocytes). These arguments are not countered in the observed robotic applications. It can, however, be argued that such applications do not typically require a network of millions of antibodies. In case of behavior arbitration, the network requires only a handful of antibodies. In case of multi-robot applications where robots are generally modeled as B-cells, the size of network does not exceed because of inherent limitations of cost and size of arena. However, if one wishes to delve into behavior–evolution instead of behavior–arbitration, the size of network and associated computational cost is expected to be big.Farmer's expression of antibody concentration rate (Eq. (4)) is common within idiotypic network theory, barring a few exceptions. It provides an explicit notation to stimulations and suppressions among antibodies and antigens. It, however, has different implementations in different research streams; e.g. a discretized version using bilinear transform is employed in Krautmacher and Dilger [57] and an algebraic equivalent, named as synthesized immune network, is used in Li–Wang stream, apart from the conventional approach of using an ODE solver. The choice of a particular implementation strategy or a solver is normally dictated by the computational requirements of an application. Recently, theoretical issues relating to different AIS algorithms are also being raised. For example, the small size of immune network in case of robotic applications induces an effect of discreteness, resulting in difficulties to analyze it using standard techniques [82].Ishiguro–Watanabe stream primarily shares a similar network structure but differs in the usage of auxiliary/support functions. It uses reinforcement learning, genetic algorithms, learning classifiers, etc. as auxiliary functions and does not establish a clonal selection in support to the network. Jerne's theory, on the other hand, is built upon clonal selection theory. A network-alone approach, like that of Ishiguro–Watanabe stream, reduces such system to a reactive one that has no evolution resulting from cloning and hypermutation. It perhaps is a result of behavior-arbitration/action-selection approach in which there are only a few preprogrammed behaviors to choose from. Li–Wang and Luh's streams also lack such implementations.It is important to devise a way to represent the environment into antigen (Ag). Similarly, paratopes and idiotopes of antibodies (Ai) should be encoded in such a manner that stimulation–suppression network can be incorporated. Representation of antigen and antibody can be binary (e.g. in Ishiguro–Watanabe stream) or real (e.g. other streams in IN-approach). A binary representation scheme, such as that of Ishiguro–Watanabe stream, structures the external and internal data along with the binary coded epitope. Similarly, paratopes & idiotopes on antibodies are binary strings alongside the pre-programmed actions. Subsequent affinity computations are based on Hamming distances as shown in Tables 5 and 6. Real data representation is employed in the rest of streams and resulting affinities are computed on the basis of euclidian distance, strength-of-match approach or string matching technique. Ishiguro–Watanabe mode of representation has an inherent problem that its network does not have any information of the robot's body but at the same time has a more generic structure. Luh's approach, on the other hand, makes use of fused data representation that includes some information of sensor-location within the network. Selection of representation schema in AIS-based robotic applications is, therefore, tricky in terms of inclusion of robot's morphology (e.g. sensor locations and actuator kinematics) in network and a consequent loss of generality.Antibody death is also an important factor in Farmer's expression. A constant antibody death rate, as employed by all the applications in this category, does not serve a purpose when no memory is maintained or when antibody metadynamics is skipped in the implementation stage.It is, therefore, suggested that future developments using idiotypic network theory should be done keeping in view the limitations of network size, computational costs, discreteness effects, representation schema and affinity-function-selections. It is also recommended that clonal production, mutation and subsequent selection can help the network to evolve newer strategies to solve the problem in hand.Danger theory can be considered as an extension of self-nonself models. DCA is based on one aspect of this theory that relates APCs to their maturity on the basis of danger/stressed signals in the system. Resultantly, DCA limits itself to the initiation of immuno-responses because the theory itself puts limits on that. It can be used in behavior arbitration on the basis of environment contextualization but then it should be supplemented with B-Cell and T-Cell algorithms to complete a three-signal immuno-function [38]. There is a big research potential in using innate immunity in conjunction with its adaptive counterpart. As a starting suggestion, conflicting objectives during multi-robot navigation can be linearly classified using DCA, which is currently limited to static data. Moreover, fuzzy weighing in some instances can be replaced with a DCA to co-stimulate different behavioral modules. The role of T-cells in helping B-cells can also be further refined to a level of developing an adaptive-critic as well.It is also observed that important immune-functions of chemotaxis, monocytic movement, phagocytosis, inflammation, cell migration and antigenic presentation are not employed in immuno-inspired robotic applications. The monocytic activity is important because monocytes walk a biased-random-walk to the gradient of chemoattractant/chemorepellent environments. This phenomenon can be employed to move robots. The function of phagocytosis is central to innate immunity because macrophages, mastocytes, dendritic cells, etc. are all phagocytes that eat the bacteria. Similarly, internal monitoring of homeostasis through inflammation module can also possibly be employed.In the context of all the aforementioned observations, a multi-tier immunity-based framework, combining innate and adaptive components, is visualized by authors and illustrated in Fig. 6. A salient feature of this framework is the inclusion of innate immunity in such a manner that adaptive immunity is called only when required. Innate immunity is visualized to have atleast two major components: one to call cells to handle general pathogens and second to co-stimulate the adaptive immunity. Authors suggest that the immuno-responses should follow a two-axis approach (as illustrated in Fig. 6): horizontal axis to represent the maturity and vertical axis to indicate the depth-of-response. This is different from a single-axis approach of conventional AIS. In this framework, the cell maturity at any depth-of-response eventually results in maintaining a set of successful cells (memory). On the other hand, the depth-of-response increases if monocytes, mastocytes, etc., treated as a set of prescribed behaviors/solutions, fail and resultantly mature the dendritic cells into different directions. Furthermore, if the regulation mechanisms indicate a persisting problem, the depth-of-response can further be increased to trigger various functions of T-cells initially, and later B-cells. The functionalities of B and T cells may follow the route of adaptive immune system reported in literature.Current trends in robotics have migrated from reactive paradigm to hybrid and probabilistic robotics in order to counter uncertainties in sensing and modeling [22]. Moreover, single-robot applications have gathered more robots to implement swarm intelligence [83]. Heterogeneous mobile robotic systems, a new trend, involves using multiple robots of different capabilities performing jobs in unstructured environment. Most of the reported immuno-inspired applications, however, involve either single robot or multiple robots of same type. Even in case of Li–Wang stream where predator and prey experiment is implemented, no distinction is made between predator and prey. In classical predator–prey models, a predator is embedded with higher sensitivities and a prey is modeled with higher actuation capabilities. For example, a predator may be given better vision and a prey may have higher speeds to escape an attack. This approach makes such systems to be heterogeneous mobile robotic systems. This heterogeneity requires a generalized representation scheme that can handle robots of varying capabilities in terms of their sensing and actuation.Reported applications also limit themselves in terms of using predefined behaviors to arbitrate from. This poses a problem in case of employing heterogeneous mobile robots because each robot would then require programming of different behavioral modules ahead of time. Ideally, complex behavior should emerge irrespective of hardware configuration of robots. This leads us to opt for behavior evolution rather than conventional behavior arbitration because coupling antibodies to predefined actions or behavior-modules limits inclusion of new behaviors.The ad-hoc manner in which these applications and their outcomes are reported makes us suggest benchmarking. Although robotics is ever-changing, there are a number of scenarios and datasets available. Nowak et al. [84] presented a detailed account of related benchmarks as part of the European research project BRICS. The benchmarks should be implemented and compared with other established techniques. Alternatively, some metrics related to utility, cost and reliability should be implemented to support an algorithm.Robot trapping in a local minima is the most common drawback of using reactive approaches. In this context, many trap-escaping schemes have been tried and investigated. Potential field method [85,86], numerical potential field method [87], virtual target method [88], virtual force field method [89], vector field method [90] are some of the methods that are used to help local minima recovery in robot navigation scenarios. Immuno-inspired methods are also being designed to handle the issue because of adaptive nature of these algorithms e.g. virtual target method by Luh and Liu [41] but simple shaped-arenas (e.g. U, W and X) do not fully establish the trap-escaping capabilities of underlying immunity-based technique.Most of the reported literature uses simulations and do not implement the algorithms on real systems. It should be noted that there are issues pertaining to non-holonomic nature of most robotic platforms. In simulations, it is much easier to represent a robot as a point, irrespective of its kinematics. Similarly, the detection of obstacles, walls or targets is difficult and pose a number of implementation issues.Authors suggest a robot-platform using the aforementioned multi-tier framework, as illustrated in Fig. 8. Here, the instantaneous sensory data is mapped as bacteria. The steering agents of robot(s), virtually housed within, are modeled as monocytes that move in a biased-random manner towards the bacteria. The probability density of these monocytes, possibly after Monte Carlo simulations, defines the next steering direction. Moreover, the previous traces of a robot's movement diffuse and consequently help in avoiding future occurrences of cyclic/bad behaviors. The diffused chemoattractants/chemorepellents are maintained within the system to help other robots as well, for possibly multi-robot scenarios, for a period specified by the diffusion rate. An internal feedback mechanism of inflammation is also incorporated that helps in dendritic-cell-maturity and consequent invocation of adaptive immunity.On the other hand, once adaptive immunity is invoked, the sensory data is mapped as antigen, and is already contextualized because of the innate immunity module. The steering agents of robot(s) are modeled as T-lymphocytes that move in a biased-random manner, according to the positive and negative selections of energy and collisions, respectively. The probability density of T lymphocytes, possibly after Monte Carlo simulations, defines the next steering direction. If inflammation continues to rise, the adaptive immunity jumps from T-cell to B-cell level. The B-cell layer responds by evolving actions through cloning and hyper-mutation. This is followed by network-dynamics to output the concentrations of actions (antibodies). The antibodies with highest concentrations are selected as actuation signals for robot(s) in the system. Moreover, the previous traces of a robot's movement continue to diffuse and consequently help in avoiding future occurrences of bad behaviors.

@&#CONCLUSIONS@&#
In the advent of newer definitions of BIS and current trends in robotics, it is important to categorize immuno-inspired robotic applications in terms of underlying immune definitions, computational details and deficiencies; equally important it is to point towards future directions. In this context, authors have reviewed the relevant literature.First of all, it is important to highlight that an AIS can be all-encompassing: one that combines innate and adaptive immune systems by employing functions of phagocytes, dendritic cells, T & B lymphocytes, etc. An AIS may possess multiple functions – all in one package – e.g. distributed network structure using idiotypic networks, reinforcement learning using T-cell working, evolutionary mechanism using somatic hypermutation, short term learning using metadynamics and weighted sum of attractive/repulsive forces using dendritic cell algorithms, to name a few. It is suggested that a multi-layered approach can be one of the solutions where one layer corresponds to antigenic data and the other to environment-contextualization in terms of safe or dangerous signals. One possible multi-tier framework is structured by the authors in Section 4.2.1 and illustrated in Fig. 6. The framework is further augmented by incorporating a two-axis approach of cell-maturity and depth-of-response. The figure also highlights the mechanism of co-stimulation and resulting combination of innate and adaptive components of immune system. In terms of applying the proposed AIS framework on robotic systems, a three-tier robotic platform is also suggested in Section 4.3.1 and illustrated in Fig. 8.It is also concluded that a deeper biological inspiration is required because a single aspect of AIS may not be sufficient to incorporate a successful modern robotic system. For example, a CS-alone approach is well suited for a path planning exercise, whereas an IN-alone approach reduces robotic system to a reactive one that has no evolution resulting from cloning and hypermutation. But by combining CS and IN approaches together one can implement behavior evolution which is more suited for robotic applications in unstructured environments. It is also concluded that with a deeper BIS inspiration it is possible to add stochastic nature of clonal selection to the deterministic approach of idiotypic network. Moreover, the fear of unknown environment can be reduced by knowing something about the robot's morphology. The information of sensors locations and system dynamics can, therefore, be a part of representation schema. It is also suggested that auxiliary functions should be taken from their computational equivalents within BIS, where available.Selection of a particular robotic application is also important. Search and rescue scenario involving a team of heterogeneous robots offers a comprehensive application that uses different robot configurations to accomplish a wide variety of tasks, ranging from single robot navigation through obstacles to multi-robot coordinated navigation in rescue. Robot taxonomy is important aspect to be considered as well, especially when one wishes to develop a general algorithm for a number of robot platforms. It has also been identified that benchmark problems should also be tested to validate an algorithm. We also emphasize the need of real experiments to minimize the reality gaps between simulations and actual systems (e.g. issues pertaining to system's uncertainties, holonomicity, local minima recovery, conflict resolution etc.).This review also offers an insight into older work (see the discussion associated with Tables 4–6) and presents a critique to individual as well as group works in previous sections. It is evident that AIS-based robotic applications have helped in establishing immunological computations as a successful approach but there exist a number of voids that are needed to be filled up, both in terms of theory and experimentation. There are a number of directions that can be investigated. A combined framework of artificial neural networks, endocrinal systems and immune systems can be implemented to establish a homeostasis [91] in an embodied system. Another idea can be to vaccinate a newer robot with evolved-and-successful antibodies (control strategies) from a specialist robot. The newer robot can then use its own AIS to further tune its responses. This approach can be used in situations where an untrained robot is desired to learn faster through vaccination. This process can also be implemented in heterogeneous mobile robotic systems. Another possible area is to implement a robot-immune-system (RIS) that is able to regulate/repair its internal organs and vital functions, unlike the conventional approach of using an AIS as a navigation scheme only. It is possible to include physical health indicators e.g. infra-red thermometer to monitor processor's temperature, battery level indicators to quantify the energy levels and accelerometers to detect the physical bumps/accidents, in RIS.