@&#MAIN-TITLE@&#
A simulating annealing algorithm to solve the green vehicle routing & scheduling problem with hierarchical objectives and weighted tardiness

@&#HIGHLIGHTS@&#
A new mathematical model is developed to reduce CO2 emissions for vehicle routing.A simulating annealing algorithm is introduced to solve large-sized problems.CO2 emissions can be reduced by taking traffic congestion into account in vehicle routes.Distance/time-based schedules do not always reduce emissions under varying traffic conditions.The proposed model is tested on simulated real-life cases.

@&#KEYPHRASES@&#
Greenhouse gas emissions,Vehicle routing,Weighted tardiness,Mathematical programming,Simulated annealing,

@&#ABSTRACT@&#
We present a green vehicle routing and scheduling problem (GVRSP) considering general time-dependent traffic conditions with the primary objective of minimizing CO2 emissions and weighted tardiness. A new mathematical formulation is proposed to describe the GVRSP with hierarchical objectives and weighted tardiness. The proposed formulation is an alternative formulation of the GVRSP in the way that a vehicle is allowed to travel an arc in multiple time periods. The schedule of a vehicle is determined based on the actual distance that the vehicle travels each arc in each time period instead of the time point when the vehicle departs from each node. Thereby, more general time dependent traffic patterns can be considered in the model. The proposed formulation is studied using various objectives functions, such as minimizing the total CO2 emissions, the total travel distance, and the total travel time. Computational results show that up to 50% reduction in CO2 emissions can be achieved with average reductions of 12% and 28% compared to distance-oriented solutions and travel-time-oriented solutions, respectively. In addition, a simulated annealing (SA) algorithm is introduced to solve large-sized problem instances. To reduce the search space, the SA algorithm searches only for vehicle routes and rough schedules, and a straightforward heuristic procedure is used to determine near-optimal detailed schedules for a given set of routes. The performance of the SA algorithm is tested on large-sized problems with up to 100 nodes and 10 time periods.

@&#INTRODUCTION@&#
It is well recognized that carbon dioxide (CO2) is the major contributor of the global warming effect of the Earth during the past decades. Since it was first measured in 1958, the concentration of CO2 in Earth's atmosphere has been continuously increasing, recently at a rate of 1.7ppm/yr for 1993–2004 and 2.3ppm/yr for 2005–2014 (lively in http://keelingcurve.ucsd.edu/). According to the International Energy Agency (IEA), the transportation sector, after electricity generation and heating, was the second-largest contributor of CO2 emissions, representing 22% of the global CO2 emissions in 2010, and almost three-quarters of the emissions from transportation were due to road transportation [33]. Traffic congestion, which results in low speeds with fluctuations on roads, often companied with frequent acceleration and deceleration, had greatly contributed to CO2 emissions [2,16]. According to the International Road Transport Union (IRTU), traffic congestion had increased CO2 emissions by 300% and is responsible for 100 billion liters of wasted fuel, or 250 billion tons of CO2 emissions in the United States alone [21]. Therefore, reducing fossil fuel consumption and CO2 emissions due to road transportation is an important part of the efforts to control the global warming. The objective of this paper is to develop new mathematical models and optimization methods for reducing CO2 emissions in the context of the Vehicle Routing Problem with traffic congestion considerations. We propose a new mathematical formulation for modeling the time-dependency in vehicle routing and scheduling problems. In the proposed formulation, the schedule of a vehicle is modeled using the total distance that the vehicle travels on each road segment in each time period. This approach is different from the literature where the schedule of a vehicle is generally determined by the time points when the vehicle departs from each node on its route. The main advantage of the proposed formulation is that more general time-dependent traffic patterns can be considered. In addition, the complexity of calculating CO2 emissions within the model is eliminated, which leads to a linear mathematical formulation. The proposed formulation is appropriate for urban transportation networks where the travel speed of a vehicle depends on the road conditions and the time of the day.The Vehicle Routing Problem (VRP) has been a classic and important optimization problem involved in road transportation applications since its introduction by [7]. In general, the VRP is concerned with the determination of the optimal routes used by a fleet of vehicles, stationed at one or multiple depots, with the objective of fulfilling customers’ demands at minimum cost. Various versions of the VRP have been developed for different applications in the past half century, such as pickup and delivery VRP, capacitated VRP, multiple depot VRP, VRP with time windows, split delivery VRP, time-dependent VRP, etc. Surveys on various formulations and algorithms of the VRP can be found in [10,18,26,35].Recently, the Green VRP (GVRP) [8,27], which is characterized by the objective of balancing environmental and operational costs, has attracted the attention of researchers in the VRP literature. Ericsson et al. [13] identified the impact of traffic disturbance events on fuel consumption and proposed a model for estimating the potential reduction in fuel consumption through route optimization. Kara et al. [23] proposed a cost function in terms of energy consumption for the VRP and named it as the Energy Minimizing VRP (EMVRP), which minimizes the total energy consumption in the route (instead of the total distance) to minimize fuel consumption. Reducing CO2 emissions also helps to save the fuel cost because CO2 emissions are usually proportional to the amount of the fuel consumption. The fuel cost accounts for more than 60% of the total transportation cost [30,31] of road logistic companies. Tavares et al. [32] considered the effect of both road inclination and vehicle load on the fuel consumption of waste collection vehicles. Kuo [24] proposed a mathematical model to calculate the total fuel consumption for the time-dependent VRP, considering both load weight and the “non-passing” property. Figliozzi [15] proposed a partial emissions minimizing VRP (EVRP) model to optimize the departure times of vehicles on the routes that are found by a time-dependent VRP algorithm. Xiao et al. [38] incorporated the fuel consumption rate resulted from vehicle's load (which is decreasing/increasing throughout the tour) into the Capacitated VRP (CVRP) and proposed a model considering fuel consumption rate for the CVRP. Erdogan and Miller-Hooks [12] presented a GVRP and developed solution techniques to aid organizations with alternative fuel-powered vehicle fleets working in large driving range in conjunction with limited refueling infrastructure. Kwon et al. [25] developed a Heterogeneous fixed fleet VRP model that considers the carbon emissions trade cost in the objective function. Gaur et al. [17] studied the cumulative VRPs with the objective to minimize fuel consumption and proposed an approximation algorithm for cumulative VRPs when vehicles have finite capacity and an arbitrary number of depot offloads are allowed. Demir et al. [8] proposed an adaptive large neighborhood search algorithm (ALNS) to minimize the fuel consumption and the driving time with Pareto optimality.Traffic congestion usually causes road conditions to be time-dependent, and the VRP under this case is called the time-dependent VRP (TDVRP) [5,14,28,29]. Compared with the distance-based VRP, the node departure times of a vehicle are decision variables in the TDVRP. Because the total travel time depends on node departure times as well as routes, the TDVRP is usually studied with alternative objectives such as minimizing the travel time or the fuel consumption (or CO2 emissions) [15,24]. The TDVRP is a more challenging problem to solve than the traditional VRP because the solution space is increased exponentially by the introduction of node departure time decisions.Bektas and Laporte [4] presented the pollution routing problem (PRP) by extending the classical VRP with time windows (VRPTW) as well as with a more comprehensive objective function including fuel, emissions, and driver costs. In the PRP, the vehicle load and speed on each route segment are considered as decision variables. Demir et al. (2012) developed a two-stage heuristic algorithm to solve the PRP of large-size instances with up to 200 nodes. In this two-stage approach, a large neighborhood search (LNS) heuristic is used to solve traditional VRPTW in the first stage, and the optimal speed for each arc of the route is determined optimally in the second state. Franceschetti et al. [16] extended the PRP to Time-Dependent PRP (TDPRP) by considering traffic congestion. In their approach, the planning horizon is divided into two periods: (1) an initial period of traffic congestion with a lower and constant travel speed and (2) a period with a travel speed range where the travel time linearly depends on the departure time.Table 1summarizes and compares the formulations of the PRP in the literature and the proposed formulation. In this paper, we consider a general case of the time-dependency for vehicle routing and scheduling with the hierarchical objectives of the total CO2 emissions, the total arrival time, the total travel time, and the total travel distance. A tardiness objective is considered for the first time in the context of the GVRP. Tardiness objectives are frequently used in the scheduling literature to model the timeliness of customer service when it is impossible to satisfy all customer orders on time due to capacity limitations. In a tardiness objective, the late service of a customer is penalized by a tardiness penalty coefficient that represents the loss of customer goodwill. The magnitude of the tardiness penalty depends on the relative importance of customers.In this paper, the formulated problem is referred to as Green Vehicle Routing and Scheduling Problem (GVRSP). The proposed GVRSP formulation contributes to the existing body of the research on the green time-dependent VRP in several ways. While the existing time-dependent GVRP formulations assume that an arc is allowed to be traveled in only one time period, in the GVRSP herein an arc can be traveled in multiple time periods. We present an alternative formulation for modeling time-dependency using the total distance traveled on an arc in each period as the primary decision variable. Thereby, the proposed modeling approach allows to incorporate more general patterns of traffic scenarios in the formulation. The proposed GVRSP formulation is linear and can be solved optimally by the existing MIP solvers for small-sized problems. In this sense, the proposed formulation is a more general model for combined routing and scheduling decisions in the context of the GVRSP. We also propose a simulated annealing (SA) algorithm to solve medium & large-sized problems with near-optimal solutions. Computational experiments are carried out to examine the proposed MILP model and solution approaches using a large set of problem instances.The rest of the paper is organized as follows. We first describe the GVRSP in Section 2. In Section 3, we present the MILP model with hierarchical objectives and develop a solution approach based on Pareto optimality for its real-life application under a carbon trading system. Computational studies are also carried out in this section. In Section 4, a SA algorithm is proposed and computational experiments are carried out to examine its effectiveness and efficiency. Finally, in Section 5 we conclude the paper.The GVRSP in this paper can be described as follows. A fleet of homogeneous vehicles is going to visit a set of customers randomly located in a region. The problem is formulated on a complete network G(N, A) where N is the set of nodes representing customers and a depot, and A is the set of arcs representing the roads between the nodes. All vehicles are located in the depot and expected to return to the depot after completing their tours. Each customer i should be visited within the time-window [0,Ti] where Tiis the due-time of the customer. A late visit results in a tardiness penalty indicating the importance of the customer while an early visit does not result in any reward, but it is still encouraged as a secondary objective to improve customer satisfaction. The average travel speeds on the arcs are assumed to be time-dependent as shown in Fig. 1. Given the vehicle parameters (e.g., engine efficiency, weight etc.) and arc travel conditions (e.g., average travel speed and slope), CO2 emissions rate (Lb/mile) for each arc in each time period can be calculated using the emission models from the literature (e.g., [2,3,16]) or using the Motor Vehicle Emission Simulator (MOVES) [11]. The objective of CO2 emissions may also be strictly restricted to a maximum emissions allowance amount under a carbon-trading market. If a company exceeds its CO2 emissions limit, it may be penalized by extra tax or required to buy more allowance from the carbon trading market. Therefore, minimizing CO2 emissions is considered as the primary objective in the GVRSP. Meanwhile, other secondary objectives such as the total arrival time (TAR), which reflects the customer satisfaction level, the total route time, which reflects the driver and vehicle usage cost, and the total route distance (for benchmarking) are also considered in a hierarchical manner.The decision variables of the GVRSP can be grouped into two types: (1) the routing decision variables to select arcs in order to visit all customers and return back to the depot, and (2) the scheduling decision variables to determine the distance traveled on each arc in each time period and to calculate the departure time from each selected node. The routing decision is exactly the same as in the traditional VRP. The scheduling decision, which is considered on the continuous time domain in this paper, deals with how to schedule detailed travel assignments within the planning horizon of multiple time periods.The time-dependency usually involves how to model the time-dependent travel speed and travel time. In the literature, the departure time from a node is considered as a decision variable [5,14,28,29], and it is assumed that an arc can be traveled only in a single time period. In the GVRSP herein on the other hand, an arc can be traveled in multiple time periods. We assume that the planning horizon is arbitrarily divided into multiple time periods. For each arc, the travel speed in a time period is assumed to be constant, representing the average speed during the period. This assumption is well justified in the case of urban and sub-urban roads where the average travel speed depends on the time of the day and is dictated by the road conditions. Fig. 1 shows six general types of travel-speed patterns that may be observed in real-life situations. These patterns also provide the basis for the numerical simulation in the following section of computational studies. The pattern Increasing and Decreasing in Fig. 1A and B simulates a steady increasing or decreasing travel-speed pattern in the planning horizon. The pattern V shape in Fig. 1C simulates a typical rush-hour traffic congestion. The pattern Λ shape in Fig. 1D simulates a time range between the two peaks of traffic congestion. The pattern Random in Fig. 1E simulates other irregular patterns for travel-speed patterns that may be caused by school zones, engineering works, etc. Fig. 1F simulates a road with either a high or low, but steady travel-speed in all periods.In the GRVSP formulation, arc (i, j) represents the path between nodes i and j. Let Dijbe the total distance of arc (i, j) and dijkdenotes the distance traveled on arc (i, j) in period k, such thatDij=∑k=1mdijkwhere m is the number of time periods. Then, arc (i, j)’s travel time tijcan be calculated astij=∑k=1mdijk/vijk, where vijkis the average travel speed on arc (i, j) in period k. Because vijkcan be pre-calculated based on the traffic conditions of arc (i, j) in period k before solving the GRVSP formulation, the relationship between the time and the distance can be expressed as a linear equation in the formulation. In addition, CO2 emissions (cijk) per unit distance traveled on arc (i, j) in period k can also be pre-calculated. Thereby, the objective function of the total CO2 emissions also becomes linear. In real-life implementations, cijkcan be estimated from empirical data or calculated based on emission models as discussed earlier.The starting and ending times for traveling arc (i, j) in period k are represented as liand aj, respectively. Since a vehicle's travel speed is determined by the periods when it actually travels the arcs, not by the departure time points from the nodes, the passing phenomenon, i.e. a late departed vehicle may pass an earlier departed vehicle due to their different starting speeds [1], will not happen. The “first-in-first-out (FIFO)” property [20] is also satisfied. Moreover, the concept idle time, which is proposed by Franceschetti et al. [16] to avoid high levels of emissions, can also be calculated and scheduled at the customer nodes or on the roads, allowing a more flexible approach to scheduling.In 1997, the foundation of a carbon trading market was established as an outcome of the well-known Kyoto Protocol [36] to reduce the global carbon emissions. The EU emissions trading system was first started in 2005 and used grandfathering to allocate free allowances to some 13,000 companies in 31 countries, covering around 45% of the EU's greenhouse gas emissions [6]. According to Thomson Reuters Point Carbon [34], the value of the globally traded carbon market will increase by two thirds in 2014 from 2013 to reach €64bn, (€39bn in 2013), with the volume increasing by 3 percent to 9.6Gt CO2. A participating firm can sell any surplus emission allowances to another firm that needs emission allowances, or it can save them up for the future use.One of the objectives of the GVRSP formulated herein is to assist transportation companies to optimize their amount of CO2 emissions by making decisions about purchasing and selling emissions in a carbon market. Therefore, the GVRSP sets the amount of CO2 emissions with a tardiness penalty as the primary objective in the first stage and optimizes other sub-objectives based on a controllable relaxation on the minimized CO2 emissions. The sub-objectives, such as (1) the total arrival time (TAR)-representing the customer satisfaction, (2) the total travel time on road (TOR)-representing company's business performance indicators (e.g., driver and vehicle costs), and (3) the total distance traveled, are necessary to assist companies to pursue a higher level of business performance or lower operational costs.In this section, we present a mixed integer linear programming (MILP) model for the GVRSP with multiple objectives and develop an approach using the AMPL/CPLEX scripting language to solve the MILP model. Computational experiments are also carried out to study of the GVRSP and to examine the performance of the solution approach.In the following, the parameters and decision variables to model the GVRSP are listed.q: number of homogeneous vehiclesn: total number of nodes (customers plus the depot)i: index of nodes (the depot is represented by 0)N: set of the nodes including the depot, i∈NN′: set of the nodes excluding the depot, N′=N\{0}A: set of the arcs formed by all pairs of nodes, (i, j)∈A, ∀i∈N, j∈N, i≠jTi: due-time of the ith customerωi: tardiness penalty coefficient of the ith customerDij: distance of arc (i, j)m: number of time periodsk: index of a time period, k=1, 2, …, mK: set of time periods, k∈K[bk, ek]: beginning and ending time of time period kZk: length of time period k, i.e., Zk=ek−skvijk: average travel speed on arc (i, j) within time period kcijk: CO2 emissions rate per unit distance on arc (i, j) in time period k (pre-calculated)M: a large numberThe binary decision variables and non-negative continuous decision variables used in the MILP model are defined as follows:Xij: binary variable indicating whether arc (i, j) is traveled (Xij=1) or not (Xij=0)xijk: binary variable indicating whether arc (i, j) is traveled in time period k (xijk=1) or not (xijk=0)dijk: traveled distance of arc (i, j) in time period ktijk: travel time of arc (i, j) in time period kli: departure time from node iai: arrival time at node iLi: tardiness of node iThree hierarchical objectives are considered in the GVRSP. The primary objective is to minimize the total CO2 emissions. The second level objective is to minimize the total arrival time (TAR). The second level objective requires serving the customers as early as possible. The third level objective is to minimize the total time on road (TOR). All three objectives also include a weighted tardiness penalty. Three levels of TOR can be defined as follows: (1) TOR1—the total time between departing from and returning back to the depot, i.e., a0-l0, (2) TOR2—the total time on road excluding the idle time on the customer's premise (but including the scheduled idle time on road), i.e.,∑i=0n(ai−li), and (3) TOR3—only the travel time on road excluding all scheduled idle times, i.e.,∑i=0n∑j=0n∑k=1mtijk. Note that the proposed formulation and solution approach herein are independent from the objective functions. These three definitions of TOR are used to demonstrate how transportation companies can use the formulation in real-life scenarios to determine a time-based wage system for drivers. In addition, for the cases where tardiness is not a concern, the tardiness penalty coefficient can be set zero. The MILP formulation for the GVRSP is given as follows.(1)Min CO2_Emission(CO2-E)=∑i=0n∑j=0n∑k=1mdijk⋅cijk+∑i=1nωi⋅Li(2)MinTotalarrivaltime(TAR)=∑i=1nai+∑i=1nωi⋅Li(3)MinTotaltimeonroad(TOR3)=∑i=0n∑j=0n∑k=1mtijk+∑i=1nωi⋅LiSubject to(1)∑(i,j)∈AXij=1∀i∈N′(2)∑(i,j)Xij=1∀j∈N′(3)∑j=1nX0j≤q(4)XijDij=∑k=1mdijk∀(i,j)∈A(5)Xij≥xijk∀(i,j)∈A,k∈K(6)Xij≤∑k=1mxijk∀(i,j)∈A(7)dijk≤Dij⋅xijk∀(i,j)∈A,k∈K(8)xijk≤M⋅dijk∀(i,j)∈A,k∈K(9)li≤ek−tijk+em⋅(1−xijk)∀(i,j)∈A,k∈K(10)aj≥bk+tijk−em⋅(1−xijk)∀(i,j)∈A,k∈K(11)ai≤li∀i∈N′(12)a0≤em(13)aj≥li+∑k=1mtijk−em⋅(1−Xij)∀(i,j)∈A(14)Zk≥∑(i,j)∈Atijk∀k∈K(15)Li≥ai−Ti∀i∈N′(16)tijk=60⋅dijk/vijk∀(i,j)∈A,k∈K(17)Xij∈{0,1},xijk∈{0,1},dijk≥0,tijk≥0,li≥0,ai≥0,Li≥0∀(i,j)∈A,k∈KIn the model above, Constraints (1) and (2) ensure that the vehicles visit all customers only once. Constraint (3) ensures at most q vehicles are used. Constraint (4) guarantees that if an arc is selected, its full distance must be traveled. Constraints (5) and (6) make variable Xijconsistent with variables xijk, and Constraints (7) and (8) make variables xijkand dijkconsistent with one another. The large number M requires that a minimum distance, i.e., 1/M, must be traveled in time period k if arc (i, j) is selected to be traveled in that period. Constraints (9) and (10) bound the departure and arrival times of the nodes within proper time intervals. Constraint (9) ensures that if arc (i, j) is traveled in period k, the departure time of node i must be ahead of the end time of period k by the travel time of arc (i, j) in period k. Similarly, Constraint (10) states that a vehicle cannot enter node j before the start time of period k plus the travel time of arc (i, j) in that period. Note that for xijk=0, Constraints (9) and (10) still hold because emis always greater than or equal to any of the departure and arrival times. Constraint (11) ensures that a vehicle's departure time must be after its arriving time. If a customer service time giis required, then Constraint (11) can be modified as ai+gi≤li∀i∈N′. Constraint (12) requires that the return time to the depot must not exceed the end of the planning horizon. Constraint (13) is a disjunctive constraint to calculate the arriving time at node j by cumulatively considering the travel times of all arcs and the leaving times of all nodes that would have been traveled before node j. Note that Constraint (13) is inactive for an arc which is not used in the tour. Moreover, Constraints (11) and (13) prevent any sub-tours of the customers. Constraint (14) prevents the time periods from being over used. Constraint (15) is a linear expression for calculating the tardiness. Constraint (16) calculates the travel time of arc (i, j) in period k. Note that Constraint (16) is a linear constraint because the values of vijkare all pre-calculated parameters. Thereby, it is possible to express the non-linear relationship between the CO2 emissions and the travel-speed as linear constraints without requiring auxiliary binary variables for linearization. To achieve this objective, it is assumed that the travel speed of an arc is constant within a time period. This assumption is suitable for real-life operations of commercial fleets that must follow speed limits strictly. In addition, all mathematical expressions in the model are linear. Therefore, it is possible to optimally solve the formulation using MIP solvers.In addition to the constraints above, Constraints (18) and (19) given below are useful valid inequalities to tighten the formulation and for developing heuristics to solve the problem.(18)xjlk1≤2−xijk2−Xij∀i,j,l∈N′;k1,k2∈K;k1<k2(19)xjlk1+xjik2≤1∀i,j∈N;k1,k2∈KConstraint (18) states that if arc (i, j) is traveled in time period k2, all arcs emanating from node j cannot be traveled in a time period k1 such that k1<k2. Constraint (19) prevents the vehicle from going back on the same arc.In this section, a three-stage approach is introduced to solve the MILP model with hierarchical objectives and Pareto optimality. Two main motivations of solving the problem in three stages with hierarchical objectives are to demonstrate how the formulation can be used in practice and to illustrate the differences in the optimal solutions found by various objective functions. In the first stage, the problem is solved using the CO2-E objective function only, and the resulting optimal objective function value is denoted as CO2E*. The first stage MILP model consists of Eq. (1) and Constraints (1)–(17). In the second stage, the objective function is changed to TAR, and Constraint (20) is added to the model. The resulting optimal objective function value of the second stage is denoted as TAR*. Parameter λ1 in Constraint (20) is a non-negative relaxation parameter on the CO2 emissions constraint. A positive λ1 represents pursuing better customer satisfaction at the expense of higher CO2 emissions in the second stage. When CO2E*is less than the allowance amount, and the company is not intending to sale the surplus emissions in the carbon trading market, Constraint (20) can be relaxed to achieve better business performance in the second stage. On the other hand, if CO2E*already exceeds the allowance amount, then Constraint (20) can allow the company to buy a controllable amount of emissions from the market. In the third stage, the objective is changed to TOR3, and Constraint (21) with another relaxation parameter λ2 is added to the MILP model. Parameter λ2 represents the extent to sacrifice customer satisfaction in order to reduce the operational cost. After all three stages are solved, the final solution for the objectives CO2E, TAR and TOR3 is a Pareto optimal with respect to parameters λ1 and λ2.(20)∑i=0n∑j=0n∑k=1mdijk⋅cijk≤CO2E*×(1+λ1)(21)∑i=1nai≤TAR*×(1+λ2)The process of solving the problem with the hierarchical objectives is shown in Fig. 2.Note that three objectives CO2-E, TAR, and TOR can also be used alone as independent objectives. In the next section, we compare solutions that are found using different objective functions. In addition, these three objectives, a distance-oriented objective is considered as follows:(4)MinTotal_travel_distance(TTD)=∑i=0n∑j=0nXij⋅Dij+∑i=1nωi⋅LiWe refer to the solutions found using only CO2-E, TAR, TOR, or TTD objectives as CO2-oriented, TAR-oriented, TOR-oriented, distance-oriented solutions, respectively.We first investigated differences between CO2-oriented and distance-oriented solutions in terms of the total CO2 emissions, travel time, and travel distance. Problem instances were generated to simulate the morning rush time in a 10×10 mile urban area. A V-shape pattern with five time periods was used to generate time-dependent traffic conditions as shown in Table 2. In each period, the average travel speed was randomly determined within the corresponding speed ranges. A set of customers was randomly located in the target area, and all customers were to be served until 10:00am by a single vehicle.We used the fuel consumption function developed by Franceschetti et al. [16], which is based on the comprehensive modal emissions model (CMEM) by [3] and [2], to estimate CO2 emissions based on the average travel speed. In Eq. (5), the relationship between the CO2 emissions rate (Lb per mile, denoted as e) and the vehicle's travel speed (Mile per hour, denoted as v) is given for an unloaded vehicle with a gross weight of 6.35t. The coefficients of the equation were partially calculated based on the data provided by Franceschetti et al. [16], considering the gasoline density (e.g., 1.62Lb/l) and converting the rate from gasoline to CO2 (largely 3.3 Lb/Lb). The curve of CO2 emissions with respect to vehicle's travel speed is plotted in Fig. 3.(5)e=19.585074626866×v−1+0.00024281605015226×v2+0.4590900784476We generated three groups of ten random problem instances with a single vehicle and the number of customers n=5, 10, and 15 (a total of 30 problem instances). These instances were optimally solved using AMPL/CPLEX (version 12.4.0.1) in an iMac with 2.50GHz Intel® Core™ i5-2400S CPU. Distance-oriented solutions were also determined optimally for comparison. The tardiness penalty was not considered in this set of experiments so that the optimal solutions would not depend in the tardiness weight. We present the summary of the CO2-oriented and distance-oriented solutions in Table 3and the detailed results in Table 4.As it can be observed in Tables 3 and 4, the CO2-oriented optimal solutions resulted in significantly lower levels of CO2 emissions compared to the distance-oriented optimal solutions. The maximum CO2 emissions reduction was 18.6% with an average of 14.2%. The average CO2 emissions reduction was also increased with the problem size. However, the reduction rates for individual instances varied significantly even within the same problem group. For problem groups 5×5, 10×5, and 15×5, the reduction rates were in the ranges of [0.0%, 6.0%], [0.5%, 18.2%], and [8.9%, 18.6%], respectively. The CO2-oriented and distance-oriented solutions had virtually identical travel distances. Therefore, the observed reductions in the CO2-oriented solutions can be attributed to the effective scheduling of the vehicle under time dependent traffic conditions. The CO2-oriented and distance-oriented solutions had more significant differences in the total travel time. Since the vehicle speeds during the rush hours in an urban area are far below the optimum levels, pursuing lower travel times (i.e., higher speed) would normally result in lower CO2 emissions. Although a few instances required longer travel times for reducing CO2 emissions, most of the CO2-oriented solutions resulted in decreased travel times. On the average, for problem groups 5×5, 10×5, and 15×5, the travel time changes were −6.2%, −26.6%, and −39.2%, respectively. It should be noted that this observation does not necessarily mean that shorter travel times will always lead to lower CO2 emissions. On the contrary, simulation experiments with more general cases, which are summarized in Tables 6 and 7, showed that TAR-oriented solutions might also result in a sharp increase in CO2 emissions.We generated another set of 240 problem instances to simulate a more general case of time-dependent road conditions and different levels of vehicle weight. The customers were located randomly in a 10×10 or 20×20 mile region, where the travel speeds on roads were subject to different time-dependent traffic patterns as shown in Fig. 1. Problem instances were generated with number of customers with n={5, 10, 15} and the number of periods m={3,5}. In addition, four levels of vehicle's gross weight (with different CO2 emission rates) were simulated. Ten instances were randomly generated for each combination of the number of customers, the number of periods, and the vehicle gross weight, resulting in 3×2x4×10=240 test problem instances. The due-times of customers were randomly generated within the planning horizon. The tardiness penalty weights were randomly generated in interval [5,8] to ensure customers being served in their due-times as much as possible. Each arc (i, j) was randomly associated with a speed pattern in Fig. 1.Hickman [19] developed a regression function of CO2 emissions based on the speed of the vehicle and considered the vehicle's gross weight as follows:(6)e=K+Av+Bv2+Cv3+Dv+Ev2+Fv3,where e is the rate of emissions in g/km for an unloaded vehicle, or for a bus or a coach carrying an average load, on a road with a slope of 0%, and v is the mean speed of the vehicle in km/h. Hickman [19] also provided the constants and coefficients of the function for the four ranges of gross weight of heavy-duty vehicles as listed in Table 5. Fig. 4illustrates the relationship between CO2 emissions (Lb/mile) and vehicle's travel speed (mile/h) for the four types of vehicle gross weights. These fitted curves were used to estimate the amount of CO2 emissions under different speeds and different vehicles.The 240 instances were also optimally solved using the MILP formulation. We use the No.1 instance of 5×3 group and No.1 instance of 10×5 group to demonstrate the three-stage MILP approach. The results are given in Table 6. First, λ1 and λ2 were set to zero (without relaxations), and the three objectives CO2-E, TAR and TOR3 were optimized hierarchically by the three-stage MILP approach. It can be observed that the optimal objective value of each stage remained the same to the end. Therefore, the final solution is a Pareto optimal solution in terms of minimum CO2-E, TAR and TOR3 objectives. Next, λ1 and λ2 were set to 0.1, i.e. additional 10% amount of CO2 emissions was allowed in order to seek better TAR, and additional 10% TAR was sacrificed to seek better TOR3. It can be observed that the objective value of CO2-E became larger (below 10%) in the second and third stages but the objectives TAR and TOR3 were improved in comparison to those without relaxations (i.e., λ1=λ2=0). In Table 7, we show the results of the identical instance (i.e., No.1 instance of 5×3 group) with the same customers served by different gross weight vehicles. Column TTD and CO2-E represent the traveled distance and the amount of CO2 emissions, respectively. Columns ΔTTD% and ΔCO2% indicate the percent deviations in the total travel distance and CO2 emissions from the distance-oriented optimal solutions, respectively. The distance deviation increased by 8.2% on the average but the CO2 emissions declined by 25.6% on the average with a maximum value of 32.5%. It can also be observed that in terms of minimizing CO2 emissions, vehicles with different gross weights may yield different optimal routes for the same set of customers.In Table 8, the optimal solutions found by the three-stage hierarchical MILP approach, and the distance-oriented results for 240 instances with the four-vehicle gross weight types are compared with respect to CO2 emissions reduction (%), the rate of travel time change (%), and the rate of travel distance change (%). In terms of CO2 emissions reduction, all problem groups had a reduction of 12% on the average compared to the distance-oriented solutions. For individual instances, the reduction varied even within the same group, ranging from 0% to 39.3%. Generally, the amount of CO2 emissions reduction depended on the problem parameters such as customers’ location, due-time, and roads’ speed changing patterns. The problem size had limited effect on the average CO2 emissions reduction. A larger vehicle gross weight led to a lower rate of CO2 emissions reduction, but the total reduction amount was increased. If all instances are considered together, the CO2-oriented MILP model provided 12.0% CO2 emissions reduction compared to the distance-oriented approach. These results justify the significance of using the CO2-oriented model under time-dependent traffic congestions. For problem instance 5×5 with 32–40(t) vehicle weight, the distance-oriented approach yielded solutions with longer travel distances. The reason for this abnormality is that the tardiness penalty of this instance is relatively larger in distance-oriented solutions than in CO2-oriented solutions. The travel distance change (%) column shows the rate of increased travel distance compared to the distance-oriented solutions. In total, 156 instances (65%) out of the 240 instances had longer travel distances to attain lower levels of CO2 emissions, and for the other 84 instances, the optimum routes to lower CO2 emissions were also the shortest distance routes with optimized period selections. On the average, the traveled distance increased by 3.2% for all instances. The Travel Time Change (%) column in Table 8 shows the travel time difference between the CO2-oriented and distance-oriented solutions. Generally, 115 of the 240 instances (48%) had an increased travel time (while the others had reduced travel time) to achieve lower CO2 emissions. It is because different vehicles may have different economic travel speed levels, and traveling with a speed closer to the economic level will help to lower CO2 emissions. The comparisons in Table 8 support the merits of the proposed CO2-oriented model. First of all, CO2 emissions cannot be minimized by a pure distance-oriented approach in the presence of time-dependent traffic congestion. Even the CO2-oriented and distance oriented approach yield the same optimal route, CO2 emissions can be reduced by optimizing the schedule of the service on the route. These results support the main contribution of the paper, i.e. vehicle routing and scheduling should be considered together to reduce CO2 emissions under time-dependent traffic conditions.In Table 9, CO2-oriented solutions and travel-time-oriented solutions are compared with respect to the three performance metrics, CO2 reduction (%), travel time change (%), and travel distance change (%). It can be observed that the CO2 reductions reached an average of 28% for all problem groups, ranging from 2.4% to 50.1%. Clearly, the CO2 reductions were more significant compared to the distance-oriented solutions in Table 8. This observation may imply that the route with the shortest travel time (with higher speed) leads to emit more CO2 (42% on the average) than the optimal amount emitted under the CO2-oriented model. Because the heavy-duty vehicles in this experiment have economic speed levels of 30–45m/h, the travel time under the CO2-oriented model may have also increased (50% on the average) in comparison to the travel-time-oriented model. In terms of travel distance change, only 34 instances had longer travel distances, and the other 206 instances resulted in shorter. On the average, the CO2-oriented solutions had 7.2% shorter travel distance than the travel-time-oriented solutions. As the results in Table 9 indicate, there is a clear trade-off between the travel time and CO2 emissions. As a result, delaying customer service until the time periods with favorable traffic patterns can reduce CO2 emissions.Finally, we tested the computational efficiency of the MILP model by solving different sizes of problem instances. The CPU times reported in Table 10were obtained by CPLEX (version 12.4.0.1) on the same computer using four CPU cores at full extent. We generated new instances with the number of customers from 5 to 20 and randomly located customers in regions of 10×10, 15×15, and 25×25 square miles, respectively. All instances had five time periods of 30minute. The travel speed patterns were randomly selected among the six patterns given in Fig. 3. The CO2 emission rate was calculated by Eq. (6) with random vehicle gross weights. For each problem group, 10 instances were generated, resulting in 16×3×10=480 test instances. Table 10 summarizes the CPU times to solve the test instances. It can be observed that the solution time exponentially increased with the problem size. For example, adding even one additional customer resulted in a significant increase in the CPU times of the problem sizes of 13×5, 14×5, and 15×5 under 15×15 square mile. Notably, the size of the service region had also an effect on the computational efficiency because of the continuous variables of the MILP model. When the service region increased from 10×10 miles, 15×15 miles, to 25×25 miles, the CPU time also increased and instances larger than 13×5 could not be solved in reasonable CPU times. Moreover, individual problem instances of the same group may have also required very different CPU times as seen in Table 10.Theoretically, the proposed MILP model can be optimally solved only for small-sized problems. The GVRSP is a generalization of the VRP, which is an NP-hard problem. Therefore, solving large-sized GVRSPs optimally with multiple vehicles and a large number of customers is not computationally feasible. However, it is practical to find near-optimal solutions for large-sized GVRSPs by adopting existing meta-heuristic algorithms. In this section, we introduce a Simulated Annealing (SA) algorithm to find good solutions for large-sized problems. In the SA, the continuous variables of the model are not encoded and searched, but determined by a straightforward heuristic procedure that provides near-optimal detailed schedules for a given a given set of routes (i.e., Xijdecision variables) and rough schedules (i.e., xijkdecision variables). This aspect of the SA algorithm ensures the tractability and effectiveness of the solution approach.Let string vector S={sp} represent the sequence in which nodes (customer IDs plus depot 0) are visited, and binary matrixX={xpk} represent the time period when the arcs in the sequence are traveled. Additional notation is as follows:p: position index of the string vectorsp: the index of the pth visited node, that is p=1, 2, …, n, n+1, such that the route starts from and ends at the depot (s1=sn+1=0)xpk: binary variable indicating if arc (sp, sp+1) is traveled in time period k or notFig. 5illustrates an example of the solution encoding for a small problem with nine customers visited by a single vehicle in five time periods. The vehicle starts from the depot (represented as 0), visits customer 5 first, and then customers 3, 4, and so forth. After visiting customer 7, the vehicle returns back to the depot. Binary matrixXrepresents the travel time periods of the corresponding arcs. If xpk=1 then arc (p, p+1) uses time period k to travel; otherwise, time period k is not used by arc (p, p+1). It can be observed that cells with 1 in matrixXform a route and a schedule path starting from the left-top corner toward the right-bottom corner, and more paths will appear when multiple vehicles are used. This representation is referred to as an R&S map.A feasible R&S map (S,X) must satisfy the following Constraints (22)–(25). Constraint (22) ensures that all customers must be visited only once, starting from and ending at the depot. Constraint (23) ensures arc (sp, sp+1) must be traveled in at least one time period. Constraint (24) ensures that if xpk=1, the left-bottom corner ofX(namely, p′>p and k′<k) must be zero, and Constraint (25) ensures that if xpk=1, the right-top corner ofX(namely, p′<p and k′>k) must be zero. A feasible R&S map forms a single path traveling throughXfrom the left-top corner toward the right-bottom corner. Note that the path does not necessarily start at the first period and end at the last period. The path must also be contiguous in the columns but may be noncontiguous in the rows.(22)S∩N=N,s1=0,sn+1=0(23)∑k=1mxpk≥1∀p=1,2,...,n(24)1−xpk≥xp′k′,∀p,k,p′>p,k′<k(25)1−xpk≥xp′k′,∀p,k,p′<p,k′>kThe continuous variables are defined as follows.dpk: distance of arc (sp, sp+1) traveled in period kτpk: time of arc (sp, sp+1) traveled in period klp: starting time of traveling arc (sp, sp+1)ap: ending time of traveling arc (sp, sp+1)In the R&S representation, the total time spent to traverse arcs in a time period can be longer than the length of that time period. Therefore, a penalty term is added to the objective function to penalize any overuse of the time periods as follows:(7)Min.CO2-E=∑p=1n∑k=1mdpk⋅csp,sp+1,k+∑i=0nωi⋅Li+β⋅∑k=1mmax0,Zk−∑p=1nτpk,where β represents the penalty term for any overuse of a time period. Note that the objective function in Eq. (7) is for minimizing CO2 emissions. The TAR or TOR objectives can be also used.In the following, we present tight bounds for the continuous variables for givenSandX. Eqs. (8)–(10) are designed to assign near-optimal values to dpk, τpk, and lpas follows:(8)dpk=x⋅pkminDsp,sp+1−∑k′=1k−1dpk′,Zk−∑p′=1p−1τp′k⋅vsp,sp+1,k,if∑k′=k+1mxpk′>0x⋅pkDsp,sp+1−∑k′=1k−1dpk′,if∑k′=k+1mxpk′=0,∀p,k(9)τpk=60⋅dpkvsp,sp+1,k(10)lp=0ifp=0max{ap−1,bk′}ifp>0,k′=min{k|k=1,2,...,m;dpk>0},∀pEq. (8) determines the distance traveled on arc (sp, sp+1) in period k. If xpk=0, then dpkis assigned to zero; otherwise, dpkis assigned to the minimum of the untraveled-distance of arc (sp, sp+1) before period k, calculated byDsp,sp+1−∑k′=1k−1dpk′, and the can-travel-distance of arc (sp, sp+1) in period k which is calculated by(Zk−∑p′=1p−1τp′k)⋅vsp,sp+1,k. However, if period k is the last period that arc (sp, sp+1) can be traveled (indicated by∑k′=k+1mxpk′=1), then all untraveled-distance must be assigned to dpkin order to ensure the arc is fully traveled. This way of assignment may lead to an overuse of period k. Any overused time period is penalized in the objective function as given in Eq. (7). In the computer implementation of the SA, dpkand τpkare calculated mutually by Eqs. (8) and (9) as p increasing from 1 to n.The starting and ending time of traveling arc (sp, sp+1), i.e., lpand ap, are determined by the early starting principle. Eq. (10) is used to determine lpbased on ap-1 and bk′, where k′ is the first period selected to travel arc (sp, sp+1). To determine ap, however, we first need to introduce a temporary variable apkrepresenting the ending time for traveling dpkwhich is calculated by Eq. (11), where k′ is the first period selected to travel arc (sp, sp+1). Then apcan be determined by Eq. (12).(11)apk=max{lp,bk}+tpkifk=k′max{ap,k−1,bk}+tpkifk>k′,∀p,k,dpk>0(12)ap=max{apk}∀p,k,dpk>0Thus, once dpkis fixed, the starting time lpand ending time apof arc (sp, sp+1) can be mutually calculated through Eqs. (10)–(12) by increasing p from 1 to n. The process to determine apis given in Fig. 6.Note that Eq. (8) may assign non-optimal values to dpkfor those arcs that require more than one period to travel. For example, when the vehicle travels arc (sp, sp+1) in periods k and k+1, i.e., xpk=1, and xp,k+1=1, Eq. (8) will require the vehicle to make full use of period k first, and then use period k+1 to travel the remaining distance. This assignment is not optimal because traveling in period k may not be superior to traveling in period k+1 in terms of minimizing the objective function. Nevertheless, for those arcs that have only one period to travel, Eq. (8) will be optimal because it has to assign the arc's whole distance to dpkin order to complete the tour. Fortunately, there are only at most m-1 arcs that are possible to have multiple periods, and all other arcs will be assigned with optimal values to dpk. For the arcs that may use multiple periods, an Upper Bound is developed to estimate the maximum gap in the objective values between the optimal and near-optimal dpkas follows:Upper Bound:(13)UB=E*+L*The Upper Bound consists of three parts: E*- total CO2 emissions, L*- tardiness penalty, and O*- penalties for over using time periods, which are calculated as(14)E*=∑p=1nep*andep*=max{Dsp,sp+1⋅csp,sp+1,k|xpk=1}−min{Dsp,sp+1⋅csp,sp+1,k|xpk=1}(15)T*=∑p=1ntp*andtp*=max{Dsp,sp+1/vsp,sp+1,k|xpk=1}−min{Dsp,sp+1/vsp,sp+1,k|xpk=1}(16)L*=∑i=1n(Li−ωi⋅max{−T*+ai−Ti,0})(17)O*=min{O,β⋅T*}In the equations above, ep*is the maximum gap of CO2 emissions for arc (p, p+1) when it is traveled in time periods with the highest and the lowest CO2 emissions rate. Particularly, if arc (p, p+1) has only one time period to travel, then ep*=0. Similarly, tp*is the maximum gap of travel time on arc (p, p+1) when it is traveled in time periods with the highest and the lowest speed, and T* is the sum of tp*. Thus, L*and O*can consequently be estimated based on T*, which are the can-decreased tardiness penalty and the can-decreased over-length penalty, respectively. It is notable that L*and O*should not exceed the existing tardiness penalties (noted by Li) and over-length penalties (noted by O) of the current solution. The near-optimal solution can be further improved by the following optimization procedure in Fig. 7, which tries distance reassignments within the arcs that have multiple periods to decrease the objective function value as much as possible.For a pair of givenSandX, let f* represent the optimal objective value (which is unknown), f represent the near-optimal objective value obtained by Eqs. (8)–(12), and f′ be the objective function value optimized by the objective-oriented procedure depicted in Fig. 7. Thus, we have f−f′≤f−f*≤UP. Particularly, if f does not contain any penalties (i.e., Li=0 and O=0), we can remove the penalty terms from the objective function and use the procedure in Fig. 7 to obtain a new objective value, noted as f″. Thereby, we have the following Proposition to determine whether f′ is optimal for (S,X) or is still a near-optimal solution within the Upper Bound defined in Eq. (13).PropositionIf f′=f″ holds, then f′=f*will hold; otherwise f′≥f*.Letgp=∑k=1mxpkindicate the number of time periods used by arc (sp, sp+1). For the arcs with gp=1, Eq. (8) can be simplified asdpk=xpk⋅Dsp,sp+1, which is optimal because the whole distance of the arc has to be traveled in the only one period. For the other arcs with gp>1, if the objective function does not contain any penalties, then the arcs contribute only CO2 emissions to the objective and their contributions are independent from each other. If those arcs with gp>1 can also be optimized independently without adding new penalties to the objective function value (indicated by f′=f″ after removing the penalty terms from the objective function to check whether arcs are independent or not), then f′ is the optimal objective value for givenSandX.Nevertheless, if the objective value contains penalties, then the procedure in Fig. 7 will not guarantee an optimal objective value, as the penalties may be non-linear. The Upper Bound calculated in Eq. (13) is still the maximum possible gap between f′ and f*.A canonical SA procedure was used, as shown in Fig. 8, to demonstrate the application of meta-heuristics to solve the large-sized GVRSP with near-optimal solutions. SA is one of most commonly used meta-heuristic algorithms to solve combinational optimization problems. SA is a probabilistic algorithm to search for global optima in problems with complex search spaces. At each step of SA, a neighbor solution (candidate solution) is randomly generated from the current solution, and the candidate is accepted as the new current solution with a probability based on the energy value (fitness) of the candidate and current solutions. In SA, the objective is to move from high energy regions to low energy regions in the search space. By accepting neighbors that raise the current energy value, SA may avoid being trapped in local optima. The convergence process in SA is facilitated by setting a temperature parameter to a high value in earlier stages of the search (i.e., the probability of accepting inferior solutions is higher) and then slowly reducing it as the search progresses. Being a straightforward algorithm, SA has been applied to many combinatorial problems. The SA algorithm herein have three parameters τend, α, and N, representing the stopping condition, the cooling rate, and the thermal equilibrium requirement for each temperature level, respectively, to control the trade-off between solution quality and computational efficiency. The procedure of the SA algorithm is given in Fig. 8.In the SA algorithm,SorXis randomly and uniformly selected to perturb the current solution to generate a new candidate. IfSis selected, an operator insert, as shown in Fig. 9, is applied to generate a new solution. The insert operator reinserts the customer ID position p1 into position p2 by shifting the customers between positions p1 and p2 accordingly. A heuristic based on distance ranking [37] is used to select positions p1 and p2. The insert operator with distance ranking has a bias to select positions p1 and p2 which include closer customers. After performing insert operation onS,Xremains unchanged.WhenXis selected to generate a candidate solution, a flip operator operates on a randomly selected point (p, k) inXto change the binary value of xpkas 1−xpk. However, changing a point xpkfrom 1 to 0 may violate Constraint (23); therefore, such changes are not permissible to maintain the feasibility ofX. Meanwhile when a point xpkis changed from 0 to 1, both the right-top zone of xpkand the left-bottom zone of xpkmust be filled with zero (or shift the “1” to the same row as xpk), as shown in Fig. 10, in order to comply with Constraints (24) and (25).To apply the SA algorithm to the GVRSP with multiple vehicles, multiple pairs of decision variables, e.g., (Sh,Xh) h=1, 2, …, H, are added to the representation, where h is the vehicle ID and H is the number of available vehicles. The objective function is also updated considering CO2 emissions of all vehicles and related penalties. Fig. 11shows a solution example with multiple vehicles. Note that when multiple vehicles are used, the insert operator is applied to one vehicle or two different vehicles selected randomly, and the flip operator is applied to a randomly selected vehicle.The SA algorithm was used to solve problem instances with different sizes in order to study its performance for the GVRSP. First, 30 small-sized instances generated in Section 3.3 were solved to compare the solutions found by the SA algorithm with the optimal solutions found by the MILP formulation. The small-sized instances include 10 instances of each group 5×5, 10×5, and 15×5. Next, 40 medium-sized instances, including 10 instances of each group 30×3, 30×5, 50×3, and 50×5, were studied. Finally, 10 large-sized instances of group 100×10 were generated and tested. Multiple vehicles were used for these test problem instances to ensure that all deliveries could be completed within the planning horizon. For the instances of small-sized and medium-sized, the SA procedure was run for 10 random replications. For large-sized instances, the SA procedure was run only once. The control parameters of SA were set as τend=0.1, τ=0.99, and N=100*n for all instances. The SA procedure was coded by Visual C++ 6.0 and run in a PC computer equipped with CPU Intel® Core™ i5-3571 @ 3.4GHz and MS Window 7 system.In Table 11, the solutions found by the SA procedure for small-sized instances are compared to the optimal solutions found by AMPL/CPLEX. The tardiness penalty part is not considered for a better comparison (only No.2 instance of group 5×5 has tardiness penalty). Column Fs indicates how many feasible solutions were found in 10 runs. Columns Avg. and Best represent the average solution and the best solution found in 10 runs, respectively. Column Dev.% is the percentage deviations of the best solutions from the optimal solutions found by AMPL/CPLEX. Column UP is the Upper Bound calculated by Eq. (13). Column R.% represents to what extents the optimizing procedure in Fig. 7 adjusted non-optimal solutions toward optimality. R.% is calculated as R.%=(F′−F)/(F′−F*)×100%, where F* is the optimal objective function value, and F and F′ are the objective function values obtained by the SA algorithm with and without using the optimizing procedure, respectively. Column St.dev. % is the ratio of the standard deviation of 10 runs to the best solution. It can be observed that the SA procedure found the optimal solution for 21 of the 30 small instances. The optimal solutions were found in 186 (89%) out of 210 random replications. In general, the average deviation from optimal solutions is 1.0% for group 5×5, 0.3% for group 10×5 and 0.4% for group 15×5, which are relatively small for real-life applications. The optimizing procedure performed well in adjusting non-optimal solutions toward optimality as 14 of the 30 instances were successfully optimized by the optimizing procedure. The difference between the optimal solutions before and after applying the optimizing procedure (i.e., R% in Table 11) exceeds 70% on the average.The results for medium and large-sized instances are listed in Table 12. The average and best solutions of 10 runs are displayed in columns Avg. and Best, respectively. The computational time also increased considerably with increasing problem size, but the largest problem could be solved less than an hour. Since the GVRSP is NP-hard, the optimal solutions for medium and large-sized instances are difficult to find. The SA provides a basic benchmark results for comparison with other competitive heuristic meta-methods such as Genetic Algorithms, Tabu Search, and Ant Colony Optimization, and Particle Swarm Optimization.

@&#CONCLUSIONS@&#
We have studied the green vehicle routing and scheduling problem (GRVSP) considering a general case of time-dependent traffic conditions under multiple time periods. In the GRVSP, vehicles need to optimize their travel plans by both arc routing and time scheduling in order to achieve the minimum amount of greenhouse gas emissions and tardiness. A mixed integer linear programming (MILP) model with hierarchical objectives and linear constraints is developed for the GRVSP. The proposed formulation is different from the literature where the schedule of a vehicle is generally determined by the time point when the vehicle departs from each node on its route. In the proposed formulation, the schedule of the vehicle depends on the distance that the vehicle travels on each arc in each period. The main advantage of the proposed formulation is that more general time-dependent traffic patterns can be considered. In addition, the complexity of calculating CO2 emissions within the mathematical model is eliminated. To achieve these objectives, the average travel speed of a vehicle is assumed to be given and depend on the time period when the vehicle actually travels the arc. Although assuming pre-determined travel step can be considered a drawback of the formulation, in many real-life cases like urban roads, the vehicle speed is not a decision variable, but a parameter dictated by traffic rules and conditions. The proposed formulation is more appropriate for urban transportation networks where the travel speed of a vehicle depends on the road conditions and the time of the day.The MILP model can either be optimally solved with single objective optimization, such as the total CO2 emissions, the total arrival time, the total travel distance, and the total travel time, or be solved with hierarchical objectives under Pareto optimality to assist transportation companies in making trade-off decisions according to a carbon trading system in the future.Since the formulation is linear, it can be solved to optimality by most of the existing MIP solvers like CPLEX. In our experiments, the maximum problem size can be solved by CPLEX in reasonable computational time is 19×5 within a region of 10×10 square miles, which is realistic for small-sized problems in real-life applications. We performed simulation experiments based on two existing models for estimating CO2 emissions of heavy-duty vehicles with different levels of gross weight and find that the MILP model for the GRVSP can reduce a various range of CO2 emissions (also for fuel cost) from 0% to 50%, (14.2% on the average) compared to distance-oriented solutions and 28% on the average compared to travel-time-oriented solutions. Compared to the reported CO2 reduction results of the existing models in the literature (such as [24] by 22.69% and 24.61%, Miguel [15] by 14.5%, [28] by 7%, and [22] by 4.3% on the average with maximum of 11.4%), we obtained slightly higher levels of CO2 emissions reductions when the CO2 emissions-based objective was used instead of the traditional distance or time-based objectives. One of the reasons for this result is that we were able to use more complex and more general time-dependent traffic congestion scenarios in the model. Under time-dependent traffic conditions, vehicle routing and scheduling should be considered together to reduce CO2 emissions, and the impact of vehicle scheduling decisions on reducing CO2 emissions becomes more critical with the increasing complexity of traffic congestion patterns.To solve large size problems, we represented the problem as an R&S map and developed a simulating annealing algorithm to solve medium & large-sized problems with near-optimal solutions. Computational experiments on 30 small-sized problem instances show that over two-third of the GVRSPs can be solved with optimal solutions, with less than 1% of average deviation from the optimal solutions. Medium & large-sized GRVSP instances have been tested by the SA algorithm, providing benchmarks for the future research, which may involve developing and testing other meta-heuristics (single or multi-objective) based-on the modeling framework proposed in this paper. In addition, the model can be expanded by considering other factors such as the changes in the weight of the vehicle and load during the service as a further research topic.