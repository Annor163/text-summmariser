@&#MAIN-TITLE@&#
Degree reduction of Bézier curves with restricted control points area

@&#HIGHLIGHTS@&#
We propose a new approach to the problem of degree reduction of Bézier curves.We impose constraints of the control points area.The degree reduced curve is suitable for further modification and applications.We give and compare two methods of solving the new problem.

@&#KEYPHRASES@&#
Bézier curve,Degree reduction,Constrained least squares approximation,

@&#ABSTRACT@&#
In this paper, we propose a new approach to the problem of degree reduction of Bézier curves with respect to the least squares norm. We impose restrictions of the control points area to get more intuitive location of the control points. As a result, the degree reduced curve is suitable for further modification and applications. We present and compare two methods of solving the new problem. First one is based on quadratic programming approach and the other on BVLS algorithm. Some illustrative examples are given.

@&#INTRODUCTION@&#
The problem of degree reduction of Bézier curves is to approximate an original curve with another Bézier curve of lower degree. It is an important problem in CAGD. Degree reduction of curves might be necessary for data exchange between computer modeling systems. It is also used in data compression.First, let us discuss the conventional approach to the problem of degree reduction of Bézier curves. The most frequently used strategy is to find control points of the degree reduced curve in order to minimize a chosen error function. Error of the approximation is often measured usingL2-norm (see, e.g.,  [1–4]) orL∞-norm (see, e.g.,  [5–8]). In the case ofL2-norm, the algorithms usually solve a system of normal equations (see, e.g.,  [2]). Some of them use different approach, e.g., the properties of so-called constrained dual Bernstein basis polynomials (see  [3]). Degree reduction with respect to theL∞-norm can be solved using, e.g., Chebyshev economization (see  [7]). To maintain a smooth connection in the case of degree reduction of many Bézier curves joined end-to-end, constraints involving parametric continuity (see, e.g.,  [1,3,9]) or geometric continuity (see, e.g.,  [2,4,10]) at both endpoints are imposed.As a result of the conventional degree reduction, one may obtain control points, which are located far away from the plot of the curve. In the next section, we give appropriate example and explain why this is a serious defect. Then, we show that this issue can be eliminated by restricting the control points area. Therefore, the main objective of this paper is to propose a new approach to the problem by imposing additional constraints of the new type. Such approach allows us to obtain results, which seem to be practically more useful. Furthermore, we show that the solution always exists. The new degree reduction problem requires completely different methods than in the case of the conventional problem. In this paper, we describe two approaches. First one solves the quadratic programming problem using Wolfe’s method. The other one is based on BVLS algorithm, which allows to determine the solution by solving simple subproblems. We relate the subproblem with the degree reduction problem and give formula for its solution. Because of the additional restrictions, the approximation error must be larger than for the conventional problem. The new problem is also more difficult to solve. As a result, the running times of presented methods are longer.The outline of this paper is as follows. Further in this section, we give necessary definitions and notation. Section  2 contains example motivating new approach to the problem of degree reduction. In Section  3, we formulate the problem of degree reduction of Bézier curves with restricted control points area. In Section  4, we solve the problem using quadratic programming approach and prove that the solution always exists. Section  5 brings another method, which is based on BVLS algorithm. Results of experiments are given in Section  6, and for a brief summary of the paper, see Section  7. In the Appendix, we give formula for the solution of the subproblem, which is an essential part of the BVLS algorithm.LetΠn2(n∈N)denote the space of all parametric polynomials inR2of degree at mostn. A Bézier curvePn∈Πn2is the following parametric curve:Pn(t)=∑i=0npiBin(t)=bn,tp(0≤t≤1),wherep≔[p0,p1,…,pn]Twithpi≔(pix,piy)∈R2, andbn,t≔[B0n(t),B1n(t),…,Bnn(t)], whereBindenotes theith Bernstein polynomial of degreen, given byBin(t)≔(ni)ti(1−t)n−i(i=0,1,…,n;n∈N).The components of vectorpare called control points of Bézier curvePn, andnis the degree of the curve.Let{tk}k=0N(N∈N)be a strictly increasing sequence whose elements are in the interval[0,1]. The least squares distance between Bézier curvesPnandRm∈Πm2is given by the formula(1.1)d2(Pn,Rm)≔∑k=0N‖Pn(tk)−Rm(tk)‖2,where‖⋅‖denotes the Euclidean vector norm inR2.LetM∈Rn×mbe a matrix, and letA≔{i1,i2,…,ik}⊂[0,n−1],B≔{j1,j2,…,jl}⊂[0,m−1]be sets of natural numbers, sorted in ascending order. Notation(1.2)MA,Bdefines a matrix formed by rowsi1+1,i2+1,…,ik+1and columnsj1+1,j2+1,…,jl+1of matrixM. Similarly, we usevA, wherevis a vector inRn.Forv≔[v1,v2,…,vr]T∈Rrandw≔[w1,w2,…,wr]T∈Rr, notationv≤wmeans thatvi≤wi(i=1,2,…,r). Definition ofv≥wis similar to the previous one.To solve the conventional problem of degree reduction, we look for a curve that minimizes a properly defined error and satisfies continuity conditions at the endpoints. This approach gives precise results, however, we have no control over the location of the resulting control points.A designer that modifies the control points uses a convex hull property and assumes that the curve will not be far away from the control points. It can be said, that the size of the convex hull is a measure of predictability of the curve. In many cases, resulting control points are located far away from the plot of the curve so that the coordinates can be large numbers. As a result, it may happen that further editing of the obtained curve can be difficult or even impossible.Notice that simple tests based on the convex hull can give quick solutions of problems, which usually require more expensive calculation. For example, if the convex hulls of two curves do not intersect, which is fairly easy to determine, then the curves do not intersect, which normally is more expensive to decide. Intersection problem has many practical applications. Suppose that two Bézier curves represent the paths of robotic arms. To avoid collisions one should solve the intersection problem (see  [11, p. 49]). Analogously, one can quickly check that a curve and a surface do not intersect, or decide that a point does not lie on a curve. This strategy can be useful, but only if the control points are not far away from the curve and the convex hull is not too big.Example given below shows that by imposing reasonable constraints on the control points, one can eliminate the above-described defect and get satisfying results.Example 2.1LetPdenote the Bézier curve “Ampersand” of degree ten (for the control points, see http://www.ii.uni.wroc.pl/~pgo/papers.html). LetRbe the Bézier curve of degree eight, satisfying the following conditions:1.P(t)=R(t)fort=0,1;distanced2(P,R)is minimized, wheretk≔k/N(k=0,1,…,N)withN=14(cf. (1.1)).Fig. 1(a) shows the plots of curvesPandR. The result is quite precise, but this solution has certain defect, which is illustrated in Fig. 1(b) showing the location of control points of the curves. Clearly, one can see that the resulting control points are far away from the plot of curveR. This can significantly disturb further modeling of this curve because it is difficult to modify it by moving such control points. Furthermore, the convex hull of curveRis much bigger, than the one of curveP, and useless in finding quick solutions of the problems mentioned earlier.Now, let us impose additional constraints on the control points of curveR. We enforce their location inside the specified rectangular area (including edges of the rectangle). As a result, we obtain curve having more intuitive location of the control points (see Fig. 2). The curve can be easily modified, which is desired from a practical point of view. In addition, this approach leads to much smaller convex hull. Obviously, the error is larger than for the conventional degree reduction because we imposed the additional constraints. However, the result of approximation is satisfying.Taking into account the above remarks, in this paper we propose a new approach to the problem of degree reduction of Bézier curves, which allows us to restrict the area of resulting control points.In this section, we formulate the following new variant of degree reduction of Bézier curves.Problem 3.1Let be given a Bézier curvePn∈Πn2,Pn(t)=∑i=0npiBin(t)=bn,tp(0≤t≤1).Find a Bézier curve of degreem,Rm(t)=∑i=0mriBim(t)=bm,tr(0≤t≤1;m<n),wherer≔[r0,r1,…,rm]Tis a vector of searched control pointsri≔(rix,riy)∈R2(i=0,1,…,m), satisfying the following conditions:(i)value of the least squares error(3.1)E≡E(r)≔d2(Pn,Rm)=∑k=0N‖bn,tkp−bm,tkr‖2is minimized in the spaceΠm2, where{tk}k=0N(N∈N)is a given, strictly increasing sequence whose elements are in the interval[0,1];PnandRmareCα,β-continuous (α,β≥0andα+β<m−1) at the endpoints, i.e.,(3.2)Pn(i)(0)=Rm(i)(0)(i=0,1,…,α),Pn(j)(1)=Rm(j)(1)(j=0,1,…,β);control pointsri(α<i<m−β)are located inside the specified rectangular area, including edges of the rectangle, i.e.,(3.3)lz≤riz≤uz(i=α+1,α+2,…,m−β−1;z=x,y),wherelx,ly,ux,uy∈R.Remark 3.2Further in this paper, the minimization of (3.1), with constraints (3.2), but without conditions (3.3) is called the traditional degree reduction.First, notice that conditions (3.2) imply the following formulas for the coordinates of control pointsr0,r1,…,rαandrm,rm−1,…,rm−β(see, e.g.,  [3]):(3.4)rjz=(nj)(mj)−1Δjp0z−∑k=0j−1(−1)j+k(jk)rkz(j=0,1,…,α),(3.5)rm−jz=(−1)j(nj)(mj)−1Δjpn−jz−∑k=1j(−1)k(jk)rm−j+kz(j=0,1,…,β),wherez=x,y, andΔ0qi≔qi,Δkqi≔Δk−1qi+1−Δk−1qi(k=1,2,…).The remaining control pointsrα+1,rα+2,…,rm−β−1are to be determined to satisfy conditions (i) and (iii).Remark 3.3It is easy to check, that the square of error function   (3.1) can be represented asE2(r)=Ex2(rx)+Ey2(ry),whereEz(rz)≔∑k=0N(bn,tkpz−bm,tkrz)2withpz≔[p0z,p1z,…,pnz]T,rz≔[r0z,r1z,…,rmz]T(z=x,y). Therefore, in order to satisfy condition (i), with constraints (iii), it is sufficient to minimize independentlyEx2andEy2, under the conditions (3.3) forz=xandz=y, respectively. As a result, further in this paper, we limit ourselves to the case ofz=x.In the next two sections, we solve Problem 3.1 and use the following definitions. Let us define vectorslx≔[lx,lx,…,lx]T∈Rm−β−α−1,ux≔[ux,ux,…,ux]T∈Rm−β−α−1,andrxc≔[r0x,r1x,…,rαx,rm−βx,rm−β+1x,…,rmx]T,rxf≔[rα+1x,rα+2x,…,rm−β−1x]T.Similarly, we havebm,tc≔[B0m(t),B1m(t),…,Bαm(t),Bm−βm(t),Bm−β+1m(t),…,Bmm(t)],bm,tf≔[Bα+1m(t),Bα+2m(t),…,Bm−β−1m(t)].Now, we use the quadratic programming approach to solve Problem 3.1.Quadratic programming is an optimization problem of minimizing or maximizing a quadratic objective functionfof several variablesx∈Ri, subject to linear constraints on these variables. More precisely, we have to find the extremum of function(4.1)f(x)=cTx+12xTQx,whereQ∈Ri×i,c∈Ri, subject to the following constraints:(4.2)Gx≤h,x≥0,whereG∈Rj×i,h∈Rj.We will show that significant terms of functionEx2can be written in the form (4.1). First, notice that(4.3)Ex2(rx)=∑k=0N(bn,tkpx−bm,tkrx)2=∑k=0N(bn,tkpx−bm,tkfrxf−bm,tkcrxc)2=∑k=0N(bm,tkfrxf)2−2∑k=0N((bn,tkpx)(bm,tkfrxf)−(bm,tkcrxc)(bm,tkfrxf))+∑k=0N((bn,tkpx)2+(bm,tkcrxc)2−2(bn,tkpx)(bm,tkcrxc))≕g(rxf)+∑k=0N((bn,tkpx)2+(bm,tkcrxc)2−2(bn,tkpx)(bm,tkcrxc)).Term (4.3) is constant, therefore, it is sufficient to minimize functiong. It is easy to check, thatg(rxf)=dTrxf+12(rxf)TQrxf,whereQ≔[Qi,j]∈R(m−β−α−1)×(m−β−α−1),d≔[di]∈Rm−β−α−1, with(4.4)Qi,j≔2∑k=0NBi+αm(tk)Bj+αm(tk)(i,j=1,2,…,m−β−α−1),di≔2∑k=0N(bm,tkcrxc−bn,tkpx)Bi+αm(tk)(i=1,2,…,m−β−α−1).Constraints (3.3), forz=x, are not written in the form (4.2). However, they can be easily adjusted. Assume thatsxf≔rxf−lxandh≔ux−lx. Then, the problem is to minimizeg(sxf+lx)=cTsxf+12(sxf)TQsxf+dTlx+12lxTQlxwith respect tosxf, wherec≔d+Qlx, subject to the constraints(4.5)Gsxf≤h,sxf≥0,whereGis the identity matrix of sizem−β−α−1.Finally, taking into account that termdTlx+12lxTQlxis constant, a goal is to find the minimum of function(4.6)f(sxf)≔cTsxf+12(sxf)TQsxf,subject to the constraints (4.5).Obviously, if functionfhas a minimum point atsxf, subject to the constraints (4.5), then we can minimize functionEx2, subject to the constraints (3.2) and (3.3), by settingrx≔[r0x,r1x,…,rαx,rα+1x,…,rm−β−1x︸rxf,rm−βx,…,rmx]T,whererxf≡[rα+1x,rα+2x,…,rm−β−1x]T≔sxf+lx(see (3.4), (3.5)).It is well known, that if matrixQis positive semi-definite and feasible set (4.2) is bounded, then the quadratic programming problem has a solution (see, e.g.,  [12, Section 2.3]).Theorem 4.1MatrixQgiven by   (4.4)   is positive semi-definite.ProofLetx≔[x0,x1,…,xm−β−α−2]Tbe any non-zero vector inRm−β−α−1. Notice thatxTQx=2∑i=α+1m−β−1∑j=α+1m−β−1xi−α−1xj−α−1∑k=0NBim(tk)Bjm(tk)=2∑k=0N(∑i=α+1m−β−1Bim(tk)xi−α−1)2≥0,which completes the proof.□Corollary 4.2Objective function related toProblem  3.1   is convex, therefore, the problem has a solution.Problem of minimizing function (4.6), subject to the constraints (4.5), can be solved using, e.g., Wolfe’s method  [13], which is a simplex-type method for the quadratic programming. The disadvantage of this method is that it has exponential worst-case complexity. In general, however, it works relatively fast, particularly for small-sized problems. Furthermore, there are algorithms solving quadratic programming problems in polynomial time (see  [14,15]), but in the context of degree reduction problem, their significance is only theoretical.In this section, we solve Problem 3.1 using BVLS algorithm  [16]. This method seems to be more interesting from a practical point of view than the previously mentioned approach.BVLS algorithm, which is a generalization of iterative NNLS algorithm (non-negative least-squares)   [17], solves so-called  bvls problem (bounded-variable least-squares), written in the following form:(5.1)minv≤x≤w‖Ax−b‖,whereA∈Rj×i,x,v,w∈Ri,b∈Rj. Strategy of the algorithm is to find so-called  active set for the optimal solution. We call a constraint active, if it forces boundary value of a variable. Solution improves in each iteration of the algorithm, until the optimal one is found, which happens in the finite number of steps (cf. [16, Section 2]).In our case, the adjustment of Problem 3.1 to the form (5.1) is simple. We assume thatv≔lx,w≔ux,x≔rxf, andA≔[Ai,j]∈R(N+1)×(m−β−α−1),b≔[bi]∈RN+1, whereAi,j≔Bj+αm(ti−1)(i=1,2,…,N+1;j=1,2,…,m−β−α−1),bi≔bn,ti−1px−bm,ti−1crxc(i=1,2,…,N+1).We will now describe, step by step, how to solve Problem 3.1 using BVLS algorithm. Note that a more detailed description of the original algorithm, including all necessary formulas, is given in  [16].Step 1. Let us assume that in each iteration of the algorithm, vectorxcontains current values of all variables, setFcontains indices of variables satisfying strict version of inequalities (3.3), whereas setsLandUcontain indices of variables which have reached minimum and maximum permissible value, respectively (cf. (3.3)). At the beginning, we setL∪U≔0̸,F≔{α+1,α+2,…,m−β−1},x≔lx+ux2,and with such assumptions, in the first iteration, we omit the next step of the original algorithm and go to Step 3.Step 2. We omit this step in the first iteration of the algorithm. We define a functionh(x)≔12‖Ax−b‖2, and a vectorg≡[gα+1,gα+2,…,gm−β−1]T≔−∇h(x)≡AT(b−Ax). The algorithm selects a variable from setL∪U. The chosen variable is the one that violates following Karush–Kuhn–Tucker (KKT) optimality conditions for the bvls problem:(5.2)gi≤0(i∈L),gj≥0(j∈U),the most in terms of absolute value (for details, see  [16, Section 2, pt. 4]). Next, the index of selected variable is transferred to setF. If none of the variables violate the above conditions, thenxis the optimal solution of the bvls problem, and the algorithm stops.Step 3. Next, we solve a subproblem, i.e., we find the optimal values of variables whose indices are in setF, subject to the fixed values of variables whose indices are in setL∪U. More precisely, the subproblem is to minimize functionEx2, subject to the constraints (3.2) and conditions(5.3)rix=lx(i∈L),rjx=ux(j∈U)(cf. (3.3)). Notice that we ignore constraints (3.3). Taking into account the arrangements from Step 1, we observe that in the first iteration of the algorithm, subproblem is equivalent to the traditional degree reduction problem (see Remark 3.2) in the case ofz=x(see Remark 3.3). In the next iterations, we are dealing with degree reduction problem, subject to the constraints (3.2) and (5.3). Formula for the solution of the subproblem is given in the Appendix.Step 4. If the obtained values of all variables, whose indices are in setF, satisfy strict version of inequalities (3.3), then one should assign them tox, and go to Step 2 to check the optimality of such result. Otherwise, we have to repair the solution (see Step 5).Step 5. Now, we repair the solution, i.e., we modify values of variables whose indices are in setF(for details, see  [16, Section 2, pts. 8–10]). The repair guarantees that (i) a variable, which was the farthest from fulfilling the constraints, now has the boundary value; (ii) other variables, whose indices are in setF, satisfy the constraints (3.3). As a result of the repair, an index of at least one variable is transferred from setFto setLorU. After determining the elements of setsF,LandU, one should assign new values tox, and go back to Step 3, where the subproblem is solved again.Remark 5.1It is worth noting, that an approximate solution, sufficiently accurate or received after a specified number of iterations, often only slightly differs in quality from the optimal one. Therefore, a reasonable stopping criterion, alternative to the optimality conditions (5.2), may allow earlier termination of the algorithm and result in a solution close enough to the optimum.Finally, we give a block diagram of BVLS algorithm, including the usage of alternative stopping criterion (see Fig. 3).This section provides several examples of application of the discussed methods.Results of the experiments have been obtained on a computer with Intel Core i5-3337U 1.8 GHz processor and 8 GB of RAM, using 8-digit arithmetic.Maple™13 worksheet containing implementation of the algorithms and tests is available on the website http://www.ii.uni.wroc.pl/~pgo/papers.html. Text files containing control points of the designed Bézier curves are also available. Optimal solution of the traditional degree reduction problem (see Remark 3.2) is obtained by solving a system of normal equations, using Maple™ fsolve procedure. Optimal solution of Problem 3.1 is determined by Wolfe’s method and the same result is computed by BVLS algorithm. Approximate solution of Problem 3.1 is obtained by BVLS algorithm (see Remark 5.1).For each example, we give the least squares errorE(see (3.1)), and the maximum errorE∞≔maxt∈DM‖Pn(t)−Rm(t)‖≈max0≤t≤1‖Pn(t)−Rm(t)‖,whereDM≔{0,1/M,2/M,…,1}withM≔500. In each case, we use the sequence{tk}k=0Nof equally spaced points for the least squares distance (1.1), i.e.,tk≔k/N(k=0,1,…,N).Example 6.1Let us apply the algorithms to degree thirteen Bézier curve “Double loop”, which is given in  [2, Appendix B]. For this curve, we set the rectangular area in the following way:(6.1)lx≔min0≤k≤npkx−13=−13,ux≔max0≤k≤npkx+30=101,ly≔min0≤k≤npky−20=−20,uy≔max0≤k≤npky+20=74.Fig. 4(a)–(c) illustrates the results of degree reduction, i.e., the obtained Bézier curves of degree nine. Clearly, solution of the traditional problem is very precise (see Fig. 4(a)). However, it has the defect described in Section  2 (see Fig. 4(b)), whereas solution of Problem 3.1 is much more satisfying in this regard (see Fig. 4(c)). Obviously, because of the additional restrictions, approximation error is inevitably larger than for the traditional approach.Example 6.2Let us consider the problem of degree reduction of Bézier curves, which are joined to obtain eight-segment composite Bézier curve “Flamingo” (see Fig. 5(a)). The algorithms were applied independently to every segment of the composite Bézier curve. Constraints (3.3) were chosen so that the resulting control points are placed in the rectangular areas, bounded by the outermost control points of the original curves, i.e.,(6.2)lz≔min0≤k≤npkz,uz≔max0≤k≤npkz(z=x,y).Results of the experiments are given in Table 1, which consists of the following columns:1.parameters—degreenof the original curve, degreemof the obtained curve, numberNof points for the least squares distance (1.1), and ordersα,βof the parametric continuity att=0,1, respectively;values of errorsEandE∞in the cases of:(i)optimal solution of traditional degree reduction problem,optimal solution of Problem 3.1,approximate solution of Problem 3.1;pairs of numbers(Ix,Iy)of iterations, required for BVLS algorithm to find optimal solution and approximate one, running separately for thex,ycoordinates (see Remark 3.3).Remark 6.3Now, let us discuss the issue of setting the rectangular area (see (3.3)). A good way to start is to choose (6.2), which means that the resulting control points will be placed in the rectangular area, bounded by the outermost control points of the original curve. Usually, this simple idea works quite well (see Example 6.2). In some cases we can even reduce the size of the rectangle, as in Example 2.1, where we setlx≔min0≤k≤npkx=−28,ux≔max0≤k≤npkx=196,ly≔min0≤k≤npky=−15,uy≔max0≤k≤npky−65=135,and the result is still good enough. However, Example 6.1 shows that sometimes we should expand the area to get satisfying results (see (6.1)). The above-described method of setting the rectangular area is only a suggestion. Choice of restrictions (3.3) depends on the considered example. In general, this is a difficult problem to solve. The author intends to study it in the future.

@&#CONCLUSIONS@&#
In this paper, we introduce a novel approach to the problem of degree reduction of Bézier curves with constraints. We impose the restrictions of control points area to get degree reduced curves with more intuitive location of control points. The resulting curves are more suitable for further modification, therefore, the algorithms are more practical. In addition, one can use the convex hull property of such curves to solve efficiently some important problems. The cost of determining an optimal solution, satisfying the additional constraints, is obviously larger than for the traditional degree reduction problem. However, in the case of BVLS algorithm, one can reduce the cost by requiring less accuracy. Approximate solution, obtained by choosing reasonable stopping criterion, often only slightly differs in quality from the optimal one. Since BVLS algorithm is more adjusted to the considered problem, it seems to be a better choice than Wolfe’s method, which is a tool that solves also more general problems. In addition, it allows to determine the solution by solving simple subproblems. Therefore, further research can focus on finding efficient methods of solving the subproblem.Observe that in the case of degree reduction of three dimensional Bézier curves, Remark 3.3 can be generalized. As a result, degree reduction of such curves can be done in a componentwise way. Therefore, the methods described in this paper are sufficient to solve such problem and can be easily applied.In the near future, the author intends to study Problem 3.1 with geometric continuity constraints instead of the parametric continuity conditions. Such approach should improve the quality of results.