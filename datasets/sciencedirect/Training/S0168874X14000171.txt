@&#MAIN-TITLE@&#
A new concept for the contact at the interface of steel–concrete composite beams

@&#HIGHLIGHTS@&#
Steel–concrete composite beam at real scale.2D beam F.E. model.The contact at the interface between the profile flange and the concrete slab is considered.Augmented Lagrangian Method is used to solve contact problem.A new concept so called “Flying Node Concept” is proposed to take into account the continuous contact.

@&#KEYPHRASES@&#
Flying Node Concept,Augmented Lagrangian Method,Contact,F.E.M.,Composite beams,

@&#ABSTRACT@&#
This paper deals with the problem of contact at the interface of steel–concrete composite beams. The F.E. model “Pontmixte”, able to study continuous composite beams at real scale, was based on a finite element of composite beam which considers only 4 degrees of freedom per node: both longitudinal displacements of the slab and the steel beam and common vertical displacement and rotation of the whole composite cross-section. This assumption did not allow any uplift at the interface between both materials. A “new” finite element is proposed in this work with 6 degrees of freedom per node in the aim to include a contact algorithm in the model. The originality of the method is to use the Augmented Lagrangian Method to solve the contact problem at the steel–concrete interface including a new concept so-called: “Flying Node Concept”. This concept solves the problem of “continuous” contact at the interface that could sometimes occur along the beam especially in the case of distributed loads. The influence on the loading capacity of the beam and also the influence on some design variables are highlighted.

@&#INTRODUCTION@&#
In past few years, several finite element models have been proposed for the analysis of composite steel–concrete beams; most of them are based on one-dimensional beam elements with embedded interlayer slip. “Pontmixte” [1] is one of the most innovative programs able to study composite continuous beams at real scale making two numerical integrations – the first on the height of the cross-section and the second along the longitudinal axis of the beam. Nevertheless, the first version of this model assumed that there is no uplift between the concrete slab and the steel beam. The whole composite cross-section had same vertical displacement and same rotation. This assumption prevents the prediction of possible uplift which could occur in particular loading cases for continuous beams and especially on both sides of the intermediate supports.Huang et al. [2,3] proposed a non-linear layered finite element procedure for predicting the structural response of reinforced concrete slabs subjected to fire. The proposed procedure based on Mindlin/Reissner (thick plate) theory includes both geometric and material non-linearities. In this study a total Lagrangian approach was adopted in which displacements are referred to the original configuration and small strains were assumed. In the case of beams subjected to fire, contact problem needs a special attention.Amilton et al. [4] presented a family of zero-thickness interface elements developed for the simulation of composite beams with horizontal deformable connection, or interlayer slip. The proposed elements include formulations to be employed with Euler–Bernoulli as well as with Timoshenko beam theories, combined to displacement-based beam elements sharing the same degrees of freedom. The elements that can be employed for the simulation of steel–concrete composite beams, was computed more recently by Batista et al. [5] combining with the plate formulation of Huang. The proposed model used to analyze composite floor that includes interface elements appeared able to give the relative longitudinal and transversal displacements between the slab and the steel beam as-well-as the relative vertical displacements in the transverse plane.Recently, Qureshi et al. [6] studied the effect of shear connector spacing and layout on the shear connector capacity in composite beams. A proposed 3D model (Plan dimensions: 1500mm×1500mm), is loaded as a horizontal push test. This model developed with ABAQUS, includes profiled sheeting and the interfaces concerned by the contact algorithm are: (top profile sheeting – bottom of the concrete slab) and (shaft of the headed studs – surrounding concrete). Running time and convergence difficulty lead to consider 3D models inappropriate to study a continuous bridge beam at real scale.Due to the non-linear nature of contact mechanics, such problems in the past were often approximated by special assumptions within the design process. Due to the rapid improvement of modern computer technology, one can today apply the tools of computational mechanics to simulate applications which include contact mechanisms numerically [7].The model proposed herein takes into account the slip and lengthening–shortening nonlinear behaviors of the connection. Whatever the zone where the contact occurs after uplift, the relative vertical displacements along the longitudinal axis of the beam is obtained without interpenetration between materials.Different methods exist to solve the contact problem [8-15]. For example, in the penalty method, increasing the penalty factor to infinity would lead to the exact solution, but in computational application it is not possible to use very high penalty factors because of ill-conditioning of the system. The Lagrange multiplier method fulfills the contact constraints exactly by introducing additional variables; for this reason the Lagrange multiplier generate an increment in the system-matrix size. A combination of the penalty method and the Lagrangian multiplier method leads to the so-called Augmented Lagrangian Method (ALM). With this method, the penalty factor does not need to reach a high value to get the convergence of the iterative process. This method will be used in the proposed model to solve the contact problem at the interface between the concrete slab and the steel beam subjected to the inequality constraint corresponding to the non-penetrability between both materials.For special loading cases, it could happen that the contact at the interface is not only “node-to node” and concerns a part of the finite element length. The “Flying Node Concept (FNC)” is a new method proposed in this work to make the appropriate adjustments to the final solution of the problem.Practically, the connection design leads to a number of studs which are distributed uniformly along the continuous beam or by portions of it (Eurocode recommendations for studs׳ design). This uniform distribution is generally validated by models that use a node-based connection. In order to take into account the actual continuous contact by using a node-based connection, the FNC algorithm is proposed. The main objective is to propose a longitudinal stud distribution that could be as realistic as possible by taking into account the continuous contact. The first mesh of the beam (same as studs׳ location) begins uniform and at the end of calculation, a new stud location is proposed. If the studs׳ distribution does not change significantly from the beginning until the end of calculation; this means that the FNC algorithm was not activated significantly and so, no continuous contact zones have been occurred.Before solving the contact problem at some composite cross-sections along the beam during the loading history, other cross-sections where the uplift could occur or the contact without penetration between both materials is satisfied should be located. With the index (s) for the slab and (g) for the steel beam, the following notation is used:d(s): distance between the interface and the centroïd of the slab cross-section,d(g): distance between the interface and the centroïd of the steel beam cross-section,γj: stud slip at the node j,(uj(s)vj(s)θj(s)): horizontal displacement, vertical displacement and rotation of the slab cross-section at the node j, and(uj(g)vj(g)θj(g)): horizontal displacement, vertical displacement and rotation of the steel beam cross-section at the node j.The following tests must be activated depending on the sign of the variableαj=vj(s)−vj(g):•Case 1: the contact without penetration is satisfied at the node j → the stud is only subjected to a slip (Fig. 1).Case 2: the uplift of the concrete slab with the bending of the steel beam → the contact does not exist at the node j and the bolt is subjected to both slip and lengthening (Fig. 2).Case 3: the uplift of the concrete slab greater (in absolute value) then the uplift of the steel beam → the contact does not exist at the node j and the stud is subjected to both slip and lengthening (Fig. 3).The Augmented Lagrangian Method is used to solve the “node-to-node” contact problem. For elastic deformation in solid mechanics, the kinematically admitted displacements that satisfy a stable equilibrium state are those whom minimize the total potential energy – this is the kinematic approach. In our problem, the total potential energy is(1)V=12ΔtKΔ−ΔtFwith:Δ=∑{de},K=∑[Ke]andF=∑{fe}where:{de}is the finite element displacement vector,[Ke]is its stiffness matrix and{fe}is its load vector.The minimization of Eq. (1) corresponds to(2)KΔ−F=0The problem of partial derivative equations is replaced by a linear system of equations and the minimal value of V in classical finite element approach of unconstrained problem is:(3)MinV=−12ΔtFThe constrained problem to solve at each node j can be written as follows:(4){MinVsujectedtoαj≥0The problem can be solved as a series of unconstrained minimization problems. It is pointed out that the contact depends on the behavior of the connectors. Even if the shear failure of a connector (for example) corresponds to 6mm slip, all along the beam its maximum slip remains around 2mm (always in elastic range) in serviceability limit state. Similar remark could be done for the tension of a connector. The use of Minimum Potential Energy in this case is then justified.The penalty method approach gives:(5){Π=V+p2∑αj2Aftereachiteration:updatingpAt iteration (I), penalty method solves this problem, then at iteration (I+1) it re-solves the problem using a largest value of the penalty factor p using the old solution as the initial guess.The ALM combines the penalty method with the Lagrangian multipliers method. The ALM uses the following constrained objective:(6){Π=V+p2∑αj2−∑λjαjAftereachiteration:updatingpandreplacingλjbyλj−pαjThe advantage of the ALM is that unlike the penalty method, it is not necessary that p have a very large value in order to solve the original constrained problem. Instead, because of the presence of the Lagrangian multiplier λj, p can stay much smaller.According to Eq. (6), the modifications that have to be done to the assembled stiffness matrix and to the corresponding loading vector, at each node j, are:(7)It is easy to verify that the equilibrium is satisfied in Eq. (7). The stiffness matrix remains symmetric and there is one line and one column added for each node being in contact.In practice, it is easier to add the supplementary equations corresponding to the nodes being in contact, at the end of the initial system as shown in Eq. (8). The system of equations to be solved has finally a “variable” dimension between (n×n) and (2n×2n) maximum depending on the number of nodes being in contact (q1, q2, q3,…). In Eq. (8), each value of the Lagrangian multiplier λqicorresponds to a node qibeing in contact. A penalty factor pqiwill be adjusted for each node qi; its initial value is equal to 1 and it increases during iterations (multiplying by 10 at each iteration). During the material nonlinear iterative process, the number of nodes being in contact could change.(8)During the loading history, it is possible to have some zones subjected to a contact that concerns a part of the element-length and not only its nodes. This could occur in case of distributed load more than in case of concentrated loads. In order to take into account this actual phenomenon, one proposes an approach so called “Flying Node Concept (FNC)”. This method should be included in the iterative process that solves the contact problem at the interface previously described.The FNC adapts the longitudinal mesh of the beam during the iterative process in order to take into account the “continuous” contact to a “node-to-node” connection. If the initial mesh of the beam appears unchanged at the end-loading history, it means that all the contacts have been “node-to-node”; otherwise, the final mesh will inform about the zones that have been subjected to a “continuous” contact. It is worth to mention out that these zones could sometimes appear and sometime disappear depending on the loading history of the beam. The final solution corresponding to the end-loading and to the real final mesh depends on all intermediate calculation steps. If the FNC leads to major changes to the mesh and thus to the connection in certain zones of the continuous beam, the connection should be correctly distributed in these zones during the steel beam conception.One considers two consecutive finite elements [(i−1)–i] and [i−j] with respective element lengthsL1,IandL2,Iat iteration I (Fig. 4a). One supposes that the test concerns the node i of the finite element [i–j] and using appropriate shape functions Ni=1,..,4 one calculates the vertical displacements of both the slab and the steel beam as follows:(9){v(s)(x)=N1(x)vi(s)+N2(x)θi(s)+N3(x)vj(s)+N4(x)θj(s)v(g)(x)=N1(x)vi(g)+N2(x)θi(g)+N3(x)vj(g)+N4(x)θj(g)The difference between both vertical displacements, previously called α, is easily obtained with following equation:(10.a)αi(x)=N1(x)[vi(s)−vi(g)]+N2(x)[θi(s)−θi(g)]+N3(x)[vj(s)−vj(g)]+N4(x)[θj(s)−θj(g)](10.b)or:αi(x)=N1(x)Δvi+N2(x)Δθi+N3(x)Δvj+N4(x)ΔθjThis function depends only on the longitudinal x position of the node i. The objective now is to calculate, if it exists, the distancex˜given byαi(x˜)=0.With:N1(x)=(1−3(x2/L2,I2)+2(x3/L2,I3)),N2(x)=(x−2(x2/L2,I)+x3/L2,I2),N3(x)=(3(x2/L2,I2)−2(x3/L2,I3))andN4(x)=(−x2/L2,I+x3/L2,I2), Eq. (10.b) leads to following equation:(11)αi(x)=2x3[(Δvi−Δvj)L2,I3+(Δθi+Δθj)2L2,I2]−3x2[(Δvi−Δvj)L2,I2+(2Δθi+Δθj)3L2,I]+xΔθi+ΔviFinally, the equationαi(x˜)=0can be easily solved using trigonometric method for example. Only real solutions are considered and if there is more than one solution, the maximum one is restrained while it remains less than actual finite element length. The beam mesh changes at considered node for next iteration (I+1) as follows:(12)L1,I+1=L1,I+x˜andL2,I+1=L2,I−x˜Only shape functions on the right side of the node i are employed because the FNC tests all the nodes from the left side to the right side of the beam (x axis sense); the first node being the left support which never moves like the other nodes located at each support of the continuous beam. If the test begins from the second element at the node i, appropriate length changes will concern both elements [(i−1)–i] and [i–j] and so on…Fig. 4 shows how the FNC runs as an adaptive mesh depending on the value of the distancex˜obtained from Eq. (11). In the case wherex˜is too close to the finite element length, from Eq. (12), one observes thatL2,I+1could be very low and then the convergence of the iterative process could be affected. Two methods could be adopted:–Method 1: Limitingx˜to an arbitrary value (less than half of the finite element length for example). This method insures to keep constant the number of finite element, it remains easy to compute and it gives enough accurate results.Method 2: IfL2,I+1is too low, actual finite element disappears and the number of finite elements changes. In Fig. 4, both finite elements [(i−1), (i)] and [(i), (j)] merge and become only one finite element [(i−1), (j)]. This method is more difficult to compute because it needs a renumbering of the mesh during the iterative process. In addition, the solution could be affected by the final mesh density that is not suitable.InFig. 5, the FNC algorithm is shown with its links to the ALM in order to solve the contact problem. It is worth to mention out that the set of values obtained for the penalty factor p is verified by reconnecting FNC to ALM (at same contact iteration). Generally, these values are still available and the verification is directly satisfied; this is due probably to:αi(x˜)=0(Eq. 10.b).The user-friendly software “Pontmixte” has been upgraded to a “new” version based on a new finite element formulation for the composite beam element. Six degrees of freedom are necessary (instead of four in the preceding version), to take into account the contact/uplift at the interface. The concrete slab as-well-as the steel beam has 3 degrees of freedom at each node (i) and (j) (Fig. 6). Nodal displacements vector of the composite finite element is:(13){de}={ui(s)vi(s)θi(s)ui(g)vi(g)θi(g)uj(s)vj(s)θj(s)uj(g)vj(g)θj(g)}tUsing corresponding classical shape functionsN, the displacement at each fiber of the composite cross-section is then(14){d(x,y)}=[N(x,y)]{de}(15)[N(x,y)]=[Ni(s)0Ni(g)00Nj(s)0Nj(g)]In Eq. (15),Nincludes (3×3) matrices.The stud slip and lengthening (or shortening) are calculated considering the translation and the rotation of each material. Concerning the lengthening, the stud will be supposed fixed to the concrete:(16)Stud-slip:γj=[uj(s)+d(s)θj(s)]−[uj(g)+d(g)θj(g)](17)Stud-lengthening:αj=vj(s)−vj(g)The kinematic variables are respectively the longitudinal strain and the curvature of each material cross-section:(18){εx(s)=∂u(s)∂xandεx(g)=∂u(g)∂xκx(s)=∂2v(s)∂x2andκx(g)=∂2v(g)∂x2Kinematic relationship and corresponding strain vector are(19){ε}=[B]{de}with{ε}t=〈εx(s)κx(s)εx(g)κx(g)〉The kinematic matrix can be written explicitly as follows:(20)[B]=[−B1B2yB3y000B1−B2y(B3−2L)y0000−B2−B30000B2−(B3−2L)000000−B1B2yB3y000B1−B2y(B3−2L)y0000−B2−B30000B2−(B3−2L)]with:B1=1/L,B2=6/L2−12(x/L3), andB3=4/L−6(x/L2).Paying attention to the kinematic matrix, one observes that it depends on the axial x position of the concerned cross-section and on the depth position y of each material-fiber at the same cross-section. The composite beam cross-section is then divided into a number of horizontal fibers (m for each steel beam flange, n fibers for the steel beam web and p fibers for the slab). The algorithm undertakes firstly a Gauss–Legendre numerical integration towards the element-depth with 2 Gauss-points for each fiber (1st integration along y axis –Fig. 7). By summing different stiffnesses along y axis, the result (that corresponds to the stiffness of the composite cross-section) is affected to one of the Gauss points in order to undertake the 2nd integration along x axis (Fig. 7) that uses also 2 Gauss points.In order to simplify the presentation, the first numerical integration will not appear explicitly. One begins by the element stiffness matrix of the unconnected [(i), (j)] composite beam that can be easily obtained by:(21)[K˜e]=∫0L[B]t[D][B]dxwith the behavior matrix[D]in accordance with Eq. (18):(22)[D]=[(EA)(s)0000(EI)(s)0000(EA)(g)0000(EI)(g)]E: Secant Young׳s modulus, A: cross-section area and I: quadratic inertia of the cross-section.A secant algorithm is used to solve nonlinear equations due to nonlinear behavior of materials.In order to include a connector at the node (j) of the finite element [(i), (j)] for example, the principle of virtual work is applied to set the global relationship of the stud behavior under a shear loading as-well-as under a tension.•The internal work of an infinitesimal slip of the stud at the node (j) and corresponding nodal variables are(23)δWintss=Qjδγj=Qj〈1d(s)−1−d(g)〉{δdjss}(24){δdjss}t=〈δuj(s)δθj(s)δuj(g)δθj(g)〉Qjis the stud shear force and d(s) and d(g) are defined in Fig. 5.(25)Correspondingnodalforcesare:{Fjss}t=〈Nj(s)Mj(s)Nj(g)Mj(g)〉.The internal work of an infinitesimal lengthening of the stud at the node (j) and corresponding nodal variables are(26)δWintst=Pjδαj=Pj〈1−1〉{δdjst}(27){δdjst}t=〈δvj(s)δvj(g)〉(28)Correspondingnodalforcesare:{Fjst}t=〈Tj(s)Tj(g)〉.External works related to the nodal forces given in Eqs. (22) and (25) are:(29)δWextss={δdjss}t{Fjss}(30)δWextst={δdjst}t{Fjst}The principle of virtual works leads to(31)δWintss=δWextss(32)δWintst=δWextstThe stud slip behavior is defined as the relationship between the force at the stud head and the slip calculated between its base and the force point application. This stud slip has been defined previously in Eq. (16) and Rssis the stud slip-resistance(33)Qjss=RssγjFrom Eq. (31), the stud stiffness matrix[Kss]related to its slip-resistance can be easily obtained(34){δWintss=Qjδγj={δdjss}t〈1d(s)−1−d(g)〉t〈1d(s)−1−d(g)〉{djss}δWextss={δdjss}t{Fjss}(35){Fjss}=Rss〈1d(s)−1−d(g)〉t〈1d(s)−1−d(g)〉{djss}The stud stiffness matrix related to its slip-resistance is finally(36)[Kss]=Rss[1d(s)−1−d(g)d(s)(d(s))2−d(s)−d(s)d(g)−1−d(s)1d(g)−d(g)−d(s)d(g)d(g)(d(g))2]Concerning the stud lengthening behavior, same procedure then the one developed for the stud slip-resistance is carried out. The stud tension resistance is called Rstand the stud lengthening has been previously defined in Eq. (17)(37)Pjst=Rstαj(38){δWintst=Pjδαj={δdjst}t〈1−1〉t〈1−1〉{djst}δWextst={δdjst}t{Fjst}(39){Fjst}=Rst〈1−1〉t〈1−1〉{djst}The stud stiffness matrix related to its lengthening-resistance is finally(40)[Kst]=Rst[1−1−11]After replacing by the symbol (⁎) the terms of the stiffness matrix related to an unconnected composite beam element given in Eq. (21) concerning an unconnected composite beam, the stiffness matrix of the finite element [(i), (j)] representing a connected composite beam is(41)[Ke]=[K˜e]+[Kss]+[Kst]Respecting the nodal variables organization given in Eq. (13), this matrix can be written explicitly as follows:(42)[Ke]=∫0L[⁎⁎⁎000⁎⁎⁎000⁎⁎000⁎⁎⁎000⁎000⁎⁎⁎000⁎⁎⁎000⁎⁎⁎⁎⁎000⁎⁎⁎⁎000⁎⁎⁎⁎+Rss⁎⁎+d(s)Rss−Rss0−d(g)Rss⁎+Rst⁎0−Rst0Symmetry⁎+(d(s))2Rss−d(s)Rss0−d(s)d(g)Rss⁎+Rss⁎⁎+d(g)Rss⁎+Rst⁎⁎+(d(g))2Rss]dx.In order to proof that the use of contact algorithm is relevent to obtain accurate results, first numerical inestigation concerns the comparision between experimental test results and the ones obtained by the “old” model with 4 degrees of freedom per node on one hand and the “new” model with 6 degrees of freedom per node on second hand.Second numerical simulation will concerns an application for the FNC considering the same twin-beam subjected to a distributed load.The steel–concrete composite twin-beam considered (Fig. 8a) has been subjected to an experimental test at Structural Laboratory of INSA-Rennes. The beam is loaded in accordance with the following stages:–Stage 1: The self-weight is taken into account (4.17kN/m for sagging zones and 4.26kN/m for hogging ones).Stage 2: Concentrated loads “P1” and “P2” are applied at the mid-spans of the beam until the magnitude of 550kN for each.Stage 3: The load “P2” remains constant and the load “P1” continue to increase from 550kN to 850kN.In Fig. 8b the loading history corresponding to stages 2 and 3 is plotted; stage 1 is not represented because it represents a distributed load and it is different on hogging and sagging zones of the continuous beam.It is assumed that the hogging zone concerns 15% of the span length on each side of the intermediate support. For this zone, the thickness of the bottom flange is equal to 15mm and for other cross-sections (in sagging zones) only 10mm is required. The top flange thickness is equal to the bottom one. Related to mechanical behavior of each material (Fig. 9), the mechanical properties are summarized inTable 1.(43)Concrete:σ(c)fcm=kη−η21+(k−2)ηwith:η=ε(c)εm>0andk=1.1Ecmεmfcm(44)Stud:=Qu(1−e−c1γ)c2As mentioned previously, with the assumption of 4 degrees of freedom per node, the contact at the interface could not be taken into account as-well-as possible uplifts along the beam. With this assumption, the comparison between numerical and experimental results could not be totally satisfactory. InFig. 10 obtained from [16], the comparison of the beam deflexion between numerical and experimental results with the previous “old” model “Pontmixte” shows a significant difference especially over the elastic range. This result was predictable because the penetration as-well-as the uplift at the material interface begin to be significant when the load increases. In this figure, one observes that the deflexion under “P1” has been underestimated with this numerical model since “P1” continues to increase over 550kN. Unfortunately the measurements under the load “P2” have not been done, but the conclusion should be similar to “P1”.It is clear that the effect of the interface “behavior” becomes significant for high load level and especially under concentrated loads or at intermediate supports. For this reason, following numerical simulations, using the proposed “new” model (6 degrees of freedom per node), should help to understand how the contact algorithm could give more accurate results.For the same twin-beam, are compared inFig. 11 some design variables obtained with the “new” finite element model. The left curves correspond to the model without activating the ALM algorithm and the right ones with activating the ALM algorithm. The left curves are plotted in the aim to identify the critical cross-sections along the beam where the ALM algorithm should be activated. In Fig. 11a and b the comparison of vertical displacements between the slab and the steel beam and the comparison of the rotations for the last-step loading are plotted respectively. As it was predicted, the left curves related to the cross-sections located under the concentrated loads show a penetration of the concrete slab in the steel beam. This penetration is theoretical and not realistic and it will be corrected by activating the ALM algorithm (right curves). It is pointed out that the minimum gap at the interface is fixed to 10−3mm for these numerical simulations. This value leads to reasonable time computation for convergence of the contact iterative process. In Fig. 11c the stud slip curves and the lengthening-shortening ones are plotted. The penetration and the uplift observed in the left curves disappear in the right curves; maximum uplift is observed at each side of the intermediate support. The slip curves become more smoothed with the ALM algorithm especially under the concentrated loads.One observes that the use of the ALM algorithm makes changes in the magnitude of the design variables and therefore should have a special attention.InFig. 12 similar curves as in Fig. 10 are plotted but for the “new” finite element model activating the ALM algorithm. One observes the incidence on the beam deflexion under the concentrated load “P1”; the correlation between numerical and experimental results is more satisfactory in the post-elastic range.In order to show how “Pontmixte” solves the problem of the “continuous” contact, precedent twin-beam is now subjected to a distributed load p. The calculation is carried out until reaching elastic hogging bendingMel−at intermediate support. Initial mesh of the twin-beam contains 10 finite elements per beam; this mesh is called Mesh-0. The results of two calculations are compared–Calculation 1: Contact solved with ALM.Calculation 2: Contact solved with ALM+FNC.In the aim to avoid additional differences between the results due to different numbers of finite elements, Method 1 presented in Section 2.3 will be used in this example. Initial mesh will change several times during the loading history of the beam (Fig. 13). Only the final mesh so called Mesh-n will be highlighted because it corresponds to the last step loading. Mesh-0 and Mesh-n are presented inFig. 14. One observes that the difference between the finite element lengths mostly concerns both sides of the intermediate support and also the zones close to the end-supports. These zones correspond to the ones that are subjected to a “continuous” contact and solved by the FNC. It is pointed out that the symmetry of the problem is retained until convergence.For Calculations 1 and 2 same stopping criterion is used: reaching elastic hogging bending at intermediate support. For Calculation 1, elastic hogging bending is reached for p=280kN/m and for Calculation 2 p=264kN/m. For these both loading levels, the stresses in the composite cross-sections at mid-span and at intermediate support are given inFig. 15a and b.The hogging bending is obtained when the top beam-flange reaches its yield stress (fy(a)=475MPa). The stress difference observed on hogging bending between both calculations is due only to the precision and it appears neglectable and same corresponding hogging bending isMS−=Mel−=−871kN/m. Nevertheless, in sagging zone, the stress difference is greater than the one on hogging and should not be neglected. In Calculation 2, the sagging bending is greater than in Calculation 1; this explains why the elastic hogging bending is reached faster (Table 2).One compares now the stress distribution of both calculations for the same load level (p=264kN/m).Figs. 15b and 16 show that in Calculation 1 the stresses are underestimated and the moments (Table 2) are around 3% less in sagging zone and 6% less on hogging zone. This difference is mostly due to the “continuous” contact that increases the stud slip in Calculation 2 and not in Calculation 1. InFig. 17 are plotted the stud-slip curves for these both calculations, maximum differences are observed in the zones that are mostly subjected to a “continuous” contact (at each side of intermediate support and near the end-supports – Fig. 14).

@&#CONCLUSIONS@&#
