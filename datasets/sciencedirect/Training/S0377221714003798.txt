@&#MAIN-TITLE@&#
Optimal deterministic algorithms for some variants of Online Quota Traveling Salesman Problem

@&#HIGHLIGHTS@&#
We examine various variants of the Online Quota Traveling Salesman Problem.The best lower bounds and algorithms for the variants are obtained.We get a nearly complete map of the optimal algorithms for variants of Online QTSP.A best lower bound for a variant of Online TSP on a half-line is also obtained.

@&#KEYPHRASES@&#
Traveling salesman,Quota TSP,Online algorithm,Competitive ratio,

@&#ABSTRACT@&#
This paper is concerned with the Online Quota Traveling Salesman Problem. Depending on the symmetry of the metric and the requirement for the salesman to return to the origin, four variants are analyzed. We present optimal deterministic algorithms for each variant defined on a general space, a real line, or a half-line. As a byproduct, an improved lower bound for a variant of Online TSP on a half-line is also obtained.

@&#INTRODUCTION@&#
The Quota Traveling Salesman Problem (QTSP) is a generalization of the well-known Traveling Salesman Problem (TSP), and can be described as follows. Let M be a metric space with a given origin o and a distance functiond(·,·)such that for allx,y,z∈M:(i)d(x,y)⩾0, where “=” holds if and only ifx=y;d(x,y)=d(y,x);d(x,y)⩽d(x,z)+d(z,y).In QTSP, if the metric space is replaced by a quasi-metric space, which is equipped with a quasi-metric function satisfying the above conditions (i) and (iii) but not necessarily obeying the condition (ii) of symmetry, we obtain the Asymmetric Quota Traveling Salesman Problem (AQTSP). Clearly, AQTSP is a generalization of QTSP. We use pAQTSP to denote the path-version of AQTSP. Quasi-metric spaces arise naturally in a number of situations, for example, in a city including one-way streets, or on mountain roads, where traveling up hill takes longer than down hill. Particularly, a real line is a quasi-metric space if we define the asymmetrical distance function(1)d(x,y)=|x-y|,x⩽y,c|x-y|,x>y,wherec>0is a measure of the asymmetry of the space. Ifc=1, the real line turns into a metric space.Another generalization of QTSP is to incorporate release times with vertices, where vertex v can only be visited at or after its release timerv, the salesman can travel at most at unit speed, and the objective is to find a vertex subsetV′reaching the quota Q and a tour onV′∪{o}to minimize the makespan, i.e. the time by which the salesman has visited all the vertices inV′and returned to the origin o. Note that when all vertices are released at time zero, the makespan is just the length of the tour. QTSP with release times is called Offline QTSP if the release times, weights and positions of the vertices are known to the salesman already at time zero. However, the assumption that all the information is completely known a priori is unreasonable in many situations, and there are a lot of applications in which the information is revealed in real-time. These cases can be dealt with appropriately by online models. In Online QTSP, each vertex v presents at its release timerv, but the release time, weight and even existence of the vertex are known only after its presence. Online/Offline pQTSP, AQTSP, pAQTSP can be defined similarly as Online/Offline QTSP. Note that QTSP, pQTSP, AQTSP, pAQTSP are special cases of the corresponding offline problems in which all vertices are released at time zero. In this paper, we mainly investigate the above-mentioned online variants of QTSP.We only care about the deterministic online algorithms, i.e., the algorithms without coin tosses. The performance of a deterministic online algorithm is usually evaluated by its competitive ratio, i.e., the worst-case ratio of the objective value of the solution produced by the algorithm to the optimal value of the corresponding offline problem. We callγa (deterministic) lower bound of the online problem if there is no deterministic algorithm with competitive ratio less thanγfor it. If the competitive ratio of some deterministic online algorithm matches a lower bound of the online problem, then the algorithm is called the best (or optimal). See Borodin and El-Yaniv (1998) or Fiat and Woeginger (1998) for a thorough study of online algorithms.Awerbuch, Azar, Blum, and Vempala (1998) proposed anO(log2(min(Q,n)))-approximation algorithm for QTSP. According to the results of Ausiello, Leonardi, and Marchetti-Spaccamela (2000), the approximation ratio can be improved to 10. Later, Chaudhuri, Godfrey, Rao, and Talwar (2003) devised, for any∊>0, a (2+∊)-approximation algorithm for the Q-path problem in which the objective is to find a shortest path with two prescribed ending vertices going through a set of vertices reaching the quota Q. Note that the Q-path problem generalizes both QTSP and pQTSP. Chekuri, Korula, and Pál (2008) considered some related orienteering problems, and gave a (2+∊)-approximation algorithm to find a path with length restriction such that the total weight of vertices visited is maximized. See Vansteenwegen, Souffriau, and Oudheusden (2011) for a survey about the orienteering problem. For Offline QTSP, Ausiello, Bonifaci, and Laura (2008b) gave a(1+ρ)-approximation algorithm, whereρis the best available approximation ratio for QTSP.Ausiello, Demange, Laura, and Paschos (2004) introduced Online QTSP and devised an algorithm for it with competitive ratio2ρprovided that aρ-approximation algorithm is available for QTSP. They also proved a lower bound of 2 when the metric space is the real line, which implies that their algorithm is optimal by using an exact algorithm to solve QTSP. For the real line case, there exists a simple polynomial exact algorithm for QTSP. By contrast, any existing exact algorithm for general QTSP takes exponential time. Moreover, the authors proposed a 3/2-competitive polynomial algorithm for the half-line case as well as a matching lower bound.Offline TSP is a special case of Offline QTSP in which all vertices have to be visited, but Online TSP is not a special case of Online QTSP since the quota Q in Online QTSP is known a priori and the total number of the vertices in Online TSP is unknown. For Online TSP, both Ausiello, Feuerstein, Leonardi, Stougie, and Talamo (2001) and Lipmann (2003) gave a lower bound of 2, and Ascheuer, Krumke, and Rambau (2000) designed a144ρ+1+1+8ρ-competitive algorithm by using aρ-approximation algorithm for TSP, which is optimal by plugging in an exact algorithm for TSP. If the metric space is a real line, Ausiello et al. (2001) provided a lower bound of1+178≈1.64, while Lipmann (2003) devised an optimal polynomial algorithm. For Online TSP on a half-line, Blom, Krumke, de Paepe, and Stougie (2001) presented a 3/2-competitive polynomial algorithm as well as a matching lower bound.For the real line and half-line cases of Online pTSP (the path-version of Online TSP, also called Nomadic Online TSP in the literature), Lipmann (2003) proved the lower bounds 2.03 and 1.63, respectively. The author also developed a2+ρ-competitive algorithm for the problem on a general metric space, provided aρ-approximation algorithm for pTSP. Later, Bonifaci (2007) proposed a 2-competitive algorithm for the half-line case.For Online Asymmetric TSP, Ausiello, Bonifaci, and Laura (2008a) showed a lower bound of3+52≈2.618and proposed a122ρ+1+1+4ρ-competitive algorithm, whereρis the approximation ratio for ATSP. Their algorithm is optimal by solving ATSP to optimality. The authors also proved that the corresponding path-version has no online algorithm with competitive ratio bounded by a constant.In this paper, we focus on Online QTSP and AQTSP as well as their path-versions. First we present polynomial(1+ρ)-competitive algorithms for them, provided thatρ-approximation algorithms are available for the corresponding offline problems with zero release times. Our algorithms improve on the2ρ-competitive algorithm for Online QTSP given by Ausiello et al. (2004). Then we provide algorithms for Online AQTSP and pAQTSP on a half-line with competitive ratios2c+1c+1andmin{1+c,2}, respectively, where c is the measure of asymmetry of the space. We also show that all the above algorithms are optimal by devising lower bounds matching the competitive ratios. Combining those existing results with ours, we obtain a complete mapping of the best deterministic lower bounds and algorithms for the variants concerned of Online QTSP. All the results are summarized in Table 1. In addition, as a byproduct, we improve the lower bound of Online pTSP on a half-line from 1.63 to 2, which implies the 2-competitive algorithm in Bonifaci (2007) is optimal.The remainder of the paper is organized as follows. In Section 2, we describe some notations. In Section 3, we present algorithms for Online AQTSP, pAQTSP, QTSP and pQTSP and analyze their competitive ratios. In Section 4, we prove the lower bounds of Online AQTSP, pQTSP, pAQTSP on a real line or a half-line and Online pTSP on a half-line.Here we introduce some notations used throughout the paper. Letσbe an instance of Online QTSP, pQTSP, AQTSP or pAQTSP. We useT(σ)to denote the solution given by some algorithm forσas well as the corresponding makespan,p(t)to denote the position of the salesman at time t by the algorithm, andT∗(σ)to denote the optimal makespan of the corresponding offline instance. For the sake of simplicity, we denoteT(σ)andT∗(σ)as T andT∗respectively, ifσis explicit in the context. Letr1andrndenote the earliest and latest release times of the vertices inσ.Consider the vertices released no later than time t inσ, and ignore their release times. Then, we obtain an instanceσtof QTSP, pQTSP, AQTSP or pAQTSP. Similarly, considering the vertices released before time t inσ, and ignoring their release times, we obtain another instanceσt′of QTSP, pQTSP, AQTSP or pAQTSP. We useTρ(σt)to denote the tour or path produced by aρ-approximation algorithm forσtas well as its makespan, andT∗(σt)to denote the optimal makespan ofσt. We suppose that bothTρ(σt)andT∗(σt)are positive infinity if∑v∈σtwv<Q. Similarly, we defineTρσt′andT∗σt′forσt′. Note that if t is not release time of any vertex, thenσtandσt′are the same and hence we haveTρ(σt)=Tρ(σt′); if t is the release time of some vertex, we can obtainTρ(σt′)=Tρ(σt′)by lettingt′be the release time immediately before time t.In this section we present several algorithms for Online AQTSP and its path version.First we give an algorithm applicable to each instanceσof Online AQTSP, pAQTSP, QTSP and pQTSP. As in the2ρ-competitive algorithm in Ausiello et al. (2004), the main idea of our algorithm is to wait at the origin until some departure time and then follow an approximate tour or path to visit the vertices. However, we make a choice for the departure time different from that in Ausiello et al. (2004) and show that this choice leads to a polynomial time algorithm with better competitive ratio. Our algorithm is described below, whereαis a parameter.Wait at the origin until the earliest timet0with∑v∈σt0wv⩾Qand computeTρ(σt0). IfTρ(σt0)⩽αt0, then go to Step 1; else go to Step 2.Step 1.ExecuteTρ(σt0)at unit speed and then stop.Continue to wait until the earliest timet∗such that(2)Tρσt∗⩽αt∗⩽Tρσt∗′and then executeTρ(σt∗)at unit speed, and then stop.We first analyze the performance of AlgorithmH(α)for Online AQTSP. Then, in the end of this subsection we show that the same conclusion holds for Online pAQTSP. The following lemma proves the existence oft∗in Step 2, which guarantees the feasibility of the algorithm.Lemma 1For anyα>0, if AlgorithmH(α)turns to Step 2, then there must exist somet∗>r1satisfying(2). Moreover, ift∗>rn, then both “=”s hold in(2).Suppose that there are k distinct release timesR1,R2,…,Rk, where0⩽R1<R2<⋯<Rk=rn. By definition,t0must be some release time, sayRl. Letf1(t)=Tρ(σt)andf2(t)=Tρσt′fort⩾Rl. Note thatf1(t)andf2(t)are piecewise constant functions different only att=Rl,Rl+1,…,Rk, andf1(Rj-1)=f2(Rj)forj=l+1,l+2,…,k. Obviously, bothf1(t)andf2(t)are non-negative, andf2(Rl)=+∞.If the algorithm turns to Step 2, then we havef1(Rl)=Tρ(σt0)>αt0=αRl. Thus,min{f1(Rl),f2(Rl)}⩾αRl. Since the functionαtis increasing, one of the following two cases happens:(i)there is somei⩾lsuch thatmin{f1(Ri),f2(Ri)}⩾αRiandmin{f1(Ri+1),f2(Ri+1)}<αRi+1;min{f1(Rk),f2(Rk)}⩾αRk.Consider the former case. IfαRi+1⩽f2(Ri+1), then bymin{f1(Ri+1),f2(Ri+1)}<αRi+1, we havef1(Ri+1)<αRi+1. Hence,t∗=Ri+1satisfies (2). Otherwise,αRi+1>f2(Ri+1)=f1(Ri)holds. Noticing thatf1(t)=f1(Ri)⩾αRifort∈[Ri,Ri+1), we conclude thatαtintersectsf1(t)att∗=f1(Ri)α∈[Ri,Ri+1)which satisfies (2). For the latter case,αtintersectsf1(t)att∗=f1(Rk)α⩾Rk=rnwhich satisfies (2). Ift∗>Rk, thenf1(t∗)=f2(t∗), and both “=”s hold in (2). □The following two lemmas give some lower bounds on the optimal makespanT∗of Offline AQTSP.Lemma 2Forr1<t⩽rn,T∗⩾minT∗σt′,tholds, and fort⩾rn,T∗⩾T∗(σt)holds.Forr1<t⩽rn, if in an optimal solution the salesman visits a vertex that presents no earlier than time t, then we haveT∗⩾t. Otherwise, all the vertices visited by the salesman are released before time t. Hence we obtainT∗⩾T∗σt′. For anyt⩾rn,σtcontains all the vertices inσ, but the vertices are released at time zero. HenceT∗⩾T∗(σt). □Ift∗>rn, thent∗+Tρσt∗⩽1α+1ρT∗.Ift∗>rn, we haveTρσt∗=αt∗by Lemma 1. SoT=t∗+Tρσt∗=1α+1Tρσt∗⩽1α+1ρT∗σt∗⩽1α+1ρT∗,where the last inequality follows from Lemma 2. □For anyα>0, the competitive ratio of AlgorithmH(α)ismax1+α,1α+1ρfor Online AQTSP. Particularly, the competitive ratio does not exceed1+ρif we setα=ρ.We consider two cases.Case 1.The algorithm terminates at Step 1. Then the salesman leaves the origin at the earliest timet0with∑v∈σt0wv⩾Qand then executesTρ(σt0). So we haveT=t0+Tρ(σt0), andT∗⩾t0. SinceH(α)ends at Step 1, we know thatTρ(σt0)⩽αt0. SoT=t0+Tρ(σt0)⩽(1+α)t0⩽(1+α)T∗.The algorithm terminates at Step 2. Then the salesman leaves the origin at some timet∗>r1satisfying (2) and then executesTρσt∗. So we haveT=t∗+Tρσt∗. By Lemma 3, we may assumet∗⩽rn. By (2), we haveT=t∗+Tρσt∗⩽(1+α)t∗andT=t∗+Tρσt∗⩽1αTρσt∗′+Tρσt∗′⩽1α+1Tρσt∗′⩽1α+1ρT∗σt∗′.Therefore we haveT⩽max1+α,1α+1ρminT∗σt∗′,t∗⩽max1+α,1α+1ρT∗,where the second inequality follows from Lemma 2. □It is easy to see that the above analysis is also suitable for Online pAQTSP if we considerTρ(σt),Tρσt′,T∗(σt)andT∗σt′as traveling paths instead of tours. Therefore, we conclude that there is a(1+ρ)-competitive algorithm for Online pAQTSP if aρ-approximation algorithm for pAQTSP is available. In addition, since the metric space is also quasi-metric, the following theorem holds.Theorem 2The competitive ratio of AlgorithmH(ρ)is1+ρfor each of Online pAQTSP, QTSP and pQTSP.We note that AQTSP and pAQTSP on a real line can be solved in polynomial time since there exists an optimal solution such that the visited vertices distribute consecutively along the line. Therefore, we have the following theorem.Theorem 3There are 2-competitive polynomial algorithms for Online AQTSP, pAQTSP, QTSP and pQTSP on a real line.Now we move to the problems defined on a half-line, i.e., the non-negative part of a real line. We first show that the competitive ratio 2 of AlgorithmH(α)cannot be improved when it is used to solve Online AQTSP and pAQTSP on a half-line. For Online AQTSP, consider the instance: there are two verticesv1andv2of the same weightQ/2, wherev1is released at 1 at time 0 andv2presents at 0 at timec+1. It is easy to see that when running AlgorithmH(α)with any choice ofα, the salesman will wait at the origin until timec+1. Therefore, the algorithm outputs a solution of makespan at least2(c+1). However, the offline optimal value isc+1obtained by visitingv1andv2at their release times. For Online pAQTSP, we consider the instance containing only one vertex located at 1 with weight Q and release time 1. When running AlgorithmH(α)with any choice ofα, the salesman will wait at the origin until time 1. Therefore, the algorithm outputs a solution of makespan at least 2. However, the optimal value is 1 obtained by visiting the vertex at its release time.In the following, to achieve better competitive ratios, we present two new algorithms for Online AQTSP and pAQTSP on a half-line. Since all vertices present on the same side of the origin we admit the salesman to travel away from the origin even before the total weight of the released vertices reaches the quota. AlgorithmH1is designed for Online AQTSP on a half-line, which generalizes the algorithm in Ausiello et al. (2004) devised for the case ofc=1.Lett0be the earliest time such that the total weight of the vertices released in0,t01+creaches the quota Q. Before timet0, the salesman travels away from the origin at a speed of11+c. After timet0, the salesman travels toward the origin at unit speed, and visits those vertices in0,t01+creleased no later thant0.Theorem 4AlgorithmH1is a2c+1c+1-competitive polynomial algorithm for Online AQTSP on a half-line.Clearly, the algorithm produces a feasible solution of makespanT=t0+ct01+c=2c+11+ct0. Therefore, it is sufficient to show that the optimal makespanT∗⩾t0. We consider two cases.Case 1.In the optimal solution, the salesman visits some vertices int01+c,+∞. Then we haveT∗⩾t01+c·(1+c)=t0.In the optimal solution, each vertex visited by the salesman locates in[0,t01+c). Lett′be the maximum release time of the visited vertices in the optimal solution, and X the maximum distance of the vertices from the origin. Then it holds thatX<t01+c. Ift′<t0, then at timet1=max{(1+c)X,t′}<t0the total weight of the vertices released in0,t11+chas reached the quota Q, which contradicts the definition oft0. Therefore, we conclude thatt′⩾t0, which impliesT∗⩾t0. □For Online pAQTSP on a half-line, the following algorithmH2achieves a competitive ratio of1+c, better than 2 for anyc<1.Lett0be the earliest time such that the total weight of the vertices released in[0,t0]reaches the quota Q. Before timet0, the salesman travels away from the origin at unit speed. After timet0, the salesman travels toward the origin at unit speed, and visits those vertices in[0,t0]released no later thant0.Theorem 5AlgorithmH2is a(1+c)-competitive polynomial algorithm for Online pAQTSP on a half-line.It is easy to see that the algorithm outputs a feasible solution of makespanT=t0+ct0=(1+c)t0. Therefore, it remains to show that the optimal makespanT∗⩾t0. Since the argumentation is similar to the proof of Theorem 4, we omit details here. □Combining the above theorem with Theorem 1, we obtain the following result.Theorem 6There is amin{1+c,2}-competitive polynomial algorithm for Online pAQTSP on a half-line.In this section we present lower bounds for Online AQTSP and pAQTSP on a half-line or a real line. These bounds imply that all the algorithms in the last section are optimal. As a byproduct, we also obtain a lower bound of 2 for Online pTSP on a half-line, which implies the 2-competitive algorithm given by Bonifaci (2007) is optimal.We first consider Online AQTSP on a half-line, where the quasi-metric is defined by formula (1) in Section 1. The following lemma indicates that according to a deterministicα-competitive algorithm, the salesman cannot be too far away from the origin at any time.Lemma 4For any deterministicα-competitive algorithm for Online AQTSP on a half-line, it holds thatp(t)⩽(α-1)t/cfor any time t.Suppose that at some timet0the salesman is atp(t0)>(α-1)t0/cwhen we run someα-competitive algorithm on instanceσ. We construct a new instanceσˆthat consists of all the vertices released beforet0inσand a vertexv0located at the origin with weight Q and release timet0. Since the vertices released before timet0inσˆare exactly the same as inσ, we conclude that at timet0the salesman is also atp(t0)when theα-competitive algorithm is run onσˆ. Because the salesman must return to the origin in the problem, we haveT(σˆ)⩾t0+cp(t0)>αt0. However, it is easy to verify that in the optimal solution the salesman visits onlyv0at timet0. As a result,T∗(σˆ)=t0<T(σˆ)/α, which contradicts the fact that the algorithm isα-competitive. □Based on the above lemma, we can prove the following theorem.Theorem 7Online AQTSP on a half-line has a lower bound of2c+1c+1.Consider an instanceσcontaining only one vertex of weight Q that presents at 1 at time zero. Clearly,T∗=1+c. Given any deterministicα-competitive algorithm, we run it onσ. Lett1be the time when the salesman first arrives at 1. By Lemma 4, we havet1⩾c/(α-1). Since the salesman need return to the origin from 1, it holds thatα(1+c)=αT∗⩾T⩾t1+c⩾cα-1+c,which impliesα⩾(2c+1)/(c+1). □For Online pAQTSP on a half-line, the following lemma shows that according to anα-competitive algorithm, the salesman is confined within a small interval related to the current time t before the total weight of the released vertices reaches the quota Q.Lemma 5For any deterministicα-competitive algorithm withα<2for Online pAQTSP on a half-line, it holds that(2-α)t⩽p(t)⩽(α-1)t/cfor any time t with∑v∈σtwv<Q.Suppose that at some timet0with∑v∈σt0wv<Qthe salesman is atp(t0)>(α-1)t0/cwhen we run someα-competitive algorithm on instanceσ. As in the proof of Lemma 4, we can derive an instanceσˆthat consists of all the vertices released beforet0inσand a vertexv0located at the origin with weight Q and release timet0. Then the salesman is atp(t0)at timet0when running theα-competitive algorithm onσˆ. Since∑v∈σt0wv<Q, the salesman has to visitv0to reach the quota. Then,T(σˆ)⩾t0+cp(t0)>αt0. However, it holds thatT∗(σˆ)⩽t0<T(σˆ)/α, a contradiction with the fact that the algorithm isα-competitive.If the salesman is atp(t0)<(2-α)t0at timet0, we suppose thatv0presents att0instead of the origin in the above argument. We haveT(σˆ)⩾t0+t0-p(t0)>2t0-(2-α)t0=αt0,andT∗(σˆ)⩽t0, a contradiction again. □Online pAQTSP on a half-line has a lower bound ofmin{1+c,2}.Consider an instanceσconsisting of two verticesv1andv2of the same weightQ/2, wherev1presents at the origin at time∊andv2presents at 1 at time 1. Note that∊is a sufficiently small positive number. Clearly, in an optimal solutionv1andv2are visited at time∊and1+∊, respectively. Hence,T∗=1+∊. If there is a deterministicα-competitive algorithm withα<min{1+c,2}, then we run the algorithm onσ. By Lemma 5, it holds that0<(2-α)t⩽p(t)⩽(α-1)t/c<1for anyt∈[∊,1). Consequently, the salesman visits neitherv1norv2before time 1, and must start from some point in[0,1]to visitv1andv2after time 1. Then,1+min{c,1}⩽T⩽αT∗=α(1+∊), i.e.,α⩾min{1+c,2}/(1+∊). When∊tends to 0,αarbitrarily approachesmin{1+c,2}, a contradiction. □By takingc=1in Theorem 8, we obtain the following result.Theorem 9Online pQTSP on a half-line has a lower bound of 2.We end this section with a lower bound for Online pTSP on a half-line, which implies the 2-competitive algorithm in Bonifaci (2007) is optimal.Theorem 10Online pTSP on a half-line has a lower bound of 2.First, for anyα-competitive algorithm withα<2, we can prove(2-α)t⩽p(t)⩽(α-1)tfor any time t. Then, we can prove the conclusion. Since the argumentations are similar to the proofs of Lemma 5 and Theorem 8, we omit details here. □Given a real line with the measure c of asymmetry, we can obtain a real line with the measure1/cof asymmetry by reversing the positive direction of the line. Therefore, all the problems on a real line can be transformed into the cases withc⩾1. In the following discussion, we assume thatc⩾1.We first deal with Online AQTSP on a real line. As in the half-line case, we first prove that according to any deterministicα-competitive algorithm the salesman cannot be too far away from the origin.Lemma 6For any deterministicα-competitive algorithm with2c+1c+1⩽α<2for Online AQTSP on a real line, it holds that-tc⩽p(t)⩽(α-1)(c+1)-cc2tfor any time t with∑v∈A(t)wv<Q, whereA(t)represents the set of vertices released no later than time t and located in-tc,+∞.Since the salesman can move at most at unit speed,p(t)⩾-t/cfor any time t. Suppose that at some timet0with∑v∈A(t0)wv<Qthe salesman is atp(t0)>(α-1)(c+1)-cc2t0when we run someα-competitive algorithm on instanceσ. As in the proof of Lemma 4, we can derive an instanceσˆthat consists of all the vertices released beforet0inσand a vertexv0located at-t0/cwith weight Q and release timet0. Then the salesman is atp(t0)at timet0when running theα-competitive algorithm onσˆ. Since∑v∈A(t0)wv<Q, the salesman has to visitv0to reach the quota. Then,T(σˆ)⩾t0+cp(t0)+(c+1)t0/c>α(c+1)t0/c. However, it can be seen that in the optimal solution the salesman visits onlyv0at timet0. As a consequence we haveT∗(σˆ)=(c+1)t0/c<T(σˆ)/α, a contradiction with the fact that the algorithm isα-competitive. □Using the above constraint for the salesman, we prove the following theorem.Theorem 11Online AQTSP on a real line has a lower bound of 2.Suppose to the contrary there is anα-competitive algorithm with competitive ratioα<2. Run the algorithm on the instanceσin which there are three verticesv1,v2,v3released at1,-1,0at time1,c,2c+3respectively, andv1,v2,v3have weightsQ/2,Q/4andQ/4respectively.Letf(t)=min{d(-1,p(t)),d(p(t),1)}-t+cbe a function of time t, whered(·,·)is the quasi-metric function as defined in formula (1). Clearly,f(c)⩾0.At timet=c, by Lemma 6, we have(3)-1⩽p(c)⩽(α-1)(c+1)-cc<1c.Therefore, at timet=c+1, the positionp(c+1)of the salesman satisfies-c+1c⩽p(c)-1c⩽p(c+1)⩽p(c)+1<c+1c.Ifp(c+1)∈[-(c+1)/c,1], thenmin{d(-1,p(c+1)),d(p(c+1),1)}⩽1andf(c+1)⩽0. Ifp(c+1)∈(1,(c+1)/c), then we havemin{d(-1,p(c+1)),d(p(c+1),1)}=d(p(c+1),1)⩽1andf(c+1)⩽0. Hence,f(c+1)⩽0always holds. Sincef(t)is continuous, there exists somet0∈[c,c+1]such thatf(t0)=0. We analyze two cases.Case 1.d(-1,p(t0))>d(p(t0),1). In this casef(t0)=0impliesd(p(t0),1)-t0+c=0, i.e.,p(t0)=1-t0+cort0/c. However, by (3) we havep(t0)⩽p(c)+t0-c<1c+t0-c⩽t0c,where the last inequality follows fromt0⩽c+1. So,p(t0)=1-t0+c. Ift0=c+1, thenp(t0)=0andd(-1,p(t0))=d(p(t0),1)=1, which contradicts the assumptiond(-1,p(t0))>d(p(t0),1). Hence,t0<c+1.By (3), the salesman cannot arrive atv1before time c. Therefore, the earliest possible time to visitv1and then arrive atp(t0)is greater thanc+d(1,p(t0)=c+c(t0-c)⩾t0, where the inequality holds fort0⩾c. We deduce that the salesman has not visitedv1by timet0. Moreover, the earliest possible time to visitv2and then arrive atp(t0)is at leastd(0,-1)+d(-1,p(t0))=2(c+1)-t0>t0, where the inequality is due tot0<c+1. Thus,v2is also left unvisited by timet0.Consider an instanceσˆthat consists ofv1,v2as inσand a new vertexv0located at-1+t0-cwith weight3Q/4and release timet0. Since the vertices released before timet0inσˆare exactly the same as inσ, at timet0the salesman is also atp(t0)when theα-competitive algorithm is run onσˆ. Moreover, as discussed in the last paragraph neitherv1norv2has been visited by timet0. Consequently, in order to reach the quota the salesman has to visitv0,v1orv0,v2after timet0. In each situation the salesman has to move to the left by2-t0+cand move to the right by one unit, so we haveT(σˆ)⩾t0+c(2-t0+c)+1=t0+c(1-t0+c)+c+1⩾t0+(1-t0+c)+c+1=2(c+1),where the second inequality follows fromc⩾1andt0<c+1. In the optimal solution the salesman first visitsv2at time c and then visitsv0at timet0. Therefore,T∗(σˆ)=c+1, which impliesT(σˆ)⩾2T∗(σˆ)>αT∗(σˆ), a contradiction.Case 2.d(-1,p(t0))⩽d(p(t0),1). In this casef(t0)=0impliesp(t0)=-1+t0-cor-t0/c. Consider a new instanceσˆthat consists ofv1,v2as inσand a vertexv0located at 0 with weightQ/2and release timet0. Since the vertices released before timet0inσˆare the same as inσ, at timet0the salesman is also atp(t0)when we run theα-competitive algorithm onσˆ.Ifp(t0)=-t0/c, then the salesman always moves to the left at full speed before timet0. In order to reach the quota the salesman has to visitv1after timet0, soT(σˆ)⩾t0+d(p(t0),1)+d(1,0)=t0+t0c+1+c⩾2(c+1),where the second inequality follows fromt0⩾c. In the optimal solution forσˆthe salesman visitsv1,v0at time 1 andc+1respectively. HenceT∗(σˆ)=1+c. Then we haveT(σˆ)⩾2T∗(σˆ), a contradiction.Next we supposep(t0)=-1+t0-c. By (3), the salesman cannot arrive atv1before time c. The earliest possible time to visitv1and then arrive atp(t0)is greater thanc+d(1,p(t0))⩾c+c(2-t0+c)⩾2c⩾t0. We deduce that the salesman has not visitedv1by timet0. Therefore, to reach the quota the salesman has to visitv1after timet0, and we haveT(σˆ)⩾t0+d(p(t0),1)+d(1,0)=t0+(2-t0+c)+c=2(c+1).Combining it withT∗(σˆ)=1+c, we obtain a contradiction. This completes the proof. □For Online pAQTSP on a real line, by Theorem 8,min{1+c,2}is a lower bound. Sincec⩾1, the following theorem holds.Theorem 12Online pAQTSP on a real line has a lower bound of 2.

@&#CONCLUSIONS@&#
