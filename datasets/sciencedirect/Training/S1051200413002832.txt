@&#MAIN-TITLE@&#
Accurate calculation of high order pseudo-Zernike moments and their numerical stability

@&#HIGHLIGHTS@&#
An accurate calculation of pseudo Zernike moments is described which reduces geometric and numerical integration errors.Significant improvement in rotation and scale invariance is observed.It is shown that geometric and numerical integration errors can be removed simultaneously.

@&#KEYPHRASES@&#
Pseudo-Zernike moments,Invariance property,Orthogonal moments,Accurate moments,

@&#ABSTRACT@&#
The accuracy of pseudo-Zernike moments (PZMs) suffers from various errors, such as the geometric error, numerical integration error, and discretization error. Moreover, the high order moments are vulnerable to numerical instability. In this paper, we present a method for the accurate calculation of PZMs which not only removes the geometric error and numerical integration error, but also provides numerical stability to PZMs of high orders. The geometric error is removed by taking the square-grids and arc-grids, the ensembles of which maps exactly the circular domain of PZMs calculation. The Gaussian numerical integration is used to eliminate the numerical integration error. The recursive methods for the calculation of pseudo-Zernike polynomials not only reduce the computation complexity, but also provide numerical stability to high order moments. A simple computational framework to implement the proposed approach is also discussed. Detailed experimental results are presented which prove the accuracy and numerical stability of PZMs.

@&#INTRODUCTION@&#
Zernike moments (ZMs) and pseudo-Zernike moments (PZMs) belong to the class of circularly orthogonal moments based on Zernike polynomials (ZPs) and pseudo-Zernike polynomials (PZPs), respectively, defined on unit disk [1]. These moments have similar characteristics and both are widely used and studied in literature because of their minimum information redundancy and immunity to noise. Since ZMs are more numerically stable than PZMs and the computation cost of PZMs is more than ZMs for the same order, the latter is less discussed in literature. On the other hand, PZMs are observed to be more robust to image noise than ZMs[2], in addition to providing twice the number of moments as provided by ZMs for the same moment order. There are(1+pmax)2number of PZMs as compared to(1+pmax)(2+pmax)/2number of ZMs for the same maximum orderpmax. Thus, under the same maximum orderpmax, PZMs have more low-order moments than ZMs, therefore, PZMs are less sensitive to image noise than ZMs. Because of these attractive features of PZMs over ZMs, PZMs have been used in numerous image processing and pattern recognition applications such as optical character recognition [3], pattern classification [4,5], face recognition [6–9], content based image retrieval [10], image watermarking [11–13], audio watermarking [14], map matching [15], palmprint verification [16], edge detection [17], image reconstruction [18,19], etc.PZMs suffer from various errors and high computation cost. There are four types of errors that affect the accuracy of PZPs. These are the geometric error, numerical integration error, finite precision error and discretization error. The geometric error occurs when a square image is mapped into a circular region and all pixels do not fall inside the circular region. The circular boundary is approximated by the square-grids. This results in a zig-zag pattern of the circular boundary, which is more discernible in small size images. This phenomenon is depicted in Fig. 1, where Fig. 1(a) represents the original image grid and Fig. 1(b) is the approximation of the circular boundary of the image. A better approximation is given in Fig. 1(c), where all pixel grids that intersect with the circle and lie inside the circle are considered for the circular disk. This results in the exact mapping of the image that lies inside the circle. However, we have now two types of grids – the square-grids and the grids whose one of the boundaries is an arc of the circle, referred to as arc-grid throughout the paper. The ensembles of square-grids and arc-grids remove the geometric error completely. However, due to the complexity introduced by the arc-grids, only the configuration with square-grids as given in Fig. 1(b) is used for the computation of PZMs in the conventional method. The numerical integration error is caused when the two dimensional integration in moment calculation is approximated by the zeroth order summation. Liao and Pawlak [20] have analyzed these errors in detail for ZMs and an approach for the removal of numerical integration error using Simpson's method is also proposed. Another approach for the elimination of these errors for ZMs has also been proposed by Xin et al. [21] where ZMs are calculated in polar coordinates. Their approach, however, requires the interpolation of image pixels at the center of the circular grids. Another approach used by Wee and Paramesran [22] uses an outer circle, shown in Fig. 1(d), which completely encloses the square image for the removal of geometric error. Numerical integration error is removed by using the relationship of geometric moments and Zernike moments after calculating geometric moments accurately for the ensembles of the square-grids. The discretization and finite precision arithmetic error are generic to the discrete nature of the image function and the finite precision used by digital computers to represent a number with non-zero decimal part. While the discretization error can be reduced by resorting to various interpolation methods to represent the discrete image function in continuous form, the finite precision error is constrained by the provision to handle the real numbers with maximum value of precision available in programming language compilers. We emphasize this fact because it is recently observed by Singh et al. [23,24] that the direct calculation of ZMs is numerically unstable for high orders of moments, even for moment order greater than 45. On the other hand, they observed that the recursive methods are numerically stable for high orders of ZMs in addition to reducing the time complexity. There is no such analysis performed for PZMs. It is observed that in the case of PZMs the numerical instability starts occurring for moment order more than 22. Therefore, one requires the numerical stability analysis to be performed for PZMs also.The higher order moments are required for better representation of an image and for its accurate reconstruction. In image watermarking, it is shown that moment order up to 26 is required for embedding one bit each in every moment if we want to embed at least 256 bits. However, moments with order higher thanpmax=22cannot be calculated accurately [11]. It is known that low order moments contain less information about image detail, while high order moments are vulnerable to numerical instability and image noise. Therefore, accurate calculation of PZMs and numerical stability are very essential for numerous image processing applications.It has been taken for granted in the literature that the computational aspects and characteristics of PZMs are similar to those of ZMs[24]. Recently, while using PZMs for some applications, we observed that this notion is not correct. While reconstructing the image using PZMs, we observed a major difference in the vicinity of the image center. One of the major differences in the characteristics of ZMs and PZMs is the nature of radial polynomials. The magnitude of the radial polynomials of the Zernike functions are bounded by one [24], while the radial polynomials of the pseudo-Zernike functions assume the value(−1)p(p+1), where p is the degree of the polynomial, asr→0, i.e., in the vicinity of the center of the unit disk. This makes the PZMs numerically unstable for high order of moments. This is reflected in the abnormality of the reconstructed image in the neighborhood of the center of the disk for high orders of moments. No such abnormality is observed in the reconstructed images using ZMs[24]. Thus, the characteristics of the high order PZMs differ significantly from that of the ZMs. Therefore, it is necessary to analyze the behaviors of PZMs with respect to geometric error and numerical integration error and their effects on their accuracy, numerical stability, rotation and scale invariance. It is the objective of the paper to analyze the geometric and numerical integration error and suggest ways to reduce them. We shall also analyze their relative contributions towards image reconstruction. The numerical instability and its causes are also discussed and analyzed.The rest of the paper is organized as follows. Section 2 provides an overview of the conventional approach of the computation of PZMs. Section 3 discusses the fast algorithms for the computation of radial polynomial and lays the foundation for the numerical stability and accurate calculation of the high order moments. The proposed approaches for the reduction of geometric and numerical integration errors are given in Section 4. Detailed experimental analysis is carried out in Section 5. Finally, some concluding remarks are given in Section 6.The PZMs of order p and repetition q of an image functionf(x,y)over a unit disk is defined by(1)Apq=p+1π∫∫x2+y2⩽1f(x,y)Vpq⁎(x,y)dxdyThe functionVpq⁎(x,y)is the complex conjugate of the pseudo-Zernike polynomials (PZPs),Vpq(x,y)defined by(2)Vpq(x,y)=Rpq(x,y)ejqθwherej=−1, p is a non-negative integer,|q|⩽p,θ=tan−1(y/x), and(3)Rpq(x,y)=∑s=0p−|q|(−1)s(2p+1−s)!(x2+y2)p−s2s!(p+|q|+1−s)!(p−|q|−s)!There is no exact solution to the double integration involved in Eq. (1), therefore, the PZMs are evaluated using the zeroth order approximation of the double integration, which results in(4)Aˆpq=p+1π∑i=0xi2+yk2⩽1N−1∑k=0N−1f(xi,yk)Vpq⁎(xi,yk)ΔxiΔykThe point (xi,yk) represents the center of the (i,k) pixel given by [22,24](5)xi=2i+1−ND,yk=2k+1−ND,i,k=0,1,…,N−1and(6)Δxi=Δyk=2DwhereD={Nfor inscribed circular disc, Fig. 1(b) and Fig. 1(c)N2for circular disc containing the image, Fig. 1(d)If we have all moments up to a maximum orderpmax, then the image function is reconstructed as(7)fˆ(xi,yk)=∑p=0pmax∑q=−ppAˆpqVpq(xi,yk),i,k=0,1,…,N−1The reconstruction error, ε is determined as(8)ε=∑i=0N−1∑k=0N−1(f(xi,yk)−fˆ(xi,yk))2∑i=0N−1∑k=0N−1(f(xi,yk))2,xi2+yk2⩽1The radial polynomials,Rpq(x,y), given in Eq. (3) can be rewritten(9)Rpq(r)=∑s=0p−|q|(−1)s(2p+1−s)!rp−ss!(p+|q|+1−s)!(p−|q|−s)!wherer=x2+y2.It is seen from Eq. (9) that the computation of radial polynomials is time consuming. The order of time complexity of all PZMs up to a given maximum orderpmaxisO(N2pmax3)[25,27] which is very high. Moreover, the computation of factorial terms, powers of r and trigonometric functions contribute significantly towards the slow speed. There are many approaches to enhance the speed [26]. Among them, the recursive methods are particularly much more useful than the other speed enhancement techniques. There are two categories of the recursive methods. The first category targets the fast computation of the factorial terms involved in Eq. (9). However, it still has the time complexity of the orderO(N2pmax3). The second category of recursive methods reduces the computation complexity of the radial polynomials to the orderO(N2pmax2). Thus, the second category is more efficient. We present two techniques under this category. Both techniques provide equal time complexity when moments of all orders and repetitions up to a given orderpmaxare required to be computed. The first method, called q-recursive method [26] is, particularly, more efficient when moments of a given order but all repetitions are required. The second method, called p-recursive method [26,27], is useful when moments of a fixed repetition and different orders are required. Since we compute all moments up to the orderpmax, we choose one of these methods (q-recursive) and in the rest of the paper, we refer this method as the recursive method. However, we present both methods as follows.(10)Rqq(r)=rq(11)R(q+1)q(r)=(2q+3)rq+1−2(q+1)rq(12)Rpq(r)=(k1r+k2)R(p−1)q(r)+k3R(p−2)q(r)p=q+2,q+3,…,pmaxwherek1=2p(2p+1)(p+q+1)(p−q),k2=−2p+(p+q)(p−q−1)(2p−1)k1k3=(2p−1)(p−1)−(p+q−1)(p−q−2)2k1+2(p−1)k2(13)Rpp(r)=rp(14)Rp(p−1)(r)=(2p+1)rp−2prp−1(15)Rpq(r)=k1Rp(q+2)(r)+(k2+k3r)Rp(q+1)(r)q=p−2,p−3,…,0wherek3=−2(2q+3)(q+1)(p+q+2)(p−q)k2=k3(p+q+3)(p−q−1)2(q+2)+(2q+3)k1=(2q+5)(q+2)−(2q+5)k2+k3(p+q+4)(p−q−2)2It is mentioned here that the p-recursive and q-recursive methods are the direct extension of the fast recursive methods developed by Chong et al. [28] for ZMs. The direct computation of PZMs of high orders is numerically unstable. It is observed that whenpmax>22, the quality of reconstructed image becomes poor. The main cause of numerical instability in the direct calculation of PZMs is due to the presence of factorial terms in the calculation of radial polynomials. The recursive methods, on the other hand, provide better quality of reconstructed images indicating that they provide more stable results. Thus, all computations in this paper are performed through recursive method, except for the direct calculation of PZMs. The speed can further be enhanced by using 8-way symmetry forRpq(r). The trigonometric functions,cos(qθ)andsin(qθ), involved in the computation of PZMs can be calculated using recursion and their 8-way symmetry/anti-symmetry property. For details one can refer the paper [23].Notwithstanding the improvement in the image reconstruction using recurrence relation, the abnormality observed in the vicinity of the center of the unit disk is a cause of concern on the accuracy of PZMs of high orders. We believe that the abnormality arises due to the numerical integration error caused by the zeroth order approximation. We reduce the numerical integration error by computing PZMs through numerical integration. The selection of a numerical integration method is very important from the angle of the number of sampling points required by the method, because the method which needs a small number of sampling points for a desired accuracy would be very useful as it will determine the overall speed of PZMs calculation. Gaussian integration is one of the best methods which requires approximately one fourth sampling points than Simpson's rule to achieve the same accuracy for two dimensional integration [29]. We rewrite Eq. (1) for the purpose of numerical integration in the following form(16)Apq=∑i=0N−1∑k=0N−1ApqikwhereApqikis the contribution of (i,k) pixel towards the momentApq, which is given by(17)Apqik=p+1πf(xi,yk)hik(18)hik=∫aiai+1∫bkbk+1Vpq⁎(x,y)dxdyai=2i−NN,bk=2k−NN,i,k=0,1,…,NNumerical integration error arises when the double integration of the kernel functionVpq⁎(x,y)is evaluated by zeroth order approximation. The integration of the kernel function given in Eq. (18) can be approximated using ann×n-point Gaussian integration(19)hik≅1N2∑l=0n−1∑m=0n−1wlwmV⁎(sl+2i+1−NN,sm+2k+1−NN)wherewiandsi,i=0,1,…,n−1, are the known weights and points for ann×n-point Gaussian integration formula. Forn=5,w0=0.2369268851,w1=0.4786286705,w2=0.5688888889,w3=w1, andw4=w0, ands0=−0.9061798459,s1=−0.5384693101,s2=0.0,s3=−s1, ands4=−s0.It can be observed from Eq. (19) that for ann×n-point Gaussian integration, the PZPs are required to be evaluated atn2locations for a grid. Thus, the accuracy in moments is achieved at high computation cost. We shall, later on, show in Section 5 thatn=3is sufficient to achieve reasonable accuracy even for moment orders up topmax=30, andn=5provides very accurate results which is reflected from the reconstructed images up topmax=80.We propose to reduce the geometric error by considering both the square-grids which lie completely inside the circle, and the arc-grids which are generated due to the intersection of a square-grid with the circle, as shown in Fig. 2. Thus, the ensembles of square-grids and arc-grids perfectly map the image into circular disk. Of course, the part of the square image that lies outside the circle will be left out in moment calculation.The contribution of an (i,k) arc-grid to PZMs is computed by splitting the integration of the kernel functionVpq⁎(x,y)into two parts as follows.(20)Δpqik=∫∫(i,k)arc-gridVpq⁎(x,y)dxdy=∫x=aiai+1∫y=bkdVpq⁎(x,y)dxdy+∫y=dc∫x=ai1−y2Vpq⁎(x,y)dxdywherec=1−ai2andd=1−ai+12. The Gaussian numerical integration of the first part in Eq. (20) is given by(21)∫x=aiai+1∫y=bkdVpq⁎(x,y)dxdy=(ai+1−ai)(d−bk)4∑l=0n−1∑m=0n−1wlwmVpq⁎(ai+ai+12+ai+1−ai2sl,bk+d2+d−bk2sm)The numerical integration of the second part is(22)∫y=dc(∫x=ai1−y2Vpq⁎(x,y)dx)dy=c−d2∑l=0n−1wlF(c+d2+c−d2sl)where the functionF(y)is evaluated as(23)F(y)=(1−y2−ai2)∑m=0n−1wmVpq⁎(1−y2+ai2+1−y2−ai2sm,y)

@&#CONCLUSIONS@&#
