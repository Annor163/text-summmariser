@&#MAIN-TITLE@&#
FSpH: Fitted spectral hashing for efficient similarity search

@&#HIGHLIGHTS@&#
We find that the projection of high-dimensional data on PCA axis has specific pattern.For efficiency, we use fitting function to fit this pattern to uniform distribution.Two binary hashing methods are proposed with Sigmoid function and Fourier function.The proposed methods are efficient and outperform current methods.

@&#KEYPHRASES@&#
Spectral hashing,Sigmoid function,Fourier function,

@&#ABSTRACT@&#
Spectral hashing (SpH) is an efficient and simple binary hashing method, which assumes that data are sampled from a multidimensional uniform distribution. However, this assumption is too restrictive in practice. In this paper we propose an improved method, fitted spectral hashing (FSpH), to relax this distribution assumption. Our work is based on the fact that one-dimensional data of any distribution could be mapped to a uniform distribution without changing the local neighbor relations among data items. We have found that this mapping on each PCA direction has certain regular pattern, and could be fitted well by S-curve function (Sigmoid function). With more parameters Fourier function also fits data well. Thus with Sigmoid function and Fourier function, we propose two binary hashing methods: SFSpH and FFSpH. Experiments show that our methods are efficient and outperform state-of-the-art methods.

@&#INTRODUCTION@&#
Similarity search, which is to find the most similar items from a collection for a query item, is an essential problem in the field of machine learning, computer vision and information retrieval. However, with the development of Internet and increasing amounts of data, similarity search faces following challenges: efficient storing millions of items in memory and quickly finding similar items to a query item. Recent work [1] shows that binary hashing methods are a powerful way to address those challenges:•The highly compressed binary codes can be loaded into main memory efficiently.Searching similar items can be extremely fast with Hamming distances calculated by bit XOR operation [2]: an ordinary PC today would be able to do millions of hamming distance computation in just a few milliseconds.The basic idea of binary hashing is to formulate projections from items to binary codes, so as to approximately preserve a given similarity function of interest [3]. ”Good” binary codes should meet the entropy maximizing criterion. According to the information theory [4], the maximal entropy of a source alphabet can be attained by having a uniform probability distribution. If the entropy of binary codes over data set is small, it means that data are mapped to only a small number of codes, thus rendering the codes inefficient.However, many state-of-the-art methods do not meet this criterion. One of the most well-known binary hashing methods is Locality Sensitive Hashing (LSH), which calculates binary codes by projecting data on random vectors with random thresholds, and as shown in [5] the hamming distance between binary codes will asymptotically approach the Euclidean distance between data items. The Kernelized version (KLSH) [6] widens the accessibility of LSH to generic normalized Kernel functions. Rather than using random vectors, the authors have pursued machine learning approaches, e.g. the restricted Boltzmann method (RBM) [7] and Boosting [8], to accelerate the document and image retrieval.When data are uniformly distributed in a hyper-rectangle, spectral hashing (SpH) [9], derived from the spectral graph partition problem, meets the entropy maximizing criterion. Bits can be calculated efficiently by the eigenfunctions of the weighted Laplacian defined onR1. This simple method outperforms above methods. However, the assumption of SpH is too restrictive in practice. In order to relax the restrictive assumption of SpH on data distribution, we propose an improved method fitted spectral hashing (FSpH). Our work is based on this obvious fact that any distribution of one-dimensional data could be mapped to a uniform distribution without changing the local neighbor relations among them. As shown in Fig. 1the proposed method contains three main steps: First, data set is mapped on the selected PCA direction to gain one-dimensional projected data; Second, the projected data is fitted to the uniform distribution by Sigmoid function; finally, binary code is generated using eigenfunction on this uniform distribution. The main contributions are as follows:•We have found that one-dimensional projection of high-dimensional data on the PCA direction could be fitted to the uniform distribution by Sigmoid function. Furthermore, we theoretically prove that Sigmoid function is the specific fitting model for this mapping. Since the Fourier function can approximate ’any’ function, we also use the Fourier function to fit data.We integrate SpH with the above two fitting functions to approximately meet the entropy maximization criterion, and propose two binary hashing methods, Sigmoid fitting spectral hashing (SFSpH) and Fourier fitting spectral hashing (FFSpH).

@&#CONCLUSIONS@&#
