@&#MAIN-TITLE@&#
Classifying GABAergic interneurons with semi-supervised projected model-based clustering

@&#HIGHLIGHTS@&#
Semi-supervised clustering of interneurons.Accurate discrimination among four types of interneurons.Identification of potential interneuronal subtypes.Axonal morphometric properties are better predictors than dendritic ones.

@&#KEYPHRASES@&#
Semi-supervised projected clustering,Gaussian mixture models,Automatic neuron classification,Cerebral cortex,

@&#ABSTRACT@&#
ObjectivesA recently introduced pragmatic scheme promises to be a useful catalog of interneuron names. We sought to automatically classify digitally reconstructed interneuronal morphologies according to this scheme. Simultaneously, we sought to discover possible subtypes of these types that might emerge during automatic classification (clustering). We also investigated which morphometric properties were most relevant for this classification.Materials and methodsA set of 118 digitally reconstructed interneuronal morphologies classified into the common basket (CB), horse-tail (HT), large basket (LB), and Martinotti (MA) interneuron types by 42 of the world's leading neuroscientists, quantified by five simple morphometric properties of the axon and four of the dendrites. We labeled each neuron with the type most commonly assigned to it by the experts. We then removed this class information for each type separately, and applied semi-supervised clustering to those cells (keeping the others’ cluster membership fixed), to assess separation from other types and look for the formation of new groups (subtypes). We performed this same experiment unlabeling the cells of two types at a time, and of half the cells of a single type at a time. The clustering model is a finite mixture of Gaussians which we adapted for the estimation of local (per-cluster) feature relevance. We performed the described experiments on three different subsets of the data, formed according to how many experts agreed on type membership: at least 18 experts (the full data set), at least 21 (73 neurons), and at least 26 (47 neurons).ResultsInterneurons with more reliable type labels were classified more accurately. We classified HT cells with 100% accuracy, MA cells with 73% accuracy, and CB and LB cells with 56% and 58% accuracy, respectively. We identified three subtypes of the MA type, one subtype of CB and LB types each, and no subtypes of HT (it was a single, homogeneous type). We got maximum (adapted) Silhouette width and ARI values of 1, 0.83, 0.79, and 0.42, when unlabeling the HT, CB, LB, and MA types, respectively, confirming the quality of the formed cluster solutions. The subtypes identified when unlabeling a single type also emerged when unlabeling two types at a time, confirming their validity. Axonal morphometric properties were more relevant that dendritic ones, with the axonal polar histogram length in the [π, 2π) angle interval being particularly useful.ConclusionsThe applied semi-supervised clustering method can accurately discriminate among CB, HT, LB, and MA interneuron types while discovering potential subtypes, and is therefore useful for neuronal classification. The discovery of potential subtypes suggests that some of these types are more heterogeneous that previously thought. Finally, axonal variables seem to be more relevant than dendritic ones for distinguishing among the CB, HT, LB, and MA interneuron types.

@&#INTRODUCTION@&#
GABAergic interneurons of the cerebral cortex are key elements in many aspects of cortical function in both health and disease. Nevertheless, the classification of GABAergic interneurons is a difficult task and has been a topic of debate for a long time, since the pioneering work of Santiago Ramón y Cajal on the characterization and identification of interneurons [1]. The difficulty stems from the high variability of these cells according to morphological, electrophysiological and molecular features [2]. The scientific community lacks an accepted catalog of neuron names [3] which makes it difficult to organize and share knowledge [2]. There is some agreement on the set of morphological, molecular, and physiological features that can be used to distinguish among types of GABAergic interneurons [2]. However, a comprehensive classification according to those features is difficult to perform in practice [3]. A recent experiment enabled 42 expert neuroscientists from all around the world to classify interneurons by visual inspection and according to pre-selected neuron names [3]. It showed that the experts agree on the morphological definitions of some of the pre-selected types while disagreeing on the definitions of others. In particular, some types seemed to overlap in terms of the cells that were assigned to them by the experts. In [3], the authors also showed that supervised classification models can automatically categorize interneurons in accordance with the opinion of the majority of the experts.Automatic classification of interneurons has mainly been done with (unsupervised) clustering; see, e.g., [4–8]. However, supervised approaches can be more accurate when there is prior knowledge about neuronal types [9]. In this study, such knowledge comes from the experts who participated in the experiment described in [3]. We can use this knowledge to guide classification and simultaneously discover subtypes using semi-supervised clustering, an approach that lies between the supervised and unsupervised approaches. In doing this, we follow the cluster assumption[10], i.e., we consider that the instances within a cluster are likely to belong to the same class whereas a class may consist of several clusters. In semi-supervised learning [10,11], some data instances are labeled whereas others are not. Since all our neurons were labeled by the experts, we fitted the semi-supervised scenario by removing the labels of (a) one type at a time; (b) two types at a time; and (c) half the instances of each type, simultaneously. By doing this we sought to discover possible subtypes and see if the types could be automatically discriminated. We used an adaptation of the semi-supervised projected model-based clustering algorithm (SeSProc) introduced in [12]. This is a probabilistic clustering algorithm which estimates the number of clusters and the relevance of each predictive feature for each of the clusters. The estimation of feature relevance within model-based clustering was introduced in [13].We quantified the neurons with nine simple axonal and dendritic morphological variables, such as the axonal length close to the soma, and labeled them according to the choices of the expert neuroscientists. In [3] each instance was given up to 42 labels—coming from the 42 experts that concluded the study. Following a common practice in supervised learning [14], we reduced this vector of 42 labels to its mode (i.e., the most common value), thus obtaining a single label per neuron. However, since experts frequently disagreed, such labels were often not reliable, i.e., they were backed by few experts. To cope with the label noise[15,16] that expert disagreements may be introducing, we analyzed three subsets of our neuron population, each with a different minimum of ‘label reliability’, i.e., such that the label of each neuron in the subset was agreed upon by at least th experts, with th being a ‘label reliability threshold’.This paper is an extension of [17] and is the result of close collaboration between experts in neuroanatomy and machine learning.11See the affiliations of the two institutions involved.We extend the mentioned paper by refining some of the predictor variables, adapting the SeSProC algorithm, and considering two additional experimental settings. The remainder of this paper is organized as follows: Section 2 describes the materials and methods we used; Section 3 reports and discusses the obtained results; while Section 4 provides conclusions.We used 237 three-dimensional (3D) reconstructions of interneurons from several areas and layers of the cerebral cortex of the mouse, rat, and monkey. These neurons were used in [3], and were originally extracted from NeuroMorpho.Org [18]. From this population of neurons, we formed subsets by imposing minimums on the number of experts that agreed on the label of an included cell (i.e., a ‘label reliability threshold’), considering that a higher threshold yields more confidence in the cells’ labels. We used thresholds 18, 22 (half plus one out of the 42 experts), and 26 to build three databases: th18, th22, and th26, respectively. These data sets contained interneurons of four different types (classes): common basket (CB), horse-tail (HT), large basket (LB), and Martinotti (MA). Table 1shows the distribution of different types at the three label reliability thresholds.We characterized each neuron using nine features of axonal and dendritic morphology. While one may compute many morphological features (e.g., [3] used over 2000 features for classification), none are known, so far, as good predictors of interneuron type. Since detailed morphometric information on 3D reconstructed cortical interneurons is relatively scarce (a few hundred reconstructed neurons are available, comprising different types), it might be counterproductive to use many predictor variables. Therefore, we kept the number of variables low by defining variables which capture how, in our opinion, an expert classifies an interneuron upon visual examination.We consider that an expert classifies an interneuron by estimating the distribution and the orientation of axonal and dendritic arborizations. We therefore measured the axonal and dendritic length according to the Sholl (5 features) and polar histogram (4 features) analyses from NeuroExplorer, the data analysis companion to Neurolucida [19]. Sholl analysis computes axonal and dendritic length at different distances from the soma whereas the polar histogram [20] describes the overall direction of dendritic growth; we only distinguished between two halves of the histogram, namely, the bifurcation angles falling in the [0, π) interval and those falling in the [π, 2π) interval. See Table 2and Fig. 1and for further details on predictor variables. We standardized all variables (transformed them so to have zero mean and unit standard deviation) prior to classification.While an expert who classifies using a similar rationale can only roughly estimate these features, our classifier used exact values, thus possibly being more objective. This is important as some of the features that we use, such as the length of the axonal arbor at a certain distance from the soma, are rather hard for an expert to estimate.We used the semi-supervised projected model-based clustering (SeSProC) algorithm, introduced in [12]. This algorithm allows clusters to exist in different feature subspaces, estimating the relevance of each feature for every cluster. We modified SeSProc's definition of feature relevance and its heuristic for initializing new clusters (see below for details on both modifications). SeSProC handles partially labeled data (i.e., some instances are labeled whereas others are not) by assigning unlabeled instances into either the a priori known clusters (given by the class labels) or to new clusters that it may have discovered.LetX={x1,…,xN}be observed data, withxi∈ℝF,∀i∈{1,…,N}, where F denotes the number of features. In model-based clustering, we assume that the data are generated from a finite mixture of K components. The density function for an instance xiisf(xi∣Θ)=∑m=1Kπmf(xi∣θm),with πm∈[0, 1] and∑m=1Kπm=1, andθmbeing the parameters of component m, with Θ={Θ1, …,ΘK, π1, …, πK}.SeSProC encodes the clustering solution with a latent K-dimensional binary variableZ, with zim=1 if xiis assigned to component m, and zim=0 otherwise. In a semi-supervised setting, we observe the class labels ci, ci∈{1, …, C}, of some instances i∈{1, …, L}, L<N. We use the class labels to set the minimum number of components in the mixture, with one component per class label (i.e., K=C). We also use the labels to fixzim=I(ci=m), whereI(·)returns 1 if (·) is true and 0 otherwise, for i<L. This means that the algorithm does not change zimfor the labeled xi—they always belong to clusters specified by their labels; the goal is to cluster the unlabeled instances xi, L<i≤N.Localized feature selection. Not all predictor variables are necessarily relevant for clustering. Following [13], we assume that a feature j is irrelevant if its distribution is independent on the components.22This differs from the original SeSProC method which follows the notion of irrelevance given in [21]. Also, our model differs from the one used in [13] in that it considers the per-component relevance of each feature.Such a feature then follows some distribution f(·∣λj), independent of any particular component, instead of following a distribution f(·∣θmj), dependent on a component m. SeSProc then models the distribution of a feature Xias a mixture of f(·∣λj) and f(·∣θmj). Assuming that the features are independent given the (hidden) mixture component, this transforms the density function intof(xi∣Θ)=∑m=1Kπm∏j=1F(ρmjf(xij∣θmj)+(1−ρmj)f(xij∣λj)),where ρmjis the probability of feature j being relevant for component m. ρ is encoded with an additional latent variableV, withvmj=1if feature j is relevant for component m andvmj=0otherwise, andρmj=p(vmj=1). The full parameter set of the finite mixture of K components is thenΘ={θmj,λj,ρmj,πm}m=1,…,K;j=1,…,F.IfZandVwere observed, the log-likelihood function would belogL(Θ∣X,Z,V)=∑i=1N∑m=1Kzimlogπm+∑j=1F(zim[vmj(logρmj+logf(xij∣θmj))+(1−vmj)(log(1−ρmj)+logf(xij∣λj))]).However, they are not observed, and we cannot maximize the log-likelihood function analytically. Instead, we approximate the solution with the iterative expectation-maximization (EM) algorithm [22]. The EM produces a sequence of parameter estimates by alternating an E-step—‘filling in’ the missing observations with their expected values given the current parameters, and an M-step —using the completed data to compute maximum likelihood estimates of the parameters. At a given iteration t of the EM procedure, the expectation of the log-likelihood function is given byEZ,V∣X,Θt−1[logL(Θt−1∣X,Z,V)]=∑i=1N∑m=1Kγ(zim)logπm+∑i=1N∑m=1K∑j=1Fγ(zim)γ(vmj)(logρmj+logf(xij∣θmj))+∑i=1N∑m=1K∑j=1Fγ(zim)(1−γ(vmj))(log(1−ρmj)+logf(xij∣λj)),where Θt−1 are the parameters from iteration t−1 and γ() is the expectation function.Assuming that both f(·∣θmj) and f(·∣λj) are Gaussian distributions, the parameters are updated in the M-step by maximum likelihood, as follows:πm=∑i=1Lzim+∑i=L+1Nγ(zim)N,ρmj=∑i=1Nγ(zim)γ(vmj)∑i=1Lzim+∑i=L+1Nγ(zim),μθmj=∑i=1Nγ(zim)γ(vmj)xij∑i=1Nγ(zim)γ(vmj),σθmj2=∑i=1Nγ(zim)γ(vmj)(xij−μθmj)2∑i=1Nγ(zim)γ(vmj),μλj=∑i=1N∑m=1Kγ(zim)(1−γ(vmj))xij∑i=1N∑m=1Kγ(zim)(1−γ(vmj)),σλj2=∑i=1N∑m=1Kγ(zim)(1−γ(vmj))(xij−μλj)2∑i=1N∑m=1Kγ(zim)(1−γ(vmj)),for m=1, …, K;j=1, …, F.Assuming that we have C classes in the data, the initial mixture contains C components. Its parameters are estimated with the EM procedure and its quality evaluated (see below) and recorded. Then, in the next iteration of SeSProC, this mixture is augmented with an additional component (see below), its parameters again estimated with EM and its quality computed and recorded. The process is repeated until a mixtureMKwith K components is better than a mixtureMK+1, and yieldsMKas the final model. We evaluate the quality of a model with the AIC score [23],AIC=−2logL+2R,where R, the number of parameters in a model, is a function of the number of components K and the number of features F:33The first addend in the formula for R corresponds to θ's, second to λ's, third to π's and fourth to ρ's.R=2KF+2F+(K−1)+KF.Additionally, we halt mixture augmentation ifMKcontains a component m with less than two instances (i.e., such that m is the most likely component for less than two instances), returningMK−1, unless K = C, in which caseMKis returned.When starting the EM procedure for a modelMK, we use the class labels to initialize the θ parameters for the classes, i.e., we estimateθm=(θm1, …, θmF), for m≤C, from instances belonging to class m. If K>C+1 (i.e., if there are already newly found components in the mixture), then we use theθm, C<m<K, fromMK−1as their initial values inMK, since there are no labels that could guide the estimation of their initial values. The initialθKfor the new component K are estimated from a number of unlabeled data points; the following paragraph describes how these data points are selected.Initializing a new component K. We have modified SeSProC to use the following heuristic for initializing new components. Starting from the previous mixture,MK−1, we consider the neighborhood of each unlabeled point as (a part of) a potential new cluster. Thus, we take the ct nearest unlabeled neighbors (according to the Euclidean distance in full dimensionality), where ct is a parameter of the algorithm, to a point xiand assign them to a new cluster, by setting zjK=1 and zjm=0, m≠K for all xjin the neighborhood of xi; we then update all parameters (this includes theθK) by maximum likelihood (i.e., with an M-step) and compute the likelihood of the thereby obtained model. The neighborhood that yields the most likely model is then used to initializeθKin the new modelMK.All assignments toZhere described are then undone afterθKis initialized (i.e., these assignments were only temporary).We tested SeSProC's capacity to discriminate among interneuron classes and explored the existence of their subtypes in three experimental settings, corresponding to three rules for hiding class labels. First, we unlabeled all the cells of a single class and then ran the algorithm once for each class. Here, there was initially a cluster for each of the other (labeled) types and the desired result was to assign unlabeled instances to a (one of) newly formed cluster(s), allowing us to explore the potential subtypes of each class separately. Second, we simultaneously unlabeled all cells of each pair of classes, yielding six clustering scenarios; this allowed to assess whether cells of different classes would be clustered together and whether, and to what extent, would the subtypes identified in the previous setting re-appear. Finally, we simultaneously unlabeled a portion of cells of each of the four classes. This allowed unlabeled cells to be placed in their ‘true’ cluster, other classes (i.e., be misclassified), or assigned to a new cluster, providing insight into the homogeneity of each interneuron class. Here we unlabeled half the instances of each class (rounding down when necessary). We selected unlabeled cells by random sampling at each label reliability threshold (thus a cell might have been unlabeled at th26 but not at th18, for example), and repeated the sampling ten times. We used these three unlabeling settings for each label reliability threshold, i.e., for th18, th22, and th26.For the first two settings, we defined per-class discrimination accuracy as acct=ct/ut, where utis the number of cells of the unlabeled class t and ctthe cardinality of the subset of utassigned to a (one of) newly formed cluster(s) (and therefore not assigned to one of the other classes). In the second setting, we averaged acctacross the three ‘scenarios’ in which t was unlabeled (e.g., HT was unlabeled together with CB, LB, and MA). For the third setting, we defined two measures —‘error’ and ‘accuracy’—as follows:errt=∑t′≠tatt′/ut, whereatt′is the number of unlabeled cells of class t assigned to class t′ and utthe number of unlabeled cells of class t, and acct=att/ut. ‘Accuracy’ considers the proportion of unlabeled cells of class t classified as t whereas ‘error’ does not penalize assignments to newly formed clusters.When starting the EM procedure for a mixture modelMK, one has to choose how to initialize the parameters. Furthermore, when K>C one can keep or adapt the parameters from the previous model,MK−1. We initialize the parameters with the following heuristics:•For m≤C, estimateθmfrom cells labeled as belonging to class m.Keep the θ and ρ parameters fromMK−1for C<m<K. That is,θmK=θmK−1,ρmK=ρmK−1,C<m<Kwhereρm=(ρm1, …, ρmF).EstimateθKfrom the instances selected as described in paragraph ‘Initializing a new component’ in Section 2.2.3.For components m∈{1, …, C}∪{K}, i.e., those of fixed classes and the newly introduced one, make all features equally relevant and irrelevant: ρmj=0.5, ∀m∈{1, …, C}∪{K}, ∀j∈{1, …, F}.Adapt π fromMK−1to give more weight to newly discovered components m>C than to class components m′≤C:πmK=2πm′K−1,∀m>C,∀m′≤C.Estimate λ as if ρmj=0.5, ∀m, ∀j, i.e., as if each feature was equally relevant and irrelevant for every component, in order to fully ‘reset’ the λ estimates.The EM procedure iterates until log-likelihood converges or up to 25 iterations. We set ct=5 for initializing new components, because this value produced the best results in preliminary experiments.Extreme probabilities due to maximum likelihood. Estimating the parameters of a Gaussian distribution by maximum likelihood can result in zero variance, driving an instance's density to infinity. To avoid this, we use 0.1 as a minimum variance for all Gaussian distributions, i.e., for all such distributions we set σ2=max{0.1, σ2}, where σ2 is the estimated variance.

@&#CONCLUSIONS@&#
Automatic classification of interneurons is a hard problem because data are scarce, the cells are morphologically, molecularly, and physiologically variable, and experts disagree on the definitions of features that distinguish them. Thus, we introduced a semi-supervised approach to this problem. Besides discriminating between types, this approach leads to the discovery of new types of neurons. It uses the available knowledge—in the shape of class labels—and also attempts to identify the relevance of each feature for each type and subtype.We presented results on the classification of common basket, large basket, horse-tail, and Martinotti cells. We quantified the neurons with simple morphological features which describe the distribution and the orientation of axonal and dendritic arbors, seeking to mimic the way in which an expert visually classifies a neuron. The algorithm accurately discriminated among the different types when one and two types were unlabeled at a time and when half the instances of all types were unlabeled. Importantly, it identified potential subtypes of common basket, large basket, and Martinotti cells, suggesting that these types are more heterogeneous than previously thought. Although the identified subtypes are small, they may be indicative of the characteristics that differentiate cells belonging to the same interneuron type.The defined morphological variables seemed useful for discriminating among the types. Axonal features seemed more useful than dendritic ones, with the axonal polar histogram length in the [π, 2π) interval appearing to be the most useful feature. The defined variables might then be considered in future studies of interneuron classification. Still, it is possible that more complex variables, such as those considering both the distance and position with respect to the soma (e.g., over 300μm from soma and above it) could further improve discrimination accuracy.Overall, the results suggest that a semi-supervised approach may be helpful in neuronal classification and characterization. Further studies, with different morphological features and more neurons, would be needed in order to obtain more conclusive results. Although we focused on a subpopulation of GABAergic interneurons, the presented methodology could be applied to other types of cells as well.The used algorithm, SeSProC, is open to further improvements, like the inclusion of uncertainty into labels. Instead of a single label—the class most voted by the experts—per data instance, a probability distribution could be learned from the experts’ votes, thus taking all votes into account. Alternatively, an approach similar to [31] might be applied: a separate model could be learned for each set of experts with similar opinions, and these models then combined into a final, consensus model. Regarding the data, although it is generally thought that the same morphological types of neurons are found in all species, we cannot discard the possibility of inter-species variability. Thus, we plan to further analyze the data taking into account the different species in order to find types of neurons that may be representative of particular species.Finally, it has been shown that GABAergic interneurons are affected in several brain diseases but not all of these interneurons are equally affected. For example, alterations of chandelier cells expressing the calcium binding protein parvalbumin have been associated with certain forms of epilepsy and schizophrenia. In addition, possible alterations of interneurons expressing somatostatin, neuropeptide Y and vasoactive intestinal peptide, probably including Martinotti and horse-tail (or double bouquet) interneurons, have been reported in schizophrenia (e.g., [32–35]). Since the algorithm used in the present study accurately discriminated between different interneuron types and new groups can be discovered, its application to study brain diseases may shed light on interneuron pathology in these diseases, providing a tool to more accurately determine which subtypes may be affected.