@&#MAIN-TITLE@&#
Joint tracking and classification with constraints and reassignment by radar and ESM

@&#HIGHLIGHTS@&#
It uses information from radar and ESM to avoid the kinematic-only classification.For each class, a separate filter is operated in parallel and implemented by IMMRPF.Speed likelihood for each class is calculated and combined with likelihoods from two sensors.Output of classifier is also used for particle reassignment of different classes.

@&#KEYPHRASES@&#
Joint tracking and classification,Electronic support measure,Interacting multiple model regularized particle filter,Speed constraint,Particle reassignment,

@&#ABSTRACT@&#
We consider the problem of joint tracking and classification using the information from radar and electronic support measure. For each target class, a separate filter is operated in parallel, and each class-dependent filter is implemented by interacting multiple model regularized particle filter. The speed likelihood for each class is defined using a priori information about speed constraint and combined with the likelihoods from two sensors to improve tracking and classification. Moreover, the output of classifier is also used for particle reassignment of different classes, which might lead to better performance. Simulations show that our proposed method can provide reliable tracking and correct classification.joint tracking and classificationpoint-target-motion-model based JTCrigid-target-motion-model based JTCelectronic support measuretransferable belief modelparticle filterregularized particle filterinteracting multiple modelinteracting multiple model regularized particle filterIMMRPF based JTCprobability density mass functionroot-mean squared errorsposterior joint state-class probability density mass function (pdmf)target state vectorith target typeknown number of target classesmeasurement sequences from radar and ESMmeasurement at time k from radar and ESMflight envelope constraints for class iset of maneuver models for class i targetMarkovian maneuver transition matrix for class i targetGaussian white process noise vector with zero mean and variance Qstate transition matrixgain matrixadditive Gaussian white noise with zero mean and variance Rset of all possible emitters, where N is the total number of emitter typesset of on-board emitters of class i targetnumber of the on-board emitters of class i targetESM measurement space, wherem=2NESM confusion matrixusage transition probability matrix for emitter joverall emitter usage transition matrix for class i target with emitter setεiposterior target class probability using ESM data onlyemitter usage status vector of class i targetposterior target class probability using radar data onlyjth model probability of class i target at time klikelihood for jth model probability of class i target at time kspeed likelihood functionsspeed feature measurementinitial class probabilitiesnumber of particles for class i target at time kinitial number of particles for class iindicator functioneffective sample size for class i targetpreset re-sampling threshold parameterhybrid particleweights of particles

@&#INTRODUCTION@&#
Target tracking and classification are two critical problems in radar surveillance systems. Tracking estimates the target dynamic state and classification deals with determining target identification. Compared with treating them separately, approaches of joint tracking and classification (JTC) attract more and more attention recently [1].JTC technology can be divided into the two categories: point-target-motion-model based JTC (PTJTC) [1–9] and rigid-target-motion-model based JTC (RTJTC) [10–13]. RTJTC can improve classification ability potentially by estimating target attitude, yet it needs specific sensors and computational complexity. On the contrary, PTJTC has no requirements for the attribute sensors. Therefore, PTJTC could be used in all kinds of JTC systems that might employ the conventional attribute sensors such as electronic support measure (ESM). Because the conventional radar and ESM are still the common sensors, PTJTC is more general.PTJTC was initiated by Challa [1], where the unified framework of JTC was established by introducing mutual feedback. The flight envelope estimated by tracker was used to assist recognition, and the output of classifier was helpful to target modeling. Further, X.R. Li gave a more integrated simultaneous tracking and classification method [2]. Y. Boers took JTC as hybrid state estimation problem and proposed a particle filter solution [4]. M.I. Miller considered target tracking and target classification in a single framework [5]. Gordon [6] suggested a unified algorithm for joint tracking and identification in the framework of the Bayesian theory, where a bank of filters covering the state and feature space was run in parallel with each filter matched to a different target class. Smets [7] developed an approach to JTC based on belief functions as understood in the transferable belief model (TBM), where they distinguished between the observed target behaviors and the underlying target classes that were usually not in one-to-one correspondence. A multiple model extension of the random finite set based single-target Bayesian filtering was presented [8], which could simultaneously accommodate the possible target maneuvering behavior, unknown data association, miss detection, clutter and several measurements originated from a target.Challa [1] suggested a grid-based approach for JTC using ESM and radar data. However, the computational efficiency of the grid-based algorithms depends on the state vector dimension. On the other hand, the Monte Carlo algorithms are more easily implementable for systems of high dimension. Feasible implementations of JTC via particle filtering were reported [6,9–13]. In the grid-based algorithms, the grid points are chosen by the designer, whereas in the particle filtering approach the particles are randomly generated according to the model of the dynamic system and then naturally follow the state. Particle filtering approach allows for an accurate representation of joint state and class probability distributions. This is guaranteed by calculating all integrals as accurately as possible. The high non-linear relationships between state and class measurements and non-Gaussian noise processes can be easily processed by the particle filtering technique. Moreover, flight envelope constraints, particularly useful for our task, can be incorporated into the particle filtering algorithm in a natural and consistent way.Angelova [9,14] developed a particle filter to jointly track and classify a maneuvering target using kinematic radar measurements only, without any electromagnetic or shape information. Two air target classes were considered: commercial aircraft and military aircraft [9,14]. However, there is nothing to stop a highly maneuverable target such as a military aircraft from flying slow and straight, in which case it would be classified by the system as a commercial aircraft [9,14]. This is one drawback of Angelova's method. Two multiple model class-dependent particle filters were designed and implemented [9,14]. However, the number of particles for each class remained constant during the tracking and classification process, which might lead to misclassification or increase the computational load due to the unlikely filters. This is another drawback of Angelova's method.Guo [15] presented a particle filter approach with mutual feedback for the JTC problem in FM-band passive air surveillance radar system. Delay and Doppler measurements were used to estimate dynamic state and recognize target class. Guo [15] pointed out that the models with higher probabilities deserved to be assigned more particles, therefore, the model probabilities were used to reassign the particle number of different models in different classes, which would lead to better performance. Motivated by this thought, we will design a class probability dependent particle reassignment technique, where the class probabilities will be used to reassign the particle number of different classes.Re-sampling is a method to reduce the degeneracy problem of particle filters. However, re-sampling in turn introduces the problem of loss of diversity among the particles. This arises because in the re-sampling stage, samples are drawn from a discrete distribution rather than a continuous one. Regularized particle filter (RPF) [16,17] re-samples from a continuous approximation of the posterior density, so the performance of RPF is better than that of generic particle filter in cases where sample impoverishment is severe. Furthermore, since multiple models will be included in our state model, therefore, we will adopt the interacting multiple model regularized particle filter (IMMRPF) [18] for our JTC problem.In summary, we will present an IMMPRF based JTC (IMMRPF-JTC) approach. The features of our proposed IMMRPF-JTC include: 1) It will use the kinematic information from radar and the electromagnetic information from ESM to solve JTC. Thus, the classification will be inferred from ESM combined with the output of tracker to avoid the kinematic-only classification. 2) For each target class, a separate filter is designed and operated in parallel. Each class-dependent filter represents an IMMRPF procedure, covering the class-dependent state and feature space. 3) Two kinds of constraints are imposed on the target kinematic parameters: acceleration and speed. The acceleration constraint will be naturally incorporated into the target motion model. The speed likelihood for each class will be calculated and combined with the likelihoods from ESM and radar to improve tracking and classification. 4) The class probabilities, i.e., the outputs of classifier, will be used not only to adjust the fusion weight, but also to reassign the particle number of different classes, which might lead to better performance of JTC.The remaining part of this paper is organized as follows. In Section 2, the problem description is presented. The system models are described in Section 3, including target motion model, radar measurement model, ESM measurement model and speed constraint. The Bayesian target classification, including ESM-only classifier and radar-only classifier, is presented in Section 4. Joint tracking and classification that contains JTC algorithm, IMMPRF, particle reassignment technique and final IMMRPF-JTC implementation is demonstrated in Section 5. Simulation results are illustrated in Section 6. Finally, Section 7 gives the conclusions.The uncertainty about the true state and class of an unknown target is jointly described by the posterior joint state-class probability density mass function (pdmf):(2.1)p(xk,c=i|z1:k),i∈{1,2,…,s}which satisfies the normalization requirement(2.2)∑i=1s∫xk∈Ξip(xk,c=i|z1:k)dxk=1wherexkis the target state vector,c=idenotes the ith target type, s is the known number of target classes,z1:k={z1:kx,z1:ke}.z1:kx={z1x,z2x,…,zkx}andz1:ke={z1e,z2e,…,zke}are the measurement sequences from radar and ESM, wherezkxandzkeare the measurements at time instant k from radar and ESM. The requirementxk∈Ξimodels the flight envelope constraints for class i. In our paper,Ξionly constrains acceleration (maneuver input) and speed of the target state.The final goal of the JTC problem is to estimate the target statexkand the class probabilitiesPr⁡(c=i|z1:k),i∈{1,2,…,s}, which can be easily obtained by marginalization of joint pdmfp(xk,c=i|z1:k).Different classes of aircrafts differ in their geometry, size, flight envelope and maneuvering capabilities in particular. The acceleration capabilities of various targets can be naturally incorporated into target's dynamical equation as input terms. Let the static target classck=c=ibelong to one of s known classes{1,2,…,s}at any time k. For simplicity, we suppose that each target class i has a set of r possible models. Under the assumption that the target motion is linear and its process noise is Gaussian, the motion corresponding to the j model of a class i target can be represented by:(3.1)xk=Fxk−1+Guk+vkxk,xk−1∈Ξi,uk∼Γ(i)The maneuver inputuk=Mjiis assumed to be from a finite-state Markov chainΓ(i),i=1,2,…,sdefined by:(3.2)Γ(i)=(Si,Pi),Si={M1i,M2i,…,Mri},Pi=(pilj),pilj=Pr⁡(uk+1=Mji|uk=Mli),l,j=1,…,rwhereSiis the set of feasible maneuver (acceleration) models for class i target, andPiis the maneuver transition matrix for class i target. F is the transition matrix, G is the gain matrix, andvkis the Gaussian process white noise with zero mean and variance Q.In our simulations, the target dynamics is given by formula (3.1).xk=(xk,x˙k,yk,y˙k)′denotes the target state in 2-dimensional space, containing target positions and velocities in the horizontal Cartesian coordinate frame. The control input vectoruk=(ax,k,ay,k)′includes target accelerations along x and y coordinates. The transition matrix and gain matrix are given by:F=[1T00;0100;001T;0001]G=[T2/20;T0;0T2/2;0T]where T is the sampling interval.In our simulations, we assume that the target belongs to one of the two known classes (s=2): a target (i=1) with limited maneuvering (2g) capability or a highly agile (5g) target (i=2). The flight envelope information comprises speed and acceleration constraints, characterizing each class. The speedvk=x˙k2+y˙k2of each class is limited respectively to the interval:{i=1:vk∈(100,350)}[m/s]{i=2:vk∈(150,650)}[m/s]The range of the speed overlap section is[150,350][m/s]. The acceleration processukis a Markov chain with five states (r=5):M11=(0,0)′,M21=(2g,2g)′,M31=(2g,−2g)′,M41=(−2g,2g)′,M51=(−2g,−2g)′M12=(0,0)′,M22=(5g,5g)′,M32=(5g,−5g)′,M42=(−5g,5g)′,M52=(−5g,−5g)′In our simulations, radar measurement vector iszkx=(D,β)′containing the distance D to the target and the bearing β. The measurement function is nonlinear, which can be easily implemented by our particle filter. The measurement process can be described by:(3.3)zkx=h(xk)+wkwhereh(x)=(x2+y2,arctan⁡yx)′andwkis the Gaussian measurement white noise with zero mean and variance R.ESM data consist of a sequence of detections of emitted signals. Using a wide-band antenna, ESM intercepts the signals emitted by the surrounding aircraft, and then a de-interleaving process separates the elementary emissions within the signal and decides about the identity of the emitter.The set of all possible emitters is indicated as:ΩE={E1,E2,…,EN}, where N is the total number of emitter types. When considering the class i target, the set of on-board emitters is:εi={Ej1(i),Ej2(i),…,Ejni(i)}⊂ΩE, whereniis the number of on-board emitters for the class i target.The ESM measurement space consists of all possible combinations of emissions:Ω={Q1,Q2,…,Qm}, whereQi,i=1,…,mis the generic subset of emitters and m is the number of all possible combinations of emitters,m=2N. Assuming that the kth ESM datazkeisQα, we have:zke=Qα∈Ω.The detection errors ESM system introduces are modeled by the confusion matrix:(3.4)Π={πjα},α,j=1,…,mπjα=Pr⁡(zke=Qα|Qjis true)If we assume that the emitter confusion process is independent for each emitter, a simpler description is possible for the confusion probabilities:(3.5)cij=Pr⁡(declareEj|detectEi)Now the probability for the type combinations in (3.4) may be decomposed into a product of elementary confusion probabilities:(3.6)πjα=ci1j1ci2j2⋯cipjqwhere assuming that emitter subsetsQpandQqhave the same number of emitters.Emitter switching behavior is described by defining an emitter usage Markov chain for each emitter on a target. LetEj(k)denote the event that emitter j is on at time k andE¯j(k)the complementary event that it is off. The usage transition probability matrix for emitter j can be described by:(3.7)φj=[Pr(Ej(k+1)|Ej(k))Pr(E¯j(k+1)|Ej(k))Pr(Ej(k+1)|E¯j(k))Pr(E¯j(k+1)|E¯j(k))]For target type i, the overall emitter usage transition probability matrixΨiwith emitter setεi, when the emitter switching processes are independent, is given by:(3.8)Ψi=φj1(i)⊗φj2(i)⊗…⊗φjni(i)where ⊗ denotes Kronecker product.Acceleration constraint is imposed on the filter operation by the use of an appropriate maneuver inputukin the target model. The speed constraint is enforced through the speed likelihood functions that are constructed based on the speed envelope information in Section 3.1. Such speed constraint will be incorporated into other approaches for our joint tracking and classification. In our simulations, we will define the following speed likelihood functions for both classes:(3.9)g1(vk1)={0.9ifvk1≤100[m/s]0.9−0.8250(vk1−100)if100<vk1≤350[m/s]0.9ifvk1>350[m/s]g2(vk2)={0.1ifvk2≤150[m/s]0.1+0.85500(vk2−150)if15<vk2≤650[m/s]0.95ifvk2>650[m/s]Fig. 1illustrates the evolution of the likelihood as a function of the speed.Given ESM dataz1:ke={z1e,…,zke}up to time k, the identification problem is to find the posterior class probabilities:Pr⁡(c=i|z1:ke),i=1,…,s. Applying Bayes' rule, we have:(4.1)Pr(c=i|z1:ke)=Pr⁡(zke=Qα|c=i,z1:k−1e)Pr⁡(c=i|z1:k−1e)∑j=1sPr⁡(zke=Qα|c=j,z1:k−1e)Pr⁡(c=j|z1:k−1e)Now for target classification using ESM data only:Pr⁡(c=i|z0e)=Pr⁡(c=i|z0). Applying the total probability theorem to (4.1), we will find:(4.2)Pr⁡(zke=Qα|c=i,z1:k−1e)=Pr⁡(zke=Qα|εi,z1:k−1e)=∑l=0hiPr⁡(zke=Qα|bli(k))⋅Pr⁡(bli(k)|z1:k−1e)wherebli(k)=[β1(k),…,βni(k)]is the emitter usage status vector of class i target: it is a binary vector with length equal to the numberniof emitters in the setεi; each element is either 0 or 1 according to whether the emitter is off or on. The index l(l=0,1,…,hi)stands for the lth combination of elements, andhi=2ni−1.Pr⁡(zke=Qα|bli(k))can be evaluated from the confusion matrix elements in (3.4). The second term in (4.2) is as follows:(4.3)Pr⁡(bli(k)|z1:k−1e)=∑p=0hiPr⁡(bli(k)|bpi(k−1))⋅Pr⁡(bpi(k−1)|z1:k−1e)=∑p=0hiΨpliPr⁡(bpi(k−1)|z1:k−1e)whereΨpliis the(p,l)element of the usage transition probability matrixΨidefined in (3.8). The last step of the calculation is:(4.4)Pr⁡(bli(k)|z1:ke)=Pr⁡(bli(k)|zke,z1:k−1e)=Pr⁡(zke|bli(k))Pr⁡(bli(k)|z1:k−1e)∑p=0hiPr⁡(zke|bpi(k))Pr⁡(bpi(k)|z1:k−1e)Target's dynamical behavior is embedded in radar data, so, extraction of this information is also a basis for target classification. In terms of Section 3.1, acceleration constraint and speed constraint are the two distinctive dynamical properties that differ between target classes. Here, we will consider the target classification only from acceleration constraint.Given radar dataz1:kx={z1x,…,zkx}up to time k, the identification problem is to get the posterior class probabilities:Pr⁡(c=i|z1:kx),i=1,…,s. Applying Bayes' rule, we have:(4.5)Pr⁡(c=i|z1:kx)=Pr⁡(z1:kx|c=i)Pr⁡(c=i|z0x)∑j=1sPr⁡(z1:kx|c=j)Pr⁡(c=j|z0x)Now for target classification using radar data only:Pr⁡(c=i|z0x)=Pr⁡(c=i|z0).(4.6)Pr⁡(z1:kx|c=i)=Pr⁡(zkx,z1:k−1x|c=i)=∏m=1kPr⁡(zmx|z1:m−1x,c=i)Furthermore, we have:(4.7)Pr⁡(zmx|z1:m−1x,c=i)=∑j=1rPr⁡(zmx|um=Mji,z1:m−1x,c=i)Pr⁡(um=Mji|z1:m−1x,c=i)=∑j=1rp(zmx|um=Mji,z1:m−1x,c=i)∑l=1rPr⁡(um=Mji|um−1=Mli)Pr⁡(um−1=Mli|z1:m−1x,c=i)Noting the model likelihoodΛji(m)=p(zmx|um=Mji,z1:m−1x,c=i)and the model probabilityμji(m)=Pr⁡(um=Mji|z1:mx,c=i), and recalling formula (3.2), we will have:Pr⁡(zmx|z1:m−1x,c=i)=∑j=1rΛji(m)∑l=1rpiljμli(m−1). Therefore, radar-only classifier is given by:(4.8)Pr⁡(c=i|z1:kx)=∏m=1k[∑j=1rΛji(m)∑l=1rpiljμli(m−1)]Pr⁡(c=i|z0)∑i=1s{∏m=1k[∑j=1rΛji(m)∑l=1rpiljμli(m−1)]Pr⁡(c=i|z0)}whereμji(m)andΛji(m)can be obtained from interacting multiple model (IMM) filter. The radar-only classifier provides good results only during target maneuvers.According to the Bayesian framework,p(xk,c=i|z1:k)can be computed recursively fromp(xk−1,c=i|z1:k−1)in two steps (prediction and update).1) Prediction(5.1)p(xk,c=i|z1:k−1)=∫xk−1p(xk|xk−1,c=i,z1:k−1)p(xk−1,c=i|z1:k−1)dxk−1wherep(xk|xk−1,c=i,z1:k−1)is obtained from the target state model (3.1):(5.2)p(xk|xk−1,c=i,z1:k−1)=∑j=1rp(xk|xk−1,uk=Mji,z1:k−1)Pr⁡(uk=Mji|xk−1,c=i,z1:k−1)=∑j=1rpv(xk−Fxk−1−GMji)∑l=1rPr⁡(uk=Mji|uk−1=Mli)Pr⁡(uk−1=Mli|c=i,z1:k−1)=∑j=1rpv(xk−Fxk−1−GMji)∑l=1rpiljμli(k−1)wherepvdenotes the process noise pdf in (3.1) andμli(k)is the model probability.2) UpdateAt time step k, each filter gives a state estimatexˆki. Assume that the estimated speedvˆk−1i(calculated fromxˆk−1i) is a kind of feature measurementyki. Thus, the conditional pdf of measurements is:(5.3)p(zkx,zke|xk,c=i)=pw(zkx−h(xk))⋅Pr⁡(c=i|zke)⋅gi(yki)whereyki=vˆk−1i,i=1,2,…,s,gi(⋅)is defined in (3.9),pwdenotes the measurement noise pdf in (3.3), andPr⁡(c=i|zke)=Pr⁡(zke=Qα|c=i)/∑j=1sPr⁡(zke=Qα|c=j).When the measurements{zkx,zke}arrive, the update step can be computed as:(5.4)p(xk,c=i|z1:k)=p(zkx,zke|xk,c=i)p(xk,c=i|z1:k−1)∑i=1s∫xkp(zkx,zke|xk,c=i)p(xk,c=i|z1:k−1)dxk3) Model probability updateUsing Bayes' theorem, the posterior model probability is expressed by:(5.5)μji(k)=Pr⁡(uk=Mji|z1:k,c=i)=1δp(zk|uk=Mji,c=i,z1:k−1)∑l=1rpiljPr⁡(uk−1=Mli|z1:k−1,c=i)=1δΛji(k)⋅∑l=1rpiljμli(k−1)=Λji(k)⋅∑l=1rpiljμli(k−1)∑j=1rΛji(k)⋅∑l=1rpiljμli(k−1)4) Compute the class probabilities and state estimate(5.6)Pr⁡(c=i|z1:k)=p(zk|c=i,z1:k−1)Pr⁡(c=i|z1:k−1)∑i=1sp(zk|c=i,z1:k−1)Pr⁡(c=i|z1:k−1)The state estimatexˆkifor each class i(5.7)xˆki=∫xkxkp(xk,c=i|z1:k)dxk,i∈{1,2,…,s}will take part in the calculation of the combined state estimate:(5.8)xˆk=∑i=1sxˆkiPr⁡(c=i|z1:k)It is obvious from (5.1)–(5.8) that the estimates needed for each class can be calculated independently from the other classes. So, our JTC could be accomplished by the parallel work of s independent filters to save computation cost.Given the prior pdmfp(x0,c=i|z0), theoretically, we can get the optimal Bayesian estimation via equations (5.1)–(5.8). In practice, the optimal Bayesian estimator cannot be approached in most cases, mainly due to the integral factors in (5.1), (5.4), (5.7). Many suboptimal methods have been proposed, such as particle filter and grid-based method of Challa's [1]. We will adopt the particle filtering procedure.Particle filter implements recursive Bayesian filtering by Monte Carlo simulations. It represents the posterior pdmf by a set of weighted random particles and can approach the true pdmf theoretically as the particle number grows infinitely.Re-sampling is a method to reduce the degeneracy problem that is prevalent in particle filters. However, re-sampling in turn introduced the problem of loss of diversity among the particles. This arises because in the re-sampling stage, samples are drawn from a discrete distribution rather than a continuous one. If this problem is not addressed properly, it may lead to ‘particle collapse’, where all particles occupy the same point in the state space, giving a poor representation of the posterior density.A modified particle filter known as RPF was proposed [16,17] as a potential solution to the above problem. RPF is identical to generic particle filter (PF) except for the re-sampling stage. RPF re-samples from a continuous approximation of the posterior density while generic PF re-samples from the discrete approximation. In terms of complexity, RPF is comparable to generic PF. In practice, the performance of RPF is better than that of generic PF in cases where sample impoverishment is severe.As seen from the target motion model in Section 3.1, r models are included in each class i target,i=1,…,s. Therefore, multiple model particle filter is definitely required, also seen from formula (5.5). Therefore, we will adopt the interacting multiple model regularized particle filter (IMMRPF) [18]. IMMRPF is a combination of interacting multiple model (IMM) filter (to account for switching) and RPF (to account for modified re-sampling). In IMMRPF: the mixing and interaction are similar to those in a conventional IMM filter, but in every model, RPF is running.We will design a bank of s separate particle filters, where each particle filter is based on IMMRPF. The hybrid particle{x,m,c}contains all the necessary information about the target state, model and class.From formula (5.8), we can see that the class probability is just used to affect the tracker fusion weight but not its structure and parameters. In other words, information from classifier is not utilized completely. If the class probability can be used not only to adjust the fusion weight, but also to reassign the particle number of different class, it might lead to better tracking performance. In this way, more particles are used for tracking higher probability class, which is also helpful to get more reliable classification results. Therefore, we will propose a class probability dependent particle reassignment technique to improve the performance of JTC. The scheme of our proposed IMMRPF-JTC is described in Table 1.In Table 1,q=1,…,Ni,kis the particle index,i=1,…,sis the class index,j=1,…,ris the model index. The number of particles for class i target isNi,k,i=1,…,s, where k is the time index. Initially,Ni,0=Nc,i=1,…,s, so the total number of particles for all s classes issNc. At the end of each iteration, we will re-assign the number of particles for each class according to the class probability, i.e.,Ni,k+1=(sNc−sNmin)⋅Pr⁡(c=i|z1:k)+Nmini=1,…,s, whereNminis the minimum number of particles for each class. Note that the total number of particlessNcfor all classes is invariable.In Table 1,1(•)is an indicator function such that1(m=l)=1ifm=land1(m=l)=0otherwise.Neff(i),i=1,…,sis the effective sample size for class i target,Nthresis the preset re-sampling threshold parameter.We will track the unknown target moving in a 2-dimensional space and identify that it belongs to class 1 or class 2 using associated radar and ESM data. We will evaluate IMMRPF-JTC performance by simulations over test trajectory 1 shown in Fig. 3 and test trajectory 2 presented in Fig. 9. Radar and ESM are located at(1000m,1000m), indicated by a triangle in both Fig. 3 and Fig. 9.Root-mean squared errors (RMSE) on position (both coordinates combined) and RMSE on speed (magnitude of the velocity vector), and classification probabilities for class 2 are used to evaluate the performance of the JTC methods. The simulation results are all based on 100 Monte Carlo averaging.The common parameters for both tests are set as:The initial class and model probabilities are:Pr⁡(c=i|z0)=0.5,μji(0)=0.2,i=1,2,j=1,…,5. The model transition matrix is set as:P1=P2=[0.700.100.050.100.050.150.700.050.050.050.150.050.700.050.050.150.050.050.700.050.150.050.050.050.70]The initial pdmfp(x0,c=i|z0)is set asx0∼N(m,P),i=1,2, where m contains the exact initial target parameters andP=diag{1502m2,202m2/s2,1502m2,202m2/s2}. The process noise isv∼N(0,Q),Q=diag{σx2,σv,x2,σy2,σv,y2}, whereσx=σy=100m,σv,x=σv,y=10m/s. The measurement noise isw∼N(0,R),R=diag(σD2,σβ2), whereσD=100m,σβ=0.15deg. Other parameters are set as:Nc=2500,Nmin=500,T=1s.The class 1 target is assumed to possess emittersε1={E1,E3}, while the class 2 target is assumed to possess emittersε2={E2,E3}. The usage process for each emitter is assumed to be independent with usage transition probability matrices given byφ1=[0.70.3;0.40.6],φ2=[0.80.2;0.10.9],φ3=[0.80.2;0.30.7]. At the initial time, the on or off probability of each emitter is assumed to be 0.5. The confusion process for each emitter is assumed to be independent, and the simple description for the confusion probabilities is:cij=0.6ifi=j;0.2otherwise;i,j∈{1,2,3}.The initial target state isx0=(1000m,10m/s,25000m,−100m/s)′. Our target is a fighter. The operating mode and estimated speed of our target are listed in Table 2. The speed-based class probabilitiesgi(vˆk−1i),i=1,2obtained by our IMMRPF-JTC are presented in Fig. 2(a) and are exploited to enhance the tracking and classification of our IMMRPF-JTC. We can see that: after 65 s, the target speed exceeds the value of 350 m/s (Table 2), the speed likelihoods (Fig. 2(a)) can correctly distinguish it to belong to the second class. Fig. 2(b) gives position RMSE and Fig. 2(c) illustrates speed RMSE by our IMMRPF-JTC and IMMRPF-JTC without speed constraint. According to the RMSE results, we can see: compared to IMMRPF-JTC without speed constraint, our IMMRPF-JTC can reliably track maneuvering target.Fig. 4illustrates the evolution of target classification probabilities for class 2 by our IMMRPF-JTC, IMMRPF-JTC without speed constraint, ESM-only classifier and radar-only classifier. Because the information for target classification by radar only is achieved using model probabilities, the radar-only classifier gives good results only during the target's strong maneuvers. In most of the time (i.e., during CV and weak maneuver phase), the radar-only classifier tends to favor class 1. Once the target initiates strong maneuver(5g,−5g)at 61 s, the radar-only classifier can have higher probability of class 2. After the target starts weak maneuver(g,g)again at 81 s, the radar-only classifier favors class 1 once again. In other words, the radar-only classifier gives the wrong decision during 81–100 seconds, which shows the importance of the speed information for classifying the target in the proper class.The ESM-classifier has acceptable discriminative power. Our IMMRPF-JTC also incorporates ESM data for classification. Our IMMRPF-JTC achieves fastest classification, reaching near-certainty at 17 s and remaining at a very high probability value, while ESM-classifier and IMMRPF-JTC without speed constraint can reach near-certainty at 50 s and 32 s, respectively.Fig. 6 illustrates the performance comparison by our IMMRPF-JTC and IMMPF-JTC. Fig. 6 conveys the following information: the performance of IMMRPF-JTC is better than that of IMMPF-JTC in terms of position precision (especially during 13–25 seconds and 62–70 seconds in Fig. 6(a)), speed precision (especially during 23–35 seconds and 40–60 seconds in Fig. 6(b)) and faster classification (reaching near-certainty much earlier in Fig. 6(c)). This might be attributed to the modified re-sampling process of IMMRPF that might in part solve the problem of loss of diversity among particles.Fig. 7 compares the tracking and classification performance by our IMMRPF-JTC and IMMRPF-JTC without particle reassignment technique. Obviously, our IMMRPF-JTC has a more precise tracking performance. Moreover, our IMMRPF-JTC achieves faster classification, reaching near-certainty at about 17 s and remaining at a very high probability value. Due to the total number of particles being unchanged, the elapsed time of two methods is close. Our IMMRPF-JTC will assign more particles to class 2, and thus it will get a more precise result. It is essentially a resource optimization.To show the robustness of our particle reassignment, the number of particles for each class is presented in Fig. 5. We can see that: the number of particles for each class is stable after about 20 s; the number of particles for class 1 is stabilized around 1000 and that for class 2 is about 4000, which also proves that our target belongs to class 2.The initial target state isx0=(5000m,50m/s,25000m,0m/s)′. Our target is a fighter, too. Similarly, the operating mode and estimated speed of our target are listed in Table 3. The speed-based class probabilities are illustrated in Fig. 8(a). We can see that: after about 90 s, the target speed exceeds 350 m/s (Table 3), the speed likelihoods (Fig. 8(a)) can correctly distinguish it to belong to class 2. Fig. 8(b) gives position RMSE and Fig. 8(c) presents speed RMSE by IMMRPF-JTC and IMMRPF-JTC without speed constraint. We can conclude: compared to IMMRPF-JTC without speed constraint, IMMRPF-JTC can reliably track maneuvering target.Fig. 10demonstrates the target classification probabilities for class 2 by IMMRPF-JTC, IMMRPF-JTC without speed constraint, ESM-only classifier and radar-only classifier. The radar-only classifier gives good results only during the target's strong maneuvers (by comparing Table 3 and Fig. 10), which shows the importance of the speed information for classifying the target in the proper class. The ESM-classifier has acceptable discriminative power. IMMRPF-JTC achieves fastest classification and remains at a very high probability value, while ESM-classifier and IMMRPF-JTC without speed constraint reach near-certainty much more slowly.Fig. 12 shows the performance comparison by IMMRPF-JTC and IMMPF-JTC. We can see from Fig. 12: the performance of IMMRPF-JTC is better than that of IMMPF-JTC in terms of position precision, speed precision and faster classification.Fig. 13 compares the tracking and classification performance by our IMMRPF-JTC and IMMRPF-JTC without particle reassignment technique. Obviously, our IMMRPF-JTC has better tracking performance and achieves faster classification. The number of particles for each class is demonstrated in Fig. 11, where we can see the robustness of our particle reassignment technique.

@&#CONCLUSIONS@&#
An IMMRPF-JTC is proposed in this paper. It uses the information from radar and ESM to solve JTC. For each target class, a separate filter is operated in parallel, and each class-dependent filter is implemented by IMMRPF. The speed likelihood for each class is calculated and combined with the likelihoods from two sensors to improve tracking and classification. The output of classifier is also used for particle reassignment of different classes.The performance of our proposed IMMRPF-JTC is analyzed by simulations over typical target trajectories in a plane. The results show reliable tracking and correct target classification. A generalization of our algorithm' application to the 3-dimensional case is straightforward. The future work will be extending our IMMRPF-JTC to multi-target case [19,20] from noisy and cluttered environment, which is more realistic.