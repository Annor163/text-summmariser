@&#MAIN-TITLE@&#
A finite element formulation to model extrinsic interfacial behavior

@&#HIGHLIGHTS@&#
We propose a Finite Element formulation based on the Discontinuous Galerkin method.The element is implemented in Abaqus using User Element subroutine.The element is tested on a simple mechanical configuration.Element parameters influence on the interfacial response is focused on.Element limitation is shown and explained.

@&#KEYPHRASES@&#
Abaqus,User element,Cohesive zone,Discontinuous Galerkin method,Extrinsic behavior,

@&#ABSTRACT@&#
A finite element formulation is proposed to implement the Discontinuous Galerkin method in commercial FE code (here, Abaqus). Such an implementation leads to the definition of perfect interfaces, and then, allows the definition of extrinsic cohesive zone. The proposed element is tested in a simple mechanical configuration, and the influence of several parameters is focused on. Formulation limitations are last explained.

@&#INTRODUCTION@&#
A commonly used method to allow cracks to appear and to propagate in finite element models is based on the cohesive zone approach. Since their first development by Dugdale [1] and Barrenblat [2], various formulations have been proposed, based on inverse identification (depending on the studied problem) or thanks to atomic theoretical considerations.Cohesive finite elements are interfacial ones, which are inserted between two classical FE; their mechanical behavior (Traction-Separation Law, or TSL) models the progressive damage of the interface, from undamaged state up to total failure.Cohesive zone elements might be implemented in various commercial Finite Element (FE) codes thanks to user subroutines, or are even included as standard procedures. Accounting for potential convergence problems [3], the failure of numerical structures is then possible.The use of these elements, however, induces several artifacts, directly linked to the pre-debonding part of the TSL, which corresponds to a – very tough – spring-like interfacial element: while inserted in a mesh, cohesive elements lead to a global deterioration of the Finite Element structure mechanical properties [4,5]. For certain configurations, where a crack path is not a priori supposed, numerical failure might also exhibit a mesh-dependency [6].To avoid such problems, several strategies might be used. One of them is based on the use of extrinsic cohesive elements, for which the undamaged interface cannot open, whatever the interfacial stress [7,8]. The extrinsic TSL, however, is not an application, and the implementation of such an element in Finite Element programs is highly problematic, being dependent on the way the mechanical solution is computed by the FE program [9]. Extrinsic behavior can nevertheless be defined thanks to an implicit pre-debonding TSL definition, based on the use of the Discontinuous Galerkin (DG) method.The discontinuous Galerkin Method has been introduced by Reed [10] in 1973 to solve transport problems, and to get solutions in which potential discontinuities do not create artificial oscillations. The DG method has then been extensively used for a large game of problems (see [11] for a review). Because the DG method deals with unknown fields discontinuities, it is well adapted to crack initiation problems, in which a crack path is defined in a solid which remains undamaged up to a critical stress value. Across this potential discontinuity surface, the unknown displacement field has to remain continuous until the onset of failure. This method has then been developed for crack initiation and propagation problems [12] and applied to various configurations [13–19].Because of its formulation and its implicit properties, the integration of such a method in commercial programs is not easy due to the available data which are transferred to user subroutines, and its implementation is mainly performed in home-made FE codes or open sources ones (e.g., [20]). We aim in the present paper at proposing a finite element formulation which allows the DG method implementation in FE commercial programs, avoiding the problem due to the implicit pre-debonding TSL formulation. Such an element consequently allows the definition of perfect interfaces. This element was implemented in Abaqus, using a User ELement subroutine (UEL).The DG method is first presented, and, based on a simple 1D analytical problem, the finite element configuration is derived. The interfacial pre-debonding TSL is then focused, and especially, the influence of mechanical parameters. Last, formulation limitations are pointed out. Vectors will be denoted thanks to bold letters, while italic letters are associated to scalar variables. Tensors will be written as[X]orX, depending on the context. “:” denotes double tensorial contraction, and “.” simple contraction.Let us consider an elastic bodyΩ, whose boundary∂Ωis partitioned in two∂Ω=∂Ωu∪∂ΩT. This body is submitted to both imposed displacementu¯and stressT¯on∂Ωuand∂ΩTrespectively (Fig. 1).Ifudenotes the (unknown) displacement at each body material points, the strain tensorϵbeing so that(1)ϵ=12(∇u+∇Tu),where ∇ is the Nabla operator. The stress fieldσis then deduced from the strain one through the material behavior (e.g., for an elastic body,σ=C:ϵ,Cbeing the elasticity tensor).The displacement fieldusolution of such a mechanical problem is then deduced from(2){divσ=0inΩu=u¯on∂Ωuσ.n=T¯on∂ΩT,nbeing the outward normal vector at the considered point of the body boundary. This system might be rewritten as a weak formulation:uis the solution of the problem if, for all virtual displacement fieldδu,(3)∫Ωσ:δϵdV=∫∂ΩTT¯.δudS.Let us consider a surface Scz, defining a partition ofΩ=Ω−∪Ω+: this surface represents the possible path along which crack initiation and propagation is triggered as soon as the stress field is strong enough.When such a crack appears, two new surfaces are defined,S+andS−, on which the boundary conditions are unknown, and two new mechanical problems on Ω− and Ω+ must be defined. Sczis here set as the average surface betweenS+andS−.The Discontinuous Galerkin method allows the resolution of such a problem, through the modification of the weak formulation of the initial problem onΩ, accounting for potential displacement or stress discontinuities across Scz. Unknown boundary conditions on bothS+andS−become a solution of the global problem. The use of the Discontinuous Galerkin (DG) method leads to the following modification of Eq. (3)[12,14],(4)∫Ω+∪Ω−σ:δϵdV+∫Scz〈T〉δΔdS+∫Scz(knΔ)δΔdS=∫∂ΩT+∪∂ΩT−T¯.δudS.In the following, mechanical fields on each domain are denoted thanks to their related up-scriptsX+andX−.In Eq. (4),〈T〉represents the average stress on Scz, defined by(5)〈T〉=12(σ++σ−).n,whereσ+andσ−represent the stress field tensor onS+andS−respectively;Δ=u+−u−is the displacement jump across this surface.The termknΔallows us to include in the problem formulation the displacement continuity across Scz, corresponding to the pre-cracked configuration of the domainΩ. knis thereafter called ‘stabilization term’.The Finite Element formulation (DG-element) presented here is based on an analytical resolution of the Discontinuous Galerkin method applied on a simple 1D problem. This resolution is first presented, and the main DG-element characteristics derived; the element formulation is last generalized for any 2D-problems.Let us consider a bar with a length2Ldivided into two equal parts Ω+ and Ω−, by an interface Scz, and submitted to an imposed displacementu¯(Fig. 2).Each bar subpart is meshed with one linear finite element, separated by an interface on which no boundary conditions are prescribed. On each node, only one degree of freedom (dof) qiis considered, representing the nodal displacement in the bar direction. Node no. 2 corresponds toS−, and node no. 3 toS+; on these two nodes, displacements are unknown, but are computed thanks to the DG method.Displacements are imposed on nodes 1 and 4, respectively equal to 0 andu¯. Last, the bar is assumed to be elastic, with a Young׳s modulus E.On each half bar, deformation and stress are constant and equal to(6){half-barΩ−:ϵ−=q2−q1Landσ−=Eϵ−half-barΩ+:ϵ+=q4−q3Landσ+=Eϵ+,and their contribution to the weak formulation (Eqs. (3) or (4)) is(7)∫Ω−σ:δϵdV=EL(q2−q1)(δq2−δq1)=δq−[K−]q−.where(8)[K−]=EL[1−1−11]is the half-bar stiffness matrix; on Ω+, we get(9)∫Ω+σ:δϵdV=EL(q4−q3)(δq4−δq3)=δq+[K+]q+,with[K+]=[K−].On Scz, the average stress〈T〉and the openingΔcan be written as(10){〈T〉=E2L(q2−q1+q4−q3)Δ=q3−q2,and consequently, DG method contribution to the stiffness matrix becomes(11)∫Scz〈T〉δΔdS+∫Scz(knΔ)δΔdS=E2L(q2−q1+q4−q3)(δq3−δq2)+kn(q3−q2)(δq3−δq2)=δq[KDG]qwhere(12)and(13)[KDG]=E2L[00001−11−1−11−110000]+kn[000001−100−1100000].Finally, the global problem stiffness matrix is written as(14)Using the bar problem boundary conditions (q1=0andq4=u¯), the problem is reduced to the following system:(15){(1+2LknE)q2+(1−2LknE)q3=u¯(1−2LknE)q2+(1+2LknE)q3=u¯,the solution of which isq2=q3=u¯/2for every non-zero knvalues. The corresponding interfacial openingΔis 0: Sczis thus a perfect interface, andScz=S+=S−. For kn=0, however, an infinite number of solutions exist for q2 and q3.From Eq. (15), we can define a ‘natural’ knvalue, so thatkn=knref=E/2L, which is consistent with the knformulation one can find in the literature [12]:kn=γ/L, γ being a constant and L the surrounding mesh size.From this simple analysis, it can be seen that, to get a perfect interface definition in Finite Element analysis, it is necessary to modify the stiffness matrix of the neighboring elements.Using classical cohesive element definition for interfacial modeling, i.e., for the considered problem, a 2-node interfacial element, the problem stiffness matrix (Eq. (14)) must be rewritten as(16)[K]=[2−200−21+2LknE1−2LknE001−2LknE1+2LknE−200−22],the solution of which is(17){q2=u¯2knL−E2knLq3=u¯2knL+E2knL.The corresponding interfacial opening isΔ=q3−q2=Eu¯/knL⟶kn→∞0.Using classical cohesive element to implement the DG method leads consequently to a natural opening of the interface, and then, an impossibility to model extrinsic behavior.The solution consists in developing an element whose nodes recover the neighboring elements ones: its stiffness matrix will then affect the one of the latter elements, theoretically allowing the implementation of the DG method, and the definition of perfect interfaces.A 2D Finite Element formulation based on the DG method (thereafter called DG-element) is proposed in the next section, based on the previous analysis, to model perfect interfaces, leading to extrinsic cohesive elements definition.The DG-element has then been defined as a 8-node element, composed of two bilinear standard 4-node elements and an interfacial one.Mechanical properties and interpolation functions of the upper and lower 4-nodes elements must be the same than the one used in the surrounding elements (e.g., CPE4 in Abaqus for a plane strain problem). The DG-element is supposed to be superposed to the interface surrounding mesh, allowing the modification of the whole neighboring element stiffness matrix (Fig. 3), and thus, the implementation of the DG method.For the upper and lower 4-node element, it is possible to get the stressσat each point, based on both the elasticity tensorC, the material being assumed here to be elastic, and the finite element interpolation functionsN(18)σ(ξ,η)=C:(∇N.q)=B(ξ,η).q,where ξ and η are the coordinate system in the 4-node element reference coordinate system (with(ξ,η)∈[−1,1]2). Interfacial stresses onS+andS−are then derived(19){T+(ξ)=σ+.n=(B(ξ,−1).q+).n=[T+](η).q+T−(ξ)=σ−.n=(B(ξ,+1).q−).n=[T−](η).q−as is their average value, considering the 8-node dof vector,(20)Last, the displacement discontinuity across Sczmight be written as(21)Δ(ξ)=[1+ξ201−ξ20−1−ξ20−1+ξ2001+ξ201−ξ20−1−ξ20−1+ξ2]{q3xq3yq4xq4yq5xq5yq6xq6y},i.e., considering the whole 8-node element(22)The DG-element contribution of the weak formulation is deduced(23)and the 16 ×16 DG-element stiffness matrix can be defined(24)While dealing with non-linear mechanical behaviors, the finite element problem resolution becomes incremental, considering the tangent stiffness matrixDinstead of the elasticity tensorC:(25)∂σ=D(ϵ,∂ϵ):∂ϵ,where∂σand∂ϵare the stress and strain increment, respectively, andDbeing strain and strain increment-dependent. For elastoplasticity,D=Cin the elastic stage, andDis plastic strain-dependent in the plastic stage (see [21] for an extensive presentation ofDcomputation). For a given boundary condition increment∂T¯, the weak formulation becomes(26)∫Ω+∪Ω−∂σ:δϵdV+∫Scz∂〈T〉δΔdS+∫Scz(kn∂Δ)δΔdS=∫∂ΩT+∪∂ΩT−∂T¯.δudS.∂〈T〉is so that(27)∂〈T〉=12(∂σ++∂σ−).n,and∂Δrepresents the interfacial opening increment.Using the finite element interpolation functions, the stress field increment might be written as a function of the unknown dof increment∂q(from Eq. (18))(28)∂σ(ξ,η)=D(q,∂q):(∇N.∂q)=B′(ξ,η,q,∂q).∂q.The finite elements stiffness matrix are thus also dependent on the dof increment(29)[Kelement′]=∫elementB′(ξ,η,q,∂q):∇NdV,as are the 8-node DG-elements one[KDG′], considering that the lower and upper interfacial stresses increment have to be rewritten as (see Eqs. (19) and (20))(30)∂T±(ξ)=∂σ±.n=[B′(ξ,−1,q,∂q).∂q±].n.Last, the dof increment∂qis found using a Newton–Raphson scheme so that the equilibrium between internal and external forces increment is achieved (from Eq. (26)):(31)∂qissothatr(∂q)=∂fint(q,∂q)−∂fext=0,where(32){∂fint(q,∂q)=[∑elements∈Ω+∪Ω−[Kelement′]+∑DG-elements∈Scz[KDG′]]∂q∂fext=∑elements∈∂ΩT+∂∪ΩT−∫element∂T¯.NdS.Considering a non-linear material behavior and using an incremental resolution scheme do not modify the global formulation of the 8-node DG-element, but for the material constitutive law, which evolves with the current dof valueq+∂qand has to be determined at each problem increment.For the 1D-bar configuration (Fig. 2), stress and strain increment are linked thanks to the tangent modulus Etso that∂σ=Et∂ϵ, and the problem formulation becomes (from Eq. (15))(33){(1+2LknEt)∂q2+(1−2LknEt)∂q3=∂u¯(1−2LknEt)∂q2+(1+2LknEt)∂q3=∂u¯,where∂u¯represents the boundary condition increment. Etis here assumed to be known, thanks to an algorithm which depends on the bar mechanical behavior and on the internal variables (e.g., the equivalent plastic strain for elastoplasticity).The solution of this problem increment is∂q2=∂q3=∂u¯/2, sincekn≠0, and then, the global problem solution for the total applied displacementu¯=∫∂u¯isqi=∫∂qi=u¯/2, with i in{1,2}. The corresponding interfacial opening is consequently equal to zero at each problem increment. The definition of the reference stabilization parameter, however,is modified at each increment, for it becomes incrementation-dependent:knref=Et/2L.It is worth noting that before solving the DG problem, all of the internal variables must be computed for the upper and lower part of the DG-element, as well as the tangent modulus (using, e.g., a Newton–Raphson resolution scheme).When debonding begins to occur along Scz, the interfacial TSL slope is no longer infinite, and an explicitT(Δ)function can be written [22]. The DG-element stiffness matrix is then deduced from classical cohesive zone ones [23](34)δq[Kcz]q=∫SczT(Δ)δΔdS,with, e.g. [7],(35){Tα=Tαmax(1−Δαδα)ifΔα<δα0ifΔα>δα,forα∈{t,n},where n and t denotes normal and tangent interface direction (see Fig. 3),δαandTαmaxbeing respectively the critical opening and the cohesive stress in the α direction. The DG-element stiffness matrix is consequently only interfacial nodes dependent, and consequently(36)The cohesive and debonding stages can be accounted for simultaneously by introducing an internal parameter δcso that [24](37)[KDGCZ]=(1−δc)[KCZ]+δc[KDG],withδc=1in the cohesive stage andδc=0in the debonding one.The 8-node finite element has been defined in Abaqus thanks to a User Element subroutine definition [25]. This element and its implementation have been tested on a simple configuration. In the following, only the cohesive stage is focused on.The UEL subroutine has been compiled using a “-r8” flag, and real⁎8 variables have been used; such a configuration leads to a precision in computed variables equal to [26]ϵrr=1.11022302462515×10−16The DG-element behavior has been tested on a simple mechanical configuration to get its ability to model a perfect interface, and the influence of several parameters on its TSL before debonding has been focused on. Results of these computations are summarized thereafter.A 2D-rectangular sample has been considered, whose height and width were respectively 20 and 2mm. This sample was submitted on the one hand to an imposed displacement, and on the other hand to a symmetric boundary condition (Fig. 4). The material was assumed to be an elastic one, the Young modulus and the Poisson ratio being respectively E and ν.The sample was regularly meshed using four-nodes bilinear elements, with full integration, and plane stress assumptions (CPS4 in Abaqus). It was regularly meshed, with neelements along the interface. The mesh size was characterized by ne, the number of element along Scz.A default configuration has been set, the parameters values of which being E=1MPa, ν=0 and ne=1. The corresponding reference stabilization parameter is thusknref=0.25MPa/mm.All computations presented thereafter were performed with 100 iterations, whatever the applied load and/or configuration, for the sake of comparison.Unless specified, default configuration parameters were used.First computations sets were performed considering a tensile loading (with a 10mm imposed displacement along the y direction, see Fig. 4) and a shear one (with a 2mm imposed displacement along the x direction). For this latter, periodic boundary conditions were added along the two sample side parallel to the y direction. Last,kn=knrefwas used.Computed DG-element TSLs are plotted in Fig. 5.For these two loading cases, it can be observed that opening values were strictly proportional to ϵrr, and being alternatively positive and negative.Both Δnand Δt, furthermore, appear to behave as random-like variables, with no apparent relationship between their value and the corresponding interfacial stress; only their extremums seem to be affected by the interfacial stress.The DG-element cohesive stage behavior was consequently evaluated thanks to the probabilistic characteristic of the 100 computed opening values, i.e., withα∈{n,t}•E|Δ|, the mean value of|Δα|;σ|Δ|, the standard deviation of|Δα|;mΔ, the median value ofΔα.For the two loading considered here, probabilistic characteristics are reported in Table 1. It can be observed that, for shear applied loading,mΔis equal to 0, denoting a symmetric distribution of computed tangent opening.To get a panorama of the DG-element domain of validity, several parameters influences on its pre-debonding TSL have been focused on, and, especially, the FE characteristics (finite element size L and interfacial discretization ne), and the mechanical parameters (E, ν, kn).Because no slight differences appeared while comparing tensile and shear loadings, only tensile loading was considered, and consequently, only Δnprobabilistic characteristics are shown below.Several computations were performed considering knvalues varying from 10−9 up to 106MPa/mm. Results are plotted in Fig. 6.For knvalues higher than2knref, Δnvalues remain close to the ϵrr one, and appeared to be kn-independent (Fig. 6a). For such knvalues, the DG-element tends to model a perfect interface.When the stabilization parameter decreases, however, Δnvalues notably increase, characterizing the progressive loss of the DG-element extrinsic behavior (and the nonexistence of a solution while kntends to be close to 0).This change in the TSL is confirmed by Fig. 6b, on which a break clearly appears in the Δnstatistical characteristics forkn≈knref:•forkn<knref, the DG-element diverges from an extrinsic behavior. All of the Δnstatistical properties increase, and the problem tends to diverge when kntends to zero;forkn>knref, the DG-element is statistically knindependent, withE|Δ|=σ|Δ|=2ϵrr. Forkn>10knref,mΔ=0: Δnvalues are symmetrically distributed for the current configuration.kn=2knrefis thereafter considered to be part of the default configuration: for such a stabilization parameter value, the DG-element TSL is expected to be extrinsic.The influence of mechanical parameters on the DG-element TSL is summarized in Fig. 7.From Fig. 7b, it can be seen that Δnstatistical properties tend to increase with E, remaining very close to ϵrr for a large Young׳s modulus range. Nor ν neither E affect the interfacial TSL behavior (Fig. 7a), which remained extrinsic.Last, FE size influence on Δnstatistical characteristics was focused on. Two computations were performed, based on the default configuration, but considering on the one hand a smaller sample (ne=1 and thusL<2), and on the other hand a higher interfacial discretization (ne>1). Results are plotted in Fig. 8.In Fig. 8a, it can be seen that the interfacial response of the DG-element is kn-independent as soon as the stabilization parameter is large enough. When the sample size decreases, knthreshold increases, and the limit value forE|Δ|decreases. Furthermore, ifkn≈knref,E|Δ|is both L and kn-independent.From Fig. 8b, it appears that nedoes not have any influence on the DG-element TSL.For non-linear mechanical behavior, it has been seen that the reference stabilization parameter is no longer constant along the problem resolution, but depends on each iterations. To remain consistent with the previous parametric study, the stabilization parameter has to be chosen so thatknref=E˜/2L, whereE˜=maxEtrepresent the maximum of the tangent modulus for the considered mechanical behavior. For elastoplastic material,E˜=E, and then the reference stabilization parameter for the whole computations is the same than the one defined for elastic materials.Considering uniform stress distribution along the interface, the DG-element is then able to define a perfect interface, being both material and FE discretization independent. The only critical parameter is to be the stabilization one, and its minimal value for the DG-element to had an extrinsic behavior was exhibited to be proportional to knref.The DG-element TSL, however, is highly dependent on the average stress〈T〉computation, which depends on several parameters, such as the 4-nodes FE formulation ability to give an accurate stress field, or the structure discretization (i.e., the error in global stress field computation).To exhibit the limitation of the proposed element formulation, two examples were chosen, in which〈T〉computation was inaccurate, and consequently, the DG-element unable to model an extrinsic interfacial element. It is worth noting that such limitations and errors are not related to the DG-element definition as a 8-node finite element, but rather to the surrounding mesh own limitations.The sample was submitted to a non-uniform but symmetric loading, leading to a bending stress state (Fig. 9). For this computations, it was used ne=67,E=104MPa, ν=0 andkn=2knref. Sample dimensions were still 20mm high and 2mm wide.In each DG-element, the stress field is no longer constant, but the 4-node bilinear elements are able to compute an accurate stress field in the whole sample. The computation of the DG-element stiffness matrix, however, became integration-scheme dependent (Eq. (24)). Several integration schemes were thus considered to illustrate this dependency, using 1, 2 and 3 Gauss Point, and 1 and 2 Newton–Cotes points. At the end of the bending computation, normal openings were extracted at every interfacial integration points, the results being plotted in Fig. 10a.For such an heterogeneous loading, it appears that the maximum normal opening value at the end of the computations was consistent with the traction results (see Fig. 8b), i.e., few ϵrr, with no slight difference between integration scheme, but for 1 Gauss Point and 2 Newton–Cotes integration scheme. For these two laters, the DG-element did not allow to get a perfect interface: due to integration errors, the computed average interfacial stress did not fit to the one that should have been computed in sample without DG-element. As a consequence, side effects appeared, and the DG-element tends to degenerate towards a spring interfacial element, the stiffness of which is proportional to kn.A 0.6mm crack was introduced along the interface, considering a 3 Gauss Point integration scheme for which integrations errors were minimum; the other parameters remained unchanged. Computation result can be seen in Fig. 11.As in the previous example, it can be seen in Fig. 12a and b that the DG-element is unable to lead to an extrinsic interfacial behavior: near the crack tip, normal opening increases and tend to diverge. None of the interfacial DG-element exhibit a satisfactory response.As previously, the computed average interfacial stress〈T〉was far from being the theoretical one, due to the finite element discretization and the unability of 4-nodes finite elements to gave accurate stress fields in the whole sample, especially near the crack tip: this non-reliability of the used FE to model the problem induced the inefficiency of the DG-element to give a perfect interfacial behavior, even if the computed stress fields and interfacial opening were better than the one computed using an intrinsic cohesive element (Fig. 12b).The DG-element׳s degenerate behavior, due to errors in the computed mechanical fields in the interface neighborhood, led to severe limitation for such an element use in structural computation, for no perfect mechanical fields can be derived from a general finite element computation. It is then needed to improve the proposed element, to increase its application range in term of mechanical problems.We propose to define an internal variableΔo, following [27], which act in the DG-element as a virtual opening. The aim of such a variable is to decrease the computed interfacial openingΔin case of DG-element׳s degenerate behavior: Eq. (4) is rewritten so that(38){∫Ω+∪Ω−σ:δϵdV+∫Scz〈T〉δΔdS+∫Scz[kn(Δ+Δo)]δΔdS=∫∂ΩT+∪∂ΩT−T¯.δudSandwithΔ̇o,α)α∈{t,n}=Δ̇αifTα<Tαmax(beforedebonding)0afterdebondingIntroducingΔoin the DG-element formulation forces Abaqus to report all of the computed stress field errors on the internal variable evolution instead of the interfacial opening. The final∥Δ∥value is thus lowered, while becoming Newton–Raphson scheme tolerance-dependant (Rnαparameter value in Abaqus [28], the default value of which being5×10−3).The stress field in the cracked sample (Fig. 11) has been re-estimated using the DG-element correction; results are shown in Fig. 13.It can be seen that using an internal variable does not allow to fully recover a perfect interfacial behavior; computed openings, however, have been highly lowered, at least far from the singularity. In Fig. 13b is shown a comparison of the numerical stress field around the crack tip, considering or not the use ofΔo: even if limited, the decrease of the DG-element opening near the crack tip leads to a consequent increase of the stress field, from 2400MPa to 3000MPa.

@&#CONCLUSIONS@&#
