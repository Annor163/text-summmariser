@&#MAIN-TITLE@&#
Reconstruction of free-form space curves using NURBS-snakes and a quadratic programming approach

@&#HIGHLIGHTS@&#
A novel approach for the reconstruction of free-form space curves is presented.The proposed approach is based on NURBS-snake model and quadratic programming.An energy minimization method which is analogous to snake model “NURBS-snake model” is used.Levenberg–Marquardt algorithm is used for optimizing the parameters of the energy function.The initial parameters of the NURBS-snake are obtained using a two step procedure in which firstly weights are obtained by solving a quadratic programming problem and then control points are evolved by solving a system of linear equation.The proposed method has been tested using various synthetic and real data.The proposed scheme is also applicable when the samplings of image curves vary.The method is easy to implement and can be used to reconstruct complex free-form shape curves.

@&#KEYPHRASES@&#
Levenberg–Marquardt algorithm,Non-Uniform Rational B-spline (NURBS)-snake model,Perspective projection,Simulation analysis,Three-dimensional reconstruction,

@&#ABSTRACT@&#
In this study, we propose a robust algorithm for reconstructing free-form space curves in space using a Non-Uniform Rational B-Spline (NURBS)-snake model. Two perspective images of the required free-form curve are used as the input and a nonlinear optimization process is used to fit a NURBS-snake on the projected data in these images. Control points and weights are treated as decision variables in the optimization process. The Levenberg–Marquardt optimization algorithm is used to optimize the parameters of the NURBS-snake, where the initial solution is obtained using a two-step procedure. This makes the convergence faster and it stabilizes the optimization procedure. The curve reconstruction problem is reduced to a problem that comprises stereo reconstruction of the control points and computation of the corresponding weights. Several experiments were conducted to evaluate the performance of the proposed algorithm and comparisons were made with other existing approaches.

@&#INTRODUCTION@&#
Table 1Symbols and their meaning in the present study.RomanCNon-uniform rational B-spline curve in 3D spaceuIndependent variable of basis functionsBNormalized B-spline basis functionPControl points in 3D spaceWWeight corresponding to the 3D control pointkDegree of B-spline basis functionN+1Total number of control pointsRRational B-spline basis function in 3D spacecNon-uniform rational B-spline curve in 2D spacepControl points in 2D spacewWeight corresponding to the 2D control pointrRational B-spline basis function in 2D spaceEintInternal energy of planar NURBS curve c(u)∂∂u,∂2∂u2,∂3∂u3First, second, and third order partial derivatives with respect to parameter uEextExternal energy of planar NURBS curve c(u)px,py(x,y) coordinate of 2D control point(x′,y′)Unorganized data pointnTotal number of unorganized data pointstDegree of derivativeQResidual functiondUnorganized data pointsfResidual vectorJJacobian matrixmNumber of iterationsΔpIncrement of parameter−J(p)TQNegative of gradient vectorcsx,csyValue of 2D NURBS curve along x and y axes at each parameter valuepx,pyHomogeneous vector of 2D control points along x and y axesDx,DyDiagonal matrices containing the values of 2D NURBS curve along x and y axesM(N+1)×(N+1) symmetric and nonnegative matrixbBinormal vectorTL,TRLeft and right projection matricesFRLFundamental matrixGreek symbolsξKnotζKnot vectorα, β, γ, ηConstant parametersλDamping factorκCurvature functionκmaxMaximum curvature of 2D NURBS curve c(u)ςConstant parameterThe three-dimensional (3D) reconstruction of a space curve from its arbitrary perspective images is a core problem in computer vision. Many algorithms have been proposed for the 3D reconstruction of point features, where the scene is represented by a point cloud (Piegel, 1991; Flöry, 2009; Tomasi, 1992). However, model-based approaches that rely on the reconstruction of basic shapes such as lines, circles, and ellipses are more effective for understanding a 3D scene (Hartley, 1994; Piegel, 1991). The main reasons for using these primitive shapes are their availability and easy detection in images. The property of shape invariance under perspective projection makes the process of 3D reconstruction unambiguous for these primitive shapes. However, free-form curves and many complex objects cannot be represented easily using an analytical form, which makes the reconstruction of free-form curves and complex objects more difficult.The Non-Uniform Rational B-Spline (NURBS) is a well-known mathematical technique, which addresses the problems of free-form shape representation (Farin, 1992; Piegel, 1991). NURBS has several properties that make it a suitable candidate for representing any shape or structure in two-dimensional (2D) and 3D geometry. With NURBS, the same representation can be used for 2D and 3D cases. Moreover, it can be determined completely by its control points in 2D and 3D cases. This implies that the problem of curve reconstruction in a 3D space may be treated as the reconstruction of a sparse set of points (i.e., control points). In Terzopoulos and Qin (1994), a new generalization of NURBS was proposed called dynamic NURBS (D-NURBS). The D-NURBS model is governed by dynamic differential equations, where it evolves the control points and weights continuously in response to the applied force when integrated numerically over a time interval.The problem of 3D reconstruction involves finding a curve in space, where its projection fits the given data in two images with the minimum error. To achieve this, we require a correspondence between the data in the left and right images, which is called stereo matching. An energy minimization-based spline ‘snake’ is quite useful for establishing this correspondence (Kass et al., 1988; Menet et al., 1990; Wang and Cohen, 1994). Basically, the shape of the snake is controlled by internal and external forces. An energy function defined by a linear combination of these forces is then minimized iteratively by taking a user-specified initial estimate (initial configuration). The internal energy describes the continuity of the required curve, which is determined in terms of its first and second order derivatives. The external energy is based on the positional error between two curves.In previous studies, different algorithms related to the snake model were proposed that employed various strategies to facilitate the stabilization and faster convergence (Amini et al., 1990; Lam and Yan, 1994; Williams and Shah, 1992; Xu et al., 1994) of the associated iterative energy minimization process. To overcome the limitations of the snake model, an improved version called B-snake was proposed in Flickner et al. (1994), Menet et al. (1990), Wang et al. (1996). In B-snake approaches, a parametric B-spline representation is used rather than the standard spline-based representation, which facilitates local control of the shape of the curve by regulating related control points.A new version of B-snake called NURBS-snake was presented in Meegama and Rajapakse (2003). The NURBS-snake provides more flexibility than the B-snake model because the weight parameters can adapt to local curvature changes. Moreover, in Cai et al. (2011), a snake-based curve deformation model was proposed to reconstruct space curves, where the necessity of matching was relaxed. However, the order of the NURBS-snake, the weights, and the knot sequence is assumed to be fixed, although this limitation was relaxed in Xie et al. (2012), where a new method was proposed that employed iterative optimization. A comparison of the proposed method with other relevant approaches in terms of the objectives and implementation details is shown in Table 2.In this study, we use an optimization approach based on the NURBS-snake model to reconstruct free-form space curves from their stereo views. The proposed algorithm comprises the following major steps.(1)An energy minimization-driven NURBS-snake is used to approximate the data points in both perspective views (stereo images).NURBS-snake fitting is used to initialize the parameters in both views.The Levenberg–Marquardt algorithm is used to optimize the parameters (control points).An epipolar constraint is used in the nondegenerate case (stereo matching).Stereo triangulation is used to recover the control points in space and to compute the weights.In the proposed NURBS-snake model, the weight parameters control the flexibility of the curve at each control point. During the optimization process, the weight of each control point is refined according to the curvature of the relevant spline segment. This modification of weight parameters smooths the NURBS-snake rather than enforcing it by adding extra control points. To initialize the parameters during the optimization process, we use a method called NURBS-snake fitting, where a two-step process is used to fit the NURBS-snake points. The weights of the NURBS-snake are obtained by solving a quadratic programming problem in the first step and the control points are then obtained by solving a system of simultaneous linear equations in the second step. These control points and weights are used as the initial solution, which is refined later during the iterative process. This step makes the NURBS-snake converge faster and it improves the accuracy of 3D reconstruction.The NURBS curves (Farin, 1992) are used to represent basic shapes as well as free-form shapes. They are generalizations of the B-spline and Bezier curves (Piegel, 1991). A rational B-spline curveC(u):R3→Ris given as:(1)C(u)=∑i=1N+1PiRi,k(u),wherePirepresents the ith control point of the space curveC(u). The rational B-spline basis function is given as(2)Ri,k(u)=WiBi,k(u)∑i=1N+1WiBi,k(u),i=1,⋯,N+1,whereWiis the weight that corresponds to the control pointPiandBi,k(u)is the normalized B-spline basis function of degree k, which is defined recursively as follows:(3)Bi,1={1ifξi≤u<ξi+1,0otherwiseand(4)Bi,k(u)=u−ξiξi+k−ξiBi,k−1(u)+ξi+k+1−uξi+k+1−ξi+1Bi+1,k−1(u),whereξidenotes the knot that forms a knot sequenceζ={ξ1,ξ2,…,ξN+k+1}withξi≤ξi+1and u denotes the independent variable of the basis functions. In some cases, these curves are usually called NURBS when the knot sequence is not restricted to being uniformly spaced. The NURBS curves are shape invariant under the perspective projections. This is the main motivation for using NURBS in the 3D reconstruction of free-form curves. Moreover, the NURBS can provide exact representations of all conic sections and all integral B-splines. This makes the NURBS more powerful and it can be used to assign a larger variety of shapes. The perspective transformation of the NURBS curve may be obtained based on the perspective transformation of the original control points after relevant changes in the corresponding weights, i.e.,c(u):R2→R, which is defined as(5)c(u)=∑i=1N+1piri,k(u),wherepiis the ith control point (in 2D) for the rational B-spline curve,ri,k(u)is the basis function defined as:(6)ri,k(u)=wiBi,k(u)∑i=1N+1wiBi,k(u),i=1,⋯,N+1wherewiis the weight associated withpiin the planar NURBS curve (Eq. (5)).Our main objective is to solve the problem stated as follows: given a set of unorganized data points in two image planes, compute the 3D NURBS curve for which the projections approximate the set of data points correctly. This problem may be formulated as a nonlinear optimization problem. To achieve this, we employ an energy minimization method based on the snake model (Kass et al., 1988). The internal energy of the 2D NURBS curve (Eq. (5)) is defined as:(7)Eint(c(u))=[α|∂c(u)∂u|2+β|∂2c(u)∂u2|2+γ|∂3c(u)∂u3|2],where α, β, andγ≥0are constants that need to be tuned before optimization. The local external energy of the 2D NURBS-snake can be defined as:(8)Eext(c(u))=∑j[(∑i=1N+1pixri,k(uj)−xj′)2+(∑i=1N+1piyri,k(uj)−yj′)2],where(xj′,yj′)denotes the jth unorganized data point in the corresponding image plane. A base curve (Ma and Kruth, 1995) is used to parameterize the unorganized data points. The base curve is usually created from a limited number of selected characteristic points from the data (including the two endpoints) and according to the local mapping property (Ma and Kruth, 1995). Each of the data points is allocated a location parameter by projecting or mapping all the points on this base curve. This parameterization technique is applicable to organized, unorganized, or randomly distributed points.The total energy for the NURBS-snake is written as:(9)ETotal(c(u))=∑uEint(c(u))+ηEext(c(u))=∑u[α|∂c(u)∂u|2+β|∂2c(u)∂u2|2+γ|∂3c(u)∂u3|2+ηEext(c(u))]=∑j[α(∑i=1N+1∂∂uj(piri,k(uj)))2+β(∑i=1N+1∂2∂uj2(piri,k(uj)))2+γ(∑i=1N+1∂3∂uj3(piri,k(uj)))2+ηEext(c(uj))]=∑j[α(∑i=1Npi(1)∂∂uj(ri,k(uj)))2+β(∑i=1N−1pi(2)∂2∂uj2(ri,k(uj)))2+γ(∑i=1N−2pi(3)∂3∂uj3(ri,k(uj)))2+ηEext(c(uj))],whereη≥0. The parameter u is discretized by the base curve (Ma and Kruth, 1995). The formulation of Eq. (9) is based on the discrete form of the energy functional, which is summed over all of the evaluated parameter values. The parameterpi(t)is described as (where t denotes the degree of derivative):(10)pi(t)={pi,t=0;k−tξi+k−t−ξi(pi+1t−1−pit−1),t≥0.We assume that the order and knots of the NURBS curve are fixed, thus we only optimize the control points to reconstruct the 3D NURBS curve. However, the weights are not the subject of the optimization, but we can still modify the weights to obtain satisfactory results. To optimize the parameters, we use the Levenberg–Marquardt (LM) algorithm (Ranganathan, 2004).The LM algorithm (Gavin, 2013; Marquardt, 1963; Ranganathan, 2004) is an iterative optimization technique, which combines the steepest descent and Gauss–Newton methods.Consider an optimization problem where we need to optimizef(p)as:(11)f(p)=∑j=1nQj′2(p),whereQj′2=Eint+Qj2andQjis referred to as the residual(12)Qj=(cj−dj),wherecjis the jth point of the planar NURBS curve anddjdenotes the jth unorganized data point. Here, f is represented as a nonlinear function of the model parameter vectorp=[p1,p2,…pN+1]. The objective function is minimized about p to achieve the best approximation of the NURBS-snake on the projected data points. At the mth iteration, the incrementΔpmof parameter p is given as:(13){J(pm)TJ(pm)+λI}Δpm=−[α|∂c(u)∂u|2+β|∂2c(u)∂u2|2+γ|∂3c(u)∂u3|2+J(pm)TQ],whereJ(p)is the Jacobian matrix defined as:(14)J(p)=[∂Qj∂pi],i=1,⋯,N+1,j=1,⋯,n.−J(pm)TQis the gradient vector and λ is a constant called the damping factor, which is adjusted in each step. Parameter p is updated as:(15)pm+1=pm+Δpm.The implementation of the LM algorithm involves the following steps.(1)Start with an initial best estimate ofp1.Select the value of λ.At the mth iteration, calculatef(pm).Solve Eq. (13) and Eq. (15) to evaluatepm+1, and then calculatef(pm+1).Iff(pm+1)≥f(pm), increase the value of λ and proceed to step 3.Iff(pm+1)<f(pm), decrease the value of λ, update the starting solution, and proceed to step 4.The convergence of the LM algorithm (Gavin, 2013) is achieved by selecting one of the following criteria:•gradient convergence,max⁡|JT(p−{p+Δp})|<ϵ1;parameter convergence,max⁡|Δpp|<ϵ2; orterminate when the iteration count exceeds the user-specified maximum number of iterations;Section 3.1 and Section 3.2 describe the estimation of the initial control points and their corresponding weight adjustments in 2D views that represent the projection of a 3D curve. The formulae used to compute the 3D control points and their corresponding weights from the 2D NURBS curves are explained in Section 3.3.In previous studies, the least squares method (Ma and Kruth, 1995) was used widely for fitting the NURBS curve. The main steps employed in the least squares-based techniques are the parameterization of measured points and knots, followed by minimization of the residual error. The problem of fitting a B-spline from point clouds in a plane and space was studied in Flöry (2009). Various nonlinear optimization techniques such as quadratic programming (Luenberger, 1973) and evolutionary computation approaches (Zhang et al., 2009) have been used in different studies. These nonlinear optimization approaches are good in terms of their accuracy, but they require more computational time. Techniques have been proposed based on the interpolation of given data (Farin, 1992; Piegel, 1991). However, in the case of NURBS, these approaches are not suitable for practical applications due to the requirement for weight vectors. A two-step linear approach (Ma and Kruth, 1998) was proposed for NURBS fitting by calculating the weights and control points separately during a linear optimization process. The method employed in the present study was inspired by the two-step linear approach. We decompose the coefficient matrix (containing B-spline function values) to obtain a homogeneous system of linear equations for an unknown weight vector. After computing the weights, we solve another system of linear equations to compute the control points.As mentioned earlier, the 2D NURBS curve withN+1control points is defined as follows.(16)c(u)=∑i=1N+1wipiBi,k(u)∑i=1N+1wiBi,k(u)The evaluation of this NURBS curve at n parameter values{u1,u2,…,un}yields n equations:(17)cj=∑i=1N+1wipiBi,k(uj)∑i=1N+1wiBi,k(uj),j=1,⋯,nwherecj=c(uj),j=1,⋯,n. Asc(u):R2→R, each of these equations denotes a set of two separate observations. By moving the denominator to the other side and switching the left and right sides, Eq. (17) is reduced to the following form.(18)cjx∑i=1N+1wiBi,k(uj)=∑i=1N+1wipixBi,k(uj)(19)cjy∑i=1N+1wiBi,k(uj)=∑i=1N+1wipiyBi,k(uj)Now, we define the vectorspx=[p1xw1,…,pN+1xwN+1]Tandpy=[p1yw1,…,pN+1ywN+1]Tin homogeneous form. The equations above can be written in a compact form as:(20)[B0−DxB0B−DyB].[pxpyw]=[0],where B is the matrix of B-spline basis functions and(21)Dx=diag{c1x,c2x,…,cnx}Dy=diag{c1y,c2y,…,cny}.These equations are fairly large, but it is possible to control the system of equations such that the weights can be calculated separately by solving another subsystem. After some manipulation, we may write Eq. (20) as:(22)[BTB0−BTDxB0BTB−BTDyB00M].[pxpyw]=[0],whereM=Mx+Myis an(N+1)×(N+1)symmetric, nonnegative matrix and(23)Mx=BTDx2B−(BTDxB)(BTB)−1(BTDxB)My=BTDy2B−(BTDyB)(BTB)−1(BTDyB).Here, M depends on the data points and the B-spline basis functions. The block matrix in Eq. (22) can be decomposed into two subsystems: one for the control points and another for the weights. The third row of the system given in Eq. (22) is used to identify the weights as:(24)M.w=0.The use of the least squares norm to solve Eq. (24) was suggested in Ma and Kruth (1998). However, it is usually desirable to only have positive weights; otherwise, singularities may arise in the resulting curve. Furthermore, because we do not know the geometrical properties of M, it is not clear why the least squares norm is better than other approaches, as described in Ma and Kruth (1998). In the present study, we employed an algorithm based on quadratic programming (Boot, 1964; Luenberger, 1973) to find a set of positive weights. Quadratic programming is a method for solving minimization problems with linear constraints and a quadratic objective function.Using quadratic programming, a set of positive weights can be obtained by minimizing‖M.w‖22subject towi>0. In a quadratic programming problem, the minimization problem takes the form:(25)MinimizewTMTMwsubject tow>0.After the weights are computed by solving the above quadratic programming problem, the control points can be obtained from Eq. (20) by substituting the value of w. Thus, we use this method to obtain the initial control points and the corresponding weights for the NURBS curves in both of the image planes.Because 3D reconstruction is an inverse problem, a small error in the parameterization step may lead to a large error in the final 3D reconstructed curve. Thus, the unorganized input data are parameterized to facilitate the NURBS-snake fitting. We also present an analysis that shows the effect of the initial parameterization of the 2D data points on the estimation of the 2D control points. A base curve (Ma and Kruth, 1995) is used for parameterization, which is generated by a fitting process. The construction of the base curve uses all of the data points rather than selected points. The parameterization is achieved by projecting the data points onto the fitted base curve. The parameters of the projected points are used as the parameters of the data points. This technique is more robust and it yields accurate results in the fitting process. Fig. 1depicts the results after considering errors in the parameterization step, which shows that small errors in the parameterization step do not affect the positions of the 2D control points and thus the parameterization procedure is less sensitive to a small amount of noise.One of the most important properties in differential geometry is the curvature, which describes the local properties (edges, corners, etc.) of the curve. The curvature also relates the first and second order derivatives of the curve. In a parametric representation, the curvatureκ(u)of a curve is computed by the formula:κ(u)=(∂c(u)∂u×∂2c(u)∂u2).b→|∂3c(u)∂u3|,where ‘×’ denotes the cross product andb→represents the binormal vector of the curve. An iterative scheme described in Meegama and Rajapakse (2003) for computing the curvature of the NURBS-snake is used in this study and the weights are modified accordingly. These weights are used to control the shape of a local segmentu∈[ξi,ξi+k+1)of the NURBS-snake. If the weight is closer to zero, then the segment of the NURBS-snake is distant from the respective control point, and vice versa.Letpibe the position of a control point with corresponding weightwiandκ(c(u))denotes the curvature at a point ofc(u). If the maximum curvature,κmax, within the spline segmentc(u),u∈[ξi,ξi+k+1)exceeds the average curvature along the NURBS curve, then the weight of the control pointpiis updated as:(26)winew=wi+ςκmaxκ(u),where the parameter ς controls the amount of attraction of the curve towards the control point andκ(u)is the global maximum curvature of the NURBS-snake.Let(piL,wiL)and(piR,wiR)be the pairs of control points and their corresponding weights in the left and the right image planes, respectively. We can reconstruct the required control points of the 3D NURBS curve,Pi, by triangulating (Kumar et al., 2009; Sukavanam et al., 2007)piLandpiR. The weightWiassociated withPion the 3D NURBS curve is calculated as:(27)Wi=wiL[T3L[Pi1]T]−1,whereT3Lis the third row of the projection matrixTL. In nondegenerate cases, the epipolar constraint on the control points of the stereo pair,piLandpiR, can be derived in the form:(28)[piR1]TFRL[piL1]=0,whereFRLis the fundamental matrix (Xiao and Li, 2005) of the stereo camera geometry, which can be determined using the left and right projection matricesTLandTR, respectively.The overall algorithm for reconstructing the space curve is summarized in Algorithm 1(Flowchart Fig. 2).

@&#CONCLUSIONS@&#
In this study, we proposed a method for reconstructing free-form space curves from their perspective projections using a NURBS-snake model. A nonlinear optimization problem is formulated to approximate the data using the NURBS-snake in the perspective images. We evaluated the performance of the proposed method based on synthetic and real data. We also compared the proposed method and triangulation-based approaches in terms of various types of error. We conclude that the proposed method performs better than the traditional point-based reconstruction approach with noisy images. We also found that the proposed NURBS-snake fitting process converges faster. Thus, the whole curve can be reconstructed accurately simply by performing triangulation based on the control points of the NURBS-snake in the two image planes.