@&#MAIN-TITLE@&#
A study on fuzzy clustering for magnetic resonance brain image segmentation using soft computing approaches

@&#HIGHLIGHTS@&#
A novel hybrid GA–BFO–FCM algorithm for MR brain image segmentation is presented.Optimal boundary point detection (OBPD) method using GA–BFO is investigated.Inbuilt constraints and repair mechanism is incorporated in our method.Reformulation of the objective function is well suited for optimization.Improved segmentation results are obtained. Our method is robust for noisy images.

@&#KEYPHRASES@&#
Fuzzy C-means (FCM) clustering,K-means clustering,Genetic algorithm (GA),Particle swarm optimization (PSO),Bacteria foraging optimization (BFO),

@&#ABSTRACT@&#
This paper presents a novel idea of intracranial segmentation of magnetic resonance (MR) brain image using pixel intensity values by optimum boundary point detection (OBPD) method. The newly proposed (OBPD) method consists of three steps. Firstly, the brain only portion is extracted from the whole MR brain image. The brain only portion mainly contains three regions–gray matter (GM), white matter (WM) and cerebrospinal fluid (CSF). We need two boundary points to divide the brain pixels into three regions on the basis of their intensity. Secondly, the optimum boundary points are obtained using the newly proposed hybrid GA–BFO algorithm to compute final cluster centres of FCM method. For a comparison, other soft computing techniques GA, PSO and BFO are also used. Finally, FCM algorithm is executed only once to obtain the membership matrix. The brain image is then segmented using this final membership matrix. The key to our success is that we have proposed a technique where the final cluster centres for FCM are obtained using OBPD method. In addition, reformulated objective function for optimization is used. Initial values of boundary points are constrained to be in a range determined from the brain dataset. The boundary points violating imposed constraints are repaired. This method is validated by using simulated T1-weighted MR brain images from IBSR database with manual segmentation results. Further, we have used MR brain images from the Brainweb database with additional noise levels to validate the robustness of our proposed method. It is observed that our proposed method significantly improves segmentation results as compared to other methods.

@&#INTRODUCTION@&#
Image segmentation has been a very critical and important stage in any image processing application. It deals with dividing the pixels in an image into groups or regions having similar features or characteristics for effective object identification. The segmentation of magnetic resonance (MR) brain image has got significant focus in the field of biomedical image processing. Segmentation of MR brain image has got wide application in the field of bio-medical analysis, such as identification of tumours, classification of tissues and blood cells, multi modal registration [1] etc. There are various segmentation techniques proposed for MR brain image like thresholding [2], edge based detection [3] and region growing [4].Thresholding techniques are effectively used when the histograms of the objects and background are clearly identifiable. But for brain image, these techniques give the inaccurate segmentation result as distribution of pixels in brain image is very complex. Edge based methods rely heavily on detection of boundaries in the image. It is observed in the brain image that gray level distribution of pixels of gray matter (GM), white matter (WM) and cerebrospinal fluid (CSF) result in incorrect detection of boundary. Region growing techniques use the homogeneity and connectivity criteria for segmentation. It is not effectively used for brain image segmentation as the brain image does not contain well defined regions. The above methods are found effective for relatively simple images.So one of the efficient techniques used for complex brain image segmentation is clustering. It classifies the pixels into larger groups depending on certain criteria. Again, several types of clustering methods have been discussed in literature like Expectation–maximization [5], hard C-means, K-means and fuzzy clustering techniques [6]. Among fuzzy clustering techniques, fuzzy C-means (FCM) is the most widely used technique [7,8]. It aims at minimizing an objective function according to some criteria. It permits one data point to belong to more than one cluster defined by a membership matrix. But the random selection of centroids makes the technique fall into local optimum. To overcome this problem, soft computing approaches like genetic algorithm (GA) [9–11], Particle swarm optimization (PSO) [12], ant colony optimization (ACO) [13] etc. have been applied to improve FCM. Castillo et al. [14] presented optimization of the FCM algorithm by using evolutionary methods. They used GA and PSO only. They used it to find the optimal number of clusters and the weight exponent for different types of synthetic datasets. They emphasized on cluster validation. Hruschka et al. [15] presented a survey of evolutionary algorithms for clustering. They emphasized on partition algorithms that focused on hard clustering of data. The survey did not use any particular evolutionary method, but focused on advanced topics like multi-objective and ensemble based evolutionary clustering. Then a taxonomy that highlights on some very important aspects of evolutionary clustering was presented at the end.Mukhopadhyay and Maulik [16] proposed a multiobjective real coded genetic fuzzy clustering scheme for the segmentation of multispectral MR images of the human brain. Their technique is able to determine the number of clusters along with clustering results. They emphasized on including the spatial information for improved segmentation result.All the above mentioned approaches emphasize on selecting a random initial cluster centre for FCM. Then evolutionary computing techniques are used to obtain optimum cluster centroids. FCM is then iteratively applied to obtain a final membership matrix for segmentation. However, in this paper, a new strategy for intracranial (also coined as brain extraction) segmentation of MR brain image using hybridized fuzzy C-means clustering technique is proposed. Instead of randomly selecting centroids of clusters and optimizing them, we have used OBPD method. We first determine the number of boundary points from the dataset to divide the region into required number of clusters. These boundary points are optimized using a new hybrid GA–BFO technique. Other soft computing approaches GA, PSO and BFO are also used for a comparison. We have also used a classical method coined as K-means clustering for a comparison. Final centroids of the clusters are then computed. These final centroids are used to obtain the fuzzy membership matrix by executing FCM once only. To the best of our knowledge, hybrid GA–BFO has not been used so far for MR brain image segmentation. This has motivated us to use the proposed technique.It has already been reported in the literature that a brain image mainly consists of three regions: gray matter (GM), white matter (WM) and cerebrospinal fluid (CSF) [9,17]. The gray level distribution is used to identify these three regions. For accurate identification, ideal clustering is needed.Two optimum boundary points are obtained from the gray level distribution to divide the brain image into three regions or clusters. Initial values of the boundary points are constrained to be in a range determined from the brain dataset. The proposed study aims at optimizing these boundary points by using hybrid GA–BFO technique to select final cluster centres for FCM algorithm. The objective function used is reformulated in terms of cluster centres only. Using the final cluster centres, the proposed hybrid FCM algorithm is executed only once to obtain the fuzzy membership matrix. Segmentation is then done using this fuzzy membership matrix. Several standard brain images (simulated T1-weighted) from the IBSR database with manual segmentation results are considered in the experiment. The results obtained are compared using various performance parameters. The segmentation performance parameters are also calculated for different noise levels. For the experiment, we consider brain images from Brainweb database with additional noise levels: 1%, 3%, 5%, 7% and 9%. Results are presented in ‘Results and discussions’ section to validate the robustness of our proposed method.The rest of the paper is organized as follows. ‘FCM and soft computing methods’ section presents a brief introduction about FCM technique and soft computing approaches i.e. GA, PSO, BFO and GA–BFO. ‘Proposed methodology’ section explains the proposed methodology. ‘Results and discussions’ section presents the results and discussions. The last section is the conclusion.Fuzzy clustering allows objects to belong to more than one cluster by specifying a membership matrix with different degree for each cluster. It is a local optimum search technique. In this algorithm, a set of n objects x={x1, x2, …, xn} each having d dimensions are divided into c number of clusters of similar features. The features could be the position or intensity of a pixel in an image. The fuzzy clusters of objects are characterized by a fuzzy membership matrix with n rows and c columns. The set of all constrained fuzzy matrices of size n×c is defined as [8]:(1)Mf=μ∈ℜn×c|∑j=1cμij=1,0<∑i=1nμij<n,μij∈[0,1]for 1≤i≤n; 1≤j≤c.The condition used to define good clusters for FCM is to minimize the FCM function [8]:(2)Jm(μ,z)=∑j=1c∑i=1n(μij)mdij2(zj,xi),where μ is the fuzzy membership matrix, 1≤m≤∞ is a scalar weighting exponent which controls the fuzziness. The larger is its value, fuzzier is the partition. An analysis on the weighting exponent is found in Ref. [18]. When the value of m is close to 1, FCM approaches hard c-means algorithm. When m approaches infinity, the mass centre of the data set is the only solution of FCM [18]. Here the value of m is set to 2. It is observed that this value of m is suitable for most MR brain images, as it yield best results [19]. Note that z=[z1, z2, …, zc] is a matrix of cluster centres, and dij(zj, xi) is a measure of Euclidean distance from xito jth cluster centre zj. The algorithm used in this paper is presented below:AlgorithmStep 1: Generate brain portion only data set x={x1, x2, …, xn} of MR brain images.Step 2: Set various parameters (like the scalar weighting exponent m) and the termination condition i.e. the maximum number of iterations.Step 3: Select the number of clusters c.Step 4: Get initial set of random cluster centres z=[z1, z2, …, zc].Step 5: Calculate Euclidean distance dij(zj, xi) for i=1, 2, …, n; j=1, 2, …, c.Step 6: Calculate membership matrix μijusing Eq. (3) as:(3)μij=1∑k=1c(dij/dik)2/m−1fori=1,2,…,n;j=1,2,…,cStep 7: Update the cluster centres zjusing the membership matrix μijby using Eq. (4) as:(4)zj=∑i=1nμijmxi∑i=1nμijmStep 8: If the termination condition is not met, go to step 5.In this paper, the parameters for FCM are set as given in Table 1. The algorithm is implemented using MATLAB. The pixels of the brain only portion are clustered using the cluster centres zjobtained after the termination condition is met. Segmentation of the brain image is done using the final membership matrix μij.It may be reiterated the fact that the brain portion mainly contains three regions WM, GM and CSF. The pixels in these regions have similar intensity values. So we need to group them according to their values. For this reason the gray values of the pixels in the brain image are taken as the basis for clustering. It is worthy to mention here that we need only two optimum boundary points to divide the pixels in the brain image into three regions. In this work, we use hybrid GA–BFO technique to obtain the optimal boundary points. The initial values of the boundary points are constrained to be in a range which is determined from the brain data set. These constraints are even checked inside the soft computing algorithms while updating their values. Here, we also suggest a repairing mechanism for constraint violation. In this connection, we introduce a new constrained optimization problem. When updated boundary points cross their lower or upper bounds, they are repaired by taking the old boundary values or replacing them with a newly generated random value within the bound. This step enhances the accuracy of a clustering because if the boundary points cross the bounds, then the pixels may be clustered in a wrong region. The idea is presented in Fig. 1.Let two boundary points be represented as [z1, z2]. The constraints are introduced such that LB1<z1<UB1 and LB2<z2<UB2. Here LB represents lower bound and UB represents upper bound. A value of z1 or z2 is checked for constraint violation and the repair is done as:(5)z1=z1if LB1<z1<UB1LB1+rand⋅(UB1−LB1)otherwise(6)z2=z2if LB2<z2<UB2LB2+rand⋅(UB2−LB2)otherwisewhere rand denotes random number. This helps in reducing the percentage of misclassification and increasing the accuracy in segmentation.The objective function for our study is reformulated as [20].(7)Fm(z)=∑j=1n∑i=1ηdij(1/(1−m))(1−m)where dijis the Euclidean distance from xjto ith cluster centre. Here xjis the feature vector of the brain image matrix x having a dimension of p×n. Note that n represents the number of feature vectors (pixel numbers in the brain image) and p represents the dimension of each feature vector. The fitness function (7) is different from Eq. (2) in the sense that its dependence on membership matrix is removed.The genetic algorithm (GA) is a global search technique that imitates the theory of biological evolution. It operates on the basic principle of survival of the fittest [21]. A set of chromosomes (or parents) represents a set of initial solutions called population. A new population (offspring) is evolved by taking solutions from the old population. The new population is selected according to their fitness values. The older population is discarded and a new population is evolved until some stopping criterion is reached. The entire process of GA–FCM is summarized as follows:1.A random population of N chromosomes (parents) is generated depending on the problem definition.The fitness value of each chromosome is calculated according to a predefined objective function.A new population (offspring) is evolved by following the steps given below until it is complete, i.e. the number of chromosomes is again same as in the beginning.a.Selection: two parent chromosomes are selected from the initial population depending on their fitness value (higher fitness value is usually preferred). Many selection techniques are described in the literature [17], the roulette wheel approach is usually adopted.Crossover: the parent chromosomes crossover to generate a new chromosome (offspring) using a pre-defined crossover probability.Mutation: at each position, some chromosomes are altered at random with a pre-defined mutation probability to facilitate GA with some local optimum searching ability.The new offspring is then placed in the new population. The whole process from step 2 is repeated until the stopping criterion is reached. The algorithm implemented in this paper is as follows:As stated before, segmentation of the brain image is achieved by using the pixel values. The minimum value MIN and maximum value MAX of the pixels are taken from the extracted brain only portion. Because the brain image contains three regions, two boundary points Z1 and Z2 are needed as shown in Fig. 1. The values of Z1 and Z2 are constrained to be in the range as defined by LB and UB, which represent the lower and upper bound for the boundary points respectively. These bounds are checked for constraint violation and repair using Eqs. (5) and (6). The fitness function as defined in Eq. (7) is used for optimization. Since only the cluster centres zjare used in GA based clustering, fitness function (7) is used. Here we have implemented GA using the GA solver in the OPTIM toolbox of MATLAB. The parameter setting for GA–FCM is given in Table 1. The number of boundary points is represented by the dimension of the search space. A minimum value of Fmin Eq. (7) results in optimum boundary points. After getting the boundary points Z1 and Z2, the brain image is divided into three clusters or regions. Then the final three cluster centroids are calculated. Using these final cluster centroids, FCM algorithm is executed once only, to get the fuzzy membership matrix as defined in Eq. (3). Segmentation is then achieved by using this fuzzy membership matrix.Eberhart and Kennedy [22] proposed a population based evolutionary optimization technique called particle swarm optimization (PSO). It is based on the social behaviour of birds or fish while searching food. An individual is identified as a particle in PSO with a predefined location. The search space is identified by a dimension D which represents the search space of the problem or function. For each particle, an objective function is evaluated at its current location. The particle, then moves in the search space with a dynamically adjusted velocity according to its own experience and its neighbour's experience thereby moving to a new location. The process is continued until all the particles in the population have moved to their new locations. Finally, all the particles will move to a location where an optimum value of the objective function is achieved.Each particle in a population has a current location, a previous best location and a velocity. But the population has an overall best location. The current location is assumed a problem solution. The previous best location (i.e. location giving the best objective function value) is identified as a variable pbest. The overall best location (i.e. location giving the best objective function value by any particle in the population) is identified as a variable gbest. The current location is continuously updated and new solutions are obtained by evaluating the objective function. The current locations are modified by adding a dynamically adjusted velocity as given:(8)vt+1=w×vt+c1×rand×(pbest−xt)+c2×rand×(gbest−xt)(9)xt+1=xt+vt+1where c1 and c2 represent acceleration constant, rand is the random function, w is the inertia weight,vt+1is the updated velocity, xt+1 is the updated current location of a particle.It is compared with pbest and then pbest is updated. From the pbest values, gbest value is evaluated. Thus, in PSO at each step, a particle moves towards its pbest and gbest locations by updating its velocity.The algorithm of PSO–FCM implemented for fuzzy clustering is presented below:AlgorithmStep 1: Set the parameters of PSO, scalar weighting exponent m and stopping criteria as maximum number of iterations.Step 2: Generate a swarm with P particles. Initialize the position x of particles which represent the number of boundary points. Check for constraint violation and repair using Eqs. (5) and (6).Step 3: Initialize velocity, pbest and gbest for the particles.Step 4: Calculate the fitness value for each particle using Eq. (7).Step 5: Calculate pbest value for each particle and gbest value for the swarm.Step 6: Update the velocity of each particle using Eq. (8).Step 7: Update the position of each particle using Eq. (9) subject to the constraints defined in Eqs. (5) and (6).Step 8: If the termination condition is not met, go to step 4.In this paper, we have implemented the algorithm using MATLAB. The stopping criterion is the maximum number of iterations and is taken as 20. The parameter setting is given in Table 1. A minimum value of the fitness function in Eq. (7) gives us the final boundary points.Passino [23] proposed a nature inspired optimization algorithm based on the foraging technique of Escherichia coli bacteria. The bacteria searches for nutrients such that the energy obtained per unit time spent in searching is optimized or maximized. The movement of bacteria in this foraging technique has been discussed in four important steps [24].a)Chemotaxis: this step explains the movement of bacteria through swimming and tumbling. A bacterium may swim or tumble depending on the food concentration and environment condition. If the condition is favourable then it continues to swim for a pre-defined number of steps, otherwise it tumbles. These two movement processes continue for the entire lifetime of the bacterium.Swarming: during the process of foraging and maximizing the energy obtained per unit time spent, the bacterium which has searched the optimum path should attract the other bacteria by sending some signal. This will help the bacteria in concentrating themselves as a swarm and move towards the optimum location.Reproduction: this step shows the survival of the fittest character. The energy obtained per unit time spent for each bacterium is sorted and the bacterium having the highest values are declared not healthy and hence die. The remaining bacteria are considered healthy and fit to reproduce (split into two) and are kept in the same location making the bacteria count same. Here we have used the crossover and mutation operation of GA to improve the result.Elimination and dispersal: this step eliminates some bacteria due to some disturbances in the environment like increase in heat killing the bacteria. This may also disperse some bacteria to a new location by change in condition like flow of water.The algorithm for the above technique is presented as follows:Step 1: Set the parameters of GA–BFO and scalar weighting exponent m.Step 2: Initialize the position P of each bacterium which represents the boundary points. Check for constraint violation and repair using Eqs. (5) and (6).Step 3: Increment the elimination–dispersal loop l=l+1.Step 4: Increment the reproduction loop k=k+1.Step 5: Increment the chemotaxis loop j=j+1.For each bacterium i a chemotactic step is taken as follows.Calculate nutrient function J(i, j, k, l) for each bacterium.Save Jlast=J(i, j, k, l) as better value may be obtained in the future.Tumble: generate a random vector rand with each element in [−1, 1].Move: LetP(i,j+1,k,l)=P(i,j,k,l)+C(i)⁡·rand(i)randT(i)⋅rand(i)This operation results in a step of size C(i) in the direction of tumble for bacterium i.Calculate J(i, j+1, k, l)Swim:Initialize the counter for swim length=0.While counter less than the swimming length.Increment the counter.If J(i, j+1, k, l)<Jlast, let Jlast=J(i, j+1, k, l). Update the position P using the step size C(i) asP(i,j+1,k,l)=P(i,j+1,k,l)+C(i)⁡·rand(i)randT(i)⋅rand(i)and use this P to calculate the new J(i, j+1, k, l) as in step (f).Continue the above steps till counter equal the swimming length.go to the next bacterium (i+1) i.e. step 5b till all the bacteria are exhausted.Step 6: If j<number of chemotactic steps, continue the chemotaxis loop and go to step 5.Step 7: Reproduction:for given k, l and for each bacterium i letJhealthi=∑j=1Nc+1J(i,j,k,l)be the health of the bacteria i. Then sort the bacteria and the chemotactic parameter in ascending order of Jhealth.The bacteria with highest Jhealth values die and remaining bacteria with best values are treated as parent bacteria for the next generation. However, in GA–BFO the idea of crossover mechanism from GA is used to search nearby locations by positioning 50% of the bacteria randomly at different locations. We get some more missing nutrients through the application of this process. In fact, GA–BFO supplements crossover feature of GA to generate better fitness function values.Now two sets of parent bacteria are chosen and they crossover with a pre-defined crossover probability to get the offspring bacteria.Then the parent bacteria and the newly generated offspring bacteria are appended to form the original number of bacteria for the next generation.A mutation of 1% is carried out to improvise results.Step 8: If k<number of reproduction loop, continue the reproduction loop and go to step 4.Step 9: Elimination – dispersal:For a given probability of elimination and dispersal ped, eliminate or disperse each bacterium while keeping the population of bacteria constant.Step 10: If l<elimination–dispersal loop, continue the elimination–dispersal loop and go to step 3. Otherwise end the process.In this paper, we have implemented GA–BFO algorithm with MATLAB. The parameter setting is given in Table 1. A minimum value of the fitness function in Eq. (7) gives the final boundary points. The brain image is then segmented using the fuzzy membership matrix as explained above.This section explains the proposed methodology of optimizing the fuzzy clustering algorithm for intracranial MR brain image segmentation by using optimum boundary point detection (OBPD). Fuzzy clustering techniques reported earlier fall into local minima because of the random selection of centroids and results in inaccurate segmentation results. Here, an attempt is made to overcome this problem using evolutionary computation (EC) approaches. The boundary points are optimized using various soft computing approaches. Final centroids are obtained followed by clustering using the fuzzy membership matrix as in the FCM. The MR brain image is then segmented using the cluster information. T1-weighted MR coronal slice taken from MRI data set of 20 normal subjects with manual segmentation results (ground truth) available in IBSR database are considered here to experiment [25].The MR brain image contains non-brain regions like skull, scalp, fat etc. [26]. So it is first necessary to remove the non-brain portion and extract the brain only portion from the MR image for segmentation. The extracted brain only portion mainly consists of white matter (WM), gray matter (GM) and cerebrospinal fluid (CSF). The proposed study aims at identifying these regions of the brain as accurately as possible. The gray level distribution is used to distinguish the brain portion from the background. The brain region and the non brain region are distinguished by using region features. Then the brain only region is extracted for clustering and segmentation. The process of extracting the brain only portion is presented as follows:1.A rough brain image portion is extracted from the MR brain image by using the features of the brain. Usually the brain portion is brighter than the skull and thus, it is preserved in the slice.The rough brain image is converted to binary image by using Otsu's thresholding method [26] which chooses the optimum threshold by maximizing between class variance. This removes objects from the background, if any. The binary image now contains a uniform background, scalp, skull and CSF and brain.The scalp is then separated from the background to produce a head mask by two-level connected component labelling and detecting the contour of the head.The inner dark region representing skull and CSF is then identified by using three stages labelling.The weakly connected region in the rough brain portion is then separated by a morphological operation (erosion) by a disc structuring element having a size depending upon the brain image slice. This step is very crucial. If the erosion is not done accurately, then it may end up removing some vital portion of the brain. This may result in an inaccurate detection of diseased portion of the brain.The final brain region is identified by using the largest connected component from the components of the eroded image.The final brain mask is generated by performing dilation on the identified brain region using the same structuring element. This process helps in recovering the lost pixels due to thresholding and erosion.The brain only portion is extracted by multiplying the original image with the final brain mask.The block diagram for methodology of extraction of brain only portion is presented in Fig. 2.T1-weighted MR coronal slice (slice no. 15 of Image 5_8) taken from MRI data set of 20 normal subjects is presented to display the process of extraction of brain only portion in Fig. 3.After getting the final brain portion from above steps, segmentation is done by using OBPD method.In this paper, the fitness function (7) does not consider any spatial dependence among the brain image matrix and each image pixel is considered as an individual point. The membership matrix as in Eq. (3) is determined by a measure of similarity between the pixel intensity and cluster centroids. The membership value is higher when the intensity values are closer to the cluster centroids.In our problem, the feature vectors xjrepresent the pixel intensity, its dimension p=1. Here ziis the ith cluster centre, η represents the number of clusters and m is the scalar weighting constant and is taken as 2. The optimized boundary points computed from Eq. (7) are used to find the final cluster centres in the three regions. Using these final cluster centres, GA–BFO–FCM (proposed method) is executed only once to obtain the fuzzy membership matrix of size n×c. Each term of the fuzzy membership matrix represents the extent of association of jth object with ith cluster centre. The objects nearest to the centroids of their cluster are assigned a high membership value and objects far from these centroids are assigned low membership value. So the pixels in the brain are segmented into three regions according to their membership value. The block diagram for the process of segmentation of brain image is presented in Fig. 4.The flow chart of the proposed method is presented in Fig. 5.

@&#CONCLUSIONS@&#
