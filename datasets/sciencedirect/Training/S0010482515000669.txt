@&#MAIN-TITLE@&#
Number of distinct sequence alignments with k-match and match sections

@&#HIGHLIGHTS@&#
Count sequence alignments with k-match.Count sequence alignments with match sections of size k.Count sequence alignments with match sections of size at least k.

@&#KEYPHRASES@&#
Combinatorics,Deletion,Insertion,k-match,Match section,Sequence alignment,

@&#ABSTRACT@&#
Background: Recent developments in sequence alignment have led to significant advances in our understanding of the functional, structural or evolutionary relationships among biological sequences. Great efforts have been made to count the total number of sequence alignments, but little attention has been paid to specific alignments associated with conserved patterns.Methods: We propose a new combinatorial method to count specific alignments. First, we represent a sequence alignment as a system of cells. Using combinatorial techniques and Stirling׳s formula, we then count the numbers of specific alignments with a k-match or match section of size k.Results: We developed three theorems related to different types of specific alignments. We found that the number of the alignments with match sections of at least k was less than that of k-match sections and the number of specific alignments was significantly lower than the results reported by Covington.Discussion: The presence of a large number of alignments makes a direct search for the optimal alignment unfeasible for long sequences, whereas our proposed method based on specific alignments decreases the search space by many times. This facilitates the development of a faster algorithm for performing sequence comparisons.

@&#INTRODUCTION@&#
Since the completion of the Human Genome Project, the development of sequencing technologies has improved the throughput of biological sequences by many times, and thus thousands of biological sequences are generated every day. However, these biological sequences do not increase our understanding of biology, so methods for analyzing these data are increasingly critical as the volume of biological sequence data increases. Sequence comparisons are fundamental operations in bioinformatics and many approaches have been proposed for comparing biological sequences, which can be categorized into two classes: alignment-based methods, where dynamic programming is used to evaluate all possible alignments and select the optimal solution with the highest score [1,2], and alignment-free methods, which measure the similarity between two biological sequences using statistical methods [3–14]. Some alignment-free methods deliver satisfactory performance [3–8], but they are still in the early stages of their development compared with alignment-based methods [9–14].An alignment of two sequences a and b should satisfy the following constraints: (1) all of the symbols in the alignment are in the same order as they appear in the sequences a and b; (2) a symbol from sequence a can be aligned with any symbol from sequence b; (3) a symbol can also be aligned with a blank “–”; and (4) two blanks are not allowed to align. If a symbol (residue) appears above or below another symbol in an alignment, this indicates that they have a common evolutionary ancestor. We denote them as an identity if they are exactly the same; otherwise, we denote them as a mutation. In this study, we denote both the identities and mutations as matches in an alignment. If a gap appears above or below a symbol, it is assumed that an evolutionary event has occurred, i.e., insertion or deletion.Many methods can be used to construct an alignment of two biological sequences. To find the optimal alignment, it is necessary to know the total number of distinct alignments that needs to be examined between two biological sequences [15–20]. Laquer studied the number of alignments for two sequences and proposed a general recursion related to the Stanton–Cowan number [21]. Griggs et al. studied the number of alignments for t sequences and proved that its exponential growth rate is(21/t−1)−t[22]. Waterman carefully considered the number of alignments of two sequences and found that they are overestimated [23]. To address this problem, he proposed a new recursion function with some boundary conditions, instead of using the Stanton–Cowan recursion. Using Stirling׳s formula, he also gave the asymptotic expressions of the recursive function, based on which we know that the direct examination of all alignments is impossible [23,24]. Recently, Covington divided all of the alignments of two sequences into three distinct sets: the largest set, the smallest set and the medium set. Using various distinctiveness criteria, the total number of specific alignments was counted for two sequences [25].It is well known that evolutionary innovation by mutation is important for adaptation, which ultimately facilitates the survival of all species. In order to highlight the contributions of mutations, their numbers should be a particular focus in an alignment. Moreover, the uninterrupted appearance of matches or a match section usually represents a conservative pattern in biological sequences, which is typically associated with structural and functional domains [26,27]. Therefore, some specific alignments with k-match or match sections of size k should be counted to decrease the size of the search space. In this study, we propose a new combinatorial method for counting specific alignments with k-match or match sections of size k. In order to obtain these counts, we introduce the concepts of cells and a system to represent a sequence alignment. We then use combinatorial techniques to count the specific alignments with k-match or match sections of size k, or at least k.The remainder of this paper is organized as follows. Section 2 presents the definitions of cells and a system, as well as the lemma and its corollary. Section 3 considers the number of specific alignments for two different sequences with k-match and match sections of size k, or at least k, as well as comparing their differences. Section 4 summarizes the key results of this study.For each alignment, there are two types of symbol: residue and gap. Let1indicate the presence of a residue and let0denote a gap. First, we define a cell[xy]as the composition of the sequence alignments. In particular,[11]denotes a match cell,[10]is a deletion cell and an insertion cell is[01]. If some cells are arranged in the horizontal direction, a system will be obtained, which corresponds to a sequence alignment. We use this system representation to help count the total number of sequence alignments.Lemma 1If we letf(n,m)=number of alignments of a sequence of length m with a sequence of length n, then(1)f(n,m)=f(n−1,m)+f(n−1,m−1)+f(n,m−1),with the initial conditionsf(n,0)=f(0,m)=f(0,0)=1.F(x,y)is an ordinary generating function off(n,m), which is defined as follows:(2)F(x,y)=∑n≥0∑m≥0f(n,m)xnym,with the initial conditionsf(n,0)=f(0,m)=f(0,0)=1, where(n,m)≠(0,0), and thus(3)F(x,y)=11−x−y−xy.According to Lemma 1(4)∑n≥1∑m≥1f(n,m)xnym=∑n≥1∑m≥1f(n−1,m)xnym+∑n≥1∑m≥1f(n−1,m−1)xnym+∑n≥1∑m≥1f(n,m−1)xnym.For the left-hand term, we have(5)∑n≥1∑m≥1f(n,m)xnym=∑n≥0∑m≥0f(n,m)xnym−∑m≥0f(0,m)x0ym−∑n≥0f(n,0)xny0+f(0,0)x0y0=F(x,y)−11−x−11−y+1.Since(6)∑n≥1∑m≥1f(n−1,m)xnym=x(∑n≥0∑m≥0f(n,m)xnym−∑n≥0f(n,0)xny0)=x(F(x,y)−11−x).(7)∑n≥1∑m≥1f(n−1,m−1)xnym=xy(∑n−1≥0∑m−1≥0f(n−1,m−1)xn−1ym−1)=xyF(x,y).(8)∑n≥1∑m≥1f(n,m−1)xnym=y(∑n≥0∑m≥0f(n,m)xnym−∑m≥0f(0,m)x0ym)=y(F(x,y)−11−y).By substituting Eq. (5)–(8) into Eq. (4), we obtain(9)F(x,y)=11−x−y−xy.□Theorem 1If we letf(n,m,k)=number of alignments of a sequence of length m with a sequence of length n with k-match, then1.(10)f(n,m,k)=f(n−1,m,k)+f(n−1,m−1,k−1)+f(n,m−1,k).(11)f(n,m,k)=(n+m−kk,n−k,m−k)where0≤k≤min(n,m).(12)f(n,m,k)~12π(r1+r2−1)k+1/2(1+r2r1−1)(r1−1)k+1/2(1+r1r2−1)(r2−1)k+1/21k(r1+r2−1).wherer1=n/k,r2=m/k,0<k≤min(n,m).(1) Using the system representation, all of the alignments with k-match can be divided into three groups. The alignments of the first group end with a deletion cell[10], where the total number isf(n−1,m,k). The alignments in the second group end with a match cell[11], and their total number isf(n−1,m−1,k−1). For the last group, the alignments end with an insertion cell[01], and their total number isf(n,m−1,k). Thus,f(n,m,k)=f(n−1,m,k)+f(n−1,m−1,k−1)+f(n,m−1,k).(2) Let L denote the length of an alignment of two biological sequences. Since there are only k matches in this alignment, it is easy to obtainL=n+m−k, and the numbers of match cells, deletion cells and insertion cells are k,n−kandm−k, respectively. Suppose that there are L columns in the system as L boxes, then an alignment can be regarded as a way of placing all of the cells into L boxes (there is no distinction between the cells and a box can simply be placed in any cell) and their correspondence is one to one. Thus, the number of alignments can be calculated by counting the number of ways of placing all the cells into L boxes. First, there are(n+m−kk)ways to place k match cells into L boxes, and thus the number of ways to placen−kdeletion cells is(n+m−2kn−k). After placing the match and deletion cells, the boxes are decided for the insertion cells. According to the multiplication principle, we obtainf(n,m,k)=(n+m−kk)(n+m−2kn−k)=(n+m−kk,n−k,m−k)where0≤k≤min(n,m).(3)(13)f(n,m,k)=(n+m−kk,n−k,m−k)=(n+m−k)!k!(n−k)!(m−k)!.By Stirling׳s formula [22], we have(14)(n+m−k)!~2π(n+m−k)n+m−k+1/2e−(n+m−k).(15)k!~2π(k)k+1/2e−k.(16)(n−k)!~2π(n−k)n−k+1/2e−(n−k).(17)(m−k)!~2π(m−k)m−k+1/2e−(m−).If we substitute the results above intof(n,m,k), then(18)f(n,m,k)~2π(n+m−k)n+m−k+1/2e−(n+m−k)(2π)3(k)k+1/2e−k(n−k)n−k+1/2e−(n−k))(m−k)m−k+1/2e−(m−k).If we let(19)r1=nk,r2=mk(k≠0),thenf(n,m,k)~12π(r1+r2−1)k+1/2(1+r2r1−1)(r1−1)k+1/2×(1+r1r2−1)(r2−1)k+1/21k(r1+r2−1).Covington calculated the function of the number of alignments of a sequence of length m with a sequence of length n[25]. We provide another proof based on Theorem 1 and a generating function. If we letf′(n,m)=∑k=0min(n,m)(n+m−kk,n−k,m−k), then its generating function is(20)G(x,y)=∑n≥0∑m≥0f′(n,m)xnym.IfF(x,y)=G(x,y), the conclusion is obtained sinceG(x,y)=∑n≥0∑m≥0f′(n,m)xnym=∑n∑m∑k(n+m−kk,n−k,m−k)xnym=∑n∑m∑k(n+m−km)(mk)xnym=∑k∑m(mk)ymx−m+k∑n(n+m−km)xn+m−k=∑k∑m(mk)ymx−m+kxm(1−x)m+1=∑k(xy)k(1−x−y)k+1=11−x−y−xy.From the result above, it is interesting to note thatf′(n,m)is the number of the alignments of a sequence of length m with a sequence of length n.□If we letΨ(n,m,α)=number of alignments of a sequence of length m with a sequence of length n with α identities, then(21)Ψ(n,m,α)=Ψ(n−1,m,α)+Ψ(n−1,m−1,α−1)+Ψ(n−1,m−1,α)+Ψ(n,m−1,α).A match section should be considered more closely in an alignment than some single matches because it is typically associated with the structural and functional domains [26,27]. Therefore, we next examine specific alignments with match sections of size k, i.e., if a match appears in this type of alignment, then it must be in a match section of size k.Theorem 2If we letg(n,m,k)=number of alignments of a sequence of length m with a sequence of length n with match sections of size k, then1.(22)g(n,m,k)=∑t=0min([n/k],[m/k])(n+m−2tkn−tk)(n+m−2tk+1t)(23)g(n,m,k)~∑t=0min([n/k],[m/k])12πφ(r1r2)φ(r2r1)φ(r1+r2−t+1t)φ(tr1+r2−t+1)1r1+r2+11r1+r2,whereφ(x/y)=(1+x/y)y+1/2,r1=n−tk,r2=m−tk.If we suppose that there are t match sections of size k in an alignment of length L, then it is not difficult to determine that the numbers of sub-systems of match cells, deletion cells and insertion cells are t,n−tkandm−tk, respectively. In terms of the system representation, an alignment corresponds to an arrangement of these sub-systems, deletion cells and insertion cells, where their correspondence is one to one. First, there are(n+m−2tkn−tk)ways to order the deletion cells and insertion cells. After setting the deletion cells and insertion cells, we obtainn+m−2kt+1slots among them, and thus there are(n+m−2tk+1t)ways to place t sub-systems into these slots (there is no distinction among the sub-systems and a slot can be placed in at most one sub-system). By the multiplication principle, we obtaing(n,m,k)=∑t=0min([n/k],[m/k])(n+m−2tkn−tk)(n+m−2tk+1t)(24)g(n,m,k)=∑t=0min([n/k],[m/k])(n+m−2tkn−tk)(n+m−2tk+1t)=∑t=0min([n/k],[m/k])(n+m−2kt)!(n−kt)!(m−kt)!(n+m−2tk+1)!t!(n+m−2kt+1−t)!.By Stirling׳s formula [22], we have(25)(n+m−2kt)!~2π(n+m−2kt)n+m−2kt+1/2e−(n+m−2kt).(26)(n−kt)!~2π(n−tk)n−tk+1/2e−(n−kt).(27)(m−tk)!~2π(m−tk)m−tk+1/2e−(m−kt).(28)(n+m−2kt+1)!~2π(n+m−2kt+1)n+m−2kt+1+1/2e−(n+m−2kt+1).(29)t!~2π(t)t+1/2e−k.(30)(n+m−2kt−t+1)!~2π(n+m−2kt−t+1)n+m−2kt−t+1+1/2e−(n+m−2kt−t+1).By substituting the results above intog(n,m,k), we then obtain(31)g(n,m,k)~∑t=0min([n/k],[m/k])12π(m−ktn−kt+1)n−kt+1/2(n−ktm−kt+1)m−kt+1/2×(n+m+1t−2k)t+1/2(1+tn+m−2kt−t+1)n+m−2kt−t+3/2×1n+m−2kt1n+m−2kt+1.Let(32)φ(xy)=(1+xy)y+1/2,r1=n−tk,r2=m−tk,theng(n,m,k)~∑t=0min([n/k],[m/k])12πφ(r1r2)φ(r2r1)φ(r1+r2−t+1t)φ(tr1+r2−t+1)1r1+r2+11r1+r2.□Griggs et al. proposed an asymptotic expression of the number of specific alignments with match sections [22]. In this section, we present a new expression for these specific alignments. Note that their total number is no longer a simple recursion function, because one step will restrict the choice of the next step, especially when a match cell appears.In computer science, a search tree is a tree data structure that is used to represent specific values from some ordered set as the nodes, where an in-order traversal can be performed by visiting the nodes in ascending order of their values. When a reasonably balanced tree is given, a test for membership can be performed efficiently. Thus, we construct a search tree to count the total number of specific alignments with match sections of at least k. LetH(n,m,k)denote the number of the alignments of a sequence a of length m with a sequence b of length n with match sections of at least k. Fig. 1shows a search tree of the alignments between sequences a and b with match sections of at least k. All of the nodes and leaves in the search tree denote the number of specific alignments.Following the same method described in Section 3.1, we first cluster these particular alignments into three groups. The alignments of the first group end with a deletion cell[a(n)−]and their total number isH(n−1,m,k). The alignments in the last group end with an insertion cell[−b(m)]and their total number isH(n,m−1,k). For the second group, the alignments end with a match cell[a(n)b(m)], where their size is greater than or equal to k. Thus, this group comprises alignments with different match sections[a(n−k)a(n−k+1)⋯a(n)b(m−k)b(m−k+1)⋯b(m)],[a(n−k−1)a(n−k)⋯a(n)b(m−k−1)b(m−k)⋯b(m)],…. It is easy to determine that the largest size of the match sections between the sequences a and b ismin(n,m). For each type of alignment with match sections of at least k, we also divide them into two subgroups. For example, if we suppose that the size of the match section is t(min(n,m)≥t≥k), then the prefix of this match section should be[a(n−t−1)−]or[−b(m−t−1)], and the total number isH(n−t−1,m−t,t)orH(n−t,m−t−1,t). Thus,H(n,m,k)can be obtained by the following iterated function:(33)H(n,m,k)=H(n−1,m,k)+H(n,m−1,k)+∑t=kmin(n,m)(H(n−t−1,m−t,t)+H(n−t,m−t−1,t)).Theorem 3If we letH(n,m,k)=number of alignments of a sequence of length m with a sequence of length n with match sections of at least k, then(34)H(n,m,k)=∑t=kmin(n,m)(n+m−2tn−t)∑xkk+xk+1(k+1)+⋯+xll=t(n+m−2t+1xk,xk+1…xl.)If an alignment has t matches, the numbers of deletion cells and insertion cells aren−tandm−t, respectively, and the remaining cells are sub-systems of match cells with size at least k. Let ck,ck+1,…,cldenote these sub-systems with sizes from k to L, and their total appearances in the alignment are xk,xk+1,…,xl, wherexkk+xk+1(k+1)+⋯+xll=t. In terms of the system representation, an alignment can be regarded as an arrangement of these sub-systems, deletion cells and insertion cells, and their correspondence is one to one. Therefore, the total number in this specific alignment can be calculated by counting their arrangements. First, there are(n+m−2tn−t)ways to order the deletion cells and insertion cells. After setting the deletion cells and insertion cells, we obtainn+m−2t+1slots among them. Thus, we have(n+m−2t+1xk)ways to place xksub-systems ckinto these slots (there is no distinction among the sub-systems and a slot can be placed in at most one sub-system),(n+m−2t+1−xkxk+1)ways to placexk+1sub-systemsck+1,…, and finally we have(n+m−2t+1−xk−xk+1−⋯−xl−1xl)ways to order xlsub-systems cl. By the multiplication principle, we obtainH(n,m,k)=∑t=kmin(n,m)(n+m−2tn−t)∑xkk+xk+1(k+1)+⋯+xll=t(n+m−2t+1xk,xk+1…xl).Using combinatorial techniques and Stirling׳s formula, we counted different specific alignments with k-match and match sections of size k, or at least k. To obtain a better understanding of their differences, we calculated the number of specific alignments of the sequence a of length 10 with the sequences b of lengths ranging from 2 to 7 and with k ranging from 2 to 7. Table 1shows the number of specific alignments with k-match and with match sections of at least k.As expected, there were three clear trends: (1) the number of alignments increased rapidly as the sequence length increased, and thus a direct search for an optimal alignment is unfeasible, especially for long biological sequences; (2) it was interesting that the numbers of some specific alignments were equal, e.g.,f(10,6,6)=f(10,4,4),f(10,3,3)=f(10,7,7), andf(10,5,4)=f(10,7,6); (3) the number of alignments with match sections of at least k was significantly smaller than that for k-match.To further evaluate these specific alignments, we compared them with the results reported by Covington [25]. Covington counted three different types of specific alignments in the largest setA(n,m), the smallest seta(n,m)and the medium setA(n,m). Table 2shows the number of specific alignments obtained using the proposed method and the approach described by Covington [25]. Table 2 shows clearly that the number of specific alignments was significantly smaller using our proposed method compared with that reported by Covington [25].We also considered the potential applications of these specific alignments to reduce the search space when finding an optimal alignment. Suppose that there are two DNA sequencesS1=ACGGCCTGCof length 9 andS2=CCCTof length 4. According to the proposed theorems, we calculated the number of alignments(f(9,4)=5641), the alignments with 3-match(f(9,4,3)=840)and the alignments with match sections of size 3(g(9,4,3)=56). Using the Needleman–Wunsch global alignment algorithm, we found that their best matching alignment was as follows:ACGGCCTGC-C−−CCT−−Thus, for the proposed specific alignment method, we simply need to search 840 alignments with 3-match rather than all 5641 alignments to find the best matching global alignment. We can also search 56 alignments with match sections of size 3, instead of all 5641 alignments to find this optimal alignment. Therefore, the proposed specific alignment method decreases the search space required to find an optimal alignment by many times, thereby yielding a much faster alignment algorithm for performing sequence comparisons.

@&#CONCLUSIONS@&#
Sequence alignment is used widely in database searches, phylogenetic analysis and structure prediction. Despite the prevalence of alignment-based methods, it should be noted that they need to evaluate all of the alignments in the search space to find the optimal solution. Therefore, it is important to know how many alignments are there between two sequences, which may facilitate the design of more efficient alignment-based methods.In order to highlight the direction of evolution, we focused on obtaining particular alignments of two sequences and we counted their total number. We designed a system of cells to represent the structure of these alignments. First, we counted the number of specific alignments with k-match and provided another proof of the functionf(n,m)using a generating function. By considering the structural and functional motifs, we then counted the number of specific alignments with match sections of size k or at least k. To obtain a better understanding of their differences, we calculated different alignments for two specific DNA sequences and compared them with previously reported results. The results of this experiment indicated that the number of alignments increased rapidly as the length of the sequence increased, which means that a direct search for an optimal alignment is unfeasible. However, the number of specific alignments obtained using the proposed method was clearly less than that of the total alignments, which can significantly reduce the search space required to find the optimal alignment. In addition, the methods proposed in this study are applicable to all biological sequences (DNA and protein), as well as sequences of any other type.None declared.