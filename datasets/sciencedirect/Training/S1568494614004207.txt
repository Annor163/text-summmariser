@&#MAIN-TITLE@&#
Numerical treatment for boundary value problems of Pantograph functional differential equation using computational intelligence algorithms

@&#HIGHLIGHTS@&#
For the first time, stochastic numerical treatment of Pantograph functional differential equations is presented.Development of neural networks mathematical modeling in an unsupervised manner.Obtaining reliable and accurate solutions with trained neural networks optimized with hybrid computational intelligence algorithms.Validation of accuracy and convergence based on sufficient large number of simulations in term of various performance operators.Comparing the performance of artificial intelligence algorithms applied to various nonlinear boundary value problems.

@&#KEYPHRASES@&#
Artificial neural networks,Boundary value problem,Functional differential equations,Genetic algorithms,Pattern search technique,Simulating annealing,

@&#ABSTRACT@&#
In this study, stochastic computational techniques are developed for the solution of boundary value problems (BVPs) of second order Pantograph functional differential equation (PFDE) using artificial neural networks(ANNs), simulated annealing (SA), pattern search (PS), genetic algorithms (GAs), active-set algorithm (ASA) and their hybrid combinations. The strength of ANNs is exploited to construct a model for PFDE by defining as unsupervised error to approximate the solution. The accuracy of the model is subjected to find the appropriate design parameters of the networks. These optimal weights of the networks are trained using SA, PS and GAs, used as a tool for viable global search, hybridized with ASA for rapid local convergence. The designed schemes are evaluated by solving a numbers of BVPs for the PFDE and comparing with standard results. The reliability and effectiveness of the proposed solvers are investigated through Monte-Carlo simulations and their statistical analysis.

@&#INTRODUCTION@&#
The functional differential (FD) equations illustrate the properties of dynamical processes for which the motion is dependent on their prior history and anticipated future of the states of these processes. The importance and significance for such processes is well established branch of non-linear analysis. Stability for large scale systems described by FD equations include the model of large class of electrical networks developed for linearly lumped parameter elements and non-linear memory-less elements with RC lines [1,2], and the model for population dynamics [3,4]. There are a number of classical, as well as, modern applications addressed by FD equations including stability and buffrication of genetic regulatory networks models [5], identifiability analysis for linear time-delay systems [6], stability of non-linear quasi-monotone dynamical systems [7], direct adaptive control model for parameter information content of measurable signals [8], dynamic model of global exponential stability for Cellular Neural networks [9], models for quantization, time delays, stability of non-linear control systems [10], Non-linear SISO system model to control the tracking error of funnel with saturation [11], and modeling for synchronization of multi-perturbation delay chaotic systems using dual-stage impulsive control [12]. Further applications can be seen elsewhere [13,14].The well-known Pantograph equations belong to the class of FD equations with proportional delay. The origin of the name Pantograph belongs to Ockendon and Tayler [15] on their premier work for collection of current by the Pantograph head of an electric locomotive. Such type of systems arise in variety of applications of adaptive control, number theory, electrodynamics, astrophysics, nonlinear dynamical systems, probability theory on algebraic structure, quantum mechanics, cell growth, engineering, economics and etc. [15–19]. The research community has been attracted to investigate the solutions of such kind systems since its origin till to date.The existing numerical solvers for two-point boundary value problem associated with such second order systems are based on finite differences approach [20], Chebyshev polynomials method [21], variational techniques [22], Runge–Kutta–Nystrom methods [23], Homotopy perturbation method [24], spline functions [25], Richardson extrapolation approach [26], Adomian decomposition method [27,28], shooting techniques [29], and piecewise polynomial collocation method [30]. All these techniques have their own strengths and weaknesses over other solvers in terms of accuracy, convergence, reliability and robustness. As far as our literature survey is concerned only these type solvers are used for such system while stochastic solvers have not yet been applied in this area.Applied soft computing techniques based on neural networks, evolutionary computing and swarm intelligence methods have been used extensively for solving linear and non-linear systems associated with ordinary and partial differential equations [31–34]. For example, these methodologies provides reliable solution to Van der Pol nonlinear oscillators [35], Troesch's problem arises in plasma physics [36], Nonlinear singular systems based on Emden Fowler equations [37], first Painlevé transcendent [38], the nonlinear Schrodinger equations [39], fluid flow problems [40,41] and Nonlinear Bratu's problems arising in fuel ignition model of combustion theory [42], etc. Interested reader is referred to survey article [43], which summarized the research of numerous scholars mostly within the last decade to get a better knowledge about the present research scenario. Recently, these techniques are also extended to solve the systems based on linear and non-linear ordinary fractional differential equations as well [44,45]. For instant, practical applications of well-known fractional order systems linked with Riccati equation, as well as, Bagley–Torvik equations have also been solved effectively [46,47]. These are motivation factors for the authors to investigate and analyze the heuristic techniques to solve FD equations, particularly the boundary values problems of Pantograph type.In this paper, numerical solution for the two point boundary value problems (BVP) of Pantograph FD equations is presented using stochastic techniques. The generic form of second order FD equation can be given as below:(1)d2y(t)dt2=f(t,y(t),y(x(t))),t∈(0,T)y(0)=b,y(T)=cwhere T>0, (b, c)∈ φ and x: [0, T]→φ is such that 0≤x(t)≤T, for t ∈ [0,T]. The case x(t)=λt with λ the proportional factor, corresponds to second order Pantograph equation. To approximate the equation, feed-forward artificial neural networks (ANNs) are appropriately combined to define an objective function. The weights of these networks are optimized to minimize the objective function value with help of SA, PS, GAs, ASA, SA hybridized with ASA (SA-ASA), PS combined with ASA (PS-ASA), GA hybridized with ASA (GA-ASA) techniques. The accuracy, reliability, effectiveness of these schemes is investigated through Monte-Carlo simulations and their statistical analysis. Comprehensive studies of stochastic solvers are made on the basis of time of execution, convergence and level of accuracy achieved. The comparison of the proposed solutions is made with exact solutions, as well as, with recently developed numerical technique based on successive interpolation [48].Organization of the paper is as follows. In Mathematical Modelling Section, neural networks mathematical model for Pantograph FD equation is presented. In Learning Methodologies Section, introductory material is provided for solvers along with parameter setting used for training of weights of networks. In Numerical Experimentations Section, results are presented for numerical experimentation carried out with proposed schemes. In Comparative Analysis of Results Section, the discussion on comparative analyses and computational complexity of the proposed solvers is provided. Last section concludes our findings and also provides the future recommendations.In this section, mathematical modeling of Pantograph equation is presented. Linear combinations of feed-forward ANNs are used. Log-sigmoid is used as activation function in neural network architecture.In case of ordinary differential equations the following continuous mapping is applied to approximate solution y(t), and its derivatives as [49,50](2)yˆ(t)=∑i=1kαig(wit+βi),dndtnyˆ(t)=∑i=1kαidndtng(wit+βi),where α, β and w represent the unknown constants, called neural network weights, k is number of neurons and g is log-sigmoid activation function given as g(t)=1/(1−e−t).Mathematical model for FD equations can be formulated as an extension of the networks given in Eq. (2) by replacing independent variable t with a function x(t). Therefore, the approximate neural networks models for solution y(t) and its derivatives of the equation can be given in modified form as:(3)yˆ(x(t))=∑i=1kαig(wix(t)+βi),dndtnyˆ(x(t))=∑i=1kαidndtng(wix(t)+βi),Linear combination of the networks given in equations (3) can model the FD equations provided the unknown weights are properly optimized and it is named as FD equations neural (FDEN) network. The network given in equations (3) has a varied response by taking different relation of x(t). For example, by taking x(t)=t, the networks for FD Eq. (3) is similar to networks of ordinary differential equations given in (2). By taking x(t)=λt the networks provided in (3) are used to model Pantograph differential equations. Similarly, by using x(t)=t−τ, this network is used to model the τ time delay differential equations. The FDEN network architecture for one of the form of Eq. (1) using f=t+y(t)+y(x(t)) is shown graphically in Fig. 1.The objective function ɛ is given as:(4)ε=ε1+ε2,where M is the total number of iterations. The value ɛ1 is associated with FD equations and it is given below in case of (1) using the networks provided in Eq. (3) as:(5)ε1=1N+1∑m=0Nd2yˆmdt2−f(tm,yˆm,yˆ(xm))2,t∈(0,T)N=1/h,yˆm=yˆ(tm),xm=x(tm),tm=mh,where the interval t∈[0,T] is divided into N number of steps t∈(t0=0, t1=0.1, t2=0.2,…,tN=T) with step size h, ŷ(t) and d2ŷ/dt2 are FDEN networks given by set of Eq. (2). Similarly, the value ɛ2 associated with boundary conditions can be written as:(6)ε2=12((y0−b)2+(yN−c)2)It is quite evident that the weights than minimize the objective function ɛ to approach zero, the approximate solution ŷ(t) approaches the exact solution y(t) of the FD equation as given in (1).In this section, a brief introduction as well as parameter setting used for training of weights of FDEN networks, have been presented for SA, PS, GA and ASAs.Simulated annealing (SA) technique is probabilistic computational technique, originally proposed by Metropolis in 1950s, in which crystallization process model is used. However, in early 1980s, independent research on the subject has been carried out by Kirkpatrick et al. [51] and Cerny [52]. It is used for local and global optimization problems based on modeling of material heating and controlled cooling characteristics. The core objective of SA technique is to adapt the candidate solutions efficiently and effectively in fixed amount of time. The main advantages of the SA techniques applied to hard optimization problems without considering the conditions of differentiability, convexity and continuity, which are required normally for other optimization methods. SA scheme is used extensively by researcher in transmission network expansion planning problem [53], 3D face recognition [54] and unit commitment problem [55].Pattern search (PS) technique belongs to the optimization algorithms that does not require the gradient of the function under consideration. Hooke and Jeeves are the first to introduce the name of PS method [56]; however, the convergence for PS technique was established by Yu [57], in his works on theory of positive bases. In PS technique, a sequence of points that approach an optimal point is computed. In each step, the scheme searches a set of points called as mesh around the optimal point of previous step. The mesh is created by adding the current point to a scalar multiple of a set of vectors called a pattern [58]. If pattern search algorithm finds a point in the mesh that improves the objective function at the current point, the new point becomes the current point at the next step of the algorithm. PS method is very handy for optimization problem like Bound constrained minimization, linearly constrained minimization and globally convergent augmented Lagrangian algorithm [59,60].Active-set algorithm (ASA) belongs to the class of constrained optimization techniques [61] that work to transform the problem into an easier solvable sub-problem which is used as the basis of an iterative process. The scheme is based on the solution of the Karush–Kuhn–Tucker (KKT) equations to obtain the Lagrange multipliers directly for global solution. The ASA has been applied in many practical important optimization problems like mathematical programing problem with equilibrium constraints, box constrained optimization, and sparse linear programming problems [62,63].GAs was first used by Holland in1975 in his work to mimic a simple picture of natural selection [64]. The performance of the GA is subject to the diversity of initial population, appropriate selection of the chromosomes to next generation, survival of good genes in recombination operation and seeding of new genetic material in mutation. GA based evolutionary algorithms are extensively used by research community due to its ability of controlling the robustness, not to get stuck in local minima, free from divergence, efficient and reliable as compared to other heuristic mathematical solvers [65–67].Keeping in view the importance and applicability of SA, PS, GA and ASAs, we will confine our studies to these solvers for training of weights of FDEN networks. Moreover, the hybrid approaches, in which combination of global search methods SA, PS and GA is made with local search techniques, are also used for this optimization problem. The generic flow diagram of proposed methodology for finding the desired weights is shown in Fig. 2.In this article, we have the MATLAB optimization toolbox for SA, PS, GA and ASAs is used with parameter settings for GA and ASAs are given in Table 1, while for SA and PS techniques the parameter setting is shown in Table 2. Moreover, one of the hybrid algorithms i.e. GA-ASA is given in the following steps:Step 1 Initialization: Randomly generate scattered enough initial population with bounded real values to represent Chromosomes or individuals. Each individual consist of as many elements as the number desired weights in FDEN networks. Initialize the parameter setting for GA as given in Table 1.Step 2 Fitness evaluation: Calculate the fitness for each individual using the Eq. (4) and subsequently (5) and (6).Step 3 Termination criteria: Terminate the algorithm as per following criteria:•Predefined fitness value achieved, i.e., ɛ≤10−15Total number of generations executed.If termination criterion satisfied, then go to step 6.Step 4 Ranking: Each individual of populations is ranked on the basis minimum of fitness values.Step 5 Reproduction: To reproduces the new population using the operators of crossover, mutation, selection and elitism as setting given in Table 1. Go to step 2.Step 6 Refinement: ASA is used for further refinement of results. The best individual of GAs has been given to ASA as a starting point. MATLAB build in function FMINCON is used for ASA with parameter setting as given in Table 1. Store also the refined global best individual along with its fitness value.Step 7 Storage: Store the global best individual of this run and repeat the steps 2–6 for sufficient numbers of independent runs for better statistical analysis.In this section, the results of simulation performed by ANN optimized with SA, PS, GA, ASA, SA-ASA, PS-ASA, GA-ASAs on four different kinds of boundary value problems for FD equations of Pantograph type are presented.Consider the following two-point BVP as [48](7)d2y(t)dt2=−2e−t+y(t)2+e−t/2y(t/2),t∈[0,1],y(0)=0,y(1)=e−1.The problem given in (7) is a kind of FD Eq. (1) with f(t, y(t), y(x(t))=−2e−t+y(t)/2+e−t/2y(x(t)) and x(t)=t/2. The exact solution for the boundary value problem is given as y(t)=te−t.The FDEN network model for the above equation is made using set of Eq. (3) with k=10. It results in 30 weights to be determined. Input of the training set is divided into N=10 equal space steps between t∈[0, 1] with a step size h=0.1. Therefore, the ɛ1 and ɛ2 of the fitness function as given in (4) can be written as:(8)ε1=111∑m=010d2yˆmdt2+−2e−tm+yˆm2+e−tm/2yˆtm22,ε2=12((yˆ0)2+(yˆ1−e−1)2),where ŷ(t), d2ŷ/dt2and ŷ(t/2) is written in following form using set of equations (2) and (3) as:(9)yˆ(t)=∑i=110αi11+e−(wit+βi)(10)d2yˆ(t)dt2=∑i=110αiwi22e−2(wit+bi)(1+e−(wit+bi))3−e−(wit+bi)(1+e−(wit+bi))2(11)yˆ(t/2)=∑i=110αi11+e−(wit/2+βi)Now our intent is to find the appropriate weights for FDEN networks such that the value of fitness given in expression (4) is minimized. We have applied SA, PS, GA, ASA, SA-ASA, PS-ASA and GA-ASAs for learning of adaptive weights of said optimization problem. The parameter settings for execution of the solvers are provided in Tables 1 and 2. One set of optimized weights with fitness value 3.7157×10−12, 1.1819×10−06, 9.0275×10−07 and 1.0715×10−11 for SA, PS, GA, and ASAs, respectively, are shown in Fig. 3a, while adaptive weights of hybrid approaches SA-ASA, PS-ASA and GA-ASAs with fitness values 2.6203×10−11, 7.4388×10−12 and 2.3349×10−13, respectively, are given in Fig. 3b.The solution ŷSA-ASA, ŷPS-ASAand ŷGA-ASAare obtained by AS, SA-AS, PS-AS and GA-AS algorithms, respectively, using the weights given in Fig. 3b and Eq. (2) are given as:(12)ySA−ASA(t)=−2.024553019116401+e−(0.558327264191508t−3.00554072379983)+−8.699470994686171+e−(1.50674130212427t−2.46122982910078)+−3.978948982362111+e−(3.77125476894107t−6.77256122486901)+−9.102954661306321+e−(−5.95061801215683t+16.6487003008377)+0.443493512702621+e−(−1.51404960221772t+1.12945365513604)+12.29330055792271+e−(−5.79864873966073t−5.83079429086926+1.068965823202851+e−(−4.34896848910255t−2.15094535847279+−6.850625210149371+e−(13.7127548143347t−10.6409297493008)+3.829407474925061+e−(4.11113507619284t+12.9195971346775)+5.786690649697731+e−(4.16105716263147t+3.2717506662027)(13)yPS−ASA(t)=−7.144628028811661+e−(1.56000366767355t−8.68241312967326)+−0.5157352134696381+e−(0.676024695668932t+0.647985804658961)+−24.99128762429551+e−(−2.37031798145935t−7.19905487932084)+1.280366835829651+e−(−0.862053091641119t+0.618201507384103)+−1.159543466410471+e−(0.614751140642803t+1.95981079800521)+−24.32159358786161+e−(−1.57438534056078t−3038829394817467)+24.99201339091731+e−(2.43382945735932t−7.33227023269944)+−0.0014012817285181+e−(−16.0501386448714t+23.7906646360594)+2.70453237257161+e−(0.16955340354511t−0.00519698859182374)+0.006297435681528251+e−(8.17917858613865t+4.90855540892052)(14)yGA−ASAˆ(t)=−0.5854231040101141+e−(754676584923467t−1.8103622100824)+0.2656019866503441+e−(0.471657216490488t−1.4648793040179)+0.7166345619401031+e−(0.719815797229146t−0.16396199713794+−0.6539389561106731+e−(0.0122728345352875t−0.31356990696271)+−1.514994085893631+e−(63692410164066t−1.04452733141896)+0.9507767978319611+e−(−1.03081019138642t−0.600069981378307)+1.094157688980891+e−(−0.138046731376557t−2.76239530667658)+−4.59356154848911+e−(−3.43054726611611t−4.33701157799944)+−2.049809657004141+e−(−2.30291145644115t−1.98948636247992)+0.3809209178281131+e−(1.28054888221673t−6.0336458444074)These solutions given in Eqs. (12)–(14) are remained valid for entire continuous domain between [0, 1]. The proposed solution of the Eq. (7) are calculated in the interval [0.5, 0.95] with step of 0.1 using weights given in Fig. 3a and b in Eq. (9) and results are provided in Fig. 3c along with the exact solution y(t), while the values of absolute error (AE), |y(t)−ŷ(t)|, from exact solution is shown in Fig. 3d. Similarly, the proposed solutions on the interval (0, 1) with step of 0.1 are given in Table 3along with exact solution and reported results for numerical method of successive interpolations (NMSI) based on fixed point technique, the trapezoidal quadrature rule, and a Birkhoff interpolation procedure [48]. NMSI solution converged in 19 iterations of algorithm and 10 steps in the interval (0, 1) with mesh size h=0.1.The value of AE, for solution, |y(t)−ŷ(t)|, and derivative, |dy/dt−dŷ/dt|, are determined for proposed algorithms and results are provided in Table 6 in the interval [0,1]. The results are provided in Table 4. It can be seen that value of AE for SA, PS, GA, ASA, SA-ASA, PS-ASA and GA-ASAs lies in the range 10–02–10−03, 10−05–10−06, 10−05–10−07, 10−08–10−09, 10−08–10−10, 10−08–10−09, and 10−09–10−10, respectively, in case of approximate solutions, while for derivative case values of AE lies in the range 10−02–10−03, 10−04–10−05, 10−04–10−06, 10−07–10−08, 10−07–10−08, and 10−08–10−10, respectively. Whereas, the value of AE from exact solution for NMSI technique lies in the range of 10−04–10−05.The mean value of AE (MAE) is calculated as:(15)MAE=111∑i=010|y(ti)−yˆ(ti)|,where t∈(t0=0, t1=0.1, t2=0.2,…,t10=1). The values of MAE for SA, GA, PS, GA, SA-AS, PS-AS and GA-AS algorithms is determined, respectively, as 3.9850×10−03, 2.7897×10−05, 1.4318×10−05, 1.3201×10−08, 1.4517×10−08, 1.2213×10−08 and 2.0902×10−09 for approximate solution, while for derivative case, the values of MAE are 1.7049×10−02, 1.0987×10−04, 7.7561×10−05, 2.4339×10−07, 4.0338×10−07, 1.9028×10−07 and 2.7057×10−08, respectively.The reliability and effectiveness of the solutions provided by stochastic schemes can only be validated through Monte–Carlo simulations and its comprehensive statistical analysis. In this regard, 100 independent runs are carried out for each solver. The MIN and the MAX are defined as minimum and maximum value of AE from exact solution, respectively. The parameter of mean and standard deviation are used in order to determine the behavior of the algorithms along with value of mean square error (MSE), defines as:(16)MSE=1M∑j=1M(y(t)−yˆj(t))2where t∈(t0=0, t1=0.1, t2=0.2,…,t10=1), j is the current independent run of the solvers and M represents the total number of independent runs.The results of statistical analysis of 100 independent runs of each scheme for inputs t∈[0, 1] with step of 0.1 are presented in Table 5for the solution and derivative case. It can be inferred that average value of respective MIN, mean and MSE for solution ŷ(t) by SA, SA-ASA, PS-ASA and GA-ASAs are 1.7661×10−09, 4.9463×10−09, 4.7459×10−09 and 9.1274×10−10, respectively, 1.3260×10−07, 5.1462×10−03, 9.8232×10−06 and 1.0734×10−07, respectively, and 6.6999×10–14, 1.6651×10−04, 3.5242×10−09 and 3.0789×10−14, respectively. Similarly, for derivative of the solutions, the respective MAX, STD, and MSE values for ASA, SA-ASA, PS-ASA and GA-AS algorithms are calculated as 1.1465×10−05, 9.7740×10−02, 4.9614×10−03 and 1.0304×10−05, respectively, 2.2612×10–06, 2.9616×10−02, 8.2225×10−04 and 1.9636×10−06, respectively, and 1.1106×10−11, 1.1405×10−03, 3.1296×10−06 and 1.0876×10−11, respectively.Moreover, the fitness values based on Eq. (4), MAE and root mean square error (RMSE), square root of mean square error, are calculated for the 100 independent runs of each solver. Results are shown graphically in Fig. 4a–d for fitness values, MAE for solution ŷ(t), MAE for derivative dŷ/dt, and RMSE for solution ŷ(t), respectively, against number of independent runs of the proposed algorithms. It is seen from Fig. 4 that SA, PS, GA and SA-ASA provide oscillatory results (broad variations) for all three performance parameters of fitness achieve, MAE and RMSE values, whereas ASA, PS-ASA and GA-ASA are remained convergent for each runs.Consider the two-point boundary value problem of second order Pantograph FD equation [48](17)d2y(t)dt2=1+2(1+t28)cos(t2)−2cos(t2)y(t2),t∈[0,π4],y(0)=1,y(π4)=1+22+π232.With exact solution as y(t)=t2/2+sin(t)+1. Problem in (17) is derived from (1) by taking T=π/4, x(t)=λt, with λ=1/2 and f(t, y(t), y(x(t))=1+2(1+t2/8)cos(t/2)−2cos(t/2)y(t/2). The designed schemes are applied on the similar pattern as in previous example, however, the error functions ɛ1 and ɛ2 for 10 numbers of inputs between 0 and π/4 are given as:(18)ε1=111∑m=010d2yˆmdt2−1+2(1+tm28)costm2−2costm2yˆtm22ε2=12(yˆ0−1)2+(yˆπ/4−1−22−π232)2SA, PS, GA, ASA, SA-ASA, PS-ASA and GA-ASAs have been applied to search optimum weights, and solution derived for hybrid approaches are given in Table A1 of Appendix. The exact solution, proposed results and numerical solution based on 17 number of iteration by NMSI in the interval (0, 1) mesh size h=0.1 are provide in Table 6for interval (0, π/4) with step size of π/4. The value of AE, for solution, |y(t)−ŷ(t)|, and derivative, |dy/dt−dŷ/dt|, are calculated and results are provided in Table 7. It is found that the value of MAE as given in (12) for NMSI, SA, PS, GA, AS, SA-AS, PS-AS and GA-AS algorithm are calculated as 4.6332×10−05, 2.5198×10−02, 1.0690×10−04,1.0142×10−05, 8.7686×10−09, 6.8229×10−09, 1.2693×10−08, and 9.0338×10–09, respectively, for the solution while for derivative case are 1.1283×10−01, 5.7822×10−04, 8.1075×10−05,1.6954×10−07, 1.5259×10−07, 2.2581×10−07 and 1.6790×10−07, and 9.0338×10−09 for respective algorithms. The results statistical analysis in term of min, max, mean and STD for 100 independent runs of each technique calculated and it is found that the average value of the mean for ASA, SA-ASA, PS-ASA and GA-ASA algorithms are 1.43×10−07, 1.81×10−05, 4.08×10−06 and 1.47×10−07, respectively, while in case of derivative these respective values are 2.40×10−06, 3.65×10−05, 4.76×10−05 and 2.47×10−06. Moreover, lower values for fitness, MAE, and RMSE are generally observed from ASA, SA-ASA, PS-ASA and GA-ASAs, than that of SA, PS, and GAs and hybrid approaches remain converged for each runs.For the following boundary value problem of Pantograph FD equation [48] as:(19)d2y(t)dt2=4e−t/2sin(t2)y(t2),t∈[0,π4],y(0)=1,y(π4)=1+22e−π/4,with exact solution is y(t)=e−tcost, which is special case of (1) by taking T=π/4, x(t)=t/2 and f(t, y(t), y(x(t))=4et/2sin(t/2)y(t/2). The design procedure is applied on a similar pattern as in previous problems, but the error functions ɛ1 and ɛ2, constructed for this case as:(20)ε1=111∑m=010d2yˆmdt2−4e−tm/2sintm2ytm22,ε2=12(yˆ0−1)2+yˆπ/4−1−22e−π/42.Learning of weights for the neural networks is performed with same seven adaptive techniques and results derived for hybrid methodologies are given in Table A2 of Appendix. The exact solution, proposed and reported results of NMSI using mesh size 0.01, and based on number of iterations 12, are provided in Table 8for interval (0, π/4) with step size of π/4 while the value of AE for proposed solution and its derivative are provided in Table 9. The value of AE for NMSI lies in the range 10−06 to 10−07, while the value of AE for SA, PS, GA, ASA, lies in the range 10−02–10−03, 10−04–10−05, 10−05–10−07, and 10−08–10−09, respectively. In case of hybrid approaches SA-AS, PS-AS and GA-ASA, AE lies in the range 10−08–10−10. Moreover, the value of AE in case of derivative for SA, PS, GA, ASA, SA-ASA, PS-ASA and GA-ASAs lie in the range 10−02, 10−05–10−06, 10−05–10−06, 10−07–10−08, 10−07–10−08, 10−07–10−08 and 10−07–10−09, respectively. Results of statistical parameters, as well as, three performance parameters, i.e., fitness, MAE and RMSE values, show that the hybrid approaches along with ASA provides consistent convergent and accurate results. Moreover, among hybrid schemes performance of GA-ASA is relatively better than others algorithms.Consider the following non-linear system given by two-point boundary value problem of second order Pantograph FD equation [48](21)d2y(t)dt2=((y(t))2+|y(t)|3)yt2,t∈[0,1],y(0)=0,y(1)=12,with exact solution as y(t)=1/(1+t). The proposed methodologies are applied to this problem on a similar procedure as adopted in previous problems; however, in this case the errors ɛ1 and ɛ2 for the fitness ɛ are given as:(22)ε1=111∑m=010d2yˆmdt2−((y(t))2+|y(t)|3)yt22,ε2=12(yˆ0)2+yˆ1−122The solution derived due to the hybrid approaches are given in Table A3 of Appendix. The exact solution, proposed solution and reported results of NMSI based on 19 iterations and using step size 0.1 are provided in Table 10for inputs between [0, 1] with step size of 1/11 while the value of AE for proposed solution and its derivative are provided in Table 11. The values of MAE for SA, PS, GA, ASA, SA-ASA, PS-ASA and GA-ASAs are 9.4730×10−03, 4.8700×10−05, 7.7651×10−05, 2.1431×10−08, 1.1189×10−07, 2.9233×10−08, and 2.5822×10−08, respectively, for approximate solutions, while for the derivative are 3.9876×10−02, 1.7732×10−04, 5.4722×10−04, 4.6450×10−07, 1.6520×10−06, 7.2402×10−07 and 4.3159×10−07, respectively. The values of statistical parameters, fitness, MAE and RMSE, in this case also show the dominance of hybrid algorithms and among these algorithm results of GA-ASA are found generally superior. Moreover, the results obtained by local search algorithm ASA are found inferior in convergence due to trapping more rather more rapidly in local minima in this problem.In this section, we intent to present the comparative analysis on the numerical experimentation carried out in the last section in term of accuracy levels, mean fitness, global mean absolute error, global root mean square error, and computational time analysis for each algorithm.We have made the comparative analysis of the results based on statistical analysis for 100 independent runs of each algorithm by taking 43 inputs points using the values of statistical operators of MIN, MAX, mean and STD. The distribution of the lowest values of said parameters is provided in Table 12. The hybrid approach based on GA-ASA provides the lowest values for the MIN, MAX, mean and STD for the case of solution ŷ(t) and its derivative dŷ/dt as compared with other proposed schemes.The reliability analysis is also evaluated on the basis of 100 independent runs of algorithms with acceptance criteria of 10−04, 10−06, and 10−08 value for fitness function ɛ and 10−03, 10−05 and 10−07 for MAE. The results are presented in Table 13for the four problems. Generally, the hybrid approaches and ASA provide relatively more convergent results. Whereas SA, PS, GA, ASA and SA-ASA algorithm does not provides the consistently reliable results. However, as far as ASA is concerned, which is local convergent method, provides 100% convergent results for first three problems but in case of problem IV, for 10% of independent runs gives premature convergence, more prone to get stuck in local minima.The performance of the proposed solvers is also investigated on basis of global fitness (GF), global mean square error (GMAE), global root mean square error (GRMSE) and mean execution time (MET) defined as average value of fitness, MAE, RMSE, and time taken by optimization, respectively. These parameters are calculated for 100 independent runs of each solver and results along with the value of standard deviation are tabulated in Table 14. The viability, reliability and accuracy of GA-ASA for all four problems is well established from the results. However, GA is global search algorithms, and by default more computational expensive than that of local search techniques, but expect can be compensated against invariably the best performance in-particularly when hybrid with ASA. The computational time analysis is made on Dell Latitude D630, 2.6GHz Core 2due processor using MATLAB version 2009b.

@&#CONCLUSIONS@&#
