@&#MAIN-TITLE@&#
Evolving statistical rulesets for network intrusion detection

@&#HIGHLIGHTS@&#
Compact rulesets for detecting network intrusions are evolved.Uses novel two-level performance evaluation to coevolve cooperative rules.Results are strongly comparable with other machine learning techniques.

@&#KEYPHRASES@&#
Intrusion detection,DARPA,NSL-KDD,Genetic algorithm,Interval rule-based,

@&#ABSTRACT@&#
Security threats against computer networks and the Internet have emerged as a major and increasing area of concern for end-users trying to protect their valuable information and resources from intrusive attacks. Due to the amount of data to be analysed and the similarities between attack and normal traffic patterns, intrusion detection is considered a complex real world problem. In this paper, we propose a solution that uses a genetic algorithm to evolve a set of simple, interval-based rules based on statistical, continuous-valued input data. Several innovations in the genetic algorithm work to keep the ruleset small. We first tune the proposed system using a synthetic data. We then evaluate our system against more complex synthetic data with characteristics associated with network intrusions, the NSL-KDD benchmark dataset, and another dataset constructed based on MIT Lincoln Laboratory normal traffic and the low-rate DDoS attack scenario from CAIDA. This new approach provides a very compact set of simple, human-readable rules with strongly competitive detection performance in comparison to other machine learning techniques.

@&#INTRODUCTION@&#
Network intrusion is defined as any unauthorised attempt to access, falsify, change or destroy information in order to make a system unreliable [1]. Nowadays, in almost all large-scale IT infrastructure, we need an efficient intrusion detection system to secure our networks against existing and future attacks. Despite improvements in protection and detection mechanisms, it is still impossible to secure computer networks completely. To compete in the arms race against highly sophisticated and varying types of network intrusions, traditional intrusion prevention techniques such as firewalls, access control or encryption are not enough to fully protect networks. Therefore, as argued in [2], we need to consider state-of-the-art computational intelligence technologies, which are able to identify existing intrusions and adapt themselves to new unseen attack strategies to update and enhance our security systems. By defining behavioural characteristics of network traffic, we are able to train a detection system to trigger alarms in the case of anomalous behaviours in the system. We believe that an appropriate statistical-based technique, which has the ability to learn the expected behaviour of the system from observations, combined with a rule-based machine learning method, providing robustness, flexibility, adaptability and scalability [3], can address many outstanding issues in network intrusion detection systems (NIDSs), such as dependency on the signature of network packets, which makes them unable to detect novel attacks, and generating protocol-based rules, which only tackle one specific problem at a time.In general, a NIDS operates by monitoring network traffic and providing a view of malicious activities, and finally giving out alerts, which inform network administrators and facilitate the process of reaction. There are two broad groups of intrusion detection systems (IDSs): signature-based and anomaly-based. Mechanisms that combine these two systems are known as hybrid detection systems. Signature-based systems use a database of known patterns to identify intrusions, whereas anomaly-based systems detect intrusions based on deviations from normal network behaviours and can generate alarms for new or modified attacks. Signature-based mechanisms usually work faster and produce less false positives, but they need prior knowledge of intrusions and consequently, in the case of novel attacks, a network system is left vulnerable until the signature database is updated.There are a number of different approaches used in each category, including threshold detection, statistical measurement, rule-based methods and other artificial intelligence mechanisms. Among these, artificial intelligence methods have attracted considerable interest from the research community. Artificial neural networks (ANNs), fuzzy logic (FL), genetic algorithms (GAs), genetic programming (GP), swarm intelligence (SI) and artificial immune systems (AISs) are examples of computational intelligence approaches that have been used. These techniques with learning and adaptive capabilities have often been used together with rule-based methods to acquire knowledge of normal and abnormal behaviour. Classical machine learning methods such as decision trees and rule induction have also been used [2,4,5]. The knowledge extracted from training data is often in the form of if–then rules. Among these techniques, genetic algorithms show promising results for learning rule-like patterns. The advantages of genetic algorithms as a rule discovery method include the ability to explore a large search space efficiently, and being able to use arbitrary fitness functions in the search. For example, some rule discovery methods generate large, unwieldy rulesets. Carefully designed fitness functions can be used to tackle this problem [6].One of the major issues that researchers face in the process of developing an IDS is that the detection technique should be designed so that it is adaptable to a wide range of network environments without a lot of manual tuning [7]. If we can develop a generic IDS that is not specialised to a particular pattern of traffic, then we will have taken an important step toward developing an effective and robust detection method that can be used against different existing attack tools and future malicious attacks, and which can be deployed at any point of network infrastructure. Previous research has shown that, although new improved attack tools are powerful enough to generate network packets with different characteristics, they distort statistical features of network traffic in the process [7]. Therefore, we can use statistical measures to differentiate between normal and anomalous traffic.In this paper, we present a GA-based approach for discovering rulesets to solve network intrusion detection problems. The approach provides good detection performance, while identifying very concise rulesets that are easily understood. To provide contrast with other machine learning techniques, we compare our results to those obtained using decision trees, rule induction, k-nearest neighbour (kNN) from the category of non-GA-based algorithms and Genetic Algorithm based Classifier System with Adaptive discretisation intervals (GASSIST-ADI) [8] and Memetic Pittsburgh Learning Classifier System (MPLCS) [9] from the category of GA-based rule learning techniques. We used three sources of data for performance evaluations: synthetic data, the NSL-KDD dataset and a combined DARPA/CAIDA dataset. The NSL-KDD dataset is a new improved version of the KDD99 dataset [10,11], a widely used dataset for NIDS studies. The NSL-KDD dataset has solved some of the issues in the original dataset, such as redundant records in the training dataset. Since the DARPA/Lincoln Labs packet traces and the KDD99 dataset derived from them are now more than a decade old, they are not considered by some as not reflecting contemporary attacks [12]. Considering this issue, we used the MIT Lincoln Laboratory Scenario (attack-free) inside tcpdump dataset [13] as the normal network traffic and the low-rate DDoS attack scenario from DAIDA DDoS 2007 [14] as the attack traffic to evaluate the proposed algorithm on a dataset with newer attack traces, an approach also used by [15–17].The rest of the paper is organised as follows. Section 2 reviews related work on the use of machine learning techniques for IDSs by focusing on rule-based algorithms. Section 3 describes our approach in detail. In Section 4, preliminary results from tuning of our algorithm are followed by results obtained from evaluation of the proposed system on complex synthetic data. Next, in Section 5, we apply our proposed approach to network intrusion detection. Finally, Section 6 provides conclusions and discusses future work.

@&#CONCLUSIONS@&#
In this paper, we demonstrated a hybrid approach that combines statistical measurements of network traffic with an evolutionary algorithm for evolving rulesets for intrusion detection. Three different fitness functions were tested in order to evolve rules cooperatively to provide a final optimised ruleset, which covers the area of search precisely. This reduces the number of rules covering overlapping regions, which is an issue in other rule-based systems. The algorithms used in this paper are first tuned using a synthetic problem. Using the settings obtained from the tuning for all the respective approaches, the proposed algorithm is then evaluated against the other techniques using more complex synthetic datasets with NID problem characteristics and two network datasets (NSL-KDD and combined DARPA/CAIDA). The results showed that the proposed method worked effectively for the synthetic data compared to other machine learning techniques: decision trees, RIPPER, kNN, GASSIST-ADI and MPLCS.For NSL-KDD data, continuous-valued network features were extracted to avoid the problem of being dependant on the signature of network packets in some IDSs. For the combined DARPA/CAIDA dataset, the input data features are entropy of 5 packet attributes. The results showed that the performance of our system is comparable to the other methods tested, and has produced very compact, easily understood rulesets. Another advantage of our system is that, depending on the problem domain and the characteristics of the dataset, the system is customisable by changing the fitness and performance function to provide customised optimal results. This option can not be found in other techniques and thus makes our system a more flexible model.There are a number of directions to explore in order to improve the performance of our system as well as its range of application. With some evolved rulesets, the fitness and performance measurements that drive the algorithm are insensitive to small modifications to boundary values (because there are no training examples nearby). We intend to investigate efficient local generalisation and specialisation operators that could exploit this fact. For example, they could be used in a memetic version of the algorithm, combining evolution with local modification.The system has been designed to detect attacks, but by searching instead for rules that “detect” normal traffic, it could be used to discover rulesets to be used in an anomaly-based NIDS. Also, the system should be flexible enough to be modified for multi-class classification, to discover rulesets that can identify which kind of attack is taking place.Finally, in an operational NIDS, detection could be considered as a dynamic optimisation problem. As new processed data becomes available (either normal traffic or new attacks), the population of rules could undergo continuous evolution. As our experiments show, only a few rules from each population are actually used in the optimised ruleset, so the remaining rules may be useful “genetic material” as the system adapts to changing patterns of normal usage or new attack variations.