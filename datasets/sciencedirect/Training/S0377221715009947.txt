@&#MAIN-TITLE@&#
Stronger multi-commodity flow formulations of the (capacitated) sequential ordering problem

@&#HIGHLIGHTS@&#
We present several new formulations for the classical “Sequential Ordering Problem”.Two interesting families of equations are useful to strengthen the linear programming relaxations.We prove that the linear programming relaxations of the new formulations give good bounds.We analyse computational results to compare the known and new formulations.The paper also addresses the capacitated variant of the problem.

@&#KEYPHRASES@&#
Sequential ordering,Travelling salesman problem with precedence constraints,Multi-commodity flows,Metrics,Polyhedral combinatorics,

@&#ABSTRACT@&#
The sequential ordering problem (SOP) is the generalisation of the asymmetric travelling salesman problem in which there are precedence relations between pairs of nodes. Hernández & Salazar introduced a multi-commodity flow (MCF) formulation for a generalisation of the SOP in which the vehicle has a limited capacity. We strengthen this MCF formulation by fixing variables and adding valid equations. We then use polyhedral projection, together with some known results on flows, cuts and metrics, to derive new families of strong valid inequalities for both problems. Finally, we give computational results, which show that our findings yield good lower bounds in practice.

@&#INTRODUCTION@&#
The sequential ordering problem (SOP), also called the asymmetric traveling salesman problem with precedence constraints, is defined as follows (Escudero, 1988). We are given a directed graphG=(V,A)withV={1,…,n},and a cost cafor each arc a ∈ A. Node 1 is the start node and node n is the end node. We are also given an acyclic precedence digraph,H=(V,B). The task is to find a minimum-cost Hamiltonian path, starting at node 1 and ending at node n, which obeys the precedences. That is, if (i, j) ∈ B then i must be visited before j along the path.The SOP can be used to model vehicle routing problems with pickups and deliveries, and also single-machine scheduling problems with set-up costs and precedences between jobs.The standard integer programming formulation of the SOP uses binary variables xafor each a ∈ A, taking the value 1 if and only if arc a is used in the path. For this formulation, many classes of strong valid linear inequalities have been discovered, which have formed the basis of successful exact algorithms for the SOP (e.g., Ascheuer, Escudero, Grötschel, & Stoer, 1993; Ascheuer, Jünger, & Reinelt, 2000; Balas, Fischetti, & Pulleyblank, 1995; Escudero, Guignard, & Malik, 1994). There are also a few papers that discuss alternative formulations that use additional variables, together with appropriate linking constraints (Gouveia & Pesneau, 2006; Gouveia & Ruthmair, 2015; Hernández-Pérez & Salazar-González, 2009).The present paper was inspired by two existing papers:•Hernández-Pérez and Salazar-González (2009) presented a multi-commodity flow(MCF) formulation for the SOP, and also for a capacitated version of the SOP, called the multi-commodity one-to-one pickup-and-delivery traveling salesman problem. (For brevity, we just call it the CSOP.)Letchford and Salazar-González (2015) presented some new MCF formulations for the so-called capacitated vehicle routing problem (CVRP), and showed that they dominate all existing ones, in the sense that their continuous relaxations yield stronger lower bounds.This paper is concerned with MCF formulations for the SOP and CSOP. As well as presenting new and stronger MCF formulations for both problems, we use some known results on flows, cuts and metrics to project the continuous relaxations of our formulations onto the space of the x variables mentioned above. This yields huge new families of strong valid inequalities for both problems, which include some known inequalities as special cases. We also present computational results, showing that the strengthened MCF formulations yield tight lower bounds in practice as well as in theory.The paper is structured as follows. Section 2 contains a literature review. Section 3 presents and analyses two simple MCF formulations of the SOP, and Section 4 does the same for two stronger MCF formulations. Section 5 extends the results to the CSOP. Computational results are given in Section 6, and some concluding remarks are given in Section 7.We use the following notation and conventions in the paper. We assume without loss of generality that the arcs (1, i) and (i, n) are in B for all i ∈ V∖{1, n}. These arcs are called dummy precedences while the other arcs in B are called genuine precedences. For any i ∈ V, π(i) and σ(i) denote the predecessors and successors of i, respectively. That is, π(i) and σ(i) denote the set of nodes that must be visited before or after i, respectively. We letH+=(V,B+)denote the transitive closure of H. That is,(i,j)∈B+if and only if i ∈ π(j). We also letH−=(V,B−)denote the graph obtained fromH+by deleting all arcs that can be inferred from transitivity. That is,(i,j)∈B−if and only if(i,j)∈B+andσ(i)∩π(j)=∅. Given disjoint setsS1,…Sk⊂V,we letA(S1,…Sk)denote the set of arcs (i, j) ∈ A such that there exist integers r, s, with 1 ≤ r < s ≤ k, such that i ∈ Srand j ∈ Ss. We defineB−(S1,…Sk)andB+(S1,…Sk)similarly. Given a set A′ ⊂ A, x(A′) denotes∑a∈A′xa,and similarly for u(A′), ℓ(A′), etc. Finally, directed graphs, cuts and paths are called digraphs, dicuts and dipaths, respectively.

@&#CONCLUSIONS@&#
