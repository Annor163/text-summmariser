@&#MAIN-TITLE@&#
In and out forests on combinatorial landscapes

@&#HIGHLIGHTS@&#
We model fitness landscape of combinatorial optimization problem as a digraph.We study in forests and out forests of the combinatorial landscape’s digraph.We extend earlier digraph result to include out forests and column Laplacians.We establish the relation of local optima and the weak components of forests.We prove local optima numbers equal eigenvalue multiplicities of forest Laplacians.

@&#KEYPHRASES@&#
Local search,Fitness landscape,Local optima,Directed graph,Out forest (spanning diverging forest),In forest (spanning converging forest),

@&#ABSTRACT@&#
Fitness landscape theory is a mathematical framework for numerical analysis of search algorithms on combinatorial optimization problems. We study a representation of fitness landscape as a weighted directed graph. We consider out forest and in forest structures in this graph and establish important relationships among the forest structures of a directed graph, the spectral properties of the Laplacian matrices, and the numbers of local optima of the landscape. These relationships provide a new approach for computing the numbers of local optima for various problem instances and neighborhood structures.

@&#INTRODUCTION@&#
Combinatorial optimization is beneficial for minimizing transportation costs of different goods, finding protein folding structures having minimal energy, determining the best topology for a wireless network, or designing microprocessors to minimize the communication costs among individual transistors (Pardalos, Du, & Graham, 2013). Computational complexity is a common feature of many combinatorial optimization problems (e.g., the traveling salesman problem and the quadratic assignment problem are NP-hard). Another typical feature is a large size of the solution space for even problems of moderate size. For d-partite graph matching or the multidimensional assignment problem, for example, the number of feasible solutions grows exponentially in both dimensionality d and cardinality n of the problem.Computational complexity and very large solution space make application of exact solution techniques restrictively slow or even infeasible for such problems. So, rather than obtaining globally optimal solution, the task is simplified to finding good quality approximate solutions. Search based methods, including iterative and stochastic local searches (Hirsch, Pardalos, & Resende, 2010; Hoos & Stützle, 2005; Stützle, 2006), simulated annealing (Kirkpatrick, Gelatt, & Vecchi, 1983; Pedamallu & Ozdamar, 2008), and genetic algorithm (Gonçalves, Mendes, & Resende, 2008; Holland, 1975), are widely utilized for finding approximate solutions of discrete and combinatorial optimization problems (Hvattum & Glover, 2009). A neighborhood of a given solution is a key concept in search algorithms. It is through the notion of neighborhood that the distance between two solutions, as well as the local optima (minima and maxima) are defined.Fitness landscape theory is an important subfield of combinatorial optimization. It provides a framework for analysis of the search algorithm’s behavior on different instances of a given problem (Krokhmal & Pardalos, 2009; Stadler, 2002). In addition to combinatorial optimization, fitness landscape analysis found application in the physics of disordered systems and evolutionary biology (Reidys & Stadler, 2002). As a matter of fact, fitness landscapes originated in theoretical biology as a way of visualizing evolutionary adaptation (Wright, 1932). Later, they appeared in analysis of spin glasses and other models of disordered physical systems (Binder & Young, 1986). Reidys and Stadler (2002) also acknowledge the similarity between fitness landscapes and the potential energy surfaces used to study the folding of biopolymers (e.g., nucleic acids and proteins) in theoretical chemistry (Mezey, 1987; Neumaier, 1997).Combinatorial landscapes are not unlike their earth counterparts. If solutions are thought as places, and a solution’s fitness (i.e., objective value) as an altitude, then local minima and maxima are like depths and peaks. Just like a walk is long if two places are far apart, the search algorithm’s run time is long when the distance between initial solution and resulting local optimum is large. Similarly to difficulties encountered traversing a rugged terrain, search algorithms are challenged by combinatorial landscapes with many local optima.As a result, a number of fitness landscape studies examine the trends in the numbers of local optima for various problem sizes, neighborhoods, and distributions of coefficients. Other studies look at the relationship between solution’s fitness and its distance to the optima. It is widely acknowledged that careful analysis of combinatorial landscapes is a key to a deeper understanding of the behavior of the search based algorithms (Schiavinotto & Stützle, 2007).Many important results and methodologies for fitness landscape analysis are reviewed in Reidys and Stadler (2002) and Stadler (2002). Combinatorial landscapes can be examined through a wide variety of perspectives, including probability theory and stochastic processes, dynamical systems, random graphs, and abstract algebra. In the majority of the literature on fitness landscapes, graph representations of landscapes and the respective discrete Laplacian operators (or graph Laplacians) arise in the context of undirected graphs. Undirected graphs assume the presence of edges in both directions, and so, they lead to symmetric graph Laplacians.We argue that landscape representations via undirected graphs ignore or lose important information on which of the two solutions (edge endpoints) has a better fitness value. Yet, the theory of directed graphs (digraphs) is not nearly as well developed as for undirected graphs. Some key results in undirected graph theory do not hold for directed graphs and need to be extended for digraphs. Fortunately, a well-known algebraic result connecting the number of weak components with the multiplicities of undirected graph Laplacians was extended to digraphs in Agaev and Chebotarev (2005). It was shown that converging trees in a digraph form a directed forest known as in forest, and this structure serves as a digraph analog of an undirected graph’s decomposition into weak components.Here we extend this important result to alternative types of directed forests and their components (specifically, out forests and diverging trees). The main contribution of the paper is the fitness landscape representation via directed graph and the important connections between local optima on landscapes and certain nodes on directed trees. The connection between landscapes’ optima and directed trees is visualized in Fig. 1, which serves as a graphical abstract.The paper is organized as follows. The key concepts related to fitness landscapes and forest structures on directed graphs are introduced in Section 2. These definitions are used to obtain general results on digraphs and landscapes in Section 3. Finally, Section 4 presents the conclusions.Fitness landscape analysis is an important tool in combinatorial optimization. A search algorithm imposes a structure on the space of all feasible solutions. Landscapes theory studies how the imposed structure impacts the behavior and performance of the algorithm. To define a fitness landscape, we first introduce several related concepts, starting with a notion of a neighborhood of a given solution.In this paper, we follow the terminology of (Schiavinotto & Stützle, 2007; Stadler, 2002). Suppose thatPis a combinatorial optimization problem (e.g., the quadratic assignment problem or the traveling salesman problem). Let P be a specific instance ofP, in other wordsP∈P. Denote bySPthe set of all feasible solutions of instance P. Then2SPrepresents the space of all subsets of setSP.A neighborhood is a mappingN:SP→2SPthat assigns to each solutions∈SPits subsetN(s)∈2SPof solutions, called neighbors.Usually, it is assumed thats∉N(s). For a neighborhood to be useful in search landscape analysis, the way a mappingNis defined must correspond to the “look around” step the search algorithm makes as it moves through the solution setSP. Hence, a neighborhood should be defined through an operator that describes all allowable moves for a single step of the algorithm.An operatorΔis a set of the operator functionsδ:SP→SPthat satisfys0∈N(s)if and only if∃δ∈Δsuch thats0=δ(s).To ensure thats∉N(s), it is usually assumed thatδ(s)≠sfor alls∈SP. The application of some operator functionδ∈Δis called a move.A distance between two solutions is another key concept closely related to the ideas of a neighborhood, an operator, and a move. When the algorithm moves from one solution to another in search for optimal solutions, it crosses multiple neighborhoods via successive application of a sequence of moves. In other words, given any two solutionss,t∈SP, the search starting in s will arrive in t if and only if∃{δ1,…,δk}⊂Δsuch thatt=δk(…(δ1(s))…). Notice that the number of neighborhoods crossed by applying the above sequence of moves is k. Clearly, alternative ways to move from one solution to another might exist. In such case, the number of neighborhoods the search crosses on its way from s to t might vary. The smallest possible number defines a distance between s and t.Typically, the neighborhoodNis defined in such a way thats1∈N(s2)⇔s2∈N(s1)(i.e., it is commutative). As a result, we can get from t to s by simply reversing the sequence of moves, and so, the distance from t to s is the same as the distance from s to t. Thus, to guarantee that the distance is symmetric, the considered neighborhood must be commutative.Suppose thatNis, in fact, commutative. Then a distance between solutions of P can be formally defined as follows.Given an operatorΔ, a distance between two solutionss,t∈SPis the minimum number of movesδ∈Δneeded to reach s from t or t from s, i.e.,d(s,t)=min{k:t=δk(…(δ1(s))…)ors=δ1(…(δk(t))…),δi∈Δ∀i}The neighborhood together with the corresponding operator and distance impose a certain structure on the solution space. A fitness landscape (sometimes also referred as combinatorial or search landscape) adorns the solution space structure of a problem instance P established by the choice of neighborhoodNwith the objective (or fitness) functionf:SP→Rof P.A fitness landscape ofP∈Pis a triple(SP,N,f)that consists of1.a setSPof all feasible solutions of P,a neighborhoodNonSPthat corresponds to operatorΔand distance d between the solutions inSP,a fitness function f of P that assigns its objective valuef(s)to every solutions∈SP.The fitness of each solution s is characterized by its objective function valuef(s)with local minima of P having the smallest values (and maxima the largest values) of f around them. Including a fitness function is like adding an extra dimension (e.g., height) to the solution space. Which is why the fitness landscapes are loosely compared to earth landscapes with depths at the points of local minima and peaks at the points of local maxima in the solution space.Local and global minima and maxima, known collectively as the optima, play important role in solving combinatorial optimization problems. To solve optimization problem instanceP∈P, one must find its global optimal solution, i.e., a solution with the overall best fitness. The local search algorithms work by comparing solutions within a single neighborhood (rather than a whole solution set at once) while moving from one solution’s neighborhood to the next. Together the fitness function f and the neighborhoodNdetermine what solutions are the local optima, i.e., the solutions with the best fitness compared to its neighbor solutions.These concepts can formally be defined as follows:A local minimum is a solutionsmin∈SPsuch thatf(smin)⩽f(s)for all neighborss∈N(smin).A global minimum is a solutionsmin∗∈SPsuch thatf(smin∗)⩽f(s)for all solutionss∈SP.A local maximumsmaxand a global maximumsmax∗are defined similarly to a local minimum and a global minimum by changing the inequalities tof(smax)⩽f(s)andf(smax∗)⩾f(s), respectively.A fitness landscape can alternatively be represented as a weighted directed graph (or digraph) without loops. To show this, we need certain graph-theoretic definitions in addition to the fitness landscape terminology introduced in Section 2.1. Here we first define basic concepts such as a path and then move to more advanced ideas such as a maximum in forest, a maximum out forest, as well as in-forest and out-forest dimensions of a digraph.We follow the terminology used in Agaev and Chebotarev (2000, 2005), Borowski and Borwein (1989). LetG=(V,E)be a weighted directed graph (digraph) without loops, whereV=V(G)={1,…,n}andE=E(G)={ek≔(ik,jk),ik,jk∈V(G),k=1,…,m}denote the sets of vertices (or nodes) and edges (or arcs), respectively. Then G is a graph on n nodes with m arcs. Without loss of generality, we can assume that all edges in G have strictly positive weights, i.e.,w(ek)>0for allk=1,…,m.A subgraph of a digraph G is a digraphΓwhose vertex and edge sets are subsets of the vertex and edge sets of G, respectively, i.e.,Γ⊂GifV(Γ)⊂V(G),E(Γ)⊂E(G). A spanning subgraph of G is a subgraphΓ⊂Gsuch thatV(Γ)=V(G). The indegreeid(v)of vertex v (the outdegreeod(v)of v) is the number of edges that come in v (come out from v, respectively). A vertex w is said to be isolated in G if G has no edges adjacent to w, i.e.,id(w)=od(w)=0. A local source of digraph G is a vertex s such thatid(s)=0andod(s)⩾1(i.e., all adjacent edges of s are directed from s). A local sink in G is a vertex t such thatod(t)=0andid(t)⩾1(i.e., all adjacent edges of t are directed into t).An alternating sequence{v0,e1,v1,…,vl-1,el,vl}of vertices and edges in digraph G such thatek=(vk-1,vk)∈E(G)andvk∈V(G)for allk=1,…,lis called a route of length l in G. A path in G is a route all whose vertices are distinct, i.e.,vk≠vjas long ask≠j. A circuit is a route withv0=vland all the other vertices distinct and different fromv0(i.e.,vk≠vj,∀k≠j,k,j=1,…,l). A semiroute, a semipath, and a semicircuit are defined analogous to a route, a path, and a circuit, respectively, with the only difference between these being that the former concepts allow the edgesekto go either fromvk-1tovkor in the opposite direction (i.e.,ekcan be either(vk-1,vk)or(vk,vk-1)for anyk=1,…,l).Vertexv′is reachable from vertex v in G if there is a path in G from v tov′. Notice that ifv′is reachable from v in G, the reverse is not necessarily true (i.e., v might not be reachable fromv′), since the existence of a path in one direction does not imply the existence of a path in the opposite direction. However, in the case of the connection via a semipath the edge direction does not matter, and so, ifv′is connected to v via a semipath, the reverse is also true.A global sources∗is such a node in a directed graph G from which all other nodes are reachable, i.e., for anyv∈V, there is a pathγ(s∗,v)froms∗to v inG=(V,E). While a global sinkt∗is a vertex, which is reachable from all other vertices, i.e., for anyv∈V, there is a pathγ(v,t∗)fromt∗to v inG=(V,E).A digraph G is strongly connected if all its vertices are mutually reachable (i.e., any two different vertices in G are connected by a path), and weakly connected if there is a semipath connecting any two distinct vertices in G.Given a digraph G and its vertex set subsetV′⊂V(G), an induced subgraphΓof G onV′is the subgraph of G withV(Γ)=V′andE(Γ)={(i,j)∈E(G):i,j∈V′}. A strong component of G (a weak component of G) is the induced subgraph of G on such a subsetV′⊂V(G)of vertices that any pair of distinct verticesv1′,v2′∈V′is mutually reachable in G (is connected by a semipath in G, respectively). Vertices, which belong to a strong (weak) component, form an equivalence class with an equivalence relation given by the mutual connectedness of any vertex pair via a path (semipath, respectively).A diverging tree D is a digraph without semicircuits that has a vertex, called the root (or source), from which every vertex of D is reachable. A diverging tree has a unique root r and the indegree of r is zero, whereas the indegrees of all other vertices are one. The root of D is a global source in D. A diverging forest F is a digraph without circuits such thatid(v)⩽1for every vertexv∈V(F).A converging tree C is a digraph without semicircuits that has a vertex, called the sink, which is reachable from every vertex of C. A converging tree has a unique sink t with the outdegree of t is zero, whereas the outdegrees of all other vertices are one. A converging forest F is a digraph without circuits such thatod(v)⩽1for every vertexv∈V(F).Given a digraph G, its spanning diverging forest is called an out forest of G, and a spanning converging forest of G is an in forest of G. The weak components of a diverging forest are diverging trees (see Agaev & Chebotarev (2000) for a proof). The weak components of a converging forest are converging trees. Fig. 2shows an example of a graph and its spanning forests.For a fixed digraph G, consider its spanning diverging forests (or out forests)F∧and spanning converging forests (in forests)F∨. As indicated in Agaev and Chebotarev (2000), such subgraphs exist for every digraph. A maximum out forest of G is its spanning diverging forestF∗∧such that there is no spanning diverging forest in G with the number of edges greater than inF∗∧, i.e.,|E(F∧)|⩽|EF∗∧|,for every out forestF∧⊂G.Analogously, a maximum in forest of G is the spanning converging forestF∗∨such that no in forest of G has more edges thanF∗∨.As stated in Agaev and Chebotarev (2000), every maximum out forest of G has the minimum possible number of roots or sources. The number of sources (equivalently, the number of weak components or out trees) of a maximum out forest of G is called the out-forest dimensiond∧of G. The number of sinks (equivalently, the number of weak components or in trees) of a maximum in forest of G is called the in-forest dimensiond∨of G. Observe:1.1⩽d∧,d∨⩽nfor any digraph G,the number of edges in any maximum out forest isn-d∧,the number of edges in any maximum in forest isn-d∨.

@&#CONCLUSIONS@&#
In this paper, we proved several important theoretical results in combinatorial optimization that help advance a general theory of combinatorial landscapes. We extended an earlier finding of Agaev and Chebotarev (2005) for in forests to both, in and out forests. Under general conditions, we established the correspondence between the local optima of landscapes of combinatorial optimization problems and the forest structures of the landscape representations via directed graphs. In the future, the established correspondence could be used to analyze fitness landscape properties (e.g., the number of extrema) for computationally difficult problems in combinatorial optimization. Additionally, our result could help establish new relationships between other landscape features and the respective digraph structures.