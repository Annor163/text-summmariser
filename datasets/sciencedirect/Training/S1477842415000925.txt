@&#MAIN-TITLE@&#
A hierarchy of proof rules for checking positive invariance of algebraic and semi-algebraic sets

@&#HIGHLIGHTS@&#
We investigate proof rules to check positive invariance of semialgebraic sets.We introduce a sufficient condition we term nonsmooth Strict Barrier Certificate.We explore the effect of square-free decomposition.We assess the practical proof rule performance on a set of benchmarks.

@&#KEYPHRASES@&#
Formal verification,Polynomial differential equations,Positive invariance,Deductive power,Dynamical systems,

@&#ABSTRACT@&#
This paper studies sound proof rules for checking positive invariance of algebraic and semi-algebraic sets, that is, sets satisfying polynomial equalities and those satisfying finite boolean combinations of polynomial equalities and inequalities, under the flow of polynomial ordinary differential equations. Problems of this nature arise in formal verification of continuous and hybrid dynamical systems, where there is an increasing need for methods to expedite formal proofs. We study the trade-off between proof rule generality and practical performance and evaluate our theoretical observations on a set of benchmarks. The relationship between increased deductive power and running time performance of the proof rules is far from obvious; we discuss and illustrate certain classes of problems where this relationship is interesting.

@&#INTRODUCTION@&#
In safety verification of dynamical systems, one is typically concerned with ensuring that by initializing a system in some set of statesX0⊆X(where X is the state space), the system will never evolve into an unsafe state (belonging to someXu⊆X). When the system is given by ordinary differential equations, one may attempt to solve the safety verification problem by showing that the solution to the initial value problem for any initial valuex0∈X0cannot enter the unsafe region, that isx(x0,t)∉Xufor allt≥0, wherex(x0,t)is the state of the system at time t w.r.t. the initial valuex0. The safety verification problem is in this case equivalent to showing that the intersection of the reachable set{x(x0,t)∈X∣t≥0}with the set of unsafe states is empty. However, solutions to ordinary differential equations will rarely be available in closed form;11That is explicitly given in terms of elementary functions and usual operators.even when they are, their description will often be much more involved than that of the differential equations themselves. Instead, it is possible to work with the differential equations directly[28,22,23,31].A fundamental notion in safety verification is that of a (positively) invariant set. In fact, exact reachable sets of any given statex0of the system are the smallest positively invariant sets one can hope to find that includex0. However, obtaining and working with exact descriptions of reachable sets is not always practical or even possible. This does not mean that system safety cannot be established by other means - if one finds a larger positively invariant set,I⊆X, with a simpler (preferably algebraic, or semi-algebraic) description and which (i) contains the set of initial states (i.e.X0⊆I) and (ii) does not intersect the set of unsafe states (i.e.I∩Xu=∅), then one can soundly conclude that the system is safe.We focus on methods for checking whether a given set defines a positively invariant region, i.e. one from which no system trajectory can escape in positive time(t≥0). In particular, we consider the important case of algebraic and semi-algebraic sets, i.e. sets that can be defined by polynomial equations and finite boolean combinations of polynomial equations and inequalities, respectively. We review previously reported methods and introduce extensions to automatically check positive invariance of semi-algebraic sets. Our work aims at identifying sweetspots in the various methods in order to suggest efficient strategies for invariant checking inside a deductive prover.Contributions. We extend our earlier analysis presented in Ghorbal et al. [12] to include proof rules that are concerned with checking positive invariance of semi-algebraic sets. In addition to recalling proof rules reported previously, we introduce in Section 5.2 a new sufficient condition that we term NSSBC for Non-smooth Strict Barrier Certificate. NSSBC is able to prove positive invariance in a special class of closed semi-algebraic sets and can be seen as a generalization of strict barrier certificates introduced by Prajna [26]. We also investigate in Section 7.4 the effect of square-free decomposition—which generalizes the square-free reduction—on the deductive power of proof rules. Finally, we complement our theoretical results with a practical assessment of the proof rule performance on a set of benchmarks and explore interesting connections between the deductive power and the practical running time performance (Section 8.2).We consider autonomous22That is, the rate of change of the system over time explicitly depends only on the system׳s state, not on time. Non-autonomous polynomial systems with time-dependence can be made autonomous by extending the state of the system with an extra clock variable that reflects the progress of time and replacing every instance of the time variable with the new clock variable.polynomial vector fields (see Definition 1 below).Letx=(x1,…,xn)∈Rn, andx(t)=(x1(t),…,xn(t)), wherexi:R→R,t↦xi(t). The ring of polynomials over the reals will be denoted byR[x1,…,xn].Definition 1Polynomial vector fieldLet pi,1≤i≤n, be multivariate polynomials of the polynomial ringR[x1,…,xn]. A polynomial vector field,p, is an explicit system of ordinary differential equations with polynomial right-hand side:(1)dxidt=ẋi=pi(x),1≤i≤n.Since polynomial functions are smooth (C∞, i.e. they have derivatives up to any order), they are locally Lipschitz-continuous. By the Cauchy-Lipschitz theorem (a.k.a. Picard-Lindelöf) [15], there exists a unique maximal solution to the initial value problem (ẋ=p,x(0)=ξ) defined for t in some non-empty open interval; it is often denoted byx(t), or more explicitly asφt(x0).ForS⊆Rn, ifφt(x0)∈Sfor allt≥0andx0∈S, we say that the set S is a (positive) invariant under the flow ofp. If S is described by a quantifier-free formula of real arithmetic (i.e. is a semi-algebraic set satisfying a finite boolean combination of polynomial equalities and inequalities), positive invariance of S is semantically equivalent to the validity of the following formula in differential dynamic logic [21]:(2)S→[ẋ=p]S.A result about positive invariance of closed sets under the flow of locally Lipschitz-continuous ODEs, known as the Nagumo theorem [19,32, Chapter 10, XVXVI, pp. 117–119], gives a powerful (but generally intractable) geometric characterization of positively invariant closed sets. Nagumo׳s theorem requires the geometric notion of sub-tangential vectors to a set.Definition 2Sub-tangent vectorA vectorv∈Rnis sub-tangential to a setS⊆Rnatx∈Sifliminfλ→0+dist(S,x+λv)λ=0,where dist denotes the Euclidean set distance, i.e.dist(S,x)≡infy∈S‖x−y‖.The set of all sub-tangent vectors to a set S atx∈Sis known as the contingent cone to S atxand is denotedKx(S).Given a continuous systemẋ=p(x)and assuming that solutions exist and are unique inside some open setO⊆Rn, letS⊂Obe a closed set. Then, S is positively invariant under the flow of the system if and only ifp(x)is sub-tangential to S (or equivalently,p(x)∈Kx(S)), whereKx(S)is the set of all sub-tangential vectors to S atx, known as the contingent cone) for allx∈bdr(S), wherebdr(S)is the boundary of S.33The border of a set S is often denoted by∂S. We will usebdr(S)instead to avoid confusion with partial derivatives.Using Nagumo׳s Theorem, the following proof rule is sound and complete when S is a closed semi-algebraic set:(Nagumo)∀x∈bdr(S).p(x)∈Kx(S)S→[ẋ=p]S.More recently, a different characterization of positively invariant sets (described in detail in subsequent sections) was reported in Liu et al. [16].In the important special case where a closed set S is described by the equation h=0, withh∈R[x1…,xn], positive invariance of h=0 is semantically equivalent to the validity of the formula:(3)(h=0)→[ẋ=p](h=0).Geometrically, the equation h=0 represents the set of real roots of the polynomial h. Such a set is known as real algebraic set or a real variety and will be henceforth denoted byVR(h). Algebraic sets are intimately related to sets of polynomials with special algebraic properties called ideals. Ideals are closed under addition and external multiplication; that is, if I is an ideal, then for allh1,h2∈I, the sumh1+h2∈I; and ifh∈I, then,qh∈I, for allq∈R[x1…,xn]. To say that the real varietyVR(h)of the ideal generated by h is invariant under the flow of the vector fieldpis equivalent to the statement that the equation h=0 is invariant.We will use∇hto denote the gradient ofh:Rn→R, that is the vector of its partial derivatives(∂h∂x1,…,∂h∂xn). The Lie derivative of h along the vector fieldpgives the rate of change of h along the flow ofẋ=p(x)and is formally defined as the scalar product of∇handp.(4)Lp(h)≜∇h⋅p.Higher-order Lie derivatives are defined recursively asLp(k+1)(h)=Lp(Lp(k)(h)), withLp(0)(h)=h.We recall five important proof rules for checking invariance of polynomial equalities, or equivalently the validity of Eq. (3). In Fig. 1, FI refers to invariant polynomial functions.44We used the notationDI=for the same proof rule in [12].The premise of the Polynomial-scale consecution proof rule [28], P-c in Fig. 1, requiresLp(h)to be in the ideal generated by h. The condition given in the premise is only sufficient (but is eminently suitable for generating invariant varieties [17]). We also consider the constant-scale consecution proof rule [28,31], denoted by C-c. The premise of proof rule C-c requires thatLp(h)=λh, where λ is a scalar, not a polynomial as in P-c. It is therefore a simple special case of P-c. Whenλ=0, one obtains the premise of the proof rule FI. It is worth noting that the condition in the premise of P-c, including its special case C-c, was mentioned as early as 1878 [6] and used extensively in the study of integrability of dynamical systems (e.g. see second integrals in Goriely [13], Chapter 2). It serves as a natural extension to invariant functions, also known as first integrals, which are covered by the proof rule FI. The proof rule Lie gives Lie׳s criterion [14,20] for invariance of h=0; this proof rule will be discussed in more depth and extended to handle tricky cases in Section 4. The last rule, DRI in Fig. 1, was recently introduced and characterizes (i.e. gives necessary and sufficient conditions for) invariant real varieties under the flow of polynomial vector fields [10]. The number N in the premise of DRI is the maximum length of the ascending chain of polynomial ideals〈h〉⊂〈h,Lp(h)〉⊂〈h,Lp(h),Lp(2)(h)〉⊂…, which is finite and computable [10].One immediate deficiency of the proof rule Lie (Fig. 1) is its inability to prove invariance properties for isolated points (e.g. system equilibria) for the simple reason that a description of such a pointa=(a1,…,an)∈Rn, e.g. given by the sum-of-squares equationh(x)=(x1−a1)2+⋯+(xn−an)2=0, will have an extremum ata, i.e.h(a)=0andh(x)>0for allx∈Rn⧹{a}. Functions whose real roots characterize isolated points have vanishing gradient at these roots, in this casea, and thus the formulah=0→∇h=0holds. This violates the regularity condition in the premise of the proof rule Lie, namely:(5)h=0⟶∇h≠0.In fact,h=0→Lp(h)=0is a necessary condition when h=0 is an invariant equation. Note that simply removing Eq. (5) from the premise of the proof rule Lie is unsound (see e.g. [23]); that is, the conditionh=0→Lp(h)=0alone is insufficient to prove the invariance property for h=0. Unsoundness in the above naïve attempt at a generalization is a consequence of singularities that may be present in the varietyVR(h). Singularities ofVR(h)are pointsx∈VR(h)where the gradient of h vanishes, i.e.∇h(x)=0.Definition 4Singular locusLeth∈R[x1,…,xn], the singular locus of h=0, henceforth denotedSL(h), is the set of singular points, that is, pointsxsatisfyingh=0∧∂h∂x1=0∧·∧∂h∂xn=0.Points that are not singular are called regular. At singular points, the Lie derivative of h along any vector field is0⋅p=0. To avoid these degenerate cases, the regularity condition (Eq. (5) rules out singularities altogether. In the next section we present two extensions of Lie׳s criterion that, in a similar vein to Taly and Tiwari, [29], partially overcome the strong regularity condition by treating the points on the singular locus separately.Equilibria are points in the state space where the vector field vanishes(p=0)so that there is no motion. However, as seen above, Lie׳s criterion cannot generally be applied to prove invariance properties of isolated equilibria because their description involves singularities. One simple way to resolve this issue is to drop the non-vanishing gradient condition and replace it with the proviso that there be no flow (that isp=0) in the variables of the invariant candidate on the singular locus; this will allow singularities in the invariant candidate and will provide a sound proof method in which there is no need to check for non-vanishing gradient. Below we present two extensions to the proof rule Lie and justify their soundness after recalling some basic geometric notions.Definition 5Lie°: Lie + Equilibria(Lie°)h=0→(Lp(h)=0∧(SL(h)→⋀xi∈vars(h)pi=0))(h=0)→[ẋ=p](h=0),wherevars(h)denotes the set of state variables xioccurring in the polynomial h.TheLie°proof rule can be generalized further at the expense of adding an extra variable by replacing the “no flow” condition (pi=0) for points on the singular locus with∀λ.h(x+λp(x))=0, where λ is a fresh symbol.Definition 6Lie⁎: Lie + vanishing sub-tangent(Lie⁎)h=0→(Lp(h)=0∧(SL(h)→h(x+λp)=0))(h=0)→[ẋ=p](h=0).To prove soundness ofLie°andLie⁎, we appeal to the Nagumo theorem. Let us observe that givenx∈bdr(S), ifx+λp(x)∈Sfor allλ∈R, thendist(S,x+λp(x))=0and sop(x)is sub-tangential to S atx. This observation is important for algebraic sets, for whichbdr(S)=S, and the conditionx+λp(x)∈Stranslates toh(x+λp(x))=0. This is the main idea behind the soundness of the proof ruleLie⁎.Proposition 7The proof ruleLie⁎is sound.A point on the variety is either regular or singular. For regular points (these form an open subset of the variety), sinceLp(h)(x)=0, the vectorp(x)is sub-tangent to the variety atx(in fact, it is even tangent, so the condition we check is exactly that which is used in Lie). At singular pointsx∈VR(h)ifh(x+λp(x))=0holds for all λ thendist(VR(h),x+λp(x))=0for all λ, from which it follows thatliminfλ→0+dist(VR(h),x+λp(x))λ=0and thusp(x)is sub-tangential toVR(h)atx. Assuming solutions exist and are unique, the varietyVR(h)is positively invariant under the vector fieldpby Nagumo׳s theorem. □The casep(x)=0for allxin the singular locus is a special case of the proof ruleLie⁎. Therefore, the soundness ofLie°is an immediate corollary of Proposition 7.Corollary 8The proof ruleLie°is sound.It is worth remarking that the proof rules presented in this section, as well as Lie and FI, also work for non-polynomial vector fields and invariant candidates which themselves are not polynomial but sufficiently smooth. However, in such cases the resulting arithmetic may no longer be decidable [27].In this section we will discuss three different methods for proving positive invariance of semi-algebraic sets, that is sets described by boolean combinations of polynomial equalities and inequalities.Differential induction with differential invariants (henceforth DI) was introduced in Platzer [22, Theorem 1].Theorem 10Differential Invariants (DI)Given a polynomial systemẋ=pand a quantifier-free formula of real arithmetic S in the state variables (describing some semi-algebraic set), the following rule of inference is sound:(DI)D(S)ẋpS→[ẋ=p]S.In DI, S is a quantifier-free first-order formula in the theory of real arithmetic and D is the derivation operator[23], Definition 3.2, which is defined as follows:(6)D(r)=0fornumbers,D(x)=ẋforvariables,D(a+b)=D(a)+D(b),D(a·b)=D(a)·b+a·D(b),D(ab)=D(a)·b−a·D(b)b2,D(S1∧S2)≡D(S1)∧D(S2),D(S1∨S2)≡D(S1)∧D(S2),(∧hereisimportantforsoundness)D(a≤b)≡D(a)≤D(b),accordinglyfor≥,>,<.The formulaD(S)ẋpis obtained by replacing eachẋiin D(S) with the corresponding right hand side in the system of differential equations, i.e. bypi(x).Remark 11Note that if S has the formh≤0for a polynomial h, then the requirements in the premise of DI are exactly the conditions that a barrier certificate [25] has to satisfy. Thus, for this case, differential invariants include barrier certificates as a special case [22]. Barrier certificates are, however, also accompanied with interesting techniques for generating such invariant regions.WhenS≡h=0, the premise of DI is equivalent to the premise of FI. Thus, DI lifts FI to formulas following the arithmetic of the D operator in Eq. (6).In practice, although differential invariants allow one to work with sets that are expressed using formulas with boolean operators, the conditions are very conservative (because they are required to hold everywhere in the state space, rather than only on the boundary of the set defined by S) and may fail to hold even for seemingly simple positively invariant sets. That is why differential invariants are used in conjunction with differential cuts [22,24], a process of successively augmenting the system dynamics with provable invariants, which we do not consider here.Another criterion, which we term non-smooth strict barrier certificate, may be seen as a generalization of the strict barrier certificates criterion [25,26] (limited to closed sets of the formh≤0) to generic closed semi-algebraic sets. Notice that our generalization only concerns the sufficient conditions for checking the invariance of supplied candidates. In particular, we do not extend nor adapt the computation techniques (convex optimization) underlying the barrier certificates generation to the new criterion we present in the sequel.Given a closed semi-algebraic setS≡⋁i=1k⋀j=1m(i)hij≤0with polynomialshij∈R[x1,…,xn], we can equivalently rewrite S by a sub-level set of a continuous function, namelyS≡⋁i=1k⋀j=1m(i)hij≤0≡mini=1,…,kmaxj=1,…,m(i)hij≤0.Before stating the proof rule, we first define the Lie derivation forminmaxfunctions as follows. The setLp(max(h1,h2,…,hm))<0is defined inductively byLp(h1)<0if m=1, and form≥2by(7)(h1>max(h2,…,hm)→Lp(h1)<0)∧(h1<max(h2,…,hm)→Lp(max(h2,…,hm))<0)∧(h1=max(h2,…,hm)→Lp(h1)<0∧Lp(max(h2,…,hm))<0)For instance, for m=2, one gets:Lp(max(h1,h2))<0≜(h1>h2→Lp(h1)<0)∧(h1<h2→Lp(h2)<0)∧(h1=h2→Lp(h1)<0∧Lp(h2)<0)We similarly define the setLp(min(g1,…,gm))<0byLp(g1)<0if m=1, and form≥2,(8)(g1<min(g2,…,gm)→Lp(g1)<0)∧(g1>min(g2,…,gm)→Lp(min(g2,…,gm))<0)∧(g1=min(g2,…,gm)→Lp(g1)<0∨Lp(min(g2,…,gm))<0).where giis of the formmax(hi,1,…,hi,m). For instance,(9)Lp(min(max(h1,h2),h3))<0≡(max(h1,h2)<h3→Lp(max(h1,h2))<0)∧(max(h1,h2)>h3→Lp(h3)<0)∧(max(h1,h2)=h3→Lp(max(h1,h2))<0∨Lp(h3)<0)We are now ready to state the non-smooth strict barrier certificate proof rule.Proposition 13Non-smooth strict barrier certificates (NSSBC)Given a continuous systemẋ=pand a closed semi-algebraic setS≡⋁i=1k⋀j=1m(i)hij≤0, wherehij∈R[x1,…,xn], then, the following proof rule is sound:(NSSBC)(mini=1,…,kmaxj=1,…,m(i)hij=0)→Lp(mini=1,…,kmaxj=1,…,m(i)hij)<0(⋁i=1k⋀j=1m(i)hij≤0)→[ẋ=p](⋁i=1k⋀j=1m(i)hij≤0).Consider an arbitrary pointx0∈Rnsuch thatmini=1,…,kmaxj=1,…,m(i)hij|x0=0,then it is necessarily the case that for those active max arguments with indices i⁎ inI⁎⊆{1,…,k}such thatmaxj=1,…,m(i⁎)hi⁎j|x0=0for alli⁎∈I⁎, the conditionLp(maxj=1,…,m(i⁎)hi⁎j)|x0<0needs to hold for at least somei⁎∈I⁎(otherwise the premise of the proof rule is not satisfied). Without loss of generality, assume that atx0there is one such i⁎. The condition guarantees that for all polynomial arguments of the max function, their Lie derivative is strictly negative atx0. Since Lie derivatives of polynomials under polynomial vector fields are also polynomial functions (and thus continuous), there exists an open neighbourhood aroundx0inside whichLp(hi⁎j)<0is true for allj∈{1,…,m(i⁎)}. Thus, if the system is initialized atx0, it is guaranteed to enter the region wheremaxj=1,…,m(i⁎)hi⁎j<0and remain there for some non-empty time interval(0,ϵ), whereϵ>0, by following the solutionφt(·), which implies thatmini=1,…,kmaxj=1,…,m(i)hij(φt(x0))≤0for allt∈[0,ϵ2]. The closed set S is thus locally positively invariant and therefore positively invariant.□Nagumo׳s theorem gives a necessary and sufficient condition for positive invariance of arbitrary closed sets (cf. Theorem 3); however, one needs to be careful when applying this result to sets defined by formulas with logical connectives. It is often tempting to apply the sub-tangency condition element-wise to sets defined by atomic formulas, but in certain degenerate cases this leads to incorrect conclusions. To appreciate this problem, we first require some basic facts about the closure properties of the contingent cone (i.e. the set of all sub-tangent vectors to a set at a given point).Proposition 14LetS1,S2⊆Rn, then for allx∈Swe haveKx(S1)∪Kx(S2)⊆Kx(S1∪S2).Sincedist(S,·)≥0andS1⊆S1∪S2, we have0≤infx∈S1∪S2∥x−x0∥≤infx∈S1∥x−x0∥foranyx0,and0≤dist(S1∪S2,x0)≤dist(S1,x0)bydefinition.Substitutingx0+tvforx0and dividing byt>0we get0≤dist(S1∪S2,x0+tv)t≤dist(S1,x0+tv)tandbyassumption0≤liminft→0+dist(S1∪S2,x0+tv)t≤liminft→0+dist(S1,x0+tv)t=0.from which it follows that ifvis sub-tangential to S1 atx0, then it is also sub-tangential toS1∪S2. Thus,Kx(S1)⊆Kx(S1∪S2)for allx∈S1; by the same argument one showsKx(S2)⊆Kx(S1∪S2)for allx∈S2, from which one concludes that the inclusionKx(S1)∪Kx(S2)⊆Kx(S1∪S2)holds for allx∈S1∪S2.□LetS1,S2⊆Rn, then in generalKx(S1)∩Kx(S2)⊈Kx(S1∩S2).ConsiderS1≡{x∣x2x12=0}andS2≡{x∣x2−x12=0}. The two sets intersect at0∈R2. At the origin, the intersection of the contingent cones is given by the real line, i.e.K0(S1)∩K0(S2)={x∣x2=0}, whereas the contingent cone to the intersection of the two sets is given by the zero vector,K0(S1∩S2)={0}. See Fig. 2for an illustration and [33] for an overview this problem.□In general, given a closed set S which is presented as a finite union of intersections of closed sets Sij, i.e.⋃i=1k⋂j=1m(i)Sij,one would like to determine ifp(x)∈Kx(S)by only checkingp(x)∈Kx(Sij). If one has(10)⋃i=1k⋂j=1m(i)Kx(Sij)⊆Kx(⋃i=1k⋂j=1m(i)Sij).for allxon the boundary of S, then Nagumo׳s criterion for vector field membership in the contingent cone for the whole set can be applied component-wise, i.e. the condition becomes∀x∈bdr(⋃i=1k⋂j=1m(i)Sij).p(x)∈⋃i=1k⋂j=1m(i)Kx(Sij).It is possible to formulate inference rules based on Nagumo׳s theorem which allow one to prove positive invariance of a large class of closed semi-algebraic sets. This has previously been investigated in Taly and Tiwari [29], where a number of inference rules are presented for checking positive invariance of closed sets of the formh≥0. For instance, it is shown that the following is a sound inference (similar to Lie):h=0→Lp(h)≥0∧∇h≠0h≥0→[ẋ=p]h≥0,along with other rules with more general premises, all of which seek to check membership ofp(x)in the contingent coneKx(h≥0). The lifting of the conditions to formulas with boolean connectives (leading to a potential proof rule for closed semi-algebraic sets) described in Taly and Tiwari [29, p. 393], essentially requires each Sijto be of the formhij≥0and assumes the soundness-critical property (10). Soundness issues may arise when this assumption fails to hold (as in Fig. 2). This deficiency can be fixed by e.g. requiring the matrix of partial derivatives of active components on the boundary to be full rank, i.e.rk(∇h1,∇h2,…,∇hk)=kwhenever the polynomialsh1,h2,…,hkevaluate to 0 on the boundary (this need only apply to conjunctive components). A number of other possible sufficient conditions for removing this source of unsoundness has been studied in non-smooth analysis [33] (see also practical sets in [2]). However, in practice, even ensuring the full-rank property for a matrix with polynomial entries is computationally expensive. Furthermore, even with conditions for soundness in place, the result may not be applied to reason about positive invariance of semi-algebraic sets that are neither closed nor open.In Liu et al. [16], it was shown that checking whether a given semi-algebraic set is positively invariant under the flow of a polynomial vector field is decidable. The conditions one is required to check are phrased in terms of set inclusion of semi-algebraic sets, which can be determined using a decision procedure for real arithmetic. The result builds on ideas described earlier in Taly and Tiwari [29] and crucially depends on the property of solutions to differential equations with analytic right-hand sides being themselves analytic. In the remainder of this section, we rephrase and provide a detailed illustration of the main components of the result presented in Liu et al. [16].Theorem 16Leth:Rn→Rbe an analytic function andẋ=pbe an analytic system of ODEs. Ifx0∈Rnis such thath(x0)=0, then one has three possibilities atx0:1.∃N>0.Lp(N)(h)<0⋀i=1N−1Lp(i)(h)=0,∃N>0.Lp(N)(h)>0⋀i=1N−1Lp(i)(h)=0,∀N>0.⋀i=1NLp(i)(h)=0.Since both h and the solution to the analytic ODE are analytic functions, the Taylor series expansion ofh(φt(x0))around t=0 is given byh(x0)+∑i=1∞(tii!·dihdti|x0)=∑i=1∞(tii!·Lp(i)(h)|x0)and converges on some non-empty open interval of t containing zero. Thus, the most significant term to become sign-definite will determine the sign of the entire sum on some sufficiently small interval. See Liu et al. [16, Proof of Proposition 9]. See also Taly and Tiwari [29, Proof of Theorem 7], which employed very much the same ideas as Liu et al. [16].□The following theorem is a simple corollary to Liu et al. [16, Theorem 19].Theorem 17Liu, Zhan and Zhao [16]Given a polynomial systemẋ=p(x), and a semi-algebraic setS⊆Rn, defineInp(S)≡{x∈Rn∣∃ϵ>0.∀t∈(0,ϵ).x(t)∈S},In(-p)(S)≡{x∈Rn∣∃ϵ>0.∀t∈(0,ϵ).x(−t)∈S},wherex(t)is the solution to the initial value problem(ẋ=p(x),x(0)=ξ)at time t. The set S is positively invariant under the flow of the system if and only if the inclusionsIn(-p)(S)⊆S⊆Inp(S)hold, which implies soundness (and relative completeness) of the following rule of inference:(LZZ)(In(-p)(S)→S)∧(S→Inp(S))S→[ẋ=p]S.To develop some intuition for the construction ofInp(S), let us first consider the case where S is characterized by a single non-strict inequalityh≤0. Whenever h is an analytic function, one may use Theorem 16 to give a characterization ofInp(h≤0)as the set of states inRnthat satisfy the following infinite set of conditions (cf. Taly and Tiwari [29, Theorem 7, Theorem 8]):h<0∨(h=0∧Lp(h)<0)∨(h=0∧Lp(h)=0∧Lp(2)(h)<0)∨(h=0∧Lp(h)=0∧Lp(2)(h)=0∧Lp(3)(h)<0)∨⋮The decidability of checking the conditions in Proposition 17 (i.e. the premise of LZZ) hinges on the ability to construct semi-algebraic setsInp(S)whenever S is semi-algebraic. In Liu et al. [16] the authors make the crucial observation that whenever h is a polynomial andẋ=p(x)is a system of polynomial ODEs, then the Lie derivativesLp(i)(h)up to any order i are also polynomials. Using the fact that the ring of multivariate polynomials with coefficients in some Noetherian ring is also Noetherian (by Hilbert׳s basis theorem), the setInp(h≤0)can be characterized by a finite disjunction [16]:h<0∨(h=0∧Lp(h)<0)∨(h=0∧Lp(h)=0∧Lp(2)(h)<0)∨⋮(h=0∧Lp(h)=0∧Lp(2)(h)=0∧⋯∧Lp(N−1)(h)<0)∨(h=0∧Lp(h)=0∧Lp(2)(h)=0∧⋯∧Lp(N−1)(h)=0∧Lp(N)(h)≤0).The ascending chain property of Noetherian rings guarantees that there is a finite positive integer N such that for allN′>Nwe have the following ideal membership:Lp(N′)(h)∈〈h,Lp(h),…,Lp(N)(h)〉.The integer N may be found using Gröbner bases to successively check for ideal membership ofLp(N)(h)in the ideal generated by the Lie derivatives of orders lower than N forN=1,2,3,…until the ideal saturates (as with DRI). Once N is found, if the formula(h=0∧Lp(h)=0∧Lp(2)(h)=0∧...∧Lp(N−1)(h)=0∧Lp(N)(h)=0)holds, then for anyN′≥Nwe have(h=0∧Lp(h)=0∧Lp(2)(h)=0∧...∧Lp(N−1)(h)=0∧Lp(N)(h)=0∧⋯∧Lp(N′)(h)=0),which removes the need to consider disjuncts with Lie derivatives of orders higher than N, as all the (infinitely many) formulas(h=0∧Lp(h)=0∧Lp(2)(h)=0∧...∧Lp(N−1)(h)=0∧Lp(N)(h)=0∧⋯∧Lp(N′)(h)<0),withN′>Nare guaranteed to be false.Remark 18The ascending chain property is crucial in making it possible to reason about sign conditions of infinitely many higher-order Lie derivatives by only considering a finite number of sign conditions. The same idea was independently pursued in Ghorbal and Platzer [10] to give a necessary and sufficient criterion for invariance of real algebraic sets under the flow of polynomial ODEs (summarized in the proof rule DRI; discussed earlier).Thus, by computing N for a given polynomial h and a systemẋ=p(x), one may construct a semi-algebraic setInp(h≤0). In Fig. 3d we detail the computation for N=3 and depict the different “pieces” involved to formInp(h≤0), which is, in this particular case, the same ash≤0as shown in Fig. 4b.Likewise in the case of strict polynomial inequalitiesh<0, the setInp(h<0)is semi-algebraic and is characterized by the following formula:h<0∨(h=0∧Lp(h)<0)∨(h=0∧Lp(h)=0∧Lp(2)(h)<0)∨⋮(h=0∧Lp(h)=0∧Lp(2)(h)=0∧⋯∧Lp(N−1)(h)<0)∨(h=0∧Lp(h)=0∧Lp(2)(h)=0∧⋯∧Lp(N−1)(h)=0∧Lp(N)(h)<0).In order to constructInp(·)for semi-algebraic sets with boolean structure, an important distribution property, proved in Liu et al. [16, Theorem 20], is required. For convenience, the property is stated below.Theorem 19[16]Given a polynomial systemẋ=p(x)and a semi-algebraic setS≡⋁i=1k⋀j=1m(i)hij~0where~∈{<,≤}, we haveInp(S)≡⋁i=1k⋀j=1m(i)Inp(hij~0).Finally,In(-p)(S)is constructed in exactly the same way asInp(S), except the Lie derivatives are computed with respect to the vector field induced by the system in which time is reversed, i.e.ẋ=−p(x). This is possible becauseddtx(−t)=−p(x(−t)),and the solution toẋ=−p(x)is given byx(−t), wherex(t)is the solution toẋ=p(x). Once all the semi-algebraic sets in the premise of LZZ are constructed, the validity of the premise can be decided using a decision procedure for real arithmetic [30].In this section, we compare the deductive power of the existing (Fig. 1) as well as the newly-introduced proof rules (Lie°andLie⁎in Section 4, and NSSBC in Section 5.2) for checking the invariance of algebraic and semi-algebraic sets. This study should be complemented by another comparison that considers the interaction between the different proof rules in the context of a formal proof system in a similar vein to Platzer [24]. We leave this for future work.Given two proof rules R1 and R2 of the form(11)(R1)P1(S1:T1)⟶[ẋ=p](S1:T1)(R2)P2(S2:T2)⟶[ẋ=p](S2:T2)where Pirefers to the premise of the proof rule Ri, and the conclusion has the form(S1:T1)⟶[ẋ=p](S1:T1), whereSi:Tidenotes that the set Siis of type Ti(the typical types we are considering in this work are algebraic and semi-algebraic sets).Definition 20Partial order over proof rulesLet R1 and R2 be two proof rules of the form of Eq. (11). We say that R2 generalizes R1 and writeR2≽R1(orR1≼R2), if the premise of R1 implies the premise of R2 (P1→P2), and T1 is a subtype of T2 (for instance, the type algebraic set is a subtype of the type semi-algebraic set).Intuitively, if the proof rule R1 proves thatS1:T1is an invariant for the vector fieldp, then R2 can be also applied to discharge the invariance of S1. IfR1≼R2andR1≽R2, we say that R1 and R2 are equivalent, and denote this byR1~R2. Observe that two equivalent proof rules operate necessarily on equivalents type of sets so T1 and T2 are equivalent. In a similar vein,R1R2(orR2R1) denotes that R1 is not generalized by R2. So in the absence of other rules, a proof rule that operates on algebraic sets cannot generalize a proof rule for semi-algebraic sets. Finally, we also writeR1≺R2whenR1≼R2andR1R2. That is, the rule R2increases the deductive power of R1.It is easy to see that the order≼is a partial order (with ~ acting as equality): it is reflexive,R≼R(the premise of R implies itself); it is anti-symmetric (by definition), and transitive: ifR1≼R2andR2≼R3, then the premise of R1 implies the premise of R3 by transitivity of the implication, soR1≼R3. Finally, ifR1R2andR1R2, we will writeR1≺≻R2and say that the proof rules R1 and R2 are incomparable. This means that for both R1 and R2 there are problems that one rule can prove and the other cannot. Notice that a proof rule for invariance of a certain class of semi-algebraic sets does not automatically generalize a proof rule for invariance of algebraic sets, even though the subtype condition is satisfied. Such proof rules are likely to be incomparable.In what follows we use the partial order (≼) to illustrate the lattice structure of the proof rules under consideration. We use≼to compare the deductive power of the proof rules. On one hand, the proof rules for algebraic sets:{FI,C-c,P-c,Lie,Lie°,Lie⁎,DRI},and, on the other hand, the proof rules for semi-algebraic sets:{NSSBC,Nagumo,DI,LZZ}.For convenience, the propositions of this section are summarized in the comparison matrices in Fig. 6 and 8. For instance, Proposition 25 proves thatFI≺≻Lie. Cells without numbers are proved by transitivity of the partial order. For instance,FI≺DRIcan be proved usingFI≺C-c(Proposition 21) andC-c≺P-c(Proposition 22) andP-c≺DRI(Proposition 24). The Hasse diagram (Fig. 5) gives the lattice structure where arrows represent strictly increasing deductive power; every missing edge in the graph represents ≺≻, as shown in the comparison matrix.We begin by comparing Darboux-based proof rules, i.e.{FI,C-c,P-c}and then proceed to the Lie-based proof rule family, i.e.{Lie,Lie°,Lie⁎}. Next, we demonstrate the deductive superiority of the necessary and sufficient conditions in the premise of the proof rule DRI. Finally, we show that Darboux-based proof rules and Lie-based proof rules form two distinct proof rule families; that is, any proof rule from one family is deductively incomparable to any proof rule from the other family.Proposition 21FI≺C-c.The premise of the rule C-c requires the existence of someλ∈R, such thatLp(h)=λh. In particular,λ=0gives the premise of FI. Thus,FI≼C-c. To see thatFIC-c, consider the one-dimensional vector fieldp=(x), we haveLp(x)=1x, and hence C-c (λ=1) concludes that x=0 is an invariant. However, FI cannot prove the invariance of x=0 because x is not a conserved quantity in the system.C-c≺P-c.The premise of the rule P-c requires the existence of someα∈R[x], such thatLp(h)=αh(equivalently,Lp(h)∈〈h〉). In particular, the constant polynomial gives the premise of C-c. Thus,C-c≼P-c. To prove thatC-cP-c, consider the two-dimensional vector fieldp=(xy,x), we haveLp(x)=xy(or equivalentlyLp(x)∈〈x〉⊂R[x,y]) and hence conclude, using P-c, that x=0 is an invariant. However, C-c fails to prove this invariant as the required cofactor is not a scalar.□Lie≺Lie°andLie°≺Lie⁎.We already established thatLie≼Lie°(Proposition 8) andLie°≼Lie⁎(Proposition 7); we give two counterexamples to establish the strict inclusion.(I)LieLie°. Whenever the variety has a singularity, the proof rule Lie will fail.Lie°is tailored to prove invariance of equilibrium points in addition to regular points of the variety. For instance, forp=((−1+x1)x2,x2(1+x2)), Lie fails to prove thath=(−1+x1)2+(1+x2)2=0is invariant as the gradient∇hvanishes at(1,−1)andh((1,−1))=0. However, at(1,−1)we also havep1=p2=0, and hence the premise ofLie°is satisfied, and h=0 is proved to be an invariant under the flow ofp.(II)Lie°Lie⁎. In addition to equilibria,Lie⁎goes one step further and handles all singular points,x, where the vectorx+λpis in the varietyVR(h)for allλ∈R(that ish(x+λp)=0, for all λ). For instance, consider the polynomialh=x1x2x3, its singular locus is given by the three axesx1=x2=0,x1=x3=0andx2=x3=0. For the vector fieldp=(x1,x2,x3), the equilibrium point is at the origin(0,0,0), which obviously does not contain the entire singular locus of h. Thus,Lie°fails butLie⁎succeeds becauseh(x+λp)=0whenxis a point of one of the axes.□P-c≺DRIandLie⁎≺DRI.DRI is both necessary and sufficient [10], so we know thatP-c≼DRIandLie⁎≼DRI. To prove the claim it is left to show that(I)P-cDRI. Consider the following two-dimensional vector field:p=((−1+x1)(1+x1),(−1+x2)(1+x2)). The candidate invariant (given by the roots of the Motzkin polynomial)h=1−3x12x22+x14x22+x12x24=0cannot be proved using P-c, asLp(h)∉〈h〉. However, the invariance property may be proved using DRI. For this, we need to consider the second-order Lie derivative of h and we prove thatLp(2)(h)∈〈h,Lp(h)〉. Thus, the premise of DRI holds for N=2.(II)Lie⁎DRI. Consider the following three-dimensional vector fieldp=(−x2+x1(1−x12−x22),x1+x2(1−x12−x22),x3). We want to prove thath=(−1+x12+x22)2+x32=0is an invariant. In this case, the varietyVR(h)is exactly equal to the singular locus of h which is the two-dimensional unit circle−1+x12+x22=0. However, at all points of this unit circle, the vector fieldpis equal to(−x2,x1,0)≠0, which prevents us from usingLie⁎(becauseh((x1,x2,0)+λ(−x2,x1,0))≠0for someλ∈R). The rule DRI proves the invariance of h=0 with N=2.□To appreciate the difference between FI and Lie, let us note that while the condition in the premise of FI may seem strong (i.e. too conservative), singularities in the invariant candidate do not present a problem for FI, whereas the premise of Lie rules out such candidates altogether (see Fig. 7). Indeed, the proof rule Lie cannot prove that 0=0 (the whole space is invariant), whereas this is the most trivial case for FI.Proposition 25FIand Lie are incomparableFI≺≻Lie.(I)FILie. For the vector fieldp=(−2x2,−2x1−3x12), the equationx12+x13−x22=0is provable with FI but not Lie, see Fig. 7 (left).(II)FILie. For the vector fieldp=(x1−x13−x2−x1x22,x1+x2−x12x2−x23), the invariance of the limiting cyclex12+x22−1=0is provable with Lie but not FI, see Fig. 7 (right).□We now prove that Lie-based proof rules{Lie,Lie°,Lie⁎}, and Darboux-based proof rules{FI,C-c,P-c}are two distinct families of proof rules; that is, any Lie-based proof is deductively incomparable to any Darboux-based proof rule. The following lemma follows from the transitivity of the partial order.Lemma 26IfR1≼R2andR3≺≻R1, thenR2R3.Consider three proof rules R1, R2 and R3. IfR2≼R3, usingR1≼R2, one gets by transitivityR1≼R3, which contradicts the assumptionR3≺≻R1.□FI≺≻Lie⁎.SinceLie≼Lie°(Proposition 8) andLie°≼Lie⁎(Proposition 7),Lie≼Lie⁎. By Lemma 26, fromLie≼Lie⁎andFI≺≻Lie(Proposition 25), we obtainLie⁎FI. The following example proves thatFILie⁎: Consider the three-dimensional vector fieldp=(x2,−x1,0). The invariance of the equationx32+(−1+x12+x22+x32)2=0cannot be established usingLie⁎(the singular locus is a circle inR3), but is easily provable using FI asLp(h)vanishes.□FI≺≻Lie°.By Lemma 26, fromLie≼Lie°(Proposition 8) andFI≺≻Lie(Proposition 25), we getLie°FI. On the other hand, ifFI≼Lie°then, by transitivityFI≼Lie⁎(sinceLie°≼Lie⁎by Proposition 7), which contradictsFI≺≻Lie⁎(Proposition 27). Thus,FILie°, and the proposition follows.□Similarly, by substituting FI by Lie,Lie⁎by P-c, andLie°by C-c in Proposition 27 and 28 as well as their respective proofs, we show that:Proposition 29Lie≺≻P-candLie≺≻C-c.To complete the proof, we still need an example showing thatLieP-c. Consider the vector fieldp=(3(−4+x2),3+xy−y2), the proof rule Lie fails to prove that the equationh=−3+x2+2xy+6y2+2xy3+y4=0is invariant as the singular locus of h contains(−2,1)and(2,−1). However,Lp(h)=(6x−4y)hand therefore P-c proves that h=0 is an invariant equation.□The remaining cases follow from the results established above.Proposition 30Ford∈{C-c,P-c},ℓ∈{Lie°,Lie⁎},d≺≻ℓ.SinceFI≺d, ifd≼ℓ, thenFI≼ℓ. However,FI≺≻ℓ(Proposition 27 and 28). Thusdℓ. Similarly, sincel≻Lie, ifd≽ℓ, thend≽Liewhich contradictsd≺≻Lie(Proposition 29). Hencedℓand the proposition follows.□Provided that the invariant candidate has no singular points, Lie׳s criterion is known to be both necessary and sufficient to prove invariance properties of level sets [20, Theorem 28]. Also, FI characterizes invariant functions [23] but not all invariant equations. On the other hand, for algebraic differential equations, the differential radical criterion in DRI fully characterizes all invariant algebraic sets [10]. Thus, as established in Proposition 24, DRI increases the deductive power of both Darboux-based rules{FI,C-c,P-c}and Lie-based rules{Lie,Lie°,Lie⁎}, which form different families.In this section, we compare the deductive power of the proof rules{NSSBC,Nagumo,DI,LZZ},as well as their relationships to the proof rules for checking the invariance of algebraic sets.Proposition 32NSSBC≺Nagumo.The Nagumo theorem characterizes closed positively invariant sets under the flow of locally Lipschitz ODEs. In particular, this covers closed semi-algebraic sets and polynomial ODE. HenceNSSBC≼Nagumo. To see why the inequality is strict, consider any vector field with an invariant algebraic set (recall that algebraic sets are special closed semi-algebraic sets with empty interior). The proof rule NSSBC cannot work for such invariant sets precisely because it requiresLp(h)<0whenever h=0. In fact,h=0→Lp(h)=0is a necessary condition for any invariant algebraic set.□Nagumo≺LZZandDI≺LZZ.For semi-algebraic sets, the proof rule LZZ characterizes (arbitrary) invariant semi-algebraic sets for polynomial ODE. The Nagumo theorem only characterizes closed semi-algebraic sets. Hence the strict inequality. Similarly, DI gives only a sufficient condition and is therefore strictly less powerful than LZZ.□NSSBC≺≻DI.DINSSBC. Consider the systemp(x)=(−(x13+x22x1−x1−x2),−(x23+x12x2−x2+x1))and letS1≡(x1−13)2+x22−2≤0∧(x1+13)2+x22−2≤0, which is a positively invariant set under the flow of the system (see Fig. 9a). The invariance property cannot be proved using the rule DI, but is easily proved using NSSBC (and LZZ).NSSBCDI. Consider the systemp(x)=(x22,2)and letS2≡x2≥0∧x1≥0. Positive invariance of S2 is proved easily using either DI (and LZZ), but cannot be proved using NSSBC. Intuitively, this can be seen because at the origin the vectorp(0)does not point strictly into the interior ofS2≡max(−x2,−x1)≤0, sinceLp(−x1)=−x22|0=0(see Fig. 9b).□Nagumo≺≻DI.By Proposition 34 and Lemma 26,NagumoDI. In addition, the proof rule DI cannot be generalized by Nagumo since it can be applied to sets that are not necessarily closed or open, which is not the case with Nagumo.□In Fig. 5, one can see that the proof rules for algebraic sets are incomparable with NSSBC. This is precisely because invariant algebraic sets are ruled out all together by the premise of NSSBC which requires the vector field to point inward on the boundaries. Furthermore, because only algebraic sets are allowed in the conclusion of those proof rules, they cannot generalize NSSBC nor DI which can be apply more generally. Thus:Proposition 36Letℓ∈{FI,C-c,P-c,Lie,Lie°,Lie⁎,DRI}, thenℓ≺≻NSSBCandℓDI.The proof rule DI cannot generalize C-c, P-c, Lie ,Lie°,Lie⁎, and DRI. For the same reason FI cannot generalize those proof rules (cf. Section 6.1). Thus:Proposition 37Letℓ∈{C-c,P-c,Lie,Lie°,Lie⁎,DRI}, thenℓ≺≻DI.The generalizationFI≺DIis a straightforward consequence of DI: in fact, by definition, the proof rule DI lifts, in a conservative way, the simplest condition for a differentiable function to be positive or negative—namely by checking if its derivative is positive or negative respectively—to a finite boolean formula of such functions. Said differently, the premise of FI is identical to the premise of DI when used for an atomic formula of the form h=0.Remark 38The premises of the proof rules for algebraic sets could be used to work with a larger class of invariant sets, namely those of the formh≥0in addition to algebraic sets. For instance, ifLp(h)∈〈h〉, then necessarilyh≥0is an invariant of the system. In fact, the invariance of h=0 implies the invariance ofh⋈0for⋈∈{≤,<,≥,>}. Such extra proof rules do not bring any additional insight to the realm of proof rules depicted in Fig. 5 and are therefore not represented.In this section we assess the utility of performing square-free reduction of invariant candidates as a means of (i) increasing the deductive power of certain proof rules to be identified and (ii) simplifying problems passed to decision procedures for real arithmetic. Our results are summarized in Fig. 10for convenience.While Lie uses a powerful criterion that captures a large class of practically relevant invariant sets, it will fail for some seemingly simple invariant candidates. For instance, the condition in the premise of Lie will not hold when the goal is to prove thath=x2−6x+9=0is invariant, no matter what vector field one considers. The reason for this is simple:x2−6x+9factorizes into(x−3)2. The problem here lies in the polynomial h itself, rather than the real varietyVR(h). In fact,VR(h)is exactly the singular locus of h and the proof rule Lie fails because all points insideVR(h)are singular points. More generally, the chain rule implies∇hk·p=khk−1∇h·p, which has the consequence that any polynomial h which is not square-free will have vanishing gradient at the real roots of factors with multiplicity greater than 1.One can eliminate such annoying instances by reducing h to square-free form, which is a basic pre-processing step used in computer algebra systems. The square-free reduction of a polynomial h may be computed as follows:(12)SF(h)=hgcd(h,∂h∂x1,…,∂h∂xn).Intuitively, in performing square-free reduction we hope to shrink the singular locus of the original polynomial. IfSL(SF(h))is the empty set (which is the case forh=x2−6x+9in the example given above), the proof rule Lie applies toSF(h)but not to h. In general,SF(h)may satisfy the assumptions of the proof rulesLie°orLie⁎, where h fails to do so. It is always sound to conclude that h=0 is invariant from the knowledge thatSF(h)=0is invariant, since real varieties remain unaltered under square-free reduction of their defining polynomials [5], i.e.VR(h)≡VR(SF(h)). Thus, replacing h withSF(h)in the premise of Lie,Lie°andLie⁎does not compromise soundness (it us a use of the generalization proof rule [21]) and enlarges the class of polynomials that these proof rules can work with.Proposition 39For allℓ∈{Lie,Lie°,Lie⁎},ℓ≺SFℓ.This result is unsurprising when one understands that Lie-based proof rules use geometric concepts to prove invariance properties of sets. In fact, the square-free reduction removes some purely algebraic oddities that prevent the geometric condition from holding true when checked syntactically by a machine.In addition to increasing the deductive power, the square-free reduction reduces the total degree of the polynomial in the invariant candidate and hence serves to reduce the complexity of deciding the conditions in the premise (cf. discussion in Section 8). In our implementation, we adopt the convention that invariant candidates supplied to Lie and its generalizations are square-free reduced in a pre-processing step.Unlike Lie-based proof rules, it is perhaps surprising that using square-free reduction as a pre-processing step for the proof rules FI and C-c, denotedSFFIandSFC-crespectively, does not, in general, increase the deductive power and may even lead to properties that are no longer provable.Proposition 40FI≺≻SFFI.(I)FI⊀SFFI. The polynomialh=x2yis an invariant function for the vector fieldp=(∂h∂y,−∂h∂x)=(x2,−2xy), thus FI proves the invariance of h=0. However,SF(h)is not an invariant function for the same vector field, sinceLp(SF(h))=Lp(xy)=−x2y≠0, thusSFFIfails to prove the invariance of h=0.(II)SFFI⊀FI. Similarly, the polynomialh=xyis an invariant function for the vector fieldp=(∂h∂y,−∂h∂x)=(x,−y), thusSFFIproves the invariance ofx2y=0, sinceSF(x2y)=h. However, FI fails to prove the invariance ofx2y=0, becauseLp(x2y)=x2y≠0.□Proposition 40 may at first seem counter-intuitive. However, the criterion in the premise of FI is different as it proves that the candidate h is an invariant function. In performing square-free reduction on h, one in general obtains a different function,SF(h), which need not be conserved in the system if h is conserved or, conversely, may be conserved even if h is not.The same observation holds for C-c as the SF reduction does not preserve the constant rate exponential decrease (or increase).Proposition 41C-c≺≻SFC-c.(I)C-c⊀SFC-c. The proof rule C-c proves the invariance ofh=x2y=0for the vector fieldp=(x2,y(1−2x))asLp(h)=1h. However, C-c cannot proveSF(h)=0, sinceLp(SF(h))=Lp(xy)=(1−x)SF(h).(II)SFC-c⊀C-c. For the same h, C-c proves the invariance ofSF(h)=0for the vector fieldp=(x2,y(1−x))asLp(SF(h))=Lp(xy)=1SF(h). However, without the SF reduction C-c alone fails to prove the invariance of h=0 for the consideredp, asLp(h)=(x+1)h.□After Proposition 40 and 41, one expects P-c to be incomparable with its square-free counterpart. Surprisingly, the proof rules P-c andSFP-c(which applies P-c after the square-free reduction) are in fact equivalent. This follows from the fact that a polynomial is Darboux for a vector fieldpif and only if all its factors are also Darboux for the same vector field. Our findings are stated in Proposition 42 and its corollary Proposition 43.55See [8, Proposition 84] for a similar proposition over the complex numbers.Proposition 42Leth=q1m1…qrmrdenote the decomposition of the polynomial h into irreducible (over the reals) factors, qi. Then, h is Darboux forpif and only if, for all i, qiis Darboux forp.If, for all i, the polynomial qiis Darboux forp, then qidividesLp(qi), i.e.Lp(qi)qi∈R[x1,…,xn]. Therefore, using the chain rule,(13)Lp(h)=Lp(q1m1…qrmr)(14)=∑i=1r(miLp(qi)qimi−1∏j≠iqjmj)(15)=∑i=1rmiLp(qi)qimi−1hqimi(16)=h∑i=1rmiLp(qi)qi(17)∈〈h〉,and h is also Darboux forp.If h is Darboux forp, then h dividesLp(h)andLp(h)his a polynomial. Recall thatSF(h)=q1…qr. Using Eq. (13), one gets(18)Lp(h)hSF(h)=∑i=1rmiLp(qi)qiSF(h).For a fixed i, qidividesSF(h), it thus divides the left hand side of Eq. (18). Moreover, qidividesSF(h)qj, for allj≠i. It thus necessarily dividesmiSF(h)qiLp(qi). If qidividesSF(h)qi, then there existsj≠isuch that qidivides qj, which contradicts the fact that all factorsq1,…,qrare irreducible. Thus, qidividesLp(qi)andLp(qi)∈〈qi〉.P-c~SFP-c.The proof rule P-c proves the invariance of h=0 forpif and only if the polynomial h is Darboux. However, by Proposition 42, h is Darboux if and only ifSF(h)is also Darboux. Therefore,SFP-ccould be used equivalently to prove the invariance of h=0.□The conditionLp(h)∈〈SF(h)〉—which is weaker thanLp(h)∈〈h〉—is not sufficient to prove the invariance of h=0. It is therefore an unsound proof rule. Consider the polynomialh=(−1+x2)2and the 1-dimensional vector fieldẋ=x. AlthoughLp(h)=4(−1+x2)x2∈〈−1+x2〉=〈SF(h)〉, the equation h=0 is not invariant, however, becausex(t)=±et. Notice that the proof rule P-c (with or without the square-free reduction) is unable to prove or disprove the invariance of h=0.Square-free reduction cannot increase the deductive power of the proof rule DRI because its premise is necessary and sufficient to prove invariance of real algebraic sets, which is unaffected by applying SF reduction. However, the computational impact of using square-free reduction with DRI remains an interesting question. Empirically, we observed a better performance of DRI when the SF reduction is applied first. In addition to lowering the degrees of the involved polynomials (as it did for Lie-based proof rules), we observed that the orderNSFforSF(h)is always lower than the order N for h. We, therefore, conjectureNSF≤N. However, we identified an example (cf. Example 45 below) for which square-free reduction resulted in a significant (×100) computational overhead due to the ideal membership checking (which we perform using Gröbner bases with reverse lexicographic monomial ordering).In our implementation of DRI, called DRIopt in the sequel, we use the square-free reduction only as a pre-processing step for the quantifier elimination problems in the premise of DRI.Example 45Consider the following vector fieldp:x1̇=−24(x1+x3)(x36−3x12x22x32+x12x24+x14x22)x4x5(x72+x2−12341)16(x4x52−12x6x8)11,x2̇=144(x1+x3)(x36−3x12x22x32+x12x24+x14x22)(x72+x2−12341)16x8(x4x52−12x6x8)11,x3̇=−32(x1+x3)(x36−3x12x22x32+x12x24+x14x22)x7(x72+x2−12341)15(x4x52−12x6x8)12,x4̇=144(x1+x3)(x36−3x12x22x32+x12x24+x14x22)x6(x72+x2−12341)16(x4x52−12x6x8)11,x5̇=(x1+x3)(2x1x24+4x13x22−6x1x32x22)(x4x52−12x6x8)12(x72+x2−12341)16+(x36−3x12x22x32+x12x24+x14x22)(x4x52−12x6x8)12(x72+x2−12341)16,x6̇=(x1+x3)(2x2x14+4x23x12−6x2x32x12)(x4x52−12x6x8)12(x72+x2−12341)16+16(x1+x3)(x36−3x12x22x32+x12x24+x14x22)(x4x52−12x6x8)12(x72+x2−12341)15,x7̇=(x1+x3)(6x35−6x12x22x3)(x4x52−12x6x8)12(x72+x2−12341)16+(x36−3x12x22x32+x12x24+x14x22)(x4x52−12x6x8)12(x72+x2−12341)16,x8̇=12(x1+x3)(x36−3x12x22x32+x12x24+x14x22)x52(x72+x2−12341)16(x4x52−12x6x8)11,and leth1=(x4x52−12x6x8)12h=(x1+x3)(x36−3x12x22x32+x12x24+x14x22)(x72+x2−12341)16h1.Attempting to prove that h=0 is invariant under the flow of this system using DRI we observe running time of under 2 seconds. Reducing h to be square-free results in DRI running for over 8 minutes before it is able to prove the result. In this case, square-free reduction introduces a performance penalty when checking for polynomial ideal membership (which is performed using Gröbner bases with reverse lexicographic monomial ordering). We see that one needs to be careful when using square-free reduction with DRI because even though it is reasonable to expect better performance due to lower degrees in square-free reduced polynomials, performing this step may make the Gröbner basis computation more difficult for some problems.Notice that Proposition 42 does not have an analogue for DRI. In other words, if a polynomial equation h=0 is invariant forp, its irreducible factors need not define invariant equations themselves. Geometrically, this means that if a variety is invariant under the flow ofp, its irreducible components need not be invariants under the flow ofp. For instance, consider the irreducible polynomialsq1=y−1andq2=x2+(y−1)2. The equationq1q2=0which is equivalent to y=1, is invariant forp=(1,0), since the premise of the proof rule DRI holds true for N=3. However, the equationq2=0, which is equivalent tox=0∧y=1, is not an invariant equation forp.The reason for the invariance ofq1q2=0, which is equivalent toq1=0∨q2=0, stems from q1 not from q2.Similar to square-free reduction for invariant polynomial equations, one may sometimes remove roots of multiplicities greater than 1 from polynomial inequalitiesp≤0, thereby simplifying their description and removing singularities on their boundary. To do this, we will require some definitions, due to Dolzmann and Sturm (see [7]).Definition 47Square-free decomposition [7]Given a polynomialh∈Z[x1,…,xn], the square-free decomposition is given by(h1,…,hn)s.t.∏i=1nhii=h,where all hiare square-free and relatively prime, i.e.gcd(hi,hj)=1.Note that while superficially similar to square-free reduction, the square-free decomposition is quite different. To see this, note that the exponent in the product matches the index. Thus, the order in a square-free decomposition encodes the exponent to which the factor hiis raised in the original polynomial h, i.e. the factors raised to odd powers will have odd index in the decomposition; respectively for even exponents.Definition 48Parity decomposition [7]Given a polynomialh∈Z[x1,…,xn]with square-free decomposition(h1,…,hn), the parity decomposition is given by(∏oddihi,∏evenihi).Leth∈Z[x1,…,xn]and let(ho,he)be the parity decomposition of h. Then the following equivalences hold:1.h=0≡RSF(h)=0,h≠0≡RSF(h)≠0,h>0≡Rhohe2>0≡Rho>0∧he≠0,h≥0≡Rhohe2≥0≡Rho≥0∨he=0,h<0≡Rhohe2<0≡Rho<0∧he≠0,h≤0≡Rhohe2≤0≡Rho≤0∨he=0.The resulting (rightmost) equivalent formulas are guaranteed to only feature square-free polynomials and are called square-free equivalents.For a semi-algebraic set S given by a quantifier-free formula of real arithmetic, we defineSFEQ[S]to be the square-free equivalent formula obtained by applying the equivalences in Proposition 49 to each atomic formula in S. Using the SFEQ reduction as a pre-processing step for the proof rule NSSBC is denotedSFEQNSSBCand accordingly forSFEQDIandSFEQNagumo.Theorem 50SFEQNSSBC≻NSSBC.IfLp(h)<0is true when h is an active component (h=0), it is necessarily the case that h is square-free. ThusSFEQ(h)=h(which then equalsSF(h)) and, therefore,SFEQNSSBC≽NSSBC. Letẋ=p(x)=(−x1,−x2)and consider the setS≡(x12+x22−1)3≤0. Applying NSSBC fails to prove the positive invariance property. Computing the order parity decomposition, we getSFEQ(S)≤0≡(x12+x22−1)≤0, for which positive invariance under the flow ofp(x)is proved easily using NSSBC.□Let us consider a system with an unstable limit cycle around a stable origin:ẋ1=−x1−x2+x1x22+x13,ẋ2=x1−x2+x12x2+x23.Suppose we wanted to show that the set of states satisfying the following inequality is positively invariant:(x12+x22−1)2(x12+x22−12)3≤0.Let us refer to this set ash≤0. As can be seen from the phase portrait in Fig. 11, the seth≤0is indeed positively invariant under the flow; however, h is not square-free, buth≤0has the following square-free equivalent:SFEQ[(x12+x22−1)2(x12+x22−12)3≤0]≡(x12+x22−12≤0∨x12+x22−1=0).This is an example of a positively invariant set described by a non-strict polynomial inequality where applying NSSBC will fail. In fact, the barrier certificate approach [26] breaks down completely, i.e. no barrier certificate exists for showing positive invariance of this set.It is perhaps remarkable is that the output ofSFEQ(h)≤0yields two sub-problems, both of which we can solve using only sufficient proof rules: one is a non-strict inequalityx12+x22−12≤0for which one can apply the method of strict barrier certificates to prove its positive invariance; the other is a polynomial equality defining a smooth invariant curvex12+x22−1=0, which can also be handled (using e.g. the proof rule Lie).By performing the above steps one proves that both disjuncts are positively invariant under the flow, and hence their disjunction is also positively invariant, concluding the proof thath≤0describes a positively invariant set. A formal proof of this property within a proof calculus needs an inference rule such as NSSBC, some appropriate rule for equational invariants, such as e.g. Lie, P-c or DRI, as well as the following special case of the generalization rule [21]:(Inv∨)S1→[ẋ=p(x)]S1S2→[ẋ=p(x)]S2S1∨S2→[ẋ=p(x)](S1∨S2).SFEQDI≺≻DI.Corollary to Proposition 40, since FI is a special case of DI andSFEQ[h=0]≡SF(h)=0.□SFEQNagumo~Nagumo.Nagumo is necessary and sufficient for proving positive invariance of closed sets and SFEQ returns a description of an equivalent set (over the reals). Thus, a closed set S is positively invariant using Nagumo if and only if an equivalent closed setSFEQ[S]is positively invariant using Nagumo.□SFEQLZZ~LZZ.Elementary, since LZZ is necessary and sufficient for proving positive invariance andSFEQ[S]gives an equivalent set inRn.□To complement the theoretical deductive power comparison with a practical provability study, we empirically compare the running time performance of all the proof rules discussed in this paper on a heterogeneous collection of benchmarks (76 for algebraic sets and 20 for semi-algebraic sets).Many premises of the considered proof rules are universally quantified sentences over the theory of real arithmetic. The purely existential fragment of real quantifier elimination has been shown to exhibit singly exponential time complexity in the number of variables [1]. However, in practice this has not yet led to an efficient decision procedure, so typically it is much more efficient to use CAD [3,4], which has doubly-exponential running time in the number of variables. Theoretically, the upper bound on the complexity of deciding a sentence in the universal theory ofRis given by(sd)O(n), where s is the number of polynomials in the formula, d their maximum degree and n the number of variables [1].Notice, in addition, that the proof rules, C-c, P-c, DRI and LZZ involve reasoning about multivariate polynomial ideal membership, which is an EXPSPACE-complete problem overQ[18]. Gröbner basis algorithms allow us to perform membership checks in ideals generated by multivariate polynomials. Significant advances have been made in algorithms for computing Gröbner bases [9] which in practice can be expected to perform very well. Our experimentation relies on the implementation of the CAD algorithm in Mathematica (version 10.0.1).The examples we used originate from a number of sources—many come from textbooks on Dynamical Systems; some from the literature on formal verification of hybrid systems; others have been hand-crafted to tease out sweetspots of certain proof rules. The most interesting experimental question we seek to address here is whether the greater generality of the more deductively powerful proof rules also comes at a substantially higher computational cost when assessed across the entire spectrum of examples. As a complement to the theoretical deductive power relationships between the different proof rules (Section 6), we also seek to identify some nuances in the complexity of the conditions in the premises, which the coarse-grained complexity bounds miss, being highly sensitive to the number of variables.The proof rule Nagumo is intractable since it requires computing the contingent cone to a given semi-algebraic set. All algebraic sets are of the form h=0, for which LZZ and DRI will ultimately result in the same conditions; only DRI and its optimized implementation DRIopt(see Section 7.3) will be considered in the benchmarks.66We refer the reader to Ghorbal et al. [11] for a more detailed discussion of the differences and similarities between the Liu, Zhan & Zhao characterization [16] and the differential radical characterization [10].We have also established that NSSBC cannot discharge any invariant algebraic set and that DI applied to candidates of the form h=0 is equivalent to FI. Thus, two comparisons are of interest: the set of proof rules for algebraic sets (Section 8.1) and the set of poof rules for semi-algebraic sets (Section 8.2).From our experiments it emerges that the proof rules exhibit different (and at times surprising) trade-offs between generality and efficiency.In this section, the prefix SF is implicit for all Lie-based proof rules. We consider 4 equally sized classes of invariant sets: (1) 24 smooth invariants, where Lie is both necessary and sufficient, (2) 17 isolated equilibria as trivial (for humans, not machines) equational invariants for which bothLie°andLie⁎provide necessary and sufficient conditions, (3) 17 other singularities and high integrals, (4) 18 functional invariants, where FI is necessary and sufficient. Fig. 12compares the number of invariant varieties that each rule could prove within 60 seconds. The vertical axis shows cumulative time spent on the problems. All runs were performed on an Intel Core i5 1.7GHz machine with 4Gb RAM. Generally, we observe DRI performing very well across the entire spectrum of problem classes. This is very encouraging, but also at first sight appears to defy intuition since it implies that one does not necessarily sacrifice performance when opting to use a more deductively powerful rule. In this graph, we also see that overallLie°appears to offer an interesting compromise between deductive power and efficiency—it is able to prove a significant body of problems that are out of scope for Lie, while avoiding the complexity penalty which affectsLie⁎(due to introducing an extra variable).A more careful analysis of the benchmarks reveals interesting relationships that are obscured in the “big picture”; to see them, one needs to consider the individual classes of invariants for which some of the sufficient conditions in the rules are in fact necessary and sufficient. Together with DRI, this yields two decision procedures for each class and allows us to focus only on running time performance and assess the practicality of each proof rule. In Fig. 13, we observe the rulesLie°andLie⁎performing very well in proving invariance of isolated equilibria. This is to be expected asLie°in particular was formulated with this problem class in mind. It is interesting that DRI remains highly competitive here; though its performance is slightly worse in our set of benchmarks.It is clear that because proof rulesLie°andLie⁎generalize Lie, they will be able to prove every problem in the smooth invariant benchmarks. The running time performance of the three rules is almost identical, with Lie offering a slight speed-up over its generalizations. The premises ofLie°andLie⁎impose conditions on states in the singular locus, which is the empty set for smooth invariants; this, in practice, appears to be slightly more expensive than checking an equivalent property that the gradient is non-vanishing on the variety (as in the premise of Lie).The proof rules FI and P-c, corresponding to conditions with historical origins in the study of integrability of dynamical systems, can be seen to perform very well in proving functional invariants, while performing very poorly in benchmarks for isolated equilibria. In proofs of smooth invariants their behaviour is radically different, with FI proving only a handful of examples and P-c succeeding in proving most of the problems very efficiently. This can be explained by the fact that P-c generalizes FI and is therefore more deductively powerful. P-c appears slightly slower at proving functional invariants, but shows very impressive running time performance for some problems from the smooth invariant benchmarks, where it is the fastest proof rule for many of problems where it succeeds. Comparing running time performance with DRI, we see that DRI is only slightly slower at proving functional invariants than FI and P-c. Again, the performance gap between DRI and the two rules appears to be insignificant for most problems. Theoretically, when P-c proves an invariant, DRI applies conditions that are identical to the premise of P-c. Hence, although DRI is a generalization, this does not come at a significant extra cost for the classes where P-c shows good running time performance. The slightly greater running time of DRI compared to that of P-c can be accounted for by the fact that in our implementation DRI computes the Gröbner basis for every order N including for N=1 where such computation is unnecessary.For functional invariants, FI (i.e. the equality fragment of DI) benefits from the fact that the condition in its premise, which requires to show that the Lie derivative evaluates to zero everywhere, is equivalent to showing that the Lie derivative is the zero polynomial, which can be checked very efficiently by symbolic computation, without a decision procedure for real arithmetic.In the examples featuring singularities and high integrals in the benchmarks we see DRI as the clear winner, simply because there was no other rule that was tailored to work on this class. Indeed, the structure of these invariant sets can be rather involved, making it difficult to characterize in a single proof rule; however, sometimes it is possible to exploit the structure of high integrals inside a proof system and arrive at efficient proofs that outperform DRI [11].It is not surprising that DRI should ultimately overtake all the other rules in terms of deductive power (it is, after all, necessary and sufficient); what is remarkable is that the performance we observe for DRI is often very competitive to that of the sufficient rules when they also succeed at a proof. This observation suggests a possible strategy for proof search in a proof system: give precedence to DRI and switch to other sufficient rules if DRI takes longer than some time-out value. The rationale behind this decision is our empirical observation that DRI performs consistently well on all problem classes we considered, but it is also sometimes possible to save time by using a proof rule which is less deductively powerful. It is important to note here that the overall proof system benefits from including the sufficient proof rules, rather than relying solely upon DRI.In Fig. 14we compare the running time performance of the proof rule LZZ versus the sufficient conditions DI (Fig. 14a) and NSSBC (Fig. 14b). Two different sets of 10 benchmarks each were selected to exploit the sweetspots of DI and NSSBC respectively. We observe that whenever DI can prove invariance in the problem at hand, it is much faster than LZZ. This is expected: the quantifier elimination problems required by the proof rule LZZ are much more involved than those found in the premise of DI. This should be balanced by the fact that DI is more restrictive. In the set of benchmarks for NSSBC, one can observe that DI does not prove any of the problems. In Fig. 14b, one can also notice that LZZ still performs well compared to NSSBC. Indeed, the premise of the proof rule NSSBC can involve complicated real arithmetic problems that are sometimes even more difficult than those appearing in the premise of the proof rule LZZ. Generally, the size of the conditions in the premise of NSSBC grows rapidly with the size of the formula describing the invariant candidate. The distribution property in Theorem 19 avoids this problem in LZZ.

@&#CONCLUSIONS@&#
