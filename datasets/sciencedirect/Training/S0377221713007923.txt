@&#MAIN-TITLE@&#
Approximation algorithms for deterministic continuous-review inventory lot-sizing problems with time-varying demand

@&#HIGHLIGHTS@&#
Continuous-review inventory problem with time-varying parameters.First algorithm with guarantee of performance for this problem.Extensions to backlog situations, deteriorating items, finite production rate and non-linear holding costs.

@&#KEYPHRASES@&#
Inventory theory,Approximation algorithms,Continuous-review policy,Deterministic model,

@&#ABSTRACT@&#
This work deals with the continuous time lot-sizing inventory problem when demand and costs are time-dependent. We adapt a cost balancing technique developed for the periodic-review version of our problem to the continuous-review framework. We prove that the solution obtained costs at most twice the cost of an optimal solution. We study the numerical complexity of the algorithm and generalize the policy to several important extensions while preserving its performance guarantee of two. Finally, we propose a modified version of our algorithm for the lot-sizing model with some restricted settings that improves the worst-case bound.

@&#INTRODUCTION@&#
The Economic Order Quantity (EOQ) problem deals with a single location that faces a demand of constant rate λ. Placing an order incurs a fixed order cost K and a linear order cost c while holding an inventory unit incurs a cost h per unit of time. The goal is to determine a continuous-review policy of minimal cost. This problem has been solved for a long time by Harris (1913) in the early twentieth century and popularized by Wilson (1934). Since then, many extensions and variations have been studied including production capacity, backorders, perishability, multi-echelon systems (see e.g. Zipkin (2000) for a state of the art).One of the important limitations of the EOQ model is the assumption of time-independent parameters. In particular, it assumes a constant demand rate λ, which is not realistic in many practical situations. Many authors relax this assumption and consider a more general model with time-varying demand rate λ(t). However they only solve the problem under very restrictive assumptions. Resh et al. (1976) consider a time proportional demand rate (λ(t)=αt) with time-independent cost parameters. Later, Donaldson (1977) proposes an optimal policy for a linear demand rate (λ(t)=αt+β) and Barbosa and Friedman (1978) generalize to power-form demand rates (λ(t)=αtβ, β>−2). This result is then extended by Henery (1979) to increasing log-concave demand patterns and Hariga (1994) who studies a more general model for any monotonic log-concave demand rate when shortages are allowed. Finally, Henery (1990) focuses on non-monotonic demand patterns in the special case of cyclic demands.These papers use a similar general approach that consists in finding the optimal policy for a fixed number of orders over the planning horizon, then to determine the optimal number of orders minimizing the total cost. This concept has been studied and generalized by Benkherouf and Gilding (2009), who show that the optimal cost over a finite planning horizon is a convex function of the number of orders. However, this method requires specific properties on the cost function and therefore the papers mentioned above restrict their attention to specific demand patterns and time-independent cost parameters. There is no general technique to determine an optimal continuous-review policy for time-varying parameters without the restrictive assumptions discussed above.As the problem is difficult for more general demand patterns, the literature proposes several heuristics such as the greedy (or myopic) approach. Silver (1979) introduces a heuristic where the length of a replenishment cycle is chosen such that the average cost is minimized (locally) on the replenishment cycle. This heuristic is inspired from the well known Silver and Meal (1973) heuristic designed for a periodic-review setting. Another heuristic, widely used in practice, consists of averaging the demand rate and apply the EOQ formula with the average demand to compute the order times. Goyal and Giri (2003) consider an extension of Silver (1979) with backorders and time-varying demand rate λ(t), production rate μ(t) and deterioration rate θ(t). They also use a greedy approach, optimizing the average cost on each cycle rather than globally. Many other heuristics and extensions have been considered in the literature. We refer the reader to Goyal and Giri (2001) and Bakker et al. (2012) for a review of deteriorating-inventory models with time-varying demand and to Teng et al. (2007) for some references on the Economic Production Quantity (EPQ) model with time-varying demand.An important heuristic discretizes the time horizon and use dynamic programming techniques to solve the corresponding periodic-review problem. Indeed, there exists several polynomial time algorithms that are optimal for the periodic-review lot-sizing problem. In the discrete time version, the planning horizon is divided into n periods. In each period a demand occurs and an order can be placed to replenish the stock. Wagner and Whitin (1958) present an algorithm of complexity O(n2), while Aggarwal and Park (1993) propose a O(n) algorithm to solve this problem using Monge arrays. However, it is very unlikely that the optimal solution for the discretized problem matches an optimal policy for the original continuous-review version.More generally, the previous heuristics have an important drawback: They can perform arbitrarily bad (i.e. no guarantee of performance has been proven). Even in the periodic-review setting, Axsäter (1982) shows that the heuristic of Silver and Meal (1973) can perform arbitrarily bad. That is, on some instances, the cost of the heuristic is arbitrary large compared to the cost of the optimal policy. Similarly, the EOQ heuristic (that averages the demand and uses the EOQ formula) is also shown to perform arbitrarily bad (see Bitran et al., 1984), even if the average demand is recalculated whenever an order is placed.In this paper, we aim to derive tractable policies for the continuous lot-sizing problem with time-varying parameters that have provable performance guarantees. A policy is said to have a performance guarantee (or a worst-case guarantee) of α if its cost is at most α times the cost of an optimal policy. In the periodic-review setting with time-varying demand, Axsäter (1982) shows that a policy that balances holding and set-up costs in each replenishment cycle has a performance guarantee of two. Bitran et al. (1984) extend the results of Axsäter to the case with time-varying holding costs. Recently, Van den Heuvel and Wagelmans (2010) have proven that in fact this worst-case guarantee cannot be improved for online heuristics, i.e. procedures that use a forward induction mechanism and cannot modify their past ordering periods. In addition, the authors propose a systematic way to construct problem instances for which such heuristics reach their worst-case bound.In this paper, we apply the ideas of cost balancing introduced by Bitran et al. (1984) to the continuous-review problem and prove that the performance guarantee of two remains valid for this problem. We then show that the ideas developed are quite generic and can be extended to several important models from the inventory literature (production rate, deterioration rate, non-linear holding costs, models with shortages, time-varying order costs) while preserving the performance guarantee. We also improve the performance guarantee to 3/2, with some additional assumptions.Note that Hariga (1996) applies a similar cost balancing technique to the time-varying demand model with shortages and compares its performances to several other heuristics widely used in practice. Although his study presents numerical experiments and compare the performances of the different techniques, it focuses on time-independent cost parameters. Moreover, the theoretical performance and complexity are not discussed in his paper. Thus, to the best of our knowledge, this paper is the first to derive algorithms and prove their guarantee of performance for lot-sizing problems with time-varying parameters in a continuous-time setting.The rest of the paper is organized as follows: in Section 2, we formally introduce the basic lot-sizing problem and useful notations to describe the solutions and prove their guarantee. Section 3 explains how to adapt the balancing policy of Bitran et al. (1984) for a continuous-time setting and prove that the resulting policy preserves the performance guarantee of 2. In Section 4, we introduce several extensions to the lot-sizing model and show how the balancing algorithm can be modified to solve them. Finally, we generalize the concept of cost balancing to present a new policy for the lot-sizing model and prove its worst-case guarantee is 1.5 in Section 5.We consider a single location that faces a continuous demand with rate λ(t) at time t. We denote byΛ(s,t)=∫stλ(u)duthe cumulated demand over [s,t]. Holding an inventory unit at time t incurs a cost h(t) per unit of time. We assume that λ(·) and h(·) are piece-wise continuous functions. Placing an order at time t incurs a fixed order cost (or set-up cost) K(t) and a linear order cost c(t).The inventory level at time t is denoted by x(t). The inventory level at time 0, before placing the first order, is denoted by x0. For the majority of the models presented in this paper, it is dominant to place the first replenishment at time t0 such that x(t0)=0 and λ(t0)>0. Hence we will assume w.l.o.g. that the following initial conditions (IC) holds, unless explicitely said otherwise.(IC)x0=0λ(0)>0In what follows, a policy is defined as a set of rules to determine the ordering times and quantities for each instance of the problem. The objective is to find a policy minimizing costs over a finite horizon [0,T] while satisfying all the demands. In particular, a policy that achieves the lowest possible cost for any instance of the problem is said to be optimal.Without loss of generality, we assume that the procurement leadtime is null: All demands being deterministic, a deterministic positive leadtime simply shifts the decision earlier in time. We now introduce some useful notations and concepts for the rest of the paper. Let xp(u) be the inventory level at time u, under some policy P and letCp(s,t)be the cost incurred by a policy P over (s,t]. More precisely,Cp(s,t)includes holding cost∫sth(u)xp(u)duand set-up costs over (s,t], excluding the set-up cost at time s, if any. Then, for any sequence a0=0<a1<⋯<an+1=T, the total costCpof policy P over the whole time horizon can be decomposed as(1)Cp=δ0PK(0)+Cp(0,T)=δ0PK(0)+∑i=0nCp(ai,ai+1)whereδ0Pis equal to 1 if P orders at time 0 and 0 otherwise. Notice that when condition (IC) is satisfied and policy P is feasible, we have necessarilyδ0P=1. Furthermore since intervals (ai,ai+1] partition the time horizon, Eq. (1) partitions the cost incurred by any policy according to the sequence (ai)i=0,…,n+1. In particular, the following proposition holds.Proposition 1Let π be a feasible policy for the continuous-review problem and let 0=a0<a1<⋯<an<an+1=T be a sequence of points in time. Ifδ0π⩽δ0PandCπ(ai,ai+1)⩽αCp(ai,ai+1)for all i=0,…,n and all feasible policy P, then π has a performance guarantee of α.Given a policy P, a (replenishment) cycle (s,t] is defined as a time interval such that an order is placed at time s, an order is placed at time t>s and no order is placed in between. We say that a policy satisfies the Zero Inventory Ordering property, or is ZIO, if it orders only when its inventory level is zero. Note that under a ZIO policy P, the quantity ordered at the beginning of a cycle (s,t] is exactly Λ(s,t), the cumulated demand over the cycle. Moreover, the inventory level can be easily expressed in cycle (s,t] as xp(u)=Λ(u,t). Hence the cumulated holding cost H(s,t) of a ZIO policy over a cycle (s,t] can be simply expressed as an integral of holding cost and demand functions.H(s,t)=∫sth(u)Λ(u,t)duNote that since h(·) and Λ(·,·) are both nonnegative piecewise continuous functions, H(s,·) is a nondecreasing continuous function for all s.In this section, we present the central idea of our algorithm. Roughly, the main concept is to balance in each replenishment cycle the holding costs with the fixed order cost. For ease of understanding, we first make similar assumptions as Bitran et al. (1984) who have investigated a periodic-review version of this problem. More precisely, we assume that the fixed order cost and the linear order cost are time-independent, that is K(t)=K and c(t)=c for all t∈[0,T]. These assumptions will be relaxed in Section 4. Notice that without loss of generality, we can assume c=0 as any policy incurs a linear order cost of exactly cΛ(0,T) over the planning horizon to satisfy all the demands. Throughout the remainder of this section, we restrict our attention to policies that respect the Zero Inventory Ordering (ZIO) property, as it is dominant for the model we are interested in.The concept of cost balancing is well known in the inventory literature and can even be found in the classical EOQ problem, where all parameters are time-independent. Indeed, it is well known that for this special case the optimal policy balances exactly the holding costs with the order costs.In the time-varying setting, we introduce the balancing policy, denoted BL in what follows, which balances in each cycle the two parts of the cost discussed above. The BL policy is inspired from the periodic-review policy proposed by Axsäter (1982) and Bitran et al. (1984). In fact, it is a ZIO policy whose order times are determined by a forward induction as follows: A first order is placed at the last moment when the inventory is nonnegative. If the BL policy places an order at time s, the next order time is then defined as the last time t such that(2)H(s,t)⩽KRecall that H(s,t) represents the holding cost incurred by a ZIO policy over cycle (s,t]. As H(s,·) is a nondecreasing continuous function and H(s,s)=0, inequality (2) is tight for at least one point in [s,T] if and only if H(s,T)⩾K. When the latter condition is not satisfied then s is the last order time of the BL policy and the quantity ordered at s is Λ(s,T), such that all the remaining demand is ordered at s. More precisely, we define the BL policy as follows:Definition 1The BL policy is the ZIO replenishment policy whose order times s1<s2<⋯<snare given by Algorithm 1.BL policyset s1=0set n←1whileH(sn,T)⩾Kdosn+1←max {t⩽T:H(sn,t)=K}n←n+1end whilereturn (s1,…,sn)Since the BL policy is ZIO, it is completely defined by the vector of order times (s1,…,sn). By convention we set sn+1=T. Then for i⩾1, the quantity ordered by the BL policy at time siis exactly the cumulated demand over [si,si+1], i.e. Λ(si,si+i).Remark 1Since Algorithm 1 uses a forward induction mechanism that does not modify past decisions, the procedure can easily be applied in a similar fashion to problems with an infinite or a rolling time horizon.The BL policy is interesting for its simplicity and for the quality of the solution obtained. In particular, we show in this section that the cost of the BL policy is at most twice the cost of an optimal policy. We first present a lower bound on the cost incurred by any policy between two instants s<t:Lemma 1For any instants s<t and any feasible policy P, we haveCp(s,t)⩾min{H(s,t),K}.If policy P places an order on (s,t], clearlyCp(s,t)⩾K. If no order is placed on (s,t], the inventory level xp(s) of policy P at instant s is at least Λ(s,t) to prevent stockout on [s,t]. It implies that for all u∈(s,t],xp(u)⩾Λ(u,t) and thusHp(s,t)=∫sth(u)xp(u)du⩾∫sth(u)Λ(u,t)du=H(s,t). The results follows.□We now use this result to state and prove the following theorem on the performance guarantee of the BL policy:Theorem 1For piece-wise continuous functions λ(·) and h(·) and constant functions K(·) and c(·), the BL policy has a worst-case guarantee of two. That is, the cost incurred by the BL policy is at most twice the cost of an optimal policy.Let P be a feasible policy for the continuous-review lot-sizing problem considered and let s1,…,snbe the sequence of order times of the BL policy. We prove that on any time interval (si,si+1], the cost incurred by the BL policy is at most twice the cost incurred by P.Since P is feasible, we clearly have from the intial condition (IC)δ0bl=δ0P=1. On the last interval (sn,T], the cost incurred by BL is H(sn,T), which is lower than K by construction. According to Lemma 1, we haveCp(sn,T)⩾minH(sn,T),K=H(sn,T)=CBL(sn,T)Now consider an interval (si,si+1], with 1⩽i⩽n−1. By construction, the BL policy incurs a holding cost H(si,si+1)=K and thusCBL(si,si+1)=H(si,si+1)+K=2K. Due to Lemma 1, any feasible policy pays at least min{H(si,si+1),K}=K on (si,si+1]. In particular, we have thatCp(si,si+1)⩾Kand thereforeCBL(si,si+1)⩽2Cp(si,si+1)for all i=0,…,n−1. The theorem then follows from Proposition 1.□In this section, we discuss how the order times can be computed by the balancing algorithm in practice. We first turn our attention to the issue of computing the next order time t given the current order time s. From the definition of H(s,·), we have that H(s,s)=0 and H(s,·) is a nondecreasing continuous function on [s,T]. Hence there exists at least one solution t∈[s,T] to the equation H(s,t)=K (unless H(s,T)<K). However, in most cases there is no analytical expression of t. One can then use classical root-finding algorithms, such as the bissection method, to compute an approximate value of t. The next ordering moment t′ found by such techniques is such that t′∈[t−θ,t+θ] for a given precision θ>0 and the final complexity depends on θ. For instance when using the bisection method, each computation of t′ requiresO(log(T/θ))evaluations of function H(s,·).For some classes of functions h(·) and λ(·), like polynomial, exponential, sinusoidal, the integral H(s,t) can be expressed analytically. Otherwise, one can use classical numerical methods to evaluate this integral with some precision error. In what follows, we assume that H(s,t) can be computed (exactly) in timeO(1)and we only focus on the complexity of determining the order times s1,…,snof the BL policy. Notice that the number of order times of the BL policy, as for an optimal policy, may be arbitrary large (for instance considering an exponential holding cost h(t)=et). Thus the time complexity cannot be bounded in general with respect to the instance size. For this reason we consider in what follows a natural restriction of the problem.Assume that the demand function and the holding cost function are both upper bounded on [0,T]. That is, there existsλˆ,hˆsuch that for allt∈[0,T],λ(t)⩽λˆandh(t)⩽hˆ. Then the following theorem holds:Theorem 2For any ε>0, the BL policy can be implemented to provide a solution with a performance guarantee of (2+ε) usingO(γlogγ)evaluations of H(·,·), whereγ=(1+1ε)λˆhˆKT2.See Appendix A.□We now build an instance of the problem for which the BL policy reaches its worst-case bound of 2. We consider constant holding and fixed ordering costs: K=h=1. We also assume that the horizon T is an integer. LetI=⋃i=1T-1[i-1/T,i+1/T]and I′=I∩[0,T]. We assume that the demand rate λ(t) is equal to 1 when t∈I′ and to 0 otherwise.The BL policy orders at times 0,…,T−1 and incurs a total cost ofCBL=∑i=0T-12K=2T. Let P denote the ZIO policy that orders at times 0,i−1/T for i=1,…,T. The total cost incurred by P is thenCp=K+h2T+∑i=1T-1K+hT+K+h2T=T+1+∑i=1T-11T+1T=T+2and we havelimT→+∞CBL/Cp=2.The previous section presents a cost balancing technique for a basic continuous lot-sizing model, but the underlying idea appears to be rather generic. In this section, we apply this concept to several important extensions of the lot-sizing problem. Although in most cases Algorithm 1 cannot be used directly, we adapt the policy to the specific settings of each extension and prove that the performance guarantee of two found in Section 3 remains valid for these more general models.The analysis used in Section 3 remains valid for nonlinear holding costs. We denote by h(x,t) the holding cost value at t for holding x units in stock. The only (natural) assumption we make is that h(x,t) is nondecreasing in x. The cumulated holding cost of a ZIO policy over a cycle (s,t] is again denoted by H(s,t).Essentially, one only has to check that Lemma 1 remains valid in this context to ensure that the approximation result holds. The policy we propose in this case follows exactly Algorithm 1. This policy satisfies the ZIO property, thus the same arguments as the ones used in Theorem 1 hold and the performance guarantee of 2 remains valid in the general case of nonlinear holding costs.In this section, we consider a model in which the inventory on hand at time t deteriorates at rate θ(t), incurring a per unit deterioration cost a(t). In a cycle (s,s′], the inventory level x(t) satisfies the following first-order differential equationdx(t)dt+θ(t)x(t)=-λ(t)which can be solved easily, see e.g. Goyal and Giri (2003). Note that even though we only present our results for the simple inventory model derived from Section 3, this equation can also be solved with production rate μ(t) and backorders.The sum of holding and deterioration costs over a time interval [s,s′] for a policy P can be expressed as:Hp(s,s′)=∫ss′[h(t)+a(t)θ(t)]xp(t)dt=∫ss′h̃(t)xp(t)dtwhereh̃(t)=h(t)+a(t)θ(t). Using this modified holding cost parameter, we can apply Algorithm 1 as in Section 3. The arguments used to prove the performance guarantee of BL remain valid in this more general context and thus the resulting algorithm is a 2-approximation for the model with perishable products.The model studied in Section 3 assumes that replenishments are instantaneous. We now relax this assumption and focus on a model where units are produced according to a time-dependent, piecewise continuous production rate μ(·). In addition, let(3)μ(s,s′)=∫ss′μ(z)dzifs⩽s′0otherwisedenote the cumulative production capacity between instants s and s′. If a production starts at time s for q units, all units are available on hand at time s+t such that μ(s,t)=q. Each production start incurs a time-independent fixed cost K (the nonspeculative linear production cost is omitted w.l.o.g. as before).Although classical production models assume that the production rate μ(t) is larger than the demand rate λ(t), for all t, we relax this constraint and consider a more general situation where the only assumption is that the production capacity is sufficient to satisfy the entire demand without stockout, that is μ(0,t)⩾Λ(0,t) for all t.Observe that a policy P cannot produce more than μ(s,t) units during a time interval [s,t]. Thus a necessary condition for P to avoid stockouts is that for any time t⩾s,xp(s)⩾Λ(s,t)−μ(s,t).Property 1Let xmin(s)=maxt⩾s{Λ(s,t)−μ(s,t)}. Any feasible policy P satisfies: ∀s∈[0,T],xp(s)⩾xmin(s).When t=s, this condition simply implies that xp(s)⩾0. According to this new definition, we modify the initial condition (IC) and assume w.l.o.g. in this model that x0=xmin(0) and λ(0)>0.Note that in the special case where μ(t)⩾λ(t) for all t, we have xmin(s)=0 for all s and the ZIO property remains dominant. Consequently we focus on policies that order at time s only if their inventory level is equal to xmin(s). In the remainder of this section, we call such policies MIO (Minimum Inventory Ordering) policies. In addition to Property 1, the final stock of a MIO policy must be null (x(T)=0). MIO policies are clearly dominant for our problem. Fig. 1illustrates a MIO policy.For a MIO policy P, we have xp(s)=xmin(s) and xp(t)=xmin(t). Cycle (s,t] consists now of an active period (s,u] (when production is on-going) and an idle period (u,t] (when production is over). The idle period starts at time u, where u satisfies the following equation:(4)xmin(t)=xmin(s)+μ(s,u)-Λ(s,t)Using Eqs. (3) and (4), the value of the inventory level over a replenishment cycle (s,t] is then:(5)xp(z)=xmin(t)-μ(z,u)+Λ(z,t)∀z∈[s,t]Let H(s,t) be the holding cost incurred by a MIO policy over a replenisment cycle (s,t]. Since for any feasible policy P the stock level at any instant z is at least xmin(z), the holding cost can be split into two parts,H(s,t)=HP(s,t)+Hmin(s,t), where:HP(s,t)≡∫sth(z)(xp(z)-xmin(z))dz⩾0is the policy dependent part of H(s,t) andHmin(s,t)≡∫sth(z)xmin(z)du⩾0is the independent part of H(s,t). Notice that due to Property 1, Hmin(s,t) is incurred by any feasible policy for the problem we consider.We now present an extension of the BL policy to this production model, called PB policy in what follows. The algorithm for this policy is exactly the same as for the BL policy (see Algorithm 1) except that the holding cost H(·,·) is replaced by HPB(·,·).The PB policy balances in each cycle the fixed order cost K with the policy dependent part of the holding cost.For i=1,…,n, the quantity ordered by policy PB at time siis then qi=Λ(si,si+1)+xmin(si+1)−xmin(si) and the following theorem holds:Theorem 3The PB policy has a worst-case guarantee of 2 for the general production model.See Appendix B. □We now focus on a model in which backlogging is allowed and the per-unit backlogging cost is b(t) at time t. Moreover, we modify the initial condition (IC) and simply consider that x0⩽0. The balancing policy for models with backlogging uses an idea rather similar to the one used in the basic model. It balances the costs incurred between two consecutive order times with the fixed order cost K. The main difference is that instead of using only the holding costs, both holding and backlogging costs are considered. However, the policy decides to serve or backlog demand in a way that minimizes the sum of the costs incurred over the cycle. Each cycle (s,t] is consequently split into two parts: (s,u], during which inventory is held, and (u,t], when backorders accumulate.In the remainder of the section, the balancing policy for models with backlogging is denoted BB. For a given policy P, let Bp(s,t) be the backlogging cost incurred by P over (s,t]. In addition, we denote B(s,t) the backlogging cost incurred over (s,t] by a policy that does not order in (s,t) and whose inventory at time s is 0. Formally, the algorithm works as follows:Algorithm 2Balancing policy for models with backlogging (BB)set s0←0, s1←max {t⩽T:B(0,t)=K}set n←1whileH(sn,T)>Kdosn+1←maxt⩽T:minu∈[sn,t]H(sn,u)+B(u,t)=Kn←n+1end whilereturn (s1,…,sn)We now state and prove the following theorem on the performance guarantee of the balancing algorithm for models with backlogging:Theorem 4The BB policy for continuous lot-sizing models with backlogging has a worst-case guarantee of two.See Appendix C. □To conclude this section, we discuss the computation of the instant u∗∈(s,t) that minimizes the functionfs,t(u)=H(s,u)+B(u,t)=∫suh(z)Λ(z,u)dz+∫utb(z)Λ(u,z)dz. Consider the first derivative of fs,t(·):fs,t′(u)=∫suh(z)dz-∫utb(z)dzλ(u)Since λ(·) is a nonnegative function, it is easy to see that for s<t, there exists u∗∈(s,t) such thatfs,t′(u)⩽0for u∈(s,u∗] andfs,t′(u)⩾0for u∈(u∗,t]. Therefore fs,t(·) is unimodal and reaches its minimum at u∗∈(s,t) such that:∫su∗h(z)dz=∫u∗tb(z)dzIn Section 3 we restricted our attention to time-independent fixed order costs. We now relax this assumption and allow for monotonic time-varying fixed order costs and nonspeculative linear order costs. Specifically, we assume that function K(t) is continuous in time and either nonincreasing or nondecreasing with t, while c(·) satisfies for all ds>0:(6)c(s+ds)⩽c(s)+∫ss+dsh(u)duIn other words, given two potential order times s1<s2 to serve a specific demand at t⩾s2, it is always cheaper to order at s2, rather than order earlier at s1 and hold the corresponding units for a longer period. One can notice that inequality (6) is the continuous version of the well-known nonspeculative assumption often encountered in discrete lot-sizing models.If K(·) is nonincreasing (resp. nondecreasing) the holding cost H(s,t)+c(s)Λ(s,t) incurred over a cycle (s,t] is balanced with K(s) (resp. K(t)). The procedure is then applied in a forward or in a backward manner depending on the variation of K(·). Notice that Bitran et al. (1984) also define a forward and a backward method for the discrete time problem when ordering costs are time-independent. In our case, these two algorithms are defined as follows:Algorithm 3Forward balancing policy for nonincreasing order costsset s1←0set n←1whilec(sn)Λ(sn,T)+H(sn,T)⩾K(T) dosn+1←max {t⩽T:c(sn)Λ(sn,t)+H(sn,t)=K(t)}n←n+1end whilereturn (s1,…,sn)Backward balancing policy for nondecreasing order costsset s0=Tset t0←max {t⩽T:Λ(0,t)⩽x0}set n←0whilec(t0)Λ(t0,sn)+H(t0,sn)⩾K(t0) dosn+1←min {t⩾t0:c(t)Λ(t,sn)+H(t,sn)=K(t)}n←n+1end whileifsn>t0thensn+1←min {0⩽t⩽t0:c(t)Λ(t0,sn)+H(t,sn)−H(t,t0)⩽K(t)}n←n+1end ifreturn (sn,…,s1)Note that in the case of the backward algorithm, the order times are computed in a reverse order: 0⩽sn⩽⋯⩽s1⩽T. Moreover, the ZIO rule is not necessarily respected for the first order. Let x0 be the initial inventory on hand and let t0=max{t⩽T:Λ(0,t)⩽x0}. If sn<t0, the quantity ordered at time snis qn=Λ(t0,sn−1). All the other orders are of size qi=Λ(si,si−1).Theorem 5For time-dependent order costs, the forward (resp. backward) balancing policy has a worst-case guarantee of two when K(·) is a continuous nonincreasing (resp. nondecreasing) function.See Appendix D. □In this section, we present a generalization of the balancing technique used in Section 3 and use it to improve the performance guarantee from 2 to 3/2. The idea remains to balance the costs incurred over a time interval (s,s′] with order costs but we now consider the possibility to place additional orders in the interval. We present this modified algorithm in the simple situation of Section 3, in which order costs are time-independent and holding costs are linear.Consider a time interval (s,t] and let k be a positive integer. We define Gk(s,t) as the minimum cost over (s,t) incurred by a feasible policy ordering at most k times in (s,t).Note that a policy that minimizes the cost Gk(s,t) is ZIO. Thus for k=0 we have G0(s,t)=H(s,t) and clearly the BL policy incurs on each of its ordering interval (s,s′] a cost G0(s,s′). We can generalize Lemma 1 to the following result:Lemma 2Letk∈N,s<tand P a feasible policy. We haveCp(s,t)⩾min{Gk(s,t),(k+1)K}The proof is immediate due to the definition of Gk. If policy P places at most k orders inside the time interval, thenCp(s,t)⩾Gk(s,t). OtherwiseCp(s,t)⩾(k+1)K.□For a given positive integer k, we propose the following balancing policy, denoted BLkin the remainder of this section. Its principle is to balance Gk(s,t) with (k+1)K in each of its replenishment cycle (s,t]. That is, given an instant s, the policy computes the largest instant t⩽T such that Gk(s,t)⩽(k+1)K. Notice that in this case policy BLkorders at instants s and t and possibly up to k times in the interval (s,t). We call main order times the instants s and t, while the other order times in (s,t) are called secondary order times. Although main and secondary orders play the same role in the final solution, we differentiate these two types of orders to simplify the definition and the proof of performance of the algorithm. The following result generalizes Theorem 1:Theorem 6For K(·) and c(·) constant functions and h(·) and λ(·) a piece-wise continuous function, the BLkpolicy has a worst-case guarantee ofk+2k+1.The proof is very similar to the one of Theorem 1 and only the main arguments are given here. Let P be a feasible policy and let s1,…,snbe the sequence of the main order times of the BLkpolicy. First notice that any feasible policy P places an order at time 0 and thereforeδ0BLk=δ0P=1. Now consider an interval (si,si+1], with 0⩽i⩽n−1. By construction, the BLkpolicy incurs a costCblk(si,si+1)⩽Gk(si,si+1)+K=(k+2)Kin this time interval. Due to Lemma 2, policy P pays at least min{Gk(si,si+1), (k+1)K}=(k+1)K. It results thatCblk(si,si+1)⩽k+2k+1Cp(si,si+1). Then consider the last interval. On [sn,T], we haveCblk(sn,T)=Gk(sn,T), which is lower thanCp(sn,T)due to Lemma 2. As a consequence the inequalityCblk(si,si+1)⩽k+2k+1Cp(si,si+1)holds for every interval (si,si+1] and the proof follows.□In contrast to the balancing policy presented in Section 3, the family of algorithms presented in the previous section does not fall within the class of online heuristics defined by Van den Heuvel and Wagelmans (2010) and enables us to design efficient procedures to solve the problem introduced in Section 2. In particular, the resulting performance guarantee can be as close as aimed to the cost of an optimal policy. However the problem of determining (analytically or numerically) the minimal cost Gk(s,t) on an interval (s,t) is likely to require a large computing effort, especially for large values of k. In this subsection, we first discuss the computation of Gk(s,t) for an arbitrary k. Then, for k=1, we show that the BL1 policy can be computed inOγlogγ2with some restrictions on the demand and holding cost functions.In what follows, we assume that Λ(s,t)>0. Otherwise, policy BLkpolicy does not place any order (Gk(s,t)=0). We also assume that h(·) and λ(·) are continuous functions.When k secondary orders are placed in interval (s,t) at times v1⩽⋯⩽vk, the inventory holding cost of a ZIO policy on interval (s,t) isf(v1,…,vk)=∑i=0k∫vivi+1h(x)Λ(x,vi+1)dxwhere v0=s and vk+1=t. The problem is then to minimize f with the constraint that v0=s⩽v1⩽⋯⩽vk+1=t. We have for 1⩽i⩽k∂f∂vi(v1,…,vk)=λ(vi)h(vi-1,vi)-h(vi)Λ(vi,vi+1)whereh(x,y)=∫xyh(t)dt.It can be shown that the first order condition for optimality gives for 1⩽i⩽k:(7)λ(vi)h(vi-1,vi)=h(vi)Λ(vi,vi+1)Note that this condition is necessary but not sufficient since there may exist several solutions to Eq. (7). For time-independent holding cost h(t)=h, condition (7) reduces to a simpler condition that was established by Barbosa and Friedman (1978): (vi−vi−1)λ(vi)=Λ(0,vi+1)−Λ(0,vi). However even in this restrictive setting, the problem of solving Eq. (7) is difficult, except for very specific demand functions (linear, power-form).We now turn our attention to the case k=1, where the problem is to find a single optimal intermediary order. In this case, there is a single variable v1 that we rename v for ease of understanding. If we assume that the demand function λ(·) and the holding cost function h(·) are once differentiable, we can compute the second derivative of f(·):d2fdv2(v)=λ′(v)h(s,v)+2λ(v)h(v)-h′(v)Λ(v,t)As a consequence, f(·) is convex if and only if the following condition is satisfied:(8)λ′(v)h(s,v)+2λ(v)h(v)-h′(v)Λ(v,t)⩾0Unfortunately, there exists demand functions that do not satisfy inequality (8), even when the holding cost function is constant (see for example Fig. 2). However, we now exhibit two cases satisfying inequality (8). Both cases relax some assumptions made in the existing literature.Case 1:h(·) and λ(·) once differentiable, h(·) non-increasing and λ(·) non-decreasing.These assumptions relax the framework used in Resh et al. (1976); Donaldson (1977) and Henery (1979) to any increasing demand function.h(·) once differentiable, non-increasing and λ(t)=αtβ, with α⩾0 and β⩾−2.In this case −h′(·) is nonnegative and h(s,v)⩾(v−s)h(v). The second derivative of f(·) then becomesd2f(v)dv2=αβvβ-1h(s,v)+2αvβh(v)-h′(v)Λ(v,t)⩾αh(v)β(v-s)vβ-1+2vβ⩾αh(v)(β+2)vβ-βsvβ-1Hence for β⩾0 we haved2f(v)dv2⩾2αh(v)vβand for −2⩽β<0, we haved2f(v)dv2⩾αh(v)(β+2)vβIn both cases,d2f(v)dv2⩾0and f(·) is convex.Note that this setting extends the problem studied in Barbosa and Friedman (1978) to a time-varying holding cost function.Theorem 7Assume that λ(·) and h(·) are bounded, once differentiable and satisfy inequality(8)for all s<v<t. Then for any ε>0, the BL1policy can be implemented to provide a solution with a performance guarantee of (3/2+ε) usingOγ(logγ)2, where γ is defined as in Section3.3.

@&#CONCLUSIONS@&#
