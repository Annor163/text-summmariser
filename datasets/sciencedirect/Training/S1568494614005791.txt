@&#MAIN-TITLE@&#
Water cycle algorithm for solving constrained multi-objective optimization problems

@&#HIGHLIGHTS@&#
Multi-objective water cycle algorithm (MOWCA) is proposed for solving constrained and engineering multi-objective problems.Generational distance, metric of spread, and Δ metric are used as performance criteria.Optimal Pareto fronts are finely covered by the MOWCA with a good distribution of the non-dominated solutions.MOWCA is able to approach a full optimal Pareto front and provide a superior quality of solutions.MOWCA is better able to find a wider range of solutions compared with the other optimizers in this paper.

@&#KEYPHRASES@&#
Multi-objective optimization,Water cycle algorithm,Pareto optimal solutions,Benchmark function,Metaheuristics,Constrained optimization,

@&#ABSTRACT@&#
In this paper, a metaheuristic optimizer, the multi-objective water cycle algorithm (MOWCA), is presented for solving constrained multi-objective problems. The MOWCA is based on emulation of the water cycle process in nature. In this study, a set of non-dominated solutions obtained by the proposed algorithm is kept in an archive to be used to display the exploratory capability of the MOWCA as compared to other efficient methods in the literature. Moreover, to make a comprehensive assessment about the robustness and efficiency of the proposed algorithm, the obtained optimization results are also compared with other widely used optimizers for constrained and engineering design problems. The comparisons are carried out using tabular, descriptive, and graphical presentations.

@&#INTRODUCTION@&#
In recent decades, solving real-world engineering design and resource-optimization problems via multi-objective evolutionary algorithms (MOEAs) has become an attractive research area for many scientists and researchers [1]. Many optimization methods have been developed to deal with these kinds of problems [2,3].In contrast to single-optimization problems, the main goal of evolutionary algorithms in multi-objective optimization problems (MOPs) is to find a set of best solutions, so-called non-dominated solutions or Pareto-optimal solutions. In addition, non-dominated solutions obtained by different evolutionary algorithms are one of the most common ways to clarify and assess the robustness and capabilities of a proposed algorithm.In this situation, metaheuristic methods as a component of evolutionary algorithms have been significant owing to their fast convergence rate and accuracy [4]. Some of these methods include the strength Pareto evolutionary algorithm (SPEA) [5], SPEA2 [6], the Pareto archive evolution strategy (PAES) [7], the micro-genetic algorithm (micro-GA) [8], the non-dominated sorting genetic algorithm (NSGA) [9], NSGA-II [10], the multi-objective particle swarm optimization (MOPSO) [11], the Pareto dominant based multi-objective simulated annealing with self-stopping criterion (PDMOSA-I) [4], the vector immune algorithm (VIS) [12], the elitist-mutation multi-objective particle swarm optimization (EM-MOPSO) [13], the weight-based multi-objective immune algorithm (WBMOIA) [14], the orthogonal simulated annealing (OSA) [15], and the hybrid quantum immune algorithm (HQIA) [16].Recently, some researchers have expressed enthusiasm regarding immune-system algorithms for solving different types of MOPs. In fact, many researchers have attempted to boost and amend the main characteristics of immune algorithms to increase the efficiency and convergence speed of these methods for solving MOPs.Representatives of immune-based algorithms include the immune forgetting multi-objective optimization algorithm (IFMOA) suggested by Zhang et al. [17], the immune dominance clonal multi-objective algorithm (IDCMA) developed by Jiao et al. [18], and the adaptive clonal selection algorithm for multi-objective optimization (ACSAMO) proposed by Wang and Mahfouf [19].Furthermore, many studies prefer to combine metaheuristic methods to take advantage of the predominant features of multiple methods simultaneously. These approaches are so-called hybrid techniques. There have been many researchers in the past who have tried to use this idea to handle MOPs.For instance, Kaveh and Laknejadi [20] introduced the novel hybrid charge system search and particle swarm multi-objective optimization method (CSS-MOPSO). This multi-objective optimizer is a hybridization of particle swarm optimization (PSO) and the charged-system search method [20]. Another approach, recently proposed by Narimani et al. [21], is called the HMPSO-SFLA method. This hybrid optimization algorithm is based on the concepts of PSO and the shuffle frog-leaping algorithms (SFLA) [21].Deferential evolutionary for multi-objective optimization with local search based on rough set theory (DEMORS) is another hybrid method, presented by Coello et al. [22]. The DEMORS method has also been used to solve constrained MOPs (CMOPs). Looking at the mentioned algorithms, we can notice that the majority of these approaches are classified as population-based methods.Hence, there is enough proof to support the idea that population-based algorithms are the most common way to solving MOPs, primarily because this subject is linked to the characteristics and potentials of these methods. In other words, these methods are capable of handling both continuous and combinatorial optimization problems having high accuracy and satisfactory convergence speed to the Pareto-optimal solutions [4].In this research, a recently developed population-based algorithm, the multi-objective water cycle algorithm (MOWCA), is used to tackle CMOPs. The proposed algorithm was first presented by Eskandar et al. [23] for ordinary optimization problems. The basic idea of the WCA is inspired by the real-world water cycle process in nature, including the motion of rivers to the sea. The MOWCA algorithm is evaluated here by solving a set of engineering design problems and CMOPs, and the final optimization results obtained by the MOWCA are compared with those of other metaheuristic algorithms in the literature.The remaining of the present paper is organized as follows. In Section 2, the definition of standard MOPs is given, and the performance criteria used for quantitative assessments are described. In Section 3, a short description of the WCA, the definition of MOWCA, and the concept of MOWCA are introduced in detail. Numerical examples and benchmark functions considered in this paper are provided in Section 4, along with their results and discussion. Finally, conclusions are drawn in Section 5.Multi-objective optimization problems (MOPs) can be defined as optimization problems for which at least two objective functions are to be optimized simultaneously. Mathematically, a MOP can be formulated as follows:(1)F(X)=[f1(X),f2(X),…,fm(X)]T,where X=[x1, x2, x3,…,xd] is a vector of design variables (d is the number of design variables). One initial approach for solving MOPs is to use weight factors to convert a MOP into a single-optimization problem [24]. This technique can be formulated based on the following equation:(2)F=∑n=1Nwnfn,where N is the number of objective functions and wnand fnare weighting factors and objective functions, respectively.It is worth mentioning that single-optimization problems have just one point as the optimal solution. Hence, in order to find a set of solutions, Eq. (2) has to be solved by using a wide variety of weight factors; this is extremely time consuming and must be taken into serious consideration as a major downside of this method.In contrast, the most common way to solve MOPs is by keeping a set of best solutions in an archive and updating the archive at each iteration. In this approach, the best solutions are defined as non-dominated solutions or Pareto optimal solutions [25]. A solution can be considered as a non-dominated solution if and only if the following conditions become satisfied by the solution as given:(a)Pareto dominance: U=(u1, u2, u3,…,un)<V=(v1, v2, v3,…,vn) if and only if U is partially less than V in the objective space, as follows:(3)fi(U)≤fi(V)∀ifi(U)<fi(V)∃ii=1,2,3,…,n,where n is the number of objective functions.Pareto optimal solution: vector U is said to be a Pareto optimal solution if and only if any other solutions cannot be determined to dominate U. A set of Pareto optimal solutions is called a Pareto optimal front (PFoptimal).Fig. 1gives an overview of the concept of non-dominated solutions in MOPs. It can be seen from Fig. 1 that among three solutions A, B, and C, solution C has the highest values for f1 and f2. This means that this solution is a solution dominated by solutions A and B. In contrast, both solutions A and B can be considered as non-dominated solutions, as neither of them dominates each other.To make fair quantitative evaluations and judgments among different types of MOEAs, three performance parameters that are widely used to evaluate the performance of metaheuristic algorithms are investigated in this paper. These criteria are defined in detail in the following subsections.The generational distance (GD) metric was first presented by Veldhuizen and Lamont [26]. The main objective of this criterion is to clarify the capability of the different algorithms of finding a set of non-dominated solutions having the lowest distance with the Pareto optimal fronts (PFoptimal).Based on this definition, it can be understood that the algorithm with the minimum GD has the best convergence to PFoptimal. This evaluation factor is defined in mathematical form as can be seen in the following equations [27]:(4)GD=1npf∑i=1npfdi21/2,where npfis the number of members in the generated Pareto front (PFg), and diis the Euclidean distance between member i in PFgand the nearest member in PFoptimal. Meanwhile, the Euclidean distance (d) is calculated based on the following equation:(5)d(p,q)=d(q,p)=∑i=1n(fiq−fip)21/2,where q=(f1q, f2q, f3q,…,fnq) is a point on PFg, and P=(f1p, f2p, f3p,…,fnp) is the nearest member to q in PFoptimal. Fig. 2shows a schematic view of this performance metric for the 2D space. The best obtained value for the GD metric is equal to zero which corresponds to PFgexactly covers the PFoptimal.The metric of spacing (S) was suggested by Scott [29]. The main goal of this factor is to show the distribution of non-dominated solutions obtained by a specified algorithm. This criterion can show how well the obtained solutions are distributed among each other. The mathematical definition of this parameter is given in the following equation [30]:(6)S=1npf−1∑i=1npf(di−d¯)2,where npfis number of member in PFgand diis the Euclidean distance between member ith in PFgand nearest member in PFg. The smallest value of S gives the best uniform distribution in PFg. If all non-dominated solutions are uniformly distributed in the PFg, then, the values of diandd¯are the same, therefore, the value of S metric equals to zero. Fig. 3shows a schematic view of the spacing metric used in this paper.The third performance metric parameter is the spread metric (Δ) proposed by Deb [30]. This assessment parameter has been defined to determine the extent of spread attained by the non-dominated solutions obtained from a specified algorithm. To be more precise, this criterion can analyze how the solutions are extended across PFoptimal. Hence, the Δ metric can be formulated as follows [30]:(7)Δ=df+dl+∑i=1npf|di−d¯|df+dl+(npf−1)d¯,where dfand dlare the Euclidean distances between the extreme solutions in PFoptimaland PFg, respectively. Further, diis the Euclidean distance between each point in PFgand the closest point in PFoptimal. npfandd¯are defined as the total number of members in PFgand the average of all distances, respectively.Based on Eq. (7), it can be easily inferred that the value of the Δ metric is always greater than zero, and a small value of Δ means better distribution and spread of the solutions. In this condition, Δ=0 is the perfect condition indicating that extreme solutions of PFoptimalhave been found and thatdi=d¯for all non-dominated points. Fig. 4shows a schematic view of the Δ performance metric for a given Pareto front.The water cycle algorithm (WCA) mimics the flow of rivers and streams toward the sea and derived by the observation of water cycle process. Let us assume that there are some rain or precipitation phenomena. An initial population of designs variables (population of streams) is randomly generated after raining process. The best individual (i.e., the best stream), classified in terms of having the minimum cost function, is chosen as the sea [23].Then, a number of good streams (i.e., cost function values close to the current best record) are chosen as rivers, while all other streams flow to the rivers and sea. In an N dimensional optimization problem, a stream is an array of 1×N. This array is defined as follows:(8)Astreamcandidate=[x1,x2,x3,…,xN],where N is the number of design variables (problem dimension). To start the optimization algorithm, an initial population representing a matrix of streams of size Npop×N is generated. Hence, the matrix of initial population, which is generated randomly, is given as (rows and column are the number of population and the number of design variables, respectively):(9)Totalpopulation=SeaRiver1River2River3⋮StreamNsr+1StreamNsr+2StreamNsr+3⋮StreamNpop=x11x21x31⋯xN1x12x22x32⋯xN2⋮⋮⋮⋮⋮x1Npopx2Npopx3Npop⋯xNNpop,where Npopand N are the total number of population and the number of design variables, respectively. Each of the decision variable values (x1, x2,…,xN) can be represented as floating point number (real values) or as a predefined set for continuous and discrete problems, respectively. The cost of a stream is obtained by the evaluation of cost function (C) given as follows:(10)Ci=Costi=f(x1i,x2i,…,xNi)i=1,2,3,…,Npop.At the first step, Npopstreams are created. A number of Nsrfrom the best individuals (minimum values) are selected as a sea and rivers. The stream which has the minimum value among others is considered as the sea. In fact, Nsris the summation of number of rivers (which is a user parameter) and a single sea as given in Eq. (11). The rest of the population (streams which flow to the rivers or may directly flow to the sea) is calculated using Eq. (12) as follows:(11)Nsr=NumberofRivers+1︸Sea,(12)NStream=Npop−Nsr.Eq. (13) shows the population of streams who flow to the rivers or sea. Indeed, Eq. (13) is part of Eq. (9) (i.e., total individual in population):(13)PopulationofStreams=Stream1Stream2Stream3⋮StreamNStream=x11x21x31⋯xN1x12x22x32⋯xN2⋮⋮⋮⋮⋮x1NStreamx2NStreamx3NStream⋯xNNStream.Depending on flow magnitude, each river absorbs water from streams. The amount of water entering a river and/or the sea, hence, varies from stream to stream. In addition, rivers flow to the sea which is the most downhill location. The designated streams for each rivers and sea are calculated using the following equation [23]:(14)NSn=roundCostn∑i=1NsrCosti×NStream,n=1,2,…,Nsr,where NSnis the number of streams which flow to the specific rivers and sea. Based on the assumed concept for the WCA, rivers and sea absorb streams as part of movement of individuals toward best (i.e., sea) and better (i.e., rivers) solutions. In fact, sea and rivers designate streams based on their intensity of flow (i.e., fitness value or objective function value).Therefore, as sea is the best solution for the current population, based on Eq. (14), it absorbs (assigns) more streams than rivers do. If the problem is minimization problem (cost function), more streams flow to sea which has the lowest cost, and other streams flow to rivers which have lower costs.For instance, if we have 50 streams (population size), one sea and 4 rivers, we can assume that 22 streams flow to sea (the lowest cost), 13 streams flow to the first best river, 7 streams flow to the second best river, 5 streams flow to the third best river, and 3 streams flow to the forth best river. The reason for using absolute value used in Eq. (14) is that to eliminate the effect of negative sign. Also, the reason for using round operator is that we cannot assign 1.5 streams to a river or sea. The numbers should be integer values.As it happens in nature, streams are created from the raindrops and join each other to generate new rivers. Some stream may even flow directly to the sea. All rivers and streams end up in the sea that corresponds to the current best record.Let us assume that there are Npopstreams of which Nsr−1 are selected as rivers and 1 is selected as the sea. Fig. 5a shows the schematic view of a stream flowing toward a specific river along their connecting line.The distance X between the stream and the river may be randomly updated as the following relation:(15)X∈(0,C×d),C>1,where 1<C<2 and the best value for C may be chosen as 2; d is the current distance between stream and river. The value of X in relation (15) corresponds to a random number (uniformly distributed or determined from any appropriate distribution) between 0 and (C×d). Setting C>1 allows streams to flow in different directions toward rivers. This concept may also be used to describe rivers flowing to the sea. Therefore, as the exploitation phase in the WCA, the new position for streams and rivers may be given in the following equations [23]:(16)X→Streami+1=X→Streami+rand×C×(X→Riveri−X→Streami),(17)X→Streami+1=X→Streami+rand×C×(X→Seai−X→Streami),(18)X→Riveri+1=X→Riveri+rand×C×(X→Seai−X→Riveri),where rand is an uniformly distributed random number between 0 and 1. Eqs. (16) and (17) are for streams which flow to their corresponding rivers and sea, respectively. Notations having vector sign correspond to vector values, otherwise the rest of notations and parameters are considered as scalar values. If the solution given by a stream is better than its connecting river, the positions of river and stream are exchanged (i.e., the stream becomes a river and the river becomes a stream). A similar exchange can be done for a river and the sea. The evaporation process operator also is introduced to avoid premature convergence to local optima (exploitation phase). Basically, evaporation causes sea water to evaporate as rivers/streams flow to the sea. This leads to new precipitations. Therefore, we have to check if the river/stream is close enough to the sea to make the evaporation process occur. For that purpose, the following criterion is utilized for evaporation condition:ifX→Seai−X→Riveri<dmaxorrand<0.1i=1,2,3,…,Nsr−1PerformrainingprocessusingEq.(19)end,where dmaxis a small number close to zero. After evaporation, the raining process is applied and new streams are formed in the different locations (similar to mutation in the GAs). Indeed, the evaporation operator is responsible for the exploration phase in the WCA. The following equation is used to specify the new locations of the newly formed streams:(19)X→Streamnew=LB→+rand×(UB→−LB→),where LB and UB are lower and upper bounds defined by the given problem, respectively. Similarly, the best newly formed stream is considered as a river flowing to the sea. The rest of new streams are assumed to flow into the rivers or may directly flow into the sea.A large value for dmaxprevents extra searches and small values encourage the search intensity near the sea. Therefore, dmaxcontrols the search intensity near the sea. The value of dmaxadaptively decreases as follows:(20)dmaxi+1=dmaxi−dmaxiMaxIteration.The development of the WCA optimization process is illustrated by Fig. 5b where circles, stars, and the diamond correspond to streams, rivers, and sea, respectively. The white (empty) shapes denote the new positions taken by streams and rivers. In addition, Table 1shows the pseudo-code and step by step processes of the WCA in detail.In this subsection, similarity and differences of WCA with the particle swarm optimization (PSO) [31] are highlighted. Indeed, every metaheuristic algorithm has its own approach and methodology in finding global optimum solution. As a similarity between the WCA and PSO, we can say that all methods are categorized as population-based metaheuristic algorithms; population of particles in the PSO and population of streams in the WCA.Except of this similarity, their concepts, parameters and operators are different with each other. The PSO's concept is based on the movement of particles (e.g., fishes, birds, etc.) and their personal and best individual experiences [31]. The WCA's notions are derived by the water cycle process in nature and the observation of how streams and rivers flow to the sea.The updating formulations for the positions of rivers and streams differ from the updating formulations used in the PSO. The WCA does not use the concept of moving directly to the best solution (global best) as used in the PSO. In fact, the WCA utilizes the concept of moving indirectly from streams to the rivers and from rivers to the sea (i.e., the best temporal obtained optimum solution).In the WCA, rivers (a number of best selected solutions except the best one (sea)), (Eq. (11)) act as guidance points for guiding other individuals in the population (streams) toward better positions (see Fig. 5b) and to avoid the search in inappropriate regions in near-optimum solutions (see Eq. (16)).It is worth pointing out that rivers, themselves, move toward the sea (i.e., best obtained solution). They are not fixed points (see Eq. (18)). In fact, this procedure (moving streams to the rivers and, then moving rivers to the sea) leads to indirect movements toward the best solution by the WCA.On other hand, in the PSO, individuals (particles) based on their personal and best experiences attempt to find the best solution as the searching approach is moving directly toward the best optimal solution [31]. In addition, in the WCA, a number of near-best to best selected solutions (rivers+sea) attract other individuals of population (streams) based on their goodness of the function values (i.e., intensity of flow) using Eq. (14). However, in the classical PSO, this process is not used.Another difference between the WCA and PSO is the existence of evaporation condition and raining process in the WCA which corresponds to the exploration phase. The evaporation condition and raining process provide an escape mechanism for the WCA to avoid getting trapped in local optimum solutions, while in the PSO, the exploration mechanism (formulation) is different.In the PSO, inertia weight (w) (i.e., a user parameter) in the updating equation (movement equation) is responsible for the exploration phase and reduces at each iteration [31]. Table 2summarizes the differences of two reported optimizers in terms of applied strategies.In order to convert the WCA to an efficient multi-objective optimization algorithm, it is crucially important to define the predominant features of the algorithm (i.e., sea and rivers) correctly. In ordinary optimization problems for the WCA, only one objective function needs to be minimized and in this condition, a number of best obtained solutions in the population are selected as a sea (best obtained solution so far) and rivers.Nevertheless, in MOPs, there is more than one function to be minimized (maximized). Therefore, the definition in the WCA for selecting sea and rivers has to be changed in the multi-objective space. To select the most efficient (best) solutions in the population as a sea and rivers, a crowding-distance mechanism is used. The concept of crowding-distance mechanism was first defined by Deb et al. [10].This parameter is a criterion for showing the distribution of non-dominated solutions around a particular non-dominated solution. Fig. 6illustrates how to calculate the crowding-distance, the average side length of the cuboid, for point i[10]. A lower value for the crowding-distance indicates greater distribution of the solutions in a specific region. In MOPs, this parameter is calculated in objective spaces. Hence, to compute this parameter for each non-dominated solution, all non-dominated solutions must be sorted in terms of values for one of the objective functions.Selection of the sea and rivers from the obtained population as the best-guide solution for other solutions at each iteration is a vital step in the MOWCA. It affects the convergence capability of the algorithm and maintains a good spread of non-dominated solutions. Therefore, for all iterations, the crowding-distance for all non-dominated solutions must be calculated to determine which solutions have the highest crowding-distance values.Afterwards, the obtained non-dominated solutions are designated as a sea and rivers and, furthermore, the intensity of flow for rivers and sea is calculated based on the crowding-distance values. In this situation, some non-dominated solutions will most likely be created around sea and rivers at the next iteration, and their crowding-distance values will be amended and reduced.Moreover, it is very important to save non-dominated solutions in an archive to generate the Pareto front sets. This archive is updated at each iteration, and any dominated solutions are eliminated from the archive. Based on the literature and due to having fair comparison, the size of Pareto archive (number of non-dominated solutions in the archive) is set to be the same with other reported optimizers (see Table 3). Therefore, whenever the number of members in the Pareto archive becomes greater than the Pareto archive size, the crowding-distance is applied again to eliminate as many as necessary of the non-dominated solutions having the lowest crowding-distance values among the Pareto archive members.The MOWCA has the great potential for exploitation in the design space as it focuses in the near optimum solutions and exploits better solutions. Indeed, the exploration and exploitation phases in the MOWCA are combined and mixed. To clarify further, mostly the MOWCA starts with exploitation approach, moving streams toward rivers and rivers toward the sea. In between these movements, the MOWCA applies evaporation condition in order to perform exploration phase. This trend can be considered as the potential of the MOWCA to search a wide range of design space, while concentrating to near optimum non-dominated solutions.Many MOPs are subject to a set of constraints (e.g., inequality, equality, linear, nonlinear, and the like). Therefore, it is vital to find good, simple strategies to handle the imposed constraints and detect solutions in the feasible area. Hence, a simple approach is defined here to apply on the MOWCA.In this mechanism, after generating a set of solutions at each iteration, all constraints are checked and some solutions that are in the feasible area are selected. Afterward, non-dominated solutions are selected from the feasible solutions and inserted into the Pareto archive. Finally, sea and rivers are chosen from this archive for the next iteration based on the strategy mentioned in Section 3.2.The steps of the MOWCA are summarized as follows:Step 1: Choose the initial parameters for the MOWCA: Nsr, dmax, Npop, Max_Iteration, and Pareto archive size.Step 2: Generate random initial population and form the initial streams, rivers, and sea using Eqs. (9), (11), and (12).Step 3: Calculate the value of multi-objective functions for each stream using Eq. (10).Step 4: Determine the non-dominated solutions in the initial population and save them in the Pareto archive.Step 5: Determine the non-dominated solutions among the feasible solutions and save them in the Pareto archive.Step 6: Calculate the crowding-distance for each Pareto archive member.Step 7: Select a sea and rivers based on the crowding-distance value.Step 8: Determine the intensity of the flow for rivers and sea based on the crowding distance values using Eq. (14).Step 9: Streams flow into the rivers using Eq. (16).Step 10: Exchange positions of river with a stream which gives the best solution.Step 11: Some streams may directly flow into the sea using Eq. (17).Step 12: Exchange positions of sea with a stream which gives the best solution.Step 13: Rivers flow into the sea using Eq. (18).Step 14: Exchange positions of sea with a river which gives the best solution.Step 15: Check the evaporation condition using the pseudo-code in Section 3.1.Step 16: If the evaporation condition is satisfied, the raining process will occur using Eq. (19).Step 17: Reduce the value of dmaxwhich is a user defined parameter using Eq. (20).Step 18: Determine the new feasible solutions in the population.Step 19: Determine the new non-dominated solutions among the feasible solutions and save them in the Pareto archive.Step 20: Eliminate any dominated solutions in the Pareto archive.Step 21: If the number of member in the Pareto archive is more than the determined Pareto archive size, go to the Step 22, otherwise, go to the Step 23.Step 22: Calculate the crowding-distance value for each Pareto archive member and remove as many members as necessary with the lowest crowding-distance value.Step 23: Calculate the crowding-distance value for each Pareto archive member to select new sea and rivers.Step 24: Check the convergence criteria. If the stopping criterion is satisfied, the algorithm will be stopped, otherwise return to the Step 9.In this section, a set of well-known constrained and engineering design MOPs are used to clarify the performance of the proposed MOWCA. These problems are various types of constrained multi-objective problems (CMOPs) with diverse features that have been selected from a set of credible research studies. Moreover, the MOWCA as a recently developed optimizer is compared with other prominent methods employed in previous studies, such as the NSGA-II, MOPSO, CMOPSO, EM-MOPSO, MOCSO, Micro-GA, PAES, VIS, WBMOIA, and HQIA.The MOWCA was coded in MATLAB programming software, and the task of optimizing each test function was executed using 30 independent runs. For all benchmark problems, the initial parameters for the MOWCA (Ntotal, Nsr, and dmax) were selected as 50, 8, and 1E−5, respectively.The natures of the mentioned problems include various types of objective functions having different numbers of design variables and nonlinear constraints. In addition, some of the problems considered, such as gear train and spring design problems, are categorized as discrete optimization problems (combinatorial optimization problems). In this study, both continuous, discrete, and integer MOPs are investigated using the MOWCA.In addition, in order to have fair and reliable comparisons with other methods, the number of function evaluations (NFEs) used and the Pareto archive size for all MOPs are the same as in other previous studies. In fact, the maximum number of NFEs is taken as the stopping condition, similarly to other the methods in this paper.In the literature, researchers utilized one (i.e., constrained problem 5) or two (i.e., constrained problem 2, four-bar truss, speed-reducer, disk brake, and welded beam design) performance metrics for their examples using their optimization methods. In some cases, they used all three performance metrics for constrained problems 1, 3, 4, and 6.Therefore, in order to have comparative study with other optimization methods, we applied the MOWCA with existing performance metrics for each example and compared with the results obtained by other researchers in the literature.These user parameters for all the MOPs are shown in Table 3. The chosen values for the Pareto archive size are extracted from literature [12–14,20] due to have fair comparisons with other optimizers in this study.In this subsection, twelve benchmark CMOPs and engineering design problems are used to assess the capability and efficiency of the proposed algorithm for handling multifaceted mathematical problems.CONSTR is a mathematical problem having two design variables. This problem is defined as follows [30]:(21)minimizef1(x)=x1f1(x)=1+x2x1,subject to(22)g1(x)=6−(x2+9x1)≤0g2(x)=1+x2−9x1≤00.1≤x1≤10≤x2≤5.The Pareto optimal front for this problem is convex and defined as follows [30]:(23)For0.39≤x1*≤0.67:x2*=6−9x1*,(24)For0.67≤x1*≤1:x2*=0.The final statistical optimization results obtained by the reported methods for the performance measurements are shown in Table 4. As can be seen from Table 4, it can be inferred that the MOWCA could find the best mean solutions in terms of the GD value having the minimum distance from PFoptimal.Similarly, the non-dominated solutions obtained by the MOWCA have the best distribution and spread, which can be inferred from the mean values of the S and Δ metrics (see Table 4). It is worth mentioning that the MOWCA shows about 68% reduction in the Δ value compared with the value obtained by the NSGA-II, which is in the second rank in terms of the Δ value after the MOWCA.Therefore, the proposed MOWCA shows superiority over other algorithms for this problem, especially for the Δ metric. These observations from Table 4 will be completed by the results presented in Fig. 7a. Looking at Fig. 7a, one can conclude that the MOWCA was successful in covering the optimal Pareto front, having satisfactory distribution and spread for the non-dominated solutions. In general, Fig. 7 demonstrates the graphical comparison between the exact and computed Pareto fronts using the proposed optimizer for solving the CMOPS studied in this paper.The second constrained problem having two design variables is suggested in the form of a mathematical description as follows [32]:(25)minimizef1(x)=x1f2(x)=x2,subject to(26)g1(x)=−x12−x22+1+0.1cos16arctanx1x2≤0g2(x)=0.5−(x1−0.5)2−(x2−0.5)2≤00≤x1,x2≤π.This problem has a discontinuous Pareto optimal front that lies on the boundary of the first constraint and also includes some convex regions [30]. Table 5compares the reported mean solutions for the NSGA-II, MOPSO, CMOPSO, and MOWCA. According to Table 5, in terms of the mean values of the GD metric, the CMOPSO has outperformed the other methods, and the MOWCA is placed in the second rank, while having better stability for the obtained solutions (a lower SD value) compared with the other optimizers.Likewise, the MOWCA has the second best mean solutions after the CMOPSO, judging by the mean values of the Δ metric. Moreover, looking at Fig. 7b, we can see that PFoptimalis finely covered by the MOWCA with a good distribution of the non-dominated solutions.KITA function, first introduced by Kita et al. [33], has been widely analyzed [11,34]. The mathematical formulation proposed by Kita et al. [33] is as follows:(27)maximizef1(x)=−x12+x2f2(x)=12x1+x2+1,subject to(28)g1(x)=16x1+x2−132≤0g2(x)=12x1+x2−152≤0g3(x)=5x1+x2−30≤00≤x1,x2≤7.The Pareto optimal front for the KITA function is convex and continuous. Despite the fact that KITA is a simple problem, most algorithms are unable to find all of the points on PFoptimal[11]. The statistical optimization results of six algorithms for the performance metrics for this problem are shown in Table 6.From Table 6, it is apparent that the MOWCA has the minimum GD and that there is also a huge difference between the mean GD value obtained by the MOWCA and those obtained by the other methods (e.g., the PAES and Micro-GA). Moreover, the MOWCA not only could reach the best GD value but also possesses the first rank in terms of having the minimum values for the metrics of spacing and spread. Furthermore, based on Fig. 7c, it can be emphasized that the non-dominated solutions detected by the MOWCA have the highest accuracy with the best distribution for this problem.This problem, presented by Srinivas and Deb [35], has two design variables with a continuous Pareto optimal front. It is defined mathematically as follows:(29)minimizef1(x)=2+(x1−2)2+(x2−1)2f2(x)=9x1−(x2−1)2,subject to(30)g1(x)=x12+x22−225≤0g2(x)=x1−3x2+10≤0−20≤x1,x2≤20.The obtained values of three performance parameters are given in Table 7for the NSGA-II, MOPSO, CMOPSO, EM-MOPSO, and MOWCA. The mean values of GD for all of the algorithms indicate that the MOPSO and NSGA-II have the best performances. Nevertheless, their values of mean S and Δ indicate that these algorithms were unable to find solutions having an acceptable distribution and spread.In contrast, the MOWCA has surpassed those reported optimizers in term of the metrics of spacing and spread; however, the non-dominated solutions attained by the MOWCA are slightly far from PFoptimal. Overall, it can be said that the MOWCA outperformed other algorithms in two out of three performance metrics. In addition, Fig. 7d depicts how well the MOWCA could cover PFoptimal.This problem is a 2D problem subject to two constraints. This problem was previously presented by Binh and Korn [36] and is given as follows:(31)minimizef1(x)=4x12+4x22f2(x)=(x1−5)2+(x2−5)2,subject to(32)g1(x)=(x1−5)2+x22−25≤0g2(x)=7.7−(x1−8)2−(x2+3)2≤00≤x1≤50≤x2≤3.It is worth mentioning that the second constraint (g2(x) in Eq. (32)) does not have any effect on the boundary of the infeasible region [30]. In addition, the Pareto optimal front for this problem is as follows [30]:(33)For0≤x1*≤3:x2*=x1*,(34)For3≤x1*≤5:x2*=3.The statistical results attained by the NSGA-II, EM-MOPSO, and MOWCA are represented in Table 8. From Table 8, it can be seen that the MOWCA has surpassed other methods in terms of having the minimum value of 0.5680 for the mean S metric and better stability for finding non-dominated solutions (lower SD value).Furthermore, Fig. 7e depicts the final solutions achieved by the MOWCA versus PFoptimal. As can be seen from Fig. 7e, the final solutions have suitable matches in terms of the GD metric with PFoptimal.The sixth constrained function was first suggested by Osyczka and Kundu [37] and has been widely investigated [12,16]. The mathematical formulation of this problem is as follows:(35)minimizef1(x)=−[25(x1−2)2+(x2−2)2+(x3−1)2+(x4−4)2+(x5−1)2]f2(x)=x12+x22+x32+x42+x52+x62,subject to(36)g1(x)=2−x1−x2≤0g2(x)=x1+x2−6≤0g3(x)=x2−x1−2≤0g4(x)=x1−3x2−2≤0g5(x)=x4+(x3−3)2−4≤0g6(x)=4−x6−(x5−3)2≤00≤x1,x2,x6≤101≤x3,x5≤50≤x4≤6.The OSY problem has six design variables, and its Pareto optimal front is a concatenation of five regions, as shown in Fig. 8. For all the Pareto optimal regions, x4=x6=0. Accordingly, Table 9shows other values of the design variables for each region [30].The statistical optimization results from Table 10illustrate the values of the performance parameters obtained by the NSGA-II, VIS, WBMOIA, HQIA, and MOWCA. Looking at the GD values summarized in Table 10, we can see that the best GD values obtained by the NSGA-II and MOWCA are 9.89E−01 and 9.68E−02, respectively.Hence, in this problem, the MOWCA is placed in the second rank in terms of mean GD values after the HQIA. However, the distribution of the non-dominated solutions reported by the MOWCA is acceptable, so the MOWCA is located in the first rank with respect to the S metric (see Table 10). Furthermore, Fig. 7f shows the final non-dominated solutions obtained by the MOWCA compared with PFoptimalfor the OSY problem.In this subsection, six mechanical component design optimization problems with multiple objectives are studied to show the efficiency and performance of the MOWCA in finding non-dominated solutions having an acceptable distribution and spread.The four-bar truss design problem, depicted in Fig. 9, has been widely used to evaluate and validate different methods [11,27]. The mathematical formulation of this problem is as follows:(37)minimizef1(x)=L(2x1+2x2+x3+x4)f2(x)=FLE2x2+22x2−22x3+2x4,subject to(38)Fσ≤x1≤3×Fσ2×Fσ≤x2≤3×Fσ2×Fσ≤x3≤3×FσFσ≤x4≤3×Fσ,where(39)F=10KN,E=(2)105KN/cm2L=200cm,σ=10KN/cm3.As can be seen from Eq. (37), the volume of the four-bar truss and the joint displacement are to be optimized simultaneously. Table 11gives an overview of final optimization results reported by different algorithms.Based on the GD values summarized in Table 11, the MOWCA has the best performance in finding non-dominated solutions with a suitable match with PFoptimal(having the minimum distance to PFoptimal). In addition to having a lower GD value, the MOWCA was able to maintain a suitable distance among the generated solutions that were shown in the S metric values.Although, the NSGA-II and MOPSO have slightly better performances regarding the mean values of S, the SD value of the MOWCA for the S metric shows better stability of solutions corresponding to the distribution of the non-dominated solutions. Moreover, Fig. 10shows a graphical comparison of the NSGA-II, MOPSO, Micro-GA, PAES, and MOWCA. The discussion regarding Table 11 is confirmed in Fig. 10.The speed reducer design problem, shown in Fig. 11, has seven design variables and has been studied widely in the literature [27,38–40].The mathematical formulation used for modeling this problem is as follows [41]:(40)minimizef1(x)=0.7854x1x22(10x32/3+14.933x3−43.0934)−1.508x1(x62+x72)+7.477(x63+x73)+0.7854(x4x62+x5x72)f2(x)=(745.0x4/x2x3)2+1.69×1070.1x63,subject to(41)g1(x)=1.0x1x22x3−1.027.0≤0g2(x)=1.0x1x22x32−1.0397.5≤0g3(x)=x43x2x3x64−1.01.93≤0g4(x)=x53x2x3x74−1.01.93≤0g5(x)=x2x3−40.0≤0g6(x)=x1x2−12≤0g7(x)=5−x1x2≤0g8(x)=1.9−x4+1.5x6≤0g9(x)=1.9−x5+1.1x7≤0g10(x)=(745x4/x2x3)2+1.69×1070.1x63−1300≤0g11(x)=(745x5/x2x3)2+1.575×1080.1x73−1100≤02.6≤x1≤3.60.7≤x2≤0.817≤x3≤287.3≤x4≤8.37.3≤x5≤8.32.9≤x6≤3.95.0≤x7≤5.5.Table 12represents the comparison of values for the considered performance metrics for the speed reducer problem using the various algorithms. In Table 12, the MOWCA shows its superiority over other methods in terms of the GD values. Note that there is a large discrepancy between the mean GD values obtained by the MOWCA and the Micro-GA as the second best method corresponding to values of 0.98 and 3.11, respectively (see Table 12).In Fig. 12, graphical presentations are given for comparison purposes among the reported methods. Likewise, from Fig. 12, we can say that the MOWCA has the best performance among the methods, and that the NSGA-II and PAES were unsuccessful in finding a set of solutions close to PFoptimal. Based on Fig. 12 and given the results in Table 12, it can be concluded that the MOWCA is the best algorithm regarding the mean S and GD values, and that it would be unwise to introduce the NSGA-II as the best approach by considering the mean S value for this problem.This problem has four design variables first studied by Ray and Liew [42]. The main objective of this problem is to minimize the stopping time and the mass of a brake. The mathematical formulation of this problem is as follows:(42)minimizef1(x)=4.9×10−5(x22−x12)(x4−1)f2(x)=9.82×106(x22−x12)x3x4(x23−x13),subject to(43)g1(x)=20+x1−x2≤0g2(x)=2.5(x4+1)−30≤0g3(x)=x33.14(x22−x12)2−0.4≤0g4(x)=2.22×10−3x3(x23−x13)(x22−x12)2−1≤0g5(x)=900−2.66×10−2x3x4(x23−x13)(x22−x12)≤055≤x1≤8075≤x2≤1101000≤x3≤30002≤x4≤20,where x1, x2, x3, and x4 are the inner radius of the disk, the outer radius of the disk, the engaging force, and the number of friction surfaces, respectively. This engineering problem has been optimized previously using the NSGA-II and paɛ-ODEMO [28]. Comparisons of the performance metric parameters related to the reported methods compared with the MOWCA are given in Table 13.Judging by Table 13, the MOWCA could find a wide variety of solutions having uniform spread and the smallest deviation from PFoptimal. In this problem, the MOWCA proved its efficiency against other optimizers. The mean values of the GD and Δ metrics obtained by the MOWCA, 0.02 and 0.46, respectively, support this claim. In addition, Fig. 13depicts graphical comparisons with the other reported methods.Moreover, it is worth mentioning that the non-dominated solutions obtained by the MOWCA are in the range of (0.1274, 16.6549) and (2.7176, 2.0828), while those obtained by the NSGA-II are in the range of (0.1293, 17.598) and (2.7915, 2.1127). Similarly, this range for the paɛ-ODEMO is (0.1274, 16.6549) and (2.8684, 2.0906) [28]. These results show that the brake mass of 2.8684 with minimum stopping time of 2.0906 obtained by the paɛ-ODEMO is dominated by (2.7176, 2.0828) attained by the MOWCA, confirming the exploratory capabilities of the MOWCA for finding accurate results.The welded beam design problem, shown in Fig. 14, has four design variables and is selected from Ray and Liew [42]. In this case, the fabrication cost and end deflection of the beam must be minimized subject to imposed constraints on shear stress, bending stress, and buckling load [43].The two objective functions and four nonlinear constraints related to this problem are as follows:(44)minimizef1(x)=1.10471h2l+0.0481tb(14.0+t)f2(x)=2.1952t3b,subject to(45)g1(x)=τ(x)−13,600≤0g2(x)=σ(x)−30,000≤0g3(x)=h−b≤0g4(x)=6000−Pc(x)≤0.The first constraint in Eq. (45), g1(x), is related to the shear stress imposed on the support location of the beam, which must be less than the shear strength of the material (13,600psi). In addition, the normal stress generated at the support location of the beam (the second constraint, g2(x), in Eq. (45)) must be smaller than the allowable yield strength of the material (30,000psi). Also, the third constraint, g3(x), indicates that the thickness of the beam must be larger than the weld thickness.For the last constraint, g4(x), the allowable buckling load (along the thickness direction) of the beam must be greater than the value of the applied load (F). The shear stress, normal stress, and other parameters used in the constraints, Eq. (45), are defined as follows [28]:(46)τ(x)=(τ′)2+(τ″)2+lτ′τ″0.25(l2+(h+t)2)τ′=60002hlτ″=6000(14.0+0.5l)0.25(l2++(h+t)2)2[0.707hl((l2/12)+0.25(l2++(h+t)2))]σ(x)=504,000t2bPc(x)=64,764.022(1−0.0282346t)tb30.125≤h,b≤5.00.1≤l,t≤10.0.Final statistical optimization results obtained by applying the NSGA-II, paɛ-ODEMO, and MOWCA are collected in Table 14. Regarding the mean GD values in Table 14, the MOWCA having a GD value of 0.04909 and the paɛ-ODEMO with a GD value of 0.09169 have stood in the first and second ranks, respectively. Similarly, the MOWCA and paɛ-ODEMO could maintain a uniform distribution of the solutions with a good spread, as is revealed from the Δ values given in Table 14.Moreover, the extreme solutions (ranges) obtained by the MOWCA are (2.5325, 0.0115) and (37.9686, 0.000439). In contrast, the minimum fabrication cost obtained by the paɛ-ODEMO and NSGA-II are 2.8959 units with a deflection of 0.0131 inches and 3.0294 units with a deflection of 0.0088 inches, respectively [28].Hence, the MOWCA has the best performance based on the fabrication cost (having minimum fabrication cost). Likewise, the minimum deflection related to the fabrication cost obtained by the NSGA-II and paɛ-ODEMO are (37.4018, 0.000439) and (36.6172, 0.00044), respectively [28]. These statistics indicate that the proposed approach was successful in finding a wide variety of Pareto-optimal solutions. For more assessments, Fig. 15demonstrates graphical comparisons among the reported multi-objective optimizers.The spring problem requires a design based on minimum stress and minimum volume. This problem has three design variables: number of spring coils (N: x1), an integer variable; wire diameter (d: x2), a discrete variable; and spring diameter (D: x3), a continuous decision variable. This problem has two objective functions subject to eight constraints. The mathematical formulation of this problem is as follows [43]:(47)minimizef1(x)=0.25π2x23x3(x1+2)f2(x)=8KPmaxx3πx23,subject to(48)g1(x)=1.05x2(x1+2)+Pmaxk−lmax≤0g2(x)=dmin−x2≤0g3(x)=x2+x3−Dmax≤0g4(x)=3−C≤0g5(x)=δp−δpm≤0g6(x)=δw−Pmax−Pk≤0g7(x)=8KPmaxx3πx23−S≤0g8(x)=[0.25π2x23x3(x1+2)]−Vmax≤0,where the parameters used in the objective functions and constraints (47) and (48), respectively, are as follows [43]:(49)K=4C−14C−4+0.615x2x3P=300lbDmax=3in.k=Gx248x1x33Pmax=1000lbδw=1.25in.δp=Pklmax=14in.δpm=6in.S=189,000kpsidmin=0.2in.C=Dd.In this problem, x2 is a discrete variable whose values will be selected from the set F=[0.009, 0.0095, 0.0104, 0.0118, 0.0128, 0.0132, 0.014, 0.015, 0.0162, 0.0173, 0.018, 0.020, 0.023, 0.025, 0.028, 0.032, 0.035, 0.041, 0.047, 0.054, 0.063, 0.072, 0.080, 0.092, 0.105, 0.120, 0.135, 0.148, 0.162, 0.177, 0.192, 0.207, 0.225, 0.244, 0.263, 0.283, 0.307, 0.331, 0.362, 0.394, 0.4375, 0.5]. In addition, x1 will be taken to be integer values in the range of Refs. [1,33]. In addition, the lower and upper bounds for x3 are 0 and 3 inches, respectively. There were no statistical results for performance metrics (i.e., the GD, S, and Δ) for this problem in literature. Therefore, Table 15compares extreme solutions obtained by the NSGA-II and MOWCA in terms of interval span.Judging by Table 15, the MOWCA offers a wider range of non-dominated solutions compared to the NSGA-II. The minimum volume reported by the MOWCA is 2.668units, which is 0.022units less than the minimum volume attained by the NSGA-II. Likewise, the minimum stress as the second bound of the Pareto front gained by the NSGA-II and MOWCA reveals the same results. In fact, the MOWCA detected a wider range for both objective functions, and the minimum values of f1 and f2 obtained by the MOWCA are less than the values found using the NSGA-II.The main purpose of the gear train design problem, shown in Fig. 16, is to find the number of teeth in each gear (x1: Td, x2: Tb, x3: Ta, and x4: Tf). In fact, this problem tries to minimize the maximum size of any of the four gears and minimize the error between the obtained gear ratio and a required gear ratio of 1/6.931 [43]. Hence, this problem is as follows [43]:(50)minimizef1(x)=16.931−x1x2x3x42f2(x)=max(x1,x2,x3,x4).It is worth mentioning that all design variables in this problem have integer values that vary from 12 to 60.For performance metrics (i.e., the GD, S, and Δ) for this problem, there had not existed statistical reports in literature. Therefore, based on the results in literature, comparison for extreme solutions is provided. The results of the comparison for extreme solutions obtained by the NSGA-II and MOWCA are tabulated in Table 16. By observing Table 16, there is an increase in the range of non-dominated solutions obtained by applying the MOWCA compared with the NSGA-II. This feature is more obvious for the f2 function (see Table 16).To clarify further, the MOWCA could improve the minimum error ratio from the 1.83E−08 value obtained by the NSGA-II to a value of 4.50E−09. Furthermore, a similar trend related to the second extreme solution (F2) is observed. Hence, these intervals support the idea that the MOWCA is better able to find a wider range of solutions compared with the NSGA-II. Indeed, wider range means giving more choices to the decision maker to select his or her optimum design from the set of non-dominated solutions.As the WCA have shown its superiority for tackling single objective functions [23], in this article, we demonstrated the advantages of the concepts and strategy of WCA for handling constrained MOPs. The MOWCA, so for the WCA, proves its efficiency for solving MOPs.Offering wider range for non-dominated solutions (disk brake, welded beam, spring design, and gear train design problems), obtaining the generated Pareto front close to the optimal Pareto front (i.e., for Section 4.2), and good distribution of the non-dominated solutions (metric of spacing) compared with other optimizers, discussed earlier (Sections 4.2 and 4.3), are considered as advantages of MOWCA for handling MOPs.The main objective of this subsection is to evaluate and study the effects of each initial parameter used in the MOWCA. One of the most important concerns related to optimization algorithms is to find the most efficient user parameters. Performing sensitivity analyses show the stability of the methods and importance of initial parameters to find the optimal solution against any changes in user parameters.Especially, when the problem is complex having many local optima, it is crucially important to use the proper and efficient user parameters to boost the convergence speed and efficiency of the algorithms for finding global solution without getting trapped in local minima.The problems considered are the CONSTR problem (Section 4.1.1) and speed reducer design problem (Section 4.2.2) have been investigated by changing the user parameters of MOWCA which are Npop, Nsr, dmax, and the maximum iteration number.In each problem, different optimization results for various performance metrics (i.e., GD and S) using diverse user parameters are represented. Tables 17 and 18represent the sensitivity of initial parameters with respect to the values for different performance metrics including the GD and S for the CONSTR problem, respectively.As the second user parameter, dmaxis used for applying the evaporation condition and raining process and affects the exploration phase in the WCA. Generally, the large values for dmaxreduce a suitable search around the best obtained point (i.e., sea). By setting a large value for dmax(i.e., increasing the number of raining process), the WCA operates as a random search method instead of a being metaheuristic one. Hence, it may not be able to find the global optimum solution.Likewise, the small values of dmaxhave a negative influence on the final results as it can reduce the number of raining processes (i.e., fewer explorations). Therefore, the WCA concentrates on the domain solution near to the best obtained point (sea) without paying more attentions to other regions. As a consequence, for complex problems having many local optima, the WCA traps in local solutions.As it can be seen from Tables 17–20, dmax=1e−1 and dmax=1e−7 found the worst solutions with the largest SD values. Therefore, it can be concluded that if an unsuitable value select for dmax, the moving toward the best solution probably misdirects.The last parameter which can have effects on the performance of WCA is the number of rivers and sea (Nsr). It is worth mentioning that the Npopis considered as a common user parameter for the most metaheuristic algorithms. In fact, the chosen value of Nsrshould be proportional with the chosen value of Npop.For instance, when values of Nsrand Npopare equal to 8 and 10, respectively, it means that some rivers have been created without having any streams moving toward those rivers. These parameters’ selection can cause the detrimental effects on the optimization results. By observing Tables 17–20, when Nsris equal to 8, the worst and best performance corresponds to “Npop=10” and “Npop=50”, respectively.In conclusion, it can be inferred that the best value for dmaxis in the range of 1e−5 and 1e−3 and also, the value of Nsrshould be selected based on the value of Npop. Indeed, the best value of the Nsrmay be chosen as one sixth of Npop. Therefore, for population size of 50, eight rivers and sea (Nsr) may be considered as a proper value. Note that if the number of iteration increases, the WCA or other metaheuristic algorithms will have more chances (i.e., computational time) to find the best solution and explore the search domain.

@&#CONCLUSIONS@&#
This paper presented multi-objective water cycle algorithm (MOWCA), a novel multi-objective optimization technique for solving constrained multi-objective problems (CMOPs). The basic concepts of the proposed MOWCA are inspired by the water cycle process in the real world. In this paper, the MOWCA was used to solve a number of well-known benchmark and engineering MOPs. The efficiency and performance of the MOWCA was demonstrated using three popular criteria (i.e., generational distance, metric of spacing, and spread metric). The statistical optimization results obtained from performance metrics revealed that the proposed multi-objective optimizer was able to approach a full optimal Pareto front and provide a superior quality of solutions in comparison to a variety of state-of-the art algorithms considered in this paper. In general, the MOWCA offers competitive solutions compared with other population-based algorithms, according to the reported results and the numerical results in this research offering a wider range of non-dominated solutions. In fact, although the robustness and exploratory capability of the MOWCA depend on the nature and complexity of the problems, the optimization results obtained show that the MOWCA might be a suitable alternative method having an acceptable degree of accuracy for finding Pareto optimal solutions for different scales of MOPs.