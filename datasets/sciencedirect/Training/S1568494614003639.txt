@&#MAIN-TITLE@&#
Improving surrogate-assisted variable fidelity multi-objective optimization using a clustering algorithm

@&#HIGHLIGHTS@&#
We extended variable fidelity optimization framework to include multiple surrogates.Build multiple Kriging models by using k-means clustering algorithm.More reliably solve the large sample size surrogate-modeling problem.Accelerate surrogate-assisted multi-objective genetic algorithm.Results converge closely to the high-fidelity Pareto front.

@&#KEYPHRASES@&#
Clustering,Evolutionary computation,Surrogate model,Kriging,Optimization,Variable fidelity optimization,

@&#ABSTRACT@&#
Surrogate-assisted evolutionary optimization has proved to be effective in reducing optimization time, as surrogates, or meta-models can approximate expensive fitness functions in the optimization run. While this is a successful strategy to improve optimization efficiency, challenges arise when constructing surrogate models in higher dimensional function space, where the trade space between multiple conflicting objectives is increasingly complex. This complexity makes it difficult to ensure the accuracy of the surrogates. In this article, a new surrogate management strategy is presented to address this problem. A k-means clustering algorithm is employed to partition model data into local surrogate models. The variable fidelity optimization scheme proposed in the author's previous work is revised to incorporate this clustering algorithm for surrogate model construction. The applicability of the proposed algorithm is illustrated on six standard test problems. The presented algorithm is also examined in a three-objective stiffened panel optimization design problem to show its superiority in surrogate-assisted multi-objective optimization in higher dimensional objective function space. Performance metrics show that the proposed surrogate handling strategy clearly outperforms the single surrogate strategy as the surrogate size increases.

@&#INTRODUCTION@&#
In contemporary engineering design, the ability to rapidly understand trade-offs between multiple conflicting objectives is emphasized. Multi-objective genetic algorithms (MOGA) are able to find the Pareto front in a single optimization run, making them attractive to solve this type of problem. A non-dominated sorting genetic algorithm (NSGA-II) proposed by Deb et al. [1], along with other MOGAs published, have proved to be very robust in converging to the true Pareto optimal sets. In recent years, MOGA have seen wide spread applications to marine structures optimization. Despite displaying robust performance in multi-objective optimization, genetic algorithms are often slow to execute, since genetic algorithms can require a large amount of fitness function evaluations to determine domination status. This is especially true when time-consuming high fidelity models are used for objective functions. Surrogate-assisted MOGA optimization is a potential solution to this problem. In surrogate-assisted optimization, computationally efficient approximation models are constructed to replace the original computationally expensive fitness functions. This article introduces a technique of using k-means clustering in variable-fidelity optimization to assist surrogate model construction as surrogate model size increases.Several successful surrogate model techniques have been reported in literature to date. These include the response surface methodology [2], artificial neural networks [3], and Kriging models [4]. Kriging was originally presented to assist optimization in Sacks's work [4]. Kneijien [5] provides a more recent review paper for Kriging models used in optimization. Owing to its stochastic process framework, Kriging models provide both an estimation of fitness value and a model error estimation. Due to this error estimation property, Kriging models are popularly employed as surrogate models in optimization.To replace an objective function, the surrogate model must be accurate and efficient. Various model managements in surrogate-assisted evolutionary algorithms have been developed for this task. In a previous paper, the authors put forward a novel variable fidelity optimization (VFO) method [6], in which a Kriging surrogate model was constructed online to scale a low fidelity version of the fitness function to a high fidelity version of the same function. The VFO method schedules the high-fidelity simulations in given generations so that it uses only a fixed computational budget while converging close to the true Pareto front. This method was demonstrated on the ZDT standard test problems as well as a two-objective structural design problem. However, the previous method becomes inefficient and struggles to converge when the number of objectives is increased beyond two. A key reason for this struggle is the increasingly large size of the Kriging model needed for larger problems.In the development of the VFO approach, the Kriging model is constructed around the evolving Pareto set in the optimization run. As the optimization problem moves to a higher number of objectives, the location of non-dominated solutions in the independent variable space becomes more diverse. To maintain accuracy, more points are required causing the surrogate model size to consequently increase. The challenge can increase when the number of independent variables increases as well. During the Kriging modeling process, an N*N matrix (N is the total number of data points) will be inverted. Thus computational cost grows quickly with sample size. Jin et al. [7] have indicated that Kriging model construction can be very time-consuming for large sample sizes. In addition, solving an extremely large Kriging model can be numerically unstable as the matrix become nearly singular, in which case, the Kriging predictions are unlikely to be reliable.Researchers have suggested using multiple surrogates in place of the single surrogate model to improve prediction quality. Jin and Sendhoff [8] have proposed using neural network ensembles to improve the performance of surrogate-assisted evolutionary optimization. In the works of Goel et al. [9] and Sanchez et al. [10], the benefits of using multiple surrogates have also been reported empirically. Hamza and Saitou [11] have used polynomial surrogate ensembles in genetic algorithm for vehicle crash-worthiness design. Isaacs et al. [12] used spatially distributed multiple radius basis function surrogates for multi-objective optimization. Within their study, a fraction of the total sample points in each sub-surrogate were used for modeling, while the rest points were used for accuracy validation. However, there is not a solution proposed to deal with the large surrogate modeling problem that variable fidelity optimization scheme has faced.In this article, multiple surrogate models are used to improve the ability of the proposed VFO method to tackle larger problems. However, some means to determine how to split a single large Kriging model into multiple Kriging models is needed. Clustering is an attractive technique for this purpose and has been widely employed for data mining. In clustering, a large dataset is separated into subsets that are in some sense more closely related to each other than the other members of the overall data set. The advantage of clustering is that the algorithm can perform this separation without external guidance, making it ideal for inclusion in an automated optimization procedure. A k-means clustering algorithm is employed to partition the Kriging sample dataset, then multiple Kriging models are built in each of these partitions. This approach helps avoid solving large Kriging models, thus keeps the surrogate-assisted optimization efficient. The proposed clustering implemented method is believed to be helpful in a broader means of large sampling size surrogate model management problems other than Kriging.The remainder of the paper is organized as follows. The next section outlines the basics of the variable fidelity optimization approach with the new proposed clustering algorithm implemented in the Kriging modeling method. The subsequent section examines the proposed method using a series of benchmarking optimization problems, including comparisons with problems solved by the previous version of the method. Then the implementation of the proposed method is shown for a three-objective structure design problem. Conclusions and future work are discussed in the last section.

@&#CONCLUSIONS@&#
