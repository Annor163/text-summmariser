@&#MAIN-TITLE@&#
Large scale economic dispatch of power systems using oppositional invasive weed optimization

@&#HIGHLIGHTS@&#
Application of invasive weed optimization to economic dispatch problems.The oppositional based learning is implemented in IWO algorithm.The merits of proposed methodology are high accuracy and less execution time.The results of OIWO algorithm show its superiority to other tested techniques.

@&#KEYPHRASES@&#
Economic load dispatch,Invasive weeds optimization,Opposition based learning,Seeds,Fitness,Valve point loading,

@&#ABSTRACT@&#
This paper presents an evolutionary hybrid algorithm of invasive weed optimization (IWO) merged with oppositional based learning to solve the large scale economic load dispatch (ELD) problems. The oppositional invasive weed optimization (OIWO) is based on the colonizing behavior of weed plants and empowered by quasi opposite numbers. The proposed OIWO methodology has been developed to minimize the total generation cost by satisfying several constraints such as generation limits, load demand, valve point loading effect, multi-fuel options and transmission losses. The proposed algorithm is tested and validated using five different test systems. The most important merit of the proposed methodology is high accuracy and good convergence characteristics and robustness to solve ELD problems. The simulation results of the proposed OIWO algorithm show its applicability and superiority when compared with the results of other tested algorithms such as oppositional real coded chemical reaction, shuffled differential evolution, biogeography based optimization, improved coordinated aggregation based PSO, quantum-inspired particle swarm optimization, hybrid quantum mechanics inspired particle swarm optimization, modified shuffled frog leaping algorithm with genetic algorithm, simulated annealing based optimization and estimation of distribution and differential evolution algorithm.

@&#INTRODUCTION@&#
Economic load dispatch (ELD) is one of the power system optimization problems has high dimensional, high constraints, non-convex, non-smooth and nonlinear characteristics and requires an efficient optimization technique to be solved. The modern power systems encounter numerous technical and economical difficulties under competitive deregulated environment. The ELD problem is usually a sub problem of unit commitment and also a constrained optimization task. The prime requirement of ELD is to allocate the optimal generation levels of online generating units so as to accomplish the load demand at the minimum operating cost under various system constraints. Over the years, various mathematical programming methods and nature inspired meta-heuristic optimization techniques have been successfully employed to solve the ELD problems. The conventional methods include classical calculus method [1], base point and participation factor method, gradient search method, linear programming [2], nonlinear programming etc. A dynamic programming (DP) method can solve such problems in different formulations [3]. However, the drawback of the DP is its huge computational overburden when applied to practical sized ELD problems in stipulated time zones. These numerical methods require the incremental cost curves to be monotonically increasing or piece wise linear. However, these methods have difficulties and are not suitable to address nonlinear and discontinuous characteristics [4] of actual practical problems rather complicating the problem solutions.The great attempts of researchers across the globe to overcome the limitations of conventional mathematical programming are leaded to introduce meta-heuristics algorithms like genetic algorithm (GA) [4–6], simulated annealing (SA) [7], evolutionary programming (EP) [8] and hierarchical method [9] may prove to be very efficient in solving complex power system problems but, these heuristic methods do not always guarantee the globally optimal solution. In recent years, differential evolution (DE) [10,11], Ant colony optimization [12], artificial immune systems (AIS) [13], bacteria foraging optimization [14] modified genetic algorithm [15,16], modified particle swarm optimization (PSO) [17–21] and biogeography based optimization (BBO) [25] have been successfully applied to ELD problems. Quite promising results in terms of fuel cost savings and faster convergence have been obtained by these techniques.However, SA algorithm finds the solution trapped by local optimum rather than at the global optimum. Moreover, tuning of its relevant control parameters is a difficult task. The recent research has identified few drawbacks of the stochastic methods like GA of its premature convergence causing degradation in performance and reduction in its search capability and unsuitable when applied to multimodal objective functions. The main drawback of SA, GA, EP and AIS, is their slow convergence toward optimal solution, which is not suitable for real time operation. Though the convergence characteristic of PSO is fast and acceptable when applied to large-scale real time ELD problems still, the generation schedule obtained is not always global best solution; rather they often achieve a near global optimal solution.Within the last few years, new optimization methods with modifications of existing methods have been applied in order to obtain the global or nearly global optimal solutions to ELD problems. These modified meta-heuristic algorithms like, GA based ant colony optimization algorithm [5], Nelder–Mead based BFA (BFA-NM) [14], modified shuffled frog leaping algorithm with genetic algorithm (MSFLA& GA) [15], quantum-inspired particle swarm optimization (QPSO) [18], hybrid quantum mechanics inspired particle swarm optimization (HQPSO) [19], improved coordinated aggregation based PSO (ICA-PSO) [20], an improved particle swarm optimization (IPSO) [21], shuffled differential evolution (SDE) [22], DE with generators of chaos sequences and sequential quadratic programming (DEC-SQP) [23], variable scaling hybrid differential evolution (VSHDE) [24], hybrid differential evolution with BBO [25] known as (DE/BBO) [26] and oppositional real coded chemical reaction optimization (ORCCRO) [27] have been successfully applied in constrained ELD problems. The opposition based learning (OBL) [28] have been incorporated in chemical reaction optimization to improve the convergence rate of the algorithm. However, this ORCCRO algorithm requires a lots of control parameters tuning which is a difficult task. The advantages of these algorithms that they do not have any or fewer restrictions on the shape of cost function curves or problem constraints. However, they are quite sensitive to various parameters tuning, their solution is not unique for each trial run and also the problem of large execution time.The first application of oppositional based learning and back propagation in neural network was proposed by Ventresca and Tizhoosh [29]. Since then, it has been applied to many soft computing techniques such as DE [30], PSO by Wang et al. [31], ant colony optimization [32,33], biogeography based optimization [34], gravitational search algorithm [35], harmony search algorithm [36] and teaching learning based optimization [37]. It has been proved that a quasi opposite number is usually closer than an opposite number to the solution. This paper utilizes the improved computational efficiency of quasi opposition based learning concept in the proposed invasive weed optimization algorithm. This evolutionary algorithm known as invasive weed optimization (IWO), is a more robust, stochastic and derivative free optimization tool for the solution of complex real world problems. The algorithm is based on the invasive habits of growth of weeds in nature and having excellent exploration and exploitation ability in the search area. It was first developed by Mehrabian and Lucas [38] and since then, many applications have been found of this algorithm such as recommender system design [39], antenna system design [40], state estimation of nonlinear systems [41] and unit commitment problem solution [42].Furthermore, oppositional based learning empowers the proposed IWO algorithm to obtain best solution in lesser time. The proposed algorithm is tested on five different test systems breaking down the previous best results in all cases. The simulation results so obtained show its reliability and superiority in solving constrained ELD problems.The prime objective of the ELD problem is to determine the most economic loadings of generators to minimize the generation cost such that the load demands PDin the scheduling horizon can be met and simultaneously, the power balance constraint and generating limit constraints are satisfied. Here, this constrained optimization problem can be written as:(1)MinimizeFTotal=∑i=1dFi(Pgi)In general, the cost function of ith unit Fi(Pgi) is a quadratic polynomial and is expressed as:(2)Fi(Pi)=ai+biPi+ciPi2where ai, biand ciare fuel cost coefficients of ith unit, and d is the total number of committed units.(a)Active power balance constraint or demand constraint: The total generation∑i=1d(Pgi)should be equal to the total system demand PDand total transmission loss PLoss. That is represented as(3)∑i=1d(Pgi)=PD+PLossThe generator limits: The power output of each generator should vary within its minimum and maximum limits. That is, the following inequality constraint for each generator should be defined for each generator:(4)Pgimin≤Pgi≤PgimaxPiis the power output of ith generator and Pgimin, Pgimax are the minimum and maximum real power output of ith generator.Practically, the ELD problems are inherently highly non linear and discontinuous in nature. Moreover, the cost functions have discontinuities corresponding to the change of fuels and also due to valve point effects that make the problem multimodal. Therefore, most of the techniques fail to obtain global solution instead of quasi-global optimums to power system optimization problems.The generators with multiple valve steam turbines possess a wide variation in the input–output characteristics due to wire drawing effects. The valve point effect introduces ripples in the heat rate curves and cannot be represented by the polynomial function as in (2). Therefore, the accurate cost curve is a combination of sinusoidal functions and quadratic functions represented by Eq. (5).(5)Fi(Pgi)=ai+biPgi+ciPgi2+|ei×sin(fi×(Pgimin−Pgi))|where ei, fiare the constants of the ith unit with valve point effects.Generally, the dispatching units are practically supplied with multi-fuel sources, each unit should be represented with several piecewise quadratic functions reflecting the effect of fuel type changes, and the generator must identify the most economic fuel to burn. The generator with multiple fuel options [9] has different input–output curve. Therefore, it is more appropriate to represent the cost functions with piecewise quadratic functions described in (6).(6)Fi(Pi)=ai1+bi1Pi+ci1Pi2ifPimin≤Pi≤Pi1,fuel−1ai2+bi2Pi+ci2Pi2ifPi1≤Pi≤Pi2,fuel−2……aim+bimPi+cimPi2ifPim−1≤Pi≤Pimax,fuel−mwhere aij, bij, cijare cost coefficients of unit i for the jth fuel type and Pi=Pgi, m=(number of generators).In reality, the objective function of the practical economic dispatch problem has non-differentiable points according to valve point loadings and multiple fuels. Therefore, the objective function should be composed of a set of non-smooth functions to obtain an accurate and practical economic dispatch solution. The cost function is framed by combining both valve point loadings and multi-fuel options which can be realistically represented as shown below in (7).(7)Fi(Pi)=ai1+bi1Pi+ci1Pi2+|ei1×sin(fi1×(Pi1min−Pi1))|,forfuel1,Pi1min≤Pi≤Pi1ai2+bi2Pi+ci2Pi2+|ei2×sin(fi2×(Pi2min−Pi2))|,forfuel2,Pi2min≤Pi≤Pi2⋮⋮⋮aim+bimPi+cimPi2+|eim×sin(fim×(Pimmin−Pim))|,forfuel.m,Pimmin≤Pi≤PimInvasive weed optimization is a novel population based numerical stochastic, derivative free optimization algorithm inspired from the biological growth of weed plants. It was first developed and designed by Mehrabian and Lucas [38]. This technique based on the colonizing behavior of weed plants [39]. Some of the interesting characteristics of weed plants that are invasive, fast reproduction and distribution, robustness and self adaptation to the changes in climate conditions. The various applications of the proposed algorithm include DNA computing, antenna system design [40], state estimation of nonlinear systems [41], optimal arrangement of piezoelectric actuators on smart meters and unit commitment problem solution [42].Some important properties of IWO algorithm are described below for which it is considered as a sophisticated tool to solve complex optimization problems. One important property of the IWO algorithm is that it allows all of the plants to participate in the reproduction process. Fitter plants produce more seeds than less fit plants, which tends to improve the convergence of the algorithm. Furthermore, it is possible that some of the plants with the lower fitness value carry more useful information in iteration process as compared to the fitter plants. This IWO algorithm gives a chance to the less fit plants to reproduce and if the seeds produced by them have good finesses in the colony, they can survive [38]. The other important feature of IWO algorithm is that weeds reproduce without mating. Each weed can produce new seeds, independently. This property adds a new attribute to the algorithm that each agent may have different number of variables during the optimization process. Thus, the number of variables can be chosen as one of the optimization parameters in this algorithm. This IWO algorithm has the more chance to avoid local minima points compared to GA and PSO due to its continuous and normally distributed dispersal structure over search space which has a decreasing variance parameter centered on each parent plant [39].Each individual or agent, a set containing a value of each optimization variable, is called a seed set. Each seed in seed set grows to a flowering plant in the colony (matrix of size Popmax×d). The meaning of a plant is one individual or agent after evaluating its fitness. Therefore, growing a seed to a plant corresponds to evaluating an agent's fitness. Depending upon the fitness value of individual, new seeds are generated by each plant (row) with respect to a normalized standard deviation σ. The standard deviation is very important in calculating the optimal solution. It can be seen that the SD is reduced from the initial SD to the final SD with different velocities. The algorithm starts with such a high initial SD that the optimizer can explore through the whole solution space. The new produced weeds are randomly distributed in the field and grow to flowering weeds for fitness calculation after satisfying all the constraints within their limits. Keeping in view that fitter plants have been reproduced more than undesirable plants. In order to limit the maximum number of plants in a colony, the weaker and inappropriate plants are eliminated. This iterative process continues till the maximum number of iterations is reached. The plant with the best fitness is selected as the optimal solution.Opposition-based learning (OBL) initially developed by Tizhoosh [28], is a new concept in computational intelligence and is used to accelerate the convergence rate of different optimization techniques. OBL considers current population as well as its opposite population at the same time in order to get better candidate solution. Many researchers across the globe proved that an opposition candidate solution has a better chance to be closer to the global optimum solution than a random candidate solution. They have successfully implemented this learning process in to different soft computing techniques [34–37].Here, the opposite number and opposite point used in OBL have a straight forward definition as follows:Opposite number may be defined as the mirror point of the solution from the center of the search space and it is mathematically expressed as:If x be a real number between [a, b], its opposite number x0 is defined as(8)x0=a+b−xThe opposition point in d dimensional space is given as:If P(x1, x2, ……xi, ……xd) is a point in d-dimensional search space, its opposite pointOP(x10,x20,……xi0,……xd0)may be defined as follows(9)xi0=ai+bi−xi;xi∈[a,b];i=1,2,…dThe same logic can be extended for Quasi-opposite number and quasi-opposite point used in QOBL may be defined as follows:It may be defined as the number between the center c of the search space and the opposite number, quasi-opposite number, xq0 may mathematically be expressed as:(10)xq0=randa+b2,a+b−x=rand(c,x0)The quasi opposite pointQOP(x1q0,x2q0,……xiq0,……xdq0)for d-dimensional search space is given by:(11)xiq0=randai+bi2,ai+bi−xi=rand(ci,xi0);i=1,2,…dwherexiq0is a random number uniformly distributed between ciandxi0.In this section, quasi-oppositional based invasive weed optimization is implemented to solve ELD problems. The OIWO algorithm employs quasi-oppositional based population initialization and generation jumping to accelerate the convergence rate of IWO algorithm.The steps of the proposed approach are mentioned below:Step 1: The seeds are initialized depending upon the number of selected variables (d) of the given problem, distributed uniformly over the entire solution space.Step 2: Create each seed set, after generating all the selected variables of the given problem randomly within their effective lower and upper limits and satisfying different constraints. Thus each seed contains random values for each variable in the solution space. Each seed set represents a potential solution of the given problem. Generate several seed set to create a Seed matrix (S) of size (Popmax×d). The total number of plants in the population is Popmax. In similar way, create a quasi-opposite seed matrix (QOS) using Eq. (11) after satisfying all the constraints within their limits.Step 3: The fitness value of all individuals of the current seed set (S) and quasi opposite seed set ((QOS), (each row (plant) of S and QOS) is calculated according to the objective function considered in the optimization problem. These seeds then evolve into weed plants capable of producing new units.Step 4: Each individual (plant) is ranked based on its fitness with respect to other weeds. Subsequently, each weed produces new seeds depending on its rank in the whole population including the quasi opposite seed set. Starting with the maximum number of seeds (Nmax) produced by the best fit plant. All plants are participating in reproduction process which adds a new attribute to the optimization providing chances to contribute useful information (good result) by less fit plants during iterative process.Step 5: The number of seeds to be created by each weed alters linearly from Nmin to Nmax which can be computed using the equation below.(12)Number of seeds=Fi−FworstFbest−Fworst(Nmax−Nmin)+Nminwhere Fiis the fitness of ith weed. Fworst, and Fbestdenote the worst and best fitness in weed population. The generated seeds are normally distributed over the field with zero mean and varying standard deviation of σiterdescribed by(13)σiter=itermax−iteritermaxn(σ0−σf)+σfwhere itermax and iter are the maximum number of iteration cycles assigned by the user and current iteration number, respectively. σ0, σfare the predefined initial and final standard deviations and n is the nonlinear modulation index.Step 6: After that all seeds have found their positions over the search area, the new seeds grow to the flowering plants after satisfying all the constraints within their limits and then, they are ranked together with their parents in both seed set and quasi opposite seed set matrices. Plants with lower ranking in the colony are eliminated to reach the maximum number of plants in the colony (Popmax).Step 7: Based on jumping rate ‘jr’ (i.e., jumping probability), after generating the new seed set, the opposite seed set is calculated based on standard deviation and ranking of its weeds. The quasi opposite set generation using jumping rate may be described below:if rand<jrfor i=1:Popmaxfor j=1:dxijq0=randaj+bj2,aj+bj−xij;endendendStep 8: Survived plants can produce new seeds based on their ranking in the colony. The fittest individual (plant) is selected from the seed-parent combination of current seed set and quasi opposite seed set. If the stopping criterion is satisfied, the iterative process is terminated and the results are displayed, otherwise go to Step 3 for continuation.The flow chart of the OIWO for solving ELD problem is shown in Fig. 1. The computational procedure for proposed OIWO technique to solve dispatch problems can be described in the following steps.Step 1: Input parameters of the system and specify the upper and lower boundaries of each variable. Read the value of Popmax, d, Pgmin=a, Pgmax=b, cost coefficients, B-coefficient matrix, PD, Nmin, Nmax, σ0, σf, n, jr and itermax.Step 2: Initialize randomly the seeds of the population. These seed set must be feasible candidate solutions that satisfy the given constraints.Step 3: Let,Pj=[P1P2…Pd]be the trial vector denoting the current seed set of population (Popmax×d) to be evolved. The trial random current seed matrix (S) is as follows:(14)S=P11P12......P1dP21P22......P2d...................Pij...PidPPopmax,1...PPopmaxj...PPopmax,dThe elements of Piare the real power outputs of the committed d generating units subjected to economic fuel types to burn and their respective capacity constraints in (4). To meet exactly the load demand, a dependent unit is randomly selected from among the committed d units. Let, Pddbe the power output of the dependent unit to satisfy equality constraint (slack generator), then Pddis calculated by(15)Pdd=PD+PLoss−∑i=1i≠dddPii=1,2…dStep 4: Go to step 3 for few iterations and then, go to step 5.Step 5: Each seed set (each row) must be a feasible candidate solution that satisfies the given constraints. Similarly, quasi opposite seed set of population (QOS) is created as per Eq. (14). The fitness value (fuel cost) of all individuals (each weed) of the current seed set matrix (S) and quasi opposite seed set matrix (QOS), is calculated according to the objective function (1). Each individual (plant) is ranked based on its fitness with respect to other weeds. Subsequently, each weed produces new seeds depending on its rank in the whole population including the quasi opposite seed set. Starting with the maximum number of seeds (Nmax) produced by the best fit plant.Step 6: Update the iteration as iter=iter+1.Step 7: All of the plants are participating in the reproduction process. The numbers of new seeds are generated using Eqs. (12) and (13). Each individual (plant) should satisfy both equality (3) and inequality constraint (4). The infeasible solutions are replaced by randomly generated new seed set. The current seed set matrix (S) and quasi opposite seed set matrix (QOS) are updated with increasing individuals which are feasible candidate solutions.Step 8: The fitness value of each individual is calculated in the entire population. They are ranked in descending order according their fitness. The best plant is identified with highest fitness value in the colony (the best fuel cost) and corresponding seed set is the optimal solution (generator outputs) stored in a separate memory location for comparison and updated in every iteration.Step 9: Plants with lower ranking are eliminated in order to limit the maximum number of plants in a colony to Popmax.Step 10: Select a new parameter jumping rate ‘jr’ within [0,1] and create quasi opposite seed set matrix (QOS) from the newly developed seed set generated in the previous steps as per the following procedure:if rand<jrfor i=1:Popmaxfor j=1:dxijq0=randaj+bj2,aj+bj−xij;endendendThe individuals of newly generated QOS matrix must satisfy all the feasible constraints. The fitness (fuel cost) of each individual is calculated and ranked among all the individuals present in the colony.Step 11: If the stopping criterion as maximum iterations itermax is satisfied then go to step 12. Otherwise, go to step 6.Step 12: The best plant is identified with highest fitness value in the colony (the best fuel cost) and the corresponding seed set is the optimal solution (generator outputs).The proposed IOWO algorithm has been applied to solve ELD problems of five different benchmark test systems to demonstrate its performance in comparison to several established optimization techniques reported in literature. The bio-inspired OIWO algorithm has been implemented using Matlab-7.10.0.499 (R2010a) environment on a 3.06GHz, Pentium-IV; with 1GB RAM personal computer.This system comprising of 13 thermal units with valve point effect is included in the cost model. The load demands of this system are considered as 1800MW for no transmission losses and 2520MW for transmission losses. The system input data have been provided in Appendix A and also available in [8,23].The results without losses are compared with modified shuffled frog leaping algorithm with GA crossover (MSFLA and GA) [15], quantum-inspired particle swarm optimization (QPSO) [18], improved coordinated aggregation-based PSO (ICA_PSO) [20], chaotic differential evolution and sequential quadratic programming (DEC_SQP) [23] and provided in Table 1a. The reported fuel cost and the exact fuel cost should be same or nearly same. Large difference in fuel cost may be considered as serious error. It is found that the exact fuel cost obtained by MSFLA & GA [15] method is much higher in comparison to all other methods reported in this table. The reported fuel cost and exact fuel cost is almost same in case of DEC-SQP [23], QPSO [18] and proposed OIWO methods. However, there is little difference in both costs in case of ICA-PSO [20] and large difference in MSFLA & GA [15] method as in Table 1a. It can be found that the proposed OIWO method provides cheapest generation schedule as compared to other meta-heuristic algorithms.The obtained results with losses by proposed OIWO algorithm are compared with the best solutions of BBO [25], DE/BBO [26], SDE [22], different version of PSO [20] and ORCCRO [27] methods in Table 1b. There is power mismatch of −0.93MW by ORCCRO [27] method and +0.052MW by SDE [26] method reported in Table 1b. The negative and positive signs in power mismatch represent the deficit and surplus of power, respectively. So, the two above methods do not satisfy the power balance equation.The convergence characteristics of 13-generators system with transmission losses by IWO and OIWO methods are shown in Fig. 2. In order to verify the robustness of the proposed algorithm, the statistical performance over 50 runs are presented in Table 2. The minimum, average and maximum costs obtained by different methods over 50 trials are depicted in Table 2. The results demonstrate the proposed algorithm outperforms the other methods in terms of better and consistency in getting optimal solution.A system with 40 thermal units with valve point loading effect has been considered. The system load demand is 10,500MW and its input data are provided in Appendix B. The transmission loss has been neglected in case-1 and then considered in case-2. The B loss coefficients of this system are multiplication of rows and column of 6 generating units up to 40 units and also provided in Appendix B. The results obtained by proposed OIWO algorithm are provided in Table 3afor case-1, whereas case-2 in Table 3b.The results without losses are compared with modified shuffled frog leaping algorithm with GA crossover (MSFLA and GA) [15], quantum-inspired particle swarm optimization (QPSO) [18], hybrid quantum mechanics inspired particle swarm optimization (HQPSO) [19] improved coordinated aggregation-based PSO (ICA_PSO) [20], chaotic differential evolution and sequential quadratic programming (DEC_SQP) [23] and BBO [25] are provided in Table 3a. In this table, the reported fuel cost and exact fuel cost are almost same in case of QPSO [18], BBO [25] and proposed OIWO methods. However, there is a little difference in both costs in case of DEC-SQP [23] and ICA-PSO [20] and large difference in case of HQPSO [19] and MSFLA & GA [15] methods. Similarly, the result obtained by proposed OIWO algorithm with losses has been compared with GAAPI [5], BBO [25], DE/BBO [26], SDE [22] and ORCCRO [27]. The best generation cost and corresponding generation level of generators are provided in Table 3b. The convergence characteristic of 40 generator system using IWO and OIWO are shown in Fig. 3. The minimum, average and maximum cost obtained by proposed algorithm over 50 trials are presented in Table 4.This system comprising of 110 generators with quadratic cost characteristic. The input system data are provided in Appendix C and can also be taken from [6]. The load demand is considered as 15,000MW.The minimum fuel cost of 197,989.14$/h and their corresponding generation levels obtained by proposed OIWO method are provided in Table 5. The minimum fuel cost obtained so far for this system by ORCCRO [27] method is found to be 198,016.29$/h provided in Table 6. From Tables 5 and 6, it is clear that the proposed method provides cheapest generation schedule of power generation.The minimum, average and maximum fuel cost obtained using OIWO, ORCCRO [27], SAB [7], SAF [7], SA [7], BBO [27], DE/BBO [27] are shown in Table 6. The convergence characteristic curve obtained using IWO and OIWO are depicted in Fig. 4.A power system of Korea having 140 generating units with valve point loading effects is taken from the literature [21] as test system 4. The system comprising of 140 thermal generating units where the hydro and pump storage plants are not considered. 12 generators have the cost function with valve point loading effects. In this case, ramp rate limits and prohibited operating zones are not considered. The transmission losses are neglected for this test system. The input data of fuel cost is available in [21]. The total load demand is set to 49,342MW.The best generation schedule obtained using OIWO algorithm is reported in Table 7. The convergence characteristics of 140 generators system obtained by IWO and OIWO methods are shown in Fig. 5. The minimum, average and maximum fuel costs obtained by OIWO and SDE [22] over 50 trials are presented in Table 8.A complex system with 160 thermal units with multiple fuel options and valve point loading effect is considered here. The system load demand is 43,200MW. The input data are provided in Appendix D. The input data of 10 units [9,16] are replicated up to 160 units and also given in Appendix D. The transmission loss is not included in the cost function. The cheapest generation schedule obtained using OIWO algorithm is presented in Table 9. The convergence characteristic of 160 generators system obtained by IWO and OIWO are shown in Fig. 6. The minimum, average and maximum fuel costs obtained by OIWO, ORCCRO [27], ED-DE [10], and different GA [10] methods, BBO [25], DE/BBO [26] over 50 trials are presented in Table 10.This IWO algorithm gives a chance to the less fit plants to reproduce and if the seeds produced by them have good finesses in the colony, they can survive. The OIWO algorithm employs quasi-oppositional based population initialization and generation jumping to accelerate the convergence rate of IWO algorithm. This is due to the inherent randomness of the fast seed reproduction by weeds without mating, independently, allowing all weeds to participate in reproduction process and quasi opposition based learning. The algorithm is based on the invasive habits of growth of weeds in nature and having excellent exploration and exploitation ability in the search area to provide cheapest generation schedule.The three important parameters affect the convergence of the algorithm that are the initial SD (σ0), the final SD (σf), and the nonlinear modulation index (n). The mostly preferred method used to select the control parameters is parameter tuning after a series of experiments done. The modulation index should be tuned carefully in order to achieve the proper value of the standard deviation in each iteration. A high initial standard deviation should be chosen to allow the algorithm to explore the whole search space, aggressively. It seems that the IWO works well if the σ0 is set around a few percent (1–5 percent) of the dynamic range of each variable. The final SD should be selected carefully to allow the optimizer to find the optimal solution as accurate as possible. A finer local optimum solution can be achieved by decreasing this parameter. However, it should be noticed that tuning the final SD much smaller than the precision criteria of the optimization variables, does not improve the final error level and may deteriorate the convergence rate of the optimization. Therefore, the final SD in each dimension should be selected based on the precision effect of that variable on the objective function. It was shown that the value of nonlinear modulation index has a considerable effect on the performance of OIWO. It was suggested [40] that the best choice for modulation index is 3. It has been noted that control parameters have great influences on the performance of heuristic optimization technique.The tuning of the variables like initial standard deviation is varied from 0.1 to 0.9 with an increment of 0.1, the maximum number of seeds are also varied from 8 to 1 by a step of 1, the jumping rate is varied from 0.1 to 0.6 with a step of 0.1 and also the final standard deviation, modulation index, population size are varied with different values possible combinations. For different combination of parameters the minimum fuel cost of 160 generator test system is evaluated. At a time one single parameter is varied to get the minimum cost by keeping other parameters fixed within their prescribed limits. To avoid the local minima and to enhance the efficiency of convergence property a perturbation such as OBL is given in search space to improve the candidate solution. Owing to space limitation, it is not possible to present all the tuning results of possible combinations of parameters in tabular form. However, the tuning of population size on the performance on 160 units system is shown in Table 11. When the population size increases, there is no significant improvement of fuel cost of the system rather the execution time has been increased. The appropriate population size of this system is found to be 20. To validate the convergence effect of the tuning of control parameters such as the value of initial SD, final SD and nonlinear modulation index are being varied. The different combinations of parameters are experimented by changing the parameters one at a time. It is found that the nonlinear modulation index value of 3 gives better execution time. The initial standard deviation value has been varied to get the variation of execution time for the 160 units test system. Similarly, final standard deviation value varies from lower to higher, but an intermediate chosen value gives better performance. Moreover, a few selected combinations of parameters are only shown in Tables 12a and 12b. Brief summarized results of all test system are provided in Table 13.Tables 1, 3, 5, 7 and 9 present the minimum fuel cost produced by OIWO algorithm for 5 different test systems. The proposed OIWO provides the cheapest generation schedule in comparison to other existing techniques reported in literature. In order to show the robustness of OIWO, the minimum, average and maximum values of fuel cost for all cases are compared with different methods. These are reported in Tables 2, 4, 6, 8 and 10 and emphasizing consistency in achieving the good result and better in terms of quality of solutions obtained by OIWO algorithm. It can be seen from Figs. 2–6 that the OIWO has faster convergence than IWO method because of opposition based learning. This is due to the inherent randomness of the fast seed reproduction by weeds without mating, independently, allowing all weeds to participate in reproduction process and quasi opposition based learning.The execution time generally increases for large scale systems using any algorithm. The average CPU time by the proposed OIWO method is smaller in comparison to other established methods are shown in Tables 2, 4, 6, 8 and 10. The OIWO method takes minimum time to obtain minimum fuel costs which are presented in Tables 2, 4, 6, 8 and 10. From the above tables, out of 50 numbers of trials for five different test systems, OIWO reaches to the minimum costs 47, 46, 46, 46 and 46, respectively. Moreover, the computational efficiencies of OIWO are 94% for first system and 92% for remaining four large systems. The convergence characteristics OIWO are very smooth due to the inherent randomness involved in the optimization process and also the use of oppositional based learning into proposed algorithm.

@&#CONCLUSIONS@&#
