@&#MAIN-TITLE@&#
Multi-task ant system for multi-object parameter estimation and its application in cell tracking

@&#HIGHLIGHTS@&#
The multi-task ant system, is first introduced to track multiple objects.Our method can track multiple cells in various challenging scenarios.A novel likelihood function is developed to find the cell potentials.Our algorithm enjoys a robust tracking performance with low FNR and FAR.

@&#KEYPHRASES@&#
Ant system,Cell tracking,Parameter estimation,

@&#ABSTRACT@&#
Inspired by ant's stochastic behavior in search for multiple food sources, we propose a cooperating multi-task ant system for tracking multiple synthetic objects as well as multiple real cells in a bio-medical field. In our framework, each ant colony is assumed and assigned to fulfill a given task to estimate the state of an object. Furthermore, two ant levels are used, i.e., ant individual level and ant cooperation level. In the ant individual level, ants within one colony perform independently, and the motion of each individual is probabilistically determined by both its intended motion modes and the likelihood function score. In the ant cooperation level, each ant adjusts individual state within its influence region according to heuristic information of all other ants within the same colony, while the global best template at current iteration is found among all ant colonies and utilized to update ant model probability, influence region, and probability of fulfilling task. Our algorithm is validated by comparing it to the-state-of-art algorithms, and specifically the improved tracking performance in terms of false negative rate (up to 10.0%) and false negative rate (up to 2.1%) is achieved based on the studied three real cell image sequences.

@&#INTRODUCTION@&#
The study of analysis of cellular behavior is rapidly becoming a requisite for describing biological processes and diagnosing diseases, and some promising research results on cellular image segmentation or tracking have been reported [1–10], ranging from single cell to multiple cells [3,4], from deterministic analysis method to Bayesian estimate technique [5–7], from phase-contrast microscopy cells to fluorescent image cells [8–10], and so on. Since the study of cellular behavior analysis involves many challenges, such as model uncertainty, morphological variance, and overlapping and colliding between cells, both conventional and manual techniques become tedious and time consuming processes for computing qualitative and quantitative features of a large number of cells. For efficiency and accuracy, the automated tracking methods that eliminate the bias and variability to a certain degree are of great importance.Many efforts have been made in automated cell tracking over the past decades, and could be divided into three groups, i.e., model propagation based method, detection based method, and Random Finite Sets (RFS) based method. As for the model propagation based method, snakes or active contours are parametric or nonparametric, closed or open curves that can capture object boundary and further track the object of interest [11–14], but it requires cells to be partially overlapping in adjacent frames; level set [15] is able to tackle the changes in object topology, but it will merge two contacting contours into a single one and it also requires cells to be partially overlapping in different frames; mean-shift algorithms [16] give a fast solution for object tracking in video sequences (e.g., vehicle tracking, closed loop video), but usually do not give object contours. In terms of the detection based method, also called “detect-before-track” technique [7,17–19], particle filter is usually adopted since it is able to cope with heavy clutter, and is very easy to implement. However, various accurate models, such as state transition model, observation model, object intensity model and shape model, are required to be formulated besides the detection segmentation module. Furthermore, this algorithm usually encounters some problems during the temporal data association stage especially in the case of cell division and cell high density, which lead to tracking failures. For instance, as reported in [19], although the segmentation accuracy is 99.5%, the tracking accuracy is only 90.0%. The last category of tracking algorithm is the RFS-based method, which has demonstrated that it is suitable for tackling the multi-object state estimate problem of spawn events, objects entering and leaving image region [20,21]. Therefore, RFS-based filters are naturally suitable for tracking multiple cells in various cases, such as E. coli bacteria tracking and T cell tracking [22–24]. Specifically, the multi-Bernoulli filtering algorithm used in [23] is very competitive and also called a “track-before-detect” method, which by-passes the detection module and exploits the spatiotemporal information directly from the image sequence, and yields better results in low contrast cell image sequences.Ant colony optimization (ACO) is a population-based and meta-heuristic approach to model the behavior of almost blind ants in establishing the shortest path from their colony to their feeding sources and back by laying a chemical substance called pheromone. By virtue of the learning and searching power of an autocatalytic self-organization of an ant colony, ACO-based algorithms are receiving increasing attention and have enjoyed great success in the solution of traditionally difficult optimization problems [25,26]. To date, most of these algorithms are improved and extended to applications such as vehicle routing [27], scheduling [28], clustering [29–31], classification task [32], and target tracking [33–36], but the application to biological cell tracking is seldom reported. As we know, in addition to the aforementioned learning and searching power of ant colony, there are other salient features for the track of multiple biological cells, and they could be characterized as follows. First, there usually exist dynamic differences between tiny cells (such as cells 1 and 2 in Fig. 1), and we have to resort to well-designed motion models for acquiring better performance in the general tracking framework. However, through the use of all-orientation searching strategy of ant colony, the constraint of requiring accurate models for different tracking modes can be relaxed, i.e., we utilize the proposed ant decision of simple form to accommodate the differences in cell dynamics. Second, the number of cells varies over time, i.e., tiny cells leaving or entering the image (cell 3 in Fig. 1), and this requires the proposed approach could adaptively and jointly estimate the number of cells and its individual states. In the framework of ant colony, we define the mapping between colonies and cells, namely, some ant colonies are modeled to correspond to existing or new entering cells with a big value of colony existing probability, whereas some to disappearing cells with a small existing probability, which will be removed in the next frame. Finally, the variation in cell distribution density often happens (cells 1 and 2 in Fig. 1), and this easily leads to the “hijacking” problem for adjacent or interacting cells. However, for a group of ant colonies, the independent and cooperating mechanism is designed and expected to be suitable for solving the problem. The main contributions of our method can be summarized as follows: (1) introducing an idea of bio-inspired estimator, i.e., multi-task ant system, for estimating the states of multiple cells (objects), which opens another interesting research branch for both swarm intelligence and object tracking; (2) introducing a series of ant-related behavior variables, such as moving mode, influence region and ant colony existing probability, and the corresponding recursive forms are formulated as well; (3) considering two ant levels, namely, the ant individual level and the ant cooperation level. The ant individual level propels ants with the same task to move toward the location of the same interested cell, whereas in the ant cooperation level the cooperation mechanism among colonies is utilized to update and regulate ant-related behavior parameters for accurately locating the cells of interest in the following iterations as a whole.Preliminary results have been announced in the conference paper [37]. This paper presents a more complete theoretic study and abundant experimental analysis. We first address the background on multi-Bernoulli filter for multi-object image tracking in Section 2. In Section 3, a multi-task ant system algorithm is then proposed to track multiple cells and determine the number of cells, which utilizes the heuristic information and cooperation mechanism among ant colonies to find potentials in a recursive way. In Section 4, the experiment results on various cases are presented to demonstrate the effectiveness of our algorithm. Finally, conclusions are summarized in Section 5.In the framework of multi-object tracking, our focus is to determine the posterior multi-object distribution given all history observations. With the assumption that each object follows Markov process, the Bayesian filtering algorithm offers a concise way to describe the multi-object tracking problem. Since both the states and measurements are represented as sets of random vectors, the concept of random finite set (RFS) is introduced to solve the multi-object estimation problem in the Bayesian framework. For tracking n objects at time k, the multi-object state is denoted by a RFSXk={x1,k,x2,k, …,xn,k}, wherexi,kis the state vector of i-th object. Letzk=[z1,k,z2,k,…,zm¯,k]denote the image observation comprising an array ofm¯pixel values at time k, andz1:kis defined as the cumulative image observations up to time k. Therefore, if the posterior multi-object density is denoted byπˆk|k(⋅|z1:k), the recursive form of multi-object state estimation problem can be defined as(1)Πˆk|k−1(Xk|z1:k−1)=∫f(Xk|X)Πˆk−1|k−1(X|z1:k−1)δXΠˆk|k(Xk|z1:k)=h(zk|Xk)Πˆk|k−1(Xk|z1:k−1)∫h(zk|X)Πˆk|k−1(X|z1:k−1)δXwheref(·) is the multi-object transition density function,h(·) denotes the observation likelihood function, and δ is an appropriate reference measure on some state space.Observe that, due to the fact that there are multiple integrals implied in the above recursion, the estimate of posterior multi-object density is in essence an intractable problem in most cases. However, an approximated solution to this problem is the probability hypothesis density (PHD) recursion [20], in which the first order statistical moment of the posterior multiple-object state is propagated in time in the Bayesian recursion form, instead of propagating the multiple-object posterior density as a whole. More recently, the multi-Bernoulli filter developed from the RFS framework is proposed and utilized as a more effective visual tracking technique [22,23], and the salient features of the filter are that it operates in the single-target state space and in parallel. To give an intuitive understanding of the multi-Bernoulli filter, which will be discussed in Section 4 for performance comparison with our approach, we briefly introduce the principle and its notions. With the assumption of multi-object density being characterized by multi-Bernoulli parameters, the multi-Bernoulli filter for image sequences can be represented, respectively, by a prediction step and an update step.In the prediction step, if the multi-Bernoulli parameters ofXkis denoted byπˆk−1|k−1={(rk−1(i),pk−1(i)(⋅))}i=1Mk−1, where the parameterrk−1(i)is the existence probability of the i-th object andpk−1(i)represents the probability density of the state conditioned on its existence, the predicted multi-object state is also a multi-Bernoulli RFS(2)πˆk|k−1={(rk|k−1(i),pk|k−1(i)(⋅))}i=1Mk−1∪{(rΓ,k(i),pΓ,k(i)(⋅))}i=1MΓ,kwhere{(rΓ,k(i),pΓ,k(i)(⋅))}i=1MΓ,kdescribe the parameters of multi-Bernoulli RFS of births at time k, and the predicted parameters{(rk|k−1(i),pk|k−1(i)(⋅))}i=1Mk−1are given by(3)rk|k−1(i)=rk−1(i)pk−1(i)(⋅),ps,k(⋅)pk|k−1(i)(x)=f(x|⋅),pk−1(i)(⋅)ps,k(⋅)pk−1(i)(⋅),ps,k(⋅)with the object existence probability ps,k(·) at time k and the standard inner product notionv,h=∫v(x)h(x)dx.Given the predicted parameters{(rk|k−1(i),pk|k−1(i)(⋅))}i=1Mk|k−1of multi-Bernoulli RFS, the updated parameters of multi-Bernoulli RFS are formulated as(4)πˆk|k={(rk(i),pk(i)(⋅))}i=1Mkwhere(5)rk(i)=rk|k−1(i)pk|k−1(i)(⋅),h(zk)1−rk|k−1(i)+rk|k−1(i)pk|k−1(i)(⋅),h(zk)pk(i)(⋅)=pk|k−1(i)(⋅)h(zk)pk|k−1(i)(⋅),h(zk)With the above recursive form and a problem-dependent likelihood functionh(·), the generic multi-Bernoulli filter can be easily extended to track multiple objects in a sequence of raw image frames [23].A real ant system usually consists of several ant colonies working together or independently for the same goal or different tasks, and some of ant colonies are merged as one colony due to the same task, which means the old colonies disappear or the existing probability tends to zero (corresponding tork−1(i)→0); whereas some ant colonies work independently all the time with different tasks, which means that these ant colonies have been working with big values of existing probability (corresponding to0.5<rk−1(i)≤1). On the other side, for each ant colony, its distribution can be considered as an approximation to the state density function of an object, and we further havepk−1(i)∼{xi,k−1(⋅)}, wherexi,k−1(⋅)denotes the state of an ant in colony i at time k−1. Therefore, due to the underlying similarities between the definition of working mechanism of real ant colonies and the multi-Bernoulli filter, it is natural for us to develop a multi-task ant system to track multiple objects in a series of low contrast image sequences.An ant colony can do various jobs in a random but wholly regular way, such as gathering corpses to clean up their nest, transporting larvae to place them by size, and moving between nest and food back and forth by chemical substance called “pheromone”. These tasks ranging from simplicity to complexity attribute to the power of ant individual and colony cooperative searching behaviors. The ant individual behavior shows the independence and randomness of an ant, while the ant colony behavior defines the communication and cooperation among ants. In our proposed algorithm, to fulfill different tasks, we define two ant behaviors as below.Assume that each ant has three modes, i.e., moving forward, turning right, and turning left, and the mode probability of ant i in colony s at time k is denoted by a triple vector(6)πs,k(i)=[πs,k(i),1,πs,k(i),2,πs,k(i),3]Twhere elements in the vector represent, the probabilities of moving forward, turning right and turning left respectively, and we have∑j=1,2,3πs,k(i),j=1. At the initial stage of iteration, for instance, each element inπs,k(i)is assigned the same value due to lack of prior information. As iteration evolves, the prediction of mode probability of ant i can be written as(7)πs,k+1|k(i)=PM×πs,k(i)=P1,1P1,2P1,3P2,1P2,2P2,3P3,1P3,2P3,3×πs,k(i)where PMis the mode jump matrix, and Pi1,j1 denotes the probability of mode j1 jumping to mode i1.With the evolvement of mode probability, as shown in Fig. 2, an ant initially located at position (1) will probably turn left, then move forward to position (2), and finally to position (3) where an object is located. Once the ant's current location is close to the object, it will keep track of the object in the following frames through adjusting its moving ability. Therefore, we define each ant has a varying moving ability over time, which is characterized by its influence regionσs(i)(k). Fig. 3illustrates an ant is assumed to have different moving abilities represented by the same mean or position but with different variances or influence regions. For a big variance, an ant can move within a larger circle region centered on the mean, but as the variance decreases, the movement of the ant is restricted to a relatively smaller region in the end.In our ant tracking system, we usually assign m ant colonies to search for n(m>n) potential objects, and all ants within the same colony have the same goal, i.e., locating the same object of interest. If two different colonies, whose distance is less than a given threshold, try to find two objects or the overlap ratio between two colonies is in excess of a prior threshold, the two colonies are then merged together, and these two colonies are treated as one in the following iterations. The main considerations of ant colony behavior are as below.To exploit more useful information, we introduce a communication mechanism among colonies to help ants locate more objects (dash line in Fig. 2). Therefore, a histogram template pool11Note that there are only a limited number of samples in the initial template poolT{k+1}, which are obtained and extracted from the first frame.T{k+1} is built in a recursive way(8)T{k+1}=[T{k},Tkbest]ifh(Tkbest)>t0whereTkbestdenotes the best histogram template at the current iteration with the highest likelihood score,h(·) denotes the likelihood function, t0 is a predefined threshold, and we set the cardinality of histogram template pool to be |T{k+1}|≤Nmax.Also, to characterize how a given ant colony s evolves as a whole, we introduce a variable qs,k(qs,k∈[0, 1]) to evaluate the existing probability of ant colony s. Ifqs,k≥q¯0(whereq¯0is a predefined threshold), the ant colony s is supposed to have found the object of interest and could be used to extract the corresponding cell state. In our proposed algorithm, the variable propagates over time as below(9)qs,k+1|k=qs,kqs,k+1=f¯(qs,k+1|k,h(⋅))where the update functionf¯(⋅)will be discussed in Section 3.3.In the ant individual decision level, we assume each colony work independently, and multi-object tracking system can be treated as several single-object tracking sub-problems in which one ant colony corresponds to one object. Next, without loss of generality, we only describe the decision behavior of anti(i∈1,...,N)in colonys(s∈1,...m). Indeed, since our ant system belongs to the class of swarm intelligence algorithm, it still follows some generic definitions: (1) an appropriate description of the problem, so that it lends itself to incrementally building a solution to the problem, such as selecting state in sequence from time k to k+1, and so on; (2) a probabilistic transition rule based on the value of the heuristic function and/or on the pheromone information, such as moving mode, state transition probability, likelihood score, etc., as shown in Fig. 4.At time k, the state of ant i,xs,k(i), is known and usually represented by its position(xs,k(i),ys,k(i))and velocity(x˙s,k(i),y˙s,k(i)), thus the decision of ant i at next step can be defined with a probability as(10)ps,k+1|k(i,j)=πs,k+1|k(i),jf(j)(xs,k+1|k(j)|xs,k(i))α[h(zk+1|xs,k+1|k(j))]β∑l∈Ωs(i)πs,k+1|k(i),lf(l)(xs,k+1|k(l)|xs,k(i))α[h(zk+1|xs,k+1|k(l))]βwhere mode probabilityπs,k(i),jdenotes the j-th element ofπs,k(i);xs,k+1|k(j)is the one step prediction of statexs,k(i)following a Markov process with a transition density f(j)(·), observation imagez(·) is usually modeled by the likelihood functionh(z(⋅)|xs,(⋅)(j))conditioned on the current statexs,(⋅)(j), j corresponds to one of predicted positions from three modes, α and β are the importance adjustment parameters, andΩ(s)idenotes the space of three predicted positions of ant i.Remarks•Mode probability describes the inclination degree to which an ant moves toward one of three predicted positions. A big value indicates that the ant gradually moves toward the location of an object of interest, and even though it might make several undesirable decisions during movement, it still keeps on adjusting itself and eventually moves closely to an object.State transition density encompasses all possible moving modes of an object, and, for simplicity, all modes are assumed to follow Gaussian distributions but with different means and variances. From the perspective of cell tracking, since each cell moves randomly in the observation image, the combination of three modes is naturally suitable for capturing the dynamic uncertainty of a cell, which may perform a strong or weak maneuver at any time.Measurement likelihood function plays an important role in ant's decision, and it is usually selected according to empirical analysis in computer vision. In terms of track-before-detect tracking, literature [23] proposed a likelihood function based on color space conversion using kernel density method, and such technique resorts to a large number of training data. However, our algorithm employs a novel likelihood function to discriminate potential regions in a convenient way, which operates directly on RGB space and requires a small number of templates. Therefore, for a given histogram ukof an RGB image, the corresponding likelihood score is computed as(11)h(uk)=μe−ρ(1−gk)γξwhere μ, ρ, γ and ξ are the adjustment coefficients, and gkis defined as below(12)gk=1|T{k}|∑i=1|T{k}|∑j=1pmin(uk(j),u˜i(j))whereu˜i(j)denotes the value of j-th element of i-th histogramu˜iin a template pool, p is the total number of elements in a histogram and takes the value of 256×3 for an RGB image, and |T{k}| denotes the number of samples in histogram template pool T{k}.To view the effectiveness of our proposed likelihood function in a direct manner, Fig. 5illustrates an example of comparison results on various regions of a real cell image. In terms of two regions occupied by two cells (i.e. case 1 in Fig. 5(a)), the similarity measure is about 0.99974, as shown in Fig. 5(b). If one region is fully occupied by cell and the other is covered by cell nearly in half (i.e. case 2 in Fig. 5(a)), the similarity decreases to 0.73539, as illustrated in Fig. 5(c). However, if one cell leaving the interested area, we find that the similarity is close to zero, as shown in Fig. 5(d). It is observed that the above function can discriminate the difference of any two regions of the same size, and it is, therefore, utilized to act as a similarity measure between the candidates and template samples.As mentioned before, some ants might make undesirable choices due to the probabilistic selection. To remedy such consequence and guide more ants moving toward the region of interest, a local adjustment strategy is proposed within the influence region of each ant. Note that the influence region is represented by the variance of each ant, which means that an ant will search for an object in a large scale of area with a big variance and vice versa. Without loss of generality, we consider the search behavior in one dimension, and other dimensions follow the same rule. For a given random number τ generated in [0,1], if τ is smaller than a predefined threshold τ0, the local search step is done, as illustrated in Table 1.The salient feature of swarm intelligence, such as the ACO algorithm, is the information exchange among agents. In our algorithm, we use multiple ant colonies to track multiple objects and each colony in principle when implementation corresponds to one object, thus information exchange happens both within each colony and among colonies. For anti(i∈1,...,N)in colonys(s∈1,...,m)at time k, we first use a c1×c2 rectangle region template whose center is closest to(xs,k(i),ys,k(i)), then we calculate its corresponding histogram likelihood score according to Eq. (11), and the best template with the highest likelihood score is finally found and denoted byTs,kbest. Following this way, the best templateTkbestat the current iteration can be found and exchanged among m colonies. Moreover, ifh(Tkbest)>t0, a new augmented template is declared until |T{k+1}|=Nmax, which means that a complete template pool has already been built. In contrast to the strategy proposed in [23], our template pool is built in a dynamic way through learning rule with less computation burden, and Table 2gives the generation procedure of template pool T{k}.In the generic ACO algorithm, update procedure using the global best information is requisite to further regulate ant behavior in the following iterations. Since this step constitutes a positive feedback mechanism, a well-established updating strategy not only guarantees the quality of solution, but also accelerates convergence speed.Without loss of generality, for ant colony s, once the searching behavior of each ant is finished, the likelihood score corresponding to each predicted position is calculated for re-evaluating the importance of each ant. Therefore, we have(13)ωs_temp,k+1(i)=h(zk+1|xs,k+1|k(i))ωs,k+1|k(i)∑j=1Nh(zk+1|xs,k+1|k(j))ωs,k+1|k(j)where the prediction weightωs,k+1|k(i)is equal to the previousωs,k(i), and the calculation of likelihood function is based on the template pool T{k}.In order to fully characterize the individual difference of each ant, two parameters, i.e., ant state and its influence region, are jointly updated to achieve better tracking performance based on the aboveωs_temp,k+1(i). In terms of the state update, we follow the same rule as Eqs. (5)–(9) in [35], but both the velocity and influence region restrictions are introduced to make ants move toward area of interest step by step. For instance,xs,k(i)andxs,k+1|k(j), respectively, represent the previous state of ant i and the state to be selected by ant i, and the following rule is applied to ant i(14)velok(i)=velomaxifxs,k+1|k(j)−xs,k(i)/T>velomax(xs,k+1|k(j)−xs,k(i))/Tif|xs,k+1|k(j)−xs,k(i)|/T≤velomax−velomaxifxs,k+1|k(j)−xs,k(i)/T<−velomaxwherevelomaxdenotes the maximum speed of ant i, and T is the sampling interval.Meanwhile, one step distance of ant i is also restricted within the range of[σmin,σs,k(i)], whereσs,k(i)≤σmax, σmin and σmax denotes the minimum and maximum influence regions, respectively.Once all ants finish their individual state updates, denoted byxs,k+1(i)i=1N, we further use the information to update the influence region represented by(15)σs,k+1(i)=K⋅ω¯s,k+1ωs,k+1(i)σs,k+1|k(i)whereσs,k+1|k(i)denotes the prediction of influence region withσs,k+1|k(i)=σs,k(i),ωs,k+1(i)is the update likelihood score using the same form as Eq. (13) withxs,k+1(i),ω¯s,k+1denotes the average likelihood score over all ants in colony s, and K is the adjustment coefficient. It can be seen that the bigger the likelihood score is, the smaller the influence region is, which means that if an ant is close to an object of interest, it will continue searching for a better candidate within a small area around its current position.Because the new position of each ant is finally obtained, its corresponding deterministic moving mode is evident. Therefore, in terms of updating mode probability, we use three different mode candidates as a basis to normalize weights(16)πs,k+1(i)=[πs,k+1(i),1,πs,k+1(i),2,πs,k+1(i),3]T∑j=13πs,k+1(i),jwhereπs,k+1(i),j=h(zk+1|xs,k+1(j))∑l=13h(zk+1|xs,k+1(l))πs,k+1|k(i),jNote that the above likelihood score is computed on the histogram template pool T{k+1}, and such a definition encourages more ants to select the mode with a higher mode probability in the following decisions.In our proposed multi-task ant system, each colony in principle corresponds to one object, and our focus, therefore, is how to describe the degree to which an ant colony has found the corresponding object, which is also represented by the existing probability of ant colony(17)qs,k+1=f¯(qs,k+1|k,h(⋅))=qs,k+1|kf(xs,k+1),h(zk+1|xs,k+1)1−qs,k+1|k+qs,k+1|kf(xs,k+1),h(zk+1|xs,k+1)where 1−qs,k+1|kdescribes the degree to which ant colony s has not found the corresponding object, or the disappearing probability of ant colony s at time k+1.Although we have addressed the main attributes of our algorithm in previous sections, some contributions, which do not appear in [23,34,35], are summarized and listed below.•Candidates. In terms of the ant individual selection level, our algorithm assumes that each ant decision is based on three candidates corresponding to three modes, however, in [34], the stochastic selection is evaluated on all ants’ predicted N positions where N≫3;Movement. In our algorithm, each ant moves gradually toward region of interest, but in [35] some ants are allowed to move at a big step, which results in big errors in velocity element of state;Efficiency. Our algorithm develops a novel likelihood function and builds the template sample pool in a dynamic way through learning rule. However, in [23], a large number of samples (850 or more) are first trained off-line, and the traditional kernel density estimate with Bhattacharyya distance is then used to calculate the likelihood score, which leads to an inaccurate tracking and less efficiency.In terms of the issues on algorithm implementation, ant colony at each step consists of two parts, i.e., the remaining ant colonies (except for the first iteration) and a fix number of ant colonies added at each step. We also assume that the total number of ant colonies is larger than that of objects, therefore, as the technique in [21–23], the merge process should be considered at the stage of state estimate for the sake of computation burden and prior constraints, and if the overlap ratio of two blobs corresponding two ants, respectively, is greater than a given threshold, the merge process is declared.To visualize our proposed algorithm in a full view, we summarize the main blocks as in Fig. 6, and corresponding implementation procedure is illustrated in Table 3.

@&#CONCLUSIONS@&#
In this paper, we propose a novel parameter estimate algorithm in the framework of track-before-detect, i.e., a multi-task ant system, to track multiple cells in various challenging scenarios. By introducing two different levels, namely, the ant individual level and the ant cooperation level, the ant individual motion is well regulated and the best information is exchanged both within colony itself and among ant colonies. The proposed algorithm has been tested on synthetic image data as well as on several real cell image sequences. Results based on the synthetic data experiments clearly show that the superiority of the proposed algorithm over the state-of-the-art multi-Bernoulli filter in terms of the cardinality estimate and the OSPA distance. The real cell image experiments have also confirmed the validity of multi-cell tracking using the proposed algorithm in terms of tracking errors and F-Measure. In addition, the guidelines of ant-related parameter setting are given for a general cell tracking task.