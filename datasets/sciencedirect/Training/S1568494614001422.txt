@&#MAIN-TITLE@&#
Integrated Fuzzy–HMH for project uncertainties in time–cost tradeoff problem

@&#HIGHLIGHTS@&#
Integrated Fuzzy–HMH method is used to solve a multiobjective time–cost tradeoff problem under real life uncertainties.The working of HMH is unconventional in comparison to other multiobjective evolutionary algorithms.Two standard test problems are attempted by HMH and it is demonstrated that results obtained from it are well diversified and converges toward the true Pareto front.Also, a case study of TCT problem is solved to demonstrate the efficient working of integrated Fuzzy–HMH method.

@&#KEYPHRASES@&#
Genetic algorithm,Simulated annealing,Fuzzy logic,Time–cost tradeoff,

@&#ABSTRACT@&#
Time–cost tradeoff (TCT) problem in project scheduling studies how to schedule project activities to achieve a tradeoff between project cost and project completion time. It gives project planners both challenges and opportunities to work out the best plan that optimizes time and cost to complete a project. In this paper, we present a novel method which examines the effects of project uncertainties on both, the duration as well as the cost of the activities. This method integrates a fuzzy logic framework with Hybrid Meta-Heuristic. Hybrid Meta-Heuristic (HMH) is an innovative approach which hybridizes a multiobjective genetic algorithm and simulated annealing. Integration of HMH and fuzzy logic is referred to as ‘integrated Fuzzy–HMH’. A rule based fuzzy logic framework brings up changes in the duration and the cost of each activity for the input uncertainties and HMH searches for Pareto-optimal front (TCT profile) for a given set of time–cost pair of each project activity. Two standard test problems from the literature are attempted using HMH. A case study of TCT problem is solved using integrated Fuzzy–HMH. The method solves time–cost tradeoff problems within an uncertain environment and carries out its sensitivity analysis.

@&#INTRODUCTION@&#
In real life projects, it is difficult to estimate time and cost of an activity due to presence of many uncertain variables such as management experience (ME), labor skill (LS), and weather conditions (WC). These uncertainties dynamically affect the project schedule during project implementation. To provide an optimal balance of time and cost, project managers are required to take these uncertainties into consideration. In the past several analytic and heuristic models on deterministic situations have been proposed to solve time–cost tradeoff (TCT) problem. CPM/PERT based probability theory is not effective to handle uncertainties in scheduling the project. It is convenient to represent the uncertainty features using fuzzy set theory.Time analysis of a project under uncertainties has been studied using fuzzy set theoretic approach [1]. Leu et al. [2] have used fuzzy set theory to model the variations in the duration of activities due to changing environmental factors. Many researchers have focused mainly on modeling the effects of uncertainties on the time of project activities while ignoring the effects on the cost of activities. An integrated fuzzy–genetic algorithm (GA) approach is used for the sensitivity analysis of TCT profiles [3]. A hybrid intelligent algorithm integrating stochastic simulations and GA is designed to search for the quasi-optimal schedules under different decision-making criteria [4]. Eshtehardian et al. [5] have presented an approach for the solution of TCT problem in an uncertain environment where fuzzy numbers are used to address the uncertainties in the execution time and cost of activities. Interestingly other type of uncertainties such as budget uncertainty has been incorporated into project TCT problem [6]. Exact methods or mathematical models require lot of computational effort to solve TCT problem. For real-life complex project networks, not only exact methods but also simple heuristic techniques fail to obtain optimal or near-optimal solutions efficiently. Vanhoucke and Debels [7] have used analytical method as well as tabu search heuristic to solve TCT problem. Pathak et al. [8] have solved TCT problem in presence of constrained resource using multiobjective GA. Nonlinear TCT problems of project scheduling is solved by neural network embedded multiobjective GA [9]. Vanhoucke has proposed a branch-and-bound algorithm for solving TCT problem [10]. An integrated ANN–HMH approach is used to solve nonlinear TCT problem [11]. An Intelligent approach is applied to solve resource-constrained nonlinear multi-objective TCT problem [12]. A survey of various approaches to solve TCT problem is detailed out in [13]. Wide varieties of TCT problems encountered in real world engineering projects are dealt in Srivastava et al. [14]. TCT problem is essentially a multiobjective optimization (MOO) problem with two conflicting objectives that need to be optimized simultaneously. MOO is a field reasonably explored by researchers in recent years since 1990 – as a result diverse techniques have been developed over the years [15]. Most of these techniques avoid the complexities involved in MOO and usually transform multiobjective problem into a single objective problem by employing some user defined function. In MOO there is no single optimum solution rather there exists a number of solutions, which are all Pareto-optimal solutions. This feature makes it hard to compare the results of various solution techniques of MOO, as it is the decision-maker who decides the ‘best solution’ out of all optimal solutions pertaining to a specific scenario [16]. Multiobjective evolutionary algorithms (MOEAs) such as genetic algorithms are suitable for searching a true Pareto front. Genetic algorithm based search techniques were developed by Holland [17], which are derived from the mechanics of natural selection and genetics to search through decision space for optimal solutions [18].In this paper, we present an integrated Fuzzy–HMH approach. HMH is used as a searching mechanism to establish the Pareto-optimal front, called true TCT profile in project management literature. It is important to note that the working (fitness function evaluation, etc.) of HMH is quite unconventional in comparison to other MOEAs [19,20]. HMH suits well to solve TCT problem, i.e. searching for the true TCT profile. The solutions obtained for the TCT profile are well diversed. It includes all relevant solution points which are required by the decision-maker in project compressing. Here, we incorporate elitism by keeping the individuals in the TCT profile for the next generation, as it helps in converging to the true TCT profile. Moreover, HMH is designed to work for two objectives project time and project cost. In most of the real world projects, the true TCT profile is unknown, so all such metrics [19] which measures the extent of convergence to a known set of Pareto-optimal solutions are not appropriate for our problem. HMH technique is tested on two standard test problems to illustrate its efficiency and accuracy. The uncertainties of time and cost of project activities are modeled using fuzzy set theoretic framework. Thereafter HMH is integrated with it to analyze the sensitivity of TCT profiles with respect to ME, LS and WC. The proposed method provides a comprehensive tool to project managers to analyze the effects of project uncertainties on time–cost profile in more flexible and realistic manner.The fuzzy set theory can be used in a wide range of domains in which information is incomplete or imprecise. To represent imprecise concepts fuzzy set theory is very powerful tool that uses linguistic variables rather than quantitative variables. Linguistic variable is a variable whose values are words or sentences in a given language. For example weather condition may have a value such as ‘good’ or ‘bad’ that are not clearly defined but are meaningful classifications.Fuzzy inference is the process of formulating the mapping from a given input to an output using fuzzy logic. The mapping then provides a basis from which decisions can be made. The process of fuzzy inference involves membership functions, fuzzy logic operators, and if–then rules. Fuzzy inference systems (FIS) have been successfully applied in many fields such as automatic control, data classification, decision analysis, expert systems and computer vision. We have employed Mamdani-type fuzzy inference system using MATLAB's fuzzy logic toolbox. Mamdani's fuzzy inference method [21] is the most commonly seen fuzzy methodology. Mamdani's effort was based on Lotfi Zadeh's paper on fuzzy algorithms for complex systems and decision processes [22].Normally in TCT problem, shortening of completion time of an activity increases its cost. The minimum cost required to complete an activity is referred to as the normal cost, and the corresponding duration is called the normal duration. The minimum possible duration required to complete an activity is called the crash duration, and the corresponding cost is called the crash cost. The linear relationship between the duration of an activity and its cost for an activity is shown in Fig. 1.The mathematical description of TCT problem is as follows. Let the set Ω represents the space of all feasible instances θ of the network where an instance θ={<ti, ci>|CTi≤ti≤NTi, i=1, 2, …, n} with tiand cias time and cost of ith activity respectively. n denotes the number of activities in the network. CTi, NTiare crash time and normal time of ith activity respectively. For ith activity, ci= fi(ti) where fi:[CTi, NTi]→R is a linear map. tθand cθdenote the project duration and project cost respectively. Three possible problem formulations for TCT problem are stated below.(a)Find θ* such thatcθ*=minθ∈ϕ{cθ|tθ≤d}where d is the given project deadline.Find θ* such thattθ*=minθ∈ϕ{cθ|tθ≤b}where b is the given project budget.When the objective is to identify the entire TCT profile for the project network, then the problem is to find B={θ*∈ϕ | ∄ θ∈ϕ with(tθ≤tθ*)∧(cθ≤cθ*)}with strict inequality in at least one case.Here the set of instances θ* represents the entire TCT profile over the set of feasible project durations for the network. The decision-maker is free to choose a θ* depending on specific project requirements. This formulation is the most generalized one, which has been addressed in this paper.Preliminaries of HMH technique for TCT problem are as follow.The solution is a string (Fig. 2) which basically represents an instance θ of the project schedule. Each element ti(time) of an n-tuple string X:[t1, t2, t3, …, tn], can assume any value (a positive real number) from [CTi, NTi]. Associated project duration (tθ) and project cost (cθ) of each individual string is determined by computing the maximum path time and by summing up the cost for each activity respectively.The initial population consists of npsolutions, where (np−2) strings are selected randomly from the feasible search space, i.e. each tiof a string is selected randomly from [CTi, NTi]. The remaining two strings are formed such that for the first string ti=NTiand for the second string ti=CTi, ∀i=1, 2, …, n. This will ensure a good diversification of population in each generation of HMH technique while searching for optimal TCT profile. These solutions are referred to as ‘parents’.Let θ1 and θ2 are two strings in a populationℙ, θ1 dominates θ2 iftθ1≤tθ2andcθ1≤cθ2with either beingtθ1<tθ2orcθ1<cθ2. LetDbe a binary relation defined on the setℙbyD={(θ1,θ2)|θ1,θ2∈ℙ∧θ1dominatesθ2}, then the non-dominating set NDS is given byNDS={θi∈ℙ|(θi,θj)∉D∀j,j≠i}, i.e. it represents the strings (solutions) ofℙwhich are not dominated by any other string ofℙ. Non-dominating solutions are referred to as tradeoff points (Fig. 3) and the curve joining these tradeoff points is called TCT profile in the context of project management literature.We define a convex hull merely as a boundary (set of points) that encloses all members of a population with smallest convex set. This boundary is in the form of straight line segments (Fig. 3). The purpose of drawing a convex hull for each population of HMH technique is to evaluate the fitness of each individual in the population [22]. A convex hull may not include all the solution points of the Pareto optimal set.The distance diof an individual solution point in a population is determined by calculating the minimal Euclidean distance dikbetween the ith solution point and each of the segment k of the convex hull, i.e.di=min∀k(dik)(Fig. 3). The solutions with a lower value of distance are considered to be better fit than those having larger value of the distance.One point crossover is considered in this study. In one point crossover, the ith string (parent) Piproduces a new string by performing crossover with another jth string (parent) Pj, selected randomly. A random integer q with 1≤q≤n is selected, where q represents the crossover site. The first q positions of the new string (child) are taken from the first q positions of Piwhile the remaining (n−q) positions are defined by the (n−q) positions of Pj.The mutation operator modifies a randomly selected activity of a string with a probability pm. In this study,(pm×∣ℙ∣)strings will undergo for mutation. The mutation operator works on a given string in the following manner.A random number r, r∈[CTi, NTi] is generated for the gene to be mutated. The value of an element ti, 1≤i≤n in string X:[t1, t2, t3, …, tn] is randomly replaced by r.Simulated annealing (SA) is a stochastic optimization method for searching the global optimum in the entire search space. It is introduced by Kirkpatrick et al. [23] into the context of minimization problems. The SA algorithm is inspired by the process of annealing in metal work. Annealing involves heating and controlled cooling of a material to modify its physical properties due to the changes in its internal structure. As the metal cools, its new structure becomes fixed and retains its newly obtained properties. In SA, the heating and cooling process is simulated by changing the global parameter T (called the temperature). Initially this temperature is set to high and then gradually decreased during the annealing process. When T is high, the algorithm allows to accept the solutions that are worse than other current solution. Consequently it gives the ability to escape from local optima. When T is gradually reduced, the algorithm focuses on finding a solution which is close to optimum. Gradual ‘cooling’ process makes the SA algorithm effective for finding close to optimum solution when dealing with large size problems which contain various local optimums. In the initial iterations of algorithm the probability of accepting a bad solution is high (almost one) and in the final stage of iterations it comes down to almost zero. If the solution is worse then it may be accepted based on Boltzmann probability factor. The probability factor is regulated by T, that provides a mechanism for accepting a bad solution. In the context of this paper, the initial and final temperatures are denoted by T1 and Tmaxrespectively.The initial temperature, T1 and final temperature, Tmaxare calculated using Boltzmann criterion which is detailed out bellow.Initially the probability of accepting a bad move is approximately one, i.e.exp−ΔxavgT1=0.99ThereforeT1=−Δxavgln(0.99)and finally it isexp−ΔxavgTmax=0.0001ThereforeTmax=−Δxavgln(0.0001)where Δxavgis the change of distance between the two neighborhood points in search space. This distance is calculated over the number of solutions.The initial temperature, T1 is gradually decreased using the following cooling ratio and it comes down to almost zero in the final stage of iterations.Tk+1=Tk1+β×Tkwhere β=(T1−Tmax)/(T1×Tmax×(max−1)) and superscript k represents the iteration count.Hybrid Meta-Heuristic (HMH) technique begins with generating an initial population of npsolutions (Section 2.2). Initially each parent j is allowed to produce mjnumber of children, where mj=nc/np, ncis the total number of children produced in a generation; this number is suitably chosen so that the search space can be extensively scanned for the selection process to follow. It is important to note that if mjis a fractional digit, then it is rounded-off to the closest higher integer value. A parent produces a child by performing the crossover with a randomly selected string from the remaining population of parents as given in Section 2.5. Thereafter, mutation (Section 2.6) is applied on randomly selected strings of the population. The parents together with its children constitute a family; all the solutions in a family are referred to as members of the family. Thus, throughout the procedure, npfamilies exist in each generation of population. In the initial generation, each family has a single parent. The generation (i.e. all the parents together with their children) is suitably sorted on both objectives using Kung et al.'s efficient method [19]. The computational complexity of this algorithm is O(NlogN) for M=2 and 3, where M is number of objectives to be optimized. Now the Pareto front or TCT profile of the generation is determined which represents the non-dominated set of solutions (Section 2.3). Thereafter, the convex hull is drawn. The basic idea for drawing the convex hull is that if the distance of an individual from convex hull is smaller than other individuals, then this individual has better fitness with respect to either one or all of the objectives. For each family j, its members on the Pareto front are counted; say qj, j=1, …, np. These qjmembers become the parents for the jth family for the next generation. However, if for the jth family, no member appears on the Pareto front, then family is not rejected all together in the hope of its improvement in future. To decide the parent for the next generation from this family, a member of this family which is ‘nearest’ to the Pareto front is selected. This ‘nearness’ is measured by the fitness function (Section 2.4). The importance of the number qjis twofold. Firstly it determines the parents for the next generation selected from each family and thereafter children for the next generation. This is how elitism is incorporated in the algorithm, which helps it in converging closer to Pareto-optimal front. Elites of a current population are given an opportunity to be directly carried over to the next generation. Therefore, a ‘good’ solution found in a current generation will never be lost unless a better solution is discovered. The absence of elitism does not guarantee this feature. Arias and Coello [24] have proved that EAs for MOO converge to the global optimum solution for some functions in the presence of elitism. Importantly the presence of elites enhances the probability of creating better offspring [19]. It is observed that this heuristic helps in keeping a ‘good’ distribution of solutions over the Pareto front. The next step is to decide the number of children mj, j=1, …, npallocated to each family in the next generation. This number provides the information of how good each family is with respect to the diversification. To achieve this, a distance measure (Section 2.4) has been defined which measures the ‘nearness’ of each member of a family to the Pareto front. To select the number of children, i.e. mj, for the next generation, the process of simulated annealing has been incorporated into the selection process (Section 3.2). The number mjis proportional to the number of members of the jth family which are close to the convex hull. Further, qjalso plays a direct role in measuring the fitness of each family j, that is, number of children to be produced in the next generation by family j is determined by qjplus the number of family members who qualify the Boltzman criterion (Section 2.7.1). This is obvious as these qjmembers are on the TCT profile. As mentioned earlier, initially each family has a single parent, but in subsequent generations the number of parents for each family may be more than one (as qj>1 for the families whose members are on the Pareto front). In such a case, the number mjis almost equally divided among these qjparents for producing the children. The process is repeated until no improvement is observed in the TCT profile for a specified number of generations. The algorithm is robust enough to search for the best family in the evolution process.Step 1:Set initial temperature, max_itr, np, nc, Gen=1.Select npparents, these npparents include (np−2) parents selected randomly and remaining two parents by taking shortest and longest durations of the activities.For j=1 to npdomj=ncnp.Generate ncnumber of children from the parents. Here j parent produces mjchildren.Parents with their corresponding children creates npfamilies.Determine the TCT profile and convex hull of the existing generation, i.e. parents with their children constitute a generation.For each family j, j=1, …, np, do steps 6–8.Find the number of members appearing on the Pareto front, i.e. qj. These members become the parents for the next generation.For each member i, i=1, …, (qj+mj), diis computed as defined by the distance function in Section 2.4.Determine the number of children mjfor the next generation, as detailed out in Section 3.2.Parents (those mentioned in step 6) produce mjchildren by performing crossover with other members of the NDS. If no member of a family appears in the NDS then the new parent for this family is considered as the parent having best fitness value among all the members of the family.Apply mutation.Gen=Gen+1.Decrease the temperature.Repeat steps 5 to 12 until Gen≠max_itr or the TCT profile remains identical.Step 1:Initialize sum=0, accept=0.for j=1 to npdo accept(j) = 0.Repeat step 3–6 for each family j.Repeat step 4 for each member of the family.If the member is not in the NDS thenif (exp(dik/T)>ρ), where ρ is a random number between 0 and 1accept(j)=accept(j)+1endsum = sum + accept(j) + q_j.for j=1 to npdo mj=(nc×accept(j))/sum, where mjis the number of children produced by the jth family.In this section we introduce the graphical user interface editors and viewers in fuzzy logic toolbox to define membership functions and fuzzy rules set.FIS editor as shown in Fig. 4is used for capturing the effects of input linguistic variables (ME, LS, WC) on each output variable (activity duration and activity cost) of the project network. These linguistic variables are modeled using triangular membership functions.For each activity of the project network, input linguistic variables namely ME, LS and WC are defined in the range [0, 1] and are modeled using five triangular membership functions as shown in Figs. 5–7respectively.The output variables ‘activity duration’ and ‘activity cost’ have been modeled by 7 membership functions over the universe of discourse (UOD) for each activity of the project network. Membership function for ‘activity duration’ and ‘activity cost’ are shown in Figs. 8 and 9respectively. The range of UOD for ‘activity duration’ and ‘activity cost’ is assumed to be between (D−0.2×DtoD+0.2×D) and (C−0.2×CtoC+0.2×C) respectively. It can be noted that lower and upper bounds of range of UOD for ‘activity duration’ represent crash duration and normal duration respectively. Similarly lower and upper bounds of ‘activity cost’ depict crash cost and normal cost respectively.As mentioned in Sections 4.2 and 4.3, each input linguistic variable is modeled using five membership functions and each output linguistic variable is modeled using 7 membership functions, therefore a total of 6125(5×5×5×7×7) sets of fuzzy rules are possible for each activity of the project network. In this paper, 252 sets of fuzzy rules are designed for each activity. This number is suitably decided by performing the experiments on various combinations of set of fuzzy rules. Out of 256 sets of fuzzy rules 126 sets of fuzzy rules are for ‘normal time’ and ‘normal cost’ of project activities and remaining 126 sets of fuzzy rules are for ‘crash time’ and ‘crash cost’. For illustration, If ME is ‘very less’, LS is ‘very low’ and WC is ‘bad’ then ‘activity duration’ is ‘very long’ and ‘activity cost’ is ‘very large’ is one rule (Fig. 10) out of 126 rules and remaining 125 fuzzy rules sets are designed by taking different combinations of linguistic input variables (ME, LS, WC) and linguistic output variables (‘activity cost’, ‘activity duration’).Defuzzification is employed to each linguistic time–cost pair corresponding to the normal and crash conditions to transform a new time–cost pair, which reflects the effect of fuzzy conditions. This new time–cost pair is referred to as ‘fuzzy time–cost’ pair.The proposed method starts by inputting project uncertainties (ME, LS, WS) in fuzzy logic framework (Section 4), which generates ‘fuzzy time–cost’ pair for each activity of a given project. Thereafter ‘fuzzy time–cost’ pair goes as input data to HMH technique, which works as stated below.HMH begins with generating an initial population (Section 2.2) of size np. Each parent-string of the initial population generates m=nc/npnumber of children by performing crossover (Section 2.5) and mutation (Section 2.6) with other strings of parents, where ncis the total number of children generated in one generation. Parent-strings and their corresponding children together make npfamilies. Tradeoff points and convex hull (Section 2.3) of these npfamilies are determined and plotted. Tradeoff points of each family become the ‘parents’ of the family for the next generation. If a family has no tradeoff points, the nearest point (Section 2.4) of the family is made the parent of the family for the next generation. The next step is to decide the number of children for the next generation by simulated annealing process (Section 3.2). These children are generated for each parent by performing crossover and mutation with the other parent-strings. Tradeoff points and convex hull of next generation family are again determined and plotted. This process is repeated for a pre-specified number of generations or alternatively, until no improvement is seen in the individuals on the Pareto-optimal front for a pre-specified number of iterations, i.e. no shifting of the TCT profile is observed for a certain number of generations.Two standard test problems [19] involving convex Pareto-optimal front are successfully attempted using HMH. On visualizing the results (in the form of graphs) it is clear that HMH produces non-dominating solutions that are good enough from diversity and convergence viewpoints.This problem has two objectives, which are to be minimized:SCH:f1(x)=x2f2(x)=(x−2)2−A≤x≤AThis problem has Pareto-optimal solutions x*∈[0, 2] and the Pareto-optimal set is a convex set:f2*=(f1*−2)2in the range0≤f2*≤4. The values of the bound-parameter A are taken as [−10, 10] for this study.The non-dominated solutions obtained from HMH technique lie on the Pareto-optimal front and the solutions are well distributed in solution space (Fig. 11). This shows that HMH technique converges to Pareto-optimal front for this test problem.The ZDT1 test problem has two objectives which are to be minimized is illustrated below:ZDT1:f1(x)=x1f2(x)=g(x)[1−x1g(x)]g(x)=1+9n−1∑i=2nxiThis problem has 30 variables which lie in the range [0, 1] and convex Pareto-optimal solutions lie in the range0≤x1*≤1andxi*=0for i=2, 3, …, 30.The non-dominated solutions obtained from HMH technique fairly matches with Pareto-optimal front and the solutions are well distributed in solution space as shown in Fig. 12. Therefore, HMH technique demonstrates its ability in converging to Pareto-optimal front and in finding the diverse solutions for large size problems.A typical project network involving 18 activities is taken from [25] as a case study with suitable modifications so as to have continuous and linear relationship between time and cost of each activity. The precedence relationship of project activities is shown in Fig. 13. Table 1shows the important parameters of each activity for this network. To solve this test problem using integrated Fuzzy–HMH approach, initial population (np), the ratio (nc/np), and mutation rate (pm) are selected as 60, 8 and 0.02 respectively. To decide the parameter np, experiments are done with different values of np, ranging from 20 to 100. For each value of np, 50 trials are conducted by keeping other parameters constant. The average time to converge to the final TCT profile is fastest for np=60 and reported in Table 2. Similar experiments are conducted to decide the SA parameters – T1 and Tmax; which ensure the faster convergence to the final TCT profile. The SA parameters – T1 and Tmaxare chosen as 100 and 0.1 respectively. In addition, the search is set to terminate when the TCT profile does not change in five consecutive iterations (it was found to be a good enough number).Firstly we run HMH with normal conditions, i.e. ME=0.5, LS=0.5, and WC=0.5 and obtain TCT profile. Thereafter we input various fuzzy conditions in user interface by changing the values of ME, LS, WC; clearly TCT profile moves up and down, as it is sensitive to different values of ME, LS and WC. If the values of these linguistic variables are greater than (0.5, 0.5, 0.5), i.e. better than normal conditions, the profile moves toward the coordinate axes, i.e. project duration and cost reduce and vice versa. The effects of the fuzzy conditions are shown in Fig. 14and their corresponding values are given in Tables 3–7. Here project cost is in $(1.0e+005) and project time is in days. Table 3 shows the project cost and time under normal conditions (ME=0.5, LS=0.5, WC=0.5). Table 4 describes the pessimistic case wherein the values of ME, LS, and WC worsen, i.e. ME=LS=WC=0.3, these values go down below the normal ones. As obvious, in this case the whole TCT profile shift upwards, i.e. it moves away from coordinate axes (Fig. 14). Responsiveness of TCT profiles can also be well analyzed for a mixed scenario (Tables 5 and 6). In Table 5 values of linguistic variables are below the normal conditions, i.e. ME=0.3, LS=0.2, and WC=0.1 while in Table 6 values of linguistic variables are above the normal conditions, i.e. ME=0.8, LS=0.7 and WC=0.1.Further, HMH is run with the normal conditions and TCT profile is obtained (Table 8). This time the values of linguistic variables are taken in different ways, i.e. some linguistic variables have the values above the normal conditions and some below the normal conditions (Tables 9 and 10). Table 11 represents the case where the value of one linguistic variable is above the normal condition, one value is below the normal condition and one value is at the normal condition, i.e. ME=0.8, LS=0.5 and WC=0.3. Graphically results of Tables 8–11are shown in Fig. 15.Also the statistical analysis for tradeoff points of Figs. 14 and 15 are given in Tables 12 and 13respectively to improve the clarity of the results.Performance of HMH technique has been tested on two benchmark problems in Section 6. It has been shown that HMH produces non-dominating solutions that are good enough from diversity and convergence viewpoints. In this section, TCT profile of 18 activities project network (Fig. 13) is solved with HMH as well as with MOGA [25] and their results are compared. For comparison purpose genetic parameters are kept same for both HMH and MOGA techniques. Initial population for the first generation (Parent+Children) and mutation rate (pm) are selected as 200 (20+180) and 0.02 respectively for both techniques. It should be noted that in the case of HMH the initial population, which is 200, comprises 20 parents and 180 children, whereas in the case of MOGA the initial population (200) comprises entirely of parents. Both approaches are run for a maximum of 500 iterations. Results obtained from HMH technique are more diversified and have the better convergence as shown in Fig. 16.Furthermore, discrete TCT problem [25] has been attempted with HMH and it has been shown that it efficiently finds a ‘good’ TCT profile after examining a small fraction of possible solutions [26].

@&#CONCLUSIONS@&#
Integrated Fuzzy–HMH method is used to solve a multiobjective TCT problem under real life uncertainties. The working of HMH is unconventional in comparison to other multiobjective evolutionary algorithms. Two standard test problems are attempted by HMH and it is demonstrated that results obtained from it are well diversified and converges toward the true Pareto front. A rule based fuzzy logic framework is designed that facilitates the representation of imprecise input uncertainties, the estimation of ‘fuzzy time–cost’ pair for each activity based on input uncertainties and interpretation of fuzzy results in the crisp forms. HMH searches for the Pareto-optimal front for time–cost data set generated by fuzzy logic framework under user-defined project uncertainties. Also, a case study of TCT problem is solved to demonstrate the efficient working of integrated Fuzzy–HMH method. The proposed method is an efficient tool for project managers to monitor the sensitivity of TCT profiles with respect to real life uncertainties in project environment.