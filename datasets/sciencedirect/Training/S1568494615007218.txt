@&#MAIN-TITLE@&#
Application of NSGA-II algorithm to the spectrum assignment problem in spectrum sharing networks

@&#HIGHLIGHTS@&#
We investigate the sum throughput and spectral efficiency tradeoff by using NSGA-II.The throughput is maximized at the cost of spectral efficiency.We provide a small set of Pareto optimal solutions in a fast manner.

@&#KEYPHRASES@&#
Spectrum sharing,Spectrum assignment,Multi-objective optimization,NSGA-II,

@&#ABSTRACT@&#
To cope with drastically increasing user demands for spectrum resource, spectrum sharing is a strategy that greatly alleviates scarcity. However, without a proper spectrum sharing scheme, the use of concurrently shared channels between primary (or licensed) users and secondary (or unlicensed) users within one cell can lead to harmful interference, lowing spectral efficiency and throughput of the system. In this paper, we address the problem of spectrum assignment (SA) in an underlay spectrum sharing network. An SA algorithm is considered as the mechanism for secondary users exploit primary channels while maintaining the interference in acceptable levels, ensuring that the primary system performance is not compromised. We model this scenario as a multi-objective problem (MOP) and we propose the application of Non-dominated Sorting Genetic Algorithm-II (NSGA-II) to face the throughput and spectral efficiency tradeoff. The simulation results demonstrate through the Pareto optimal set, that our approach maintains the quality of service (QoS) of primary and secondary networks and maximizes the throughput of the system at the cost of spectral efficiency. The experiments and results are compared with Weighted Sum Rate (WSA) and the Parallel Cell Coordinate System Adaptative Multiobjective Particle Swarm Optimization (pccsAMOPSO) for different cases for the SA problem.

@&#INTRODUCTION@&#
The evolution of radio technology and various services has increased the world's dependence on wireless communications, growing the demand and the cost of the spectrum resource [1]. The spectrum is a natural resource regulated by governmental bodies, which decide on the use of the band and provide each user with the right to transmit on a particular frequency over a specific area, in the form of a license. This tight regulatory control over the use of the spectrum ensures that an excessive interference among wireless technologies does not occur; however, it has led to severe under-utilization of the spectrum as several spectrum occupancy measurement campaigns around the world have pointed out [2,3]. Therefore, the lack of the spectrum is mainly due to the fixed spectrum management policy. A compelling approach to the enhancement of the use of the spectrum, is the concept of spectrum sharing that allows two or more networks (from different wireless technologies) to operate in a given geographical region in the same frequency band [4]. In this context, the terms primary user (PU) and secondary user (SU) are often used; PUs have a guaranteed access since they are licensed users, whereas SUs can access licensed spectrum, as long as they cannot harm the operation of the PUs [4]. To fulfill this, SUs are empowered with cognitive radio (CR) technology, which allows them to change autonomously their transmission parameters based on their interaction with the environment in which they operate in order to access the spectrum dynamically. Therefore, it is expected that future wireless devices no longer operate on the statically assigned spectrum, but to acquire the spectrum on demand [5].The basic requirement for a spectrum sharing network is that SUs should not interfere with communication of PUs which makes the problem of interference control more complex than in traditional wireless networks, since another level of interference avoidance is included in the problem definition. In other words, SUs should not only avoid interfering with each other but also with PUs that have guaranteed access in the licensed spectrum band. To address this issue, spectrum assignment (SA) plays a vital role in a spectrum sharing network since it is the mechanism that limits the interference between SUs and PUs operating in the same geographical area. SA assigns the most appropriate frequency band to an SU according to one or more criteria: interference/power, spectral efficiency, throughput, fairness, delay, price, energy efficiency, risk, and network connectivity [6].In general, the procedure to solve the SA problem in a spectrum sharing network consists of three steps: (a) Define the target objective(s). (b) Definition of an approach that best fits the target objective(s). (c) Selection of the most suitable technique (heuristics, graph theory, game theory, linear programming, fuzzy logic, and evolutionary algorithms) that simplifies the solution of the SA problem [6].This paper investigates the SA problem in an underlay spectrum sharing network. The problem is modeled as an MOP with two conflicting objectives: (1) Maximizing throughput and (2) Maximizing spectral efficiency (number of SUs served). The aim is to find the Pareto optimal solution, whether it exits, for the SA problem from a big diversity of possible combinations of secondary users deployed in an area along with their primary channels assigned; this challenge needs to be treated as a combinatorial optimization problem that can become numerically intractable as the network size increases [7]; from the point of view of computational complexity, it is classified as an NP-hard problem, since it will require algorithms with the ability to solve problems in nondeterministic polynomial (NP) time, but the solution can be verified in polynomial time, moreover, the term hard means that it is at least as hard as the hardest problems in NP [8,9]. To perform selection, solutions are represented as binary variables: state 0 indicates that the SU is discarded, and state 1 indicates that the SU is selected. The size of the binary search space doubles with each element (SU) added to the bitstring (solution). Therefore, it is not practical or possible to consider every combination. To reduce the size of the search space and find a good answer without evaluating every possibility, we apply the Non Dominated Sorting Genetic Algorithm II (NSGA-II) [10]. Through a number of benchmark problems (e.g., [10,11]), NSGA-II algorithm has demonstrated to be one of the efficient algorithms for solving an MOP, outperforming other contemporary multi-objective evolutionary algorithms (MOEAs) such as Pareto-Archived Evolution Strategy (PAES) [12] and Strength-Pareto Evolutionary Algorithm (SPEA) [13].Basically, the above MOEAs deal with three features [14]: (1) fitness assignment based on Pareto-domination; (2) elitism/archiving; and (3) niching. Considering fitness assignment, SPEA uses an inefficient algorithm to perform this task since it assigns each solution a “strength” reflecting its degree of nondominatedness. The strength is assigned according to dominance counts, that is, a non-dominated solution has a low strength if it dominates few other solutions. On the other hand, the elitism/archiving feature is performed to preserve the best individuals. Unlike NSGA-II, PAES and SPEA use an archive separate from the population in which the elite is stored. This implies that a new candidate solution is compared with the list of solutions into the archive, while insertions and deletions are done in constant time. Moreover, SPEA updates its archives in large batches, alternating between filling up the population and inserting new non-dominated solutions into the archive. Finally, niching feature is employed to reach a nice spread of solutions. To perform niching, PAES and SPEA insert new non-dominated solutions into the archive until a maximum size is reached. Then, if a new non-dominated is found, this replaces a solution which is in the most crowded region of the archive. The above is time consuming since the calculation of the nearest neighbor for all solutions in the archive is required. NSGA-II performs niching scheme much faster by using the crowding distance.Similarly to MOEAs, the Multi-Objective Particle Swarm Optimization (MOPSO) exploits a population (a swarm) in which each potential solution (a particle) is modified stochastically at each iteration. Unlike MOEAs, MOPSO promotes a cooperative model rather than a competitive model. It considers the concept of Pareto dominance to produce non-dominated best positions (leaders) to guide the swarm during the search [15]. However, similarly to SPEA and PAES, MOPSO uses an archive separated from the swarm to store leaders, which are used to update the positions of the particles of the swarm. If the archive is not bounded, its update may become very expensive. In the worst case, when all members of the swarm may wish to enter into the archive at each iteration, the complexity of the updating process for the complete run is of O(kMN2) where N is the size of the swarm, k is the number of objectives, and M is the total number of iterations. Thus, it is desirable that the external archive has a bounded size, imposing rules regarding the replacement of existing solutions with new ones [16]. The selection of a member of the external archive along with the update of archive and best positions, are still being open issues in the development of MOPSO approaches.To the best of our knowledge, there is no effort to treat the throughput and spectral efficiency tradeoff in the context of an underlay spectrum sharing network and to find it using NSGA-II. Instead, there are considerable efforts using NSGA-II in a vast variety of criteria such as in [17–20] to let more wireless devices operate opportunistically within unused frequency bands referred as white spaces (overlay strategy). However, this transmission technique performed by SUs relies heavily on the real-time spectrum sensing mechanisms, hitherto they have not been successfully used due to its complexity, accuracy of the sensing techniques, platform's costs, among others. Quantitative analysis shows that it is technically possible to deploy additional wireless devices on a secondary basis in the spectrum that current users would view as 100% utilized, without causing any harmful interference to the PUs [21]. The above is referred as the underlay strategy, in which one or more SUs that perform it, can exploit concurrently a channel with the PU.When maximum throughput in an underlay spectrum sharing network is considered as a criterion, such as in [4,22–26], PUs are not taken into account in the total sum throughput. Although it simplifies the SA problem, the primary and secondary networks compose the spectrum sharing system. The aforementioned works only attempt to maximize the throughput of SUs. In this context, in [26], an MOP is formulated but unlike our approach, it addresses the energy-throughput tradeoff posed as a Bellman equation to maximize.On the other hand, studies which maximize spectral efficiency or the number of SUs served, in an underlay spectrum sharing network are [27–30]. In [27], an algorithm which removes SUs with poor channel conditions is used. The above may create unfairness in the spectrum distribution among SUs since they are left with no available spectrum, favoring the ones with good channel conditions. In contrast, approach in [28] considers the interference temperature model. However, in 2007, the Federal Communications Commission (FCC) abandoned its use due to difficulties in implementing this concept [31]. In [29] the authors use two target objectives: (i) Maximization of throughput and (ii) maximization of spectral efficiency. They are addressed separately by applying different techniques to solve them. This strategy can be expensive computationally since two sequential techniques are used to find each objective. Finally, in [30], the authors don’t take into account the QoS for SUs; however, the QoS requirement should be considered since their transmissions should be also guaranteed.A feature covered in the literature so far is the case of enabling SUs with a hybrid mode to exploit channels, i.e., they can switch between overlay and underlay modes of operation. The studies [24–26,30] let operate the SUs in the hybrid mode. The different approaches reviewed in this part of the paper along with the corresponding references are summed up in Table 1.The need to face the throughput-spectral efficiency relationship to guide the service-provider to deploy an underlay spectrum sharing network, is concluded from results in [32]. The transformation of the single-objective framework presented in [32] into an MOP framework allows managing more information. If we regard the problem from different points of view, i.e., in terms of service-provider needs for a safe coexistence between SUs and PUs, or in terms of SUs needs to achieve higher throughputs for specific applications or better spectrum distribution among SUs. Therefore, a model that considers such objectives simultaneously could produce solutions with a higher level of equity. To obtain from a single-objective optimization the best possible system design, a usual practice is to apply parameter studies in which constraints and components of the objective are varied, in order to see how the optimal solution changes with respect to these parameters. However, even with parameter studies, a single-objective optimization does not provide a global view of the system as an MOP does [33].The rest of the paper is organized as follows: the Section 2 describes the statement of SA problem. In Section 3, the optimization problem is explained. Then, in the Section 4 the application of the NSGA-II to solve the SA problem is presented. The Section 5 provides results and finally in the Section 6 the conclusions are given.We consider an underlay heterogeneous network model where a secondary network exists within the coverage area A of a primary network as shown in Fig. 1. The primary network consists of Pl primary users (or primary links) which locations are fixed, whereas, the secondary network consists of Sl secondary users (or secondary links) randomly distributed on A. The union of a transmitter (Femto-Base Station, FBS) and its corresponding receiver (femto-user) constitutes the secondary link; then, it is identified by a number beside the link. Similarly, the association of a transmitter (Macro-Base Station, MBS) and the receiver (macro-user) is mentioned as a primary link, which also is identified by a number beside the link. A channel (the number in brackets in Fig. 1) can be assigned to one or more secondary links (the number in braces in Fig. 1), as long as they, together, do not disrupt communication of the primary link. MBS and FBS can transmit at any given channel at full power; therefore, transmission power is maintained constant.The basic limiting factor for spectrum reuse is interference; therefore, it is important to reduce its effects to PUs, as well as among SUs. Interference introduces additional noise at the receiver; as a result, it lowers the Signal to Interference plus Noise Ratio (SINR) which leads to reduced throughput and utilization of the wireless resources [6]. The SINR parameter is a measure that expresses how much interference is perceived by the receiver device (primary or secondary) on a current link from the set of active transmitters, which use the same channel. To work properly, the wireless applications must meet minimum signal quality levels (SINR thresholds). The aforementioned is known in wireless communications as Quality of Service (QoS). For example, voice for multimedia requires SINR values between 3 and 10dB to guarantee a good service, therefore, SINR threshold ≥3dB [1].A successful reception of a transmission at a primary link depends on whether the SINR observed by the macro-user is larger than an SINR threshold (denoted by β). The SINR at the receiver of the primary link v is given by:(1)SINRv=Pv/ldp(v)n∑k∈ΦPk/dps(k,v)n,1≤v≤Plwhere Pvis the transmit power of the primary link v, ldp(v) is the link distance of the primary link v, n is the path loss exponent (a value between 2 and 4 can be selected), those parameters characterize the desired signal. On the other hand, Pkis the transmit power of secondary link k, dps(k,v) is the distance from the transmitter in secondary link k to the receiver in the primary link v. k is the index of active secondary transmitters. Φ is the set of the active secondary transmitters. The aforementioned refers to the aggregated cross-tier interference, that is, the total interference from secondary links that attempt to exploit concurrently a channel with the primary link v. In Fig. 1, SINRvis computed in the primary link 2.Similarly, the SINR at the receiver of the secondary link u is given by:(2)SINRu=Pu/lds(u)nP∑k∈ΦPk/dss(k,u)n+Pv/dps(v,u)n,1≤u≤Slwhere Puis the transmit power of the secondary link u, and lds(u) is the link distance of secondary link u. Meanwhile, Pkis the transmit power of the transmitter of secondary link k, dss(k,u) is the distance from the transmitter of secondary link k to the receiver of secondary link u. The above represents the aggregate intra-tier interference. In contrast, Pvis the transmit power of the primary link v, dps(v,u) is the distance from the transmitter of the primary link v to the receiver of secondary link u. The aforementioned refers to the cross-tier interference perceived by the receiver of secondary link u. α represents SINR threshold for the secondary links. In Fig. 1 shows the SINRucalculated in secondary link 5.Data rate contributions of the secondary and primary links are derived from Eqs. (3) and (4), respectively. The data rate depends on channel bandwidth B that secondary and primary links can share and the conditions of the propagation environment (attenuation and interference).(3)c′u=Blog2(1+SINRu)(4)c″v=Blog2(1+SINRv)The following formulation explains the SA problem in an underlay spectrum sharing network as an MOP, which attempts to maximize both spectral efficiency and throughput, while satisfying the SINR constraints.It refers to the spectrum utilization, in terms of the number of SUs served or the number of SUs that the spectrum sharing network can support to maintain a peaceful coexistence. Since a key objective for the deployment of spectrum sharing networks is to achieve better utilization of the available spectrum bands, this is accomplished by maximizing spectral efficiency [6]. The total spectral efficiency in terms of the number of SUs served can be expressed as(5)f1(X)=∑u=1Slxuwhere X=[x1, x2,…, xSl] is a binary vector. Each position indicates if the uth SU is included in the solution (xu=1) or not (xu=0).It refers to the total spectrum sharing network throughput, that is, considering the throughput of each SU selected and PU present in the area A. The total throughput of these links can be expressed as(6)f2(X)=∑u=1Slc′uxu+∑v=1Plc″vwherec′uandc″vare data rate contributions of the secondary and primary links derived from Eqs. (3) and (4).subject to(7)SINRu≥α(8)SINRv≥βwhere SINRuand SINRvare the perceived interference by the receiver on a secondary and primary link respectively. α and β are the minimum signal quality levels (SINR thresholds) for secondary and primary links respectively.(9)c′u>0,u=1,2,…,Sl(10)c″v>0,v=1,2,…,lExpressions in (9) and (10) just ensure that primary and secondary data rates are positive values.(11)c′u,c″v,∈R+Expression (11) ensures that primary and secondary data rates are real values.(12)xu=1,if   SINRu≥αand SINRv≥β,0,otherwiseExpression (12) ensures that the SU selected achieves α and β thresholds; therefore, interference is maintained at the level that does not disrupt communication in SUs and PU which shares a common channel.The Non Dominated Sorting Genetic Algorithm II (NSGA-II) [10] is an algorithm to solve an MOP that combines a genetic algorithm and the concept of non-dominance introduced by Goldberg [34]. It also incorporates the crowding distance to achieve the spread on the Pareto front. The main ideas of the NSGA-II are as follows: First, it randomly initializes a population Ptof size N, then, an offspring population Qtis generated using the genetic operators (tournament selection, crossover and mutation). After that, Ptand Qtare combined to create a population Rtof size 2N. Then, the combined population Rtis sorted according to non-domination, to obtain different non-dominated fronts Fi. Finally, to generate the new population Pt+1 of size N, the non-dominated fronts Fiare included until the new population Pt+1 is filled.To obtain the different non-dominated fronts Fithe NSGA-II uses the fast non-dominated sorting procedure. It sorts the population Rtaccording to the level of non-domination, where every solution in the population is compared with each other solution, to know if it is dominated. For each solution, two entities are calculated: (1) the domination count np, which is the number of solutions that dominate the solution p and, (2) Spwhich is a set of solutions that the solution p dominates. It is necessary to identify all those individuals that satisfy np=0 and put them in a list F0 that is called the current front Fi. Next, for each p in F0, the domination count of all solutions (q) in its set Spis reduced by one; if the domination count of any q becomes zero, it is sent to a separate set Qtand all these solutions form the second non-dominated front. This process continues until all the fronts have been identified.To maintain the population diversity in each non-dominated front, the crowding distance is computed, it is the average distance of two points on either side of a particular solution. The extreme points of each front are assigned with an infinite distance.The procedure to compute the crowding distance, for each non-dominated front is as follows:1.Sort the individuals according to the first objective function. Assign infinite distance value to the boundary points, then, compute (13) for the rest of the individuals(13)F[j]distance=F[j]distance+(F[j+1].m−F[j−1].m)fmmax−fmminwhere F[j]distance is the crowding distance for the individual j, F[j+1].m and F[j−1].m are the values of the m objective function for the individual j+1 and j−1 respectively,fmmaxandfmminare the maximal and minimal values for the m objective function.Repeat the above with other objective functions.To solve the problem of optimal SA, we apply the algorithm NSGA-II. The individual (particular solution) representation consists of four parts as shown in Fig. 2. The first part is a bitstring (x1, x2,…, xSl) of length Sl, which indicates if the uth SU is selected (xi=1) or not (xi=0). The second part is the channel assignment string (ch1, ch2,…, chSl) of length Sl, which contains the channel assigned to the uth SU. The third part is the individual's fitness calculated for f1and f2. Finally, the last part corresponds to the Pareto rank r and the crowding distance d.Additionally, we introduce a real string called spectrum status of length Pl which holds the channel allocation for the PUs, so that, it is kept fixed through generations. The mapping of the channel assignment string and spectrum status provides the potential channels to share among the PUs and SUs. NSGA-II implementation for SA problem is given in Algorithm 1.Algorithm 11:t=0, tmax=number of generations2: Initialize randomly Ptand Qt3: while t<tmax do4:Rt=Pt∪Qt5:Sort Rtin descending order according with f16:Assign Pareto rank r7:Obtain the crowding distance d8:Select the population Pt+19:Create mating pool from Pt+110:Perform binary tournament over Pt+111:Apply the genetic operators to obtain the new offspring Qt+112:t=t+113: end whileThe bitstring for each individual is randomly initialized, then if the uth SU has been selected (xi=1), a channel is randomly assigned to that uth SU; this process is repeated for each individual in Ptand Qtpopulations. After that, Ptand Qtpopulations are evaluated, to merge them in a new population Rt. Then, Rtis sorted in descending order according to the first objective function. Next, Pareto rank r is assigned to each individual that indicates the number of solutions that dominated to the individual, at this stage, the crowding distance d is also assigned to it. The individuals with the best (minimal) Pareto rank r, are the new population Pt+1; those individuals form the mating pool. Finally, binary tournament is applied, which select two individuals at random and the winner is judged by the best Pareto rank r; if the Pareto rank r is the same for both individuals, the winner is the individual having the highest crowding distance.To generate new offspring, we apply two crossover strategies as shown in Fig. 3. The first crossover strategy, selects randomly two parents x=(x1, x2,…, xSl, chx1, chx2, …, chxSl) and y=(y1, y2, …, ySl, chy1, chy2, …, chySl) from the mating pool. Then a four-point binary crossover is applied to the bitstring of length Sl to obtain two new offspring q(1) and q(2); where z1 and z2 are two integers randomly generated between 1 and Sl/2. The second crossover strategy, assigns a new channel to the selected SU, that is, if both parents in the position i are set to 1 (xi=1 and yi=1), the channels are blending using the Laplace crossover [35]. The new channelschi(1)andchi(2)for the offsprings q(1) and q(2) are generated using (14)–(16) as follows:(14)chi(1)=chxi+β|chxi−chyi|(15)chi(1)=chxi+β|chxi−chyi|(16)β=a−bln(u),u≤0.5a−bln(u),u>0.5where a∈ℜ and b>0 are the location parameters; β is a random number generated using the Laplace distribution and u∈[0, 1] is a random number uniformly distributed. If the channel of any parent is zero, the information is copied to each offspring without blending, using the same criterion that the binary crossover.To keep the population diversity, a hybrid mutation operator is implemented. From the offspring q(a), if its position i is set to 1 (xi=1) which represents that the uth SU is selected, a new channelchi(a)is assigned by using the non uniform mutation [36] as shown below:(17)chi(a)=chi(1)+τchi(U)−chi(L)1−chi(1−(t/tmax))bwherechi(U)andchi(L)are the upper and lower channel allocation values, t is the current generation, tmax is the maximal number of generations, b>0 is a user defined parameter and τ can take the values −1 or 1 with probability 0.5.On the other hand, if position i in offspring is set to 0 (xi=0) which represents that the uth SU is not selected, the mutation operator sets to 1 (xi=1) that position. Then, one channel is randomly assigned to that position.

@&#CONCLUSIONS@&#
