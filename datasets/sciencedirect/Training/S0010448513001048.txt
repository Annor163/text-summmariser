@&#MAIN-TITLE@&#
Subdivision surfaces integrated in a CAD system

@&#HIGHLIGHTS@&#
Perfect integration of subdivision surfaces in a CAD system.Interoperability of subdivision surfaces with other representations.B-rep representation of a subdivision solid and of hybrid NURBS/subdivision objects.Local correction of critical curvature and parameterization behavior.

@&#KEYPHRASES@&#
Computer-aided design,Subdivision surfaces,B-rep representation,Local correction,

@&#ABSTRACT@&#
The main roadblock that has limited the usage of subdivision surfaces in computer-aided design (CAD) systems is the lack of quality and precision that a model must achieve for being suitable in the engineering and manufacturing phases of design. The second roadblock concerns the integration into the modeling workflows, that, for engineering purposes, means providing a precise and controlled way of defining and editing models possibly composed of different geometric representations. This paper documents the experience in the context of a European project whose goal was the integration of subdivision surfaces in a CAD system. To this aim, a new CAD system paradigm with an extensible geometric kernel is introduced, where any new shape description can be integrated through the two successive steps of parameterization and evaluation, and a hybrid boundary representation is used to easily model different kinds of shapes. In this way, the newly introduced geometric description automatically inherits any pre-existing CAD tools, and it can interact in a natural way with the other geometric representations supported by the CAD system.To overcome the irregular behavior of subdivision surfaces in the neighborhood of extraordinary points, we locally modify the limit surface of the subdivision scheme so as to tune the analytic properties without affecting its geometric shape. Such a correction is inspired by the polynomial blending approach in Levin (2006) [1] and Zorin (2006)  [2], which we extend in some aspects and generalize to multipatch surfaces evaluable at arbitrary parameter values. Some modeling examples will demonstrate the benefits of the proposed integration, and some tests will confirm the effectiveness of the proposed local correction patching method.

@&#INTRODUCTION@&#
Subdivision surfaces have a long history and have been studied for more than 30 years now. Since the first time they were used in Pixar’s movie “Geri’s game”, they had great success in the entertainment industry and they are now widely supported in nearly all modern modeling programs for graphic applications. Their flexibility and the fact that some subdivision surfaces represent a superset of the standard Non-Uniform Rational B-Spline (NURBS) representation (see, e.g.,  [3,4]) easily suggests that they can be the future description form of all geometric data. However, after all these years, their use in CAD systems is still negligible. This is partly due to the fact that subdivision surfaces do not have a closed-form representation, which means that most subdivision schemes cannot be parameterized and evaluated exactly. As pointed out in  [5], the lack of closed-form evaluation restricts the class of subdivision methods suitable for CAD to schemes that generalize the spline representation to arbitrary topology, namely those of Catmull–Clark  [6], Doo–Sabin  [7], and Loop  [8]. Key aspects of these schemes, such as the smoothness of the limit surface [7,9,10], the curvature behavior  [11,12], and the nature and kinds of surface artifacts  [13,14], have been widely studied in the literature. The state-of-the-art also provides several proposals for algorithms, mainly based on Catmull–Clark surfaces, that may be useful in various CAD-related applications, such as surface fitting  [15], reverse engineering  [16,17] and curve lofting  [18,19]. However, despite such a large amount of effort, the quality achieved by current subdivision schemes is still far from the requirements that a geometric model must satisfy for being suitable in engineering and manufacturing phases of design. In particular, subdivision surfaces manifest a critical behavior in the neighborhood of the so-called extraordinary vertices, which is not a punctual deficiency, oppositely it involves a whole region around each extraordinary vertex making difficult to apply most of the CAD tools. This has confined their application in CAD merely to the phase of conceptual design, where the precision and quality of the shape is not extremely important.Subdivision surfaces have already been tested in some CAD systems (CATIA, Creo), while other softwares (Rhinoceros, SolidWorks) have introduced plug-in modules based on T-splines  [20], that show the same lack of precision and quality of subdivision methods around extraordinary vertices. None of the existing systems treat subdivision surfaces (nor T-splines) as a truly integrated geometric primitive. This means that a subdivision model needs to be converted to NURBS to interact with the rest of the CAD system.This paper records part of the work that has been undertaken within the European Eurostars Project NIIT4CAD under the coordination of think3 company. One of the aims of the project was to overcome the traditional approach to surface and solid modeling of current 3D CAD systems by introducing new methodologies based on subdivision surfaces which, overcoming the mentioned roadblocks, could exploit their potentialities to obtain high-quality geometrical model suited for engineering and manufacturing purposes. A prototype of software module for subdivision surfaces for CAD has been integrated in the geometric kernel of the ThinkDesign commercial CAD system, together with a module for fast design and editing of meshes for subdivisions.The contribution of this paper is twofold. We describe the new framework which guarantees a full integration of subdivision surfaces in a CAD system, and we introduce a correction method to improve the quality issues in the subdivision representation, so as to achieve the accuracy required by CAD applications. The overall objective is to provide a mathematical representation based on subdivision surfaces that achieves the desired accuracy and is integrated with the other representations present in the CAD system, e.g., NURBS and analytical shapes. This lays the groundwork for a new CAD paradigm for hybrid modeling with NURBS/subdivision/analytical geometries, in which all the geometric representations may coexist and interact, and all the functionalities of the CAD system are automatically inherited.The realized integration is focused on Catmull–Clark subdivision surfaces  [6], which is the most popular choice of all modern CAD systems. This is, in a way, a natural choice both because Catmull–Clark surfaces represent a generalization of bi-cubic B-splines, and because they provide an explicit parametric expression for the limit surface  [5]. However, the generality of the approach makes it easily extendable to all subdivision schemes based on splines.To achieve the quality required in CAD, where necessary, we have introduced a local correction inspired by the idea of polynomial blending proposed in  [1,2]. The approach consists of blending, in the neighborhood of extraordinary points, the limit surface with a proper polynomial approximant. This allows for tuning the analytic properties of the surface, without affecting its geometric shape. In  [1,2] the authors assume to work on a discretization of the surface, obtained by applying a finite number of refinement steps to the mesh of the initial control points. As a consequence, after the correction, the limit surface is evaluated only at the discrete set of points generated by the process of iterative subdivision. To suit our aims, the original blending idea is here further developed and generalized, assuming to work with a continuous representation of the surface which is evaluable at arbitrary points of the domain.The remainder of the paper is organized as follows. Section  1.1 briefly presents some basic notions on subdivision surfaces; experienced reader may skip this section. Section  2 describes the CAD system paradigm on which our integration approach relies. Section  3 presents our approach for the integration of subdivision surface primitives into a CAD system, which is based on the B-rep representation and a suitable parameterization method, which is described in Section  3.1. Section  4 is devoted to the local correction of subdivision surfaces around extraordinary vertices. Section  5 discusses the most relevant computational issues to deal with when implementing exact evaluation of subdivision surfaces in a CAD context. Section  6 illustrates some modeling examples aimed to demonstrate the potentialities of the proposed integration, and some tests which confirm the effectiveness of the proposed local correction patching method. Concluding remarks can be found in Section  7.A subdivision scheme generates a smooth surface as the limit of a sequence of successive refinements of an initial configuration of vertices, edges and faces with connectivity relations, called the control mesh. To illustrate the process, Fig. 1(b)–(d) show some refinement steps of the Catmull–Clark scheme applied to the control mesh of Fig. 1(a), while in Fig. 1(e) the associated limit surface is shown.In the control mesh, an arbitrary number of edges can be incident at each vertex (called the valence of the vertex). Moreover, an arbitrary number of edges can define a face, called ann-sided face. In particular, a vertex is called extraordinary if its valence is different from the regular configuration, which for Catmull–Clark is 4, and regular otherwise.The potential of subdivision surfaces with respect to other forms of representation, i.e., NURBS, is the possibility of handling objects of arbitrary topology. Essentially, like NURBS, subdivision surfaces describe a geometric model by means of control points. However, while in a NURBS the control points form a regular rectangular grid, subdivision handle a generic mesh with arbitrary topology. The benefit is that when moving the points of the control mesh, the geometric object automatically stays connected and the faces remain tangent- and curvature-continuous to each other.The successive refinement procedure, which characterizes the subdivision surface, provides a representation which is inherently discrete. However, a parametric representation is admitted by a special family of subdivision schemes that, away from extraordinary vertices (i.e., in regular regions), reproduce a known analytic representation (that hereinafter can be assumed in spline form). In this setting the limit surface can be represented at a given parametric point(u,v)belonging to regular or extraordinary regions, as a finite linear combination(1)S(u,v)=∑ipibi(u,v),wherepi∈R3are the vertices of the input control mesh andbi(u,v)are suitable compactly supported basis functions.If the scheme has an analytic representation underneath, then away from extraordinary vertices (1) represents a tensor-product surface patch. In this case, for the Catmull–Clark scheme the basis functions are the bi-cubic tensor-product B-splines  [21].In proximity of extraordinary vertices the number of basis functions depends on the valence. For the Catmull–Clark scheme these functions can be evaluated by well-known algorithms, as described in  [22–24], and by their several variants to non-closed surface evaluation in the vicinity of the boundary  [25–27]. These methods are capable of evaluating the surface at arbitrary parameters in the vicinity of one extraordinary vertex based on the idea illustrated in Fig. 2. Each patch is parameterized by a collection of nested L-shaped quadrilateral domains which progressively shrink towards the extraordinary vertex; on each of these domains the surface is represented as a bi-cubic tensor-product B-spline.In the following we discuss the fundamental features required for a CAD system to be able to integrate the subdivision surface representation into its geometric kernel. In particular, the CAD system must satisfy the following requirements:•“parameterization and evaluation” paradigm;B-rep representation;hybrid geometric descriptions.A major challenge for the integration of a new geometric primitive within a CAD system is represented by the problem of including the primitive in the geometric engine of the system, the so-called geometric kernel.In many of today’s commercial CAD systems the geometric kernel structure is quite similar: it provides a set of geometric representations and a set of tools which operate on them. Curves and surfaces are represented in parametric form, while for solids the boundary representation (B-rep) is mostly used. In the B-rep a geometric model is described through its boundary surfaces, which, in the case of a solid model, represent the boundary between solid and non-solid. Such a boundary is constituted by one or more connected components, called shells. In turn, each shell is represented as a collection of surface patches, called B-rep faces. Faces are chosen so that the geometric form of each face can be represented as a single parametric function. To describe each shell, a B-rep stores two types of information: topological information, namely the connectivity relations between faces, and the geometric representation of the surface patch corresponding to each face.The various available CAD tools include intersections, projections, Boolean operations, offsets, fillets, and many others. Some geometric kernels rely on the NURBS representation only, while more advanced ones also allow for different representations, such as planes, cylinders and quadrics, that provide greater precision at lower storage cost. Since the CAD system must support different geometric representations, the B-rep modeling system underneath should adopt a hybrid description of the geometry, allowing for the coexistence of faces with different forms of geometric representation.The proposed approach is based on a CAD system paradigm with an extensible geometric kernel, in which any geometric description can be integrated by simply implementing the related evaluation algorithm that acts as an interface with the entire system. This paradigm of extensibility requires that any geometric representation be parameterizable and there must be a known evaluation method that associates with each point in the parametric domain a surface value and derivatives up to second order. This makes all the functionalities of the CAD system automatically inherited by any newly introduced type of representation, which is therefore indistinguishable from others already enclosed in the system. In this way, pre-existing operators and tools can be easily and directly applied to any hybrid representation. This defines our concept of full integration of the geometric representations in the CAD system, although, obviously, a suitable tuning of some algorithms may be required to optimize the output quality.This paradigm reflects the structure of the geometric kernel of the ThinkDesign system (developed by think3), used for testing the proposed approach. Moreover, ThinkDesign supports hybrid modeling where the B-rep has been extended to allow special, non-solid model types called non-manifold models, which are used to represent thin-plate objects and integrate surface modeling into a solid modeling environment. This makes B-rep a more flexible descriptive model and provides the CAD system with a much richer set of operations.This section describes how a subdivision entity has been integrated in the previously described CAD system. A subdivision surface is a single entity describing an arbitrary topology geometric model by means of its control mesh. However, a subdivision surface can be exactly evaluated only by associating with each quadrilateral face of the control mesh a parametric domain. Thus the most natural way to handle this structure is to store the information on the geometric model in a B-rep, where the control mesh is used to derive the B-rep topological information. At this aim we introduce the following B-rep characterization for subdivision surfaces.Definition 1Subd-B-repA Subd-B-rep represents a B-rep geometric model in which each B-rep face is a patch of a subdivision surface associated with a rectangular parametric domain and the B-rep topology is defined by the subdivision control mesh.Fig. 3shows the workflow for the creation and editing of a subdivision entity. The faces which form a Subd-B-rep are extracted from the control mesh of the subdivision surface through a patcher function. A suitable evaluator for subdivision entities is used by the various CAD algorithms to interrogate the Subd-B-rep and compute surface value and derivatives of its faces at arbitrary domain parameters.Exploiting the classical handling of B-rep, a Subd-B-rep can interact naturally with other entities in the system. For example, the result of operations of solid composition is a B-rep whose faces can have a hybrid geometric nature, e.g., they can be either NURBS, analytical, or subdivision surfaces patches. Such a B-rep will be editable while maintaining the hybrid nature of its faces, and any CAD tool will operate on the hybrid form. In this case the workflow in Fig. 3 applies to those faces of the B-rep model that are of subdivision type.In the following we illustrate how the topological and geometric information that characterizes a Subd-B-rep is derived by the patcher function starting from an initial control mesh. The leading idea is that the Subd-B-rep should maintain an intuitive association (possibly 1–1) between the control mesh faces and the B-rep faces. Since the topological information is strictly related to the specific subdivision scheme considered, we will specialize the following description to the particular Catmull–Clark subdivision method. In this case, if the faces of the control mesh are quadrilateral faces, the 1–1 correspondence is obtained in a natural way as illustrated in Fig. 4(a).Topology. The topology is described by adjacency relations between topological entities. In order to generate the Subd-B-rep such information can be inferred from the control mesh of the subdivision surface. The control mesh is a (consistent) collection of vertices, edges and faces with connectivity relations in which each face can be formed by an arbitrary number of edges, and each edge is adjacent to exactly two faces. In our B-rep construction, a quadrilateral face of the control mesh defines a single face of the Subd-B-rep (see, e.g.,  Fig. 4(a)). Conversely, ann-sided face in the control mesh (n≠4) cannot be represented as a unique parametric surface patch on a quadrilateral domain. Thus we apply a refinement step of the Catmull–Clark scheme which splits the face intonquadrilateral faces, each of which becomes an independent face in the construction of the Subd-B-rep (see Fig. 4(b)).Besides adjacency relations, the B-rep typically stores the loops, i.e., circular sequences of edges that form the boundaries of a B-rep face. In particular, in the Subd-B-rep each face contains one single loop which can be either regular when it consists of 4 edges (Fig. 4(a)), or extraordinary (more than 4 edges) in case of quadrilateral mesh faces adjacent to non-quadrilateral ones. In the example shown in  Fig. 4(b), an extraordinary loop of 6 edges which defines a quadrilateral face is highlighted in red color. This determines a T-shaped configuration of B-rep edges, which is easily handled by any standard B-rep data structure. In the worst case, corresponding to a quadrilateral mesh face adjacent to 4 non-quadrilateral faces, the loop is formed by 8 edges. We remark that the consistency of the control mesh on which the B-rep is built automatically leads to the consistency of the resulting Subd-B-rep.Geometry. We describe the geometry associated with each face of the Subd-B-rep as a parametric surface patch over the domainQ≔[0,1]2, called base domain. This patch is the limit surface of the subdivision scheme which is parameterized and evaluated as described in the following subsection.The notation used from this point on is summarized in Table 1.In the proposed approach, the limit surfaceSof the subdivision scheme, associated with a given control mesh, is represented as a parametric multipatch surface in which each patchSiis associated with a quadrilateral face of the control mesh, or with a quadrilateral face generated by refining ann-sided face. Each patchSiis parameterized on the base domainQ, through a parameterization functionψSi:Q⟶Si.In the following, we denote byqℓ,ℓ=0,…,3, the vertices ofQindexed in counterclockwise order from(0,0). The functionψis the parameterization in which the limit surface is evaluated and, as recalled in Section  1.1, it is known in two situations, namely for regular faces and faces that contain only one extraordinary vertex.To fit the definition of Subd-B-rep, it is necessary that each B-rep face defines a unique surface patch parameterized over the domainQ. Thus, faces of the control mesh that contain more than one extraordinary vertex and non-quadrilateral faces must be suitably treated so as to satisfy this requirement. To this aim we distinguish three different types of extraordinary patches, each of which corresponds to a different parameterization strategy, described in the following and illustrated in Fig. 5.(a)Quadrilateral face with only one extraordinary vertex (Fig. 5(a)): it is mapped to a surface patch parameterized overQin such a way thatψSi(q0)=ψSi(0,0)=pev,wherepevis the limit point corresponding to the extraordinary vertex. Patches of type (a) can be evaluated exploiting one of the algorithms cited in Section  1.1.Quadrilateral face with more than one extraordinary vertex (Fig. 5(b)): we define a reparameterization map overQas follows. The patchSiis partitioned into the union of 4 sub-patchesSi,ℓ,ℓ=0,…,3, such that each of them contains at most one extraordinary vertex. EachSi,ℓis associated with a sub-squareQℓof the base domainQ, as illustrated in  Fig. 5(b). To evaluate each sub-patch as in (a) it is necessary to apply beforehand the reparameterizationϕℓ:Qℓ⟶Q,defined by(2)ϕℓ≔σ2∘ρℓπ2−1∘τqℓ−q0,whereσhis a scaling by a factorh,ρa−1is a clockwise rotation around the origin by an anglea,τvis a translation of a vectorv(note that all these functions are applied to vectors).Quadrilateral face generated by the splitting of ann-sided face: the patcher function associates with ann-sided face of the control meshnquadrilateral patches, by refining the face through the Catmull–Clark scheme. Each of them contains at least onen-valent extraordinary vertex generated by the splitting of the face (Fig. 5(c.1)), and possibly two (Fig. 5(c.2)). The two situations give rise to the following cases:(c.1)if the patch contains only one extraordinary vertex, then it is treated as in (a);if the patch contains two extraordinary vertices, then it is treated as in (b).In both sub-cases, since thenquadrilateral patches derive from the refinement of ann-sided face of the control mesh, an additional scaling of their first and second derivatives is achieved by the transformationsσhandσh2, withh=2, respectively.We observe that, after subdivision of ann-sided face, cases (c.1) and (c.2) differ from cases (a) and (b) only for an additional scaling of the parametric domain, which takes into account the fact that faces of type (c.1) and (c.2) have been subdivided one more time with respect to faces of type (a) and (b). So, actually, only the three cases (a), (b) and (c) are strictly necessary, with the two sub-cases of (c) falling into (a) or (b). However, considering all the distinct four cases will simplify the comprehension of the method of local correction described in Section  4.The described parameterization technique allows us to isolate extraordinary points, in such a way that each pointpevbelongs to a rectangular patchSior a sub-patchSi,ℓ, whose remaining vertices are regular.It is well known that Catmull–Clark surfaces exhibit a critical behavior in the neighborhood of extraordinary points. Depending on the variant of the scheme that we consider, the curvature at those points is either undefined  [7] or zero  [28]. Although some modifications were proposed to overcome such an issue  [29–33], available methods guarantee bounded but not necessarily convergent curvature. This phenomenon is common to the entire family of schemes whose limit surface can be represented as a collection of nested spline rings around an extraordinary vertex, namely all parameterizable schemes. In fact, intuitively, since these rings are essentially a deformation of a regular grid, using them to fill in then-sided hole around ann-valent vertex generates a singularity.The main reason that prevents the use of subdivision in CAD applications is that the erratic behavior of curvature is not confined to an isolated point, conversely it affects a whole area around each extraordinary vertex (see, e.g.,  [13,14,34]). This causes many fundamental geometric operations to produce unpredictable results or completely fail.Another problem concerns the parameterization of the surface. Approaching an extraordinary point, the absolute value of derivatives progressively increases (when valencen≥5) or decreases (whenn=3) without bound. Such an undesirable situation is very far from the ideal, in which the parameter follows the distance on the surface, and it causes the instability of many geometric algorithms (e.g., intersection, projection) that rely on approximation of the surface by local Taylor expansion.To address these issues, a possible approach relies on patching methods, based on replacing all the subdivision surface patches containing an extraordinary point by another form of representation. Most of these techniques result in aC1construction  [35] while, to our knowledge, only  [36] achievesG2continuity. However, a drawback of the patching approach is that the modification affects a wide region of the surface, and this partly disqualifies it with respect to our aims. In fact, since the shape of Catmull–Clark surfaces is already satisfactory, we are interested in maintaining their appearance and B-spline nature in the widest possible area, while improving their analytic properties in the smallest neighborhood of the extraordinary points. To this aim, we pursue a blending approach  [1,2], which consists in blending the Catmull–Clark and another suitable surface in a small circular neighborhood of the extraordinary point, called the blending region. This results inC2continuity without significantly altering the shape and the almost-everywhere spline nature of the Catmull–Clark method. The novelty of our technique is its capability of generating a parametric surface, evaluable at arbitrary points of the domain.In Section  4.1 we overview the basic blending approach, while in the subsequent sections we present the original aspects of our proposal. We remark that, although here we focus on Catmull–Clark surfaces, the approach is very general and straightforwardly applies to any exactly evaluable subdivision scheme.Letpevbe an extraordinary point of valencenandSi,i=0,…,n−1thensurface patches around it. Then, for eachSi, we define onQa new geometric representation, named the blended surface, as(3)Si∗≔{wSi+(1−w)P,inside the blending region ,Si,elsewhere ,wherewis a bivariate blending function andPis a polynomial surface which approximates an area of the Catmull–Clark surface centered atpev. The functionwmust be chosen so as to guarantee that the transition betweenSi∗andSiisC2-continuous. Fig. 6illustrates two blending functions that can be conveniently exploited in our context: the function in  Fig. 6(a) was proposed in  [1], while  Fig. 6(b) shows a function which is zero in a circular neighborhoodIof the origin and whose derivatives vanish up to the second order on both internal and external boundaries of the blending region. It can be easily observed that the latter blending function generates a purely polynomial surface in a neighborhood of the extraordinary vertex, and the blending region reduces to an annulus: in fact, onI, we havew≡0and thus, from (3),Si∗coincides withP.The blended surface defined in (3) requires that locally the patchesSi,i=0,…,n−1, the polynomialP, and the functionwbe parameterized over a common domain, which is introduced in the following section.The proposed construction is based on the characteristic map that defines the natural parameterization of the surface generated by the subdivision scheme in the neighborhood of an extraordinary vertex (see, e.g.,  [9]). This map is defined as the limit surface of the subdivision scheme applied to the 2D mesh whose vertices are the entries of the two subdominant eigenvectors of the local subdivision matrix.11The local subdivision matrixMnis such thatP(k+1)=MnP(k), whereP(k)are the vertices of thek-times refined mesh.The characteristic map itself can be regarded as a parametric multipatch surface, consisting ofnpatchesKi[n]of type (a) that, up to proper normalization,22The normalization is such thatK0[n]is located in the positive quadrant of the real plane and with one edge having endpoints in(0,0)and(1,0).have rotational symmetry with respect to the extraordinary vertex. For our purposes, without loss of generality, we consider one of these sectors, namelyK0[n], which is represented over the square domainQbyψK0[n]:Q⟶K0[n].In the following we describe how, starting fromK0[n], it is possible to define a star-shaped domain to parameterize thensurface patchesSi,i=0,…,n−1, in a suitable neighborhood ofpevwhich contains the blending region. To this aim we introduce the star-shaped transformationκi≔ρi2πn∘ψK0[n]∘σh∘ϕ,whereψK0[n]is applied toQh|Q, whereQh≔[0,h]2,σhis a scaling with factorhgiven by(4)andϕ(u,v)≔{(u,v),if theith patch is of type (a) or (c.1) ,ϕℓ(u,v),ℓ=0,…,3,(u,v)∈Qℓ,ϕℓin(2)  ,if theith patch is of type (b) or (c.2) .For a patch of type (a), the star-shaped transformation is illustrated in Fig. 7. Note that the transformationψK0[n]∘σh∘ϕmaps the parametric domain of a patch toK0[n], which is a fixed sector of the characteristic map. Finally, the rotationρi2πnmapsK0[n]to theith sector ofKn, the global parameterization domain around the extraordinary point defined as follows.Definition 2For a given extraordinary vertex of valencenwe define the star-shaped parameterization domain asKn≔⋃i=0n−1{κi(u,v)|(u,v)∈Qandσh(ϕ(u,v))∈Q}.Remark 1The point(0,0)of the domainKnis mapped to the extraordinary point shared by thensurface patchesSi.Assuming(s,t)≔κi(u,v), inside the domainKnwe define the circular blending regionDn≔{(s,t)∈Kn|‖(s,t)‖2≤λ[n]},centered at the origin and having radius equal to the subdominant eigenvalueλ[n]of the subdivision matrix.In this way, we can now characterize the blended surface in (3) as follows:(5)Si∗(u,v)={w(s,t)Si(u,v)+(1−w(s,t))P(s,t),(s,t)∈Dn,Si(u,v),elsewhere .In the base domainQof each patchSithe blending region is represented byD̃n,i≔{(u,v)∈Q|σh(ϕ(u,v))∈Qand‖κi(u,v)‖2≤λ[n]}.In Fig. 8the blending regions around adjacent extraordinary vertices are highlighted in red color. We observe that the radius of the blending region is chosen in such a way that blending regions surrounding extraordinary vertices of the same face are well separated from each other. This guarantees that the spline nature of the limit surface of the Catmull–Clark scheme is altered in quite restricted areas. In particular, as a consequence of the scalings byσhand possiblyϕℓ,D̃n,iis contained insideQ18for patch types (a), (b) andQ14for (c.1), (c.2).The first and second partial derivatives ofw(s(u,v),t(u,v))and of each componentPχofP(s(u,v),t(u,v))with respect tou,vare computed by applying the chain rule. LetfbeworPχfunctions, then:(6)(∂uf∂vf)=J(∂sf∂tf),whereJ≔(∂us∂vs∂ut∂vt),is the Jacobian matrix of the map(u,v)↦(s,t)defined by the star-shaped transformationκi, and(7)(∂uuf∂uvf∂vuf∂vvf)=J(∂ssf∂stf∂tsf∂ttf)JT+((∂sf∂tf)T(∂uus∂uut)(∂sf∂tf)T(∂uvs∂uvt)(∂sf∂tf)T(∂vus∂vut)(∂sf∂tf)T(∂vvs∂vvt)),where∂vuf=∂uvf,∂tsf=∂stfsince we are dealing withC2functions.In principle, the polynomialPcan be computed by any suitable approximation method. As pursued in  [1,2], in the following we exploit a least squares approach. Alternatively, an energy minimization approach was explored in  [37] and could be adapted to our setting as well.SincePis required to interpolate the extraordinary vertex, we represent it in bivariate form of degreed,P(s,t)=pev+Cm(s,t),whereC=(cχ,j)∈R3×nc, withnc≔12(d+1)(d+2)−1is the matrix having as rows the polynomial coefficients of coordinatesχ, and the entries of vectorm(s,t)∈Rnc×1represent thencmonomialss,t,s2,st,t2,…up to degree at mostd.We assumed=3for extraordinary vertices of valencen≥5, andd=2in the casen=3.To complete the definition of the polynomial, we compute the coefficients(cχ,j)by least squares fitting exploitingnp≔12npointspkobtained by evaluating the Catmull–Clark limit surface at parameters(uk,vk)∈D̃n,i. In particular, for each patchSiof type (a) or (b) containingpev, these parameters correspond to the following points in the base domain:(8)(132,0),(116,0),(332,0),(18,0),(132,132),(116,132),(332,132),(132,116),(116,116),(332,116),(132,332),(116,332).In Fig. 7 these points and their image through the star-shaped transformationκiare represented by solid black dots. For patches of type (c.1) or (c.2) the parameters associated with the approximation points are those in (8), but additionally scaled by a factor 2, as these types of patches derive from the subdivision of a non-quadrilateral face. The parameters in (8) have been obtained by evaluating the patch on a grid of equally spaced points in the base domain and selecting the domain coordinates whose image inKnfalls inside the blending regionDn. The same points are used for each valencen.In the star-shaped domainKn, thenppoints(uk,vk)correspond to the points(sk,tk)≔κi(uk,vk),i=0,…,n−1, that determine the coefficients of the Vandermonde matrixV∈Rnp×nchaving as thekth row the vectorm(sk,tk)=(sk,tk,sk2,sktk,tk2,…).By slightly abusing the notation, we can assume to work componentwise and reduce the least squares fitting problem to the linear systemVTVc=VT(p−pev),where the approximation pointspkare arranged in a vectorp. Since the coefficientscdepend only on the approximation points, in a preprocessing stage the inverse of the matrixVTVcan be computed and the entries of(VTV)−1VTcan be stored for each valencen. Referring to the workflow in Fig. 3, the patcher function computes the solution of the least squares problem as a matrix–vector product, stores the polynomial coefficients and, if necessary, updates them after editing of the subdivision control mesh.The local correction method presented in the previous section can also be extended to extraordinary vertices on the boundary of non-closed surfaces. Letψˆbe the mapping between the base domainQand one Catmull–Clark limit surface patch incident in a boundary extraordinary vertex of valencen≥4. Thus the functionψˆis the evaluator for a Catmull–Clark surface with boundary, e.g., as defined in  [25–27]. We consider an open configuration formed byn−1adjacent sectors of the mesh whose vertices are the entries of the subdominant eigenvectors of the local subdivision matrix relative to valence2(n−1). If we applyψˆto this configuration, we getn−1patchesKˆi[n],i=0,…,n−2that can be used to define the fan-shaped domain:Kˆn≔⋃i=0n−2{ψˆKˆi[n](σh(ϕ(u,v)))|(u,v)∈Qandσh(ϕ(u,v))∈Q},withhgiven by (4).Kˆnplays the same role as the star-shaped domainKnin Section  4.2, i.e., it is the local domain in which both the approximating polynomial and the Catmull–Clark surface are represented in a neighborhood of the boundary extraordinary vertex. On this domain, a semicircular blending regionDˆncan be defined similarly toDnasDˆn≔{(s,t)∈Kˆn|‖(s,t)‖2≤λ[2(n−1)]},and the approximating polynomial can be computed as described in Section  4.3, thus by upsampling the Catmull–Clark limit surface at the parametric values (8) for each of then−1patches incident in the vertex.This section presents the algorithm to compute the value, first and second derivatives of a patchSi∗defined as in (5), containing at least one extraordinary vertex. Given the couple of parameters(ū,v̄)in the base domainQof the patch, we check whether(ū,v̄)lies inside the preimageD̃n,iof a blending region. IfSi∗contains more than one extraordinary vertex, then either the image of(ū,v̄)lies outside all the related blending regions, or it belongs to exactly one of them, since by construction the blending regions do not overlap. Thus, if the image of(ū,v̄)in the star-shaped domainKnthrough the reparameterizationκidoes not lie inside the blending regionDnof any extraordinary vertex, the surface is directly evaluated in the parameterizationψSiof the original Catmull–Clark patchSi. Alternatively, the value and the derivatives of the weight functionwand the polynomialPare computed inKn; then the value of the blended surfaceSi∗is computed through (5), and its derivatives w.r.t.u,vare obtained by applying the inverse mappingκi−1to the derivatives ofwandPw.r.t.s,tas in (6), (7), and by composition.The algorithm below summarizes the described evaluation procedure.The integration of subdivision surfaces in a CAD system and the application of the described local correction method require that the limit surface be exactly evaluable at arbitrary parametric coordinates. Although, as mentioned, there are various state-of-the-art evaluation techniques, the implementation of these methods raises some general issues, that do not depend on a particular algorithm, but on the specific requirement for application in CAD. This section discusses such issues and how they were practically addressed in our implementation to guarantee compatibility within a CAD environment.Parameterization gap around an extraordinary point. The parameterization of the limit surface through nested spline rings, which is at the basis of known evaluation methods, covers the neighborhood of an extraordinary vertex only ad infinitum (see Fig. 2). In practice, the need to truncate this infinite sequence generates a parameterization gap around the vertex and the consequent impossibility of evaluating the surface in this area. This situation also occurs when performing the local correction introduced in the previous section, and in particular when evaluating the sector of characteristic mapK0[n].In practice the problem can be fixed as described in the following. At the extraordinary point it is possible to compute exactly both the limit surface value and the normal by well-known formulas (see  [38, Appendix A]). Moreover, first and second derivatives with respect to the base domain are extrapolated (and additionally first derivatives are projected on the tangent plane defined by the normal) from the values they assume along the boundary of the last ring of the truncated spline sequence, i.e., at a predefined distanceδfrom the extraordinary point. Finally, linear interpolation between surface and derivative values on the boundary of the last ring and those at the extraordinary point has been exploited to bridge the gap in the intermediate region. Clearly, this procedure results in a small local perturbation of the regularity of the surface in aδ-wide neighborhood of each extraordinary point. However, this is not a major issue for application, provided that the distanceδis estimated in such a way that the numerical algorithms available in the system are not sensitive to this perturbation. Empirical observations suggest a suitable valueδ=10−10.Evaluation outside the parametric domain of a patch. Some tools (such as Boolean operations, fitting, and offset) may require to evaluate a surface patch outside its parametric domain, which is in our case the base domainQ. The structure of a subdivision surface, made of spline (thus polynomial) rings, suggests that this operation could be accomplished by extrapolating a suitable spline ring. However, this approach cannot generate satisfactory results when the extrapolated value is close to an extraordinary point, since the size of the rings reduces exponentially while approaching the point. This issue has been overcome by extrapolating the values external toQand at a distance smaller than10−10from a tangent ribbon (i.e, a ruled surface defined by the first derivatives in the cross-boundary direction).Corner vertices. A corner corresponds to a vertex of valence 2 of an open control mesh, and therefore belongs to one limit surface patch only. To evaluate this patch, we extrapolate linearly one ring of mesh faces across the boundary. In the fictitious extrapolated mesh, the corner vertex has valence 4, so it can be regarded as regular and the corner patch can be evaluated as a spline one.This section presents some modeling examples provided by think3 and realized with the ThinkDesign system.Fig. 9illustrates a modeling and editing sequence of a B-rep solid with hybrid faces. In the first row, from the left, the sequence shows a Subd-B-rep of a tap model. A blind hole is created through Boolean intersection with a cylinder and afterwards a fillet is inserted to smooth down the sharp joint between the two surfaces. Note that the Boolean operations already available in ThinkDesign were used, i.e., no ad hoc implementation for subdivision surfaces was necessary. The three rightmost figures show mean curvature, isophotes, and rendering of the model. In the second row, the hybrid nature of the faces of the B-rep is highlighted: subdivision faces are colored in yellow, a cylindrical face in green and a NURBS face in red. The two central figures show the editing of the subdivision control mesh, which results in a still hybrid B-rep represented in the last figure of the second row. In particular, after editing the control mesh, the hole and fillet were automatically updated.For this and the following examples, we recall that the radius of the blending region is chosen as described in Section  4.2. Accordingly, the extension of the blending region depends on the type of patch as illustrated in Fig. 8.The modeling sequence proposed in Fig. 10emphasizes the possibility of working with surfaces and solids at the same time in a hybrid modeling CAD environment. An iron model is designed by exploiting subdivision surfaces and thus represented as a Subd-B-rep with thickness. Successively, a blind hole is created giving rise to a hybrid B-rep, which is further edited by intersection with planar and quadric surfaces. The model is completed by two NURBS surfaces representing the knob and the cable.Fig. 11shows a magnification of curvature and isophotes visualization33For isophotes see, e.g.,  [39,40].around an extraordinary point of the two models in Figs. 9 and 10, comparing them with the Catmull–Clark limit surface without the local correction through blending: the improved numerical behavior around extraordinary points is even visibly noticeable.The design and development of the subdivision software prototype integrated in ThinkDesign went in a feedback loop with the validation of some end-users. The Italian-based firm of household appliances Alessi has validated the software from the computer-aided styling (CAS) point of view. One of the major features required by Alessi and then embedded in the subdivision prototype was the integration between the conceptual design and the engineering phases which can be only achieved by a perfect integration of the new geometric representation in the geometric kernel. This allows to approach subdivision as any other CAD feature in a history-based CAD system where a model description is stored and successively redefined interactively. Thus a geometric model based on subdivision can be modified shortly after some features, such as shells, fillets, chamfers, Boolean operations, parting lines, etc., have been applied to it, and these features are automatically updated.Figs. 12 and 13illustrate the modeling of a product manufactured by Alessi exploiting the subdivision surface capability integrated in ThinkDesign. The illustrated model was developed from a Subd-B-rep obtained from the conversion of a solid cube. The sequence of divisions, extrusions, and editing of faces and vertices has allowed to model the desired shape in a fast and easy way (Fig. 12). The final model, shown in  Fig. 13(a), now needs to be engineered in order to be produced. This engineering design phase explains why it is necessary that the subdivision module be intimately tied around the CAD system. Assuming the model is to be produced in plastic, we need to add thickness to it, that is to apply a shell feature, as illustrated in Fig. 13(b). Successively, for manufacturing reasons due to the processing of molding machines, it is convenient to separate the object into several parts: within an integrated system, this task is easily performed by existing Boolean operators or through the cutting surfaces feature, exploiting the peculiarity of a hybrid system (Fig. 13(c)). If we want to make major changes in the style and/or in the dimension of the object, the integrated module allows for just remodeling and automatically updating. Conversely, if the subdivision module was not integrated, the designer should restart working on the initial model, redoing all the steps involving thickness and cutting features. The feedback from Alessi on the benefit introduced by the integration of subdivision surfaces in the CAD system is very positive. Alessi emphasizes the visual quality of the obtained surfaces, the ease of use, and especially the complete integration with the rest of the CAD environment, and concludes that this makes a real gap versus the standard CAD approach.

@&#CONCLUSIONS@&#
In this work we discussed the theoretical and practical aspects involved in the integration of subdivision surfaces in a CAD system, exploiting a suitable parameterization method and exact evaluation. We have proposed a solution to the regularity issues that usually prevent the adoption of subdivision in CAD applications, by providing a local correction method that guaranteesC2continuity also in the neighborhood of extraordinary vertices. To this end we have pursued a blending approach, whose effectiveness, although limited to the discrete setting, was already emphasized in  [1,2]. In particular, this method provides a quite regular curvature behavior against a negligible drawback, which is a slight violation of the convex-hull property in situations of minor practical relevance, as discussed in  [1]. The good quality of the obtained surfaces was confirmed by the testing carried out by our industrial partners.Using the proposed local correction, commonly used CAD tools like offset, local approximation in Taylor expansion, intersections, and any other are performed successfully. Conversely, they produce unpredictable results when applied to the (standard) Catmull–Clark surfaces. This is due to the fact that these algorithms make extensive use of iterated interrogations of the surface and its first and second derivatives at successively generated arbitrary parameter values and, in this process, they need or assume a regular curvature behavior everywhere.Subdivision surfaces are fully integrated in the ThinkDesign 2011.1 CAD system in the sense that any existing CAD tool can be applied to them and they can interact with other geometric entities, like NURBS, making it possible to perform Boolean operations between hybrid representations. This allows a seamless integration of hybrid NURBS/subdivision/analytical geometric models in a hybrid CAD system, which was never attained before, either theoretically or in practical applications.