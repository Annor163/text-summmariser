@&#MAIN-TITLE@&#
A goal-driven prototype column generation strategy for the multiple container loading cost minimization problem

@&#HIGHLIGHTS@&#
Use prototypes solutions of subproblems when making high level decision.Model average capability of single container loading algorithms.Apply goal-driven search to improve feasible solutions.Significantly outperform existing approach on benchmark instances.Introduce new benchmark instances based on industrial data.

@&#KEYPHRASES@&#
Multiple container loading cost minimization problem,Prototype column generation,Integer programming,Goal-driven search,

@&#ABSTRACT@&#
In the multiple container loading cost minimization problem (MCLCMP), rectangular boxes of various dimensions are loaded into rectangular containers of various sizes so as to minimize the total shipping cost. The MCLCMP can be naturally modeled as a set cover problem. We generalize the set cover formulation by introducing a new parameter to model the gross volume utilization of containers in a solution. The state-of-the-art algorithm tackles the MCLCMP using the prototype column generation (PCG) technique. PCG is an effective technique for speeding up the column generation technique for extremely hard optimization problems where their corresponding pricing subproblems are NP-hard. We propose a new approach to the MCLCMP that combines the PCG technique with a goal-driven search. Our goal-driven prototype column generation (GD-PCG) algorithm improves the original PCG approach in three respects. Computational experiments suggest that all three enhancements are effective. Our GD-PCG algorithm produces significantly better solutions for the 350 existing benchmark instances than all other approaches in the literature using less computation time. We also generate two new set instances based on industrial data and the classical single container loading instances.

@&#INTRODUCTION@&#
The efficient loading of items into containers is a fundamental problem in the shipping and logistics industries that arises whenever goods must be packed and transported. In many practical scenarios, choices of containers of different sizes and costs available, and the task is to select a set of containers that can hold all the goods while minimizing the cost. This problem is known as the multiple container loading cost minimization problem (MCLCMP).The MCLCMP is formally defined as follows. We have M types of containers with dimensionsLt×Wt×Ht,t=1,…,M. The cost of the t-th container isCt, and there aremtcontainers available for container type t. We are also given N types of boxes. The dimensions of the i-th box type areli×wi×hi,i=1,…,N, and there areniboxes of type i. The objective of the MCLCMP is to pack all boxes into a set of containers so that the cost of the used containers is minimized. We assume that the boxes can only be placed with sides parallel to the sides of the containers (commonly referred to as orthogonal packing), and no two boxes in the same container may overlap. In some applications, it is desirable that all boxes are fully supported from below for stability. This arrangement is called the full support constraint in literature. Our approach works with or without the full support constraint.This paper primarily considers a special case in which there are an unlimited number of available containers for each type (i.e.,mt=∞∀t). This is because the number of containers available is usually more than sufficient to contain all items to be loaded in practice, except in rare cases during peak periods. However, our technique can also be extended easily to handle a limited number of containers.We build upon the prototype column generation (PCG) method proposed by Zhu, Huang, and Lim (2012) for the MCLCMP using a goal-driven strategy. Our goal-driven prototype column generation (GD-PCG) algorithm improves on PCG in three respects. First, the PCG algorithm carries out the search in two stages and each stage approaches good solutions to the MCLCMP in its own dimension, whereas GD-PCG searches in both dimensions at the same time. Second, we extend the set cover formulation in Section 4 by introducing a new parameterγ, that reflects the estimated overall volume utilization of the containers in an MCLCMP solution. Third, once a solution is found, a goal-driven search described in Section 5.3 is applied in the neighborhood of the solution to improve it. Computational experiments reported in Section 6.1 suggest that all three enhancements are effective.We compare our GD-PCG approach with existing MCLCMP approaches in the literature on the 350 benchmark instances proposed by Che, Huang, Lim, and Zhu (2011) in Section 6.2. The results show that GD-PCG outperforms all existing approaches in terms of solution quality and average computation time. We also generate two new set of instances based on real data from an international manufacturer of audio equipment and the classical single container loading instances.

@&#CONCLUSIONS@&#
In this paper, we propose an algorithm for the MCLCMP that combines the prototype column generation method with a goal-driven strategy. The GD-PCG algorithm improves on PCG in three respects. First, the PCG algorithm carries out the search in two stages and each stage approaches good solutions to the MCLCMP in its own dimension, whereas GD-PCG searches in both dimensions at the same time. Second, we introduce gross volume utilizationγinto the set cover formulation for that MCLCMP which roughly estimates the expected overall volume utilization of the containers in a solution. Third, once a solution is found, a goal-driven search is carried out in the solution’s neighborhood to improve the solution.Computational experiments suggest that all three enhancements are useful. Our approach outperforms all existing MCLCMP approaches on benchmark data in terms of both solution quality and computation time.