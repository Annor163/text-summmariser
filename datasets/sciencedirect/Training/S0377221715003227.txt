@&#MAIN-TITLE@&#
A biased random-key genetic algorithm for the unequal area facility layout problem

@&#HIGHLIGHTS@&#
A BRKGA for the unequal area facility layout problem is presented.A novel facility placement procedure is developed.A hybrid BRKGA and LP is used to solve the constrained problem.The approach improved the best known solution values for 19 literature datasets.

@&#KEYPHRASES@&#
Facilities planning and design,Facility layout,Biased random-key genetic algorithms,Random-keys,

@&#ABSTRACT@&#
This paper presents a biased random-key genetic algorithm (BRKGA) for the unequal area facility layout problem (UA-FLP) where a set of rectangular facilities with given area requirements has to be placed, without overlapping, on a rectangular floor space. The objective is to find the location and the dimensions of the facilities such that the sum of the weighted distances between the centroids of the facilities is minimized. A hybrid approach combining a BRKGA, to determine the order of placement and the dimensions of each facility, a novel placement strategy, to position each facility, and a linear programming model, to fine-tune the solutions, is developed. The proposed approach is tested on 100 random datasets and 28 of benchmark datasets taken from the literature and compared with 21 other benchmark approaches. The quality of the approach was validated by the improvement of the best known solutions for 19 of the 28 extensively studied benchmark datasets.

@&#INTRODUCTION@&#
The facility layout design problem (FLP) is a challenging non-linear combinatorial optimization problem encountered in many service and manufacturing organizations. The problem has been extensively studied in the literature and good reviews can be found in Kusiak and Heragu (1987) and Meller and Gau (1996).The variant of the FLP we focus on in this paper was originally formulated by Armour and Buffa (1963) and involves determining the most cost-effective arrangement of a given number of rectangular facilities with unequal area requirements within a given rectangular floor space. This problem is denoted as UA-FLP. The objective of the problem is to minimize the cost associated with the interactions between facilities (the cost of material-handling flows). This cost is commonly represented by the sum of the products (over all facility pairs) of the weighted rectilinear distance and the material-handling flow between the centroids. The constraints of the problem include facility area requirements and shape restrictions, as well as assuring that the facilities do not overlap and are located within the boundary of the space floor.The UA-FLP is NP-hard since it is a generalization of the quadratic assignment problem (QAP), where the optimization is carried over a finite set of possible facility locations. The QAP was shown to be NP-hard by Sahni and Gonzalez (1976). Various methods and procedures have been proposed to solve the FLP and can be classified into:•Exact procedures - Montreuil (1991) proposed one of the first MIP formulations of the FLP on the continuous plane. The model includes disjunctive constraints to prevent facility overlaps and bounded perimeter constraints to enforce specified facility area and shape requirements. The largest problem instance solved optimally by Montreuil’s original formulation had six facilities. Meller, Narayanan, and Vance (1998) used valid inequalities to tighten Montreuil’s formulation and were able to optimally solve problems with up to eight facilities. Sherali, Fraticelli, and Meller (2003) used a polyhedral outer approximation to the facility area to improve the model of Meller et al. (1998) and solved a nine-facility problem optimally. Castillo and Westerlund (2005) developed an ε-accurate approximation. However, the largest problem solved had only nine facilities. By reformulating the FLP with the sequence-pair representation of Murata, Fujiyoshi, Nakatake, and Kajitani (1996), Meller, Chen, and Sherali (2007) were able to solve problems with up to 11 facilities. Konak, Kulturel-Konak, Norman, and Smith (2006) modeled the facility area constraints exactly using a set of linear constraints derived from the structure of the flexible bay structure representation. They report solving problems having up to 14 facilities. Banerjee, Montreuil, Moodie, and Kashyap (1992), Montreuil, Venkatadri, and Ratliff (1993), and Banerjee, Zhou, and Montreuil (1997) used design skeletons to reduce the complexity of MIP formulations for the FLP. Lacksonen (1997) fixed the orientations of obvious facility pairs using a pre-processing heuristic.Heuristics and meta-heuristics – Tam and Li (1991) proposed a hierarchical approach that employs a divide-and-conquer strategy consisting of three phases: (1) cluster analysis, (2) initial layout, and (3) layout refinement. The cluster analysis generates a hierarchical structure of the layout. The second phase produces an initial layout of each cluster which is subsequently refined in the third phase. Langevin, Montreuil, and Riopel (1994) developed a heuristic approach based on the MIP model of Montreuil (1991) to solve spine layout problems. Kado (1996) developed six types of genetic algorithms using a slicing-tree structure representation. Garces-Perez, Schoenefeld, and Wainwright (1996) proposed a multi-purpose genetic programming kernel to generate slicing trees that are converted into candidate solutions. Schnecke and Vornberger (1997) introduced a genetic algorithm with a tree-structured genotype representation and hybrid problem-specific operators. Dunker, Radons, and Westkämper (2003) developed a coevolutionary approach that improved mutation and crossover operators and clustered the facilities into groups. Scholz, Petrick, and Domschke (2009) proposed a tabu search algorithm with a slicing-tree representation and incorporated a bounding curve for solving fixed and flexible facilities in UA-FLPs. Their tabu search incorporated four types of neighborhood moves to find better solutions. Komarudin and Wong (2010) proposed an ant system to solve the UA-FLP using a slicing-tree representation and several types of local search to improve its search performance. Wong and Komarudin (2010) developed an ant system algorithm for solving UA-FLPs using an improved flexible bay structure representation called modified-FBS (mFBS). McKendall Jr and Hakobyan (2010) introduced an approach which uses a boundary search construction technique that places facilities along the boundaries of already placed facilities. The solution is improved using a tabu search. Kulturel-Konak and Konak (2011b) use an ant colony optimization approach which uses a flexible bay structure representation. Kulturel-Konak and Konak (2011a) produced a hybrid particle swarm optimization and local search approach using a relaxed flexible bay structure (RFBS). Kulturel-Konak and Konak (2014) proposed a hybrid simulated annealing and MIP algorithm for the cyclic facility layout problem which can be applied to various facility layout problems including the UA-FLP. A large-scale hybrid simulated annealing algorithm (LS-HSA) is proposed to solve the formulated problem and shown to be effective and versatile as it can be applied to various facility layout problems.Matheuristics – Gau and Meller (1999) proposed an algorithm that iterates between a genetic algorithm with a slicing-tree representation and a mixed-integer program with a subset of the binary variables set via the genetic algorithm. Montreuil, Brotherton, Ouazzani, and Nourelfath (2004) put together an algorithm based on ant colony optimization (ACO) and the zone-based MIP (Montreuil, Brotherton, & Marcotte, 2002) where the ACO-based heuristic searches for assignments of facilities to zones, and then the zone-based MIP is used to determine the detailed layout, including the input/output points of the facilities. Liu and Meller (2007) proposed a GA combining the sequence-pair representation (Murata et al., 1996) with the MIP model of Sherali et al. (2003). For a given sequence-pair, the corresponding layout is determined in this hybrid approach using the linear programming (LP) relaxation of the MIP model. Bozer and Wang (2012) introduced a hybrid approach based on a new representation called the graph-pair representation. The graph-pair representation encodes the relative locations of the facilities and the shape and a uses an LP to determine the exact location of each facility. A simulated annealing algorithm is used to search for new layouts based on the graph-pair representation. Recently, Kulturel-Konak and Konak (2013) proposed a hybrid genetic algorithm and linear programming approach to solve the UA-FLP which uses a new encoding scheme, called location/shape and which represents the relative facility positions based on the centroids and orientations of the facilities. After the relative facilities positions are set by the GA, the actual facility locations and shapes are determined by solving an LP problem.Our contribution to solve the UA-FLP is a matheuristic which consists of a biased random-key genetic algorithm (BRKGA) with a decoder which combines a novel placement strategy and a linear programming model to fine-tune the solutions.The remainder of the paper is organized as follows. Section 2 presents a formal model of the UA-FLP. Section 3 introduces the new approach, describing the BRKGA in detail, the novel placement strategy, and the fitness function. Finally, in Section 4, we report on computational experiments, and in Section 5 we make concluding remarks.Let N be the number of rectangular facilities of unequal areas to be placed, without any overlap, on a rectangular floor space with dimensions (W, H) along the X- and Y-axes, respectively. Each facility i = 1, …, N is defined by its dimensions along the horizontal and vertical axis (wi, hi), its area Ai= wi× hi, and the maximum aspect ratio, Rmax, which due to practical reasons imposes the maximum permissible ratio between its longest and shortest dimensions, i.e., Rmax ≥ max{wi, hi}/min{wi, hi} ≥ 1.A layout is defined by the coordinates of the centroid (xi, yi) and the horizontal (wi) and vertical (hi) dimensions of each facility i. The cost function to be minimized isCost=∑i=1i=N∑j=1j=Nci,jfi,jdi,jwhere fi, jrepresents the flow between facilities i and j (we assume that fi, i= 0), ci, jis the cost per unit distance between i and j, and di, jis the distance between the centroids of facilities i and j. The distance di, jcan be defined according to one of the following distance norms:•Rectilinear distance (R): di, j= |xi− xj| + |yi− yj|;Euclidean distance (E):di,j=(xi−xj)2+(yi−yj)2;Squared Euclidean distance (SE): di, j= (xi− xj)2 + (yi− yj)2.Since most real-world layout problems make use of the rectilinear distance norm, we will model the problem using this distance norm. In practice the dimensions of the floor space and the area of the facilities are usually not hard constraints and can accommodate small variations. To be able to include this flexibility when searching for a solution we will add to our model the variables △wiand △hito represent, respectively, the amount that each facility i exceeds the horizontal and vertical dimensions (W, H) and include a term in the objective function to penalize this excess.The problem can be cast in an intuitive way in the form of a nonlinear mixed integer programming model, FLP-NMIP. In the model we will use the following additional notation:Pi,j,Qi,j=Binary variables used to model the non-overlapping constraints:•if (Pi, j, Qi, j) is equal to (0, 0) then facility i is forced to the right of j;if (Pi, j, Qi, j) is equal to (1, 0) then facility i is forced to the left of j;if (Pi, j, Qi, j) is equal to (0, 1) then facility i is forced to the above of j;if (Pi, j, Qi, j) is equal to (1, 0) then facility i is forced to the below of j.Parameters defining upper bounds on the horizontal and vertical distance between any two facilities, respectively.Variables representing the distances between the facilities i and j along the X- and Y-axes, respectively.Constant used to penalize the solutions for exceeding the floor space dimensions. The value of this constant should be chosen according to the available flexibility to accommodate small variations in the dimensions of the floor space. If no variations are allowed, thenM=∞.A nonlinear integer programming model of the facility layout problem is given in (2)–(15). The objective function (2) minimizes the total cost using the appropriate distance norm. Constraints (3)–(4) define the horizontal and vertical dimensions of the facility according to the area and maximum allowed ratio. Constraints (5)–(8) impose the non-overlapping constraints by forcing the facilities to be separated horizontally and/or vertically. Constraints (9)–(10) force each facility to be within the horizontal and vertical limits of the floor space, respectively. Constraints (11)–(14) define the distances between all pairs of facilities (i, j) according to the rectilinear norm distance function. Finally, constraints (15) define the domains for the different variables.In the model FLP-NMIP constraints (3) are non-linear resulting in a hard-to-solve model. However, Castillo and Westerlund (2005) developed a linear approximation based on a cutting plane representation of the actual area constraint that guarantees that, at optimality, the final area of each facility is within an ε% error of the required area regardless of the aspect ratio of the facilities. To linearize the model and make it easier to solve, we replace the non-convex and hyperbolic area constraints (3) and the aspect ratio constraints 4 with the ε-accurate representation:(1)−hi−Aiw¯i,k2wi≤2Aiw¯i,k,k=0,…,Ci,∀iwherew¯i,kcorresponds to the tangent points of the cutting planes on the real curve and Ciis the total number of points being used in the approximation according to the chosen ε% error value. The resulting model with constraints (1) replacing constraints (3) will be denoted as FLP-MIP.(2)(FLP-NMIP),MinimizeCost=∑i=1i=N∑j=1j=Nci,jfi,j(di,jx+di,jx)+M∑i=1i=N(▵wi+▵hi)Subject to:Facility aspect constraints(3)wi×hi=Ai∀i(4)1Rmax≤wihi≤Rmax∀iNon-overlapping constraints(5)xi−xj+Mx(Pi,j+Qi,j)≥wi+wj2∀i,j|j>i(6)xj−xi+Mx(1−Pi,j+Qi,j)≥wi+wj2∀i,j|j>i(7)yi−yj+My(1+Pi,j−Qi,j)≥hi+hj2∀i,j|j>i(8)yj−yi+My(2−Pi,j−Qi,j)≥hi+hj2∀i,j|j>iFloor space constraints(9)wi2≤xi≤W−wi2+▵wi∀i(10)hi2≤yi≤H−hi2+▵hi∀iDistance constraints(11)xi−xj≤di,jx∀i,j|j>i(12)xj−xi≤di,jx∀i,j|j>i(13)yi−yj≤di,jy∀i,j|j>i(14)yj−yi≤di,jy∀i,j|j>iDomain constraints(15)xi,yi,wi,hi,di,jx,di,jx≥0∀iandPi,j,Qi,j∈{0,1}∀i,j|j>iThe mixed integer model FLP-MIP developed above is still computationally difficult and fails to provide optimal or even near-optimal solutions on real-size problems due to the large number of binary variables. To overcome this problem we developed a new solution methodology, which combines a biased random-key genetic algorithm with a novel placement strategy. In the next section we describe the new methodology.We begin this section with an overview of the proposed solution methodology. This is followed by a discussion of the biased random-key genetic algorithm, including detailed descriptions of the solution encoding and decoding, evolutionary process, and novel placement strategy.We will first describe the algorithm for the case where the dimensions of the floor space are unconstrained (i.e., we do not take into account Eqs. (9) and (10)). Later in Section 4.2 we extend the approach to the constrained case.

@&#CONCLUSIONS@&#
