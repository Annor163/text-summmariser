@&#MAIN-TITLE@&#
Optimal power flow using an Improved Colliding Bodies Optimization algorithm

@&#HIGHLIGHTS@&#
We developed an Improved Colliding Bodies Optimization (ICBO) algorithm.We solved the optimal power flow for several cases using different constraints, formulations and complexities.The performances of the ICBO algorithm have been evaluated using a comparative study.The ICBO algorithm outperforms many other algorithms for solving optimal power flow problems.

@&#KEYPHRASES@&#
Colliding Bodies Optimization,Optimal power flow,Security-constrained optimal power flow,Power system optimization,Metaheuristics,

@&#ABSTRACT@&#
This paper proposes Improved Colliding Bodies Optimization (ICBO) algorithm to solve efficiently the optimal power flow (OPF) problem. Several objectives, constraints and formulations at normal and preventive operating conditions are used to model the OPF problem. Applications are carried out on three IEEE standard test systems through 16 case studies to assess the efficiency and the robustness of the developed ICBO algorithm. A proposed performance evaluation procedure is proposed to measure the strength and robustness of the proposed ICBO against numerous optimization algorithms. Moreover, a new comparison approach is developed to compare the ICBO with the standard CBO and other well-known algorithms. The obtained results demonstrate the potential of the developed algorithm to solve efficiently different OPF problems compared to the reported optimization algorithms in the literature.

@&#INTRODUCTION@&#
The optimal power flow (OPF) problem is among the tools used in operation and planning of energy systems [1]. Since its introduction by Carpentier in 1962, the OPF usefulness is progressively being recognized, and nowadays it becomes the most important tool used by the system operator in power systems exploitation and planning [2]. Several models have been developed and adopted to formulate different kinds of OPF problems, objectives, sets of design variables and constraint types [3].The OPF can be defined as an optimization problem which aims to adjust two sets of control variables (continuous and discrete) in order to optimize a predefined objective function while satisfying operational equality and inequality constraints. Further, the purpose of traditional OPF is mainly concerned with the minimization of total generating cost. However, more realistic operating conditions should be investigated when solving OPF problems. Complexities and constraints like multi-fuels, valve-point effect, security constraints and prohibited zones have to be included. Therefore, the OPF problem is generally a highly constrained, mixed-integer, nonlinear and nonconvex optimization problem [2,4,5,6].Initially, several traditional (deterministic) optimization techniques were employed successfully to solve the OPF problem [7]. Surveys of various traditional methods used to solve the OPF problem are given in [8–10].Nevertheless, traditional methods rely on some simplification assumptions such as convexity, smoothness, continuity and differentiability. However, actual OPF problems may have nonlinear characteristics such as valve point effects, prohibited operating zones and piecewise quadratic cost function [11]. Therefore, traditional methods for example quasi-Newton method or conjugate gradient method generally fail in solving such OPF problems due to their rugged search landscape.The evolution of computational resources over the last few decades had motivated the development of what is called metaheuristics. These methods can overcome many drawbacks of the traditional methods [12]. Some of these methods have been used to solve the OPF problem such as: Genetic Algorithm (GA) [13,14], Tabu Search (TS) [15], Particle Swarm Optimization (PSO) [16], Simulated Annealing (SA) [17], Differential Evolution (DE) [18], Imperialist Competitive Algorithm (ICA) [19,20], Biogeography Based Optimization (BBO) [21,22], Gravitational Search Algorithm (GSA) [23,24], Harmony Search (HS) [25], Artificial Bee Colony (ABC) [26,27], Black Hole (BH) [28], Teaching Learning based Optimization (TLBO) [29], League Championship Algorithm (LCA) [30], Group Search Optimization (GSO) [31] and many others. Surveys of various metaheuristics used to solve the OPF problem are presented in [6,32,33].However, due to the variability of objectives where different functions can be considered for modeling the OPF problem, no algorithm can be considered as the best in solving all OPF problems. Therefore, there is always a need for a new algorithm that can solve some of the OPF problems efficiently.The Colliding Bodies Optimization (CBO) is a new nature inspired metaheuristic which is based on the law of collision between two bodies. The CBO has been developed by Kaveh and Mahdavi [34]. Moreover, Kaveh and Ghazaan [35] proposed an Enhanced CBO referred to as ECBO. The ECBO uses memory to save some best solutions and a mechanism to escape from local optima.The aim of this paper is to develop an Improved CBO algorithm referred to as ICBO for solving OPF problems. In order to justify the development of ICBO, its performances are compared to CBO, ECBO and other well-known optimization algorithms.The main contributions of this paper can be summarized as follows:1.Development of an improved version of the CBO algorithm.Implementation of ICBO, CBO, ECBO and other well-known optimization algorithms for solving realistic OPF problems.Implementation of a complete set of tests in order to assess optimization algorithms using different OPF problems, test systems, objective functions and constraints.Resolution of the OPF problem using practical constraints like prohibited zones and using non-smooth objective functions by including valve point effect and multi-fuels options for a more realistic OPF.Resolution the OPF problem considering security constraints for more challenging conditions.Implementation of a new comparison method based on best and average values.Utilization of nonparametric statistics for the validation of the comparative method.The remainder of this paper is organized as follows. In Section 2, the OPF problem is formulated. In Section 3, the proposed ICBO algorithm along with the standard and enhanced versions of the CBO are described. The applications and results are presented in Section 4. Finally, the conclusions are drawn in Section 5.As previously mentioned, generally, the objective of the OPF problem is to identify or adjust a set of control variables that optimize predefined power system objectives while satisfying system and practical constraints [36,37]. In this paper, two formulations of the OPF are considered. These are the classical OPF formulation and the security constrained optimal power flow (SCOPF) formulation.The classical OPF problem can be formulated as follows [25,30]:(1)MinimizeF(x,u)(2)Subjecttog(x,u)=0(3)andh(x,u)≤0where u is the vector of independent variables or control variables. x is the vector of dependent variables or state variables. F(x,u): objective function. g(x,u): set of equality constraints. h(x,u): set of inequality constraints.The SCOPF (the preventive approach) problem can be formulated as follows:(4)MinimizeF(x0,u0)(5)Subjecttogk(xk,u0)=0k=0,…,c(6)andh(xk,u0)≤0k=0,…,cwhere x0, u0is the state and the control variables of the base case, respectively. xk, uk: the state and the control variables of the kth post-contingency state, respectively. c is the number of contingencies considered.The set of control variables in the OPF problem formulation are:PG: active power generation at PV buses except the slack bus.VG: voltage magnitudes at PV buses.T: tap settings of transformers.QC: shunt VAR compensation.Hence, u can be expressed as:(7)uT=PG2…PGNG,VG1…VGNG,QC1…QCNC,T1…TNTwhere NG, NT and NC are the number of generators, the number of regulating transformers and the number of VAR compensators, respectively.It is worth mentioning that, transformer tap settings and shunt devices settings are discrete in nature. In many works reported in literature addressing the OPF, these settings are considered as continuous variables for simplicity. Then, the discrete variables are set to their nearest discrete value after the optimization has been done. The results have shown that this approach leads to acceptable results without incurring the exponential complexity as reported by [38]. This last approach is adopted in this paper.The set of state variables for the OPF problem formulation are:PG1: active power generation at slack bus.VL: voltage magnitudes at PQ buses or load buses.QG: reactive power output of all generator units.Sl: transmission line loadings (or line flow).Hence, x can be expressed as:(8)xT=PG1,VL1…VLNL,QG1…QGNG,Sl1…Slnlwhere NL and nl are the number of load buses and the number of transmission lines, respectively.The equality constraints of the OPF reflect the physics of the power system which is represented by the typical power flow equations [39,40]. The equality constrains can be represented as follows:(9)PGi−PDi−Vi∑j=1NBVj[Gijcos(θij)+Bijsin(θij)]=0(10)QGi−QDi−Vi∑j=1NBVj[Gijsin(θij)−Bijcos(θij)]=0where θij=θi−θj, which are voltage angles at bus i and j, respectively, NB is the number of buses, PDis the active load demand, QDis the reactive load demand, Gijand Bijare the elements of the admittance matrix (Yij=Gij+jBij) representing the conductance and susceptance between bus i and bus j, respectively.The inequality constraints of the OPF reflect the limits on physical devices present in the power system as well as the limits imposed to guarantee system security [39,40].(a)Generator constraints(11)VGimin≤VGi≤VGimax,i=1,…,NG(12)PGimin≤PGi≤PGimax,i=1,…,NG(13)QGimin≤QGi≤QGimax,i=1,…,NGTransformer constraints(14)Timin≤Ti≤Timax,i=1,…,NTShunt VAR compensator constraints(15)QCimin≤QCi≤QCimax,i=1,…,NCSecurity constraints(16)VLimin≤VLi≤VLimax,i=1,…,NL(17)Sli≤Slimax,i=1,…,nlIn practice, generators have Prohibited Operating Zones (POZ) due to some faults in the shaft bearing or vibration of machines or their accessories such as pumps or boilers [41,40]. POZ lead to a solution space with disjoint feasible regions for each generator [41]. The cost function of a given generator with POZ is shown in Fig. 1. Therefore, generators have a set of allowed operating zones (i.e. non-prohibited zones) and they must work in one of these zones. POZ can be included as constraints as follows:(18)∀i∈NGPGimmin≤PGi≤PGimmaxm=1,2,…MiwherePGimminandPGimmaxare the minimum and maximum limits for a the mth allowed operating zone and Miis the number of allowed operating zones for the ith generator. Obviously each generator has at least one allowed operating zone.Therefore, when a generator operates in one of POZ, the strategy is to add a penalty term to the total objective function. This penalty term depends on how much the operating point is far from the minimum or the maximum of the POZ.It is worth mentioning that control variables are self-constrained. The inequality constraints of dependent variables that contain load bus voltage magnitude; active power generation at slack bus, reactive power generation and line loadings can be included into the objective using a penalizing strategy. Consequently, the infeasible solutions are considered during the optimization process. However, the unconstrained objective function is extended by a penalty function that will penalize infeasible solutions. In other words, the amount of infeasibility or the square of the distance to feasibility for each constraint is multiplied by a penalty factor and added to the objective function.The basic objective function considered in OPF studies and the one which is widely used is the total generating fuel cost of the whole system where each generating unit has its own cost curve represented by a quadratic function. Therefore, the objective function representing the total generating fuel cost is given by:(19)F(x,u)=∑i=1NGai+biPGi+ciPGi2where ai, biand ciare the cost coefficients of the ith generator.The voltage profile is an important safety and service quality index. The amelioration of the voltage profile of the system consists of minimizing the deviation of voltages of PQ buses form the unity. This voltage deviation is referred to as VD and it can be calculated by:(20)VD=∑i=1NL|VLi−1|Therefore, in order to simultaneously minimize the total generating fuel cost represented by the sum of quadratic functions and the improve the voltage profile represented by VD, we propose the following two-fold objective function:(21)F(x,u)=∑i=1NGai+biPGi+ciPGi2+λVD×VDwhere λVD is a scaling factor to balance between the objective function values and to avoid the dominance of an objective over another. In this paper λVD is selected as 100.In practice, voltage stability becomes a basic requirement because power systems are heavily stressed. Kessel and Glavitch [42] have developed a voltage stability index (L-index) based on the feasibility of power flow equations for each node. It varies between 0 and 1 corresponding to no load and voltage collapse cases, respectively. In other words, L-index calculated at one bus indicates the proximity of voltage collapse condition of that bus. Hence, the maximum L-index referred to as Lmax has to be minimized in order to enhance the voltage stability of the system.Therefore, in order to simultaneously minimize the total generating fuel cost represented by the sum of quadratic functions and to enhance the voltage stability represented by Lmax, we propose the following two-fold objective function:(22)F(x,u)=∑i=1NGai+biPGi+ciPGi2+λLmax×LmaxwhereλLmaxas λVD is a scaling factor to balance between the objective function values and to avoid the dominance of an objective over another. In this paperλLmaxis selected as 5000.In some practical cases, thermal generating plants may have multi-fuel sources such as natural gas and oil. Hence, the fuel cost function or curve is divided into piecewise quadratic cost functions depending on the number and nature of used fuels as shown in Fig. 2.Therefore, the generating fuel cost considering multi-fuels represented by a piecewise function for one generator can be given by:(23)fi(x,u)=aik+bikPGi+cikPGi2for fuelkPGikmin≤Pi≤PGikmaxwhere k is the fuel option.Hence, the objective function reflecting the total generating fuel cost is given by:(24)F(x,u)=∑i=1NGfi(x,u)For more realistic and precise modeling of fuel cost function, the valve-point effect has to be considered. The generating units with multi-valve steam turbines exhibit a greater variation in the fuel-cost functions. The valve opening process of multi-valve steam turbines produces a ripple-like effect as illustrated in Fig. 3[43]. The significance of this effect is that the real cost curve function of a large steam plant is not continuous but more important it is non-linear [43].Therefore, the objective function reflecting the total generating fuel cost considering valve-point effect is given by:(25)F(x,u)=∑i=1NGai+biPGi+ciPGi2+|di×sin(ei×(PGimin−PGi))|where diand eiare the coefficients that represent the valve-point loading effect.The optimization algorithms used in this paper to solve the OPF problem are based on the CBO algorithm. In this section, three versions of the CBO algorithm that are the standard CBO, the enhanced version of the CBO (ECBO) and the improved version of CBO (ICBO) that is proposed in this paper are detailed.The flowchart of the three algorithms used in this paper is given in Fig. 4.As previously mentioned, the CBO is a new optimization algorithm that is inspired from the law of collision between two bodies [34,44,45]. The CBO uses a population of Colliding Bodies (CBs) where each CB has a mass and a velocity; this last one varies before and after collision.The CBO main steps are [34,44,45]:Step 1: generate a population of CBs in the search space.Step 2: calculate the mass of each CB using the following expression:(26)mk=1/F(k)∑ni=11/F(i),k=1,2,…,nwhere F is the objective function and n is the population size.Step 3: sort the population where the best CB is ranked first. After that, the population is divided into two groups (with equal size). The first group starts from the first (best) CB to the one of the middle and the second group starts from the middle to the end of the population.The CBs of the first group (i.e. the best ones) are considered as stationary whilst the CBs of the second group (the worst ones) move toward the first group. Therefore, the velocities before collision of the first group (stationary CBs) are given by:(27)vi=0,i=1,…,n2and for the second group (moving CBs) they are given by:(28)vi=xi−xi−(n/2)i=n2+1,…,nwhere viand xiare the velocity and the position of the ith CB, respectively.Step 4: calculate the new velocities after the pairwise collision between the members of the first group and the ones of the second group. Therefore, the velocities after collision of the first group are given by:(29)v′i=(mi+(n/2)+εmi+(n/2))vi+(n/2)mi+mi+(n/2),i=1,…,n2and for the second group they are given by:(30)v′i=(mi−εmi−(n/2))vimi+mi−(n/2),i=n2+1,…,nwherev′iis the velocity after collision and ɛ is the Coefficient Of Restitution (COR). It is worth mentioning here that the COR is defined in order to have a good balance between the exploration and the exploitation phases of the CBO and it is given by:(31)ε=1−iteritermaxwhere iter and itermaxare the current iteration number and the maximum number of iterations, respectively.Step 5: evaluate the new positions of CBs after collision. For moving CBs, their positions are updated using the following expression:(32)xinew=xi−(n/2)+rand×v′i,i=n2+1,…,nand the positions of stationary CBs are updated as follows:(33)xinew=xi+rand×v′i,i=1,…,n2wherexinewis the new position of the ith CB after collision.Steps from 2 to 5 are repeated until a termination criterion is met.As aforesaid, the main addition of the ECBO with respect to the standard CBO is the concept of memory and a mechanism to escape from local minima. The main steps of the ECBO are [35]:Step 1: generate a population of CBs in the search space.Step 2: calculate the masse of CBs using (26).Step 3: save the best so far solutions in a Colliding Memory (CM). Then, the CBs of CM are added to the population and the same numbers of current worst CBs are deleted.Step 4: sort the CBs then create two groups namely: stationary and moving bodies. The moving bodies move toward the stationary ones using the velocities calculated by (27) and (28).Step 5: collide bodies two by two where the first one is selected from the group of stationary CBs and the second one is selected from the moving CBs. The velocities after collisions are calculated using (29) and (30).Step 6: update the new positions of CBs after collision using (32) and (33).Step 7: regenerate some dimensions of CBs. In this step, for each CB a random number is generated if this number is lower than a predefined parameter called Pro within (0,1), one dimension (randomly selected) of this CB is regenerated. The goal of this step to help the algorithm to escape from local optima, it is equivalent to the mutation phase in the GA.Steps from 2 to 7 are repeated until a termination criterion is met as in the standard CBO.In the standard version of the CBO the CBs are divided into two equal groups namely, the stationary CBs (best ones) and the moving CBs (worst ones). Collisions occur between two objects that have the same order in their respective groups. For instance, the CB # 4 from the stationary group collides with the CB # 4 from the moving group. Therefore, the worst CBs follow the best ones and then collide with them. The objectives of these two operations are: to improve the position of the worst CBs and to move the best CBs toward better positions.The main idea proposed here for the ICBO is to collide three bodies instead of two bodies unlike in CBO and ECBO algorithms. Therefore, in every iteration, three CBs are selected based on a selection rule. The best CB among these three CBs is assumed to be stationary and the remaining two CBs are assumed to be moving in the search space. The moving CBs collide the stationary one and move in the search space with one more research direction than in CBO and ECBO.The main steps of the proposed ICBO are:Step 1: initialize the population of CBs.Step 2: calculate the masses of CBs using (26).Step 3: create an archive pool that has a size of 1/4 of the population size.Step 4: for i=1→na.select three CBs based on a selection rule. If one of the CBs is the same as another replace it. Then rank these three CBs based of their fitness. The first CB or CB1 is considered as stationary while CB2 and CB3 are considered as moving. The velocities of each CB before collision are defined by:(34)vCB1=0(35)vCB2=xCB1−xCB2(36)vCB3=xCB1−xCB3calculate the new velocities of the three CBs after collision using the following expressions:(37)v′CB1=(mCB2+εmCB2)vCB2mCB1+mCB2+(mCB3+εmCB3)vCB3mCB1+mCB3(38)v′CB2=(mCB2−εmCB1)vCB2mCB2+mCB1(39)v′CB3=(mCB3−εmCB1)vCB3mCB3+mCB1update the position of each CB using the following expression:(40)xCB1new=xCB1+rand×x′CB1(41)xCB2new=xCB2+rand×x′CB2(42)xCB3new=xCB3+rand×x′CB3check the CBs, if a CB goes beyond the bounds of the search space it is brought back inside it.Step 5: diversify the population by exchanging some dimensions of the CBs from the population with the ones from the archive pool.Step 6: group both the CBs from the population and the ones from the archive pool and select the best n ones to keep the same number of CBs.Steps from 2 to 6 are repeated until a termination criterion is met. The termination criterion used for the ICBO is the same one used for the CBO and the ECBO that is the maximum number of iterations.The proposed ICBO algorithm along with the CBO and ECBO algorithms are implemented to solve the OPF problem. In this paper, 16 different case studies have been investigated using 3 test systems. The developed programs for this paper are written using MATLAB and MATPOWER [46] and applied on a 2.20GHz i7 personal computer with 8.00 GB-RAM using parallel processing to run the different runs.Three test systems are used to evaluate the performance of the proposed algorithm in addition to the comparison algorithms. The main characteristics of these tests are described below.The IEEE 30-bus test system has a total generation capacity of 435.0MW and its main characteristics are given in Table 1. It is worth mentioning that, for CASE 9 and CASE 10 generators of buses 1 and 2 have two fuel options i.e. k=2 and for CASE 11 and CASE 12 generators of buses 1 and 2 are considered to have valve-point loading effects on their characteristics. Cost coefficients and prohibited zones used for this test system are given in Tables 2–4. Detailed data about this test system can be derived from [47].In order to test the scalability of the proposed ICBO algorithm, a large-scale test system is considered in this paper, which is the IEEE 57-bus test system. This system has a total generation capacity of 1975.9MW and its main characteristics are given in Table 5. The cost coefficients and the detailed data of this test system can be derived from [48].Another large-scale test system is considered in this paper which is the IEEE 118-bus test system. This system has a total generation capacity of 9966.2MW and its main characteristics are given in Table 6. The cost coefficients and the detailed data of this test system can be derived from [48].As previously mentioned, 16 cases have been investigated in this paper. These cases are described in Table 7.

@&#CONCLUSIONS@&#
