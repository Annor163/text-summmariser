@&#MAIN-TITLE@&#
Web software fault prediction under fuzzy environment using MODULO-M multivariate overlapping fuzzy clustering algorithm and newly proposed revised prediction algorithm

@&#HIGHLIGHTS@&#
The web environment has been considered as fuzzy and a multivariate fuzzy clustering and forecasting algorithm has been developed.The forecasted occurrences of different web errors are refined by the “Revised Prediction Algorithm”.The complexity analysis of the proposed algorithm has also been carried out to establish its efficiency.The comparative study of the proposed method and other algorithms has also been done.The proposed method has been validated using some real web failure data collected from ISM Dhanbad web server.

@&#KEYPHRASES@&#
Web software reliability,Fuzzy clustering,Fuzzy time series,Server logs,Web errors,Algorithm,

@&#ABSTRACT@&#
In recent years some research works have been carried out on web software error analysis and reliability predictions. In all these works the web environment has been considered as crisp one, which is not a very realistic assumption. Moreover, web error forecasting remains unworthy for the researchers for quite a long time. Furthermore, among various well known forecasting techniques, fuzzy time series based methods are extensively used, though they are suffering from some serious drawbacks, viz., fixed sized intervals, using some fixed membership values (0, 0.5, and 1) and moreover, the defuzzification process only deals with the factor that is to be predicted. Prompted by these facts, the present authors have proposed a novel multivariate fuzzy forecasting algorithm that is able to remove all the aforementioned drawbacks as also can predict the future occurrences of different web failures (considering the web environment as fuzzy) with better predictive accuracy. Also, the complexity analysis of the proposed algorithm is done to unveil its better run time complexity. Moreover, the comparisons with the other existing frequently used forecasting algorithms were performed to demonstrate its better efficiency and predictive accuracy. Additionally, at the very end, the developed algorithm was applied on the real web failure data of http://www.ismdhanbad.ac.in/, the official website of ISM Dhanbad, India, collected from the corresponding HTTP log files.cluster r which is generated after modulo−m operation.the ith (i=0,1…m−1) cluster or interval related to the main factor.the linguistic variables corresponding to ai.the ith cluster or interval of the jth secondary factor.the linguistic variables corresponding to bj,i.it is the largest element of a cluster ai(i=0,1…m−1).it is the smallest element of a cluster ai(i=0,1…m−1).it is the average of max_clust[ai]and min_clust[ai] of cluster ai.distance between any two data points a and b.the jth (j=1,2…n) element of the ith (i=0,1…m−1) cluster.the membership of e_main(i,k) on an.number of elements of ak(k=0,1…m−1) whose distances from e_main(p,q) is greater than sum_deviation of the main factor.The qth element of the pth cluster of the ith secondary factor.number of elements of the kth cluster of the ith secondary factor whose distances from e_sec(i)p,qis greater than the sum_deviation of the ith=(i=1,2…k) secondary factor.the changed mid_clust ofa(mid_clust[i]modm).largest element of an.smallest element of an.the predicted value of i.

@&#INTRODUCTION@&#
Software reliability is defined as the probability of successful operation of software in a specified environment during a specified exposure. Various software reliability growth models (SRGMs) are available in literature. All these SRGMs have been developed based on the failure data obtained during the testing phase of the software. SRGMs are categorized based on either the nature of the failure process or as per the development phase of the software life cycle [1–9]. With the increasing demand of service oriented software, an evolutional shift has been taken place from product oriented software architecture and there failure analysis to service oriented software architecture and their failure pattern analysis [1–5]. There exists a huge difference between the failure nature and architecture of the product oriented software and service oriented software. One of the popular service oriented software is web software. Web software, not only different from the product oriented software due to different architecture and failure nature, but also its environment and application areas are much more heterogeneous. Due to the above mentioned differences between the web software and product oriented software, except few most of the existing SRGMs are not applicable for web software reliability analysis.With the increasing online application, evolution of efficient search engines, social networks, enormous changes have taken place in e-commerce and communication system. As a result, the World Wide Web (WWW) has become an important part of our daily life. In the present scenario of fast changing economics and business world, any failure of web software will create havoc in the society and business world. Therefore, the web software reliability analysis has become an important issue in present days. Various studies have been carried out for workload characterization as well as identification of web browsing trends and patterns [10–18]. Tian et al. [10] have proposed a method for web software reliability analysis based on access logs and error logs. Other than this, some more literatures are available for web software error and reliability analysis [11–18]. All these analysis have been carried out considering the crisp nature of the web environment.Web is a huge and complex distributed system, whose heterogeneous components interact with different hardware and software in various ways to achieve the desired result of an application. Software that are responsible for running the web applications are distributed, implemented in multiple languages and incorporate much of reuse. According to Offutt [18] the web applications consist of diverse components including traditional and non-traditional software, interpreted scripting languages, HTML files, mixtures of HTML and programs, databases, graphical images and complex user interfaces. Hence, the environment of the web software is heterogeneous. Also, developing an efficient website needs a large group of people with diverse skills and backgrounds. Hence, the type and number of faults will be different in different web applications. Therefore, it will be more logical to consider the web environment as fuzzy and a multivalued logic such as fuzzy logic will be more appropriate than binary logic for web software reliability analysis. Following are the advantages of using fuzzy logic in web software reliability analysis:(i) Fuzzy logic based models used in the web software reliability predictions are without any strict assumptions. It gives more flexibility to web software reliability professional and researchers.(ii) Among all the error codes occur during different operations in the web environment, few of them are considered for reliability analysis of the web software. But the error codes which are not considered for reliability analysis are also important from security and technical point of view. Therefore, it is better to analyze the effect of these errors using some multivalued logic like: fuzzy logic rather than binary logic, e.g., we consider the statement “error 400 occurred”. From reliability point of view of web software, this will not be considered as an error. Hence, the statement is both true and false. Here, binary logic fails. This situation can be explained better with the help of fuzzy logic, such as 400 is an error with membership 0.1 and with membership 0.9 it is not an error from the reliability point of view. Hence, fuzzy logic is more applicable in such situation.First time in the literature of software reliability, Cai et al. [9,19], have studied the applicability of fuzzy set theory [20] in software reliability modeling. Different fuzzy set theory based SRGMs have been proposed in literature. In [21,22,23], authors mainly studied the applicability of fuzzy set theory in software debugging process. Also, they have discussed the limitations of the probabilistic software reliability growth models (PSRMs) and highlighted the factors which can be considered as fuzzy number in software reliability growth modeling. Based on the discussions given in the previous paragraphs and Cai et al. [9,19], in this paper we have shown the applicability of fuzzy ‘if-then’ rule [20,24–31] in web error clustering (overlapping as well non-overlapping) and prediction.In recent years, many researchers have proposed various time series based models for prediction in different areas [20,24–31]. Most of the existing fuzzy time series based forecasting methods [20,24–31] used the static length of intervals or clusters, i.e., all the intervals having same length. The drawback of the static length of intervals is that the historical data are roughly put into the intervals, even if the variance of the historical data is not high. Furthermore, the membership distribution techniques employed by the aforementioned approaches suffer from some unrealistic assumptions and limitations such as the membership values can only be 0, 0.5, and 1. It is an unrealistic assumption and limitation as, in many real life applications, it is generally found that the membership value of an element within a cluster (or interval) may be any real number lying between 0 and 1. Moreover, the accuracy rates of the existing fuzzy forecasting methods are not good enough [30]. Also, the predictive accuracy of the existing fuzzy time series based forecasting techniques [20,24–31] is usually not satisfactory. Additionally, defuzzification processes (adopted by the aforementioned forecasting algorithms) of the main factor does not consider the effects of the remaining secondary factors, which is, however, a major drawback as well as unrealistic assumptions of the existing widely used aforestated approaches [20,24–31]. Here, the main factor means the dependent variable whereas; the secondary factors represent the independent variables.From the literature [20,24–31], it evinces itself clearly that the existing fuzzy time series based forecasting techniques [20,24–31] have the aforementioned limitations, which require certain improvements. Motivated by the comparative study given in the previous paragraphs, the multivariate fuzzy ‘if-then’ rule [20,24–31] based model, incorporating both clustering (overlapping and non-overlapping) and prediction, has been improvised here. This improvisation has been carried out by considering variable interval size, varying the membership values from 0 to 1 in contrast to the algorithms given in [20,24–31], and considering the influences of the main and different secondary factors on the main factor at the time of defuzzification and prediction. The membership distribution technique adopted by the proposed fuzzy prediction algorithm is mainly based on some well defined functions that can generate any real number (membership values) lying between 0 and 1, making it more realistic than others. Moreover, the defuzzification process acquired by the proposed algorithm can exploit the influences of main (dependent variable) and different secondary factors (independent variables) on the main factor. Consequently, multivariate fuzzy logic as well as fuzzy time series [20,24–31] are used to predict the occurrences of the main factor. Quite on the contrary, the prediction of the occurrences of the different secondary factors involves the univariate fuzzy logic and univariate fuzzy time series [20,24–31] as no other variables have influences on the independent variables. As a result, the proposed model is capable to overcome the drawbacks of the previous algorithms and is able to predict the occurrences of different web errors present in the web software. The complexity analysis of the proposed algorithm has also been accomplished to demonstrate its better run time complexity. Finally, the proposed multivariate fuzzy forecasting algorithm is applied on the data collected from the HTTP log files (access and the error logs) of http://www.ismdhanbad.ac.in/ (the official web site of Indian School of Mines, Dhanbad, India) to demonstrate its potentiality and applicability. Toward the end, the proposed algorithm was compared with three different algorithms, viz., the algorithm developed by Chen and Tanuwijaya [30], fuzzy c-means clustering algorithm [32–35] and the traditional four steps algorithm [20,24–31].Rest of the paper is organized as follows: Section ‘Analysis of log files (access and error logs)’ elaborates the HTTP log files analysis procedure. A review of fuzzy sets, fuzzy numbers and fuzzy time series is presented in Section ‘Review of fuzzy sets, fuzzy numbers and fuzzy time series’. A review of clustering is given in Section ‘Review of clustering’. The proposed algorithm is given in Section ‘Proposed algorithm’. Complexity analysis of the proposed algorithm is done in Section ‘Complexity analysis of the proposed multivariate fuzzy clustering and forecasting algorithm’. Results and discussions are given in Section ‘Results and discussion’. Performance analysis of the proposed algorithm is given in Section ‘Performance analysis of the proposed algorithm’. Section ‘Comparison’ demonstrates the comparison of the proposed algorithm with other three well-known and frequently used algorithms. Final section concludes the present work.Initially, the HTTP logs (access and error logs) corresponding to http://www.ismdhanbad.ac.in/ are analyzed (as proposed by Tian et al. [10], Kallepalli and Tian [13]) to extract all the factors, i.e., all the errors having an impact on the reliability of the web system, number of sessions, etc. Several types of errors can occur in the system, like system error, HTTP error, etc. These errors are represented by some numbers or digits or some hexadecimal codes called error response codes. In this paper, the area of interest is HTTP error. There is a wide range of HTTP error codes, starting from 100 to 599 [10–18]. In case of the HTTP error, these error response codes are embedded in the access log and these codes can be mapped to the error entries in the error logs, e.g., in case of HTTP error, a “file not found” error in the error log usually corresponds to a 404 error code in the access log. Hence, as described in the aforementioned literature [10–18] using access logs is a reasonable method to gather information unless the detailed information about the web error is required. Among those occurred errors, a few have significant influences on the reliability of the web software [11–13,15].One point must be kept in mind that the log files contain requests from robots and other automated systems that should be removed as they are not actual requests from web users. Automated systems are classified as systems that repeatedly request a resource from the web site after a predefined period of time. Several techniques to identify them can be used by web administrators to remove automated requests. Most well known robots have a signature line that is included with every request as part of the USER AGENT [11–13,15] field in the log file, especially HTTP error logs of the corresponding web server. The classifications of the web error codes along with their reason behind occurrences are shown in Table 1. One sample entry of the access log [11–13,15] of http://www.ismdhanbad.ac.in/ is given in Fig. 1.This subsection presents a review of the fuzzy sets, fuzzy numbers and fuzzy time series [20,24–31].A fuzzy subset [20] of a discrete and finite universe of discourse X={x1,x1,x3…xn} is defined as follows:A=μA(x1)x1+μA(x2)x2+⋯+μA(xn)xn=∑iμA(xi)xiwhereμA:X→[0,1]is the membership function. For eachx∈X,μA(x)is called the grade of membership of x in(A,μA). The fuzzy set(A,μA)is often denoted by{μA(x1)/(x1),μA(x1)/(x2)…μA(xn)/(xn)}. When the universe of discourse, i.e., X is continuous and infinite, the fuzzy subset A is denoted as follows:A=∫μA(xi)xiA fuzzy number [20]A˜is a normal and convex fuzzy subset of the universal set X. Here, the ‘convex’ set implies that∀x1,x2∈Xand∀α∈[0,1]μA˜(αχ1+(1−α)x2≥min(μA˜(x1),μA˜(x2))).Here,μA˜(x1)andμA˜(x2)are the memberships ofx1∈Xandx2∈XinA˜respectively.A triangular fuzzy number (TFN) [20] defined to be a normal and convex fuzzy subset of the universal set X and denoted asA˜=(a,b,c)has the following membership function.μA˜(x)=c−xc−b;a≤x≤bx−ab−a;b≤x≤c0;otherwireSome operation laws on TFNs are as follows [20]:(a1,b1,c1)⊕(a2,b2,c2)=(a1+a2,b1+b2,c1+c2)(a1,b1,c1)⊗(a2,b2,c2)=(a1×a2,b1×b2,c1×c2)(a,b,c)−1=1a,1b,1cFuzzy time series based on the concept of fuzzy reasoning proposed by Mamdani [27] was first introduced by Song and Chisome [24–26], following which many variations and versions of fuzzy time series and their rigorous applications were discussed and published in many papers by several researchers [28–30]. Fuzzy time series is defined as follows:AssumingY(t),(t=1,2…)is the subset ofℝ1(one-dimensional Euclidian space), which is the universe of discourse where fuzzy subsets [20]mi(t),(i=1,2…)are defined and let F(t) be a collection ofmi(t),(i=1,2…)then, F(t)is called a fuzzy time series defined onY(t)(t=1,2…). Here, F(t) is regarded as a linguistic variable [27,31] andmi(t),(i=1,2…)can be viewed as possible linguistic values of F(t), wheremi(t),(i=1,2…)are represented by fuzzy sets [20].From this, it can be observed that F(t) is a function of time t, i.e., the value of F(t) being different at different times. According to Mamdani [27], Chen [28] and Chen and Tanuwijaya [30], if there exists a fuzzy relationshipR(t,t−1), such thatF(t)=F(t−1)°R(t,t−1), where ‘°’ is the fuzzy ‘Max−Min’ composition operator, then F(t) is caused byF(t−1). The relationship between F(t) andF(t−1)is denoted by:F(t)→F(t−1). For example, if t=2013, the fuzzy relationship betweenF(t−1)and F(t) is given byF(2012)→F(2013). It is to be noted that the right hand side of the fuzzy relation represents the future fuzzy set (forecast), its crisp counterpart being denoted as Y(t).It is very much significant to note that the main difference between fuzzy and conventional time series lies in the fact that the values of the former are fuzzy sets, while the values of the latter are the real numbers. As a corollary, it can be roughly assumed that a fuzzy set is a class with fuzzy boundaries.If F(t) be a fuzzy time series and if F(t) is caused byF(t−1),F(t−2)…F(t−n)i.e., the next state is caused by the current and its n previous states, then this fuzzy logical relationship (FLR) would be represented by:F(t−n),…F(t−2),F(t−1)→F(t)and is called the nth order fuzzy time series. nth order based fuzzy time series models are referred to as the higher order models.If for any time t,F(t)=F(t−1)and F(t) has only finite elements, then F(t)is called a time invariant fuzzy time series, otherwise it is called a time variant fuzzy time series.Different relevant examples of fuzzy time series were cited by Song and Chisome [24–26] as also by Chen [28] and Chen and Tanuwijaya [30].Presented in this section is a brief description of clustering, in which cluster analysis has been dealt with. Cluster analysis is defined as the method for partitioning a collection of elements into a number of subgroups (called clusters), which is based on certain similarities [32–35]. Different measures for estimating the similarity between several elements are used to form a cluster. Selection of these measures, in turn, is dependent on the nature of the data as well as the purpose of clustering. Some of the widely recognized measures for clustering include distance, connectivity, and intensity. Notably, clustering may be either hard or soft, the latter being also referred to as ‘fuzzy clustering’ [32–35]. It is to be remembered that in hard clustering, each element of the data set is assigned to one and only one cluster [32–35], whilst, contrasted with this, in soft clustering, each element of the data set is- or can be, assigned to more number of clusters simultaneously with a certain level of membership lying in [0,1]. In this way, the strength of association with the elements and a particular cluster is determined by the fuzzy clustering method.This section concerns itself with the development of the proposed multivariate fuzzy clustering and prediction algorithm. But before attempting to develop the algorithm, it would be appropriate to briefly touch upon the existing fuzzy forecasting techniques, after which the developed predictive algorithm will be compared to the latter's for accuracy and predictability.Most of the existing fuzzy forecasting techniques, in general, employ the following four steps [20,24–31]:Step 1 involving partitioning the universe of discourse into intervals,Step 2 fuzzifying the historical data,Step 3 building fuzzy logical relationship and obtaining fuzzy logical relationship groups, andStep 4 calculating the forecast output.Now, using these four steps as the basis, a novel and innovative fuzzy clustering and prediction algorithm has been developed to forecast the occurrences of different web failures that might have occurred during the execution of the web software. For this purpose, first of all the data set has been divided into a number of hard clusters of various sizes, based on the ‘modulo’ operation, after which the proposed multivariate fuzzy prediction algorithm is appropriately applied for the prediction purpose. This has been shown in the form of a flow chart and depicted in Fig. 2. Now, the development of the proposed algorithm based on the aforesaid four steps is being done as follows:Let the data set be {d1, d2, d3…dn}. Prepare the cluster using modulo−m operation on each di; (i=1,2, …,n), i.e., dimod m. Here, m≤n is any integer. Then, there will be m clusters starting from 0 to (m−1). Name the clusters as cl(0), cl(1), cl(2), …, cl(m−1). Let, dimod m=r; i=1,2, …n) then after the modulo−m operation the element d1 belongs to cl(1); (r=0,1,…m−1). Here, sorting is not required to arrange the data set and as a consequence, no sorting algorithm is applied. As an example let {111, 19, 193, 100,11} is the data set. After applying any sorting algorithm the list will be 11,19,100,111 and 193. But applying modulo−10 operation the following clusters are generated:cl0={100},cl(1)={11,111},cl(3)={193},cl(9)={19},cl(2)=cl(4)=cl(5)=cl(6)=cl(7)=cl(8)={ϕ}This proves the generated clusters are of variable lengths. It also proves the irrelevancy of applying any sorting algorithm to sort the data set. Hence, the time complexity of the proposed algorithm reduces. Here, the data must be integers as they are the occurrences of different web errors.Some parameters of the proposed algorithm are now defined as below:max_clust[i], (i=0,1, …m−1): Maximum element of the ith cluster.min_clust[i], (i=0,1, …m−1): Minimum element of the ith cluster.mid_clust[i],(i=0,1⋯m−1)=0.5*(max_clust[i]+min_clust[i])(1)mean_clust=1m∑i=0m−1mid_clust[i](2)sum_deviation=1m*∑i=0m−1(mean_clust−mid_clust[i])2mean_clust_sec[j]=∑i=0m−1mid_clust_sec[i]m(3)sum_deviation_sec[j]=1m*∑i=0m−1(mean_clust−mid_clust[i])2where mean_clust_sec[j]; (j=1,2…k) is the mean_clust of the jth secondary factor and as a consequence k number of mean_clust_sec can be found.(4)global_deviation=1m1k1∑i=0m−1(mean_clust−mid_clust)2+∑j=1k∑i=0m−1(mean_clust_sec[j]−mid_clust_sec[j][i])2where mid_clust_sec[j][i]; (i=0,1, …m−1; j=1,2, …k) is the mid_clust of the ith (i=0,1, …m−1) cluster of the jth (j=1,2, …k) secondary factor. Again, m1 and k1 are the number of non-empty clusters of the main and the secondary factors, respectively.These parameters will eventually be used in the development of the proposed multivariate fuzzy forecasting algorithm.In this step, it is to be necessarily checked up as to whether the distances between an element and the mid_clust[i], (i=0,1, …m−1) are less than sum_deviation or not. However, if it is less than sum_deviation, then the algorithm would itself generate a membership of the element in that cluster. This step could be properly explained and understood from the following example:cl(0)(cluster 0), cl(B) (cluster B) and (an element) as depicted in Fig. 3A.If(d(A, mid_clust(cl(0))))<sum_deviation && d(A, mid_clust(cl(B)))<sum_deviation)A∈cl(0), cl(B) with certain membership values.ElseIf(d(A, mid_clust(cl(0))))<sum_deviation && d(A, mid_clust(cl(B)))<sum_deviation)A∈cl(0) with certain membership.ElseIf(d(A, mid_clust(cl(0))))<sum_deviation && d(A, mid_clust(cl(B)))<sum_deviation)A∈cl(B) with certain membership.ElseA∉cl(0), cl(B).On the other hand, to check the influence of different secondary factors on the main factor, it is to be necessarily checked up as to whether the distances between the elements of the main factor and the mean_clust_sec[j] [i]; (i=0,1, …m−1; j=1,2, …k) are less than global_deviation or not. If it is less, then the influence of the ith (i=0,1, …m−1) cluster of the jth (j=1,2, …k) secondary factor, i.e., bj,i, on the element must be counted. This part enables the present forecasting algorithm to consider the influences of different factors on a particular main factor, which is one of the most unique and significant features of the proposed algorithm.In this final step, the multivariate fuzzy forecasting algorithm, based on the proposed clustering technique is developed. The innovative feature of this algorithm is that it takes care of overlapping as well as non-overlapping clusters. The following three steps (a,b, and c) perform clustering, construction of the fuzzy set and forecasting respectively.(a) Clustering – Divide the universe of discourse of the main factor intom;(m∈ℤ+)intervals or clusters. Denote them by ap, (p=0,1, …m−1). Denote the corresponding linguistic variables by Ap, (p=0,1, …m−1). In this case, it is assumed that there are 1 and k numbers of main factor (dependent variable) and the secondary factors (independent variables) respectively. Similarly, in case of the jth, (j=1,2, …k) secondary factor, the universe of discourse is divided intom(m)ℤ+numbers of non-overlapping intervals or clusters, denoted by Bj,p(j=1,2, …k; p=0,1, …m−1). Denote the corresponding linguistic variables by Bj,p(j=1,2, …k; p=0,1, …m−1).(b) Defining fuzzy sets – The memberships of Ap, (p=0,1, …m−) in ap, (p=0,1, …m−), i.e., the local impacts (fL), are determined by the following function:(5)fL(Ap)=1;membershipofApinap1−xini*np;forotherclustersofthemainfactori=0,1…m−1;i≠p;p=fixed0;incaseoftheemptyclustersofthemainaswellasthesecondaryfactors.Again, the memberships of Ap, (p=0,1,…m−1) in different clusters of the secondary factors bj,p(j=0.1, …m−1), i.e., the global impacts (fG), are determined by the following function:(6)fG(Ap)=1−xj,inj,i*np;fortheclustersofthesecondaryfactors,i=0,1…m−1;j=0,1…k;p=fixedFrom Eqs. (5) and (6), it is quite clear that, the membership values are not only restricted to 0, 0.5 and 1.In the introductory section it has been discussed that the main factor is very similar to the dependent variable, which is, however, can be stated as the output. Inevitably, the influences of the main and different secondary factors (independent variables, i.e., the inputs or the causes) on the same main factor should be considered for better prediction. In the present paper, the memberships of the linguistic variable corresponding to a cluster of the main factor on different clusters of the same factor are defined as the local impact (fL). Quite on a contrary, the memberships of the same linguistic variable corresponding to a cluster of the main factor on different clusters of the secondary factors are defined as the global impact (fG). Consequently, the global impact signifies the influences of different secondary factors on the main factor.Variables used in the above equations are explained as follows:np, (p=0.1, …m−1): Total number of elements of ap, (p=0.1, …m−1).xi, (0≤xi≤ni* np): Total number of distances of the elements of ai, (i=0.1, …m−1) from ap, (p=0.1, …m−1) is greater than sum_deviation of the main factor (Cf. Step 2 above).xj,i(i=0.1, …m−1; j=1.2, …k): Total number of distances of the elements of ai, (i=0.1, …m−1) from bj,i(i=0.1, …m−1; j=1.2, …k) is greater than global_deviation (Cf. Step 2 above).Further, n be the length of the data set for the main factor. The remaining number of elements of the main factor can be calculated as (n−np), (p=0.1, …m−1). When all the distances are less than sum_deviation of the main factor, i.e., xi=0, it can well be discerned that ai=apand fL(Ap)=1.For the fuzzy set representation of the linguistic variables Ai, (i=0.1…m−1) of main factor, both the local (fL) and the global (fG) impacts are considered as follows (Cf. Eqs. (5) and (6)):(7)Ap=∑i=0m−1fL(Ap)ai+∑j=1k∑i=0i≤p≤m−1m−1fG(Ap)bj,i=∑i=0m−1(1−(xi/ni*np))ai+∑j=1k∑i=0i≤p≤m−1m−1(1−(xj,i/nj,i*np))bj,iIn this way, the influences of the main and different secondary factors have been considered in the fuzzy set representation.To make the Step of the proposed algorithm clear, an example is given here, which has been pictorially depicted in Fig. 3B. From Fig. 3B, two clusters of the main factor, i.e., aiand ajare found with cardinalities 3 and 4, respectively. Hence, ni=3 and nj=4. Now, let it be further assumed the corresponding linguistic variables to be Aiand Ajrespectively. Again, {A,B,C}∈aiand {D,E,F,G}∈aj. Let xi=7. Then, the membership of Aion ajwould be defined as follows:fL(Ai)aj=(1−(xj/ni*nj))aj=(1−(7/3*4))aj=0.417ajSimilarly, the memberships of Bp,qon bp,i(independent variables) will then be defined as follows:(8)f(Bp,q)=1;membershipofBp,qinbp,q1−xp,inp,i*np,q;forotheroverlappingclusters;p,q=fixed;i=0,1…m−10;incaseoftheemptyclustersThe fuzzy set representation of the linguistic variables Bp,qcan be defined as follows (Cf. Eq. (8)):(9)Bp,q=∑i=0m−1f(Bp,q)bp,i,i.e.,Bp,q=∑i=0m−11−xp,inp,i*np,qbp,i.Variables used in the above equation are defined as follows:np,q,(p=0,1…k;q=0,1…m−1): Total number of elements inbp,q,(p=0,1…k;q=0,1…m−1).ni,(i=0.1…m−1): Total number of elements of ai.xp,i,(0≤xp,i≤np,i*np,q):Total number of distances of the elements ofbp,i,(i=0,1…m−1)from bp,qis greater than sum_deviation of the pth secondary factor.Assuming n as the length of the data set for the pth secondary factor, the total number of elements of pth secondary factor except bp,qcan be calculated as (n−np,q).(c) [Prediction]: Rule 1: The elements within the data set can be predicted by this rule, the membership of e_main (p,q) on an(i.e., local impact, i.e., gL) being defined as follows:(10)gL(e_main(p,q)_an)=1;whene_main(p,q)∈an1−zk_e_main(p,q)nk;p,q,k=0,1…;q=0,1…m−1;k≠p0;incaseoftheemptyclustersAgain, the memberships of e_main (p,q) onbj,i,(i=0,1…m−1;j=1,2…k), i.e., the global impacts (gG), are determined by the following function:(11)gG(e_main(p,q)_an)=1−zk_e_main(p,q)nj,i;fortheclustersofthesecondaryfactors,i=0,1…m−1;j=0,1…k;p=fixedThe global impacts signify the influences of several secondary factors on the main factor.Variables used in the above equation are, in turn, defined as follows:gL(e_main (p,q)_an): Local membership of qth element of pth cluster of the main factor on an.ni,(i=0,1…m−1):Total number of elements of the ith cluster of the main factor.zi_e_main(p,q),(i,p=0,1,2⋯m−1;q=1,2⋯n;(zi_e_main(p,q)≤ni)):The number of elements of ith cluster of the main factor that distances frome_main(p,q),(p=0,1⋯m−1;q=1,2⋯n)is greater than the sum_deviation of the main factor.gG(e_main (p,q)_bj,i): Global membership of qth element of pth cluster of the main factor on bj,i.zj,i_e_main(p,q),(i,p=0,1,2⋯m−1;j=1,2⋯k;q=1,2⋯n;(zj,i_e_main(p,q)≤nj,i)):The number of elements of ith cluster of the jth secondary factor that distances from e_main (p,q),(p=0, 1…m−1; q=1, 2…n) is greater than the global_devaition of the main factor.nj,i: Total number of elements of the ith cluster of the jth secondary factor.Here,d(e_main(i,k),e_main(p,q)),(i,p=0,1…m−1,j,q=1,2…n)is defined as the distance between e_main (i,j) and e_main (p,q).Next, the fuzzy sets corresponding toe_main(j,k),(j=0,1⋯m−1;k=1,2⋯n)are then defined in the following manner:(12)e_main(p,q)=∑i=0i≤p≤m−1m−1gL(e_main(p,q)_ai)ai+∑j=1k∑i=0i≤p≤m−1m−1gG(e_main(p,q)_bj,i)bj,i,i.e.,e_main(p,q)=∑i=0i≤p≤m−1m−11−zi_e_main(p,q)niai+∑j=1k∑i=0i≤p≤m−1m−11−zj,i_e_main(p,q)nj,ibj,iIn the introductory section, it has been discussed that the main factor is the dependent variable (output) present in the system and for better prediction, the influences of the main and different secondary factors on the main factor should be considered. Consequently, in the next step, the following fuzzy logical relationship based on the multivariate time series [20,24–31] among fuzzified main and secondary factors is defined to forecast the main factor.e_main(i,j),e_sec(1)p,q,e_sec(2)r,s,⋯e_sec(n)x,y→e_main(m,n)wheree_main(i,j),e_sec(1)p,q,e_sec(2)r,s,⋯e_sec(n)x,y→e_main(m,n)denotes that ‘if the jth element of ith cluster of the main factor, qth element of pth cluster of the 1st secondary factor, sth element of rth cluster of the 2nd secondary factor… yth element of xth cluster of the nth secondary factor at stage t, then at the stage(t+1) the main factor will be nth element of the mth cluster of the main factor’.Further, the defuzzified predicted occurrences of the main factor can be computed in the following manner:(13)predicted(e_main(p,q))=1*mid_clust(ap)+∑k=0,1,2,⋯m−1k≠p1−zk_e_main(p,q)nk*mid_clust(ak)+∑j=1k∑i=0m−11−zj,i_e_main(p,q)nj,i*mid_clust(bj,i)1+∑k=0,1,2,⋯m−1k≠p1−zk_e_main(p,q)nk+∑j=1k∑i=0m−11−zj,i_e_main(p,q)nj,iwhere∑k=0,1,2⋯m−1k≠p(1−(zk_e_main(p,q)/nk))is the total influence of the other clusters (apart from ap) of the main factor on e_main(p,q). Again,∑j=1k∑i=0m−1(1−(zj,i_e_main(p,q)/nj,i))is the total influence of different clusters of the secondary factors on e_main(p,q). It eventually removes the drawback of not considering the influences of different secondary factors in the defuzzification process by the existing fuzzy forecasting algorithms [20,24–31].The above step can be understood well with the help of the following example:Let D1={10,11,12} and D2={11,12,13}be the data sets of the main and secondary factors. Applying mod−3 operation on D1 the following clusters are formed.cl(0)={12}=a0,cl(1)={10}=a1,cl(2)={11}=a2Therefore, mean_clust=11, sum_deviation=0.471 (using step 2 above).Applying mod−3 operation on D2 the generated clusters of the secondary factors are given as follows:b1,0={12},b1,1={13},b1,2={11}mean_clust_sec=12, sum_deviation_sec=0.471, global_deviation=0.33. Again,e_main(0,0)=12,e_main(1,0)=10,e_main(2,0)=11.The fuzzy sets corresponding to the linguistic variables are then defined as follows:A0=1a0+0a1+0a2+1b1,0+0b1,1+0b1,2,A1=0a0+1a1+0a2+0b1,0+0b1,1+0b1,2,A2=0a0+0a1+0a2+0b1,0+0b1,1+0b1,2The fuzzy sets corresponding toe_main(0,0),e_main(1,0),e_main(2,0)(i.e., the individual elements of the data set corresponding to the main factor) are defined as follows:e_main(0,0)=1a0+0a1+0a2+1b1,0+0b1,1+0b1,2,e_main(1,0)=0a0+1a1+0a2+0b1,0+0b1,1+0b1,2,ande_main(2,0)=0a0+0a1+1a2+0b1,0+0b1,1+1b1,2Again,e_sec(1)0,0=12,e_sec(1)1,0=13,e_sec(1)2,0=11.Accordingly, the fuzzy sets corresponding to the linguistic variables are defined as follows:B1,0=1b1,0+1b1,1+1b1,2,B1,1=0b1,0+1b1,1+0b1,2,B1,2=0b1,0+0b1,1+1b1,2In the same manner, the fuzzy sets corresponding toe_sec(1)0,0,e_sec(1)1,0,e_sec(1)2,0(i.e., the individual elements of the data set corresponding to the secondary factor) are defined as follows:e_sec(1)0,0=1b1,0+0b1,1+0b1,2,e_sec(1)1,0=0b1,0+1b1,1+0b1,2,e_sec(1)2,0=0b1,0+0b1,1+1b1,2.The fuzzy logical relationships can then be constructed as follows:e_main(1,0), e_sec(1)2,0→e_main(2,0)e_main(2,0), e_sec(1)0,0→e_main(0,0)e_main(0,0), e_sec(1)1,0→# (i.e., to say, the element lies outside the data set)Hence, the computed defuzzified predicted values ofe_main(1,0),e_main(1,0)ande_main(1,0)can be calculated as follows:predicted(e_main(0,0))=1*12+1*121+1=12,predicted(e_main(1,0))=1*101=10,andpredicted(e_main(2,0))=1*11+1*111+1=11In case of the secondary factors (mainly the independent variables), the memberships ofe_sec(i)p,q,(i=0,1,…;p=0,1,…m−1;q=1,2,…n)(qth element of the pth cluster of the ith secondary factor) on bi,n(local impact) are defined as follows:(14)g(e_sec(i)p,q_bi,n)=1;whene_secip,q∈bi,n1−r(i)k_e_sec(i)p,qni,p;e_secip,q∈otherclustersi=1,2…;k,p=0,1…m−1;q=0,1…n;k≠p0;incaseoftheemptyclusteresIn the introductory section, it has been discussed that the secondary factors are mainly the independent variables present in the system. Hence, the global impacts are not calculated as the other variables have no influence on the independent variables or the secondary factors.Variables used in the above equation are defined as follows:g(e_sec(i)p,q−bi,n),(i=0,1…;p,n=0,1…m−1;q=1,2…n):Local membership of qth element of pth cluster of ith secondary factor, i.e., membership ofe_sec(i)p,qon bi,n.ni,p(i=0,1,…k;p=1,2…m−1):Number of elements inbi,p(i=0,1,…k;p=1,2…m−1).r(i)k_e_sec(i)p,q′=(i=0,1…k;p=0,1…m−1;q=1,2…n):The number of elements of the kth cluster of ith secondary factor that have distances from the element of prediction (i.e.,e_sec(i)p,q(i=0,1…k;p=0,1…m−1;q=1,2…n)) greater than the sum_deviation of the ith secondary factor.The corresponding fuzzy sets for the elements of the secondary factors can now be defined as follows:(15)e_sec(l)p,q=∑i=0m−1g(e_sec(1)p,q_bl,i)bl,i,i.e.,sec(l)p,q=∑i=0m−1(1−(r(l)i_e_sec(l)p,q/n1,i))bl,iThe secondary factors are mainly the independent variables present in the system having no influences of the other variables. Hence, in this case, to form the fuzzy logical relationship the concept of univariate time series [20,24–31] is used as follows:e_sec(i)p,q→e_sec(i)r,swheree_sec(i)p,q→e_sec(i)r,sdenotes that ‘if the fuzzified value of the ith secondary factor at stage t is the qth element of its pth cluster, then at the stage (t+1) the aforementioned secondary factor will be defuzzified as its sth element of the rth cluster’. This is because of the fact that, in this case no other factor except itself has the influence on the independent variable.The defuzzified predicted occurrences of the ith (i=0.2…k) secondary factor could be calculated by using the following equations.(16)predicted(e_sec(n)p,q)=∑i=0m−1(1−(r(n)i_sec(n)p,q/nn,i))*mid_clust(bn,0)∑i=0m−1(1−(r(n)i_e_sec(n)p,q/nn,i))To increase the predictive accuracy the Revised Prediction Algorithm is applied which is given as follows (Cf. Fig. 2):while((predicted>original)&&|predicted-orignal|>accuracy_factor){for(i=0;(i<no. of non empty clusters),(i!=|original|), (mid_clust[i]!=0); i++)mid_clust[i]=mid_clust [i]+log(|mean_distance|)//(in case of main factor)/*mid_clust_sec[i]=mid_clust_sec[i]+log (|mean_distance_sec|) (in case of secdondary factor)*/Calaculate mean_clust, sum_deviation (in case of main factor), mean_clust_sec, sum_deviation_sec (in case of the secondary factor and global_deviation)Repeat Step 3 and Step 4 of the proposed algorithm}while((predicted<original)&&|predicted-priginal|>accuracy_factor){for(i=0; (i<no. of empty clusters), (i!=|original|), (mid_clust[i]!=0); i++)mid_clust[i]=mid_clust[i]−log(|mean_distance|)//(in case of main factor)/*mid_clust_sec[i]=mid_clust_sec[i]=log(|mean_distance_sec|) (in case of secondary factor)*/Calculate mean_clust, sum deviation (in case of main factors), mean_ clust_sec, sum_deviation_sec(in case of the secondary factor) and global_deviationRepeat Step 3 and Step 4 of the proposed algorithm}if (|predicted-original|<accurcy_factor)Stop.In case of the main factor the suitable accuracy_factor can be selected as follows:0<accuracy_factor≤mean_distance2,or,0<accuracy_factormean_distance≤12=12.Similarly, in case of the ith secondary factor accuracy_factor, i.e., accuracy_factor_sec(i), can be chosen as follows:0<accuraccy_factor≤mean_distance_sec(i)2,or,0<accuracy_factor_sec(i)mean_distance_sec(i)≤12=12It is assumed thataccuracy_factor/mean_distance=θMandaccuracy_factor_sec(i)/mean_distance_sec(i)=θS(i);0<θM,θS(i)≤1/2=1/2. mean_distance_sec(i) is the mean_distance of the ith secondary factor.Rule 2. An important feature of this rule is that the elements lying outside the data set can precisely be predicted. For predicting the main factor, the following multivariate fuzzy logical relationship [20,24–31] can be defined:e_main(i,j), e_sec(1)p,q, e_sec(2)r,s,…e_sec(n)x,y→#, where ‘#’ is the occurrence of the main factor lying outside the data set.Again, the secondary factors are mainly the independent variables present in the system. Hence, in this case, to form the fuzzy logical relationship the concept of univariate time series [20,24–31] is used as follows:e_sec(i)p,q→#_sec(i)where e_sec(i)p,q→#_sec(i) denotes that ‘if the fuzzified value of the ith secondary factor at stage t is the qth element of its pth cluster, then at the stage (t+1) the aforementioned secondary factor will be fuzzified to its unknown value ‘#_sec(i)’, i.e., the occurrence of the ith secondary factor lying outside the data set. Here, the following cases may arise:Case (i): In case of the main factor the following case may arise:If(mid_clust[ai]>upperbound[a(mid_clust[ai]modm)]||mid_clust[ai]<lower_bound[a(mid_clust[ai]modm)]then,new_mid_clusta(mid_clust[ai]modm):=mid_clust[ai]i.e., the mid_clust of aiwill be assigned to a new variablenew_mid_clusta(mid_clust[ai]modm).For forecasting the main factor both the local and the global impacts are considered (as discussed earlier). The local impact signifies the impact of the main factor on itself and it is defined as follows:(17)gL(new_mid_clust[a(mid_clust[ai]modm)]_aj)=1;mid_clust[ai]modm=p(1−θM)∗rp_new_mid_clust[amid_clust[ai]modm]nk;k=0,1,…m−1;p≠(mid_clust[ai]modm)0;incaseoftheemptyclustersThe corresponding fuzzy membership function for the global impact (gG) is then defined as follows:(18)gG(new_mid_clust[a(mid_clust[ai]modm)]_bj,l)=1−θM∗rj,l_new_mid_clusta(mid_clust[ai]modm)nj,lHere, the global impact mainly signifies the influences of the secondary factors on the main factor.Variables used in Eqs. (17) and (18) are defined as follows:gL(new_mid_clusta(mid_clust[ai]modm)_ak):The local impact ofnew_mid_clusta(mid_clust[ai]modm)on ak(k=0,1,2…m−1). Let i=5, m=10 and mid_clust[a5]=250. Thena(mid_clust[ai]modm)=a(250mod10)=a0rp_new_mid_clusta(mid_clust[ai]modm):The Number of elements ofa(mid_clust[ai]modm)(k≠mid_clust[ai]mod m)(k≠mid_clust[ai] mod m), that distances fromnew_mid_clusta(mid_clust[ai]modm)is greater than sum_deviation of the main factor.gG(new_mid_clusta(mid_clust[ai]modm)_bj,l):The global impact of new_mid_clust[a(mid_clust[ai]mod m on bj,l.rj,i_new_mid_clust[a(mid_clust[ai]modm)]:Number of elements of bj,ithat distances from new_mid_clust[a(mid_clust[ai]mod mis greater than global_deviation of the main factor.Hence, the fuzzy set for ‘#’ is defined as follows:(19)#=∑i=0m−1gL(new_mid_clust[a(mid_clust[ah]modm)]_ai)ai+∑j=1k∑i=0m−1gG(new_mid_clust[a(mid_clust[ah]modm)]_bj,i)bj,i.LetA=1*new_mid_clust[a(mid_clust[ah]modm)],B=∑p≠mid_clust[ah]modmp=0,1,⋯m−11−θM∗rp_new_mid_clustamid_clust[ah]modm)np*mid_clust[ap]C=∑j=1k∑i=0m−11−θM∗rj,i_new_mid_clusta(mid_clust[ah]modm)nj,i*mid_clust[bj,i]D=∑p≠mid_clust[ah]modmp=0,1,⋯m−11−θM∗rp_new_mid_clusta(mid_clust[ah]modm)npE=∑j=1k∑i=0m−11−θM∗rj,i_new_mid_clusta(mid_clust[ah]modm)nkHere, D is the sum of the local memberships ofnew_mid_clusta(mid_clust[ah]modm)on ap(p=0,1,…m−1; p≠mid_clust[ah]mod m), i.e., all the clusters of the main factor excepta(mid_clust[ah]modm)(Cf. Eq. (17)). Similarly, E is the sum of the global memberships ofnew_mid_clusta(mid_clust[ah]modm)on bj,i(j=0,1…m−1), i.e., all the clusters of the secondary factors (Cf. Eq. (18)).The defuzzified predicted value of ‘#’ can then be calculated as follows:(20)Predicted(#)=A+B+C1+D+EHence, the influences of the main and different secondary factors are considered in the defuzzification of#.To explain the above step, the following example is given:From the previous example, it is found that D1={100,125,300,375,210} and D2={100,119,315,357,219} are the data sets of the main and secondary factors. Applying mod−10 operation on D1 following clusters are formed.cl(0)={100,300,210}=a0,cl(5)={125,375}=a5,a1=a2=a3=a4=a6=a7=a8=a9={ϕ}Therefore, mid_clust[a0]=200, mid_clust[as]=250, mean_clust[as]=250, mean_clust=225, sum_deviation=17.678, |mean_distance|=27.5. (Cf. step 2 of the proposed algorithm).Similarly, applying mod−10 operation on D2 the generated clusters of the secondary factors are given as follows:b1,0={100},b1,9={119},b1,5={315},b1,7={357},b1,9={219},b1,2=b1,3=b1,4=b1,6=b1,8=ϕmean_clust_sec=222.4,sum_deviation_sec=46.508,global_deviation=23.46Again,mis_clust[b1,0]=100,mis_clust[b1,1]=111,mis_clust[b1,5]=315,mis_clust[b1,7]=315,mis_clust[b1,9]=219,e_main(1,0)=10,e_main(2,0)=11Now, the elements of the main factor can be represented as follows:e_main(0,0)=100,e_main(0,1)=300,e_main(0,2)=210,e_main(5,0)=125,e_main(5,1)=375The fuzzy set representations are defined as follows (Cf Section ‘Review of clustering’):A0=1a0+1−(2/3)b1,0+1−(2/3)b1,1+1−(2/3)b1,5,A5=0a0+1a5+1−(1/2)b1,1+1−(1/2)b1,7The predicted value of e_main(0,0) is found as follows (Cf. Section ‘Review of clustering’):predicted(e_main(0,0))=1∗200+1∗111+1∗100+1∗3151+1+1+1=181.5Here,predictede_main(0,0)>e_main(0,0). Let accuracy_factor=13andpredicted(e_main(0,0)−originale_main(0,0)>accuracy_factory=13.Again,accuracy_factormean_distance=θM=0.47Now applying the Revised Prediction algorithm (Cf. Step 4.1,4.2, of Section ‘Review of clustering’), after 5th iterationmid_clust[a0]=min_clust[a0]+log(mean_distance)=207.1965mid_clust[aS]=min_clust[aS]+log(mean_distance)=257.1965andglobal_deviation=18.39<19. Hence, the fuzzy set representation for e_main(0,0) is given as follows:e_main(0,0)=1a0+0a5+0.33b1,0+0b1,1+0b1,5Hence, the defuzzified predicted value of e_main(0,0) 5th iteration is give as follows:predicted(e_main(0,0))=1∗200+(1−0.47*0.33)*1001+0.8449=154.20Again,predicted(e_main(0,0))−original(e_main(0,0))>accuracy_factor=13. Consequently, the iteration continues untilpredicted(e_main(0,0))−original(e_main(0,0))<13.Similarly, in case of the secondary factorsIf(mid_clust[bj,p]>upper_bound[bj,(mid_clust[bj,p]modm)]||mid_clust[bj,p]<lower_bound[bj,(mid_clust[bj,p]modm)])then,new_mid_clustbj,(mid_clust[bj,p]modm)≔mid_clust[bj,p]The corresponding fuzzy membership function is given below. The following function shows the membership ofnew_mid_clustbj,(mid_clust[bj,p]modm)on bj,i, i.e., on different clusters of the same secondary factors.(21)g(new_mid_clustbj,(mid_clust[bj,p]modm)_bj,i)=1−θs(i)∗r(j)i_new_mid_clustbj,(mid_clust[bj,p]modm)nj,iPreviously mentioned that, the secondary factors are the independent variables, hence, as a consequence, the global impacts will not be considered.Variables used in the above equation are defined as follows:g(new_mid_clust[bj,(mid_clust[bj,p]modm)]_bj,i)The membership ofnew_mid_clustbj,(mid_clust[bj,p]modm)on bj,i.r(j)i_new_mid_clust[bj,(mid_clust[bj,p]modm)]:The Number of elements of bj,i, that distances fromnew_mid_clust[bj,(mid_clust[bj,p]modm)]is greater than the sum_deviation_sec[i].Hence, the fuzzy set for ‘#_sec(i)’ is defined as follows:(22)#_sec(i)=∑q=0m−1gnew_mid_clustbj,(mid_clust[bj,p]modm)_bj,qbj,qThe defuzzified predicted value of ‘#_sec(i)’ (unknown occurrences of the ith secondary factor) can then be calculated as follows:(23)predicted(#_sec(i))=∑i=0m−11−θS(i)*r(j)i_new_mid_clustbj,(mid_clust[bj,p]modm)nj,i*new_mid_clustbj(mid_clust[bj,p]modm)∑i=0m−11−θS(i)*r(j)i_new_mid_clustbj,(mid_clust[bj,p]modm)nj,iAfter this, the defuzzified unknown occurrences of the main and the secondary factors are inserted into the dataset and repeat the step 1 to step 4 of the developed algorithm to predict the next occurrences of them.Case (ii):If(mid_clust[ai]==upper_bound[a(mid_clust[ai]modm]||mid_clust[ai]==lower_bound[a(mid_clust[ai]modm)])then, for prediction purpose the following fuzzy membership function is defined, which denotes the memberships ofmid_clust[a(mid_clust[ai]modm)], i.e.,pL(local impact), on different clusters of the main factor:(24)pL(mid_clust[a(mid_clust[ai]modm)]_ak)1;mid_clust[ai]modm=k1−θM*rk_mid_clust[a(mid_clust[ai]modm)]nk;k=0,1,…m−1;k≠mid_clust[ai]modm0;incaseoftheemptyclustersOn the other hand, the memberships ofmid_clust[a(mid_clust[ai]modm)]on bj,i, i.e.,pG(global impact), is defined as follows:(25)pG(mid_clust[a(mid_clust[ai]modm)]_bj,l)=1−θM*rj,l_mid_clusta(mid_clust[ai]modm)nj,lThe variables are defined below:pL(mid_clust[a(mid_clust[ai]modm]_ak):Memberships ofmid_clust[a(mid_clust[ai]modm]on ak(0,1…m−1), i.e., the local impact.rk_mid_clusta(mid_clust[ai]modm):The Number of elements ofak,(k≠mid_clust[ai]modm), that distances frommid_clust[a(mid_clust[ai]modm)]are greater than sum_deviation of the main factor.pGmid_clusta(mid_clust[ai]modm)_bj,l:Memberships ofmid_clust[a(mid_clust[ai]modm)]onbj,l,(j=1,2,…k;1=0,1,…m−1), i.e., the global impact.rj,l_mid_clusta(mid_clust[ai]modm):The Number of elements ofbj,l,(j=1,2,…k;1=0,1,…m−1), that distances frommid_clust[a(mid_clust[ai]modm)]is greater than the global_deviation.Hence, the fuzzy set for # is defined as follows:(26)#=pL(mid_clust[a(mid_clust[an])modm]_a0a0+⋯+pL(mid_clust[a(mid_clust[an])modm]_am−1am−1+∑j=1k∑i=0m−1pG(new_mid_clust[a(mid_clust[ah])modm]_bj,i)bj,iNow, letP=1∗mid_clust[a(mid_clust[ah]modm)],Q=∑i≠mid_clust[ah]modm|i=0,1,…,m−11−θM∗ri_mid_clust[a(mid_clust[ah]modm)]ni*mid_clust[ai]R=∑j=1k∑i=0m−11−θM∗rj,i_mid_clust[a(mid_clust[ah]modm)]nj,i*mid_clust[ai]S=∑i≠mid_clust[ah]modmi=0,1⋯m−11−θM∗ri_mid_clusta(mid_clust[ah]modm)ni,T=∑j=1k∑i=0m−11−θM∗rj,i_mid_clust[a(mid_clust[ah]modm)]nj,iThe defuzzified predicted value of ‘#’ can then be calculated as follows:(27)predicted(#)=P+Q+R1+S+THence, the influences of the main and different secondary factors are considered in the defuzzification of #.Similarly, in case of the secondary factorsIf(mid_clust[bj,p]==upper_bound[bj,mid_clust[bj,p]modm]||mid_clust[bj,p]==lower_bound[b(j,mid_clust[bj,p]modm)])then, for prediction purpose the following fuzzy membership function is defined, which denotes the memberships ofmid_clust[bj,mid_clust[ai]modm)]on different clusters of the main factor:(28)p(mid_clust[bj,mid_clust[bj,p]modm]_bj,i)=1−θS(i)*r(j)i_mid_clust[bj,mid_clust[bj,p]modm]niThe variables are defined below:P(mid_clust[bj,mid_clust[bj,p]modm)]_bj,i):Memberships ofmid_clust[bj,mid_clust[bj,p]modm)]on bj,i.r(j)i_mid_clustbj,(mid_clust[bj,p]modm):The Number of elements of bj,ithat distances frommid_clust[bj,mid_clust[bj,p]modm)]are greater than sum_deviatio_sec (j) of the main factor.Hence, the fuzzy set for #_sec(q) is defined as follows:(29)#_sec(q)=∑i=0m−1p(mid_clust[bj,mid_clust[bj,p]modm]−bj,i)bj,ior,#_sec(q)=∑i=0m−11−θS(q)*r(j)i_mid_clustbj,mid_clust[bj,p]modmnibj,iNext, the defuzzified predicted value of ‘#_sec(q)’ can be computed as follows:(30)predicted(#_sec(q))=∑i=0m−11−θs(q)*r(j)i_mid_clust[bj,mid_clust[bj,p]modm]ni*mid_clust[bj,mid_clust[bj,p]modm]∑i=0m−11−θs(q)*r(j)i_mid_clust[bj,mid_clust[bj,p]modm]niAfter this, the defuzzified unknown occurrences of the main and the secondary factors are inserted into the dataset and repeat the step 1 to step 4 of the developed algorithm to predict the next occurrences of them. The above developed algorithm can thus effectively handle both the overlapping and non- overlapping clusters, besides making predictions and handling the uncertainty as well.Having developed the algorithm, its complexity analysis is now being done to find the total complexity of the new algorithm in this section. The developed algorithm has been designed in such a way that it works with the inputs of arbitrary length. Normally, the run time complexity of any algorithm is stated as the function of the inputs. In the present work, the mod−m(m≤m, n ∈ℤ+) operation has been performed with the elements of the data set and as a result, the data set (main as well as the secondary factors) is divided into m non- overlapping clusters. All the elements are assumed to be of length s,(s ∈ℤ+). The stepwise computation of the complexity of the developed algorithm is now made in three steps described below:Step 1: This step deals with the complexity for the formation of clusters. In the developed algorithm, the clusters are formed with the help of ‘modulo operation and its complexity depends on the respective multiplication algorithm. If the school-book long multiplication is adopted, then its complexity will be O(s2), where the inputs are two s – digit numbers and output is one 2s – digit number. However, if the Karatsuba algorithm [36] is adopted, the complexity will then decrease to O(s1585). If the complexity of the chosen multiplication algorithm is assumed to M(s), then the complexity of the ‘modulo operation will also be M(s) [36], in which case, the data sorting would not be required. It is known that any comparison sort algorithm will make at least Ω(nlgn) number of comparisons in the worst case [36], where n is the total number of elements present in the dataset. As a result, the complexity of the proposed algorithm will be reduced. The total complexity of this step can then effectively be calculated as M(s).Step 2: This step involves the determination of the complexity of mid_clust, mean_clust, and sum_deviation. This is discussed below:Complexity of mean_clust[i], (i=0,1, …m−1)=θ(s)+M(s), where θ(s) is the complexity of addition.Complexity of mid_clust=θ(s)+M(s).Complexity of sum_deviation=m(θ(s)+M(s))+M(s).Complexity of mean_clust_sec[j]=θ(s)+M(s)Complexity of mid_clust_sec[j][i]=θ(s)+M(s)Complexity of sum_deviation_sec[j]=m(θ(s)+M(s))+M(s).Complexity of(31)global_deviation=1m1k1Σi=0m−1(mean_clust−mid_clust[i])2+Σj=1kΣi=0m−1(mean_clust_sec[j]−mid_clust_sec[j][i])2can be calculated as follows:(m−1)(θ(s)+M(s))+(k(m−1)+1)(θ(s)+M(s))+M(s)=((k+1)(m−1)+1)(θ(s)+M(s))+M(s)=Q*(θ(s)+M(s))+M(s)=(Q+1)*M(s)+θ(s)=R*M(s)+θ(s)where ((k+1)(m−1)+1)=Q ∈ℤ+, (Q+1)=R ∈ℤ+Therefore, the total complexity of this step comes to,(32)θ(s)+M(s)+θ(s)+M(s)+mθ(s)+M(s)+M(s)+θ(s)+M(s)+θ(s)+M(s)+m(θ(s)+M(s))+M(s)+R*M(s)+θ(s)=(2m+5)*θ(s)+(2m+R+6)*M(s)=A*θ(s)+B*M(s)where (2m+5)=A ∈ℤ+and (2m+R+6)=B ∈ℤ+.Step 3: This step involves the determination of complexity for the formation of fuzzy logical relationships as also the forecasting algorithm. In this process, the hashing technique of complexity O(1) (constant time complexity) [36] was used to search different element of the data set. If the distance between the element and the mid_clust is less than the sum_deviation, then the effect of the cluster corresponding to the mid_clust is considered to predict the element. Hence, (m−1) comparisons (local impact) (since, mod−m operation has been performed) can be made. Similarly, in case of each secondary factor (m−1) comparisons (global impact) can be made and the total complexity of this step can be calculated as follows:(33)n0θ(s)+⋯+ni−1θ(s)+ni+1θ(s)+⋯+nm−1θ(s)+n1,0θ(s)+⋯+n1,i−1θ(s)+n1,i+1θ(s)+⋯+n1,m−1θ(s)+n2,0θ(s)+⋯+n2,i−1θ(s)+n2,i+1θ(s)+⋯+n2,m−1θ(s)+⋯=θ(s)*Σr=0r≠im−1nr+Σj=1kΣi=0m−1nj,i=(E+F)*θ(s)=G*θ(s),Σr=0r≠im−1nr∈ℤ+,Σj=0kΣi=0m−1ni,j=F∈ℤ+,(E+F)=G∈ℤ+It may be noted that the run time complexity of the developed algorithm after 3rd step can effectively be calculated as follows:M(s)+A*θ(s)+B*M(s)+G*θ(s)=(A+G)*θ(s)+(B+1)*M(s)=C*θ(s)+D*M(s),where (A+G)=C ∈ℤ+and (B+1)=D ∈ℤ+.The above result clearly shows that, the developed algorithm is a P-type [36] algorithm.

@&#CONCLUSIONS@&#
