@&#MAIN-TITLE@&#
Path planning with obstacle avoidance by

@&#HIGHLIGHTS@&#
A two-step approach to design planar smooth collision-free paths is presented.The construction of piecewise linear paths with angle-based criteria is investigated.The smooth path is based on PH spline interpolation schemes with tension parameters.A selection of test cases demonstrates the quality of the new motion planning scheme.

@&#KEYPHRASES@&#
Path planning,Obstacle avoidance,Spline,Pythagorean-hodograph curves,Tension parameters,

@&#ABSTRACT@&#
We propose a two-step approach for the construction of planar smooth collision-free navigation paths. Obstacle avoidance techniques that rely on classical data structures are initially considered for the identification of piecewise linear paths having no intersection with the obstacles of a given scenario. Variations of the shortest piecewise linear path with angle-based criteria are proposed and discussed. In the second part of the scheme we rely on spline interpolation algorithms with tension parameters to provide a smooth planar control strategy. In particular, we consider the class of curves with Pythagorean structures, because they provide an exact computation of fundamental geometric quantities. A selection of test cases demonstrates the quality of the new motion planning scheme.

@&#INTRODUCTION@&#
The design of motion planning strategies plays a fundamental role in modern computer applications with focus on different kinds of simulation environments naturally related to robotics, as well as to scientific visualization and interactive navigation  [1,2]. The issue of finding an optimal trajectory for a given path should properly combine the geometric part of the motion, usually identified by a path planning scheme, with a suitable time law.The path planning problem includes the identification of paths that do not intersect any obstacle. In order to avoid forbidden configurations related to a given scenario, several graph-like structures may be considered, see for example  [3] for a recent survey related to possible collision-free piecewise linear solutions. Using a standard graph search algorithm, a graph with non-negative edge weights can be exploited to compute the path with lowest total cost between any two vertices of the graph. In particular, the output of the algorithm may return an optimal path with respect to a distance (shortest path) criterion. In order to provide an optimal trade-off between the accuracy of the prescribed trajectory and the flexibility of interactive navigations, the information concerning the collision-free piecewise linear path may be subsequently combined with spline interpolation techniques that provide a smooth planar control strategy, see e.g.,  [4]. Previous attempts in this direction usually considered solutions related to classical spline methods  [5,6].By considering interpolation schemes with tension control–see, e.g.,  [7,8] and the references therein–as a control tool on the shape of the interpolating curve, we present a two-step approach for smooth path planning with obstacle avoidance. In the first step, algorithms for the modification of the shortest piecewise linear path associated to the trapezoidal map and the visibility graph according to simple angle-based criteria are proposed and discussed. In the second step, we consider the class of curves with Pythagorean structures, because they usually provide paths with fair shape and always guarantee exact computation of fundamental geometric quantities like curvature and arc length  [9]. This can also facilitate the physical part of the motion which requires accurate arc length and curvature computations  [10].The structure of the paper is as follows. Section  2 provides the preliminary material that introduces the problem setting and the two graph structures considered in the subsequent algorithms, namely the trapezoidal map and the visibility graph. The design of a piecewise linear collision-free path is addressed in Section  3. Different algorithms that rely on the information provided by the above mentioned data structures are presented and discussed. Section  4 provides a brief overview of Pythagorean-hodograph (PH) curves by focusing onG1PH quintic Hermite spline interpolants with tension parameters. An asymptotic analysis that can be exploited for choosing the free parameters involved in the interpolation scheme is developed in Section  5. A final illustrative example in a non-trivial obstructed scenario is presented in Section  6. Finally, Section  7 concludes the paper.The aim of path planning is to define a suitable collision-free path from an initial to a target position in a certain scenario that includes a set of obstacles. In robotics, the position of every point of the robot is usually defined as its configurationq and depends on the specific robot model. The parameters needed to specify the robot configuration identify the degrees of freedom associated to the problem. All possible configurations define the configuration spaceQ​(C-space) that can be divided in two subsets:Qfree, the set of robot configurations free from collision with obstacles, andQobst, the obstacle configuration space given by the set of intersection configurations between the robot and any obstacle. Hence, a configuration q is just a point (or element) in the configuration space and the number of the degrees of freedom corresponds to the dimension ofQ[1].Given a two- or three-dimensional rigid body and a certain scenario with a prescribed set of obstacles, we look for a smooth vector functionr(t):[0,1]→Qso thatr(0)=qs,r(1)=qg,andr(t)∈Qfree∀t∈[0,1],whereqsandqgcorrespond to the start and goal configuration, respectively. The desired path is the image inQofr(t).The path planning problem can be considered in a wide set of scenarios by taking into account different problem settings. In particular, we consider the simplest planar point robot problem where a circular robot of radiusris moving within a certain scenario characterized by convex obstacles of polygonal shapes. Consequently, the configuration space is just obtained by augmenting the obstacle boundaries by their polygonal offset at distancer. Then, after this preliminary offset computation, we can consider the robot as a moving point within a two-dimensional environment characterized by a known set of static obstacles with a fixed position. In this context, the robot follows an a priori identified path, constructed according to some off-line controller.In order to identify a feasible path, certain navigability structures that contain information about the free configuration space are usually exploited. Several techniques to obtain different navigability structures are available. Among others, two approaches that provide alternative solutions based on suitable data structures to navigateQfreeare the exact cell decomposition and roadmap methods. In the family of graphs that may be taken into account within these methods, see e.g.,  [1,11], we consider the trapezoidal map and the visibility graph.The trapezoidal map (or trapezoidal/vertical decomposition) is a well-known example of exact cell decomposition. Given a polygonal environment, the first step is to define a bounding box that includes all obstacles. A trapezoidal map is conventionally obtained by drawing two vertical extensions (one going upwards and the other going downwards) from every vertex of the obstacles to the first intersection with an obstacle edge or to the bounding box. OnceQfreeis partitioned, the adjacency graph is defined by placing a node inside each trapezoid, e.g. its geometric centroid, and additional ones in the middle of the vertical extensions. An arc is then defined between two vertices of these two kinds of nodes associated to the same trapezoid. In order to construct the target path,qsandqgare added to the graph by simply connecting them to the central verticesvsandvgof the two corresponding trapezoids. Different graph search algorithms on the trapezoidal map identify admissible collision-free paths betweenvsandvg. An example of trapezoidal map is shown in Fig. 1(top).The visibility graph is a widely known roadmap method in computational geometry. Given a set of polygonal obstacles in the plane, the nodes of the visibility graph correspond to the vertices of each polygon. An arc between two vertices belongs to the graph if the linear segment that connects these vertices does not intersect any obstacle. To complete the roadmap, the start and target positions are added to the set of graph nodes together with the corresponding arcs. The naive algorithm to compute the visibility graph has complexityO(n3), wherenis the number of nodes in the graph. By considering a suitable sweep approach with balanced search tree structures the complexity can be reduced toO(n2logn)[11]. Fig. 1 (bottom) shows the visibility graph associated to a simple scenario. Other examples of roadmap methods include Voronoi diagrams and silhouette graphs.In order to define a smooth path that does not intersect any obstacle, we consider two consecutive steps. In the first phase, we rely on one of the two data structures introduced in the previous section to define a suitable collision-free piecewise linear path. Subsequently, the smooth path is obtained by interpolating the vertices of the piecewise linear path previously computed, as described in Section  4.Classical graph search algorithms can be used either on the trapezoidal map or the visibility graph to identify admissible paths that do not intersect any obstacles in the first step of the method. A standard choice relies on the Dijkstra’s algorithm that computes the shortest path between two vertices of a given graph  [12]. Note that the shortest path associated to the visibility graph is the absolute shortest path from the start to the goal position with respect to the considered scenario, see e.g.,  [11].In order to obtain a final path defined by a curve without significant curvature peaks, the identification of suitable piecewise linear paths with a small angle between two adjacent segments is required in the first step of the method.11Not oriented convex angles measured in degrees are used in the first step of our method.For this reason, we introduce three algorithms to define different variants of the shortest path algorithm. The first one is related to the trapezoidal map, while the remaining two are applied on the visibility graph.For the first variant, we consider the trapezoidal decomposition defined on a given polygonal environment. As shown in Fig. 2(top), the shortest path related to the graph defining the trapezoidal map may easily be characterized by several angle variations, even for relatively simple configurations. In order to identify a more suitable path, we delete a series of unnecessary vertices by applying several refinement steps to the initial shortest path. The procedure to define the modified trapezoidal map shortest path (MTMSP) is detailed in the Appendix, Algorithm 1. The result obtained with Algorithm 1 by considering the trapezoidal map related to scenario S1 of Fig. 1 is shown in Fig. 2(bottom).The second algorithm relies on the visibility graph defined on a given polygonal environment. The path is initialized with the shortest path connecting the start to the goal positions,qsandqg, see Fig. 3(top) for an example. In order to control the angles on the path without increasing too much its length, we perform an iterative check on the angles between successive edgese1ande2of the current path. By moving in the direction fromqstoqg, the vertices of the current path are processed. When an angle greater than a given threshold is found on a vertexC, the edges connectingqstoC, as well ase2, are temporary removed from the list of edges of the visibility graph. The shortest path connectingCtoqgon the modified visibility graph is then computed, if possible. The current path is updated only if the angle with vertex inCbetweene1and the first edge of the new path is smaller than the given threshold. Otherwise the path is not updated and the next vertex along the path is processed. Algorithm 2 in the Appendix introduces this procedure which defines the modified visibility graph shortest path (MVGSP). The result obtained with Algorithm 2 by considering the visibility graph related to scenario S1 is shown in Fig. 3(bottom).By considering again the visibility graph, we may also apply a greedy approach to compute a path fromqstoqgthat does not present angles of significative amplitude between adjacent edges. By starting from an initial segment, that can be for example the first edge along the shortest path, the path can be iteratively constructed by subsequently choosing the next edge in the visibility graph with the minimum angle that satisfies a certain threshold. If at a certain step, there are no edges adjacent to the current one satisfying the chosen threshold, the algorithm goes backward by looking for alternative solutions, if possible (this clearly depends on the given angle threshold). The procedure to define the greedy visibility graph path (GVGP) is detailed in the Appendix, Algorithm 3. The result obtained with Algorithm 3 by considering the visibility graph related to scenario S1 of Fig. 1 is shown on the bottom of Fig. 3. Note that the paths obtained with Algorithms 2 and 3 are coincident for this test case.The comparison of shortest paths related to the trapezoidal map and to the visibility graph (TMSP and VGSP) for scenario S1, together with the modified version computed with Algorithms 1, 2, and 3 (MTMSP, MVGSP/GVGP) is presented in Table 1. The number of points (#points) along the different paths as well as their lengths (length) are quite similar for the different solutions. The only exception is the shortest path on the trapezoidal map, which necessarily requires suitable modifications, see also Fig. 2. By also looking at the minimum, maximum and average angle (αmin,αmax,αavg) along the paths, we can see how the modified versions are able to produceP1paths with better shapes.The piecewise linear admissibleP1path is used in the second step of the method to define an admissible smoothP2path that also connectsqstoqg. In order to guarantee a strong relation betweenP2andP1, we rely on interpolation schemes with tension control, see e.g.,  [7]. The smoothP2path is then the image of a parametric curver(t),t∈[0,1], interpolating the verticespk,k=0,…,n, that defineP1and suitable tension parameters are used for ensuring thatr(t)is sufficiently “close” toP1. This guarantees that the smooth interpolant also defines a collision-free path. In particular, we require thatr(t)is a quintic spline curve such thatr(tk)=pk,k=0,…,n,where the interpolation parameterstk,k=0,…,n, with0=t0<⋯<tn=1, also define the spline knots (for the experiments they have always been chosen using the standard chord length parameterization).In addition, we require that, for allk=1,…,n, the restrictionrk(t)=(xk(t),yk(t))ofr(t)to[tk−1,tk]has a Pythagorean-hodograph (PH) structure  [9], namely(1)|rk′(t)|2=xk′2(t)+yk′2(t)=λk2(t),for some polynomialλk(t). The Pythagorean condition (1) ensures: polynomial arc-length; rational unit tangent, normal unit vector, and signed curvature; rational offset curves; closed-form expression for the bending energy  [13]. According to the result of Kubota  [14] and following the complex notation introduced in  [15], the PH condition is equivalent to the requirement that the hodographrk′(τ)can be expressed in terms of the square of the complex polynomialwk(τ)=uk(τ)+ivk(τ)as followsrk′(τ)=hk(τ)wk2(τ)=hk(τ)[uk2(τ)−vk2(τ)+i2uk(τ)vk(τ)],wherehk(τ)is a real polynomial andτ=(t−tk−1)/(tk−tk−1).We summarize the localG1interpolation scheme based on PH quintic splines with tension, originally introduced in  [8] and here adopted for our second step. This scheme is a variant of theC1PH quintic Hermite interpolation scheme introduced in  [16], whose approximation power was studied in  [17].We adopt the following local representation in Bézier form of thek-th quintic spline segmentrkofr,(2)rk(t)=∑j=05qk,jbj5(t−tk−1ℓk),t∈[tk−1,tk],fork=1,…,n, whereℓk=tk−tk−1andbj5,j=0,…,5, are the Bernstein polynomials of degree five. Sincerkis required to have a PH structure, the Bézier control pointsqk,j,j=0,…,5, can be defined in terms of three complex numbers,uk,vkandzkand of the two assigned pointspk−1,pk(also interpreted as complex numbers),(3)qk,0,=pk−1,qk,1=qk,0+ℓk5uk2,qk,2=qk,1+ℓk5ukzk,qk,3=qk,4−ℓk5zkvk,qk,4=qk,5−ℓk5vk2,qk,5=pk.This definition of the control points immediately ensures the required interpolation ofpk−1andpkatt=tk−1andt=tk, respectively. It also ensures thatrk′(τ)=wk2(τ), whereτ=(t−tk−1)/ℓkis the local parameter in[0,1], andwk(τ)=ukb02(τ)+zkb12(τ)+vkb22(τ), if the following quadratic equation is fulfilled,(4)2zk2+3(uk+vk)zk+(3(uk2+vk2)+ukvk−15ℓkΔpk)=0.In order to obtain aG1Hermite PH spline interpolation scheme, the coefficientsukandvkare previously determined by imposing two additional end conditions on the hodograph, namely(5)drkdt(tk−1)=ck2σk2Tk−1,drkdt(tk)=dk2σk2Tk.HereTk−1andTkare given unit vectors specifying the direction of the tangent to the curve att=tk−1and att=tk, respectively, whileckanddktogether withσkare free positive parameters which are used to modify the shape of thek-th PH quintic segment. In particular, the coefficientsckanddkare selected following the strategy introduced in  [7, Section 8], whileσk≤1is used as a tension parameter.By using a local reference system with thexaxis aligned with the displacementΔpk=pk−pk−1, the unit tangents can be expressed in complex form as(6)Tk−1=exp(iθk−1(k)),Tk=exp(iθk(k)),withθk−1(k),θk(k)∈(−π,π]. Note that several approaches can be used for the definition of these unit tangents (see Remark 1) but most formulas ensure that for reasonable dataθk−1(k),θk(k)∈(−π/2,π/2]for everyk-th spline segment. In view of the derivative formula of Bézier curves, the two conditions in (5) correspond touk2=ck2σk2Tk−1andvk2=dk2σk2Tk, and consequently(7)uk=ckσkexp(iαk),vk=dkσkexp(iβk),where the anglesαkandβkcan assume two different values,αk∈{θk−1(k)/2,π+θk−1(k)/2}andβk∈{θk(k)/2,π+θk(k)/2}.If(uk,vk,zk)is a solution of (4) and (7),(−uk,−vk,−zk)is also another solution that corresponds to the same control points in (3). This implies that there are only four distinct triples(uk,vk,zk)solving both (4) and (7) which correspond to as many differentrkobtainable with this scheme  [16]. Thus, considering that the shapes of these four distinct alternatives can be very different and that the problem concerns each spline segment, an automatic strategy to select a reasonablerkis necessary. In particular, we choose(8)αk=θk−1(k)2,βk=θk(k)2,because this selection ensures that whenTk−1andTkhave a positive projection onΔpk, this is also true forukandvk. In addition, the solutionzkof (4) with maximal real part is chosen.Remark 1For specifying the unit tangentsTk,k=0,…,n, we have considered two different approaches. The first one (T1) corresponds to the definition introduced in  [7], namelyTk=|κk+1|Δpk+|κk−1|Δpk+1||κk+1|Δpk+|κk−1|Δpk+1|,fork=1,…,n−1and22Two additional “phantom” points are considered to properly defineT0,k0,Tn,kn.T0=|κ1|Δp0+|κ0|Δp1||κ1|Δp0+|κ0|Δp1|,Tn=|κn|Δpn+|κn−1|Δpn+1||κn|Δpn+|κn−1|Δpn+1|,whereκk=Δpk,xΔpk+1,y−Δpk,yΔpk+1,x.The second one (T2) is obtained by firstly using the algorithm described in  [18] to compute theC2PH spline interpolant to the set of pointsp0,…,pnand then defining theTk,k=0,…,nas its unit tangents at the knots. Note that, even if this method is more expensive, it often allows us to obtain smoother paths.To ensure the property of obstacle avoidance to the finalP2path, we require that each spline segment belongs to a certain convex admissible region associated with the corresponding displacement. The admissible region is either a triangle, a trapezoid or a parallelogram included inQfreewith an edge coincident with the displacement. In order to identify a region of the free configuration space where the smoothP2path can lie without intersecting any obstacle, the midpoint of the segment connectingpkandpk+1is inserted as additional interpolation point with knot(tk+tk+1)/2, whenever the polylineP1suggests an inflection point alongP2.33Ifpkis one of these additional points, the corresponding unit tangent required by theG1interpolation scheme is defined by applying a small rotation toekto obtain the desired change of sign in the curvature.Consequently, the number of spline segments can increase fromntone≥n.For any edgeekbetweenpkandpk+1,k=0,…,ne−1, we consider the extensions ofek−1andek+1, starting frompkandpk+1, respectively.44For the first and last edge the left and right extensions are defined as the half line orthogonal to the edge with origin in the first and last point ofP1respectively, see Fig. 4(top left).Ifpk,pk−1, andpk+1are aligned, the left extension forekand the right one forek−1are both defined as the straight line with origin inpkorthogonal toek, as shown in Fig. 4. If the two extensions related toekintersect and generate witheka triangle included inQfree, this triangle defines the admissible region associated withek. Otherwise, the admissible regionRkrelated toekis defined as the highest trapezoid or parallelogram included inQfreewith a basis coincident withekand the other two opposite edges on the extensions. The complete set of possible cases related to a certain segment is shown in Fig. 4. The three plots on the left of the figure show the triangular cases. However, the shape of the admissible region may be determined by the intersection (if any) of the lateral extensions with either the bounding box of the scenario or one (or more) obstacles (see the three plots on the right in Fig. 4). In this case, one edge of the convex polygon that determines the region is the segment parallel toekthrough the aforementioned intersection points with extrema at the intersections with the left and right extension.The pictures on the left in Figs. 5–7show in grey the admissible regions associated with the three polylines MTMP, VGSP, MVGSP/GVGP for the simple scenario S1 introduced in Fig. 1. The heightHkof the admissible region related toekis then suitably taken into account to determine the value of the corresponding tension parameterσk, see Section  5.The results related to the finalP2paths produced by our approach for the simple scenario S1 are presented in Figs. 5–7and Table 2. Fig. 5 shows theP2paths obtained whenP1is the modified trapezoidal map shortest path (MTMSP) shown in Fig. 2(bottom). The paths corresponding to the T1 and T2 choice for the unit tangents are shown, see Remark 1. The corresponding total arc lengths are given in the first column of Table 2. The related curvature plots are also shown in Fig. 5. Note how the T2 choice is able to reduce the curvature extrema of the corresponding interpolant. Analogously, Figs. 6 and 7 shows theP2paths obtained from theP1paths generated with the VGSP and MVGSP/GVGP algorithms, previously shown in Fig. 3, with the T1 and T2 choice for the unit tangents, respectively. The corresponding total arc lengths are reported in the last two columns of Table 2. As in the previous case, the curvature plots of the paths obtained using T2 exhibit smaller variations with respect to those constructed using the T1 alternative—see the plots on the right of these two figures.For comparison, Figs. 8–10show the results obtained by considering the different piecewise linear solutions together with cubicG1splines according to the choice of T1 and T2 unit tangents. The values of the tension parameters are chosen as in the corresponding PH quintic solution related to the same piecewise linear path and shown in Figs. 5–7. We may note that PH splines exhibit a smaller curvature range, a benefit from the fairness point of view, in all test cases.In this section we first introduce an asymptotic analysis of the expression of the local control polygonqk,j,j=0,…,5, associated with thek-th PH spline segmentrkdefined in Section  4.1. The analysis, developed through a preliminary proposition followed by a main theorem, shows that, when the tension parameterσkis small enough,rkbelongs to the corresponding convex admissible regionRk, and consequently to the free configuration space. Subsequently, we introduce an automatic strategy based on this analysis for a suitable selection of the tension parameterσk.Since we are focusing on a generic PH spline segment, we omit in the following theksubscript from the notation. Furthermore, by choosing the local coordinate system already used in (6) to represent the unit tangents, we can also assume without loss of generality(9)Δp=mexp(i0),wherem>0denotes the modulus of the displacement. Now from (7) we have that(10)u=σcexp(iα),v=σdexp(iβ),wherec,dare fixed positive quantities andαandβare fixed angles in(−π/2,π/2], all not depending onσ(see Section  4.1). The other complex quantity which is necessary to define the control polygon iszand it is defined as the solution with maximal real part of the quadratic equation given in (4). The following proposition gives the Taylor expansion ofγ=γ(σ)andϕ=ϕ(σ), where(11)z=γexp(iϕ),withγ∈Randϕ∈(−π/2,π/2].Proposition 1The angleϕ=ϕ(σ)and the scalarγ=γ(σ)defining the polar form ofzas in   (11)   have the following Taylor expansions(12)ϕ(σ)=f0+f1σ+12f2σ2+O(σ3)and(13)γ(σ)=g0+g1σ+O(σ2),where(14)f0=0,f1=−3b8q,f2=−pqf1,g0=q2,g1=−p8q−34a−p3b,ifb≠0,with(15){a=ccosα+dcosβ,b=csinα+dsinβ,p=3(c2sin2α+d2sin2β)+cdsin(α+β),q=15ℓm.ProofThe complex Eq. (4) can be rewritten as the following (nonlinear) system in the real unknownsγandϕ, defined by two scalar equations that correspond to the real and the imaginary part of (4),(16){x2γ2+x1γ+x0=0,y2γ2+y1γ+y0=0,where(17)x2=2cos2ϕ,x1=3(Re(u+v)cosϕ−Im(u+v)sinϕ)=3σ[acosϕ−bsinϕ],x0=(3Re(u2+v2)+Re(uv)−15ℓm)=σ2e−q,withe=3(c2cos2α+d2cos2β)+cdcos(α+β), and(18)y2=2sin2ϕ,y1=3(Im(u+v)cosϕ+Re(u+v)sinϕ)=3σ[bcosϕ+asinϕ],y0=(3Im(u2+v2)+Im(uv))=σ2p.Note that, whenσvanishes, we havex1=y1=y0=0andx0=−q. From the second equation in (16), we deduce thaty2must vanish, namelyϕ=0orϕ=π/2. However, in order to get a real value forγfrom the first equation in (16), onlyϕ=0is acceptable which implies thatf0=0in (12). In addition, since we select the solution of (4) with maximal real part, we have(19)g0=γ(0)=q2,withqdefined as in (15). In order to compute the other Taylor coefficients in (12), we use the resultant method  [19] from which we derive thatγis a real solution of the system in (16) if and only if the Sylvester matrixA=(x2x1x000x2x1x0y2y1y000y2y1y0)is singular and in such case it can be expressed as follows,(20)γ(σ)=−x2y0−x0y2x2y1−x1y2.Hence, we have to require thatdet(A)vanishes, that is(21)0=x2[x0(y12−y0y2)+y0(x2y0−x1y1)]+y2[x0(x0y2−x1y1)+y0(x12−x0x2)].Now, from the Taylor expansion ofϕ(σ)in (12) we have(22)sinϕ=f1σ+12f2σ2+O(σ3),cosϕ=1−12f12σ2+O(σ3),sin2ϕ=2f1σ+f2σ2+O(σ3),cos2ϕ=1−2f12σ2+O(σ3).From (17) and (18), we can then obtain the following expansions forxi,i=0,1,2,(23)x2=2−4f12σ2+O(σ3),x1=3aσ−3bf1σ2+O(σ3),x0=σ2e−q,andyi,i=0,1,2,(24)y2=4f1σ+2f2σ2+O(σ3),y1=3bσ+3af1σ2+O(σ3),y0=σ2p,respectively. Thus, with some computation, we can rewrite the equation in (21) as follows,2q(−9b2+8qf12)σ2+16f1q(f2q+f1p)σ3+O(σ4)=0,which implies thatf1andf2in (12) are defined as in (14), unless for the sign uncertainty in thef1formula. By using (24) to compute the first order expansion forγ=γ(σ)defined in (20), whenb≠0we get(25)γ(σ)=−2q3bf1−(2aqf123b2+f2q+p3b)σ+O(σ2).Note that this confirms that the sign off1has to be fixed as in (14), since we already know thatγ(0)=g0=q2. Furthermore, by replacing the selected expressions off1andf2in (25), we get the expression ofg1reported in (14) whenb≠0.■Theorem 1If both the unit tangentsTj,j=k−1,kcan be expressed as a linear combination ofΔpjandΔpj+1with nonnegative coefficients,55For the first and last segments we assume that two suitable phantom points are fixed to defineΔp0andΔpn+1.when the tension parameterσkis small enough, the PH spline segmentrkbelongs to the corresponding convex admissible regionRkand, consequently, to the free configuration space.ProofSinceqk,0=pk−1andqk,5=pk, beingRkthe convex admissible region defined as specified in the previous section, we need to check that for a sufficiently small value ofσkall the other control pointsqk,j,j=1,…,4belong toRk(in view of the convex hull property of Bézier curves, this also impliesrk∈Rk). We again omit theksubscript from the notation and we consider the local coordinate system already used in (6) to represent the unit tangents. This also implies, without loss of generality, thatΔpcan be assumed as in (9).By using (10), (11) and the expansions in (12)–(14) and (22), from (3) the following expressions of the control polygon legs can be derived,(q1−q0)=ℓ5c2σ2exp(i2α),(q2−q1)=ℓ5cσ[(g0cosα+(g1cosα−g0f1sinα)σ)+i(g0sinα+(g1sinα+g0f1cosα)σ)]+O(σ3),(q4−q3)=ℓ5dσ[(g0cosβ+(g1cosβ−g0f1sinβ)σ)−i(g0sinβ+(g1sinβ+g0f1cosβ)σ)]+O(σ3),(q5−q4)=ℓ5d2σ2exp(i2β),which immediately imply that(q3−q2)=Δp+O(σ). Considering thatexp(i2α)andexp(i2β)are aligned with the left and right unit tangents, respectively, and taking into account the definition of the convex admissible regionR, thanks to the hypothesis on the unit tangents orientation, from the first and last of these relations we can derive that forσsufficiently small bothq1andq4belong toR. On the other hand, the leading term of(q2−q1)and of(q4−q3)are oriented asexp(iα)andexp(iβ), respectively. From the choice forαandβfixed in (8), since(q3−q2)=Δp+O(σ), we can obtain that alsoq2andq3belong toRwhenσis sufficiently small.■Let us now derive a reasonable automatic selection forσkusing the previous analysis. As in the previous subsection, for brevity we omit the subscriptk. According to (3),q2−q1andq4−q3, for a fixed value ofσare aligned withexp(i(α+ϕ))and withexp(i(β+ϕ)), respectively. Thus, in order to control these orientations, whenbis not zero, we first require thatσ≤min{σL,σR}whereσL=|α|/|f1|andσR=|β|/|f1|. This requires that the absolute value of the first order expansion ofϕ(σ)is less or equal to both|α|and|β|. In this wayq2−q1andq4−q3have intermediate orientations between the left unit tangent andΔpand betweenΔpand the right one, respectively.Furthermore, in order to keep the control polygon inside the convex admissible regionR, we determine another upper bound forσaimed to control the distancesDjof all the control pointsqj,j=1,…,4fromΔp. In particular, we determine a bound forσwhich guarantees that the second order Taylor expansions of such distances fromΔpare less or equal than the heightHofR(see the previous section). Considering that in the adopted local reference system the distances of the inner control points from the displacement are simply given by the absolute values of their imaginary parts, we have thatD1=ℓ5c2σ2|sin2α|,D2=σℓ5c|g0sinα+(csin2α+g1sinα+g0f1cosα)σ+O(σ2)|,D3=σℓ5d|g0sinβ+(dsin2β+g1sinβ+g0f1cosβ)σ+O(σ2)|,D4=ℓ5d2σ2|sin2β|.In order to further simplify the analysis, by denoting withE(Di),i=2,3, the expressions ofDi,i=2,3, without the rest, the following inequalities can easily be obtained,E(D2)≤σ(Q21+σ(Q22+Q23)),E(D3)≤σ(Q31+σ(Q32+Q33)),where,Q21=ℓ5cg0|sinα|,Q22=ℓ5c2|sin2α|,Q23=ℓ5c|g1sinα+g0f1cosα|,Q31=ℓ5dg0|sinβ|,Q32=ℓ5d2|sin2β|,Q33=ℓ5d|g1sinβ+g0f1cosβ|.Relating for brevity just toE(D2), whenbis not zero, we first require thatσQ22≤Q21/2andσQ23≤Q21/2and then thatσQ21≤H/2, that isσ≤min{σL1,σL2,σL3}, withσL1=g04c|cosα|,σL2=g0|sinα||g1sinα+g0f1cosα|,σL3=5ℓH2cg0|sinα|.Note that anyσLj,j=1,2,3, has to be set to one if the corresponding denominator vanishes. Summarizing, whenbis not zero, we require(26)σ≤min{1,σL,σR,σL1,σL2,σL3,σR1,σR2,σR3},where the thresholdsσRj,j=1,2,3, are defined analogously toσLj,j=1,2,3, just replacingβanddwithαandc, respectively. In the special caseb=0we have to consider only the first order term of the distances because we are not able to deriveg1. In this case, we just considerσ≤min{1,σL3,σR3}.In our numerical experiments, the use of an upper bound according to the previous analysis for selectingσin each spline segment has always ensured the identification of a control polygon of reasonable shape included in the corresponding admissible region.In this section the results obtained with our approach for the complex scenario S2 shown in Fig. 11are discussed. For brevity, we report only the results obtained using the visibility graph. Note, however, that in this case they are always better than those based on the trapezoidal map decomposition.The comparison of theP1visibility graph shortest path (VGSP) with the modified versions computed with Algorithm 2 (MVGSP) and 3 (GVGP) is presented in Fig. 11 and Table 3. Note that the GVGP algorithm has been applied with an “ad hoc” choice of the starting edge to emphasize the possibility of alternative admissible solutions. The number of points (#points) along the differentP1paths as well as their lengths are quite similar for the three solutions. On the other hand, we may note that the two piecewise linear paths MVGSP and GVGP exhibit smaller maximum, and average angle variations (αmin,αmax,αavg) with respect to the shortest path (VGSP).Figs. 12 and 13shows the correspondingP2paths and curvature plots obtained by considering T1 and T2 tangents, respectively, while Table 4gives the associated total arc lengths. As expected, the shortestP2path is the one related to the VGSP. On the other hand, by introducing an additional interpolation point along the path and, consequently, slightly increasing the total arc length, the solution based on MVGSP is able to reduce the curvature pick in the last by one spline segment. TheP2path related to the GVGP offers a smooth alternative solution which is remarkably different.For comparison, Figs. 14 and 15show the result obtained by considering the different piecewise linear solutions together with cubicG1splines according to the choice of T1 and T2 unit tangents, respectively. The values of the tension parameters are chosen as in the corresponding PH quintic solution related to same piecewise linear path and shown in Figs. 12 and 13. We note that also for this second scenario PH splines exhibit a smaller curvature range in all test cases.We proposed a two-step approach for the design of planar smooth path planning schemes with obstacle avoidance byG1PH quintic splines. First, algorithms for the construction of piecewise linearP1paths that do not intersect any obstacle are discussed and compared. Subsequently, the set of vertices defining these paths are considered as input values for theG1PH spline interpolation scheme with tension parameters that produces the final smoothP2paths. The asymptotic analysis of the local quintic control polygon associated with any spline segment and developed in terms of the corresponding tension parameter provides an automatic strategy for its selection. The usage in the second step of an interpolation scheme based on PH splines allows us to take full advantage of the key properties of PH curves (fair shapes, polynomial arc length,…). We believe that the ambition of suitably combining the shape control capabilities provided by spline interpolation or approximation schemes with obstacle avoidance techniques is a fundamental step towards the possibility of enriching the current planning algorithms with more flexible and accurate paradigms.

@&#CONCLUSIONS@&#
