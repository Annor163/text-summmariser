@&#MAIN-TITLE@&#
An optimal (r, Q) policy in a stochastic inventory system with all-units quantity discount and limited sharable resource

@&#HIGHLIGHTS@&#
Investigating a problem in inventory systems which is usually raised in practice.Presenting optimal algorithms based on proven properties of the cost function.Showing the efficiency of the presented algorithm via computational experiments.

@&#KEYPHRASES@&#
Inventory,(r, Q) policy,Stochastic demand,Limited sharable resource,All-units discount,

@&#ABSTRACT@&#
This paper is concerned with the single-item inventory system with resource constraint and all-units quantity discount under continuous review where demand is stochastic and discrete. In most actual inventory systems, the resource available for inventory management is limited and the system is able to confront the resource shortage by charging more costs. Considering the resource constraint as a soft constraint beside a quantity discount opportunity makes the model more practical. An optimization problem is formulated for finding an optimal (r, Q) policy for the problem in which the per unit resource usage depends on unit purchasing price. The properties of the cost function are investigated and then an algorithm based on a one-dimensional search procedure is proposed for finding an optimal (r, Q) policy which minimizes the expected system costs and converges to a global optimum. Based on the properties of the partially conditioned cost functions, the presented algorithm is modified such that its search path to optimal policy is changed. Experimental results show that the performance of the modified version of the presented algorithm is much better than the original algorithm in various environments of test problems.

@&#INTRODUCTION@&#
The (r, Q) policy also known as reorder-point/order-quantity policy is one of the most common practical policies in inventory control systems. The purpose of an (r, Q) inventory control system is to determine the values of r and Q which minimize system costs. Such (r, Q) inventory models under various practical assumptions and constraints have been extensively studied in the literature. In spite of a large number of heuristics, the first efficient algorithm for finding optimal (r, Q) policy in a discrete inventory system with backorders for shortages, was proposed by Federgruen and Zheng (1992). This algorithm is based on the unimodality of the cost function which is implied by the results of Sahin (1982). Federgruen and Wang (2013) have provided general conditions for monotonicity of the optimal policy parameters as a function of various model primitives and extended the results both to standard inventory models and to the models with general shelf age and delay dependent inventory costs. (r, Q) policies continue to be studied under various important extension of the base model. Olsson (2014) has considered an inventory system with continuous review (r, Q) policy under the assumption of Poisson demand and perishable items with fixed lead times and lifetimes. He develops a heuristic approach for finding near optimal values of reorder point and order quantity for different types of backordering cost structures.Another important and practical extension of (r, Q) inventory models is considering the resource constraint in such models. In practice, the resource available in inventory system is usually limited. So, making a decision about a replenishment policy under the resource constraint is one of the most important issues in real inventory systems. Two types of resources in inventory systems as mentioned by Zhao, Qiu, Xie, and He (2012), are exclusive-separate resource and sharable-common resource. The exclusive-separate resource can be the storage-space in a warehouse for which different items have different characteristics in weight, shape and volume. The sharable-common resource can be the budget used by all types of inventory items. As described by Minner and Silver (2005), “Practical applications are budget constraints, where the total amount of capital tied up in inventories at any time is limited by corporate strategy in industry or by law/regulation in government/military applications”. Thus, in regard to practical concerns, considering a constraint on the budget used by all items is one of the most significant issues in inventory management. Nevertheless, and as mentioned by Zhao et al. (2012), yet studies on inventory systems with limited and sharable-common resource are limited. Minner and Silver (2005) have considered a continuous review inventory system with zero lead times and common budget or space limitation, in which backorders are not permitted. Thus, when the inventory level of a product drops to zero, the product is replenished. With such assumptions, the on-hand inventory equals the inventory position. They derive a semi-Markov decision formulation for the problem under Poisson demand, which can be solved optimally for small instances of the problem and propose heuristics to solve the problem by referring to the economic ordering quantity (EOQ). Fleischmann and Kuik (2003) have considered a special case in reverse logistics in which companies take recovery of used products into account in their material management. They have analyzed the impact inbound flow on inventory control in a single inventory point facing independent stochastic demand and item returns. By general results on Markov decision processes, they have shown average cost optimality of an (r, Q) policy in this model. They have presented a transformation of their model into an equivalent traditional (r,Q) model without return flows. In this way and under a more practical assumption, Pinçe, Gürler, and Berk (2008) have analyzed a model with stochastic demands and an independent return flow where disposal is allowed with fixed disposal costs and positive lead times under a continuous review replenishment–disposal policy. Via analytical expressions of the operating characteristics of the system, they have minimized the total expected costs of ordering, holding, purchasing and disposal per unit time subject to a fill rate constraint. Hariga (2010) has investigated a single-item continuous review inventory system with the stochastic continuous demand and a space restriction in which the over-ordered quantity is returned to the supplier at a certain cost. He has considered the approximate expression of the expected holding cost, which is affected by the storage space limitation. Kundu and Chakrabarti (2012) have considered a stochastic continuous review inventory model with budget constraint and mixture of backorders and lost sales in which the distribution of demand and lead time are unknown and purchasing costs are paid upon order arrival. The cost function is approximate and a Lagrange multiplier technique has been applied to solve the problem. Zhao, Fan, Liu, and Xie (2007) have studied an (r, Q) model with discrete stochastic demand and a constraint on storage-space for on-hand inventory. The solution approaches for finding an optimal policy in single-item system and undominated solution in multi-item case have been developed.The literature on stochastic continuous review (r, Q) models can be separated into two categories: discrete and continuous demand models. There are major differences between the properties of discrete and continuous demand models. Ang, Song, Wang, and Zhang (2013) have presented a comprehensive study on the behavior of these two types of inventory models. Based on the discrete convexity concept, they have shown the non-convexity of a discrete (r, Q) system. Also they have shown that the significant properties which are applied to analyze the continuous models no longer hold in discrete counterparts. Hence, the analysis of the various extensions of inventory models with discrete demand is more complicated than the continuous demand models. This can partly explain why most of existing studies on (r, Q) models in the inventory literature are focused on continuous demand. On the other hand, it was shown that the cost function of continuous demand model is an adequate approximation of the cost function in discrete demand model only when the order quantity is large enough (Zheng, 1992). So, considering continuous cost function instead of discrete cost function is not efficient for all cases in systems with discrete demand.Because of the resource limitation, most of the actual inventory systems may encounter resource shortage. Additionally, one of the common strategies to confronting the resource shortage in practice is that the inventory systems usually rent extra resource temporarily to provide the extra resource requirement more than the available resource. In this case, the resource constraint is applied as a soft constraint which makes the model more practical than models with hard resource constraint. Zhao et al. (2012) have studied an (r, Q) model with discrete stochastic demand and limited sharable-common resource for both single-item and multi-item cases. They have considered the resource constraint as a soft constraint and proved that an existing algorithm can be applied to find the optimal solution of single-item case. Also they have developed an algorithm for finding an optimal/near optimal replenishment policy for the multi-item case. We consider the same assumption as Zhao et al. (2012) did for the resource constraint. On the other hand, in many actual inventory systems (especially the ones with competitive supply market) usually several quantity discount opportunities are offered by suppliers. Katehakis and Smit (2012) have considered a single-item inventory system with continuous review (r, Q) policy and stochastic discrete demand under both all-units and incremental quantity discounts. They have proposed sufficient algorithms for computing the optimal policy. Feng and Sun (2001) have considered a single-item continuous review inventory system with stochastic demand and discount opportunities. They have proposed an algorithm based on a bisection search procedure to find the optimal replenishment policy. Munson and Hu (2010) have considered the multi-site organizations challenging with determining the appropriate degree of purchasing centralization. They have presented methodologies to calculate optimal order sizes and relevant costs via a scenario-based approach when products have quantity discount pricing under both all-units and incremental quantity. Shiue (1990) has considered an inventory system for perishable items with partially backlogging and partially lost saling. In his model which has been considered under quantity discounts, the demand is deterministic and the lead time is zero.Though a limited resource and quantity discounts are two common characteristics in inventory management, very few works consider both in a continuous review model. Most of the existing literature on inventory systems which faces both a limited resource and quantity discount, have been devoted to inventory models such as newsboy models, e.g., Zhang (2010) or models with constant demand (see (Güder & Zydiak, 1997; Haksever & Moussourakis, 2008; Mousavi & Pasandideh, 2011; Moussourakis & Haksever, 2008; Moussourakis & Haksever, 2013)) which are different from continuous review models.This paper is organized as follows. In Section 2, we analyze the single-item (r, Q) system with limited resource under all-units discount. In Section 3, based on the cost function properties a search region for the optimal policy is obtained. Section 4 presents an algorithm with its modification based on one-dimensional search procedure to find an optimal solution efficiently. Section 5 provides numerical evaluation of the efficiency and sensitivity of the presented algorithms. Section 6 contains concluding remarks.Consider a single-item inventory system consists of a supplier and customers which is controlled by applying an (r, Q) policy, where r is a finite integer and Q is a finite positive integer. Customer demands arrival occurs based on a renewal process with a mean λ per time unit and every customer demand requires a unit of goods. Demands arise discretely on a unit-by-unit basis. The demands that cannot be satisfied immediately are backordered. The replenishment goods are received from the supplier with a constant lead time L, after receiving an order from the inventory system. As a terminology in inventory literature, the inventory position, denoted by Ip, is defined as the inventory level plus all outstanding orders, in which inventory level is equal to the amount of on-hand inventory minus the number of backorders and outstanding order refers to a replenishment order in transit. According to (r, Q) policy, Ipis reviewed continuously and a fixed quantity Q is ordered to the supplier when Ipdrops to the reorder point r or lower. After a constant lead time, the ordered goods are received from the supplier. Because of the positive probability for a large demand at any time interval in Poisson demand distribution, it is possible to have any number of outstanding orders at a time. Therefore, more than one order can be outstanding at any time. Because of the Poisson demand arrival, Ipis uniformly distributed on{r+1,r+2,…,r+Q}(Zhao et al., 2012). Furthermore, it is assumed that there is a limited sharable resource consumed by the ordering items which is not restricted but it incurs extra cost when exceeding specific value as Zhao et al. (2012) have assumed. In the other words, the system is able to confront the resource shortage by charging more costs and then the resource shortage costs is considered as a part of system costs. The resource is occupied when an order is placed and consequently the amount of resource occupied depends on the inventory position not the on-hand inventory. When a unit of goods in on-hand inventory or in outstanding orders is assigned to a customer, its corresponding resource is released and it is excluded from Ip. Note that a unit of goods in outstanding orders can only be assigned to one customer. Hence, the resource is occupied only by the goods in on-hand inventory and the unassigned goods in outstanding orders which is given byIp+=max{0,Ip}. To be more precise, let each unit of goods occupies s units of the resource to be ordered. Then, the amount of resource occupied is given bys·Ip+. For a given (r, Q) policy the maximum amount of resource that may be occupied is equal tos(r+Q)+. When the available resource, say B, is not enough to provide the resource requirement, it is possible to offsets the resource shortage via renting extra resource with renting cost rate a. Due to this act a resource shortage cost that is proportional to the amount of the rented resource is incurred and it is equal toa·max{s·Ip+−B,0}which is denoted bya(s·Ip+−B)+and is equal toa(s·Ip−B)+since B is nonnegative. For convenience and without loss of generality, a can be disregarded and the resource shortage cost can be denoted by(s·Ip−B)+.Here, we add the availability of all-units discount structure in purchasing to the existing assumption, by which the unit purchasing price depends on Q. We assume that the unit purchasing price conforms to the all-units discount structure with n discount levelsq1,q2,…,qn,withq1=0andqn+1=∞which are corresponded to n unit purchasing prices cj,j=1,2,…,n, wherecj>cj+1forj=1,2,…,n−1. Also let j(Q) be the unique discount level j for whichQ∈[qj,qj+1). Therefore, five types of costs are considered in the model: ordering cost, holding cost, inventory shortage cost, resource shortage cost and purchasing cost. For the given (r, Q) policy, the long-run average system cost per time unit is expressed as C0(r, Q).To calculate C0(r, Q)we need to define the following notations:DL: demand during a lead time with a mean λLK: ordering (set-up) cost per order (K > 0)h: holding cost per unit of goods per time unitp: penalty cost per demand backordered per time unity: inventory positionNow, we can present the long-run average system cost per time unit for a given (r, Q) policy under limited resource and all-units discount as follows:(1)C0(r,Q)=λKQ+∑y=r+1r+QG(y)Q+λcj(Q)=C(r,Q)+λcj(Q)whereG(y)=hE(y−DL)++pE(DL−y)++(sy−B)+. This is the cost function of the problem in which the per unit resource usage (s) is independent from the unit purchasing price. According to Zhao et al. (2012), it is obvious that−G(y)and−C(r(Q),Q)are unimodal functions wherer(Q)=argminr{C(r,Q)}. According to Katehakis and Smit (2012), these are the sufficient conditions which let us guarantee that their algorithm can find the optimal (r, Q) policy under cost function C0(r, Q). Therefore, for this special case of the problem, the algorithm presented by Katehakis and Smit (2012) obtains the optimal policy. Hence, we analyze the problem in case the limited resource is price-dependent which means that the per unit resource usage is linearly dependent to the unit purchasing price. Since the available budget is spent on purchasing items, the per unit resource usage is equal to the unit purchasing price. Therefore a clear instance of this type of resource is the available budget for purchasing. Considering the resource shortage costs especially when the amount of resource occupied by the purchased item is influenced by quantity discount is the main practical viewpoint of this model. For convenience in the remainder of the paper letg(y)=hE(y−DL)++pE(DL−y)+. For this case, if the amount ordered is Q, we haves=ηcj(Q)where η is a constant parameter and without loss of generality can be disregarded. Hence, we haves=cj(Q). In this situation the resource shortage cost is affected by Q in two different ways; at first Q determines the parameter of Ipand Ipspecifies the resource shortage cost, secondly by the discount structure, Q specifies cj(Q)which is a key element in the amount of resource shortage cost. Therefore, resource shortage cost and purchasing cost both depend on the quantity discount parameters and they have different effect on finding the optimal policy. Consequently, for the given (r, Q) policy the long-run average system cost per time unit with a limited price-dependent resource under all-units discount can be expressed as follows:(2)C1(r,Q)=λKQ+∑y=r+1r+Qg(y)+(cj(Q)y−B)+Q+λcj(Q)The problem raised in this case can be stated as follows:Problem 1Find (r, Q) inf={(r,Q)|−∞<r<∞,1≤Q<∞}to minimizeC1(r, Q).Let (r*, Q*) denote the optimal solution of Problem 1. In the subsequent sections the properties of the expected system cost function C1(r, Q) are analyzed and a solution approach is presented for finding(r*, Q*) (Fig. 2).This section contains all of the properties and results required to derive the optimization algorithm. Based on the analytical characteristic of the cost function the properties of the optimal solution are investigated and then a search region for the optimal policy is obtained. Using these properties a solution approach based on one-dimensional search procedure is presented to find the optimal policy of Problem 1. The idea behind this approach is breaking down the problem into at most n sub-problems which can be solved straightly. Therefore two major issues in this approach are (i) the definition of these sub-problems and finding optimal policies of these sub-problems (ii) using these optimal policies to solve Problem 1. The remainder of this section contains the responses for these issues.In order to define the sub-problems, we first rewrite C1(r, Q)as follows:(3)C1(r,Q)=C(r,Q|j(Q))+λcj(Q)where for C(r, Q|j(Q)), as a special case of C(r, Q|j), we have(4)C(r,Q|j)=KλQ+1Q∑y=r+1r+QGj(y),j=1,2,…,n.And(5)Gj(y)=g(y)+(cjy−B)+,j=1,2,…,nNote thatC(r,Q|j(Q))=C(r,Q|j)if and only ifqj≤Q<qj+1forj=1,2,…,n. We introduce the following optimization problem as the sub-problem we mentioned above.Problem 2Find (r, Q) in f to minimize C(r, Q|j)Property 1−C(rj(Q),Q|j),j=1,2,…,n, are unimodal functions whererj(Q)=argminr{C(r,Q|j)}.ProofZhao et al. (2012) have shown that−C(r(Q),Q)is unimodal. Since for a given j,j=1,2,…,n,−C(rj(Q),Q|j)is a special case of−C(r(Q),Q)the proof is obvious.□The above representation of C1(r, Q)breaks Problem 1 down into at most n several instances of Problem 2. Let(rj(Qj*),Qj*), named the partial optimal policyj,j=1,2,…,n, be the optimal policy of Problem 2. Since for a given j, the term(cjy−B)+in C(r, Q|j) is a non-decreasing and convex function with respect to y,−Gj(y),j=1,2,…,n, are unimodal functions and consequently according to Zhao et al. (2012), the sufficient condition for algorithm presented by Federgruen and Zheng (1992), say Algorithm A, is held and it obtains(rj(Qj*),Qj*),j=1,2,…,n. The pseudo code of Algorithm A is shown in Fig. 1.Now, we discuss how(rj(Qj*),Qj*), j = 1,2,…,n, lead us to obtain (r*, Q*). To do this, first we need to definej˜as the highest discount level for whichQj˜*≥qj˜i.e.j˜=max{j:Qj*≥qj}. Also, to illustrate the notations and functions defined for Problem 1, an example with parameters values listed in Table 1, is considered and solved. Fig. 2 depicts C1(r, Q) andC(r,Q|j),j=1,2,3,4,for this example. Using Algorithm A, the optimal partial policies(rj(Qj*),Qj*)forj=1,2,3,4are calculated and listed in Table 2. As it can be derived from Table 2 and definition ofj˜, we havej˜=1for this example.By using the definition ofj˜the following lemma obtains some lower bounds for C1(r, Q) in different discount levels. Based on these lower bounds, some candidates for Q* are presented.Lemma 1(a)IfQj˜*<qj˜+1thenC1(r,Q)≥C1(rj˜(Qj˜*),Qj˜*)forQ≤Qj˜*IfQj˜*≥qj˜+1thenC1(r,Q)≥C1(rj˜+1(qj˜+1),qj˜+1)forQ≤qj˜+1C1(r, Q) ≥ C1(rj(qj), qj) forj=j˜+1,j˜+2,…,nandqj≤Q<qj+1.ProofLetQj˜*<qj˜+1. By Eq. (3) and definition of rj(Q) for a given (r, Q), we have(6)C1(r,Q)=C(r,Q|j(Q))+λcj(Q)≥C(rj(Q)(Q),Q|j(Q))+λcj(Q)Since C(r, Q|j) is non-increasing onj,j=1,2,…,n, andj(Q)≤j˜forQ≤Qj˜*, we have,(7)C(rj(Q)(Q),Q|j(Q))+λcj(Q)≥C(rj(Q)(Q),Q|j˜)+λcj˜≥C(rj˜(Q),Q|j˜)+λcj˜By the definition ofrj˜+1(qj˜+1)and by the fact that C(r, Q|j) is non-increasing onj,j=1,2,…,n, we can write(9)C(rj˜(qj˜+1),qj˜+1|j˜)+λcj˜≥C(rj˜+1(qj˜+1),qj˜+1|j˜+1)+λcj˜+1By (6), (7), (8) and (9) we can conclude thatC1(r,Q)≥C(rj˜+1(qj˜+1),qj˜+1|j˜+1)+λcj˜+1=C1(rj˜+1(qj˜+1),qj˜+1)and the proof of (b) is completed. For part (c), note thatQj*<qjforj>j˜by definition ofj˜, therefore, forj>j˜andqj≤Q<qj+1we have C(rj(Q), Q|j) ≥ C(rj(qj), qj|j)because by Property 1−C(rj(Q),Q|j)is a unimodal function. The last inequality can easily be changed toC(r,Q|j)+λcj≥C(rj(qj),qj|j)+λcjby (6) which implies that C1(r, Q) ≥ C1(rj(qj), qj)and the proof of part (c) is completed.□Theorem 1 obtains a finite numerable set of candidates for Q*.Theorem 1IfQj˜*<qj˜+1thenQ*∈{Qj˜*,qj˜+1,qj˜+2,…,qn}; otherwiseQ*∈{qj˜+1,qj˜+2,…,qn}.ProofLetQf=min{qj˜+1,Qj˜*}.(rj(Qf)(Qf),Qf)is a feasible policy and by parts (a) and (b) of Lemma 1, its corresponding cost is lower than or equal to any other (r, Q) policy with Q ≤ Qf, therefore, by optimality of (r*, Q*), we have(10)Q*≥QfIfQj˜*<qj˜+1, obviouslyC(rj˜(Q),Q|j˜)is non-decreasing overQj˜*≤Q<qj˜+1, therefore,C1(r,Q)≥C1(rj˜(Qj˜*),Qj˜*)forQj˜*≤Q<qj˜+1. Therefore, we have(11)Q*∉(Qj˜*,qj˜+1)Lemma 1-c) states that the start point of each discount level j,j=j˜+1,j˜+2,…,n, has the lowest cost in the discount level, therefore, we can conclude that(12)Q*∉(qj,qj+1),j=j˜+1,j˜+2,…,nConsidering (10), (11) and (12) the proof is completed.□By Theorem 1, the search region for the optimal order quantity Q* reduces to an enumerable finite set which has at most n member. Hence, it is sufficient to find the optimal policy(rj(Qj*),Qj*)under cost function C(r, Q|j) forj=1,2,…,nin order to findj˜. Then, several candidates for the optimal policy are attained. The details of this approach are described in subsequent section.In this section, the basic algorithm of finding an optimal ordering policy for Problem 1 is presented. Furthermore, to increase its efficiency, the sub algorithm computes the partial policies(rj(Qj*),Qj*),j=1,2,…,n−1is replaced with a new presented procedure.Now we can propose our algorithm for finding the optimal solution of Problem 1. The procedure is as follows. Start from the last discount level j, i.e. j = n, utilize Algorithm A to find the optimal policy(rj(Qj*),Qj*)under cost function C(r, Q|j). IfQj*≥qjthen the procedure is stopped and j is returned asj˜, otherwise the policy (rj(qj), qj) has to be calculated as a candidate for optimal solution. To do this, use the setτGjQj*={rj(Qj*)+1,…,rj(Qj*)+Qj*}as the set ofQj*smallest values of Gj(.) and add the next smallest points of Gj(.) into this set untilτGjQcontains qjpoints. Then the optimal reorder pointr(qj)=(minτGjqj)−1is obtained and the policy (r(qj), qj) is saved as a candidate of optimal solution. Then set j = j-1 and continue the procedure untilj˜is obtained. After computingj˜, there are several candidates for optimal policy by Theorem 1, in which the one with minimum cost under C1(r, Q) is (r*, Q*). The pseudo code of the presented algorithm, say Algorithm B, is shown in Fig. 3.In Step 3 of Algorithm B,(rj(Qj*),Qj*),j=1,2,…,n−1, are calculated using Algorithm A, while it is possible to calculate them in a more efficient way by using required information that are automatically generated in previous steps of Algorithm B. Sincerj+1(Qj+1*)is available during solving procedure, it is possible to determine(rj(Qj*),Qj*)faster via modifying the procedure of Algorithm A, especially in large scale problems. We present an algorithm instead of Algorithm A, which is able to compute(rj(Qj*),Qj*)based on the value ofrj+1(Qj+1*)in each iteration of Algorithm B. In this procedure, unlike Algorithm A, there is no need to calculateyj*(the minimizing point of Gj(y)) which is a time consuming task. Moreover, in Algorithm A, the search process starts fromQ=1by default, while in the following presented algorithm, the search process starts from a Q (SayQj0) relatively closer toQj*than 1, especially whereQj*is relatively larger. In this algorithm, named Algorithm C, by usingrj+1(Qj+1*)the setτGjQj0is obtained and then the value ofQj0is calculated. In fact,τGjQj0is the set of arguments of Gj(.) which obtainQj0smallest value of Gj(.). Note that because of unimodality of−Gj(.),τGjQj0containsQj0successive integers. In detail, letx=rj+1(Qj+1*), be a point in the domain of Gj(.). Then, if Gj(.) is decreasing in neighborhood of x,Qj0is defined as the largest integer such thatx+1has the largest value of Gj(.) inτGjQj0. Otherwise,Qj0is defined as the largest integer for which x has the largest value of Gj(.) inτGjQj0. In the other words, ifGj(x−1)>Gj(x), x+1 is the first point ofτGjQj0andQj0={yu−x|yu=max{y:Gj(y)≤Gj(x+1)}}, otherwise; x is the last point ofτGjQj0andQj0={x−yL+1|yL=min{y:Gj(y)≤Gj(x)}}. In fact whenGj(x−1)>Gj(x), by unimodality of−Gj(.), we havex≤yj*whereyj*is the minimizing point of Gj(.) andτGjQj0={x+1,…,x+Qj0}represent theQj0smallest values of Gj(.) which start fromGj(x+1)and end toGj(x+Qj0). Similarly, whenGj(x−1)≤Gj(x), thenx>yj*and repeatedlyτGjQj0={x−Qj0+1,…,x}represent theQj0smallest values of Gj(.) which start fromGj(x−Qj0+1)and end to Gj(x).Before we state the details of Algorithm C, it is necessary to reveal the properties on which it is set up.Lemma 2For the partial optimal solution(rj(Qj*),Qj*),j=1,2,…,n, we have:(a)rj(Qj*)+1<yj*<rj(Qj*)+Qj*.Gj(y1) < Gj(y2) for two arbitrary integers y1and y2such thaty1∈{rj(Qj*)+1,…,rj(Qj*)+Qj*}andy2∉{rj(Qj*)+1,…,rj(Qj*)+Qj*}.For any integer y,Gj(y)≥C(rj(Qj*),Qj*|j)if and only ify∉{rj(Qj*)+1,…,rj(Qj*)+Qj*}.The proof of Lemma 2 is obvious by the unimodality of−Gj(y). These results have also been discussed by Zhao et al. 2012.Theorem 2The reorder point in optimal policy under cost function C(r, Q|j) is non-decreasing overj,j=1,2,…,n,In other words,rj(Qj*)≤rj+1(Qj+1*). Forj,j=1,2,…,n−1.ProofFor convenience letrj(Qj*)=zandrj+1(Qj+1*)=x. Sincez∉τGjQj*={z+1,…,z+Qj*}andτGjQj*contains the points withQj*smallest values on Gj(.), according to Lemma 2 we haveGj(z)≥C(z,Qj*|j)or equivalently(13)g(z)+(cjz−B)+≥KλQj*+1Qj*∑y=z+1z+Qj*[g(y)+(cjy−B)+]Also sincecj>cj+1overj,j=1,2,…,n−1,it is obvious that(14)(cjz−B)+−(cj+1z−B)+≤1Qj*∑y=z+1z+Qj*[(cjy−B)+−(cj+1y−B)+]By inequalities (13) and (14), inequality (15) is concluded:(15)g(z)+(cj+1z−B)+≥KλQj*+1Qj*∑y=z+1z+Qj*[g(y)+(cj+1y−B)+]which is equivalent toGj+1(z)≥C(z,Qj*|j+1). On the other hand, by optimality of(x,Qj+1*)under cost functionC(r,Q|j+1), it is concluded thatC(z,Qj*|j+1)≥C(x,Qj+1*|j+1). Hence,(16)Gj+1(z)≥C(x,Qj+1*|j+1)Again by inequality (16) and Lemma 2 it is concluded that z ≤ x orz≥x+Qj+1*+1. In the remainder of the proof we show that the last inequality never holds and hence the proof will be completed. By Lemma 2,Gj(z)>Gj(z+Qj*), which means that(17)g(z)+(cjz−B)+>g(z+Qj*)+(cj(z+Qj*)−B)+On the other hand, it is obvious that(18)(cjz−B)+−(cj+1z−B)+≤(cj(z+Qj*)−B)+−(cj+1(z+Qj*)−B)+Simply by (17) and (18) it can be concluded thatg(z)+(cj+1z−B)+>g(z+Qj*)+(cj+1(z+Qj*)−B)+which means thatGj+1(z)>Gj+1(z+Qj*). Therefore, by unimodality of−Gj+1(.),z<yj+1*. This leads toz<x+Qj+1*sinceyj+1*∈τGj+1Qj+1*andyj+1*≤x+Qj+1*. Hence,z≥x+Qj+1*+1never holds and the proof is completed.□We need to state the following property for proving Corollary 1.Property 2Let GjQbe the Qth smallest value of Gj(y). Forj,j=1,2,…,n,we have(a)rj(Q) is decreasing in Q withlimQ→∞rj(Q)=−∞.Q < Qj* if and only ifGjQ+1<C(rj(Q),Q|j).ProofSince for a given j, the term(cjy−B)+is a non-decreasing and convex function with respect to y the proof is obvious by Federgruen and Wang (2013).□Corollary 1Letx=rj+1(Qj+1*). Forj,j=1,2,…,n−1,we have(a)IfGj(x−1)>Gj(x)thenQj0≤Qj*,IfGj(x−1)≤Gj(x)andGjQj0+1<(≥)C(rj(Qj0),Qj0|j)thenQj0<(≥)Qj*ProofBy definitions, it is obvious that when the order quantity isQj0andGj(x−1)>Gj(x), the optimal reorder point under cost function C(r, Q|j) isrj+1(Qj+1*), i.e.rj(Qj0)=rj+1(Qj+1*), therefore, by Theorem 2,rj(Qj*)≤rj+1(Qj+1*)=rj(Qj0). Since rj(Q)is a decreasing function on Q (by Property 2-a), it is obvious thatQj0≤Qj*and the proof of (a) is completed. For part (b), note thatGjQj0+1is the(Qj0+1)thsmallest value of Gj(y). The remainder of the proof is obvious by Property 2-b.□Algorithm C which is a modification of Algorithm A, searches for the smallest value of Qwhich satisfies the stopping criterion (GjQ+1≥C(rj(Q),Q|j)) as Algorithm A does, but the only difference is that the start point of the search process in these algorithms is different. Algorithm A always starts fromQ=1and increases Q to meet the stopping criteria, but Algorithm C starts its search fromQj0and depending on which condition of Corollary 1 is held, increases or decreasesQj0until meeting the stopping criteria.The pseudo code of Algorithm C is as follows (Fig. 4).Both Algorithms B and its modification which apply Algorithm C instead of Algorithm A, say AlgorithmB+, obtain the optimal policy of Problem 1, but it seems AlgorithmB+works in a more efficient way. To see this, both of them are compared via evaluating the computational efficiency calculated by an index named θ. The only deference between these algorithms is the number of iterations they repeat to obtainQj*in discount levelj,j=1,…,n. In detail, unlike algorithm B, AlgorithmB+starts its search for findingQj*fromQj0instead of 1. Therefore, we define θ as the performance criterion by Eqs. (19) and (20) to calculate the average deference in the number of iterations they repeat in each discount level.(19)τj=Qj*−|Qj*−Qj0|,j=1,2,…,n.(20)θ=∑j=1n−1τj/n−1

@&#CONCLUSIONS@&#
