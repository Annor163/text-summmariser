@&#MAIN-TITLE@&#
A tollbooth tandem queue with heterogeneous servers

@&#HIGHLIGHTS@&#
Introducing a new queueing model: tollbooth tandem queue.Introducing some special performance measures related to the tollbooth tandem queue.Developing a detailed computational procedure for calculating them.

@&#KEYPHRASES@&#
Tandem queue,Matrix-analytic methods,Traffic management,

@&#ABSTRACT@&#
We study a tandem queueing system with K servers and no waiting space in between. A customer needs service from one server but can leave the system only if all down-stream servers are unoccupied. Such a system is often observed in toll collection during rush hours in transportation networks, and we call it a tollbooth tandem queue. We apply matrix-analytic methods to study this queueing system, and obtain explicit results for various performance measures. Using these results, we can efficiently compute the mean and variance of the queue lengths, waiting time, sojourn time, and departure delays. Numerical examples are presented to gain insights into the performance and design of the tollbooth tandem queue. In particular, it reveals that the intuitive result of arranging servers in decreasing order of service speed (i.e., arrange faster servers at downstream stations) is not always optimal for minimizing the mean queue length or mean waiting time.

@&#INTRODUCTION@&#
Tollbooths are used to collect tolls for road usage on toll roads. Due to service delays, queues can build up in front of tollbooths. It is commonly observed in some metropolitan cities, e.g., Seoul and Beijing, that tandem tollbooths are set up during rush hours to reduce delays. In this paper, we present a queueing model to study the flows of the traffic going through tollbooths, and develop an algorithmic study for its performance analysis. We note that when all tollbooths serve traffic in parallel, instead of in series, the tollbooth system can be modeled as a queueing network with customer jockeying and has been analyzed extensively in the literature (e.g., Disney & Mitchell, 1971; Zhao & Grassmann, 1995).When tollbooths are in series, each car/truck has to go through every tollbooth but receive service from one and only one of them. Such a queueing system has two distinct features: (i) cars/trucks that completed service at one station may not be able to leave the system immediately; and (ii) servers may be idle even if there are waiting customers. When a car/truck is in service in a tollbooth, it blocks all cars/trucks at the upstream tollbooths. We shall refer to this type of queueing system as tollbooth tandem queue.The tollbooth tandem queue is similar to the traditional tandem queue with no waiting space between servers or with blocking (e.g., Melamed, 1986; Manitz, 2008; Papadopoulos & O’Kelly, 1993; Van Houdt & Alfa, 2005), but different in that each customer receives service from one and only one server. Note that when there are always customers waiting in front of the tollbooth, the service process of the tollbooth queue is similar to that of a batch service queue (Chaudhry & Templeton, 1983), with service time of a batch being the maximum of processing times of the customers in the batch at their respective tollbooths. To the author’s knowledge, the added features in the service process distinguish the tollbooth tandem queue from all the existing models in the queueing literature.In the transportation research literature there have been only numerical and simulation studies of tollbooth tandem queues, see for example, Hall and Daganzo (1983), Rubenstein (1983), Hong, Kim, Kho, Kim, and Yang (2009), Gu and Li (2011), Gu, Cassidy, and Li (2012). These studies suggest that tandem tollbooths can improve queueing performance significantly. However, there has been no systematic queueing study on the tollbooth tandem queue problem.In this paper, we apply matrix-analytic methods to investigate the tollbooth tandem queue. We refer to Neuts (1981) and Latouche and Ramaswami (1999) for more details on matrix-analytic methods. Closed form solutions are obtained for a number of performance measures. For example, PH-representations are constructed for the waiting time and sojourn time of an arbitrary customer. We also obtain special performance measures such as the utilizations of servers, percentages of customers served by servers, and departure delays.Using the results derived in this paper, we analyze several examples to gain insight into the tollbooth tandem queue. It is intuitive that arranging servers in the descending order of their service speed (i.e., faster servers are arranged at the most downstream stations) should reduce the chance of blocking and customer delays. However, we found that that is not always true. Many of the performance measures, including the mean waiting time, mean sojourn time, mean number of customers waiting, and mean total number of customers in system, may not be minimized by this arrangement of servers (though in many cases it does).In addition to its potential application in toll road management, the tollbooth tandem queue may also find applications in modeling traffic in gas stations (e.g., Brewer & Henwood, 1980; Daskin, Shladover, & Sobel, 1976; Teimoury, Yazdi, Haddadi, & Fathi, 2011). For such cases, the tollbooth tandem queue can approximate the real system well if the order of departures of cars/trucks is, more or less, consistent with the order of arrivals.The remainder of the paper is organized as follows. In Section 2, the tollbooth tandem queue of interest is formally defined. A Markov chain formulation for the queue is presented in Section 3. A matrix-geometric solution is given in Section 4. A number of performance measures are obtained in Section 5. Distributions of the waiting time, sojourn time, and departure delay are obtained in Section 6. Section 7 collects some special properties including the phase-type representations of the waiting time and sojourn time. The special case of identical serial servers is analyzed in Section 8 and a numerical analysis is presented in Section 9. Section 10 concludes the paper.We consider a tollbooth tandem queueing model with K servers and no waiting space in between (see Fig. 1for a case with K=3). Customers join a single queue in front of server K waiting for service by one (and only one) of the K servers. Customers enter service on a first-come-first-in basis. If server k is available, then a waiting customer enters server k if all upstream servers {k+1,…,K} are empty and server k−1 is occupied. If a customer at server k completes its service, it can leave the system only if all downstream servers {1,…,k−1} are empty; otherwise, the customer occupies server k until all servers {1,…,k−1} become empty. Accordingly, if a customer occupies server k, in service or waiting to depart, all customers at servers {k+1,…,K}, if there is any, cannot depart; thus there may be batch departures from the system.To define the tollbooth tandem queue, we specify the customer arrival process and the distributions of the service times for individual servers.Markovian arrival process (MAP). Customers arrive according to Markovian arrival process (D0,D1), where D0 and D1 are square matrices of order ma, D0 has negative diagonal elements and nonnegative off-diagonal elements, and D1 is a nonnegative matrix. Let D=D0+D1, which is an infinitesimal generator. We assume that D is irreducible. Then D defines an irreducible continuous time Markov chain (CTMC). Let Ia(t) be the state (phase) of the CTMC associated with D, at time t. Then {Ia(t), t⩾0} is an irreducible CTMC, called the underlying Markov chain. Let θabe the stationary distribution of {Ia(t), t⩾0}. Then θais the unique solution to linear system θaD=0 and θae=1, where e is the column vector with all elements being one. The (average) arrival rate can be obtained as λ=θaD1e. For more about MAPs, readers are referred to Neuts (1979) and Lucantoni (1991).Phase-type (PH) service times. The service time Vkof server k has a PH-distribution with PH-representation (αk,Tk) of order mk, for 1⩽k⩽K. We assume αke=1, i.e., the service time is positive with probability one. Let {Is,k(t), t⩾0} be the state of the underlying CTMC associated with (αk,Tk). Then {Is,k(t), t⩾0} has mk+1 states {0,1,2,…,mk} and infinitesimal generator(1)Qk=00Tk0Tk.We call the state 0 the absorption state. Then Vkis the time until absorption of the underlying Markov chain into state 0, if the distribution of Is,k(0) is (0,αk). The (average) service rate is given byμk=1/E[Vk]=-1/αkTk-1e. Recall thatTk0=-Tke. ThenT+Tk0αkis an infinitesimal generator. We assume thatT+Tk0αkis irreducible. Then the PH-representation (αk,Tk) is called PH-irreducible. Denote byfk∗(s)the Laplace–Stieltjes transform (LST) of the service time Vk:fk∗(s)=αk(sI-Tk)-1Tk0, for s⩾0, where I is the identity matrix whose order is determined by the context. For more about PH-distributions, readers are referred to Neuts (1975, 1981).We are interested in investigating the following quantities: The number of waiting customers in system qw, the number of customers occupying a server qs, the total number of customers in the system qtot, customer waiting time Wq, customer sojourn time Ws, and customer departure delay Wd(i.e., the amount of time a customer spends waiting for departure after finishing service).In the tollbooth tandem queue, if K customers enter the K servers for service simultaneously, then the time for all K customers to leave the system (i.e., the time for the customer at server K to leave the system) is the maximum of all K service times. This fact plays a key role in the construction of a Markov chain for the tollbooth tandem queue and in the analysis of performance measures. It is well-known that the maximum of independent PH-random variables is again a PH-random variable and its PH-representation can be constructed (Neuts, 1981). To find the solutions for the tollbooth tandem queue, we need the exact representation of this random variable. Thus, we first present two methods for constructing a PH-representation of the maximum of K independent PH-random variables. Both representations will be used in our subsequent analysis.Define Vmax,k=max{V1,…,Vk}, for 1⩽k⩽K. Next, we construct a PH-representation for Vmax,k. Assume that the (independent) underlying Markov chains {Is,k(t), t⩾0}, for 1⩽k⩽K, are all initialized at time zero. Then Vmax,kcan be interpreted as the first time that all underlying Markov chains {Is,j(t), t⩾0}, for 1⩽j⩽k, are absorbed. Thus, we consider CTMC {(Is,1(t),Is,2(t),…,Is,k(t)), t⩾0}. The number of states, the initial probability distribution, and the infinitesimal generator of the CTMC {(Is,1(t),Is,2(t),…,Is,k(t)), t⩾0} are given by, for 1⩽k⩽K,(2)mmax,〈k〉=∏j=1k(mj+1)-1;(0,αmax,〈k〉)≡(0,α1)⊗(0,α2)⊗⋯⊗(0,αk);Q〈k〉=00Tmax,〈k〉0Tmax,〈k〉≡Q1⊕Q2⊕⋯⊕Qk,where “⊗” is for Kronecker product and “⊕” is for Kronecker sum, i.e., Q1⊕Q2=Q1⊗I+I⊗Q2. Denote by Ψmax,〈k〉 the set of states obtained by removing state (0,…,0) from the state space {(i1,i2,…,ik): 0⩽ij⩽mj, 1⩽j⩽k} of {(Is,1(t),Is,2(t),…,Is,k(t)), t⩾0}. Then Ψmax,〈k〉 has mmax,〈k〉 states. For any state in Ψmax,〈k〉, at least one of the underlying Markov chains {Is,j(t), t⩾0}, j=1,2,…,k, is not in its absorption state. Thus Vmax,kis the absorption time into the state (0,…,0) of the CTMC {(Is,1(t),Is,2(t),…,Is,k(t)), t⩾0}. By Eq. (2), it is readily seen that (αmax,〈k〉,Tmax,〈k〉) of order mmax,〈k〉 is a PH-representation for Vmax,k. Denote byfmax,k∗(s)the LST of Vmax,k, for 1⩽k⩽K.Let {λk,i, 1⩽i⩽mk} be the eigenvalues of Tk, counting multiplicities, for 1⩽k⩽K. We assume that λk,1 is the eigenvalue of Tkwith the largest real part, which is in fact real.Proposition 3.1The eigenvalues of Tmax,〈K〉are given by, counting multiplicities,(3){λk1,i1+⋯+λkj,ij,1⩽k1<⋯<kj⩽K,1⩽i1⩽mk1,…,1⩽ij⩽mkj,1⩽j⩽K}.In particular, the eigenvalue of Tmax,〈K〉 with the largest real part is max{λk,1,k=1,2,…,K}.ProofIt is clear that the eigenvalues of Qkare {0}∪{λk,i,i=1,2,…,mk}. Similarly, all eigenvalues of Q〈K〉 are the eigenvalues of Tmax,〈K〉, except for eigenvalue zero. By Horn and Johnson (1991) (Problem 19 on Page 251), Eq. (3) gives all the eigenvalues of Q〈K〉, except for eigenvalue zero. Consequently, Eq. (3) gives all the eigenvalues of Tmax,〈K〉. This completes the proof of Proposition 3.1. □The order mmax,〈K〉 increases rapidly in K. For special cases, an equivalent PH-representation with fewer states can be obtained for Vmax,K. Considering the (independent) underlying Markov chains {{Is,k(t), t⩾0}, k=1,2,…,K}, Vmax,Kcan be interpreted as (i) the time until one of the K underlying Markov chains is absorbed, (ii) plus the time until one of the K−1 remaining underlying Markov chains is absorbed, …, and (iii) plus the time until the last remaining underlying Markov chain is absorbed. Based on this interpretation, an alternative PH-representation can be obtained for Vmax,K. However, the alternative PH-representation has the same order as that of (αmax,〈K〉,Tmax,〈K〉). On the other hand, if all random variables {V1,…,VK} are also identically distributed with the same PH-representation (α,T) of order m, many states of the underlying Markov chain Q〈K〉 are redundant. Thus, by combining the redundant states, a smaller PH-representation can be obtained for Vmax,K. Define, T[1]=T, and, for 2⩽k⩽K,(4)T[k]=T[k-1]⊗Im+Imk-1⊗T;T[k]0=∑j=1kImj-1⊗T0⊗Imk-j,where Inis the identity matrix of order n and T0=−Te. Note that T[k] can be interpreted as the subgenerator for {(Is,1(t),Is,2(t),…,Is,k(t)), t⩾0} such that none of the subprocesses is absorbed; andT[k]0is for the absorption of one of the subprocesses. We define Ω[k]={(i1,i2,…,ik): 1⩽ij⩽m, 1⩽j⩽k}, α[1]=α, α[k]=α[k−1]⊗α,(5)αmax,[K]=(0,…,0,α[K]);Tmax,[K]=Ω[1]Ω[2]⋮Ω[K-1]Ω[K]T[1]T[2]0T[2]⋱⋱T[K-1]0T[K-1]T[K]0T[K]andTmax,[K]0=-Tmax,[K]e=Ω[1]Ω[2]⋮Ω[K]T00⋮0.The maximum random variable Vmax,Khas a PH-distribution with PH-representation (αmax,[K], Tmax,[K]) given in Eq. (5) of order mmax,[K]=m+m2+⋯+mK, which can be significantly smaller than mmax,〈K〉=(m+1)K−1.In this section, we show that the tollbooth tandem queue can be formulated and analyzed using a GI/M/1 type Markov chain (e.g., Latouche & Ramaswami, 1999; Neuts, 1981). To construct the GI/M/1 type Markov chain, we first observe that, at any time in the tollbooth tandem queue, all occupied servers (either a customer in service or waiting to depart) are next to each other. Thus, we distinguish the case with a waiting queue and the case with no waiting queue. If there is a waiting queue, then the Kth server must be occupied. If there is no waiting queue, the K servers can be divided into three groups {1,2,…,k1}, {k1+1,…,k2}, and {k2+1,…,K}. Servers {1,2,…,k1} are empty; servers {k1+1,…,k2} are all occupied and server k1+1 is still in service; and servers {k2+1,…,K} are empty and there is no waiting customer in the system if this set of servers is not empty. To present the Markov chain formulation explicitly, we define system variables:•qw(t): The number of waiting customers in the system at time t;Ia(t): The state of the Markovian arrival process at time t;Ik(t): The state of the underlying CTMC of the service at server k, which is Is,k(t), if server k is working; Otherwise, Ik(t)=0, at time t; for 1⩽k⩽K.I(t): The maximum index of the occupied servers at time t (i.e., the index of the first occupied server seen by an arrival). If qw(t)=0, I(t) takes values {0,1,…,K}, where 0 means that the system is empty. If qw(t)>0, we must have I(t)=K.Then it is easy to see that {(qw(t),I(t),I1(t),…,IK(t),Ia(t)), t⩾0} is a CTMC. We first analyze this CTMC and then find system performance measures. Our analysis consists of three steps: (i) Construct the infinitesimal generator of the CTMC and find its matrix-geometric solution; (ii) Based on the matrix-geometric solution, find the distributions of queue lengths at an arbitrary time, arrival epochs, and service completion epochs (Section 5); and (iii) Find the distributions of waiting time, sojourn time, and departure delays (Section 6).If qw(t)>0, server K must be occupied, i.e., the server is either in service or with a finished customer whose departure is delayed because a downstream service has not been completed. When qw(t)=0, server K can be either idle or occupied. For convenience, we distinguish the two cases for qw(t)=0 by introducing a new state −1 for qw(t). If server K is unoccupied, then we set qw(t)=−1. We shall continue to call qw(t) the waiting queue length with the understanding that, if qw(t)=−1, then the waiting queue length is zero.We shall call qw(t) the level variable and (I(t),I1(t),…,IK(t),Ia(t)) the phase variable. The variable qw(t) can increase by at most one if a customer arrives, and can decrease by at most K if one service is completed and all servers becomes available to waiting customers. It is then readily seen that {(qw(t),I(t),I1(t),…,IK(t),Ia(t)), t⩾0} is a GI/M/1 type Markov chain.For level −1 of the GI/M/1 type Markov chain, I(t) takes values {0,1,…,K−1}. If I(t)=0, there is no customer in the system and we must have (I1(t),…,IK(t))=(0,…,0). If I(t)=k⩾1, then (I1(t),…,Ik(t)) takes values in the set Ψmax,〈k〉, and (Ik+1(t),…,IK(t))=(0,…,0). A state in level −1 with I(t)=k indicates that at least one of the servers {1,2,…,k} is working, the kth server is occupied, and servers {k+1,…,K} are available to customers. The number of states of (I1(t),…,IK(t)) in level −1 is m−1,〈K−1〉=1+mmax,〈1〉+⋯+mmax,〈K−1〉.For level qw(t)⩾0, we must have I(t)=K, and (I1(t),…,IK(t)) takes values in the set Ψmax,〈K〉, which has mmax,〈K〉 states. The structure of level qw(t)⩾0 is simpler than that of level−1, since the Kth server must be occupied for such levels.The infinitesimal generator of {(qw(t),I(t),I1(t),…,IK(t),Ia(t)), t⩾0} is given by(6)Q=-101⋮K-1KK+1⋮A-1,-1A-1,0A0,-1A1A0A1,-10A1A0⋮⋮⋱⋱⋱AK-1,-10⋯0A1A00AK+10⋯0A1A0⋮AK+10⋯0A1A0⋮⋱⋱⋱⋱⋱⋱,where(7)A-1,-1=0α100mmax,〈1〉×m2Immax,〈1〉⊗(0,α2)⋱⋱00mmax,〈K-2〉×mK-1Immax,〈K-2〉⊗(0,αK-1)0mmax,〈K-1〉×mmax,〈K-1〉⊗D1+Im-1,〈K〉⊗D0+0Tmax,〈1〉0Tmax,〈1〉⋮⋱Tmax,〈K-2〉0Tmax,〈K-2〉Tmax,〈K-1〉0Tmax,〈K-1〉⊗Ima;A-1,0=0m-1,〈K-2〉×mK0m-1,〈K-2〉×(mmax,〈K〉-mK)0mmax,〈K-1〉×mKImmax,〈K-1〉⊗(0,αK)⊗D1;A0,-1=Tmax,〈K〉00mmax,〈K〉×(m-1,〈K〉-1)⊗Ima;Aj,-1=0mmax,〈K〉×m-1,〈j-1〉Tmax,〈K〉0αmax,〈j〉0mmax,〈K〉×(m-1,〈K〉-m-1,〈j〉)⊗Ima,1⩽j⩽K-1;A0=Immax,〈K〉⊗D1;A1=Immax,〈K〉⊗D0+Tmax,〈K〉⊗Ima;AK+1=Tmax,〈K〉0αmax,〈K〉⊗Ima.Note that (i) m−1,〈0〉=1; and (ii) in the above matrices, “0” also represents a block of zeros, whose order is determined by the context. The order of “0” is provided whenever it is necessary. First, we find a condition for the ergodicity of the CTMC.Theorem 4.1The CTMC {(qw(t),I(t),I1(t),…,IK(t),Ia(t)), t⩾0} is irreducible. The CTMC is positive recurrent if and only if λE[Vmax,K]=−λαmax,〈K〉(Tmax,〈K〉)−1e<K.A proof can be given by applying Neuts condition to the ergodicity of GI/M/1 type Markov chains (Neuts, 1981). Details are omitted. □Next, we present the matrix-geometric solution for the stationary distribution π of the CTMC, which is divided into π=(π−1,π0,π1,…) according to the level variable qw(t). It is well-known that, if the CTMC is irreducible and positive recurrent, then π is the unique solution to linear system πQ=0 and πe=1. Assume that−λαmax,〈K〉(Tmax,〈K〉)−1e<K. By Neuts (1981), the stationary distribution π is given by {π−1,π0Rn,n=0,1,2,…}, where {π−1,π0} is the unique solution to(8)π-1A-1,-1+π0∑k=0K-1RkAk,-1=0;π-1A-1,0+π0A1+π0RKAK+1=0;π-1e+π0(I-R)-1e=1,and the matrix R is the minimal nonnegative solution to(9)A0+RA1+RK+1AK+1=0.The computation of R can be done by using existing algorithms such as the monotonic iterative algorithm (Neuts, 1981) and more efficient algorithms (Bini, Meini, Steffe, & Van Houdt, 2006). To check the accuracy of computation, the following property can be used:(10)θa=π-1(e⊗Ima)+π0(I-R)-1(e⊗Ima).In the next two sections, we use the stationary distribution {π−1,π0Rn,n=0,1,2,…} to find the distributions of queue lengths, waiting time, sojourn time, and departure delays.We consider two types of queue lengths in this section: (i) the number of customers waiting in queue and (ii) the number of customers at servers (in service or waiting to depart). We consider the queue lengths (i) at an arbitrary time, (ii) seen by an arbitrary arrival, and (iii) right after a service completion. We also consider the number of waiting batches seen by an arbitrary arrival.Proposition 5.1Waiting queue length at an arbitrary timeIn steady-state, let qwbe the number of customers waiting in queue.(i)The distribution of qwis P{qw=0}=π−1e+π0e, P{qw=n}=π0Rne, n⩾1.The probability generating function of qwisE[zqw]=π-1e+π0(I-zR)-1e, for 0⩽z⩽1.The mean and variance of qware(11)E[qw]=π0R(I-R)-2e;Var[qw]=2π0R2(I-R)-3e-(π0R(I-R)-2e)2.To find the number of customers in service or waiting to depart, we need to decompose the vector π−1 according to the variable I(t): π−1=(π−1,〈0〉,π−1,〈1〉,…,π−1,〈K−1〉). We also need to find the number of customers in service or waiting to depart for states in Ψmax,〈k〉, for 1⩽k⩽K. Define vectors {umax,〈k,j〉, j=0,1,…,k} as follows: umax,〈k, 0〉=0 (a column vector with all elements being zero), and, for 1⩽j⩽k⩽K,(12)0umax,〈k,j〉≡10m1×m1⊗⋯⊗10mk-j×mk-j⊗0Imk-j+1⊗Imk-j+2+1⊗⋯⊗Imk+1e.Elements in the vector umax,〈k,j〉 is either zero or one. That an element in umax,〈k,j〉 is one indicates that the corresponding state in Ψmax,〈k〉 has j customers either in service or waiting to depart. By the interpretation, we must have umax,〈k,0〉+umax,〈k,1〉+⋯+umax,〈k,k〉=e.For convenience we introduce notation π⩾0=π0+π1+π2+⋯=π0(I−R)−1. Also define p−1,〈k,j〉=π−1,〈k〉(umax,〈k,j〉⊗e), for 1⩽j⩽k⩽K, where the order of e is mathat represents the number of states of the Markovian arrival process.Proposition 5.2Server queue length at an arbitrary timeIn steady-state, let qsbe the number of customers occupying a server.(i)The distribution of qsis given by(13)P{qs=k}=∑j=kK-1p-1,〈j,k〉+π0(I-R)-1(umax,〈K,k〉⊗e),k=0,1,2,…,K.The probability generating function of qsis(14)E[zqs]=∑j=1K-1∑k=1jzkp-1,〈j,k〉+π0(I-R)-1∑k=1Kzkumax,〈K,k〉⊗e.We can similarly obtain the mean and variance of qs. Details are omitted.Customers in the queueing system are either waiting in the queue or occupying a server (in service or waiting to depart). Thus, we can use Propositions 5.1 and 5.2 to find the total number of customers in the system.Proposition 5.3Total queue length at an arbitrary timeIn steady-state, let qtot=qw+qsbe the total number of customers in the queueing system.(i)The distribution of qtotis given by(15)P{qtot=n}=∑j=nK-1p-1,〈j,n〉+∑j=1nπ0Rj-1(umax,〈K,n-j+1〉⊗e),for0⩽n⩽K-1;π0Rn-K∑j=1KRK-j(umax,〈K,j〉⊗e),forn⩾K.The probability generating function of qtotis(16)E[zqtot]=∑j=0K-1∑k=1jzkp-1,〈j,k〉+π0∑j=1K-1Rj-1∑n=jK-1znumax,〈K,n〉⊗e+π0zK(I-zR)-1∑j=1KRK-jumax,〈K,j〉⊗eWe can similarly obtain the mean and variance of qtot. Details are omitted.Next, we find the queue length seen by an arbitrary arrival.Proposition 5.4The queue length seen by an arbitrary arrivalIn steady state, the distribution of {(qw(t),I(t),I1(t),…,IK(t)), t⩾0} seen by an arbitrary arrival is given by {πa,n, n=−1,0,1,2,…}, whereπa,n=πn(I⊗(D1e))/λ, for n=−1,0,1,2,….By their definition, πn(I⊗(D1e)) includes all the arrival rates when the waiting queue length is n, at an arbitrary arrival. Thus, we must have λ=π−1(I⊗D1)e+π0(I⊗D1)e+π1(I⊗D1)e+⋯=π−1(I⊗D1)e+π0(I−R)−1(I⊗D1)e, i.e., the total arrival rate. By Markov renewal theory (e.g., Grassmann & Tavakoli, 2007), the conclusion follows. This completes the proof of Proposition 5.4. □Similar to Propositions 5.1, 5.2, and 5.3, based on Proposition 5.4, the distributions, means, and variances of the waiting queue length, server queue length, and total queue length seen by an arbitrary arrival can be obtained. Details are omitted.Proposition 5.5In steady state, let Na,wbe the number of batches of size K to be served just before the arrival of a customer, excluding the batch that is currently in service and the batch of the arriving customer. The distribution of Na,wis given by(17)P{Na,w=n}=∑j=-1K-1πa,je,forn=0;λ-1π0RnK(I-R)-1(I-RK)(I⊗D1)e,forn⩾1.The probability generating function and mean of Na,ware given by, for 0⩽z⩽1,(18)E[zNa,w]=∑j=-1K-1πa,je+zλ-1π0RK(I-zRK)-1(I-R)-1(I-RK)(I⊗D1)e;E[Na,w]=λ-1π0RK(I-RK)-1(I-R)-1(I⊗D1)e.ProofUsing the distribution of Na,w, we obtain(19)E[zNa,w]=∑j=-1K-1πa,je+∑n=1∞zn∑j=0K-1πa,nK+je=∑j=-1K-1πa,je+zπ0RKλ∑n=1∞zn-1RK(n-1)∑j=0K-1Rje(I⊗D1)e,which leads to Eq. (18). This completes the proof of Proposition 5.5. □The variance of Na,wcan be found. Details are omitted.To find the distributions of waiting time and sojourn time, the key is to find the phases of the underlying Markov chains of the service times, right after an arbitrary arrival. First, we find the distribution of the waiting time of an arbitrary arrival.Let qw(t−) be the queue length just before time t. If a customer arrives at time t, (I(t),I1(t),…,IK(t)) may change only if qw(t−)=−1. We consider the process {(qw(t−),I(t),I1(t),…,IK(t)), t⩾0}. By Markov renewal theory, the distribution of {(qw(t−),I(t),I1(t),…,IK(t)), t⩾0} right after an arbitrary arrival is given by {pa,n, n=−1,0,1,…}, where(20)pa,-1=1λπ-1α1(0,Immax,〈1〉⊗(0,α2))⋱(0,Immax,〈K-1〉⊗(0,αK))⊗(D1e);pa,n=λ-1πn(I⊗(D1e)),n⩾0.Note that the definitions of {pa,n, n=−1,0,1,…} and {πa,n, n=−1,0,1,…} are different. On the other hand, since the service process does not change when a customer arrives, except for qw(t)=−1, we actually have pa,n=πa,n, for n⩾0.If an arriving customer sees n=jK,jK+1,…, or jK+K−1 customers waiting, the waiting time of the customer is Vr,n+Vmax,K,1+⋯+Vmax,K,j, where all the random variables are independent, {Vmax,K,1,…,Vmax,K,j} are i.i.d.r.v.s with the same distribution as Vmax,K, for j⩾0, and the random variable Vr,nhas a PH-distribution with PH-representation (pa,n/pa,ne, Tmax,〈k〉), for n⩾0. Note that j=Na,wfor this case. Using the distribution of Vr,n, we find the distribution of the remaining completion time of all customers in service at an arbitrary arrival instant.Proposition 6.1In steady state, let Vrbe the remaining completion time of the current service(s) in all servers at an arbitrary arrival instant, i.e., the time until server K becomes available. Then Vris PH-distributed with PH-representation (pa,⩾0, Tmax,〈k〉), wherepa,⩾0=λ−1π0(I−R)−1(I⊗(D1e)). Note that P{Vr=0}=pa,−1e=1−pa,⩾0e.Using the distribution of Vr,n,we also find the distribution of the waiting time. Next proposition shows that the waiting time has a matrix-exponential distribution (e.g., Asmussen & Bladt, 1996).Proposition 6.2In steady state, let Wqbe the waiting time of an arbitrary customer. ThenWq=Vr+Vmax,K,1+⋯+Vmax,K,Na,wand Wqhas a matrix-exponential distribution with matrix-exponential (ME) representation(21)αw=ϕImmax,〈K〉⊗(D1e);Tw=I⊗Tmax,〈K〉+(RK)′⊗Tmax,〈K〉0αmax,〈K〉;Tw0=λ-1π0∑k=0K-1Rk′⊗Tmax,〈K〉0,where ϕ(X) denote the direct-sum of matrix X (i.e., ϕ(X) is obtained by stringing out the elements of all the row vectors in X into a single row vector, starting from row 1), and X′ is the transpose of X. The cumulative distribution function and the mean of Wqcan be obtained as(22)P{X⩽t}=1-αwexp{Twt}-Tw-1Tw0;E[Wq]=-pa,⩾0Tmax,〈K〉-1e+E[Na,w]E[Vmax,K]=αwTw-2Tw0.In addition, we must havepa,-1e+αw(-Tw)-1Tw0=1.ProofFirst note that, if qw(t)=−1, then Wq=0. By the definition of Wq, conditioning on the number of customers waiting in queue and the phases of services at the arrival epoch, we obtain, for s⩾0,(23)E[e-sWq]=pa,-1e+∑n=0∞∑k=0K-1pa,nK+k(sI-Tmax,〈K〉)-1Tmax,〈K〉0fmax,K∗(s)n=pa,-1e+π0∑k=0K-1Rkλ∑n=0∞RnK(I⊗(D1e))(sI-Tmax,〈K〉)-1Tmax,〈K〉0fmax,K∗(s)n=pa,-1e+π0∑k=0K-1Rkλ∑n=0∞RKn(I⊗(D1e))((sI-Tmax,〈K〉)-1Tmax,〈K〉0αmax,〈K〉)n(sI-Tmax,〈K〉)-1Tmax,〈K〉0=pa,-1e+ϕ∑n=0∞RKn(I⊗(D1e))(sI-Tmax,〈K〉)-1Tmax,〈K〉0αmax,〈K〉nπ0∑k=0K-1Rkλ′⊗((sI-Tmax,〈K〉)-1Tmax,〈K〉0)=pa,-1e+ϕ(I⊗(D1e))∑n=0∞RK′⊗(sI-Tmax,〈K〉)-1Tmax,〈K〉0αmax,〈K〉nπ0∑k=0K-1Rkλ′⊗(sI-Tmax,〈K〉)-1Tmax,〈K〉0=pa,-1e+ϕ(I⊗(D1e))I-RK′⊗(sI-Tmax,〈K〉)-1Tmax,〈K〉0αmax,〈K〉-1π0∑k=0K-1Rkλ′⊗((sI-Tmax,〈K〉)-1Tmax,〈K〉0)=pa,-1e+ϕ((I⊗(D1e)))sI-I⊗Tmax,〈K〉-RK′⊗Tmax,〈K〉0αmax,〈K〉-1π0∑k=0K-1Rkλ′⊗Tmax,〈K〉0=pa,-1e+αw(sI-Tw)-1Tw0.This completes the proof of Proposition 6.2. □Higher moments and variance of Wqcan be found easily. Details are omitted.Next, we study the sojourn time of an arbitrary arrival. We decompose pa,−1 according to the variable I(t): pa,−1=(pa,−1,〈1〉,pa,−1,〈2〉,…,pa,−1,〈K〉), where pa,−1,〈j〉 is for the case where the (j−1)st server is not available, and the jth server is available and is initialized for service of the new arrival. If an arrival sees an empty system, its waiting time is zero and its sojourn time is v1. If an arrival sees server k (⩽K) available and server k−1 is not available, its waiting time is zero and its sojourn time has a PH-distribution with PH-representation (pa,−1,〈k〉, Tmax,〈k〉). If an arrival sees n=jK+k−1 customers waiting, then its sojourn time is Vr,n+Vmax,K,1+⋯+Vmax,K,j+Vmax,k.Proposition 6.3In steady state, let Wsbe the sojourn time of an arbitrary arrival. Then Wshas a matrix-exponential distribution with ME-representationαS,TS,TS0given as(24)αS=pa,-1,〈1〉,⋯,pa,-1,〈K〉,αw;TS=Tmax,〈1〉⋱Tmax,〈K〉λ-1(π0)′⊗Tmax,〈K〉0αmax,〈1〉⋯λ-1π0RK-1′⊗Tmax,〈K〉0αmax,〈K〉Tw;TS0=Tmax,〈1〉0⋮Tmax,〈K〉00.The mean sojourn time can be calculated asE[WS]=αSTS-2TS0. In addition, we must haveαS(-TS)-1TS0=1.By definition, we have, for s⩾0,(25)E[e-sWS]=∑k=1Kpa,-1,〈k〉(sI-Tmax,〈k〉)-1Tmax,〈k〉0+∑n=0∞∑k=1Kpa,nK+k-1(sI-Tmax,〈K〉)-1Tmax,〈K〉0fmax,K∗(s)nfmax,k∗(s).The rest of the proof is similar to that of Proposition 6.2. Details are omitted. This completes the proof of Proposition 6.3.□Applying Little’s law, we obtain the following relationships: E[qw]=λE[Wq] and E[qtot]=λ E[WS], which are useful for checking the accuracy of computation.In the tollbooth tandem queue, a customer may have to stay in the server after its service completion, until all down-stream services are completed. We call this period of time the departure delay. To find the distribution of departure delay, we need to find the phases of the underlying Markov chains of the services at servers, right after an arbitrary service completion. Define,Tmax,〈k,0〉0=0(zero matrix), and, for 1⩽j⩽k⩽K,(26)01×(mmax,〈j-1〉+1)Tmax,〈k,j〉0≡Im1+1⊗⋯⊗Imj-1+1⊗0Tj0⊗emj+1⊗⋯⊗emk;01×(mmax,〈j-1〉+1)Umax,〈k,j〉≡1000(m1+1)×(m1+1)⊗⋯⊗1000(mj-1+1)×(mj-1+1)⊗0Tj0⊗emj+1⊗⋯⊗emk.Elements in the matrixTmax,〈k,j〉0are the service completion rates at server j, for states in Ψmax,〈k〉. Define(27)δd,-1,〈k〉,j≡π-1,k(Tmax,〈k,j〉0⊗e),for1⩽j⩽k⩽K-1;χd,-1,〈k〉,j≡π-1,kUmax,〈k,j〉⊗e,for1⩽j⩽k⩽K-1;δd,n,j=πnTmax,〈K,j〉0⊗e,for1⩽j⩽K,n⩾0;χd,n,j=πn(Umax,〈K,j〉⊗e),for1⩽j⩽K,n⩾0.Thenδd,−1,〈k〉,jcontains the service completion rates at server j, where the server k is occupied and servers {k+1,…,K} are available (and no waiting customers). Also,δd,n,jcontain the service completion rates at server j, where there are n customers waiting. Define(28)γj,0,γj=∑k=jK-1δd,-1,〈k〉,j+∑n=0∞δd,n,j=∑k=jK-1δd,-1,〈k〉,j+π0(I-R)-1Tmax,〈K,j〉0⊗e,1⩽j⩽K;(ηj,0,ηj)=∑k=jK-1χd,-1,〈k〉,j+∑n=0∞χd,n,j=∑k=jK-1χd,-1,〈k〉,j+π0(I-R)-1Umax,〈K,j〉⊗e,1⩽j⩽K;ζj=(γj,0,γj)e,1⩽j⩽K;ξj=(ηj,0,ηj)e,1⩽j⩽K.Proposition 6.4In steady state, let Wd,kbe departure delay of an arbitrary customer completed its service at server k, and let Wdbe departure delay of an arbitrary customer.(i)Then ζkis the actual average service completion rate of server k, for 1⩽k⩽K. We must have λ=ζ1+⋯+ζK, which is useful for checking the accuracy of computation.The percentage of customers served by server k is ζk/λ, for 1⩽k⩽K.The probability that a customer has a zero departure delay is (ξ1+⋯+ξK)/λ.Given that a customer completes its service at server k, its departure delay Wd,kis zero, for k=1 (i.e., Wd,1=0), and has a PH-distribution with PH-representation (γk/(γke), Tmax,〈k−1〉), for 2⩽k⩽K.The departure delay Wdof an arbitrary customer has a PH-distribution with PH-representation(29)αDd=1λ(γ2,γ3,…,γK);TDd=Tmax,〈1〉⋱Tmax,〈K-1〉.We have E[Ws]=E[Wq]+E[V1]ζ1/λ+E[V2]ζ2/λ+⋯+E[VK]ζK/λ+E[Wd]. (This relationship is useful for checking the accuracy of computation.)In this section, we present some advanced properties associated with the distributions of waiting time and sojourn time obtained in Section 6. We show that the waiting time and sojourn time are actually PH-distributed.Proposition 7.1The ME-representationαw,Tw,Tw0of the waiting time Wqhas an equivalent PH-representationαw,PH,Tw,PH,Tw,PH0, given byαw,PH=αwΛw,Tw,PH=(Λw)-1TwΛw,Tw,PH0=(Λw)-1Tw0, where Λw=diag((π0(I−R)−1)′⊗e)/λ. (Note: diag ((π0(I−R)−1)′⊗e) is a diagonal matrix with the vector (π0(I−R)−1)′⊗eon the diagonal.)It is easy to see, for s⩾0,(30)pa,-1e+αw(sI-Tw)-1Tw0=pa,-1e+αwΛwsI-Λw-1TwΛw-1Λw-1Tw0.Note that αwandTw0are nonnegative, the diagonal elements of Tware negative and the off-diagonal elements of Tware nonnegative. Thenαw,PH,Tw,PH,Tw,PH0have the same property. To prove the proposition, it is sufficient to show that αw,PHis a substochastic vector andTw,PHe+Tw,PH0=0. First, by Eq. (10), we have(31)αw,PHe=αwΛwe=ϕ(Immax,〈K〉⊗(D1e))(π0(I-R)-1)′⊗eλ=π0(I-R)-1(e⊗Ima)D1eλ<1.Second, we have(32)Tw,PHe+Tw,PH0=Λw-1Twλ-1(π0(I-R)-1)′⊗e+Tw0=Λw-1λ-1(-I+(RK)′)(π0(I-R)-1)′+λ-1(π0(I-R)-1(I-RK))′⊗Tmax,〈K〉0=Λw-1(0)⊗Tmax,〈K〉0=0.This completes the proof of Proposition 7.1.□While the ME-representation and the PH-representation for waiting time Wqare both useful in computing the distribution function and moments of Wq, the PH-representation is of particular interest if Wqis used in further modeling of the system, due to its probabilistic interpretation.Proposition 7.2The ME-representationαS,TS,TS0of the sojourn time Wshas an equivalent PH-representationαS,PH,TS,PH,TS,PH0, given byαS,PH=αSΛS,TS,PH=(ΛS)-1TSΛS,TS,PH0=(ΛS)-1TS0, where(33)ΛS=Im-1,〈K〉-100Λw.In addition, we must have αS,PHe=1.ProofThe proposition can be proved in a way similar to that of Proposition 7.1. The proposition can also be proved by using the probabilistic interpretation ofαw,PH,Tw,PH,Tw,PH0. When the underlying Markov chain associated withαw,PH,Tw,PH,Tw,PH0is absorbed, the customer of interest enters a server. The customer enters server k with rate(s)Λw-1λ-1(π0Rk-1)′⊗Tmax,〈K〉0and the service of the (first) k servers is initialized with αmax,〈k〉, for 1⩽k⩽K. ThenαS,PH,TS,PH,TS,PH0is a PH-representation for Ws. Finally, we have(34)αS,PHe=pa,-1e+αw,PHe=pa,-1e+p⩾0e=1.This completes the proof of Proposition 7.2. □We note that the PH-representation of the sojourn time Wscan also be found by using results in Ozawa (2006). Matrix-exponential representations of the waiting time and sojourn time for the GI/PH/1 queue can be found in Sengupta (1989).The geometric solution {π−1,π0Rn,n=0,1,2,…} given in Section 4 has a geometric tail, which further implies that the queue length distributions given in Section 5 have a geometric decay as well. Let ρRbe the Perron–Frobenius eigenvalue of R (i.e., the eigenvalue with largest modulus). Then ρRis the decay rate of the queue length distributions. Next, we find the decay rates for the waiting time and sojourn time distributions. Define(35)Tw,R=Tmax,〈K〉+ρRKTmax,〈K〉0αmax,〈K〉.Denote by λw,Rthe eigenvalue of Tw,Rwith the largest real part. Since ρRis nonnegative and less than one, λw,Ris negative. Since the Perron–Frobenius eigenvalue is nondecreasing in the elements of the matrix, we must have max{λk,1,k=1,2,…,K}<λw,R<0.Proposition 7.3That λw,Ris the eigenvalue of Twwith the largest real part. The waiting time distribution has decay rate –λw,R, i.e., P{Wq>t}=cwtkexp (λw,Rt)+o(tkexp (λw,Rt)), for some constants cwand k.It can be shown that Twis irreducible. Then λw,Ris the only eigenvalue with the largest real part. Consequently, the waiting time distribution has a decay rate –λw,R. This completes the proof of Proposition 7.3. □That λw,Ris the eigenvalue of TSwith the largest real part. The sojourn time distribution has decay rate −λw,R.By Proposition 7.3 and Eq. (24), the eigenvalue of TSwith the largest real part is λw,R. Consequently, the waiting time distribution has a decay rate –λw,R. This completes the proof of Proposition 7.4. □Lastly, we present a limiting result.Proposition 7.5Assume that all the service times have the same probability distribution. Let ρK=−λαmax,〈k〉(Tmax,〈k〉)−1e/K. Then we have ρK→0 as K→∞.It is sufficient to show E[max{X1,…,XK}]/K→0 as K→∞. Denote by Fs(t) the distribution function of the service times. Then we have(36)limK→∞E[max{X1,⋯,XK}]K=limK→∞∫0∞x(Fs(x))K-1dFs(x)=∫0∞xlimK→∞(Fs(x))K-1dFs(x)=0.This completes the proof of Proposition 7.5. □In this section, we consider the special case where the service times at the different servers are independent and identically distributed.We first consider the simplest case of a tollbooth tandem queue where customers arrive according to a Poisson process and there are two identical servers of exponential service times. Indeed, one would hope to obtain a closed form solution for this extreme case. However, the following analysis shows that, even though the results for this very special case are simpler, a closed form solution is still not possible.Suppose that the arrival rate is λ and the service rate is μ for both servers. Since the service rates of the two servers are the same, the transition blocks in the infinitesimal generator Q in Eq. (6) can be simplified to(37)A-1,-1=-λλμ-λ-μ,A-1,0=000λ,A0,-1=μ000,A1,-1=0μ00,A0=λI,A1=-λI+-μ02μ-2μ,A3=0μ00.For the new Markov chain associated qw(t), its state space is reduced but information on which server is in service is partially lost. For this case, the elements of R=(ri,j) can be obtained by solving nonlinear equations:(38)r1,2=(λ+μ)2μr1,1-λ2μ;r2,1=2μλ+μr2,2;r1,12+r1,1r2,2+r1,1-λλ+μr2,2-λμ=0;r2,22+r1,1r2,2+r2,2-λ(λ+μ)2μ2=0.It is seen from these equations that there is no closed form solution for R=(ri,j), and neither is there a closed form solution for {π−1,π0}, though they can be computed numerically rather easily.We next consider the general tollbooth tandem queue but with identical servers. The orders of the transition blocks and matrix representations can be reduced significantly for this case (see Eq. (5)). Define N(t) as the number of servers busy at time t. We consider the CTMC {(qw(t),I(t),N(t),I1(t),…,IN(t)(t),Ia(t)), t⩾0}. In the construction of the infinitesimal generator (6) for the CTMC, we useαmax,[k],Tmax,[k],Tmax,[k]0given in Eqs. (4) and (5), instead ofαmax,〈k〉,Tmax,〈k〉,Tmax,〈k〉0given in Eq. (2). We also use αkto replace (0,αk) in Eq. (7). The distributions of the following random variables can be found similar to the heterogeneous case in Sections 4–6: (i) The queue length (i.e., the number of customers waiting in queue) at an arbitrary time, arrival, and service completion; (ii) The queue length in service at an arbitrary time, arrival, and service completion; (iii) The waiting time; (iv) The sojourn time; and (v) The departure delay. On the other hand, distributions of the total number of customers in the system cannot be found by using the simplified CTMC, since the total number of customers in the servers depends on which server(s) has completed its service. Information on which server(s) has completed service is partially lost for the simplified CTMC.Specifically, the infinitesimal generator of {(qw(t),I(t),N(t),I1(t),…,IN(t)(t),Ia(t)), t⩾0} is given by(39)A-1,-1=0α00mmax,[1]×m,Immax,[1]⊗α⋱⋱00mmax,[k-2]×m,Immax,[K-2]⊗α0mmax,[K-1]×mmax,[K-1]⊗D1+Im-1,[K]⊗D0+0Tmax,[1]0Tmax,[1]⋮⋱Tmax,[K-2]0Tmax,[K-2]Tmax,[K-1]0Tmax,[K-1]⊗Ima;A-1,0=0m-1,[K-2]×m0m-1,[K-2]×(mmax,[K]-m)0mmax,[K-1]×mImmax,[K-1]⊗α⊗D1;A0,-1=Tmax,[K]00mmax,[K]×(m-1,[K]-1)⊗Ima;Aj,-1=0mmax,[K]×m-1,[j-1]Tmax,[K]0αmax,[j]0mmax,[K]×(m-1,[K]-m-1,[j])⊗Ima,1⩽j⩽K-1;A0=Immax,[K]⊗D1;A1=Immax,[K]⊗D0+Tmax,[K]⊗Ima;AK+1=Tmax,[K]0αmax,[K]⊗Ima,where m−1,[0]=1, and m−1,[j]=1+mmax,[1]+⋯+mmax,[j], for j=1,2,…,K−1.The distributions of waiting queue length, waiting time, and sojourn time can be obtained similar to the heterogeneous case. For the departure delay, we define(40)Tmax,[k,j]0=0mmax,[j-1]×mmax,[j-1]0mj-1×mmax,[j-2],Imj-1×mj-1⊗T0⋮0mj-1×mmax,[j-2],Imj-1×mj-1⊗T0⊗emk-j×1,for2⩽j⩽k;γ[j]=∑k=jK-1π-1,[k]Tmax,[k,j]0⊗ema×1+π0(I-R)-1Tmax,[K,j]0⊗ema×1,for2⩽j⩽K.Note that π−1=(π−1,[0],π−1,[1],…,π−1,[K−1]). Then the departure delay Wdof an arbitrary customer has a PH-distribution with PH-representation(41)αWd=1λ∑j=2K(γ[j],0mmax,[K-1]-mmax,[j]),TWd=Tmax,[K-1].For this case, we must have E[Ws]=E[Wq]+E[V1]+E[Wd], which is useful for checking computation accuracy.As seen the analysis above, the main advantage of using the simplified CTMC is the reduction in the orders of transition blocks in Q and the matrices {R,Tw,TS}. Table 1below summarizes the orders of the matrices for the two CTMCs {(qw(t),I(t),I1(t),…,IK(t),Ia(t)), t⩾0} and {(qw(t),I(t),N(t),I1(t),…,IN(t)(t),Ia(t)), t⩾0} for the case with identical servers. Clearly, orders for the formulation of identical servers are significantly smaller than that for the formulation in Section 4. The forth column in Table 1 gives the orders of matrices for the tollbooth tandem queue with identical servers, Poisson arrival process, and exponential service times, which gives an even simpler computational algorithm.The method developed in this paper can be used not only to analyze various system performance measures of the tollbooth tandem system, but also to address interesting system design issues. For example, in the tollbooth application, an important question is, when the number of tollbooths increases, how effectively does it improve the customer delays?Example 9.1We consider a tollbooth tandem queue with Poisson arrival process and K identical and exponential servers. The arrival rate is λ=2 and service rate is μ=1. In Table 2, we report the numerical results for mean number of waiting customers, mean number of customers in system, mean waiting time, mean sojourn time, mean number of batches of size K observed by an arrival, and mean departure delay, as a function of the K.Table 2 shows that, as K increases, the waiting queue length, customer waiting time, and sojourn time all decrease, as expected. In addition, the reduction in these performance measures is more significant when K is small. Thus, adding new tollbooths has a decreasing marginal effect. For example, the mean waiting time drops from 5.5 to 2.0 when the number of servers goes from 5 to 6, and then drops from 2.0 to 0.4 as four more servers are added. These numerical results show that for practical purposes, adding a small number of tandem booths would capture the most of the benefits. The mean queue length and mean sojourn time converge to their limits, and these limits correspond to the numbers for tollbooth tandem queue with infinite number of servers.The impact of adding more tandem servers on departure delay does not have a clear pattern. For instance, it is seen from the numerical examples above that the departure delay first increases and then decreases. The mean departure delay also converges to a limit, which is the mean departure delay for the infinite-server system.The second question we want to address in this section is, how does the order of servers in the tollbooth tandem system affect the system performance? That is, given a fixed number of servers with known service time distributions, what can be said about the arrangement of these servers that optimizes certain system performance measure? Next, we use four numerical examples to examine (i) the effect of mean service times and variances of service times on performance measures; and (ii) the arrangements of servers at which performance measures are optimized.For the computation of general tollbooth tandem with non-Poisson arrivals and non-exponential processing times, we employ the following computational procedure:1.Input system parameters: (ma,D0,D1), K, and {(mk,αk,Tk), 1⩽k⩽K}. Compute arrival rate λ and service rates {μk,1⩽k⩽K}.Use Eq. (2) to construct PH-representation (mmax,〈k〉,αmax,〈k〉,Tmax,〈k〉) of Vmax,k=max{V1,…,Vk}, for 1⩽k⩽K. Check system stability by Theorem 4.1.Use Eq. (7) to construct transition blocks {Aj,−1,−1⩽j⩽K−1,A−1,0,A0,A1,AK+1} of the Markov chain Q.Find {π−1,π0,R} for the matrix-geometric solution using Eqs. (8) and (9).Use Eqs. (11)–(19) to compute performance measures related to queue lengths, including the mean queue lengths {E[qw],E[qs],E[qtot]}.Construct the ME-representations of the waiting time and sojourn time using Eqs. (21) and (24). Use the ME-representations to compute the mean waiting time E[Wq] and mean sojourn time E[Ws].Using Eqs. (26)–(28) to compute performance measures for individual servers including the percentages of customers served by servers {ζ1/λ,…,ζK/λ}.Using Eq. (29) to construct a PH-representation of the departure delay. Use the PH-representation to compute the mean departure delay E[Wd].The base model for our comparison is presented in the following example.Example 9.2We consider a tollbooth tandem queue with three servers. The arrival process and service times are defined as follows:(42)ma=2,D0=-510-1,D1=400.10.9;m1=1,α1=1,T1=-3,T10=3;m2=2,α2=(0.5,0.5),T2=-211-4,T20=13;m3=2,α3=(0.8,0.2),T3=-311-1,T30=20.By routine calculations, we obtain λ=1.2727, μ1=3, μ2=1.75, μ3=0.83333, and ρ=λE[max{V1,V2,V3}]/3=0.6304, for the queue. The mean queue lengths, mean waiting time, mean sojourn time, and mean departure delay are given in Table 3. Note that, in Tables 3–6, we use μito represent the ith PH-distribution given in Eq. (42).As shown in Table 3, the mean departure delay is small. This is due to the fact that server 1 is the faster server with mean service time 1/3, while servers 2 and 3 are slower; and server 2 is faster than server 3.The log-scaled density functions of the service times (i.e., log (f(t)), where f(t) is a density function) are plotted in Fig. 2(a), and the log-scaled density functions of the waiting time and sojourn time in Fig. 2(b). Fig. 2 demonstrates that the waiting time and sojourn time not only are significantly longer than the service times, but also have a much heavier tail. Thus, the waiting time and sojourn time are much more variable than service times.To see the effect of the service speed (i.e., service rate) on performance measures, we switch the service times of servers.Example 9.3Example 9.2 continuedBy switching the three service times defined in Eq. (42) between the three servers, we generate six tollbooth tandem queues given below. Each of the six queues corresponds to an arrangement of the service times. Performance measures of the six tollbooth tandem queues are presented in Table 4.Table 4 shows clearly that, if faster servers are used as the downstream servers (i.e., servers with a smaller index), the queue length, waiting time, and departure delay are all shorter. On the other hand, the actual workloads of the three servers are less balanced. The difference in the mean departure delay between the worst scenario and the best scenario is so significant that the configuration with the faster servers used in downstream should be considered in the design of such traffic systems.For Examples 9.2 and 9.3, the standard deviations of the three service times are σ1=0.3333, σ2=0.6061, and σ3=1.5362, respectively. It is readily seen that the standard deviations are ordered the same as the mean service times in Examples 9.2 and 9.3. Next, we change the standard deviation of service time 1 from σ1=0.3333 to σ1=3.3334, while the mean service time remains at 1/μ1=0.33333. For this case, service time 1 has the smallest mean but the largest standard deviation. Under this condition, we examine the impact of the arrangement of the service times on performance measures.Example 9.4Example 9.3 continuedIn Examples 9.1 and 9.2, we change (α1, T1) to(43)m1=2,α1=(0.005,0.995),T1=-0.029900-5.985,T10=0.02995.985.The service rates and standard deviations of the three servers are given by μ1=3, μ2=1.75, μ3=0.83333, and σ1=3.3334, σ2=0.6061, and σ3=1.5362, respectively. Performance measures of the tollbooth tandem queues are given in Table 5.Table 5 indicates that, if the service time of server 1 has a small mean but it is too variable, the mean queue length can be significantly larger than that of the other cases. Thus, similar to the service rates, the variances of service times also have significant impact on performance measures. Based on numerical experiments and intuition, we have the following observations on the order of servers.(i)To achieve a smaller waiting (sojourn) time, servers with a smaller mean service time (i.e., a greater service rate) should be used as downstream servers.To achieve a smaller waiting (sojourn) time, servers with a smaller standard deviation of the service time should be used as downstream servers.Example 9.4 indicates that the order of servers to achieve a smaller waiting (sojourn) time depends on both the mean service times and the standard deviations of service time. The next example demonstrates that the minimums and maximums of performance measures can be achieved at different arrangements of service times.Example 9.5The tollbooth tandem queue with K heterogeneous exponential serverConsider a tollbooth tandem queue with a Poisson arrival process and K heterogeneous exponential servers. Assume that λ=1, K=5, μ1=0.54, μ2=0.52, μ3=0.50, μ4=0.48, and μ5=0.46. For this example, ρ=0.918 and there are 120 permutations to assign the five service times to servers, which correspond to 120 tollbooth tandem queues. Performance measures for the best and worst cases are presented in Table 6.Numerical results demonstrate that, if faster servers are used as downstream servers, i.e., (μ1,μ2,μ3,μ4,μ5), E[qs] and E[Wd] are minimized; performance measures E[qtot] and E[Ws] are minimized at (μ1,μ2,μ4,μ5,μ3); and performance measures E[qw] and E[Wq] are minimized at (μ3,μ5,μ4,μ2,μ1). On the other hand, E[qw] and E[Wq] are maximized at (μ3,μ1,μ2,μ4,μ5); E[qtot] and E[Ws] are minimized at (μ5,μ3,μ2,μ1,μ4); and E[qs] and E[Wd] are maximized at (μ5,μ4,μ3,μ2,μ1). Note that E[qw] and E[Wq] (and E[qtot] and E[Ws]) are minimized or maximized at the same arrangement is due to the well-known Little’s law.This numerical example shows that the intuitive result of scheduling the faster servers at the most downstream stations does not necessary minimize the total time a customer spends in system nor the total number of customers in system. Based on all tested examples with K=2, 3, 4, and 5, we have the following observations on the optimal arrangements of the servers.Observation 9.1Assume that μ1⩾μ2⩾⋯⩾μK−1⩾μK. Then(i)E[qs] and E[Wd] are minimized at (μ1,μ2,…,μK−1,μK).E[qs] and E[Wd] are maximized at (μK,μK−1,…,μ3,μ2,μ1).For the case with K=2, all performance measures are minimized at (μ1,μ2), and maximized at (μ2,μ1).We conjecture that some of these observations may be true in general, e.g., (iii) with two exponential servers, though we are unable to prove it theoretically. Numerical examples indicates that E[qw], E[Wq], E[qtot], and E[Ws] can be minimized or maximized at various arrangements of service times. Numerical examples also indicate that where a performance measure is minimized or maximized has much to do with the traffic intensity, i.e., ρ. For instance, if ρ is small, then all performance measures in Table 6 are minimized at (μ1,μ2,μ3,…,μK−1,μK); and if ρ is close to one, the performance measures in Table 6 can be minimized or maximized at very different arrangements of {μ1,μ2,μ3,…,μK−1,μK}.

@&#CONCLUSIONS@&#
