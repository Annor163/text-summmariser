@&#MAIN-TITLE@&#
From model-driven specification to design-level set-based analysis of XACML policies

@&#HIGHLIGHTS@&#
We provide UML profile for model-driven specification of XACML policies.We propose a set-based design-level XACML policy analysis approach.We devise algorithms for design-level detection of conflicts, redundancies, and flaws.We provide dynamic policies evaluation to control access to critical resources.

@&#KEYPHRASES@&#
Web services security,XACML policies,Model-driven specification,Design-level analysis,Logical deductions,Access control,

@&#ABSTRACT@&#
With lot of hype surrounding policy-based computing, XACML (eXtensible Access Control Markup Language) has become the widely used de facto standard for managing access to open and distributed service-based environments like Web services. However, like any other policy language, XACML has complex syntax, which makes the policies specification process both time consuming and error prone, especially with large size policies that govern complex systems. Moreover, with the diversity of rules and conditions, hidden conflicts, redundancies and access flaws are more likely to arise, which expose Web services to security breaches at runtime. This paper proposes a UML profile that allows systematic model-driven specification of XACML policies to resolve the complexity of policies designation. Based on mathematical sets that explore the rules meanings, the paper provides also a design-level analysis to detect anomalies in the specified policies, prior to their enforcement in the system. A real life case study demonstrates the feasibility and efficiency of the proposition.

@&#INTRODUCTION@&#
Web services technology is undoubtedly revolutionizing distributed computing with its phenomenal support to expose, integrate and enable access to open, distributed and heterogeneous services ubiquitous over the internet. Yet, the vistas opened by this technology cannot hide its underlying security holes. With infinite accessibility to services over the internet and the evolution of cyber-crimes, access control is still one of the biggest concerns in the development of Web services. Hereof, policy-based computing [1–3] has gained considerable attention in controlling access to different systems including Web services. Particularly, XACML [4] has become the most widely used de facto standard for specifying and enforcing access control policies in this field [5–7].However, like any other policy language, XACML has too low-level and complex syntax, which makes the policies specification process time consuming and error-prone. These problems emerge mainly when defining and combining many policies to govern access to complex systems like Web services composition [8]. Accordingly, some researchers [9–12] have proposed UML profiles to offer high-level graphical modeling mechanism for policies specification. UML profile [13] is a lightweight UML extension mechanism that allows creating a domain specific language. Existing approaches have proved the capabilities of such mechanism to define different access control models. Yet, these works lack a full coverage of XACML elements, which makes the proposed profiles unable to support all policies that can be expressed in this language.Moreover, with the diversity of rules and conditions, anomalies are more likely to arise. Rules can overlap when single access request matches multiple rules. They may also conflict with each other in case these rules overlap and yield different decisions. Such conflicts in XACML policies are critical since they would allow unauthorized access to critical services or denial to legitimate entities. Redundancy is another type of anomalies in XACML policies. When an access request matches different rules with the same effect, these rules are considered as redundant. Redundancy affects mainly the performance of the access control decision-making process [14], which is influenced by the number of rules to be evaluated. The third critical anomaly in XACML policies is access flaw, which arises with badly defined and ordered rules and/or policies that allow users to gain accidental access to particular resources. Besides the achievements in the formal verification [15] of complex systems, several approaches [16–18] have proposed analysis mechanisms for XACML policies, few of them were able to detect all three aforementioned anomalies, yet not at the design level. In addition, none of these approaches is based on logical deductions that explore the meaning of the rules declared in the policies.In this paper, we present a new approach that aims to tackle these issues. To resolve the complexity of policies specification, we propose a UML profile that covers all the elements of XACML and allow systematic model-driven specification of standard XACML policies. In addition, we devise set-based algorithms for design-level and logical analysis of the specified policies in order to detect conflicts, redundancies and access flaws within and among them, prior to their enforcement in the system. The detection algorithms are based on structured sets constructs automatically extracted from the policies models. These sets are analyzed based on mathematical relations that reflect the semantics of the rules declared in the model. A list of existing anomalies is generated to locate them and eventually help resolving them. The evaluation of the policies [19–21] is done by a decision-making engine that we presented in previous work [22] and proved its ability to accelerate the evaluation process over other existing engines [4,23]. Controlling access to single independent Web service implies direct call to this engine, while in case of several services composed in a business process, our approach involves an aspect-oriented policy enforcer. The latter is responsible of automatically generating calls for the evaluation engine and dynamically weaving them in the Web services composition to manage the critical resources declared in the model.This work offers the following contributions:•Providing UML profile that fully supports all XACML language constructs to allow model-driven specification of XACML policies. The profile can be systematically applied to design XACML access control policies for Web services.Devising algorithms for design-level and logical analysis of XACML policies in order to detect anomalies like conflicts, redundancies, and access flaws. Moreover, identifying such anomalies between policies belonging to different Web services allows to appropriately select/eliminate the ones participating in the composed business model. The analysis is done on set-based constructs, which are automatically generated from the policies UML models.Delivering policy enforcer that can automatically extracts critical resources from the designated policies model, generate calls for the evaluation engine and dynamically enforce these calls in the system to control access to these resources.The rest of the paper is organized as follows. In Section 2, we study existing relevant approaches, while in Section 3 we give an overview of our proposition. In Section 4, we present the elaborated UML profile. In Section 5, we explain the intermediate set-based constructs for the XACML UML models. We present the logical detection mechanism and relevant algorithms in Section 6. In Section 7, we explain the policies enforcement process. In Section 8, we devote a case study to illustrate the proposed approach. Finally, we conclude the paper and draw future research directions in Section 9.

@&#CONCLUSIONS@&#
