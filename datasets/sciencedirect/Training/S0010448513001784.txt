@&#MAIN-TITLE@&#
Puzzhull: Cavity and protrusion hierarchy to fit conformal polygons

@&#HIGHLIGHTS@&#
We define cavities and protrusions of a 2D polygon which are key geometric features of a polygon.We propose an algorithm to compute cavities and protrusions.We propose a method for 2D polygonal piece fitting using a hierarchy of geometric features defined by cavities and protrusions.

@&#KEYPHRASES@&#
Cavity polygon,Protrusion polygon,Convex hull,Hierarchy,Geometric transformation,

@&#ABSTRACT@&#
In this paper, we present a simple definition for, and a method to find, cavities and protrusions of a 2D polygon. Using these, we fit conformal polygons with each other, which is similar to a jigsaw puzzle and in a general case is NP-hard to solve. We first build a hierarchy of cavities and protrusions for each polygon and use this hierarchy to check for matches between these geometric features of two polygons. This data structure allows for early rejection of mismatches and thus speeds up the fitting process. We show using many examples, that most of the common configurations in exact polygon fitting can be handled by this algorithm in polynomial time. In case of exact, yet non-unique matches, this algorithm will solve the problem in exponential time.

@&#INTRODUCTION@&#
Given a finite number of 2D simple polygonal pieces (i.e., genus zero, orientable, no self-intersections), our goal is to find the pieces which are completely conformal with each other and fit them together. Closely related problems include the 2D irregular nesting problem, the cutting stock problem, and scheduling problems  [1]. Most optimization problems of practical interest are computationally hard to solve  [2]. In recreational mathematics, the problem of solving jigsaw puzzles is NP-complete  [3]. In this paper, we focus on scenarios that are arguably common and solve such an instance using a novel and efficient data structure.The classes of the fitting problem which are handled by our algorithm are:(i)Exact unique matches: In this case, for every site (cavity or protrusion of a polygon), there exists at most one matching polygonal site, which has a perfect geometric matching in terms of area, perimeter, and edge length.Exact non-unique matches: In this case, for every site (cavity or protrusion of a polygon), there may be more than one matching polygonal site.In this paper, we consider the problem of fitting conformal 2D simple polygonal pieces, wherein the pieces completely fit with each other and we are allowed access to only the geometric information of the polygonal pieces, and not other features such as colors and textures provided in the jigsaw puzzle problem. Following are the main contributions of the paper:(i)We present a new definition of the geometric features of a polygon such as cavities and protrusions. We then present an algorithm using convex hulls to compute these features, each of which is a polygon by itself.We propose to recursively compute the cavities and protrusions present in a polygonal piece, and build a hierarchy of these geometric features. Essentially, it decomposes any input piece into multiple geometrically related sub-parts. Our hierarchy is rotation, uniform scale, and translation invariant.We propose a method to use the hierarchy to find the fitting between two input polygonal pieces. The nodes representing cavities of one polygon is compared with the nodes representing the protrusions of another. This is how we reduce the search space to find the conformal regions. We use a variant of tree isomorphism on this hierarchy to do early rejection of non-matching polygons. Since the number of nodes in the hierarchy is also dependent on the number of features rather than the number of edges, the total complexity of the algorithm is output-sensitive.For non-unique exact matching, we propose a backtracking-based algorithm to find the solution.However, we also note that our algorithm handles neither approximate fits nor those in which there exists no edge-to-edge correspondence between cavities and protrusions. Our algorithm will also work only if every cavity or protrusion polygon has at least one edge that is not part of the original polygon. In other words, an all-convex polygonal set of pieces has no cavity in any of its polygon and hence will not yield any result from our algorithm. In such a case, a simple edge–edge comparison between the polygonal pieces and an exhaustive search for match  [4] can be used.The pipeline of our algorithm is shown in Fig. 1.

@&#CONCLUSIONS@&#
