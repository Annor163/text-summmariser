@&#MAIN-TITLE@&#
Adaptive B-spline neural network based nonlinear equalization for high-order QAM systems with nonlinear transmit high power amplifier

@&#HIGHLIGHTS@&#
Complex-valued B-spline nonlinear equalizer for Hammerstain channels.Alternative least squares algorithm for Hammerstain channel modeling.Pseudo training data based least squares algorithm for B-spline inverting model.Decision-directed adaptation to track the time-varying channel.

@&#KEYPHRASES@&#
Quadrature amplitude modulation,Peak-to-average power ratio,Nonlinear high power amplifier,Hammerstein channel,B-spline neural network,Equalization,

@&#ABSTRACT@&#
High bandwidth-efficiency quadrature amplitude modulation (QAM) signaling widely adopted in high-rate communication systems suffers from a drawback of high peak-to-average power ratio, which may cause the nonlinear saturation of the high power amplifier (HPA) at transmitter. Thus, practical high-throughput QAM communication systems exhibit nonlinear and dispersive channel characteristics that must be modeled as a Hammerstein channel. Standard linear equalization becomes inadequate for such Hammerstein communication systems. In this paper, we advocate an adaptive B-Spline neural network based nonlinear equalizer. Specifically, during the training phase, an efficient alternating least squares (LS) scheme is employed to estimate the parameters of the Hammerstein channel, including both the channel impulse response (CIR) coefficients and the parameters of the B-spline neural network that models the HPA's nonlinearity. In addition, another B-spline neural network is used to model the inversion of the nonlinear HPA, and the parameters of this inverting B-spline model can easily be estimated using the standard LS algorithm based on the pseudo training data obtained as a natural byproduct of the Hammerstein channel identification. Nonlinear equalisation of the Hammerstein channel is then accomplished by the linear equalization based on the estimated CIR as well as the inverse B-spline neural network model. Furthermore, during the data communication phase, the decision-directed LS channel estimation is adopted to track the time-varying CIR. Extensive simulation results demonstrate the effectiveness of our proposed B-Spline neural network based nonlinear equalization scheme.

@&#INTRODUCTION@&#
High-order quadrature amplitude modulation (QAM) signaling [1] has found its way into many recent high-rate wireless communications system standards, owing to its desired property of high achievable bandwidth efficiency. The higher the order of QAM signaling, the better the bandwidth efficiency but also the higher the peak-to-average power ratio (PAPR) of the resulting transmit signal. As practical high power amplifiers (HPAs) exhibit nonlinear saturation characteristics [2–6], the high PAPR signal may drive the HPA at transmitter into the nonlinear saturation region, which will significantly degrade the system's achievable bit error rate (BER) performance. An effective means of compensating the nonlinear distortions of HPA is to implement a digital predistorter at the transmitter, and various predistorter techniques have been developed [7–13], which are capable of achieving excellent performance. However, implementing the predistorter is attractive for the downlink, where the base station (BS) transmitter has the sufficient hardware and software capacities to accommodate the hardware and computational requirements for implementing digital predistorter. By contrast, in the uplink, implementing predistorter at transmitter is much more difficult, because it is extremely challenging for a pocket-size handset to absorb the additional hardware and computational complexity required. Alternatively, in the uplink, the nonlinear distortions of the transmitter HPA can be dealt with at the BS receiver, which has sufficient hardware and software resources.With the nonlinear HPA at transmitter, the high-order QAM uplink is a complex-valued (CV) nonlinear Hammerstein system and, moreover, the received signal is further impaired by the channel additive white Gaussian noise (AWGN) while the coefficients of the channel impulse response (CIR) are time-varying. Therefore, nonlinear equalization of such a CV time-varying Hammerstein channel is a challenging task. A recent work [14] developed a generic method for identification and inversion of CV stationary Hammerstein systems based on a novel CV B-spline neural network approach. In this paper, we advocate the extension of this CV B-spline neural network based approach to nonlinear equalization of the time-varying QAM uplink with the nonlinear HPA at transmitter. Our original contribution is twofold.Firstly, during the training phase, we propose a similar approach to the one adopted by [14] to construct a nonlinear equalizer. More specifically, as in [14], a CV B-spline neural network is utilized to model the HPA's nonlinearity, and an efficient alternating least squares (ALS) identification algorithm is employed to estimate the CIR coefficients as well as the parameters of the CV B-spline neural network that models the static nonlinearity of the Hammerstein channel. Nonlinear equalization can then be naturally accomplished by standard linear equalization based on the CIR as well as the inversion of the HPA's nonlinearity. The inversion of the HPA's nonlinearity is implemented in [14] as a root finding problem based on the estimated B-spline neural network, which requires to carry out the iterative root finding procedure for detecting every data symbol and is time-consuming. We adopt a more efficient approach of directly inverting the HPA's nonlinearity. Specifically, we use another CV B-spline neural network to model the inversion of the HPA nonlinearity. Although the HPA's output at the transmitter is unobservable at the receiver for identifying this inverse model, the pseudo training data obtained as a natural byproduct of the Hammerstein channel identification can be used to estimate the parameters of the inverting B-spline model using the standard least squares (LS) algorithm. Secondly, in order to cope with the fading CIR, during the data communication phase, the usual decision-directed (DD) LS channel estimator is employed to track the time-varying CIR coefficients and, therefore, to adapt the equalizer. Extensive simulation results are presented to demonstrate the effectiveness of our proposed B-spline neural network based nonlinear equalizer for combating the detrimental effects of the Hammerstein channel.The remainder of this paper is organized as follows. Section 2 presents the high-order QAM uplink, where the channel is modelled as a CV Hammerstein system with the nonlinear HPA at the transmitter and the fading CIR, while a nonlinear equalizer is required at the receiver to combat the adverse effects of the Hammerstein channel. Our adaptive B-spline neural network based nonlinear equalizer is detailed in Section 3, and the simulation results are presented in Section 4. Our concluding remarks are offered in Section 5.Throughout our discussions, a CV numberx∈Cis represented either by the rectangular formx=xR+jxI, wherej=−1, whilexR=ℜ[x]andxI=ℑ[x]denote the real and imaginary parts of x, or alternatively by the polar formx=|x|⋅ej∠xwith|x|denoting the amplitude of x and∠xits phase.E[]denotes the expectation operator, while()−1denotes the inversion. The conjugate operation is denoted by()⁎, while()Tand()Hrepresent the transpose and conjugate transpose operators, respectively. TheL×Lidentify matrix is denoted byIL.We consider the M-QAM signaling and, therefore, the transmitted symbolsx(k)∈C, where k denotes the symbol index, take the values from the M-QAM symbol set(1)X={d(2l−M−1)+j⋅d(2q−M−1),1≤l,q≤M},with 2d being the minimum distance between symbol points.With the transmitter HPA exhibiting nonlinear saturation characteristics, the high-order QAM uplink can be represented by the generic CV Hammerstein system consisting of a cascade of two subsystems: a CV nonlinear static functionΨ(•):C→Cthat represents the HPA at the transmitter, followed by a CV linear dynamic system with a finite-duration impulse response (FIR) filter of orderLhwhich represents the dispersive channel. Furthermore, the received signaly(k)∈Cis corrupted by the channel AWGNn(k)∈C. Therefore,y(k)is represented by(2)w(k)=Ψ(x(k)),(3)y(k)=∑i=0Lhhiw(k−i)+n(k),where the channel AWGN has the power ofE[|n(k)|2]=2σn2, andh=[h0h1⋯hLh]Tis the CIR coefficient vector, while the HPA outputw(k)is unobserved and, therefore, is unavailable at the receiver.The most widely used HPA is the solid state power amplifier [5,6], whose nonlinearityΨ()is constituted by the HPA's amplitude responseA(r)and phase responseϒ(r)given by(4)A(r)=gar(1+(garAsat)2βa)12βa,(5)ϒ(r)=αϕrq11+(rβϕ)q2[degree],where r denotes the amplitude of the input to the HPA,gais the small gain signal,βais the smoothness factor andAsatis the saturation level, while the parameters of the phase response,αϕ.βϕ,q1andq2, are adjusted to match the specific amplifier's characteristics. The NEC GaAs power amplifier used in the recent wireless standards [5,6] for example has the parameter set(6)ga=19,βa=0.81,Asat=1.4;αϕ=−48000,βϕ=0.123,q1=3.8,q2=3.7.Therefore, given the inputx(k)=|x(k)|⋅ej∠x(k)to the HPA, the output of the HPA can be expressed as(7)w(k)=A(|x(k)|)⋅ej(∠x(k)+ϒ(|x(k)|)).The operating status of the HPA may be specified by the output back-off (OBO), which is defined as the ratio of the maximum output powerPmaxof the HPA to the average output powerPaopof the HPA output signal, given by(8)OBO=10⋅log10⁡PmaxPaop.The smaller OBO is, the more the HPA is operating into the nonlinear saturation region.To model the time-varying nature of the CIR, it is usually assumed that the CIR taps{h0,h1,⋯,hLh}follow the Rayleigh fading distribution with a given fading rate [15]. In this paper, we consider the slow fading scenario. More specifically, as transmission is organized in frames and each frame containsNFsymbols, we assume that within a frame, the CIR taps remain constant, while between frames the CIR taps are faded with the normalized Doppler frequency offd.To combat the adverse efforts of the dispersive CIR, the standard linear equalizer takes the form of an FIR filter with the orderLg, and the output of this linear equalizer is(9)wˆ(k−ι)=∑i=0Lggi⁎y(k−i),where ι is known as the decision delay. In particular, if the CIR is minimum phase,ι=0. If the HPA at the transmitter were linear,wˆ(k−ι)would be a sufficient statistic for estimating the transmitted data symbolx(k−ι). To guarantee an accurate equalization, the length of the linear equalizerLgshould be chosen to be three to four times of the length ofh, but not too long in order not to amplify the noise in the input signal too much. The well-known minimum mean square error (MMSE) solution [16] can readily be applied to obtain the linear equalizer's weight vectorg=[g0g1⋯gLg]T. Define the CIR coefficient matrixH∈C(Lg+1)×(LH+1)(10)H=[h0h1⋯hLh0⋯00h0h1⋯hLh⋱⋮⋮⋱⋱⋱⋯⋱00⋯0h0h1⋯hLh]=[h0h1⋯hι⋯hLH],whereLH=Lh+Lg. Then the MMSE solution ofgis expressed as(11)gMMSE=(HHH+2σn2σw2ILH+1)−1hι,in whichσw2=E[|Ψ(x(k))|2]is the power ofw(k)which needs to be estimated. The optimal value for ι can be chosen to minimise the MMSE of the combined linear system ofhandg(12)Jcmmse(ι)=σw2(1−hιH(HHH+2σn2σw2ILH+1)−1hι).Since the transmitter HPA is nonlinear, the linear equalizer (9) alone is insufficient for estimating the transmitted data symbolx(k−ι). If the inversion of the HPA's nonlinearity,Ψ−1(), is known, then the transmitter HPA's nonlinear distortion can be removed, yielding the estimate ofx(k−ι)(13)xˆ(k−ι)=Ψ−1(wˆ(k−ι)).As discussed in the previous section, in order to accomplish the equalization objective, it is necessary to identify the Hammerstein channel, including both the CIRhand the HPA's nonlinearityΨ(), as well as to invert the nonlinearityΨ().Note that the HPA's nonlinearity, (4) and (5), is unknown to the receiver andw(k)is unobserved. We adopt the CV B-spline neural network [14,17,18] to represent the mappingwˆ=Ψˆ(xR+j⋅xI):C→Cthat is the estimate ofΨ(). Before introducing the B-spline modeling ofΨ(), we point out that the HPAΨ()satisfies the following conditions.1)Ψ()is a one to one mapping, i.e. it is an invertible and continuous function.xRandxIare upper and lower bounded by some finite and known real values, wherex=xR+j⋅xIdenotes the input to the HPAΨ(). Furthermore, the distributions ofxRandxIare identical.A set of univariate B-spline basis functions forxd∈Ris parametrised by the orderPoof a piecewise polynomial and a knot sequence which is a set of values defined on the real line that break it up into a number of intervals. To haveNdbasis functions, the knot sequence is specified by(Nd+Po+1)knot values,{U0,U1,⋯,UNd+Po}, with(14)U0<U1<⋯<UPo−2<UPo−1=Umin<UPo<⋯<UNd<UNd+1=Umax<UNd+2<⋯<UNd+Po.At each end, there arePo−1“external” knots that are outside the input region and one boundary knot. As a result, the number of “internal” knots isNd+1−Po. Given the set of predetermined knots (14), the set ofNdB-spline basis functions can be formed by using the De Boor recursion [19], yielding for1≤l≤Nd+Po,(15)Bl(d,0)(xd)={1,ifUl−1≤xd<Ul,0,otherwise,as well as forl=1,⋯,Nd+Po−pandp=1,⋯,Po,(16)Bl(d,p)(xd)=xd−Ul−1Up+l−1−Ul−1Bl(d,p−1)(xd)+Up+l−xdUp+l−UlBl+1(d,p−1)(xd).Here we have the subscript/superscriptd=Ror I.The De Boor recursion is illustrated in Fig. 1.Po=3to 4 is sufficient for most practical applications. The number of B-spline basis functions should be chosen to be sufficiently large to provide accurate approximation capability but not too large as to cause overfitting and to impose unnecessary modeling complexity. More specifically,Nd=6to 10 is usually sufficient for accurate modeling in the finite and known interval[Umin,Umax]. The two boundary knots are obviously related to the known valuesUminandUmax, respectively. TheNd+1−Pointernal knots may be uniformly spaced in the interval[Umin,Umax]. The extrapolation capability of the B-spline model is influenced by the choice of the external knots. Note that there exist no data forxd<Uminandxd>Umaxin identification but it is desired that the B-spline model has certain extrapolating capability outside the interval[Umin,Umax]. The external knots can be set empirically to meet the required extrapolation capability. In fact, since no data appears outside[Umin,Umax], the precise choice of these external knots does not really matter, in terms of modeling accuracy. Also note that for QAM signals, the distribution ofxdis naturally symmetric and, therefore, the knot sequence should be chosen to be symmetric too.Using the tensor product between the two sets of univariate B-spline basis functions [20],Bl(R,Po)(xR)for1≤l≤NRandBm(I,Po)(xI)for1≤m≤NI, a set of the new B-spline basis functionsBl,m(Po)(x)can be formed and used in the CV B-spline neural network, giving rise to(17)wˆ=Ψˆ(x)=∑l=1NR∑m=1NIBl,m(Po)(x)ωl,m=∑l=1NR∑m=1NIBl(R,Po)(xR)Bm(I,Po)(xI)ωl,m,whereωl,m=ωl,mR+j⋅ωl,mI∈C,1≤l≤NRand1≤m≤NI, are the CV weights. Denote the weight vector of the B-spline model (17) as(18)ω=[ω1,1ω1,2⋯ωl,m⋯ωNR,NI]T∈CNB,whereNB=NRNI. The task of identifying the nonlinearityΨ()is turned into one of estimating the parameter vector.Remark 1Because of the piecewise nature of B-spline functions, given a valuexd∈[Umin,Umax], there are onlyPo+1basis functions with nonzero values at most. This is advantageous asPocan be set to a quite low value, e.g.Po=4is often sufficient. The complexity of the De Boor recursion is, therefore, on the order ofPo2[17,19]. Fig. 2shows the complexity of generating the B-spline basis function set forPo=4using the De Boor recursion. Note that the complexity does not depend on the number of basis functionsNdemployed. For the B-spline model with the polynomial degreePo=4, the total computational requirements are 26 additions and 38 multiplications at most.Thus, in the tensor-product B-spline model of (17), there are only(Po+1)2nonzero basis functions at most for any given input. This is in fact comparable to the conventional polynomial modeling. For the polynomial model with the polynomial degreePo, there are alsoPo+1basis functions which are given by1,xd,xd2,⋯,xdPo.Thus, the tensor-product polynomial model also have(Po+1)2nonzero basis functions.Remark 2B-splines have been widely studied in the subjects of approximation theory and numerical analysis, owing to their many desired properties. In particular, the B-spline basis functions as model basis have the best approximation capability, because the basis function is complete. Although any polynomial function can also be used to approximate a continuous function, the B-spline functions are proven to be optimally stable bases [21–23]. A critical aspect to consider in a model representation is its stability with respect to perturbation of the model parameters, because in any identification, the data are inevitably noisy, which will perturb the model parameters away from their true values. A significant advantage of using the B-spline model with De Boor algorithm for functional approximation over many other polynomial forms is its superior numerical stability [21–23]. Let us further analyze this aspect. Assume that the real-valued true system can be represented by the polynomial model of degreePoasy=∑i=0Poai⋅xi,as well as by the following B-spline model exactlyy=∑i=1Ndbi⋅Bi(d,Po)(x),wherey,x∈R. Because the identification data are noisy, the estimated model coefficients are perturbed from their true values toaˆi=ai+εifor the polynomial model, and tobˆi=bi+εifor the B-spline model. Assume that all the estimation noisesεiare bounded, namely,|εi|<εmax. The upper bound of|y−yˆ|for the B-spline model can be worked out to be|y−yˆ|=|∑i=1Ndbi⋅Bi(d,Po)(x)−∑i=1Ndbˆi⋅Bi(d,Po)(x)|<εmax⋅|∑i=1NdBi(d,Po)(x)|=εmax.Observe that the upper bound of the B-spline model output perturbation only depends on the upper bound of the perturbation noise, and it does not depend on the input value x, the number of basis functionsNdor the polynomial degreePo. This confirms that the B-spline model has the maximum numerical robustness, which is well-known. Optimality of the B-spline model in terms of numerical stability is due to the convexity of its model bases, i.e. they are all positive and sum to one. By contrast, the upper bound of|y−yˆ|for the polynomial model can be worked out to be|y−yˆ|=|∑i=0Poai⋅xi−∑i=0Poaˆi⋅xi|<εmax⋅|∑i=0Poxi|Observe that the upper bound of the polynomial model output perturbation depends not only on the upper bound of the perturbation noise but also on the input value x and the polynomial degreePo. The higher the polynomial degreePo, the more serious the polynomial model may be perturbed, a well-known drawback of using polynomial modeling.The excellent numerical stability of the B-spline model is illustrated using a simple example. Fig. 3(a) plots a quadratic polynomial functiony=0.001x2−0.02x+0.1defined overx∈[0,20]in solid line. Based on the knot sequence of{−5,−4,0,20,24,25}, this function is modeled as a quadratic B-spline model ofy=0.14B1(d,2)(x)−0.10B2(d,2)(x)+0.14B3(d,2)(x), which is depicted in Fig. 3(b) in solid line. We now draw three noisesεi,1≤i≤3, from a uniformly distributed random number (UDRN) in[−0.0001,0.0001], and add them to the three parameters in the two models, respectively, to simulate the effects of the noise in identification. Figs. 3(a) and (b) depict the ten sets of the perturbed functions in dashed line generated by perturbing the two models, respectively. It can be clearly seen from Fig. 3(a) that the polynomial model is seriously perturbed, but there is no noticeable change at all in Fig. 3(b) for the quadratic B-spline model. To further demonstrate the maximum robustness of the B-spline model, we next draw three perturbation noises from a UDRN in[−0.001,0.001], and add them to the three parameters of the B-spline model. Again, the B-spline model is hardly affected, as can be seen from Fig. 3(c). We then draw three perturbation noises from a UDRN in[−0.01,0.01]to add to the three B-spline parameters, and the results obtained are shown in Fig. 3(d). Observe from Figs. 3(a) and (d) that, despite of the fact that the strength of the perturbation noise added to the B-spline model coefficients is 100 times larger than that added to the polynomial model coefficients, the B-spline model is much less seriously perturbed than the polynomial model.The identification of the Hammerstein channel (2) and (3) then involves estimating the parameter vectorωof the CV B-spline neural network (17) that represents the HPA nonlinearityΨ()as well as the CIR coefficient vectorh. Note that during the identification of this Hammerstein channel,h0=1can be assumed because if this is not the case,h0can always be absorbed into the CV static nonlinearityΨ(), and the CIR coefficients are re-scaled ashi/h0for0≤i≤Lh. Consider the joint estimation ofωandhbased on a block of the training data with K samples{x(k),y(k)}k=1K. The identification task can be formulated as the one that minimizes the cost function(19)Jicf=1K∑k=1K|e(k)|2=1K∑k=1K|y(k)−yˆ(k)|2,subject to the constrainth0=1, in which the model predictionyˆ(k)is given by(20)yˆ(k)=∑i=0Lhhiwˆ(k−i)=∑i=0Lhhi∑l=1NR∑m=1NIBl,m(Po)(x(k−i))ωl,m.Note that the cost function (19) is convex with respect tohwhen fixingω, and it is convex with respect toωgiven a fixedh. This is simply because the model (20) can be viewed as two different linear regression models, namely, one is with respect tohwhen fixingωand the other is with respect toωgiven a fixedh, each problem having a closed-form solution. According to [24,25], the estimates ofωandhare unbiased, irrespective the optimization algorithm used to minimize the cost function (19). We adopt the following efficient ALS procedure to estimate bothωandh.Notingh0=1, define the amalgamated parameter vector as(21)θ=[ωTh1ωTh2ωT⋯hLhωT]T∈C(Lh+1)NB,and the B-spline basis function vectorϕ(k)∈RNBfor the inputx(k)as(22)ϕ(k)=[ϕ1,1(k)ϕ1,2(k)⋯ϕl,m(k)⋯ϕNR,NI(k)]Twith(23)ϕl,m(k)=Bl,m(Po)(x(k)),1≤l≤NR,1≤m≤NI.Further define the desired output vector as(24)y=[y(1)y(2)⋯y(K)]T∈CK,and the regression matrixP∈RK×(Lh+1)NBas(25)P=[ϕT(1)ϕT(0)⋯ϕT(1−Lh)⋮⋮⋮⋮ϕT(k)ϕT(k−1)⋯ϕT(k−Lh)⋮⋮⋮⋮ϕT(K)ϕT(K−1)⋯ϕT(K−Lh)].Then the LS estimate ofθis readily given by(26)θˆ=(PTP)−1PTy.Obviously,θˆis a unique and unbiased estimate ofθ. Therefore, the firstNBelements ofθˆprovide a unique and unbiased LS estimate for the weight vector of the CV B-spline neural networkω, which will be denoted asωˆ(0).For1≤τ≤τmax, whereτmaxis the maximum number of iterations, perform:a) Given the fixedωˆ(τ−1), calculate the LS estimatehˆ(τ). Specifically, define the regression matrixQ∈CK×(Lh+1)as(27)Q=[wˆ(1)wˆ(0)⋯wˆ(1−Lh)⋮⋮⋮⋮wˆ(k)wˆ(k−1)⋯wˆ(k−Lh)⋮⋮⋮⋮wˆ(K)wˆ(K−1)⋯wˆ(K−Lh)],in which(28)wˆ(k)=Ψˆ(x(k))=∑l=1NR∑m=1NIBl,m(Po)(x(k))ωˆl,m(τ−1).Then the LS estimatehˆ(τ)is readily given by(29)h̲ˆ(τ)=(QHQ)−1QHy,(30)hˆi(τ)=h̲ˆi(τ)/h̲ˆ0(τ),0≤i≤Lh.Sinceωˆ(τ−1)is a unique and unbiased estimate ofω, the LS estimatehˆ(τ)is guaranteed to be a unique and unbiased estimate ofh.b) Given the fixedhˆ(τ), calculate the LS estimateωˆ(τ). Specifically, introduce(31)φl,m(k)=∑i=0Lhhˆi(τ)Bl,m(Po)(x(k−i))∈C.Now introduce the regressor vectorφ(k)∈CNBgiven by(32)φ(k)=[φ1,1(k)φ1,2(k)⋯φl,m(k)⋯φNR,NI(k)]T,and define the regression matrix(33)S=[φ(1)φ(2)⋯φ(K)]T∈CK×NB.Then the LS estimateωˆ(τ)is readily given by(34)ωˆ(τ)=(SHS)−1SHy.Sincehˆ(τ)is a unique and unbiased estimate ofh, the LS estimateωˆ(τ)must be a unique and unbiased estimate ofω.A few iterations are sufficient for this estimation procedure to arrive at a highly accurate and joint unbiased estimate ofhandωthat is the unique minimum solution of the cost function (20).Remark 3It is clear that this ALS procedure guarantees to converge, in fact, in no more than one iteration. A few iterations, typically 2 to 3, are adopted to improve the estimation accuracy or to reduce the estimation variances. More specifically, sinceωˆ(0)is a unique and unbiased estimate ofω,hˆ(1)is guaranteed to be a unique and unbiased estimate ofh. On the other hand, the unique and unbiased estimateθˆof the high-dimensional amalgamated parameter vectorθ∈C(Lh+1)NBmay have relative high estimation variances, owing to the low ratio of the available training data over the dimension(Lh+1)NB. Consequently, The firstNBelements ofθˆ, i.e.ωˆ(0)may have a relatively poor estimation accuracy. With the fixedhˆ(1), the LS estimateωˆ(1)has lower estimation variance thanωˆ(0). In the second iteration, the estimation accuracy ofhˆ(2)andωˆ(2)will be further enhanced, in comparison to the estimation accuracy ofhˆ(1)andωˆ(1).With the estimated HPA's nonlinearityΨˆ()and the CIR tap vectorhˆ, an estimated noise power is readily given by2σˆn2=Jicf(hˆ,ωˆ), while an estimate for the power of the unobservedw(k)is given by(35)σˆw2=1K∑k=1K|wˆ(k)|2=1K∑k=1K|Ψˆ(x(k))|2.Then the linear equalizer's weight vectorgˆMMSEis readily provided by (11) based on the estimates ofhˆ,2σˆn2andσˆw2.GivenΨ(•), we need to compute its inversion as defined byxˆ(k−ι)=Ψ−1(wˆ(k−ι))of (13) in order to complete the nonlinear equalization. This task is identical to find the CV root ofwˆ(k)=Ψ(xˆ(k)), givenwˆ(k), which can be solved iteratively based on the Gauss–Newton algorithm [14,17,18]. Given the estimatedΨˆ()and during the data detection, the strategy of [14,17,18] requires to iteratively calculate the root ofwˆ(k−ι)=Ψˆ(xˆ(k−ι))for each linearly equalized received signal samplewˆ(k−ι)in order to obtain the estimatexˆ(k−ι)of the transmitted data symbolx(k−ι). In order to avoid the iterative root finding procedure for every samplewˆ(k), it is more efficient to directly construct a mapping to modelx(k)=Φ(w(k))=Ψ−1(w(k)). We adopt another CV B-spline neural network to represent the inverse mappingΦ(w(k)). To learn the mappingx(k)=Φ(w(k)), however, a training data set{w(k),x(k)}would be needed butw(k)is unobservable and, therefore, is not available. Fortunately, in the Hammerstein channel identification, we already obtain an estimateΨˆ()for the HPA's nonlinearityΨ(). Therefore, we may construct the “pseudo” training data set{wˆ(k),x(k)}k=1Kfor identifying the inverse mappingΦ(), wherewˆ(k)is computed based on the estimatedΨˆ().More specifically, define the two knot sequences similar to (14) forwRandwI. Similar to (17), we construct the inverting B-spline neural network(36)xˆ=Φˆ(w)=∑l=1NR∑m=1NIBl,m(Po)(w)αl,m=∑l=1NR∑m=1NIBl(R,Po)(wR)Bm(I,Po)(wI)αl,m,whereBl(R,Po)(wR)andBm(I,Po)(wI)are respectively calculated based on (15) and (16), while(37)α=[α1,1α1,2⋯αl,m⋯αNR,NI]T∈CNBis the parameter vector of this inverting B-spline neural network. Here for notational simplicity, we assume that the same number of basis functions and the same polynomial degree are used for the two B-spline neural networks that modelΨ(x)andΦ(w). Over the pseudo training data set{wˆ(k),x(k)}k=1K, the regression matrixBˆ∈RK×NBcan be formed as(38)Bˆ=[B¯1,1(Po)(1)B¯1,2(Po)(1)⋯B¯NR,NI(Po)(1)B¯1,1(Po)(2)B¯1,2(Po)(2)⋯B¯NR,NI(Po)(2)⋮⋮⋮⋮B¯1,1(Po)(K)B¯1,2(Po)(K)⋯B¯NR,NI(Po)(K)],whereB¯l,m(Po)(k)=Bl,m(Po)(wˆ(k)), while the associated desired output vector is given by(39)x=[x(1)x(2)⋯x(K)]T.Then the LS solution forαis readily given byαˆ=(BˆTBˆ)−1BˆTx.During the data communication phase, since the transmitter HPAΨ()remains the same, the estimated HPA's nonlinearityΨˆ()and its inversionΦˆ()=Ψˆ−1()obtained during the training remain valid. Therefore, we do not need to update these two B-spline models' parameter vectors,ωˆandαˆ. However, as the CIR changes from frame to frame, the estimated CIR tap vectorhˆobtained during the training must be adapted. We adopt a decision-directed (DD) LS estimator to update the CIR coefficient vector during the data communication.Specifically, let f be the data frame index, whilehˆ(f)andgˆMMSE(f)denote the estimated CIR tap vector and the corresponding linear equalizer weight vector, respectively, after the detection of the f-th data frame. Also the training based estimates are denoted ashˆ=hˆ(0)andgˆMMSE=gˆMMSE(0), respectively. GivengˆMMSE(f−1)andΦˆ()=Ψˆ−1(), the detection of the f-th data frame is carried out by performing the nonlinear equalization of (9) and (13), and then quantising the resultingxˆ(k)to obtain the hard decisionsx˜(k)for1≤k≤NF. Given the estimate of the HPAΨˆ()and based on the hard decisions of{x˜(k)}k=1NF, the DD estimate of the HPA's output can be calculated according to(40)w˜(k)=Ψˆ(x˜(k))=∑l=1NR∑m=1NIBl,m(Po)(x˜(k))ωˆl,m.By constructing the DD regression matrixQ˜∈CNF×(Lh+1)as(41)Q˜=[w˜(1)w˜(0)⋯w˜(1−Lh)⋮⋮⋮⋮w˜(k)w˜(k−1)⋯w˜(k−Lh)⋮⋮⋮⋮w˜(NF)w˜(NF−1)⋯w˜(NF−Lh)]and denoting the corresponding channel observation vector asy˜∈CNF, the DD LS estimate is readily be obtained as(42)hˆ(f)=(Q˜HQ˜)−1Q˜Hy˜.Givenhˆ(f)as well as the training based estimates2σˆn2andσˆw2, we can obtain an updated linear equalizer's weight vectorgˆMMSE(f)according to (11). Algorithm 1summarizes the detection of each data frame, which involves two iterations of the above-mentioned DD adaptation.Remark 4While maintaining a high system throughput, this decision-directed updating scheme introduces a fixed delay in detecting each data frame. Since this delay is constant for every data frame, it will not cause problem even to real-time applications. Alternative would be to allocate part of each data frame, e.g. 10%, for training, at a cost of significantly reducing the achievable system throughput.For most practical systems, the transmitter HPA can be modeled by a CV static nonlinear mapping. In some systems, HPAs may exhibit memory [26]. By modeling an HPA with memory as a Hammerstein system, namely, a CV static nonlinearityΨ(•):C→Cfollowed by a FIR linear filter, then the combined HPA and dispersive channel can also be represented by our model of (2) and (3), where the linear filter (3) is the convolution of the HPA's FIR filter and the dispersive channel. Thus, the nonlinear equalization approach developed in this work can be applied directly to this class of nonlinear HPAs with memory.Another popular model for nonlinear HPAs with memory is the Wiener model [4] which represents an HPA with memory by a FIR filter followed by a CV static nonlinearity. This class of nonlinear dispersive channels with the Wiener HPA at transmitter is depicted in the top part of Fig. 4, while the bottom part of Fig. 4 illustrates the corresponding nonlinear equalizer design. The same tensor-product B-spline model of (17) can be adopted to model the CV static nonlinearityΨ(•). However, the identification of the nonlinear system illustrated in Fig. 4 is a much more difficult task. In particular, nonlinear estimation methods, such as the gradient-based algorithms [13,18,27] and the evolutionary algorithms [12], must be employed in order to estimate the parameter vectors of the linear filterFIRHPA(•), the B-spline model of the CV static nonlinearityΨ(•)and the linear filterFIRchn(•), which are inherently high complexity and may suffers from the drawback of slow convergence.Once the estimates ofFIRHPA(•),Ψ(•)andFIRchn(•)are obtained, it is straightforward to applied the nonlinear equalizer design presented in this work. Specifically, the partial equalizersFIRchn−1(•)andFIRHPA−1(•)can readily be obtained based on the estimates ofFIRchn(•)andFIRHPA(•), respectively. The inverse nonlinearityΨ−1(•)can be modeled by the same inverting B-spline model of (36), whose parameters can be estimated in a similar manner based on the pseudo training data{wˆO(k),wˆI(k)}k=1Kcalculated using the estimates ofFIRHPA(•)andΨ(•).We considered the 64-QAM Hammerstein communication system in which the HPA employed was described by (4) and (5) with the parameter set given in (6). We assumed a quasi-frame-static Rayleigh multipath channel with an exponentially decreasing power delay profile, where the average gain for the lth path was given by(43)E[|hl|]=e−lη,0≤l≤Lh.In the simulation, the channel degradation factor was chosen to beη=2while the channel length was set toLh=3. Each frame containedNF=200064-QAM data symbols, while the first frame was used for training, yieldingK=NF=2000. The CIR coefficientshlfor0≤l≤Lhchanged at the beginning of each frame according to a Rayleigh fading distribution with the normalized Doppler frequency offd=0.0001, but they remained constant within a frame. The linear equalizer's length was chosen to beLg=15and the decision delay was set toι=0. The piecewise quartic polynomial ofPo=4was chosen as the B-spline basis function, and the number of B-spline basis functions was set toNR=NI=8. The empirically determined knot sequences for the two B-spline models covering different HPA operating conditions are listed in Table 1. The system's signal-to-noise ratio (SNR) was defined asSNR=Es/No, whereEswas the average power of the input signalx(k)to the HPA andNo=2σn2was the channel AWGN's power.We first considered the stationary channel, whose CIR tap vectorhis listed in Table 2, in order to evaluate the training performance of the proposed B-spline neural network based nonlinear equalizer. The ALS algorithm of Section 3.2 was used to identify this Hammerstein channel, specifically, to provide both the estimates of the CIR vectorhˆand the B-spline neural network's weight vectorωˆ. It was observed that no more than four iterations were sufficient for the algorithm to obtain the highly accurate estimation results as summarized in Table 2 as well as illustrated in Fig. 5. Indeed, observe from Table 2 that the identification of the CIR tap vector in the nonlinear Hammerstein channel was achieved with high precision even under the adverse operational condition ofOBO=5dBandEs/No=5dB. Note that under the HPA operational condition ofOBO=5dB, the peak amplitude of|x(k)|was less than 0.09, while under the condition ofOBO=8dB, the peak amplitude of|x(k)|was less than 0.06. The results of Fig. 5 clearly demonstrate the capability of the proposed CV B-spline neural network to accurately model the HPA's nonlinearityΨ(). To be more specifically, within the HPA's operational input range, the estimated amplitude response exhibits negligible deviation from the true HPA's amplitude response, while the maximum error in the estimated phase response is no more than 0.01 radian. From Fig. 5, it can also be seen that the channel noisen(k)has little effort on the accuracy of the amplitude response estimate, but the noise has noticeable influence on the accuracy of the phase response estimate.The effectiveness of the proposed CV B-spline inversion based on the pseudo training data is next demonstrated, and Fig. 6depicts the combined response of the HPA's true nonlinearity and its estimated inversion obtained under the operating conditions ofOBO=5dBandEs/No=5dBas well asOBO=5dBandEs/No=10dB, respectively. The results of Fig. 6 show that the CV B-spline inversion estimated based on the pseudo training data is highly accurate. Specifically, within the HPA's operating input range, the combined amplitude response of the HPA's true nonlinearity and the estimated B-spline inversion matches the ideal response, while the combined phase response only deviates from the ideal response of zero by no more than 0.01 radian. For the given operating condition ofOBO=8dBandEb/No=10dB, Fig. 7plots the HPA's input signalx(k), the noisy Hammerstein channel's output signaly(k), the linearly equalized signalwˆ(k)based on the estimated CIRhˆ, and the nonlinearly equalized signalxˆ(k)based on the estimated CIRhˆand the estimated B-spline inversionΦˆ(). The results of Fig. 7 further illustrate the power of the proposed B-spline neural network based nonlinear equalizer for combating the dispersive channel as well as compensating the transmitter HPA's nonlinearity.The achievable BER performance of the proposed nonlinear equalizer constructed based on the estimated CIRhˆand the estimated B-spline inversionΦˆ()are depicted in Fig. 8under the two operating conditions of the transmitter HPA, in comparison to the BER performance attained by the standard linear equalizer. It can be seen from Fig. 8 that as expected, the linear equalization alone is incapable of compensating the transmitter HPA's nonlinearity. More specifically, for the 64-QAM signaling, the HPA operates atOBO=5dBexhibits the relatively severe nonlinearity and as a result, the linear equalizer performs poorly with a high error floor of above10−2. By adopting the proposed nonlinear equalizer, a large part of the nonlinearity is removed, which enables the equalizer to lower the error floor by the three orders of magnitude, compared with the linear equalizer. Even when the transmitter HPA operates under the condition ofOBO=8dB, which only exhibits relatively mild nonlinearity, the linear equalizer still shows an error floor of above10−4. By contrast, the proposed nonlinear equalizer significantly outperforms the linear equalizer, as confirmed in Fig. 8.As mentioned in Section 3.1, two tensor-product polynomial models, both having a polynomial degree ofPoin each dimension, can also be utilized to estimate the CV HPA's static nonlinearityΨ(•)and its inversionΨ−1(•), respectively, based on the same identification procedure developed in Section 3, yielding a polynomial based nonlinearity equalizer. In our simulation study, we also adopted the tensor-product polynomial model of degreePo=4, which had 25 basis functions that was comparable to the tensor-product B-spline model of at most 25 nonzero basis functions for any given input. The achievable BER performance of this polynomial based nonlinear equalizer are also shown in Fig. 8, where it can be seen that the performance of the polynomial based nonlinear equalizer is slightly inferior to that of the proposed B-spline based nonlinear equalizer, particularly when the HPA is operating in the severe nonlinear region.We then investigated the achievable performance of the proposed decision-directed adaptive B-spline nonlinear equalizer based on the DD adaptive scheme of Algorithm 1, under the environment of frame-fading CIR, where the CIR tap coefficients faded at the beginning of each frame with the normalized Doppler frequency offd=0.0001, but they remained constant within each frame. Fig. 9compares the performance of the proposed DD adaptive B-spline nonlinear equalizer with that of the non-adaptive B-spline nonlinear equalizer which was fixed based on the training results obtained in the first frame. As expected, the non-adaptive nonlinear equalizer is unable to track the time-varying channel, and its BER performance is very poor. By contrast, with the aid of the DD adaptive scheme of Algorithm 1, the DD adaptive B-spline nonlinear equalizer is capable of tracking the time-varying channel reasonably well and, consequently, significantly improves the attainable BER performance. Observe from Fig. 9 that for the extremely low SNR conditions, the DD adaptive nonlinear equalizer actually performs worse than the non-adaptive one. Specifically, given theOBO=5dBandSNR≤−1dBas well as given theOBO=8dBandSNR≤−3dBthe non-adaptive equalizer outperforms the DD adaptive equalizer. This is due to the well-known error propagation phenomenon. Under such extremely low SNR conditions, a large portion of the decisions are erroneous, which degrade the DD adaptive algorithm severely. Fig. 10compares the performance of the DD adaptive B-spline based nonlinear equalizer with that of the DD adaptive polynomial based nonlinear equalizer. The results of Fig. 10 demonstrate that the DD adaptive B-spline based nonlinear equalizer outperforms the DD adaptive polynomial based nonlinear equalizer.

@&#CONCLUSIONS@&#
We have proposed a novel CV B-spline neural network based nonlinear equalizer for the nonlinear Hammerstein communication system that employs high-order QAM signaling with nonlinear transmitter high power amplifier and communicates over the dispersive channel. Specifically, we have extended a recent development of the CV B-spline neural network based approach to construct nonlinear equalizer for Hammerstein channels, which employs a CV B-spline neural network to model the HPA's nonlinearity as well as uses another CV B-spline neural network to model the inversion of the HPA's nonlinearity. During training, the Hammerstein channel model parameters that include the CIR coefficients and the B-spline neural network weights can readily be estimated using a highly efficient ALS algorithm, while the weights of the B-spline inversion model can be identified using a standard LS algorithm based on the pseudo training data as a natural by-product of the Hammerstein channel model identification. Moreover, a decision-directed adaptive algorithm has been adopted to track the time-varying channel during data communication. The effectiveness of our proposed nonlinear equalization approach has been demonstrated in a simulation study, and the results obtained confirm that our B-spline neural network based nonlinear equalizer is capable of efficiently combating the dispersive transmission medium and compensating the detrimental transmitter HPA's nonlinearity as well as effectively tracking the time-varying channel.