@&#MAIN-TITLE@&#
A novel imperialist competitive algorithm for generalized traveling salesman problems

@&#HIGHLIGHTS@&#
A hybrid imperialist competitive algorithm is presented.It uses assimilation, destruction/construction and imperialist development schemes.The algorithm is calibrated using Taguchi method.For evaluation, it is compared against two effective existing algorithms.

@&#KEYPHRASES@&#
Generalized traveling salesman problem,Metaheuristic,Imperialist competitive algorithm,

@&#ABSTRACT@&#
This paper deals with generalized traveling salesman problems. In this problem, all nodes are partitioned into some clusters and each cluster must be visited exactly once in a tour. We present an effective metaheuristic method hybridized with a local search procedure to solve this problem. The proposed algorithm is based on the imperialist competitive algorithm (ICA), which is a new socio-politically motivated global search strategy. ICA is enhanced by a novel encoding scheme, assimilation policy procedure, destruction/construction operator and imperialist development plans. Various parameters of the algorithm are analyzed to calibrate the algorithm by means of the Taguchi method. For the evaluation of the proposed algorithm, it is compared against two effective existing algorithms through a set of available instances. The results demonstrate the superiority of our algorithm in both solution quality and robustness of the solution.

@&#INTRODUCTION@&#
The traveling salesman problem (TSP) consists of a set of cities and the distance between each pair of cities. The purpose is to find the shortest possible route that visits each city exactly once and returns to the origin city. The generalized traveling salesman problem (GTSP) is an extension of this problem in which cities are partitioned into some clusters. It is required to find a minimum length tour that includes exactly one city from each cluster. It can be easily concluded that when each cluster contains exactly one city, GTSP becomes the classical TSP. Since TSP is NP-hard; GTSP is also NP-hard. Among different applications of GTSP, one can refer the reader to postal routing [1], computer file sequencing [2], order picking in warehouses [3], process planning for rotational parts [4], and routing of clients through welfare agencies [5].After reviewing the literature and analyzing the state-of-the-art algorithms for this problem (differential evolutionary algorithm by [18] and random key genetic algorithm by [22]), we realized that the good performance of both algorithms comes from searching the solution space with a population of encoded solutions and their controlling features. Among different population based algorithms, the imperialist competitive algorithm (ICA) obtains promising results in different optimization problems [32,33,37,38]. ICA divides the population into several interactive subpopulations, and then controls the search inside each subpopulation. Therefore, we have been thinking of designing an effective ICA for the problem under consideration. In this case, we can both control the population to a greater extent and diversify the search considering different subpopulations.To develop this algorithm, we propose a new encoding scheme to represent solutions to the algorithm. The proposed ICA has four main phases: assimilation policy, imperialist development plans, local search and substitution of the similar solutions. In the initialization, tour rotation (i.e., repetitive solutions) is prevented. In assimilation policy, the colonies are moved toward their imperialist. To maintain the diversity, before assimilate each colony, a mutation occurs in the imperialist, and then colony is assimilated into a changed imperialist. One of the drawbacks of the classical ICA is that the imperialists do not undergo any improvement procedure. To rectify this drawback, ICA is extended by a new mechanism (imperialist development plans). In this mechanism, each imperialist has a number of alternative development plans then one must be selected and executed. After the imperialists are improved, a local search is applied to all imperialists. At the end of each iteration, some imperialists or colonies may be quite similar. Therefore, to maintain the diversification, similar imperialists are mutated and similar colonies are replaced by new countries (new solutions that are generated by initialization phase).In brief, we enhance ICA by developing a novel encoding scheme, assimilation policy procedure, a destruction/construction operator and an imperialist development plans. To evaluate the algorithm, it is compared with the two state-of-the-art algorithms in the literature by [18,22]. The experimental results show that ICA outperforms the other algorithms.The rest of the paper is organized as follows. After reviewing the relevant literature in Section 2, the proposed imperialist competitive algorithm is presented in Section 3. In the Section 4, the parameters of the algorithm are calibrated. Then, the performance of the algorithm is compared with other state-of-the-art methods. Section 5 contains the concluding remarks.

@&#CONCLUSIONS@&#
