@&#MAIN-TITLE@&#
Modeling parallel movement of lifts and vehicles in tier-captive vehicle-based warehousing systems

@&#HIGHLIGHTS@&#
We propose a parallel policy for autonomous tier-captive storage/retrieval systems.A fork-join queueing network is formulated to analyze the system performance.The parallel policy has advantages in small size systems.The parallel policy has advantages below a critical transaction arrival rate.

@&#KEYPHRASES@&#
Logistics,Warehousing,AVS/RS,Analytical and simulation modelling,Performance analysis,

@&#ABSTRACT@&#
This paper models and analyzes tier-captive autonomous vehicle storage and retrieval systems. While previous models assume sequential commissioning of the lift and vehicles, we propose a parallel processing policy for the system, under which an arrival transaction can request the lift and the vehicle simultaneously. To investigate the performance of this policy, we formulate a fork-join queueing network in which an arrival transaction will be split into a horizontal movement task served by the vehicle and a vertical movement task served by the lift. We develop an approximation method based on decomposition of the fork-join queueing network to estimate the system performance. We build simulation models to validate the effectiveness of analytical models. The results show that the fork-join queueing network is accurate in estimating the system performance under the parallel processing policy. Numerical experiments and a real case are carried out to compare the system response time of retrieval transactions under parallel and sequential processing policies. The results show that, in systems with less than 10 tiers, the parallel processing policy outperforms the sequential processing policy by at least 5.51 percent. The advantage of parallel processing policy is decreasing with the rack height and the aisle length. In systems with more than 10 tiers and a length to height ratio larger than 7, we can find a critical retrieval transaction arrival rate, below which the parallel processing policy outperforms the sequential processing policy.

@&#INTRODUCTION@&#
Autonomous vehicle-based storage and retrieval systems (AVS/RSs) can store and retrieve goods stored on unit loads with high operational efficiency and flexibility. These systems have been adopted by many distribution centers in their high density storage areas, since the introduction by Savoye Logistics at the beginning of the 20th century (Cai, Heragu, & Liu, 2014; Roy, Krishnamurthy, Heragu, & Malmborg, 2015).Depending on the assignment of the vehicles to the tiers, AVS/RSs can be classified as tier-to-tier AVS/RSs where the vehicle can visit all tiers, and tier-captive AVS/RSs where the vehicle is captive to its designated tier (Heragu, Cai, Krishnumarthy, & Malmborg, 2011). The tier-to-tier configuration is more suitable for handling palletized unit-loads with expensive vehicles (see Savoye Logistics). In such a system, the movement of loads should be matched with a vehicle until the completion of the transaction (Ekren, Heragu, Krishnamurthy, & Malmborg, 2010). The tier-captive configuration is more suitable for handling small-size unit loads, such as totes, with inexpensive vehicles (see KNAPP, 2016). In such a system, each vehicle can only move in its designated aisle (Marchet, Melacini, Perotti, & Tappia, 2012). Fig. 1presents a typical tier-captive AVS/RS for product totes. It consists of three components: a rack system containing single-deep storage racks, lifts that are mounted along the periphery of the racks and autonomous vehicles that move in aisles. The input/output point (I/O) of the system is located at the first tier of each aisle. The first storage positions at each side of the aisle are buffer locations. One is the inbound buffer which holds the loads to be stored, and the other is the outbound buffer which holds the loads that have been retrieved. In the tier-captive configuration, each vehicle is dedicated to an aisle and it provides horizontal load movement. The lift is discrete and it holds one load once time. It provides not only the vertical load movement for the storage and retrieval transactions, but also the load transfer to and from the buffer at each tier.Previous researches of tier-captive AVS/RSs follow a sequential processing policy (Heragu et al., 2011; Lerher, 2015; Lerher, Ekren, Dukic, & Rosi, 2015a; Lerher, Ekren, Sari, & Rosi, 2015b; Marchet et al., 2012, 2013). In this policy, a storage transaction first requests the lift and then, sequentially, the vehicle, while a retrieval transaction requests the lift and vehicle in a reverse order. For a retrieval transaction, the vehicle in the designated tier transports the retrieval load to the outbound buffer and then the transaction requests the lift. For a storage transaction, the lift transports the load to be stored from the I/O point to the inbound buffer of the designated tier, and then the transaction requests the vehicle. However, since the vehicle in a tier-captive configuration can only move in its designated tier, a parallel processing policy under which the transactions request the lift and the vehicle simultaneously, may perform better. Under such a policy, for a retrieval transaction, the vehicle transports the load to be retrieved to the outbound buffer and meanwhile, the lift moves to the designated tier. For a storage transaction, the lift transports the load to be stored to the inbound buffer of the designated tier. Meanwhile, the vehicle moves to the inbound buffer. Hu et al. (2005) have examined such a policy for a special type of automated storage/retrieval system-Split-Platform AS/RS (SP-AS/RS), in which the S/R machine consists of one vertical platform and N horizontal platforms. These systems differ from AVS/RSs, since the S/R machine can travel inside the aisles and take care of the vertical transport as well. In addition, it does not have a buffer area where the storage and retrieval loads can be hold temporarily. While Hu et al. (2005) use deterministic models, we formulate stochastic models to estimate the performance of tier-captive AVS/RSs, thereby taking into account the effect of waiting for the different resources.To analyze the system performance under the parallel processing policy, we formulate a fork-join queueing network (FJQN) where a transaction will be split into a horizontal movement task served by the vehicle and a vertical movement task served by the lift. Based on the decomposition method of fork-join queueing networks presented in Bolch (2006), we develop an approximation method to estimate the system performance. We validate the effectiveness of our fork-join queueing network using simulation. The results show that our analytical model is accurate for performance estimation. The results of the numerical experiments show that the system performance under the parallel processing policy is sensitive to the rack structure and the transaction arrival rate.The remainder of this paper is organized as follows: Section 2 presents related literature. Section 3 describes the system. In Section 4, we model the FJQN and introduce the methods applied for performance estimation. Section 5 contains the simulation validation and numerical experiments. Section 6 presents conclusions and future works.

@&#CONCLUSIONS@&#
This paper models and analyzes tier-captive autonomous vehicle-based storage and retrieval systems (tier-captive AVS/RSs), in which the vehicle can only visit its designated tier. Different from the tier-to-tier autonomous vehicle-based storage and retrieval systems (tier-to-tier AVS/RSs) in which the vehicle can visit all tiers, the tier-captive AVS/RSs are usually applied for handling small size loads, such as totes. In a tier-captive AVS/RS, the vehicle in the aisle processes the horizontal movement of the load, the lift mounted at the periphery of the rack processes the vertical movement of the load. Due to the variability of the vehicle fleet scale and the independence of the lifts and the vehicles, the system can process storage and retrieval transactions with high flexibility and responsiveness.Current studies assume sequential commissioning of the lift and vehicles. We propose a parallel processing policy for tier-captive AVS/RSs, under which the lift and the vehicles can serve a transaction simultaneously. To investigate the performance of the parallel processing policy, we formulate a fork-join queueing network in which a transaction will be split into a vertical task served by the lift and a horizontal task served by the vehicle. Then, we develop an approximate method based on the decomposition of fork-join queueing network to estimate the performance of the system, including the system response time for retrieval transactions, the expected waiting time of retrieval transactions in the external queue, the utilizations of the lift and vehicles.We build simulation models to validate the analytical model. The results show that the analytical model can accurately estimate the performance of tier-captive AVS/RSs under the parallel processing policy. We carry out numerical experiments to compare the system response time of sequential and parallel processing policies. The results show that the parallel processing policy outperforms the sequential processing policy in small size systems. Specifically, the number of tiers is less than 10. In such a system, the average improvement in system response time is at least 5.51 percent. The advantage of the parallel processing policy decreases with increasing rack height and aisle length.In large size systems, i.e., the number of tiers is larger than 10 and the ratio of the aisle length to the rack height is larger than 7, we can find a critical point of the retrieval transaction arrival rate. When the retrieval transaction arrival rate is less than this critical level, the tier-captive AVS/RS should follow the parallel processing policy. Otherwise, it should follow the sequential processing policy. We also investigate the performance of both sequential and parallel processing policies in a real case. Under the current retrieval transaction arrival rate, the system throughput can be improved by 2.11 percent by using parallel processing policy.In future work, it is interesting to investigate the performance of the parallel processing policy in tier-to-tier AVS/RSs. We can also examine storage transactions and investigate the effect of dwell point policies on the system performance.