@&#MAIN-TITLE@&#
A basis for the implicit representation of planar rational cubic Bézier curves

@&#HIGHLIGHTS@&#
We construct a basis for the implicit representation of planar rational cubic Bézier curves.We present an explicit formulation of the implicit polynomial coefficients.Barycentric formulas for the double point of the cubic curve are derived.A simple test for when unwanted branches occur is formulated.Conditions for the degeneration of cubics to conics are presented.

@&#KEYPHRASES@&#
Bézier curves,Rational cubic curves,Conic sections,Implicit representation,Singularity,Double point,

@&#ABSTRACT@&#
We present an approach to finding the implicit equation of a planar rational parametric cubic curve, by defining a new basis for the representation. The basis, which contains only four cubic bivariate polynomials, is defined in terms of the Bézier control points of the curve. An explicit formula for the coefficients of the implicit curve is given. Moreover, these coefficients lead to simple expressions which describe aspects of the geometric behaviour of the curve. In particular, we present an explicit barycentric formula for the position of the double point, in terms of the Bézier control points of the curve. We also give conditions for when an unwanted singularity occurs in the region of interest. Special cases in which the method fails, such as when three of the control points are collinear, or when two points coincide, will be discussed separately.

@&#INTRODUCTION@&#
Parametric curves are widely used in CAGD applications, especially in the ubiquitous rational Bézier and B-spline forms, due to their natural geometric properties. It is well known that all planar rational parametric curves can be written in implicit form (Sederberg and Chen, 1995); that is, as the zero set of a single bivariate polynomial function. The availability of both the implicit and parametric representations, which have properties complementary to each other, is important for various applications in CAGD, such as intersection and surface trimming algorithms. The increase in the presence of GPUs in commodity computers has also led to renewed interest in implicit representations for rendering applications (Loop and Blinn, 2005; Pfeifle, 2012). Since traditionally the design phase takes place using the parametric representation, a great deal of research has focused on implicitization – the conversion from the rational parametric, to the implicit form.Implicitization algorithms, both exact and approximate, have been investigated by many authors (e.g., Barrowclough and Dokken, 2012; Busé and Luu Ba, 2010; Chen and Wang, 2002; Corless et al., 2001; Dokken, 2001; Sederberg and Chen, 1995). The specific case of implicitization of planar rational cubic curves has also received particular attention. Sederberg et al. (1985) present a method which reduces the degrees of freedom in the implicit polynomial from nine to eight by introducing monoid curves. Floater (1995) makes a choice of basis that allows the implicit representation to be given in terms of only six basis functions – a reduction from the 10 basis functions required to represent all polynomials of total degree three. Floater also gives explicit formulas for the coefficients and conditions for when the curve degenerates to a conic.Despite being motivated by methods for sparse implicitization (Emiris and Kotsireas, 2005), the techniques in this paper more closely resemble those of Sederberg et al. (1985, 1995) and Floater (1995). The method describes how, in most cases, the implicit form of the curve can be defined in terms of only four basis functions. The basis functions are constructed from the control points of a rational cubic curve given in Bernstein–Bézier form. In addition, the coefficients which describe the implicit representation are shown to contain a lot of information about the geometry of the curve. We present an explicit barycentric formula for the position of the double point of the curve in terms of its control points, along with criteria for when the double point is considered ‘unwanted’. The important case of degeneration to conic sections is also treated. In the special case when three of the control points are collinear, the method fails; potential remedies for this will also be discussed.Although much of the paper will utilize a Cartesian system for describing and proving the results, the method is in fact independent of the coordinate system, and is stated in terms of purely geometric quantities. In addition, all of the formulas (except Eq. (16)), including the detection and location of singularities on the curve, can be implemented in exact rational arithmetic; that is, only the operations of addition, subtraction multiplication and division are required. This contrasts with other methods, which often require polynomial rootfinding to find the double point via the parametric representation (Floater, 1995; Loop and Blinn, 2005; Pfeifle, 2012; Thomassen, 2005). This is potentially useful in applications which require exact precision and also aids the speed of floating point implementations.There are several applications of implicit representations of rational cubic curves. These include resolution independent curve rendering, as in Loop and Blinn (2005), Pfeifle (2012), and intersection algorithms, as in Sederberg et al. (1985, 1986), Thomassen (2005). We also envisage great potential for the use of the techniques in this paper in surface trimming algorithms. A piecewise implicit representation of cubic trimming curves in the parameter domain will give a simple and accurate test for whether a point lies inside or outside the trimming region. The geometric formulas presented in this paper are also interesting from a theoretical perspective.The paper will proceed as follows. In Section 2 we present the construction of the basis we use for the cubic implicitization, and also present formulas for the coefficients which define the curve. Computation of the double point of the curve will be addressed in Section 3, and Section 4 will cover the case of cubics which degenerate to conic sections. The special case of collinear control points will be discussed in Section 5. Several examples will be presented in Section 6, which highlight the simplicity of the method. We conclude the paper with a discussion of the extension to higher degrees and further work in Section 7. Some extended proofs and basic geometric properties are deferred to the Appendices.In this section we describe the implicit basis functions and prove some simple facts such as invariance of the coefficients under affine transformations. We begin with some definitions.We assume that the planar rational cubic curve is given in Bernstein–Bézier form with control pointsc0,c1,c2,c3, and weightsw0,w1,w2,w3. That is, we have(1)p(t)=c0w0(1−t)3+c13w1(1−t)2t+c23w2(1−t)t2+c3w3t3w0(1−t)3+3w1(1−t)2t+3w2(1−t)t2+w3t3.In the parametric form, rational Bézier curves are normally rendered within a region of interest corresponding to the parameter valuest∈[0,1]. It is also common in the CAGD community to require that the weights are strictly positive. Although such a restriction is easier for us to work with, for the most part, it is not necessary; most of the methods we present also work with negative weights, zero weights and weights of mixed sign. However, due to the construction which follows, we do require that no three of the control points are collinear. It is important to note that this will be an assumption of all the results up to Section 5.In the following definition, we assume the control points are given in a Cartesian system,ci=(ci,0,ci,1).Definition 1We define the implicit equation of the line betweenciandcjto be given byLij(x,y)=0, whereLij(x,y)=|xy1ci,0ci,11cj,0cj,11|.We may refer loosely to ‘the lineLij’, meaning ‘the line defined by the equationLij(x,y)=0’. Note that the norm of the gradient ofLijis equal to the Euclidean distance between the pointsciandcj11The linear functionsLij, can in fact be characterized by the three conditions of vanishing atciandcj, and having constant gradient, proportional to the Euclidean distance between the points. However, for the sake of clarity, we proceed using the definition in the Cartesian system.:‖∇Lij‖2=‖cj−ci‖2.Definition 2We define a quantityλijkas follows:λijk=|ci,0ci,11cj,0cj,11ck,0ck,11|.For compactness of notation we defineλi=(−1)i+1λi+1,i+2,i+3where the indicesi+1,i+2andi+3are taken modulo 4. That is,(2)λ0=λ321,λ1=λ230,λ2=λ103,λ3=λ012.We also make the definitionui=(3i)wi,for each of the weights(wi)i=03of the rational cubic Bézier curve.Clearlyλijk=0if any of thei,j,k's are equal. The quantitiesλirepresent twice the signed areas of the triangles formed from the control points(ci)i=03, by omitting the pointci(i.e.,ci+1,ci+2andci+3). The areas,λi, are pictured with the corresponding weights,ui, in Fig. 1.The following definition describes the basis functions we use for the implicit representation:Definition 3We define four basis functions as follows:K0(x,y)=L01(x,y)L12(x,y)L23(x,y),K1(x,y)=L01(x,y)L13(x,y)2,K2(x,y)=L02(x,y)2L23(x,y),K3(x,y)=L03(x,y)3.A diagrammatic representation of these basis functions is shown in Fig. 2. To gain some intuition on the construction of these basis functions, an extended discussion is presented in Appendix C.The term ‘basis functions’ is used rather loosely in this context, since for any different collection of control points the ‘basis’ will be different. The function set provides a basis for any non-degenerate planar rational cubic Bézier curve with given control points, subject to no three points being collinear; that is, for any choice of weight combinations. Moreover, the basis functions are conceptually similar for all non-collinear collections of control points, although they do differ analytically. The proof of linear independence given in Theorem 16, together with the spanning property of Theorem 1, justifies the choice of the term ‘basis’ for this function set. However, the fact that the functions are dependent on the control points must be understood.In the following theorem we establish an explicit formula for the implicit representation of the rational cubic Bézier curvep(t), in terms of these basis functions.Theorem 1Suppose we are given a non-degenerate rational cubic Bézier curve,p(t), such that no three of the control points are collinear. Then the curve has the following equation defining its implicit representation:q(x,y)=∑i=03biKi(x,y)where(3)b0=−(λ12λ22U−u12u22Λ),b1=λ13λ3U−u13u3Λ,b2=λ0λ23U−u0u23Λ,b3=λ02λ32U−u02u32Λ.andU=∏k=03uiandΛ=∏k=03λi.Due to its length, we defer the proof of this theorem to Appendix B. It is interesting to note that the degrees to which theuis andλis appear in the coefficient formula (3), are closely related to the multiplicities of the basis functions(Ki)i=03at the vertices(ck)k=03.Proposition 2The coefficients(bi)i=03defined by(3)are invariant under affine transformations, up to a constant scaling.ProofFormally, suppose we are given a rational cubic Bézier curvep(t)with control pointsciand weightswi, whose implicit coefficients(bi)i=03are defined by (3). Then, for any affine map Φ, we claim that the implicit coefficients of the transformed curveΦ(p(t))are given by(αbi)i=03, for some non-zero constant α. Since affine transformations multiply areas by a non-zero constant, there exists a constant C such thatλ˜i=Cλiwhereλ˜iare the areas defined by control pointsc˜i, after the affine transformation (i.e.,c˜i=Φci, for eachi=0,1,2,3). Now, since the weightsuiare unchanged, and theλis appear homogeneously of degree four in the definition (3), we haveb˜i=C4bi, for each i.  □Since implicit representations are unchanged by non-zero scalar multiplication, we can clearly factor out the constantC4.One potential disadvantage of the method described in this paper, is that when the implicit equation is evaluated, samples are taken at the six different lines in the set{Lij(x,y):0⩽i<j⩽3}.This can, however, be reduced to three evaluations by some simple relations between the lines.Proposition 3Suppose we are given any four points(ci)i=03, with no three collinear. Then, usingDefinitions 1 and 2, we can write(4)λjLij(x,y)+λkLik(x,y)+λlLil(x,y)≡0,for any choice ofi,j,k,l∈{0,1,2,3}, with all indices distinct.ProofLetf(x,y)=λjLij(x,y)+λkLik(x,y)+λlLil(x,y).Thenf(cj)=λkLik(cj)+λlLil(cj)=±(λkλl−λlλk)=0,sinceLij(cj)=0, andλkLik(cj)andλlLil(cj)must have opposite signs, which depend on the orientation of i, j, k and l. Similarly,f(ck)=0andf(cl)=0. Thus, since f is a linear function which is zero at three non-collinear points, it must be identically zero.  □This proposition gives us an alternative method to evaluate some of the functionsLij. We assume that we are given the linesL01,L12andL23, corresponding to the lines in the control polygon. It can easily be shown, using (4), thatL02=λ3L23−λ1L12λ0,L13=λ0L01−λ2L12λ3,L03=λ1λ2L12−λ0λ1L01−λ2λ3L23λ0λ3.When using this method as a numerical technique, care should be taken to ensure a sufficient degree of numerical stability. For example, if the denominators become small, it may be better to choose a different set of three lines to evaluate on, or to compute each line evaluation explicitly. A similar method is used by Sederberg and Parry (1986), in order to simplify the symbolic expansion of the determinant required in their method.In the following definition we give three quantities which can be used to determine several characteristics of the geometry of the curve, such as when the curve degenerates, and in what region the singularity lies.Definition 4We define three quantitiesϕ1,ϕ2andϕ3as follows:ϕ1=u0u2λ12−u12λ0λ2,ϕ2=u1u3λ22−u22λ1λ3,ϕ3=u1u2λ0λ3−u0u3λ1λ2.These quantities are based on the coefficients(bi)i=03and we can write(5)b0=ϕ3u1u2λ1λ2,b1=ϕ1u1u3λ1λ3,b2=ϕ2u0u2λ0λ2,b3=ϕ3u0u3λ0λ3.We thus have a compact form of the implicit equation(6)q(x,y)=ϕ3(u1u2λ1λ2K0(x,y)+u0u3λ0λ3K3(x,y))+ϕ1u1u3λ1λ3K1(x,y)+ϕ2u0u2λ0λ2K2(x,y).There is also a relation between the three quantities given as follows:Proposition 4The following two equations hold:u3λ2ϕ1+u1λ0ϕ2+u2λ1ϕ3=0,andu2λ3ϕ1+u0λ1ϕ2+u1λ2ϕ3=0.The proof is a simple exercise in expanding polynomials after substituting the definitionsϕ1,ϕ2andϕ3. We therefore omit the details here.  □Since the curve is rational, there always exists a single double point in the form of a crunode, an acnode or a cusp. It is a surprising fact that the double point of a rational cubic curve with rational coefficients is necessarily rational, despite the fact that the corresponding parameter values may be irrational or complex. This was apparently first noticed by Sederberg et al. (1985, Theorem 1):“Every rational cubic curve defined by polynomials with rational coefficients has a double point whose coordinates are real and rational”.In this section we derive the equations of two lines which intersect at the double point, in terms of the coefficients we have already discussed. We give exact formulas for the location of the double point in terms of barycentric combinations of its control points. We also define a condition which detects when there is an ‘unwanted’ self-intersection in the region of interest.We first give some identities for the gradient which will be needed in the proofs in this section. From Definition 1 it is clear that we have∂∂xLij(x,y)=ci1−cj1,and∂∂yLij(x,y)=cj0−ci0.For compactness of notation we definecij⊥=(ci1−cj1cj0−ci0). Thus, using the product rule, we can write the gradients of the basis functions as follows:(7)∇K0(x,y)=c23⊥L01L12+c12⊥L01L23+c01⊥L12L23,∇K1(x,y)=c13⊥2L01L13+c01⊥L132,∇K2(x,y)=c02⊥2L02L23+c23⊥L022,∇K3(x,y)=c03⊥3L032.In addition, using (6), we can write the gradient function, ∇q, in the compact form(8)∇q(x,y)=ϕ3(u1u2λ1λ2∇K0(x,y)+u0u3λ0λ3∇K3(x,y))+ϕ1u1u3λ1λ3∇K1(x,y)+ϕ2u0u2λ0λ2∇K2(x,y).In this section we determine the location of the singularity in affine space. The following proposition deals with the case where the singularity occurs at one of the endpointsc0orc3.Proposition 5Let the control points and weights of a non-degenerate rational cubic Bézier curve be given, and assume that no three control points are collinear. Then the singularity occurs at the end pointc0if and only ifϕ2=0oru1=0. Similarly, the singularity occurs at the end pointc3if and only ifϕ1=0oru2=0.Since the functions(L0i)i=13, evaluated at the endpointc0are all zero, we have∇K2(c0)=∇K3(c0)=0. Thus∇q(c0)=c01⊥(L12(c0)L23(c0)(u12u22Λ−λ12λ22U)+L132(c0)(λ13λ3U−u13u3Λ))=c01⊥Λu12(u22λ1λ3−u1u3λ22)=−c01⊥Λu12ϕ2.Clearly this is zero if and only ifϕ2=0oru1=0, sincec0andc1are distinct. Similarly,∇q(c3)=0if and only ifϕ1=0oru2=0.  □In non-degenerate cases, except for those with the conditions above, we can derive the equations of two lines,S˜1andS˜2, which both intersect the singularity and eitherc0orc3.Proposition 6Suppose we have a planar rational cubic Bézier curve with no three control points collinear and non-zero weights. Suppose further that the double point of the curve is finite, and does not lie on either of the endpointsc0orc3. Define two equations as follows:(9)S˜1(x,y)=L02(x,y)u2ϕ1−L03(x,y)u1ϕ3=0,S˜2(x,y)=L13(x,y)u1ϕ2−L03(x,y)u2ϕ3=0.Eqs.(9)define two lines which intersect the end points of the Bézier curve,c0andc3respectively. Moreover, the lines intersect each other at the unique double point of the curve. The lines are also determined by the alternative equations(10)Sˆ1(x,y)=L01(x,y)u2ϕ1−L03(x,y)u0ϕ2=0,Sˆ2(x,y)=L23(x,y)u1ϕ2−L03(x,y)u3ϕ1=0.We can immediately see thatS˜1(c0)=0since, by definition, it is a linear combination ofL02andL03. Similarly,S˜2(c3)=0. It remains to show that both lines intersect at the double point of q.We now use both Eqs. (9) and (10), which can easily be shown to be equivalent, using Proposition 3. We must prove that both the implicit polynomial q and its gradient ∇q, vanish when these equations are satisfied. From (9) and (10) we infer that(11)L01=L03u0ϕ2u2ϕ1,L23=L03u3ϕ1u1ϕ2,L02=L03u1ϕ3u2ϕ1,L13=L03u2ϕ3u1ϕ2,and(12)L12=L23λ3−L02λ0λ1=L03(ϕ1u3λ3ϕ2u1λ1−ϕ3u1λ0ϕ1u2λ1).These are well defined since, by Proposition 5, we haveϕ1≠0andϕ2≠0, and the weights are non-zero. Thus, by (6), the formula for q becomesq(x,y)=ϕ3λ0λ3u0u3L033+ϕ3(ϕ1λ3u3ϕ2u1λ1−ϕ3λ0u1ϕ1u2λ1)λ1λ2u0u3L033+ϕ32λ1λ3u0u2u3ϕ2u1L033+ϕ32λ0λ2u0u1u3ϕ1u2L033,q(x,y)=L033λ3ϕ3u0u3ϕ2u1(ϕ2λ0u1+ϕ3λ1u2+ϕ1λ2u3),q(x,y)=0,by Proposition 4.In order to prove that∇q=0whenS1=S2=0, we substitute Eqs. (11) into the gradient identities (7). After expanding the formula (8), we can group together the coefficients ofcij⊥to write∇q=L032(ψ01c01⊥+ψ12c12⊥+ψ23c23⊥+ψ02c02⊥+ψ13c13⊥+ψ03c03⊥),whereψ01=ϕ3u0u3λ0λ1,ψ12=ϕ3u0u3λ1λ2,ψ23=ϕ3u0u3λ2λ3,ψ02=2ϕ3u0u3λ0λ2,ψ13=2ϕ3u0u3λ1λ3,ψ03=3ϕ3u0u3λ0λ3.The quantitiesψijcan be verified by writing out the coefficients. Thus, we can factor out the common factorϕ3u0u3, to get∇q=L032ϕ3u0u3(λ0λ1c01⊥+λ1λ2c12⊥+λ2λ3c23⊥+2λ0λ2c02⊥+2λ1λ3c13⊥+3λ0λ3c03⊥).Now, we can individually verify each of the followingλ0λ1c01⊥+λ0λ2c02⊥+λ0λ3c03⊥=0,λ2λ3c23⊥+λ1λ3c13⊥+λ0λ3c03⊥=0,λ1λ2c12⊥+λ0λ2c02⊥+λ1λ3c13⊥+λ0λ3c03⊥=0.Thus, summing the previous three equations, we must have∇q=0, proving the statement.  □The lines defined in Proposition 6 are shown in Fig. 3. It can be seen that the segments of the curve limited to the quadrants defined by the linesS˜1andS˜2, are non-singular. This is necessarily true due to rational cubic curves having only one singularity. The following theorem, which is a consequence of the previous proposition, gives the location of the singularity in the affine plane.Theorem 7Suppose that the double points, of a non-degenerate rational cubic curve, is not at infinity. Then the following barycentric combination of the four Bézier control points(ci)i=03determines its location exactly:s=c0λ1ϕ1ϕ3u22+12(c0λ0−c1λ1+c2λ2−c3λ3)ϕ1ϕ2u1u2−c3λ2ϕ2ϕ3u12λ1ϕ1ϕ3u22+12(λ0−λ1+λ2−λ3)ϕ1ϕ2u1u2−λ2ϕ2ϕ3u12.The formula can be simplified in a number of different ways, using the identities provided in the previous sections. For example, in the barycentric coordinate system defined byc0,c2andc3, we have(13)s=c0ϕ12u2u3−c2ϕ1ϕ2u1u2+c3ϕ2ϕ3u12ϕ12u2u3−ϕ1ϕ2u1u2+ϕ2ϕ3u12,or in the barycentric coordinate system defined byc0,c1andc3(14)s=c0ϕ1ϕ3u22−c1ϕ1ϕ2u1u2+c3ϕ22u1u0ϕ1ϕ3u22−ϕ1ϕ2u1u2+ϕ22u1u0.ProofThe formulas can be found by solving the linear equationsS˜1(x,y)=0andS˜2(x,y)=0, in a particular coordinate system. It is clear that all the formulas are barycentric combinations of the control points, by observing the coefficients in the numerator and denominator. In order to validate that s is the intersection of the two lines, we can simply evaluate the functionsS˜1andS˜2at s:S˜1(s)=u1ϕ2ϕ12u2u3−ϕ1ϕ2u1u2+ϕ2ϕ3u12(−S˜1(c2)ϕ1u2−S˜1(c3)ϕ3u1)=u1ϕ2ϕ12u2u3−ϕ1ϕ2u1u2+ϕ2ϕ3u12(−L03(c2)ϕ1ϕ3u1u2−L02(c3)ϕ1ϕ3u1u2)=0.We can similarly show thatS˜2vanishes at s, and thus, by Proposition 6, s is the unique double point of the curve.  □Of course, describing the singularity in terms of the control points may not be optimal with respect to numerical stability if the double point lies far from the region of interest, due to the denominator becoming small. However, information about the singularity is normally required only when it interferes with the region of interest of the curve. In these cases, the method performs very well.In complement to the previous section, it is also possible to derive formulas for the parameter values of the singularity in terms of the quantitiesϕ1,ϕ2andϕ3. For compactness of notation we first make the following definitions:Definition 5Φ1=ϕ1u2u3,Φ2=ϕ2u0u1,Φ3=ϕ3u1u2.Suppose we are given a non-degenerate rational cubic parametric curve with no three control points collinear. Then the parameter values of the double point are given by the solutions to the quadratic equationr(t)=0, where(15)r(t)=Φ1t2+Φ3t(1−t)+Φ2(1−t)2.ProofBy inserting the parametric formp(t), intoS˜1(and factoring out the denominator), we obtain a cubic polynomial whose three roots correspond to the two parameter valuest1andt2of the double point, and the parametert=0. After factoring out t from the polynomial we obtainr(t)=S˜1(p(t))/t, as given above. In the case thatϕ2=0,S˜1degenerates, however, we can simply follow a similar proof, usingS˜2instead.  □The polynomialr(t)is strictly quadratic except in the case whenΦ1+Φ2−Φ3=0. In the non-degenerate case, this condition corresponds to when at least one of the parameter values of the singularity is infinite. Whenr(t)is quadratic, it can be solved explicitly, to give the parameterst1andt2of the double point as(16)2Φ2−Φ3±Φ32−4Φ1Φ22(Φ1+Φ2−Φ3).In particular, we have the discriminantΔ=Φ32−4Φ1Φ2, which defines whether the curve has a self-intersection (Δ>0), a cusp (Δ=0), or an acnode (Δ<0). This appears to be similar to the discriminant described by Stone and DeRose (1989).The lack of symmetry in formula (16) above is due to Bernstein polynomials being defined over the interval[0,1], as opposed to an interval which is symmetric about 0, such as[−1,1].The parameter values of the double point can occur in several ways. If the two parameters are real and distinct, then a self-intersection occurs; in the case that the two parameters are equal, we have a cusp; and parameter pairs which occur as complex conjugates give rise to isolated singular points, or acnodes.When the curve is given in rational Bézier form, the region of interest is the parameter interval[0,1]. If the parameters of the singularity both lie within the interval[0,1], the self-intersection is normally an intended product of the designer. If the parameters both lie outside the interval[0,1], this means there will be no singularities in the region of interest; again, this is normally intended by the designer. The case where one parameter lies within the interval and one lies outside is what we term an unwanted self-intersection or unwanted singularity. Fig. 4shows the three cases. When the parametric representation is used the unwanted case is not normally distinguished, since the curve is only plotted in the region of interest in the parameter domain. However, using implicit representations, it is more difficult to avoid plotting the curve without the unwanted branch and self-intersection, since a 2D region of rendering must be chosen.It is possible to detect the presence of unwanted singularities by directly analysing the coefficientsΦ1andΦ2. In Floater (1995), a method is presented to detect unwanted singularities in special cases, which essentially correspond rational cubic Bézier curves which form simple arches (Pfeifle, 2012). The following proposition gives a condition to detect unwanted singularities in all non-degenerate cases. We make the condition that a singularity with infinite parameter values is not classified as unwanted so that we can assume thatΦ1+Φ2−Φ3≠0.Proposition 9Let the control points and non-zero weights of a non-degenerate rational cubic Bézier curve be given, such that no three control points are collinear. Then there exists an unwanted singularity in the region of interest if and only ifΦ1Φ2<0.ProofThis can be proved by observing thatr(t)is a quadratic polynomial in Bernstein form, with coefficientsΦ1,Φ3/2andΦ2, and by the properties of Bernstein polynomials.(⟸) Assume first thatΦ1andΦ2have opposite signs. Then, by observing the discriminant, we always have two real roots. Sincer(0)=Φ2andr(1)=Φ1, we know there is a root in[0,1]by the intermediate value theorem. We also know that there must be a root outside[0,1], because, since it is quadratic,r(t)must have the same sign asr(−t)asymptotically. Thus an unwanted self-intersection occurs (cf. Fig. 4(c)).Assume now thatΦ1andΦ2have the same sign. Since we are only interested in cases of self-intersection, where we have two distinct real roots, we consider the two cases,Φ3>4Φ1Φ2andΦ3<−4Φ1Φ2. In one of the cases, all of the Bernstein coefficients ofr(t)have the same sign, so, by the variation diminishing property, both roots must be outside[0,1]. In the other case,Φ3has opposite sign toΦ1andΦ2, so the derivatives of r att=0andt=1must have opposite sign. Again, by the intermediate value theorem,r′(t)=0for somet∈[0,1], thus both roots ofr(t)must be in[0,1]. Thus either we have a singular or non-singular segment (cf. Fig. 4(a) and (b)).(⟹) Assume first thatr(t)has one root in[0,1]and one outside[0,1]. Then clearly,r(0)=Φ2must have opposite sign tor(1)=Φ1.Assume that both roots are in[0,1]. Thenr(0)=Φ2must have the same sign asr(1)=Φ1. This is similarly the case if both roots are outside[0,1].  □Of course, in the standard case that all weights are positive, we can use the simplified conditionϕ1ϕ2<0in Proposition 9.Loop and Blinn (2005) use subdivision at the parameter values of the singularity in order to remove the unwanted branch. Their method involves solving a quadratic polynomial for the parameter values of the self-intersection and then running the de Casteljau algorithm for the subdivision. The results of this section suggest an alternative method to remove the singularity. If, according to Proposition 9, we detect an unwanted singularity, we can use the lines defined in Proposition 6 to render non-singular segments of the curve. Such an approach is pictured in Fig. 3 (right). This would appear to be advantageous since we avoid the necessity of dealing with two separate curves, and also avoid computing the parameter values of the singularity. Additionally, exact rational arithmetic can be used since we do not need to solve any polynomial equations.In this section we describe necessary and sufficient conditions for the degeneration of the rational cubic curve to a conic section. Some of the results of this section are similar to those of Wang and Wang (1992) and we use Theorem 1 from that paper in the proof of Theorem 11 below.22In the notation of Wang and Wang (1992) the quantities(Si)i=03are equivalent to the quantities(λi)i=03in this paper. In addition, it should be noted that while the result of Theorem 2 in Wang and Wang (1992) is restricted to strictly positive weights, the results of Theorems 1 and 3 are general for any non-zero weights.We first state a lemma which holds for any rational cubic Bézier curve p, including when it degenerates to a conic.Lemma 10Letq2(x,y)=u0u3L03(x,y)2−u1u2L01(x,y)L23(x,y). Then for any rational cubic Bézier curvep(t), given by(1), we haveq2(p(t))=t2(1−t)2w(t)2r(t),wherer(t)is given by(15).We defer the proof of this lemma to Appendix B. The following theorem defines necessary and sufficient conditions for conic degeneration of the rational cubic curve.Theorem 11Suppose all the weights(wi)i=03are non-zero and no three of the control points are collinear. Then the rational cubic Bézier curve degenerates to a conic if and only ifϕ1=0andϕ2=0.ProofAssume that the rational cubic curve degenerates to a conic section. Then by Theorem 1 in Wang and Wang (1992) we haveu0λ1u1λ0=u1λ2u2λ1=u2λ3u3λ2.By a simple rearrangement of these equations it is clear that we haveϕ1=0andϕ2=0.Assume now thatϕ1=0andϕ2=0. Then, by Proposition 4, we haveϕ3=0and thereforer(t)≡0by definition. Therefore, by Lemma 10, we haveq2(p(t))≡0, which shows thatq2is the implicit representation of p. Sinceq2is a quadratic function, the rational cubic curve must degenerate to a conic.  □A consequence of the previous propositions, and the linear independency of the basis functions (see Appendix B), is as follows.Corollary 12Suppose that no three control points are collinear and the weights are non-zero. Then the following three statements are equivalent:1.the rational cubic curve degenerates to a conic,the coefficients(bi)i=0are all zero,the implicit polynomial q vanishes identically.(1)⟹(2): By Theorem 11 we haveϕ1=ϕ2=0, and thusϕ3=0by Proposition 4. Then, by definitionbi=0fori=0,1,2,3.(2)⟹(3): Trivial.(3)⟹(1): By the linear independence of the basis functions, the coefficients must all be zero. Then, since theλis anduis are non-zero, we haveϕ1=ϕ2=0. The result follows from Theorem 11.  □Since the implicit polynomial q vanishes identically when the rational cubic curve degenerates to a conic, we need an alternative definition to represent this case implicitly. Another immediate consequence of Theorem 11 gives such a representation.Corollary 13If the rational cubic curvep(t)degenerates to a conic section then its implicit representation is given by the equationq2(x,y)=u0u3L03(x,y)2−u1u2L01(x,y)L23(x,y)=0.The proof is immediate from Lemma 10 and Theorem 11.  □Class conditions for when the conic section represents an elliptic, a parabolic or a hyperbolic segment, are described by Wang and Wang (1992, Theorem 3). For completion, we state the results of that theorem here. Define two quantitiesY1andY2such thatY1=‖c1−c⁎‖‖c0−c1‖,Y2=‖c2−c⁎‖‖c3−c2‖,wherec⁎is the point of intersection of the linesL01andL32. IfL01andL32are parallel, we takeY1=Y2=∞. From these quantities we define a numberη2such thatη2=14Y1Y2.The theorem then says that the curve is an ellipse whenη2<1, a parabola whenη2=1or a hyperbola whenη2>1. The proof of that result requires only that no three control points are collinear, and is hence general enough to encompass the case of curves with non-convex polygons and negative weights.As emphasised earlier, the method fails when any three of the four control points are collinear, including the case when two of the points are coincident. In the collinear case, the basis functions(Ki)i=03are no longer linearly independent, and thus do not provide a basis for the curve. One remedy for this is to subdivide the curve using the de Casteljau algorithm, and treat the two subdivided curves separately. In the case of coincident points, two subdivisions may be necessary to completely remove the collinearity.So far, all the methods in this paper have been independent of the parametric form, and it would be nice to find a method of dealing with these cases without resorting to parametric subdivision. Unfortunately, explicit methods which incorporate all collinear configurations seem to be rather more complicated than the simple methods presented in this paper. It appears that different configurations of points require different basis functions and coefficients. For example, end point coincidence (c0=c3), mid point coincidence (c1=c2) and mixed point coincidence (c0=c1, orc2=c3, orc0=c2, orc1=c3) all appear to require separate treatment. In addition, there are also several cases of collinearity to consider.Experimentally, it appears that the following basis functions support all cases, including collinear and coincident control points.L033,L01L132,L022L23,L01L12L23,L12L032,L02L23,L01L13.However, the explicit formula for the coefficients no longer holds, and the symmetries that were apparent earlier in this paper, appear to be lost. Due to the number of different cases and the comparative complexity of an explicit formula when trying to incorporate collinear points, we feel that parametric subdivision of the curve is currently the best option. However, this is the subject of ongoing research.It may be noted that the test for cases of collinearity is not a difficult one. Since, during the implicitization we are using theλis as coefficients, if one is computed to be zero, we can instruct the algorithm to deal with that case appropriately. In the case of running the algorithm in floating point precision, we would specify collinearity to within given tolerance.In the preceding sections we have mostly assumed that the weights are non-zero. In the CAGD community, it is fairly common to define rational Bézier curves as having non-zero, or positive weights. Indeed, if we allow some of the weights of a rational cubic curve to be zero, the curve often degenerates to a conic or a line. In such cases it would be better to model the curve as a lower degree parametric curve. However, if eitherw1=0orw2=0(but not both), then the curve does not degenerate to a conic section. These cases were treated in Proposition 5. The implicit representation given by Theorem 1, is still valid in these cases.When the curve has control points which are close to collinear, or the curve is close to a degenerate conic, issues with numerical stability need to be considered. Heuristically, it seems that issues with numerical stability are not too great; the methods appear to work well even when these ‘close to degenerate’ cases occur. However, when implementing in a given floating point precision, the tolerances required to define when a case is considered degenerate should be investigated further.In this section we consider several examples for which the computations can easily be done by hand. Fig. 5shows five different curves with various properties. We also include cases which fail using the general method and need to be treated separately.For simplicity, the control points of the first three examples of Fig. 5 are rearrangements of the points(0,0)T,(0,1)T,(1,1)Tand(1,0)T. For each case we compute the quantities(λi)i=03and(ϕi)i=13, the coefficients(bi)i=03, the double point s, and whether or not the curve exhibits an unwanted singularity. In this section we describe the first example in detail.We havec0=(00),c1=(01),c2=(11),c3=(10),andw0=w1=w2=w3=1.The quantitiesλiare thus all equal to ±1 and we haveu0=u3=1andu1=u2=3. Using the formula (5), we obtainϕ1=−6,ϕ2=−6andϕ3=−8and thusb0=72,b1=−18,b2=−18,b3=8.The double point of the curve can be computed from (13) ass=−324(1,1)T+432(1,0)T216=(12,−32).Clearly the double point does not lie within the convex hull of the control points. For the implicit equation in a Cartesian system we can writeq(x,y)=72x(y−1)(x−1)−18x(1−x−y)2−18(x−y)2(x−1)+8y3.Sinceϕ1ϕ2>0, we know, by Proposition 9, that there is no unwanted branch in the region of interest.We summarize the quantities for the five examples of Fig. 5, in Table 1. Note that in the third example we have a double point at infinity. In this case, the denominator in the formula (13) vanishes, as expected.This is the fourth example of Fig. 5. Having detected that bothϕ1=0andϕ2=0, Theorem 11 tells us we have a conic section. We thus use the formula of Corollary 13 for the implicit representation. This gives,q(x,y)=u0u3L03(x,y)2−u1u2L01(x,y)L23(x,y),q(x,y)=y2+9(x−y/3)(x+y/3−1).Since we have a conic section the double point computations are not applicable.Using the conic class conditions for this example we computeY1=Y2=1/2, which givesη2=1. This shows that we have a parabola, which is consistent with the curve pictured in Example 4 of Fig. 5.As mentioned previously, the result of Theorem 11 is not restricted to convex polygons with non-negative weights. Consider, for example, the curve pictured in Fig. 6, which is given by the control pointsc0=(1/20),c1=(01),c2=(11/2),c3=(00).Using the results of Theorem 11, we can find a real conic section corresponding to these points. Without loss of generality, we can assumeu0=u3=1(Farin, 2002). Using this assumption, we can solve the equations of Theorem 11 for the remaining weights. We thus obtainu1=λ1(λ02λ3)1/3=−(1/48)1/3,u2=λ2(λ0λ32)1/3=−(2/9)1/3.The weights corresponding to the real cube roots of these quantities determine the conic pictured in Fig. 6. By construction, we haveϕ1=ϕ2=0. The implicit equation is given byq(x,y)=124((−2x−y+1)(x−2y)+6y2).It should be noted that this construction can be used to determine a real conic section corresponding to any set of control points such that no three are collinear. The proof of the conic class conditions in Wang and Wang (1992) is also fully general to control polygons with no three collinear control points. In our example, we haveY1=4/5,Y2=3/5,η2=25/48<1,thus confirming that we have an ellipse.The disappearance ofλ1in the example pictured in Fig. 7indicates that a collinearity occurs betweenc0,c2andc3. For this example, the weightswiare all assumed to be equal to 1. We see that there appears a linear dependency in the basis functions, betweenK2andK3, and the coefficientsb0andb1become zero. Following the suggestion of Section 5, we therefore subdivide the curve a single time, at the parameter valuet=1/2. This gives two curves with the following control pointsc1,0=(00),c1,1=(01/2),c1,2=(1/81/2),c1,3=(5/163/8),andc2,0=(5/163/8),c2,1=(1/21/4),c2,2=(3/40),c2,3=(10).These can each be treated in the same way as the previous examples, finding in both cases thats=(−8,36)T; an acnode.It may be noted that although the implicit equation vanishes identically, the double point can still be computed without subdivision if we choose the correct formula; that is by choosing the barycentric formula (14), with respect to the three non-collinear pointsc0,c1andc3. We then gets=−243/2(0,1)T+27(1,0)−27/8=(−836).For this example we use the control points for the curve pictured in Fig. 3, given byc0=(1/40),c1=(9/81/2),c2=(13/163/4),c3=(17/3219/24),withw0=w1=w2=w3=1. Using the same computations as in the previous examples we get(λi)i=03=(11/192,15/64,53/96,3/8),(bi)i=03=(312435/4194304,−66285/2097152,220957/18874368,1441/1048576),(ϕi)i=13=(−491/4096,379/3072,131/2048),s=(363241/470596,146294/352947),ϕ1ϕ2=−186089/12582912.The negative value ofϕ1ϕ2indicates that we have an unwanted singularity, the location of which is given by s. Since the curve exhibits an unwanted singularity, we compute the linesS˜1andS˜2, which intersect the double point:S˜1(x,y)=965/8192x−1215/8192y−965/32768,S˜2(x,y)=−12773/49152x−10865/65536y+17649/65536.For a given point(x,y), we can then use boolean operations on the signs ofq(x,y),S˜1(x,y)andS˜2(x,y)in order to define which points lie ‘inside’ and ‘outside’ the curve.

@&#CONCLUSIONS@&#
