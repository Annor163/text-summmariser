@&#MAIN-TITLE@&#
Evolutionary algorithms for de novo drug design – A survey

@&#HIGHLIGHTS@&#
De novo drug design supplies novel molecules for drug development.In de novo drug design multiple parameters are optimized.Evolutionary algorithms are used for multi-objective optimization.Evolutionary algorithms used in de novo drug design tools are analyzed here.

@&#KEYPHRASES@&#
De novo drug design,Evolutionary algorithm,Genetic algorithm,Multi-objective optimization,Computer-aided drug design,Soft computing,

@&#ABSTRACT@&#
The process of drug design and discovery demands several man years and huge investment. Computer-aided drug design (CADD) technique is an aid to speed up the drug discovery process. De novo drug design, a CADD technique to identify drug-like novel chemical structures from a huge chemical search space, helps to find new drugs by the optimization of multiple pharmaceutically relevant parameters required for a successful drug. As the search space is very large in the case of de novo drug design, evolutionary algorithm (EA), a soft computing technique can be used to find an optimal solution, which in this case is a novel drug. In this paper, various EA techniques used in de novo drug design tools are surveyed and analyzed in detail, with particular emphasis on the computational aspects.

@&#INTRODUCTION@&#
Discovering a drug is a lengthy and expensive process, taking over a decade and costing about 1 billion US dollars [1]. Particularly, the need to optimize multiple objectives simultaneously makes drug discovery a very challenging process. Traditionally, drugs have been discovered by searching through the natural products and synthetic chemical libraries of biologically active molecules. But nowadays, soft computing techniques are employed in the search for novel drugs resulting in smaller cost and reduced time [1,2].Use of computers for drug design (computer-aided drug design, CADD) has resulted in several successfully marketed drugs, such as Captopril, Zanamivir, and Oseltamivi [3,4]. Particularly, the use of structure-based drug design (SBDD) technique is a popular and useful method, where drugs are designed in silico based on their interaction with the target protein in three dimensions. The in silico designed drugs, with optimized interaction with the target protein, are then synthesized in the lab and tested in vitro/in vivo for biological activity. The CADD process not only helps in minimizing the number of drugs actually synthesized and tested for identifying biologically active molecules, but also helps in identifying drugs which can be orally administered and has negligible toxicity. In summary, CADD helps to speed-up the overall drug discovery process and helps to find new drugs for diseases in a faster and cheaper way.The term “De novo” is the latin word meaning “from the beginning”, “afresh” or “anew”. De novo drug design, a computer-aided drug design (CADD) technique, designs drug molecules from scratch, and hence the name “De novo”. It provides better exploration of chemical space and helps in finding novel chemical structures for drug development, which cannot be found in any known chemical databases (natural products or synthetic chemical libraries). Hence the identified molecules/drugs will be unique in nature [5,6].The first de novo drug design tool LEGEND was published in 1991, and currently over two dozens of such tools are known. The tools namely LigMerge [7], LEGEND [8], LUDI [9,10], SPROUT [11], BREED [12], and PRO_LIGAND [13] use structure-based drug design technique to derive new molecules. Among these tools, LEGEND uses atom by atom construction and the rest use fragment by fragment construction of the molecule/drug. The tools NEWLEAD [14] and PhDD [15] use ligand-based drug design technique to derive the new molecules. In addition to these tools, simulated annealing technique has been used in tools such as CONCERTS [16], SkelGen [17] and MOLig [18] using AMOSA [19]. Tools such as LigBuilder [20], LEA [21], ADAPT [22], PEP [23], SYNOPSIS [24], LEA3D [25], GANDI [26], TOPAS [27], Flux(1) [28], FLUX [29], MEGA [30] and EvoMD [31] use evolutionary algorithm for the drug design process, which forms the subject of this review.De novo drug design requires optimization of several objectives simultaneously and independently to obtain an optimal solution. In this respect, evolutionary algorithm, a soft computing technique, is a problem-independent search technique, which could be applied to a variety of optimization problems from robot behavior to drug design and discovery [2]. Hence, evolutionary algorithm has been used extensively for the past 15 years for finding the optimal solution in de novo drug design. This paper surveys the developments in the field of de novo drug design, with particular emphasis on the evolutionary algorithms involved in the design. Though there are few excellent reviews related to CADD [32–34], and the application of soft computing techniques in drug discovery process [2], they lack the coverage of all the de novo design tools available to date which utilizes evolutionary algorithms [5,6,35].The rest of the paper is organized as follows: Section 2 describes the concept of de novo drug design, Sections 3–5 deal with evolutionary algorithm techniques and their types. Section 6 describes in detail the computational approaches used in various de novo drug design tools and Section 7 summarizes them. Finally, Section 8 concludes the paper.In de novo drug design, the drug molecules are constructed in two ways, using either atoms or molecular fragments [6,35]. When the drug is constructed by the atom based method, the chemical search space is huge and it is possible to arrive at a number of novel chemical structures. However, atom based method not only requires more time to construct these novel structures, but also results in a number of molecules which are not synthesizable.Fragment based method, the preferred drug construction route in many de novo drug design tool is carried out by assembling fragments. The molecular search space is comparatively lesser and the solutions obtained have better ADME (Absorption, Distribution, Metabolism and Excretion) properties and notable diversity. De novo drug design is to generate novel molecular structure with desired biological activity and match the binding pattern of the biological target. Based on the binding pattern, there are two different de novo design techniques: Structure-based and ligand-based methods [6,35]. The overall classification of de novo drug design is shown in Fig. 1.Structure-based de novo drug design develops new ligands using information from the three dimensional (3D) structure of a protein target without the prior knowledge of other ligands. A common structure-based design strategy is to construct the molecule directly in the binding site of the target protein and evaluate the quality of the designed molecule by calculating the interaction energy with the target protein. While, in the ligand-based de novo design, the protein target structure is not known and the new molecule is constructed based upon similarity to a known ligand molecule.An evolutionary algorithm (EA) is a population-based metaheuristic optimization algorithm inspired by the concepts of biological evolution such as reproduction, mutation, recombination and selection. They are randomized and stochastic techniques which simulate the evolutionary pressure of selection to select high fit individuals and use the evolutionary operators “crossover” and “mutation” to evolve better individuals. EAs generally start with a set (population) of random candidate solutions called individuals or chromosomes. In case of de novo drug design, chromosomes are represented by candidate chemical compounds. Evolutionary algorithms use the scoring function or the fitness function over the current population to determine the quality of the candidate solutions. Various selection methods such as “Roulette wheel”, “Tournament”, and “Rank” selection are used to populate the right candidates into the mating pool, where they are subjected to crossover and mutation. The crossover operator combines the genetic traits of two individuals (parents) and produces a new offspring. A mutation event introduces new piece of information into an existing population. Thus, the crossover and mutation operators provide variations among the current population and evolve better and better solutions. The evolution process continues till user-specified termination criterion.There are four major evolutionary algorithmic techniques. They are: genetic algorithm, genetic programming, evolutionary programming and evolutionary strategies. Apart from this classification, other swarm based algorithms [36] are also evolutionary in nature and get the idea from the collective behavior of Animals, Microbes, etc. Since most of the de novo drug design are based on genetic algorithm and evolutionary strategy, the following subsection deals with these concepts only.A genetic algorithm [37] is a search heuristic that mimics the process of natural selection and takes idea from Darwinian evolution. This is the most popular evolutionary algorithm technique. This heuristic is routinely used to generate useful solutions for optimization and search problems. The steps in GA are: initial population generation, fitness function evaluation, selection and breeding using genetic operations like crossover and mutation and check for termination conditions. Multi-dimensional optimization problems can be solved with the help of GAs where the different variables being optimized are encoded as bit vectors also termed as chromosome.Evolutionary strategies (ES) is an EA technique using the adaptation and evolution concepts. In ES, the representation is problem-dependent. It uses mutation and selection in its iterations till a user-defined termination condition is reached. In contrast to GA, selection in ES is based on the fitness ranking instead of fitness values. The evolutionary strategy operates on the parent and the result of its mutants. The ES is (1,1)-ES when the parent is replaced by a comparatively better fit mutant. In (1,λ)-ES, λ mutants are generated and compete with the parent, wherein the best mutant becomes the parent of the next generation. As a result the current parent is disregarded.Evolutionary algorithms can be used to solve both single-objective and multi-objective problems [38]. Normally drug design is a multi-objective problem as it has to satisfy various objective functions like biological activity, oral bioavailability and synthesizing feasibility, etc. Further the objectives are said to be conflicting when optimizing a solution for one objective leads to compromising another objective. In such cases, multiple equivalent solutions called Pareto optimal set that satisfy all the objectives to an acceptable level are explored and selected by the user. A Pareto optimal set is a set of solutions that are non-dominated with respect to each other. Basically there are three methods for approaching the multi-objective optimization problem [39]. They are:1.Weighted sum approachAltering objective function approachPareto ranking approachesIn the weighted-sum-approach, a weight is associated with each objective function and a weighted sum of the objectives is the new composite objective function for the multi-objective problem. Though it is a straightforward method, determining the appropriate weight is the challenge. The second approach uses different objective functions alternating randomly between generations or divides the population into sub-populations and uses different objective functions in each sub-population. This is not very effective and tends to converge with a skew in the optimization of the multiple objectives. The third approach utilizes the concept of Pareto dominance in evaluating the fitness of an individual. The individual fitness is not the true fitness value but is based on the rank of the individual in a population computed according to a dominance rule. Well known multi-objective optimization algorithms are SPEA, NSGA, etc.[40].Several evolutionary techniques have been used for de novo drug design, varying in their type, representation, fitness evaluation, operator selection, etc. Among them the mainly used EA techniques in de novo drug design tools fall in these categories: genetic algorithm, evolutionary strategies and evolutionary graphs. Genetic algorithm, one of the major EA technique is used in the tools such as LigBuilder [20], LEA [21], ADAPT [22], PEP [23], SYNOPSIS [24], LEA3D [25] and GANDI [26]. Evolutionary strategy is employed by the tools such as TOPAS [27], Flux(1) [28] and FLUX [29]. Evolutionary graphs, in which the candidate solutions are encoded using molecular graphs are used in the tools MEGA [30] and EvoMD [31]. Each tool is analyzed in detail in this section.The tools that use genetic algorithms for de novo drug design are discussed in this subsection.LigBuilder [20] is a multi-purpose structure-based de novo drug design tool that builds up ligands from a fragment library in a stepwise manner. The fragments are stored in SYBYL MOL2 format [41]. To build the molecular structures, operations such as growing, linking and mutations are implemented. Options to choose either growing or linking strategies for ligand construction are provided.LigBuilder has three modules: POCKET, GROW and LINK. POCKET module reads the target protein, analyzes and derives key interaction sites within the binding pocket, and then prepares the necessary data for GROW and LINK modules.Unlike other tools, chemical structures are directly represented as chromosomes in LigBuilder. For generating the initial population, different fragments are added to the growing site on the seed structure. As a first step, elitism is used based on a user defined elitism ratio for generating the new population. Rest of the new population is generated from the molecules (considered as seed structures) in the mating pool. Then, LigBuilder randomly selects a growing site on these seed structures and adds a fragment from the building-block library, to generate the new population. To improve the ligand binding affinity (ability of the ligand to bind to the target protein), a smart mutation operator, which allows carbon, nitrogen, and oxygen atoms of the molecules with the same hybridization state to mutate to each other is used.The fitness function used for evaluating the generated molecule is a combination of binding affinity score (ΔGbind) and bioavailability score. Binding affinity score, a linear scoring equation (1) is given by:(1)ΔGbind=ΔGvdw+ΔGH-bond+ΔGhydrophobic+ΔGrotor+ΔG0where ΔGvdw refers to the contribution of van der Waals interaction between the protein and the ligand, ΔGH-bond refers to the contribution of hydrogen bonding, ΔGhydrophobic refers to the contribution of hydrophobic interaction, ΔGrotor is the entropy loss due to the freezing of rotatable bonds in the ligand and ΔG0 is a constant.Bioavailability score is calculated based on the Lipinski's rule of 5. The rule suggests that a molecule is most likely to be orally bioavailable if it has(i)less than 5 hydrogen bond donors (the sum of OHs and NHs),less than 10 hydrogen bond acceptors (the sum of Os and Ns),a molecular weight less than 500Da andan octanol–water partition coefficient (logP) less than 5.Roulette wheel selection is applied to select members to the mating pool. The parents are selected in such a way that they are diverse, which is evaluated by a 3D similarity score. A user defined maximum similarity score is used to select the parents to the matting pool. The 3D similarity between two molecules, e.g. A and B, is given by Eq. (2).(2)SAB=num_matchnum_A+num_B−num_matchwhere num_A and num_B refer to the number of heavy atoms in A and B respectively and num_match refers to the number of matched atom pairs. Two atoms are considered to match if they are of the same atom type and overlap each other.LigBuilder ranks the final population of molecules as per the fitness values in the descending order and the top molecules will be selected as the final results, based on user defined criteria. The overall GA implementation of LigBuilder is shown in Fig. 2.LEA (Ligand by Evolutionary Algorithm) [21] is used to design small drug molecules that satisfy a quantitative structure–activity relationship (QSAR) based rules (fitness function). The tool uses an initial set of fragments, which are iteratively improved by applying crossover and mutation operators on them.The chromosome representation in LEA uses SMILES (Simplified Molecular Input Line Entry System) line notation [41], which is a linear notation for molecules, having a series of characters without spaces. In LEA, physico-chemical properties of molecules are used to calculate the fitness function of the molecules. This includes indicative constraints (can be unsatisfied), and imperative constraints (cannot be unsatisfied) like a correct valency (number of bonds atoms can form with other atoms).In LEA, the parent selection is done using the roulette wheel selection. Crossover and mutation are randomly selected using a roulette wheel selection. The probability of mutation and the probability of crossover are either initially fixed or modulated by an adaptation strategy. In the adaptation strategy, the probability of a mutation increases (and the probability of a crossover decreases) if the average fitness is improved in the last breeding step by the mutation operator, otherwise the probability decreases. Two crossover operators (one-point and two-point crossover) and 13 mutation operators are employed in LEA. Fig. 3shows some of the mutation operators implemented in LEA.ADAPT [22] is a tool that uses GA for carrying out structure-based de novo drug design. It builds the molecules as acyclic graphs of fragments and uses crossover and mutation to build molecules. Flexible docking (in silico prediction of preferred orientation of a molecule/drug in the target/protein active site) calculations are used to evaluate (fitness function) the molecules generated.Here the molecules are represented as acyclic graph consisting of utmost 16 fragments. The fragments are defined by the user via an adapted subset of the SMILES line notation. Each fragment can have a maximum of 8 user-defined points to which other fragments can be attached.Fitness evaluation in ADAPT is performed by the DOCK4.0 [42] program. DOCK4.0 gives an estimate of the steric and energetic fitness (a measure of the ability of the molecule to interact with the target/protein in a favorable manner) of a ligand to a receptor site in the form of Sdock score, taking into account the ligand flexibility. The overall fitness of the molecule (Eq. (3)) is simply the linear sum of each fitness measure multiplied by its user-defined coefficient.(3)Fitness=CdockSdock+CmwSmw+CrotSrot+ChbondShbond+CclogpSclogpwhere Cnis the coefficient for score Sn, dock is for docking, mw is the molecular weight, rot for rotational bond, hbond is the hydrogen bond and clogp is for the liphophilicity value (the ability of a molecule to dissolve in fats/lipids). The total fitness score of each molecule is saved and if an identical molecule is created via breeding, the score for the newly created compound is recalculated.The parents for the crossover are chosen via an ‘elitist’ mechanism. The implementation of crossover in ADAPT is analogous to a ‘single-point’ crossover and it is done by swapping a subset of nodes between two graphs. Mutation operator can occur to either the identity of the nodes (atom position) or to the connectivity (bond connection) of the graph. The ADAPT cycle will stop after a set number of generations or if the fitness does not improve or the tool has found a molecule (individual) with better fitness than a defined goal.PEP stands for Program to Engineer Peptides [23]. It uses docking (structure-based) to design new peptide like molecules through a build-up approach, where a seed structure is used to grow the molecule iteratively by adding amino acids. The initial seed is usually obtained from the X-ray crystal structure of a known inhibitor complexed with the target. The fragment library uses amino acids (natural and/or non-natural), which includes information regarding atom types, atomic partial charges, covalent bonds, and a list of rotatable dihedrals for each amino acid.In PEP, each gene in the chromosome is encoded with the values of the angles of rotation around the rotatable bonds of the added amino acid residue. For constructing the molecule, a new conformation of an amino acid from the fragment library is added to the seed structure and optimized using GA. When the newly added amino acid bumps into the protein, that amino acid conformation has an unfavorable van der Waals energy contribution, whereas its binding energy is favorable when it grows away from the binding site. Hence the in vacuo binding energy indicates the quality of the interactions between last added amino acid and the protein. Successive growth generates peptides that are lengthened by one amino acid residue and the process terminates when the user-defined peptide length is reached.The in vacuo binding energy is the sum of the intra-ligand and intermolecular energies and is calculated for each new conformation of the flexible amino acid added to the seed. The total energy is calculated as shown in Eq. (4).(4)Etotal=EvdWinterm+Eelect,rdielinterm+EvdWligand+Eelect,rdielligand+EstrainligandThe last three terms approximate the intra-ligand energy of the flexible amino acid, which consists of the van der Waals (EvdWligand), electrostatic (Eelect,rdielligand), and the strain energy (Estrainligand). The receptor–ligand interaction energy is described by the first two terms, whereEvdWintermandEelect,rdielintermare the intermolecular van der Waals and Coulombic energy.Parent selection is based on the concept of the survival of the fittest and ensures that the population moves toward the minimum conformation(s). The chromosome with the most favorable energy has a three-times larger probability to be selected as a parent than the chromosome with the poorest energy. One point crossover and mutation are used in a mutually exclusive way during the generation of the new chromosome. At each reproduction event, the mutation and crossover operators are chosen using the roulette wheel method.In SYNOPSIS [24], novel molecules are designed from an existing molecules database by simulating organic synthesis steps. Each newly generated molecule has an accessible synthetic route, and could be synthesized in the laboratory successfully. SYNOPSIS has three components: a database of existing molecules, a set of chemical reactions, and a fitness function.A subset of molecules from ACD (Available Chemicals Directory) library is used as initial database. This subset excludes molecules containing elements other than carbon, nitrogen, oxygen, sulphur, iodine, bromine, chlorine and fluorine or a radical or a non-natural occurring isotope. Molecules with more than an arbitrarily chosen number of 13 non-hydrogen atoms or an arbitrarily chosen number were also excluded to prevent SYNOPSIS from designing complex molecules, which are difficult to synthesize.The organic synthetic steps are based on the functional group approach. The algorithm steps are like GA. They are: select a molecule, perform reaction, calculate product's fitness and add to database (Fig. 4). The algorithm is iterative and resembles a genetic algorithm. A new offspring is produced from a set of candidate solutions based on the fitness of the molecules.A new molecule is created from the selected molecule by performing a reaction on it. The reaction for a particular molecule is randomly chosen from the 70 possible reaction set. If no reaction is possible, next molecule is selected to perform the reaction. If the chosen reaction requires two reactants, second reactant is randomly picked from the database. If the reaction product is already in the database, the procedure goes back to select a new molecule to perform the reaction. SYNOPSIS uses two fitness functions to evaluate the molecules generated. They are electric dipole moment and affinity of the molecule to a protein binding site. The fitness function must produce higher values for selecting the better molecules. Finally, the molecule, its reactants and its fitness value are added to the database. Fig. 4 shows one iteration in SYNOPSIS.LEA3D [25] generates organic molecules by combining 3D fragments. LEA3D uses the docking program FlexX [43] in order to perform structure-based de novo design.In LEA3D, the molecular assembly is done by a linear combination of one to five fragments and each fragment is represented by a number. The global fitness value of a molecule in LEA3D is given by combining the scores of various molecular properties such as polar surface area, volume, area, molar refractivity, radius of gyration, longest distance between atoms in the molecule, and Lipinski's rule of 5 properties and FlexX docking score. To store the best solutions, an elitism strategy is applied.The FlexX docking score is defined as in Eq. (5)(5)Scorei,(p=docking)=−FlexX_Scorei60where p is the docking property and −60 is the optimal value of the FlexX score. FlexX_Scoreiis negative or set at 0. The composite fitness percentage of an individual i is given by Eq. (6).(6)Scorei=ΣpWp∗ScoreipWpis the user-defined weight applied to the property p. The weights depend on the relative importance of the properties as considered by the user.In LEA3D, roulette wheel selection is employed to select the parents to generate the new population. Crossover selection is determined by a user-defined probability. Two types of crossover used in LEA3D are the one-point crossover and two-point crossover.GANDI (Genetic Algorithm-based de Novo Design of Inhibitors) [26] uses genetic algorithm and Tabu search for generating molecules from a fragment library. The fragment library is constructed using DAIM tool [44] by fragmenting molecules obtained from Molinspiration cheminformatics database. The fragments in the library are represented in MOL2 file format. GA is used for selecting the pre-docked fragments (FFLD [45] and SEED [46] tools are used for generating the docked poses) and Tabu search is used for linking the fragments. An island or parallel model genetic algorithm is used in GANDI. This parallel model uses the simultaneous, non-interacting evolution of multiple populations at the same time.In GANDI, each gene of the chromosome is an integer encoding the docked fragments, whose value ranges from one to the number of docked poses. The encoded fragments of the “children” are examined for clashes, and individuals are removed from the population if they have unfavorable interactions. Linking the encoded fragments is done using Tabu search for each individual. The scoring function implemented in GANDI is a weighted-sum of force field-based binding energy and two measures of similarity (Sim3D and Sim2D). The Sim2D is calculated using 2D fingerprint based Tanimoto coefficient [41], while, the 3D-similarity (Sim3D) between molecules A and B is measured as described by Majeux et al. [46]. The scoring function is given below:(7)Stotal=wffEff−w3DSim3D−w2DSim2D(8)Eff=EvdWinter+Eelecinter+EvdWintra+Eelecintrawhere the parameters wff, w3D, and w2D are input values, and usually w3D or w2D is set to zero. The individuals to undergo modification are selected using binary tournament selection and one-point crossing over is done by swapping genes at a randomly chosen chromosome position.Some of the tools that use evolutionary strategy for the design are explained in this subsection.TOPAS (Topology-Assigning System) [27] uses a set of drug-derived building blocks, derived from retro-synthetic fragmentation of molecules from the World Drug Index (WDI, Derwent Information, London). These pre-defined building blocks are re-assembled by chemical reactions to produce synthetically feasible novel molecules with desired properties.TOPAS uses a simple (1,λ) evolution strategy with adaptive parameters for the optimization process. In this stochastic search process, an initial parent and a set of λ variants are obtained initially. Here there are 100 variants used for 100 generations. Fitness in TOPAS is the pair-wise similarity between the template and a new variant structure. Two similarity measures used are 2D structural similarity or Tanimoto similarity (similarity range from 0 to 1) and 2D topological pharmacophore similarity (similarity ranges from 0 to positive values of degrees).Four steps that are followed to derive the variant structures from the parent molecule are as follows:•Retro-synthetic fragmentation of randomly assembled molecular structure.Random selection of one of the generated fragments.Substitution of this fragment by a building block having the pair-wise similarity index closest to the random number g.Virtual synthesis to assemble the novel molecule.Flux(1) [28] is a tool that follows a two-step process to generate new drug molecules. First, fragmentation of database molecules is done by applying simple pseudo-retrosynthesis by retroflux to get a set of chemical building blocks. Then, a stochastic search algorithm along with similarity scoring is used to generate a new molecule which is compared with a known template molecule. The molecules database consists of 4705 compounds from COBRA [47] data set version 2.1.Genetic algorithms act on a chromosome, but evolutionary strategies operate directly on the values to be optimized. Flux(1) uses a simplistic (1,λ) evolution strategy (ES) without adaptive step-size control. To facilitate escaping the local optima, selection of the best is performed among the offspring only as the parent dies out.At first, an initial fragment is randomly picked up with n attachment sites from the set of building blocks (parent structure for the first generation). Molecule mutation algorithm is applied in each generation to mutate the current parent structure to generate λ offspring structures. Then, the fitness of the offspring is determined, and for the next generation, the best fit structure is selected as the parent. The parent breeds till the termination criteria are satisfied. If offspring structures produced are identical within the same generation, only one of them is retained.The fitness of the individual is measured using similarity based measure and oral bioavailability (OBA) measure. Two measures were applied for similarity calculations:•Tanimoto coefficient (Jaccard coefficient)Euclidian distance.Values of the Tanimoto coefficient are in [0;+1] for the binary version (Eq. (9)) and [−1/3;+1] for the nonbinary version (Eq. (10)), where a value of 1 indicates Identity.(9)SA,B=ca+b−c(10)SA,B=∑j=1j=nxjAxjB∑j=1j=n(xjA)2+∑j=1j=n(xjB)2−∑j=1j=nxjAxjBResults of the Euclidian distance (Eq. (11)) are in [0;+α], where 0 refer to identity.(11)DA,B=∑j=1j=n(xjA−xjB)2In Eqs. (9)–(11), A and B are molecules, i and j are attributes of these objects, n is the total number of attributes of an object, xjAis the value of the jth attribute of objects A, a and b are the number of bit sets in objects A and B, respectively, c is the number of bit sets common to objects A and B, SA,Bdenotes the similarity between objects A and B, and DA,Bis the distance between objects A and B.The other fitness function is for the oral bioavailability (OBA) of the designed drug molecule. To measure the OBA, Lipinski's rule of 5 is taken as the measure.FLUX [29] is a fragment-based molecule generator. First, using pseudo-retro-synthesis known drug molecules are dissected into fragments. Next, the resulting fragments are used for automatic assembly of new molecules. Linkage rules in Flux are based on eleven common bond cleavage types. Compounds can be assembled by linking, growing, lattice-based structure sampling, step-wise structure transition and graph-based assembly.FLUX utilizes a (μ, λ) evolution strategy where μ is the set of high fit individuals which are approved to spawn offspring and λ is the number of children per generation. An adaptive step-size control mechanism is used in Flux to escape local optima. Two graph-based alteration methods such as molecular mutation and crossover operator are used in Flux. An exhaustive virtual retro-synthesis of the compound is triggered by mutation operator. The result is substituted by other fragments from the collection of building blocks. Using virtual synthesis these fragments are reassembled to form “mutated” candidate molecules. Crossover operator takes two input molecules and these are fragmented by virtual retro-synthesis. Then, two altered candidates are obtained by reassembling the fragments.The fitness scoring function of Flux is pair-wise chemical similarity between candidate molecules and known ligand templates. Similarity is measured by CATS (Chemically Advanced Template Search) topological pharmacophore similarity [48]. Synthetic accessibility is also considered by the building blocks and their linkage rules.The tools that use a graph structure along with evolutionary techniques are discussed in this subsection.MEGA (Multiobjective Evolutionary Graph Algorithm) [30] combines evolutionary techniques with graph-theory and it directly manipulates graphs to design new molecules. The chromosome is encoded in the form of a graph. It uses a hybrid approach with a combination of evolutionary algorithms/graphs, multi-objective optimization with two constraints to design new drugs in a few innovative steps.The first step in MEGA is initial population generation wherein each chromosome encodes the molecules as graphs. These chromosomes hold information about their fragment components and the synthetic rules. Atoms, bonds and fragments are the basic blocks of MEGA. For the step-wise evolutionary process, fragment weight is added by one when the corresponding molecule is biologically favorable otherwise the weight is reduced by one.Fitness assessment of a molecule is done by binding affinity scores (ChillScore [49]) obtained by docking the designed molecules to the corresponding protein's binding site (primary constraints). Two other objective functions for fitness assessment (secondary constraints) are molecular similarity score (Tanimoto similarity) [41] and chemical structure score (Lipinski's Rule-of-Five) [50].Parent selection is either by roulette or tournament selection. Special mutation and crossover operations are carried out directly on the graph chromosome for altering nodes, edges or subgraphs. The evolutionary process stops after a fixed number of generations. If elitism is enabled, non-dominated and best performing solutions are taken as normal members of the population in the successive steps of the algorithm. Elitism with archive has huge number of non-dominated solutions obtained from all the generations.When niching mechanism is not enabled, the parent selection method is applied on the entire population once, to generate the parent sub population. But when the niching mechanism is enabled, selection methods are applied on the clusters instead of the entire population. One solution is picked from each cluster. At each population, the clustering is based upon the population size, diversity, the type and number of objectives and also based on the type of evolutionary operations planned. Results of clustering along with the Pareto-rank (based on primary and secondary constraints) assigned to the solutions gives rise to MultiObjective Fitness (MOFit) score.Evolutionary operations are performed at the atom, bond and fragment levels in MEGA. Mutation operation includes modification of the atom and bond types and insertion and removal of atoms and fragments. RECAP [51] is used for removal and exchange of fragments.EvoMD [31] uses both atom-based and fragment-based approach to construct new molecules. The workflow in EvoMD is as follows:1.Initial population is generated using the molecular graphs with basic molecule elements such as carbon, Benzene rings.Next, each molecular graph is evaluated with the objective function.Roulette wheel selection is used to select two molecular graphs for reproduction.Crossover and mutation operators are applied on the selected molecular graphs.Steady-state reproduction scheme is used to replace the existing least-fit molecular graphs by the newly generated offspring.Till the user-specified termination criteria are reached, the steps 2–5 are repeated.In EvoMD, chromosome encoding of molecules are graphs. A molecular graph is a connected, undirected graph representation which can be mapped to a labeled graph with atoms as vertices and bonds between atoms as edges. The structural formula of a chemical compound is represented as G(V,E) where V is a set of vertex labels and E is a set of edge labels. The molecular graph is encoded into adjacency matrices with nodes and their connectivity. An effective crossover operator and “repair” after crossover to maintain the valid connectivity are made easy with the adjacency matrix representation (Fig. 5).EvoMD uses a set of basic chemical components such as carbon, oxygen, and nitrogen atoms and benzene rings to evolve the molecular components. Initial population is generated using few of these subcomponents randomly and an adjacency matrix is formed. EvoMD takes the fragment-based approach for the medium and large molecules. Roulette wheel selection scheme is used in EvoMD to select the parents. In EvoMD, elimination rate is set by the user. When the algorithm gets stuck in local minimum, diversity is introduced by the random addition of new molecules from the element pool. EvoMD uses a new unbiased crossover operator called random graph crossover (RGC) similar to the uniform crossover operator used in GA. To avoid the trap at the local minima, molecular graphs need to be mutated. EvoMD randomly uses three new mutation operators for the molecular graphs.This section summarizes and compares the different evolutionary techniques used for the de novo drug design in terms of EA strategy, chromosome representation, input and output file format, molecule construction method, database used for fragment library generation, programming language used, fitness functions and tested molecules with the help of a table (Table 1).Starting from the tool LigBuilder published in 2000, till EVoMD published in 2011, various genotypic representations are used for encoding the chemical structures. For the genetic algorithm based tools, chromosome representation use chemical structures, SMILES line notation, angles of rotation or integer encoding of drug fragments. In evolutionary strategy, the chromosomes are represented as chemical structures, molecules or candidate compounds. In the evolutionary graph based tools, the genotype representation of the molecules is graphs. Usually, the chemical structures are represented in several formats, including SYBYL Mol2, MDL sdf, SMILES, INChi codes file format.Most of the tools described here use fragment libraries to construct the new molecules, exception being MEGA and EVoMD which use both atoms and fragments to generate new molecules. The fragment libraries used in the design were constructed from already existing databases such as ACD library, drug derived building blocks from WDI, fragments from known drugs and drug-like molecules. Moreover, majority of the tools use structure-based design strategy for evolving the molecules. However tools such as LEA, TOPAS, FLUX and EVoMD use ligand-based design strategy. The fitness score used for evaluating the molecules is calculated using the objective functions such as the binding affinity score, bioavailability score, polar surface area, 2D and 3D similarity scores. Each of the tools developed for the de novo drug design has its own advantages and is shown to be useful in designing new molecules for different therapeutic classes. Most of the tools are developed in high-level programming languages such as C and C++.

@&#CONCLUSIONS@&#
