@&#MAIN-TITLE@&#


@&#HIGHLIGHTS@&#
Semantic relationships in XML make the data vulnerable to privacy attacks.We propose a privacy approach for XML that considers semantic relationships.We compare our model and algorithm against other common privacy approaches.Diversification and dissection techniques can be used to protect privacy in XML.

@&#KEYPHRASES@&#
Medical privacy,XML,Hierarchy,Dissection,Privacy-preserving healthcare data,

@&#ABSTRACT@&#
An ever increasing amount of medical data such as electronic health records, is being collected, stored, shared and managed in large online health information systems and electronic medical record systems (EMR) (Williams et al., 2001; Virtanen, 2009; Huang and Liou, 2007) [1–3]. From such rich collections, data is often published in the form of census and statistical data sets for the purpose of knowledge sharing and enabling medical research. This brings with it an increasing need for protecting individual people privacy, and it becomes an issue of great importance especially when information about patients is exposed to the public.While the concept of data privacy has been comprehensively studied for relational data, models and algorithms addressing the distinct differences and complex structure of XML data are yet to be explored. Currently, the common compromise method is to convert private XML data into relational data for publication. This ad hoc approach results in significant loss of useful semantic information previously carried in the private XML data. Health data often has very complex structure, which is best expressed in XML. In fact, XML is the standard format for exchanging (e.g. HL7 version 31http://www.hl7.org.1) and publishing health information. Lack of means to deal directly with data in XML format is inevitably a serious drawback.In this paper we propose a novel privacy protection model for XML, and an algorithm for implementing this model. We provide general rules, both for transforming a private XML schema into a published XML schema, and for mapping private XML data to the new privacy-protected published XML data. In addition, we propose a new privacy property,δ-dependency, which can be applied to both relational and XML data, and that takes into consideration the hierarchical nature of sensitive data (as opposed to “quasi-identifiers”). Lastly, we provide an implementation of our model, algorithm and privacy property, and perform an experimental analysis, to demonstrate the proposed privacy scheme in practical application.

@&#INTRODUCTION@&#
Broadly speaking, there are two distinct approaches to privacy protection. One is the access-control approach, which seeks to protect privacy by controlling access to the data; and the other is the privacy preservation approach, which manipulates the data, by various privacy preservation techniques, before publishing the data for public use. The latter is the subject matter of this paper. Privacy preservation is obviously an important consideration when making medical data available beyond controlled boundaries, such as data exchange between EMR's (Williams et al., 2001; Virtanen, 2009; Huang and Liou, 2007) [1–3], as it may contain comprehensive sensitive information about patients. What these forms of data publishing have in common is that they all provide data collections that associate individuals with information relevant to these individuals. Some of the published information may be sensitive and it should not be possible to link it to a specific individual in the data. In response to this requirement, a large research community has evolved and many approaches have been proposed to protect individuals’ privacy in the data.Numerous approaches for privacy preservation in the relational domain have been proposed, most notably for publishing microdata [4–8] and transactional data [9–12]. But few approaches have been proposed for the XML domain and investigated what issues arise by doing so. Papers that address XML are mostly based on access-control techniques. Regarding access control for XML, it is useful to note that a vast amount of work has been carried out as it poses unique challenges when applying access control specific concepts to the semistructured, hierarchical and complex structure of the XML format [13–19].As for privacy preservation through data modification, typically it is assumed that XML can be flattened to relational data and then any conventional privacy scheme can be applied. By “flattening” we mean mapping data from a hierarchical to a relational format. But medical data, in most cases, contain very rich, and therefore complex, semantics. A reading of blood pressure, for example, may depend on where in the body it is measured, which point in time in the cardiac cycle it is taken (systolic and diastolic arterial blood pressures), which instrument is used, and so on. Such rich semantics can be conveniently expressed in XML. Hence, it is no surprise that XML has been selected as the standard format for medical data exchange, as pointed out in the abstract. In light of these facts, the “flattening XML to relational” assumption, from the practical viewpoint, is untenable: the flattening process is labour-intensive and the loss of semantics is significant.While medical data publishing is typically intended for useful purposes such as research, statistical analysis and data mining, it is inevitable that the data will be shared with the wrong people. Vaidya et. al. define data privacy as freedom from unauthorised intrusion[20]. This definition is quite general in nature and leaves it open as to what unauthorised intrusion actually means. In privacy preservation approaches, it is interpreted as a privacy breach where an individual and their associated information can successfully be identified within the data, assuming that unique identifiers have been removed from the data already.Based on this key objective to protect individuals’ personal information in published data, we seek to analyse and investigate key issues in protecting XML data for privacy. In a nutshell, we seek to extend the well-known approach of Anatomy [6], which was proposed for relational data, for direct application to XML data. For relational data, concepts such as QI (quasi-identifier) and SI (sensitive data) are easy to define in theory, and QI and SI data are easy to extract in practice (at least prior to the application of techniques to achieve k-anonymity, l-diversity, etc.). For XML data, as can be expected, those equivalent tasks present various interesting challenges. This paper will address those arising issues from both the theoretical and practical viewpoints.In addition, we propose the novel concept ofδ-dependency. This concept is to deal with the problem of hierarchical sensitive data, which arises in situations where sensitive data values are taken from a hierarchical tree structure, with the concepts signified by data values become more specific as we move down the tree. For an exposition of the problem of hierarchical sensitive data in the context of relational data, see Personalized Privacy Preservation [21]. The concept ofδ-dependency can be applied to both relational and XML data. In this paper, we will present an algorithm to illustrate howδ-dependency can be incorporated into the transformation of XML data for privacy preservation. We will also present the results of several experiments to illustrate the effectiveness ofδ-dependency for privacy preservation purpose.Our paper is organised as follows. Section 2 makes four separate contributions and proposes new methods as part of our privacy protection approach: Section 2.1 proposes a novel method for the construction of an XML schema for published data (XML schema transformation). Section 2.2 proposes a new method for the production of published data (XML data mapping). Section 2.3 proposes a new privacy property,δ-dependency that can be applied to both relational and XML data, and that takes into consideration the hierarchical nature of data, which is also common to XML. Section 2.4 proposes a new algorithm that implements our privacy model, dissection technique andδ-dependency privacy property. In Section 3, we provide an experimental analysis to benchmark the proposed privacy scheme against a well-proven privacy method (Anatomy) and in practical application. Sections 4 and 5 provide a discussion of the results and draw conclusions.

@&#CONCLUSIONS@&#
We have identified that current privacy models for XML are mainly based on access control and filtering techniques, and that these approaches are not sufficient to ensure adequate privacy protection in XML data. Further, we showed that while a number of strong privacy preserving properties are available in relational data, these have not yet been applied to XML. Taking these research challenges, we developed a privacy model for XML based on the dissection method and a new privacy properyδ-dependency. We proved that our model exceeds existing privacy preserving properties as found in relational data and is practical in application from a performance point of view.