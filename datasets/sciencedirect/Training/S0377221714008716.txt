@&#MAIN-TITLE@&#
Mathematical programming strategies for solving the minimum common string partition problem

@&#HIGHLIGHTS@&#
We propose an ILP model for the minimum common string partition problem.This is the first ILP model for this problem in the literature.We could solve 11 out of 45 problem instances from the literature to optimality.For the remaining instances we were able to find new best-known solutions.We present a heuristic based on the ILP model, applicable to larger instances.

@&#KEYPHRASES@&#
Minimum common string partition,Integer linear programming,Heuristic,

@&#ABSTRACT@&#
The minimum common string partition problem is an NP-hard combinatorial optimization problem with applications in computational biology. In this work we propose the first integer linear programming model for solving this problem. Moreover, on the basis of the integer linear programming model we develop a deterministic 2-phase heuristic which is applicable to larger problem instances. The results show that provenly optimal solutions can be obtained for problem instances of small and medium size from the literature by solving the proposed integer linear programming model with CPLEX. Furthermore, new best-known solutions are obtained for all considered problem instances from the literature. Concerning the heuristic, we were able to show that it outperforms heuristic competitors from the related literature.

@&#INTRODUCTION@&#
Optimization problems related to strings—such as protein or DNA sequences—are very common in bioinformatics. Examples include string selection problems (Meneses et al., 2005; Mousavi et al., 2012; Pappalardo, 2013), the longest common subsequence problem and its variants (Hsu and Du, 1984; Smith and Waterman, 1981), alignment problems (Gusfield, 1997; Rajasekaran et al., 2001), and similarity search (Rajasekaran et al., 2001). These problems are often computationally very hard, if not even NP-hard (Garey and Johnson, 1979). In this work we deal with the minimum common string partition (MCSP) problem, which can be described as follows. We are given two related input strings that have to be partitioned each into the same collection of substrings. The size of the collection is subject to minimization. A formal description of the problem will be provided in Section 1.1. The MCSP problem has applications, for example, in the bioinformatics field. Chen et al. (2005) point out that the MCSP problem is closely related to the problem of sorting by reversals with duplicates, a key problem in genome rearrangement.In this paper we introduce the first integer linear program (ILP) for solving the MCSP problem. An experimental evaluation on problem instances from the related literature shows that this ILP can be efficiently solved, for example, by using any version of IBM ILOG CPLEX. However, a study on new instances of larger size demonstrates the limitations of the model. Therefore, we additionally introduce a deterministic 2-phase heuristic which is strongly based on the original ILP. The experimental evaluation shows that the heuristic is applicable to larger problem instances than the original ILP. Moreover, it is shown that the heuristic outperforms competitor algorithms from the related literature on known problem instances.The MCSP problem can technically be described as follows. Given are two input strings s1 and s2, both of length n over a finite alphabet Σ. These two strings are required to be related, which means that each letter appears the same number of times in each of them. Note that this definition implies that s1 and s2 have the same length. A valid solution to the MCSP problem is obtained by partitioning s1 into a set P1 of non-overlapping substrings, and s2 into a set P2 of non-overlapping substrings, such that P1 = P2. Moreover, we are interested in finding a valid solution such that |P1| = |P2| is minimal.Consider the following example. Given are DNA sequences s1 = AGACTG and s2 = ACTAGG. Obviously, s1 and s2 are related because A and G appear twice in both input strings, while C and T appear once. A trivial valid solution can be obtained by partitioning both strings into substrings of length 1, that is, P1 = P2 = {A, A, C, T, G, G}. The objective function value of this solution is 6. However, the optimal solution, with objective function value 3, is P1 = P2 = {ACT, AG, G}.

@&#CONCLUSIONS@&#
In this paper we considered a problem with applications in bioinformatics known as the minimum common string partition problem. First, we introduced an integer linear programming model for this problem. By applying the IBM ILOG CPLEX solver to this model we were able to improve all best-known solutions from the literature for a problem instance set consisting of 45 instances of different sizes. The smallest ones of these problem instances could even be solved to optimality in very short computation time. The second contribution of the paper concerned a 2-phase heuristic which is strongly based on the developed integer linear programming model. The results have shown that, first, the heuristic outperforms competitor algorithms from the literature, and second, that it is applicable to larger problem instances.Concerning future work, we aim at studying the incorporation of mathematical programming strategies based on the introduced integer linear programming model into metaheuristic techniques such as GRASP and iterated greedy algorithms. Moreover, we aim at identifying other string-based optimization problems for which a 2-phase strategy such as the one introduced in this paper might work well.