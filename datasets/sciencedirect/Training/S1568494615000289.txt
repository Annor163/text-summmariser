@&#MAIN-TITLE@&#
Multisignal 1-D compression by F-transform for wireless sensor networks applications

@&#HIGHLIGHTS@&#
In WSNs data compression is a way for transferring a large amount of data to a sink.When data are not correlated popular methods such as DWT do not perform well.We propose two F-transform based techniques to address these issues.Publicly available environmental data were used for a comparative study.If compared with DWT our approaches allow higher data compression rates with lower distortions.

@&#KEYPHRASES@&#
Data compression,Wireless sensor networks,F-transform,Least-squares,

@&#ABSTRACT@&#
In wireless sensor networks a large amount of data is collected for each node. The challenge of transferring these data to a sink, because of energy constraints, requires suitable techniques such as data compression. Transform-based compression, e.g. Discrete Wavelet Transform (DWT), are very popular in this field. These methods behave well enough if there is a correlation in data. However, especially for environmental measurements, data may not be correlated. In this work, we propose two approaches based on F-transform, a recent fuzzy approximation technique. We evaluate our approaches with Discrete Wavelet Transform on publicly available real-world data sets. The comparative study shows the capabilities of our approaches, which allow a higher data compression rate with a lower distortion, even if data are not correlated.

@&#INTRODUCTION@&#
Data compression can be regarded as one of the enabling technologies for several aspects in fields such as multimedia (for audio and video processing) and, thanks to the grown popularity of wireless sensor networks (WSNs), measurements. The latter case is the one requiring more attention due to some constraints imposed by the structure of a WSN.Each node of a WSN can perform three main tasks: collecting data with its sensor suite, processing data with an onboard microprocessor, and sharing data with neighbouring nodes using its radio.In all these tasks, nodes are required to be relatively inexpensive, in terms of power supply, memory capacity, communication bandwidth, and processor performance [1].Generally, the most part of energy consumption is due to radio communication [2], so reducing the number of bits to be transmitted by means of compression techniques can have a positive effect on communication energy costs.There are many compression techniques available in WSNs: a comprehensive survey can be found in [3]. Briefly, data compression techniques for WSN can be classified into distributed, which exploit spatial correlation, and local, which exploit temporal correlation. These approaches are usually used for dense and sparse networks respectively [4], even if in dense networks, spatio-temporal correlation allows the use of both the distributed and local approaches (e.g. [5]). Distributed approaches are also well suited for multivariate data [6]. As suggested by Wagner [7] one can refer to a spatio-temporal processing, i.e. to a distributed approach, when the ratio between the number of nodes and the length of the time-series stored at each node is high. A popular scheme, implemented both as a distributed and a local approach, is the transform-based compression [7,3]. In transform-based schemes, raw data are transformed into a set of coefficients of suitable basis functions, for example wavelet functions, which are used to reconstruct the signal at the sink. Transform-based compression techniques can be viewed as either transform driven or routing driven. The last ones turn out to be more efficient for dense networks, since the transforms are computed as data are routed to the sink along efficient routing paths. In any case, the transforms can be easily integrated within existing routing protocols, as for example the SenZip compression tool [8]. Well-known transform-based algorithms such as the discrete cosine transform (DCT) and the Discrete Wavelet Transform (DWT) perform well when adjacent data have similar values. This is a frequent case for indoor environments, which usually present strongly spatially and temporally correlated data, but this could not be true for outdoor environments [3]. Besides, it should be pointed out that compression techniques aim to reduce redundancy in order to increase energy efficiency, but redundant deployment is necessary in the case of node or link failure, i.e. to ensure robustness, especially for in situ deployments in austere environments such as mountains, where failures are common phenomena.Here we propose a robust local transform-based scheme in order to address all the issues above, by comparing two compression schemes based on fuzzy transform (F-transform) with a wavelet based scheme. F-transform was proposed by Perfilieva [9] as a fuzzy approximation technique. It substantially expresses a functional dependency as a linear combination of basic functions and it can be used for the solution of direct and inverse problems or least-squares approximations [10]. The major applications of the F-transform are in image processing, e.g. [11–15].Herein, as a first approach, we followed the idea of compressed blocks proposed in [12]. As an alternative approach, we extended to the two-dimensional case the least-squares (LS) approximation discussed in [10].We experimentally tested these approaches in the task of addressing data compression in two WSN applications where in some cases data lack correlation, i.e. two glacier monitoring deployments, namely, Patrouille des glacier (PDG) and Plaine Morte glacier (PM) [16]. For these deployments a small number of nodes was used and several kinds of data were collected by each node. These deployments were also considered in [17], where the authors compressed only four sensor data, by using a version of the LZW algorithm, which is a dictionary-based compression algorithm building a dictionary of repetitive patterns; by means of their approach they did not found good results for the PDG surface temperature.We compared our results with the ones obtained by means of the wavelet-based approach, by considering accuracy (i.e. distortion), data compression rate (CR), computational complexity. It should be pointed out that for a fixed network, the energy consumption of communication when using compression scales according to (CR−1) [3], so it is desiderable having higher values of CR, but for classical transform-based techniques such as DWT the higher CR the higher distortion. By our F-transform based schemes we found a high enough value of CR with a lower distortion, if compared with DWT.The paper is structured as follows: Section 2 briefly introduces the problem of data compression in WSNs, the Section 3 provides theoretical background, explaining how the proposed approaches work, also by means of a simple example; Section 4 is devoted to numerical experiments and finally Section 5 gives some conclusions.Let Xibe an attribute (for the sake of illustration a scalar) observed by a node in the sensor network, e.g. an environmental property being sensed by the node, such as temperature. The observed values of all the attributes X1, …, Xncan be arranged in a vector, the networked data vector, which can be very large. The networked data are periodically collected at the base station, at a certain frequency. This has a cost, i.e. the total energy involved by the data collection process, to be minimized. Data compression in WSNs aims to optimize this total cost, by converting an input data stream into another one with fewer bits. It should be pointed out that the total energy is usually approximated by the communication energy, which represents the largest part of it. There are several decentralized compression strategies that can be utilized. One possibility is that the correlations between data at different nodes are known a priori.LetXitbe a random variable that denotes the value of Xiat time t and letH(Xit)denote the information entropy ofXit. In most part of the sensor network deployments, the data generated by the sensor nodes are typically highly correlated both in time and in space, i.e.H(Xit+1|Xit)≪H(Xit+1)andH(X1t,…,Xnt)≪H(X1t)+⋯+H(Xnt). These correlations can be captured by means of some predictive models using either prior domain knowledge or historical data traces. Unfortunately, in many applications, prior knowledge of the precise correlations in the data is unavailable. Furthermore, in some cases there could not be any correlation between data, such as for many deployments in outdoor environments.Data correlation is one of the typical features of compression for WSNs. The other features are:-distortion, which occurs in the case of lossy compression, i.e. when exact reconstruction of the original data after decompression cannot be achieved, unlike lossless algorithms; Mean Square Error (MSE) is a natural distortion metric;data aggregation, which is involved in some applications, where only a summary of the sensor data is required, due for example to the use of statistical queries, such as MIN, AVG, MAX; in this case, the original sample values cannot be reconstructed from the summarized representation, but the communication overhead can be greatly reduced;symmetry, i.e. in the case of symmetric algorithms, the computational complexity of compression and decompression are similar, whereas they are different in the asymmetric case; traditional schemes have usually higher computational complexity on the compression side, whereas in WSNs, it is desirable that compression has a lower complexity than decompression (usually performed at the sink);adaptivity, by modifying the compression operations and parameters in order to improve the performance for nonstationary data.A detailed survey on all the aspects related to compression in WSNs was provided in [3].In the next section, we introduce two data compression schemes, that allow a low distortion, with a computational cost of compression not so high with respect to decompression.The F-transform represents an efficient way to convert a functional problem into a respective problem of linear algebra. The approximate solution to the initial problem can be obtained via the inverse F-transform. The same ideas hold on for discrete problems by means of the concepts of discrete F-transform and inverse discrete F-transform. Since F-transform was introduced [9], several papers on the topic appeared [21–25]. In particular, in [24] a neural approach to the fuzzy partition construction was proposed, by using an unsupervised learning for determining the distribution of the nodes for non-uniform partitions. In [25] new types of F-transforms were presented, based on B-splines, Shepard kernels, Bernstein basis polynomials and Favard-Szasz-Mirakjan type operators.Applications of the F-transforms in image processing seem to be prevailing, e.g. [11–15].Another interesting application of F-transforms is in time series analysis [26–29], also by integrating the F-transform and the fuzzy tendency modeling [27] or the F-transform and fuzzy natural logic [28].F-transforms were also used in data analysis [30,31].In [32] F-transforms combined with finite differences were used to numerically solve some classical partial differential equations (heat, wave, Poisson) in simple domains.In [10] the relations between the least-squares approximation techniques and the F-transform were investigated, since least-squares approximations allow to handle some additional information on data such as the geometric information.We briefly recall some definitions. Let I=[a, b] be a closed interval and x1, x2, …, xn, with n≥3, be points of I, called nodes, such that a=x1<x2<⋯<xn=b. A fuzzy partition of I is defined as a sequence A1, A2, …, Anof fuzzy sets Ai:I→[0, 1], with i=1, …, n such that–Ai(x)≠0 if xϵ(xi−1, xi+1) and Ai(xi)=1;Aiis continuous and has its unique maximum at xi;∑i=1nAi(x)=1,∀xϵI.The fuzzy sets A1, A2, …, Anare called basic functions and they form an uniform fuzzy partition if the nodes are equidistant.The fuzzy transform (F-transform) of a function f(x) continuous on I with respect to A1, A2, …, Anis the n-tuple [F1, F2, …, Fn] whose components are(1)Fi=∫abf(x)Ai(x)dx∫abAi(x)dxThe function(2)fF,n=∑inFiAi(x),xϵIis called inverse F-transform of f with respect to A1, A2, …, Anand it approximates a given continuous function f on I with arbitrary precision, as stated by Theorem 2 in [9].In many real cases, where the function f is known only at a given set of points {p1, p2, …, pm}, the discrete F-transform can be used and Eq. (1) is replaced by(3)Fi=∑j=1mf(pj)Ai(pj)∑j=1mAi(pj),i=1,…,nSimilarly, Eq. (2) is replaced by(4)fF,n(pj)=∑inFiAi(pj),j=1,…,mgiving the discrete inverse F-transform.The above concepts can be extended to functions in two variables, as one will see in the next subsection.Here two approaches are examined: the first one follows the idea of compressed blocks proposed in [12], the second one extends to the two-dimensional case the least-squares (LS) approximation discussed in [10]. By following [12], the N×M data matrix D is subdivided in submatrices DSwith dimension N(S)×M(S), each one compressed to a block FSof size n(S)×m(S) by means of the discrete F-transform. Obviously, the case of a single block is a particular case where no subdivision occurs.The discrete F-transform of DSwith respect to {A1, …, An(S)} and {B1, …, Bm(S)} is given by the Hadamard product, i.e. in compact form(5)FS=PSoQSbeing(6)PS=ATDSBand QSthe matrix whose elements are given by1/RkjS, with(7)RS=ATI¯SBwhere A and B are the matrices with elements Ak(i) and Bl(j) respectively,I¯Sis a N(S)×M(S) matrix with all unit elements.The decompression of the block FSis obtained by the discrete inverse F-transform, which is given by(8)DF=AFSBTIn the LS approximation [10], the components of the discrete F-transformFklSare replaced by the unknowns λkland the discrete inverse F-transform is obtained by minimizing the error functional with respect to these unknowns. By writing the matrix of the errors as(9)E=D−AΛBTand by minimizing it with respect to the unknown elements of the matrix Λ, one has(10)Λ=K−1GH−1where(11)G=ATDB(12)K=ATA,H=BTBIt should be pointed out that, since A and B are the Gram matrices associated to given sets of basis functions, they have full rank and K and H turn out to be positive definite matrices.With regard to the blocks approach, the computational complexity for computing the components of the discrete F-transformFklScan be estimated to be O(n(S)M(S)(N(S)+m(S))). By considering one block and N≫M (as usual for WSNs applications), one can write O(nMN).Since the computational complexity of the (one level) DWT is bounded by O(NM) [3], for a computational convenience one has to select n as small as possible. In any case, current research is attempting to noticeably reduce the computational cost by means of multi-thread schemes.For the LS approach, considering N≫M, one has a computational complexity of O(n3), which is reasonably higher than the one for the block approach.In order to give a clear explanation on how the proposed F-transform based techniques can be used for data compression, we present a simple example. We generated an 11×5 data matrix D by the function cos(i)sin(j), with i=1, 1.5, …, 6 and j=1, 1.5, …, 3. In this example, we considered the F-transform compression rate ρ=(nm)/(NM).The data matrix(13)D=0.4546490.0595233−0.350175−0.674139−0.833050.5389490.07056−0.415104−0.799137−0.9875130.4912950.0643212−0.378401−0.728478−0.9001980.3233560.0423342−0.249052−0.479462−0.5924830.07624750.00998243−0.0587266−0.113057−0.139708−0.189529−0.02481340.1459770.2810280.347273−0.408902−0.05353410.3149410.6063070.749229−0.528162−0.06914770.4067960.7831420.967747−0.518109−0.06783160.3990530.7682360.949328−0.381205−0.04990790.2936080.5652390.69848−0.150969−0.01976510.1162780.2238520.276619is first compressed to a 6×4 block, with a rate ρ=24/55=0.44, by means of Eq. (5)(14)F=0.429156−0.0974936−0.588737−0.8629840.410021−0.0931465−0.562486−0.8245050.0636339−0.014456−0.0872961−0.12796−0.3412580.07752530.4681540.68623−0.4323990.09823020.5931850.869504−0.2024340.04598810.2777090.407072The block F is then decompressed to the 11×5 block DF(15)DF=0.429156−0.0203675−0.343115−0.6289−0.8629840.419588−0.0199135−0.335466−0.614879−0.8437440.410021−0.0194594−0.327816−0.600858−0.8245050.236827−0.0112397−0.189346−0.347055−0.4762330.0636339−0.00302003−0.0508761−0.0932512−0.12796−0.1388120.006587940.1109820.203420.279135−0.3412580.01619590.272840.500090.68623−0.3868280.01835870.3092740.5668710.777867−0.4323990.02052140.3457080.6336510.869504−0.3174160.01506440.2537780.4651530.638288−0.2024340.009607430.1618490.2966540.407072By using the LS approach with the same values of n and m, i.e. ρ=0.44, we obtained the 6×4 matrix Λ by Eq. (10)(16)Λ=0.476013−0.018365−0.685305−0.8688230.523692−0.0202045−0.753949−0.9558490.0808756−0.00312026−0.116435−0.147615−0.4348670.01677760.6260690.793723−0.5503650.02123360.7923491.00453−0.1638690.006322230.2359190.299096so, by substituting the matrix F with the matrix Λ in Eq. (8), one has(17)DF=0.4760130.0540349−0.351835−0.712181−0.8688230.4998520.0567411−0.369456−0.747849−0.9123360.5236920.0594473−0.387077−0.783517−0.9558490.3022840.034314−0.223427−0.452259−0.5517320.08087560.00918066−0.0597776−0.121001−0.147615−0.176996−0.02009180.1308230.264810.323054−0.434867−0.04936420.3214230.6506210.793723−0.492616−0.05591960.3641070.7370220.899127−0.550365−0.06247510.4067910.8234231.00453−0.357117−0.04053840.2639560.5342970.651814−0.163869−0.01860170.1211210.2451710.299096Fig. 1shows the behaviour of the mean square error (MSE), computed over all the elements of the data matrix: by increasing the value of the rate ρ, the MSE decreases for both approaches, but the MSE obtained by the LS approach is lesser in any case.As application examples, we considered two SensorScope deployments: Patrouille des glacier (PDG) and Plaine Morte glacier (PM) [16]. The PDG deployment had 10 locations whereas PM deployment had 13 locations. Both data sets contain data from several sensors, namely, ambient temperature (C), surface temperature (C), solar radiation (W/m2), relative humidity (%), wind speed (m/s), wind direction (deg). For not available data we adopted zero value.In these examples we used both the blocks approach, without subdivision of the data matrix, and the LS approach, by uniform fuzzy partitions, with sinusoidal [12] shaped basic functions.In order to evaluate distortion, we computed the mean square errors MSELS, MSEB, for the LS approach and the blocks approach, with two values of the data compression rate (CR). The data compression ratio can be defined as the ratio of the uncompressed data size, in bits, to the compressed size, also in bits; in local approaches CR is a node-level parameter [3].We compared our results with the ones obtained by means of a multisignal DWT (MSEW), by using two levels and the Haar wavelet. By using this wavelet-based compression one has CR=1.33.In order to exploit differences between the two classes of approach, we used the ratios rB=MSEW/MSEBand rL=MSEW/MSELSfor the two values of CR. The error values are referred to ambient temperature (AT), surface temperature (ST), solar radiation (SR), relative humidity (RH), wind speed (WS), wind direction (WD).In this example, 10 stations collected weather-related data every 2min between April 16–20, 2008 and each node collected on average 3000 samples within the five-day period. In Table 1the values of the ratios rBand rLSfor CR=1.33 (i.e. the same CR allowed by the wavelet-based compression) and CR=1.83 are presented. As one can see, the MSEWis on average higher than MSEBand MSELSfor each type of measurement; besides, especially for higher values of CR, there is no significant difference between the results by the blocks approach and the LS approach, so we prefer the blocks approach for its computational convenience. These results are detailed in Figs. 2 and 3, where the behaviour of the MSE over the N nodes is presented for ambient temperature e wind speed, respectively. Similar behaviour was observed for the other kinds of measurements and the related figures are not reported for the sake of brevity. Figs. 4–9show a sample of the reconstructed data by the blocks approach with CR=1.83 for the first node.This example is referred to a network, with 13 stations, which was deployed on the Plaine Morte glacier for a 5 day campaign, i.e. between March 12 and 16, 2007; each node collected on average 6000 samples about within the campaign. In Table 2the values of rBand rLSfor CR=1.33 and CR=1.83 are tabled; these values are high in any case, in reason of the low distortion of the F-transform based methods. Figs. 10 and 11show the MSE behaviour for surface temperature and relative humidity respectively (other figures are not reported for the sake of brevity). The good approximation by the F-transform based approaches is confirmed, even for CR=1.83. Figs. 12–17show a sample of the reconstructed data by the blocks approach with CR=1.83 for the third node.

@&#CONCLUSIONS@&#
In this paper, for the first time, F-transform based compression methods have been used for wireless sensor networks applications. The proposed approaches belong to the class of transform-based methods, but unlike other schemes in this class, such as DWT, they allow a higher data compression rate with a lower distortion, even if there is no data correlation. We argue that these are desiderable characteristics, due to the cost of the energy communication. Our conclusions are supported by a comparative study, where publicly available environmental data were used.