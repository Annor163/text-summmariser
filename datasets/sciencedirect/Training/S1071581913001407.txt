@&#MAIN-TITLE@&#
Analysing interactive devices based on information resource constraints

@&#HIGHLIGHTS@&#
It demonstrates the use of information resources as a modelling concept.It shows how resources can be used to focus analysis on plausible sequences.It illustrates the technique by contrasting two real-world examples.It specifies and applies precise notions of consistency within activities.

@&#KEYPHRASES@&#
Formal analysis,Task analysis,Distributed cognition,IV infusion pumps,

@&#ABSTRACT@&#
Analysis of the usability of an interactive system requires both an understanding of how the system is to be used and a means of assessing the system against that understanding. Such analytic assessments are particularly important in safety-critical systems as latent vulnerabilities may exist which have negative consequences only in certain circumstances. Many existing approaches to assessment use tasks or scenarios to provide explicit representation of their understanding of use. These normative user behaviours have the advantage that they clarify assumptions about how the system will be used but have the disadvantage that they may exclude many plausible deviations from these norms. Assessments of how a design fails to support these user behaviours can be a matter of judgement based on individual experience rather than evidence. We present a systematic formal method for analysing interactive systems that is based on constraints rather than prescribed behaviour. These constraints capture precise assumptions about what information resources are used to perform action. These resources may either reside in the system itself or be external to the system. The approach is applied to two different medical device designs, comparing two infusion pumps currently in common use in hospitals. Comparison of the two devices is based on these resource assumptions to assess consistency of interaction within the design of each device.

@&#INTRODUCTION@&#
The process of assessing the usability of an interactive system is often criticised, either because it is biased by the expertise and judgement of the analyst or because it requires a sufficiently developed system to be able to assess it through user trials, either in the laboratory or in the “wild”. These issues are particularly important when the system is safety or business critical. In such circumstances evaluation could make it necessary to make significant and potentially expensive changes late in the development process. User testing, while valuable, is also unlikely to cover all plausible user interactions with the system.To explore usability, one starting point is to consider behaviours that achieve the intended goals of an activity (Butterworth et al., 1998). The focus of concern must be with what people might do with a device. This concern can be contrasted with a more complete analysis of every behaviour that an interactive device is capable of. Many of these behaviours, though undesirable, are unlikely to be carried out by a real user. Focusing on more likely user behaviour is often done by considering tasks or scenarios because they provide typical or intended behaviours. The problem is that what the designer intended or the scenario envisaged is not always how the system is actually used. Unexpected uses of the device can lead to entirely unforeseen usability issues. Our approach is based on a more situated view of interaction. It is assumed that interaction is shaped moment-by-moment by the information and affordances provided by the device, or the environment of the device. A typical interaction design issue that illustrates the role of resources is the “keyhole problem” in which users are distracted from achieving their primary goals by, for example, accessing different screens within a hierarchical menu structure in order to gather information that they require (Woods et al., 1994). The cues that are required to maintain an awareness of the main goal and their progress towards it are lost as the user navigates through the information space, viewing only a small proportion of the available information at a time. This places unreasonable demands on short-term memory and introduces vulnerability to a range of errors. Thus information needs provide constraints on user behaviour, and together with the resources afforded by the system, act to shape the likely behaviours of the end user. Users are therefore considered to behave by following paths that are suggested or enabled by information resources. Using them to drive analysis enables consideration of a broader class of uses and user behaviours than could be achieved by restricting analysis to the behaviours encoded in more prescriptive models. This makes it possible to explore many more behaviours than would be represented by, say, a task model (Kirwan and Ainsworth, 1992; Mori et al., 2002), and in some cases to realise that what the user might do is not consistent with what the designer had intended.The proposed method involves specifying assumptions about information resources so that it is possible to check whether the right information is provided to users at the right time in support of activities. The designer must consider a range of issues when deciding which information is relevant at a given stage in the interaction: support for a range of user strategies, making the most of available screen space, avoiding information overload, and reconciling competing information requirements when the system supports a number of different activities. Subsequently, a model checker is used to find the more plausible behaviours within the space of all possible interactions. Traces that are generated by the analysis contain actions that are constrained by information resource assumptions. The model checking tool simplifies the process by automating the generation of these constrained behaviours. Each trace represents a scenario which is plausible with respect to the information resources and possibilities for action available to the user. Once these scenarios have been generated they can be explored by domain, software engineering, and human–computer interaction experts to consider their implications for design, and to decide whether remedial action needs to be taken (such as changing the device design). Some traces might be unexpected, perhaps bypassing some step which is important from a safety perspective, they might be longer than expected (as more efficient paths are insufficiently resourced), or there might not exist any well-resourced path to achieving the user's goal. The advantage of this approach is that it allows the analyst to focus on a subset of possible scenarios, ignoring implausible behaviours. It is always possible to model check the device without ignoring implausible interactions but this is likely to generate too many uninteresting behaviours, rendering this interdisciplinary analysis impractical.This technique is designed to complement the systematic analysis of interactive devices using batteries of properties proposed by Campos and Harrison (2008, 2009) and Harrison et al. (2013). In the case of the systematic analysis no assumptions about use are made except insofar as they are captured in the properties themselves. For example, a property might state that a certain confirmation action is always performed, unless the user cancels the interaction. The property says nothing about whether the actions are sufficiently salient to be easy to use for example.The paper extends work published by Campos and Doherty (2006) and Doherty et al. (2008). It compares two real systems that were both developed to support IV (intravenous) infusion in a hospital context. While the technique is intended to be generic to a range of modelling approaches it is illustrated using the IVY tool. This tool was initially developed to support the systematic analysis of interactive systems. The paper demonstrates a scaleable method for analysing interactive systems using constraints based on information resources, and to demonstrate the analysis of consistency properties and comparisons between different devices.More specifically, the paper's contributions are:•It demonstrates the use of resources as a modelling concept.It shows how resources can be used to focus analysis on plausible sequences.It illustrates the technique by contrasting the resources required in one real-world example with those in another both designed to support the same activities.The method also captures a number of different precise notions of task consistency and applies them.The paper first discusses the background to this resource based approach (Section 2). Section 3 explains how resources can be used to support the analysis of systems in use. The manner in which resources are specified and the way in which goals are used in property formulation are discussed, along with the possibilities for tool support. This section introduces the proposed method. Models of the two infusion pumps are then briefly introduced in Section 4. Section 5 describes the activity context for describing the two devices before providing a discussion of the resource constraints relevant to the example (Section 6). The penultimate section uses the model of activities and description of the resources to compare the two models of devices (Section 7). Finally, discussion of the wider application of the method and of further developments is to be found in Section 8.

@&#CONCLUSIONS@&#
The resilience (or dependability) of a system does not depend only on the correctness of the system in terms of a set of pre-defined functional requirements. Folding the user into the analysis of a system's resilience will help to obtain a better understanding of how the system might operate in practice.A resource based approach can help identify potential usability problems by exploring what should be available at the interface to support users. It also provides a means of comparing devices designed to support the same activities. The method can be applied iteratively, making changes to the system design, and exploring different activity assumptions. This paper has demonstrated that the availability of tool support not only makes it possible to explore complex systems which are difficult to reason about reliably “by hand”, but also allows the possibility of searching through the many possible behaviours for those which are of more interest to the analyst. The presence of resources introduces a notion of plausibility and a more realistic conception of user behaviour, which is based neither on rigid plan following nor random behaviour. User behaviour is shaped, in sometimes subtle ways, by system affordances and available resources, and by the user's own goals and strategies. Hence the properties that are analysed are concerned with the activities that the user carries out and how well they are supported, rather than analysing potential problems with the model. It is assumed that the model has also been evaluated for integrity and against a set of system properties as discussed in Harrison et al. (2013).Other approaches fold human factors considerations into model-based approaches to usability reasoning as discussed in Section 2. The advantage of this approach over task related analysis as used by Bolton et al. (2012) is that the precise sequences are not specified. This allows the possibility of more exhaustive analysis of the paths that are plausible. While task-based analysis can be extremely valuable in design, consideration of safety properties should consider a wider class of plausible behaviours. The paper addresses difficulties relating to a task modelling approach by instead imposing constraints on behaviour. This narrows the analysis of interactive systems to plausible paths, that would be taken if assumptions about information resource constraints were valid, without limiting behaviour to specific sequences as suggested by the task representation. The information resource constraints will admit a greater number of paths than typically provided by a task model. It can be seen as consistent with Vicente's proposal in his critique of task modelling (Vicente, 1999) making allowance for the fact that users do not necessarily adhere to precise behaviours assumed by tasks. Users often achieve goals in ways that were not envisaged by designers when defining their task assumptions while at the same time recognising some constraints that will affect users. Some actions will be resourced effectively, others will not, leading to usability problems. While the resourcing analysis is informative in itself, the potential advantages of automated exploration of plausible behaviours are illustrated in Section 7.1, in which possible use of the bag mode as an accelerator emerges from the analysis, and in Section 7.2 in which attention is focussed on the impact of automatic mode changes; consistency is maintained at the cost of losing data entered by the user.An alternative approach is to build an explicit model of the user. This is the approach taken in PUMA (Butterworth et al., 1998) and executable cognitive architectures (SOAR (Laird et al., 1987), EPIC (Kieras and Meyer, 1997), etc.). While these may deliver more detail in respect to cognitive and performance aspects, they are also more complex to construct in a form that is automatable (Ruksenas et al., 2009) and make stronger assumptions about how cognition works. Another approach is to encode assumptions about the user directly into the model (compare Rushby, 2002). In this case the separation between device model and user assumptions is less clear potentially and this can bias the user assumptions towards those that are needed to make the system work. By working with assumptions at a resource level, a clear separation is made between models and assumptions about users as expressed in terms of resources. These models are also relatively easy to build and the outputs are straightforward to work with, providing a natural way for the HCI expert to contribute to a more rigorous analysis.The analysis presented complements a more unconstrained style of analysis where all possible behaviours of the system are analysed (which is useful when considering safety issues, for example). However, unlike many safety-oriented analyses, this approach is not about “proving” the system to be usable, but rather identifying and investigating plausible and interesting situations and behaviours to find and to fix usability problems (e.g. situations where insufficient resources are available to the user) and to investigate the effectiveness of different user strategies for achieving goals.The infusion pump examples have shown the feasibility of the approach with realistically scaled devices. The analyses were run on laptop computers with now relatively standard quad core processors, and typically took a few minutes to complete. Development of the approach is continuing in a number of directions, including extending the approach to multiple users and making it easier to use by designers.