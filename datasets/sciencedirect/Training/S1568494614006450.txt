@&#MAIN-TITLE@&#
Direct adaptive power system stabilizer design using fuzzy wavelet neural network with self-recurrent consequent part

@&#HIGHLIGHTS@&#
The main disadvantage of FWNN is that the application domain is limited to static problems due to its feed-forward network structure. Therefore, we propose to use a self-recurrent wavelet neural network (SRWNN) in the consequent part of FWNN, solving the control problem for chaotic systems.Our proposed structure requires fewer wavelet nodes than the networks with feed-forward structure, due to the dynamic behavior of the recurrent network.Finding the optimal learning rates is a challenging task in the classic gradient-based learning algorithms. Hence, in our proposed framework, all of the learning rates are determined optimally based on Lyapunov stability theory.We develop a controller based on the proposed network structure and use it for damping the oscillations in the multi-machine power system.

@&#KEYPHRASES@&#
Lyapunov adaptive learning rates,Takagi-Sugeno-Kang fuzzy model,Fuzzy wavelet neural network,Genetic Algorithm,

@&#ABSTRACT@&#
This paper aims to propose a stable fuzzy wavelet neural-based adaptive power system stabilizer (SFWNAPSS) for stabilizing the inter-area oscillations in multi-machine power systems. In the proposed approach, a self-recurrent Wavelet Neural Network (SRWNN) is applied with the aim of constructing a self-recurrent consequent part for each fuzzy rule of a Takagi-Sugeno-Kang (TSK) fuzzy model. All parameters of the consequent parts are updated online based on Direct Adaptive Control Theory (DACT) and employing a back-propagation-based approach. The stabilizer initialization is performed using an approach based on genetic algorithm (GA). A Lyapunov-based adaptive learning rates (LALRs) algorithm is also proposed in order to speed up the stabilization rate, as well as to guarantee the convergence of the proposed stabilizer. Therefore, due to having a stable powerful adaptation law, there is no requirement to use any identification process. Kundur's four-machine two-area benchmark power system and six-machine three-area power system are used with the aim of assessing the effectiveness of the proposed stabilizer. The results are promising and show that the inter-area oscillations are successfully damped by the SFWNAPSS. Furthermore, the superiority of the proposed stabilizer is demonstrated over the IEEE standard multi-band power system stabilizer (MB-PSS), and the conventional PSS.mother wavelettranslation parameter in SRWNNdilation parameter in SRWNNweight of the self-feedback loop in SRWNNnumber of input variablestotal number of the node in the product layerweight parameter in SRWNNproduct of the waveletsnumber of fuzzy rulesnumber of samples in the data setSRWNN outputcenter parameter for the Gaussian functionscaling parameter for the Gaussian functionlinguistic term of the input fuzzy variablesmembership value of the fuzzy setFWNN output (control signal)input variable of FWNNinput vector of SFWNAPSSperformance indexvector of SRWNN parametersLyapunov functionchange of Lyapunov functionvector of learning ratesplant outputdesired outputerror between the desired and plant outputscaling factorsystem sensitivitypenalty factorscaled control signalchromosome vectorrotor speed deviationdesired rotor speed deviation

@&#INTRODUCTION@&#
The nonlinear dynamics and the complex characteristics of a power system trigger low frequency oscillations when the power system is exposed to the disturbances. The power system stabilizer, a very efficient controller installed in the automatic voltage regulator of the generator, is extensively utilized for enhancing the stability of power systems. The parameters of conventional fixed structure PSS (CPSS) are determined based on a linearized model of the power system considering a single operating point. Factors such as the nonlinearity of the power system, changes in operating conditions or system topology, and deviations in system parameters all cause a degradation in the performance of the CPSS.To address the abovementioned issues there is a need for a method to design a PSS that could demonstrate better performance compared to the conventional ones. Some methods in this field are adaptive control [1–4], smart control [5], artificial intelligence [6,7], robust control [8–10] and sliding mode control [11]. Among these, the methods based on adaptive control and robust control can be considered a good approach for the effects of uncertainty in the power system. In adaptive control, the controller's parameters are updated based on the identification of the plant parameters, while in robust control, a worst-case design scenario for the plant families is considered, which corresponds to the different uncertainties in the system.Wavelet functions have recently attracted much attention in various engineering areas [12–17]. Based on wavelet theory, any signal or function can be closely approximated by a finite sum of the weighted wavelet functions. Wavelet neural networks (WNNs), which incorporate wavelet functions into a neural network, have been proposed by Zhang and Benveniste [18], and used for identifying and controlling nonlinear systems [19–21]. The activation functions such as sigmoid and Gaussian functions which have non-local properties in time are swapped with the wavelet functions in the hidden layers of neurons in the WNN. The output of a WNN is localized in both the time and frequency domains, thus providing the time-frequency localization properties of the input signal. This means that the WNN is a local network. Therefore, in on-line training and corresponding to any given point of the input space, a small subset of the network parameters is active and can thus be updated. This means that the generalization ability of the WNN can be maintained while its flexibility is high, and its training can be performed in speeds higher than that of a non-local network. Furthermore, local minima can be eliminated in the WNN. The WNN, however, has a shortcoming too [22]: it has a feed-forward structure. To solve this problem, the self-recurrent wavelet neural network (SRWNN) has been proposed [22]. Due to having a mother wavelet layer with self-feedback wavelets, the SRWNN is able to record the previous data of the network, adapting very fast to sudden changes in configuration or conditions of the controlled plant.A fuzzy wavelet neural network (FWNN) combines wavelet neural networks (WNN) with a Takagi-Sugeno-Kang (TSK) fuzzy model in order to enhance the function approximation accuracy, as well as the generalization ability in very complex processes. Several previous works have discussed the synthesis of an FWNN to solve such problems as forecasting, function approximation, fault diagnosis, system identification, and control problems [23–26]. In [23], fault diagnosis for power transformers is discussed using a rough set (RS) and fuzzy wavelet neural network, integrated with a least square weighted fusion algorithm. A gradient-based update rule is employed to update all parameters of the FWNN in on-line mode, while an ALRs algorithm is also proposed to guarantees the convergence of the adaptive process in [24]. The constructed network is used for identification and control of dynamic plants. In [25], using a combination of TSK fuzzy models with wavelet transform and ROLS learning algorithm, a fuzzy wavelet network is proposed with the aim of approximating arbitrary nonlinear functions. A fuzzy wavelet neural network (FWNN) approach is introduced for forecasting long-term electricity consumption in a high energy consuming city, while the rate of training is raised compared with the prediction model based on the artificial neural network in [26].In this paper, a stable fuzzy wavelet neural-based adaptive power system stabilizer (SFWNAPSS) is proposed for stabilizing the inter-area oscillations in a multi-machine power system. Considering the advantages of SRWNN, in our proposed approach we employ it as several distinct sub-networks to construct a flexible self-recurrent wavelet- based consequent part. By applying an efficient genetic algorithm, the optimal values of the proposed SFWNAPSS parameters are obtained. A back-propagation algorithm with LALRs is proposed in order to update all parameters of the consequent part of each fuzzy rule in on-line operation. Kundur's four-machine two-area benchmark power system and six-machine three-area power system are used with an aim of assessing the effectiveness of the proposed stabilizer. Studies demonstrate promising results and show that the inter-area oscillations are successfully damped by the SFWNAPSS. In brief, the main contributions of the paper are summarized as follows:a.The main disadvantage of FWNN is that the application domain is limited to static problems due to its feed-forward network structure. Therefore, we propose to use a self-recurrent wavelet neural network (SRWNN) in the consequent part of FWNN, solving the control problem for chaotic systems.Our proposed structure requires fewer wavelet nodes than the networks with feed-forward structure, due to the dynamic behavior of the recurrent network.Finding the optimal learning rates is a challenging task in the classic gradient-based learning algorithms. Hence, in our proposed framework, all of the learning rates are determined optimally based on Lyapunov stability theory.We develop a controller based on the proposed network structure and use it for damping the oscillations in the multi-machine power system.The brief outline of this paper is as follows: a brief background of SRWNN structure is presented in Section 2; Section 3 describes the architecture of the proposed FWNN with self-recurrent consequent part; the design procedure of a stable fuzzy wavelet neural-based adaptive PSS is discussed in Section 4; in Section 5, a comprehensive stability study is provided; the initialization of the proposed stabilizer by GA is presented in Section 6; design validation and simulation results are provided in Section 7; finally, the conclusions are presented in Section 8.A detailed structure of SRWNN with Nininputs, one output and Nin×Nwmother wavelets is illustrated in Fig. 1. Network inputs are directly passed to the second layer, i.e., mother wavelet layer 3. Note that different choices of wavelet prototypes are possible for use as the elementary building blocks when constructing wavelet neural network models. Some choices can be effectively employed for some problems and other choices for others; there is no systematic approach. However, in practice, these choices only lead to marginal differences. In our study, the first derivative of a Gaussian function φ(x)=x·exp(−0.5x2) is selected as a mother wavelet function, which has the universal approximation property [27]; although the proposed framework can easily be adapted to work with other wavelet functions. According to the selected mother wavelet, each wavelet φrℓof the second layer, which is a translated and dilated version of the mother wavelet, is represented as:(1)φrℓ(zrℓ)=zrℓexp(−0.5⋅zrℓ2),∀zrℓ=urℓ−trℓdrℓ,r=1:Nw,ℓ=1:Nin.where for discrete time k(2)urℓ(k)=xℓ(k)+φrℓ(k−1)θrℓ,r=1:Nw,ℓ=1:Nin.where trℓand drℓstand for the wavelet's translation and dilation parameters, respectively; and θrℓis the weight of the self-feedback loop that can be considered as a storage coefficient. The subscript rℓ shows the ℓthinput term of the rthwavelet. The product of the wavelets is then calculated in the product layer as follows:(3)ψr=∏ℓ=1Ninφ(zrℓ)=∏ℓ=1Ninzrℓexp−0.5⋅zrℓ2,∀r=1:NwThe SRWNN output υ is finally rendered by the output layer:(4)υ(k)=∑r=1Nwwr⋅ψrwhere wris the connection weight between the product and the output layers.The FWNN model is a feed-forward multi-layer network which integrates a traditional Takagi-Sugeno-Kang (TSK) fuzzy model with wavelet neural networks. The TSK-type systems [28–30], due to having a constant or a linear equation-based consequent part with a certain number of rules, cannot provide a complete mapping of high-order non-linear dynamical plants with an admissible accuracy level, because the TSK system cannot model the local properties of the plant with a limited number of rules. In this paper, the SRWNN is embedded into a TSK fuzzy model with the aim of increasing the accuracy of the model as well as the flexibility and reaction speed of the TSK system. Now suppose that there are NFfuzzy IF–THEN rules in the following form:(5)Rj:IFx1isA1jANDx2isA2jAND...xiisAijTHENυj=∑r=1Nw,(j)wr,(j)⋅ψr(j)where xiis the ith input variable of the system for i=1:Ninand Aijis a linguistic term characterized by a fuzzy membership functionμAij(xi)for j=1:NF. The structure of the proposed FWNN with self-recurrent THEN-part with Nininputs and NFfuzzy rules is represented in Fig. 2. It consists of five layers. The inputs of the first layer are directly passed to the second layer.A number of different types of membership functions (MFs) have been proposed for a fuzzy control system. For example, in [31] the studies conducted show that the performances of the neuro-fuzzy-based stabilizer with triangular, trapezoidal and Gaussian-shaped MFs hardly differ from each other. Hence, it may be deduced that any of the alternative shapes (Gaussian, triangular or trapezoidal) can be chosen without compromising performance. The Gaussian membership functions, due to maintaining the natural distribution of the data, make the training data more ‘realistic’. Therefore, in this study, the Gaussian function is selected as the membership function of the second layer. The output of each node in the second layer can be calculated as:(6)μAij(xi)=exp−(xi−cij)2σij2,∀i=1:Nin;j=1:NF.where cijdenotes the center parameters and σijdenotes the scaling parameters for the membership function associated with rule j. Each node of the third layer shows a fuzzy rule R, and thus, the node number of the third layer is equal to the total number of rules R1toRNF. Each node output can be represented as:(7)μj(x)=∏iμAij(xi),i=1:Nin,j=1:NF.where Π denotes AND (min) operation. The fourth layer is the consequent layer, which consists of NFSRWNNs. In the fifth layer, the outputs of the SRWNNs are multiplied by the node output of the third layer. Each product node of this layer can be expressed as follows:(8)uj(x)=μˆj(x)⋅υj,j=1:NF.where(9)μˆj(x)=μj(x)∑j=1NFμj(x)In Eq. (8)υjshows the output of the jth SRWNN which can be calculated as:(10)υj=∑r=1Nw,(j)wr,(j)⋅ψr.(j),j=1:NFwhere each parameter with subscript (j) belongs to the jth SRWNN; for example, Nw,(j) stands for the number of nodes in product layer of the jth SRWNN. The consequent parts of fuzzy rules are calculated using Eq. (10). Eventually, the network output is calculated as:(11)u(k)=∑j=1NFμˆjx⋅υj=∑j=1NFujIn this section, the proposed FWNN with self-recurrent THEN-part is used to design a stable fuzzy wavelet neural-based adaptive PSS (SFWNAPSS) for power system stabilization, based on direct adaptive control theory. The parameters of the consequent part in the fuzzy rules are chosen to be adapted in real-time operation, while the antecedent part's parameters are constant throughout the process. The detailed structure of the proposed SFWNAPSS is illustrated in Fig. 3.The main control object is to design the SFWNAPSS so that the system oscillations Δω can quickly be damped. The system oscillations Δω and some of its derivatives are selected as the input vector of the SFWNAPSS as follows:(12)xc=x1,x2,...,xNinThe input vector is normalized to range [−1,1] using parameters aIand b1:bn−1. The stabilizer signal u can be calculated in each step time k as:(13)uk=acfcxc=acu′kwhere fcis the non-linear function of the SFWNAPSS, calculated by Eqs. (6)–(11). Considering the normalized input vector xc, u’(k) is scaled to the range of [−1,1]. Thus, it needs to be multiplied by factor acto yield a control signal u(k) in a range of [−ac, ac] that can represent the typical output range limit of the proposed stabilizer. The goal is to apply the control signal u(k) to the plant at each time step k so that the power system oscillations Δω can be damped quickly. In this paper, a back-propagation (BP) based learning algorithm is utilized for on-line adaptation of the abovementioned parameters. To adapt the stabilizer parameters, and consequently, to select the optimal value of the control signal, the following performance index is proposed for both online and offline modes:(14)Jc(k)=12Δωdk−Δωk2+β⋅u2k=12ec,12k+ec,22kThe proposed performance index includes two terms. By minimizing its first term e2c,1(k), the desired value yd(k) can be tracked by the plant output y(k). The penalty factor β is applied to the control signal u(k) as the second term e2c,2(k), with the aim of increasing the control performance through creating an optimal reconciliation between the control signal energy and the control performance. All parameters of jth SRWNN in the THEN-part can be introduced as the vector P(j), as follows:(15)P(j)=p(j)1,...,p(j)l,...,p(j)4=wr(j),trℓ,(j),drℓ,(j),θrℓ,(j),∀j=1:NF,l=1:4,r=1:Nw,(j),ℓ=1:NinAs stated before, each parameter with the subscript (j) belongs to the jth SRWNN of the THEN-part. Therefore, an arbitrary parameter of the THEN-part can be updated on-line, in each sampling period, by a BP-based algorithm as follows:(16)p(j)lk+1=p(j)lk+γl−∂Jck∂p(j)lk,∀j=1:NF,l=1:4.wherep(j)land γlrepresent the arbitrary parameter and the corresponding learning rate in the THEN-part, respectively. Therefore, the learning rate vector can be defined as:(17)γ=γ1,...,γl,...,γ4=γw,γt,γd,γθ,∀l=1:4.In Eq. (16), the gradient of the performance index Jc(k) with respect to an arbitrary parameterp(j)lof the THEN-part can be calculated as:(18)∂Jc(k)∂p(j)l(k)=Δω(k)∂Δω(k)∂u(k)+β⋅u(k)×acμj(x)∑h=1NFμh(x)∂υj∂p(j)l(k)If Eq. (18) is successfully calculated, it is then possible to update all the parameters of the THEN-part by replacing Eq. (18) with Eq. (16). Considering the SRWNN structure,∂υj/∂p(j)lkin Eq. (18) for l=1:4 can be easily calculated as follows:(19)∂υj∂p(j)1(k)=∂υj∂wr,(j)(k)=ψr,(j)(20)∂υj∂p(j)2(k)=∂υj∂trℓ,(j)(k)=wr,(j)⋅ψr,(j)−1drℓ,(j)1zrℓ,(j)−zrℓ,(j)(21)∂υj∂p(j)3(k)=∂υj∂drℓ,(j)(k)=zrℓ,(j)∂υj∂trℓ,(j)(k)(22)∂υj∂p(j)4(k)=∂υj∂θrℓ,(j)(k)=−φrℓ,(j)(k−1)∂υj∂trℓ,(j)(k)In Eq. (18), ∂Δω(k)/∂u(k) shows the plant's sensitivity to control signal u(k). Based on direct adaptive control theory [32], we can write:(23)∂Δω(k)∂u(k)≅sign∂Δω(k)∂u(k)Using Eqs. (16)–(23), all the parameters of the THEN-part can be accurately updated, so as to minimize the cost function (14).In a BP-based learning algorithm, when a small value is chosen for the learning rate, it leads to the lower speed of convergence. However, a large value of the learning rate leads to a non-stable learning procedure, too. In this section, we introduce a Lyapunov-based adaptive learning rate (LALR) algorithm which can effectively be used firstly to increase the learning speed of the control system, and secondly to guarantee the convergence of the proposed approach.The control performance index (14) is selected as a Lyapunov function:(24)Vc(k)=12∑ν=12ec,ν(k)The change of Lyapunov function due to the learning procedure can be calculated as:(25)ΔVc(k)=12∑ν=12ec,ν(k+1)−ec,ν(k)where(26)ec,ν(k+1)=ec,ν(k)+Δec,ν(k)∀ν=1:2Considering the proposed stabilizer with full-adaptive THEN-part, we can write:(27)Δec,ν(k)≜∑j=1NF∂ec,ν(k)∂p(j)l(k)TΔp(j)l(k)∀ν=1:2Considering control system configuration, we can write:(28)∂ec,1(k)∂p(j)l(k)=−S⋅ac⋅μjx∑h=1NFμh(x)⋅∂υj∂p(j)l(k)(29)∂ec,2(k)∂p(j)l(k)=β⋅ac⋅μj(x)∑h=1NFμh(x)⋅∂υj∂p(j)l(k)where S=∂Δω(k)/∂u(k) is system sensitivity. In Eq. (27),Δpjl(k)can be expressed as:(30)Δp(j)l(k)=γl−∂Jc(k)∂p(j)l(k)=γlS⋅eC,1(k)−β⋅eC,2(k)⋅ac⋅μj(x)∑h=1NFμh(x)⋅∂υj∂p(j)l(k)Using Eqs. (27)–(30), both Δec,1(k) and Δec,2(k) can be written as:(31)Δec,1(k)=γl−S2⋅ec,1(k)+S⋅β⋅ec,2(k)×ac2∑h=1NFμh(x)2⋅∑j=1NFμj2(x)⋅∂υj∂p(j)l(k)2(32)Δec,2(k)=γlS⋅β⋅ec,1(k)−β⋅ec,2(k)×ac2∑h=1NFμh(x)2⋅∑j=1NFμj2(x)⋅∂υj∂p(j)l(k)2Considering Eqs. (25)–(26) and (31)–(32),ΔVckcan be calculated as:(33)ΔVc(k)=−ac2∑h=1NFμh(x)2×∑j=1NFμj2(x)∂υj∂p(j)l(k)2S⋅ec,1(k)−β⋅ec,2(k)2λCwhere(34)λC=γl1−(S2+β)2γl⋅ac2∑h=1NFμh(x)2∑j=1NFμj2(x)∂υj∂p(j)l(k)2where λccan be written as:(35)λC≥γl⋅1−12(S2+β)γlac2∑h=1NFμh(x)2×∑j=1NF{max(μj(x))}2max∂υj∂p(j)l(k)2where μj(x)≤1. Based on Lyapunov's stability theorem, if λc>0 is satisfied, then ΔVc(k)<0; thus, the asymptotic convergence of the proposed stabilizer is guaranteed. Considering Eq. (35) and based on the Lyapunov stability theorem, the results of the above-performed stability analysis can be rendered using the following proposition:Proposition 1Let γlbe the learning rate value for an arbitrary parameter of the THEN-part; then, the convergence of the proposed stabilizer is guaranteed if γlis chosen as:The maximum value of γlwhich guarantees the fastest or most optimal convergence corresponds to:Proof: As μj(x)≤1, Eq. (35) can express as follows:λC≥γl⋅1−12γlξ,∀ξ=(S2+β)ac2∑h=1NFμh(x)2∑j=1NFmax∂υj∂p(j)l(k)2>0Then we can write:λc≥−0.5ξγl−1ξ2+12ξTherefore, the maximum learning rate which guarantees convergence is 1/ξ. In Eq. (37), the system sensitivity S must be replaced by Smaxas follows:(38)S=∂Δω(k)∂u(k)≅sign∂Δω(k)∂u(k)Thus, Smaxcan be calculated as:(39)Smax=maxsign∂Δω(k)∂u(k)=1As we know, the convergence rate of BP depends on the choice of the initial values of the unknown parameters to be optimized; thus, a GA-based approach is proposed for stabilizer initialization in this section. Although the binary representation has been frequently applied to optimization problems, in the present paper, we use the real-valued representation scheme for the solution. The application of real-valued representation in the GA is claimed by [33] to offer some advantages in numerical function optimization over binary encoding. During the network initialization process, the center parameters cijand the scaling parameters σijof Gaussian membership functions in the antecedent part of the rules, the translation trℓ,(j), dilation drℓ,(j) and the storage coefficient θrℓ,(j) parameters of the wavelet functions, and the weight wr,(j) parameters in the consequent part of the rules are optimized. GA begins with a population of randomly generated chromosomes, which each one represents a potential solution for the optimization problem. Here it should be noted that the performance index presented in Eq. (14) is also used for the FWNN initialization.Assume that there are NSsamples (x(1), x(2),… x(k),…, x(NS)), over a time interval from 0 to ts. Accordingly, the network output for the qthchromosome associated with sample k can be calculated as follows:(40)uq(k)=∑j=1NFμˆjqx(k).υjq=∑j=1NFυjq.∏iexp−(xi(k)−cijq)2/(σijq)2/∑j=1NF∏iexp−(xi(k)−cijq)2/(σijq)2,∀i=1:Nin,j=1:NF.(41)υjq=∑r=1Nw,(j)wr,(j)q⋅ψr,(j)q=∑r=1Nw,(j)wr,(j)q.∏ℓ=1Nin((urℓ−trℓq)/drℓq)⋅exp(−0.5((urℓ−trℓq)/drℓq)2),∀j=1:NF,r=1:Nw,ℓ=1:Nin.whereTherefore, the qthchromosome can be represented as(42)Uq=cijqσijqtrℓ,(j)qdrℓ,(j)qθrℓ,(j)qwr,(j)q,∀r=1:Nw,ℓ=1:Nin,j=1:NF.where(43)cijq=[c11q...cNin1q...c1NFq...cNinNFq](44)σijq=[σ11q...σNin1q...σ1NFq...σNinNFq](45)trℓ,(j)q=[(t11,(1)q...t1Nin,(1)q...tNw1,(1)q...tNwNin,(1)q)...(t11,(NF)q...t1Nin,(NF)q...tNw1,(NF)q...tNwNin,(NF)q)](46)drℓ,(j)q=[(d11,(1)q...d1Nin,(1)q...dNw1,(1)q...dNwNin,(1)q)...(d11,(NF)q...d1Nin,(NF)q...dNw1,(NF)q...dNwNin,(NF)q)](47)θrℓ,(j)q=[(θ11,(1)q...θ1Nin,(1)q...θNw1,(1)q...θNwNin,(1)q)...(θ11,(NF)q...θ1Nin,(NF)q...θNw1,(NF)q...θNwNin,(NF)q)](48)wr,(j)q=[w1,(1)q...wNw,(1)q...w1,(NF)q...wNw,(NF)q]can all be considered as free design parameters. Thus, the total number of free unknown parameters to be optimized is NF(Nw(3Nin+1)+2Nin). The initialization of FWNN is consequently equivalent to the determination of the abovementioned parameters. In the above equations, it is supposed that the number of nodes of product layer of all SRWNNs are the same, i.e., Nw,(1)=Nw,(2)=…=Nw,(NF)=Nw.In order to investigate the effectiveness of the proposed SFWNAPSS stabilizer, and tuning its parameters in the way presented in this paper, simulation studies based on two different models of multi-machine power system are performed. The first model is a four-machine two-area system, which is used as a benchmark problem in the literature [34]. The second model is a six-machine three-area system which is an expansion of a two-area benchmark system taken from [35].In this section, the benchmark two-area model shown in Fig. 4is adopted for simulation studies [36]. Each area includes two generator units. Each generator is equipped with PSS and has a rating of 900MVA and 20kV. Each of the units is connected through transformers to a 230kV transmission line. The performance of the designed SFWNAPSS is compared with both the multi-band power system stabilizer (MB-PSS) and the conventional PSS. The MB-PSS is represented by the IEEE St. 421.5 PSS 4B type model [37], and the conventional PSS is taken from P. Kundur [36].Three modes of oscillations dominate in the example power system; an inter-area mode with fn=0.64Hz and one local mode in each area. The goal of this section is to use the proposed SFWNAPSS as a supplementary stabilizing signal for damping inter-area oscillations between the areas 1 and 2. The simulations are carried out while, the generators 1 and 4 are equipped with proposed stabilizer and the remaining generators are equipped with CPSS.The parameters for initialization of the proposed stabilizer by GA are chosen as follows: the number of fuzzy rules NF=3 and the number of wavelets Nw=2(in each SRWNN). The value of the penalty factor β is set to 0.00003, and a sampling rate of 60Hz is also selected. The input vector of SFWNAPSS is selected as [ac−1·*Δω(k), b1−1*{Δω(k)−Δω (k−1)}], meaning that the SFWNAPSS has only two inputs. The population size and the maximum generation number are set to 60 and 300, respectively. With these parameters, the training of the network is repeated 20 times from different initial populations and selects the best result as the final optimization solution. The membership function parameters in the antecedent parts of the fuzzy rules and the parameters of SRWNN in the consequent parts of the fuzzy rules, which are obtained at the end stage of the training algorithm, are given in Tables 1 and 2, respectively. All the parameters given in Table 2 are considered to be updated on-line based on direct adaptive control theory and employing a back-propagation learning algorithm. To evaluate the robustness of the proposed stabilizer, different faults are exposed to two different configurations of the system, namely configurations A and B.In this configuration, after carrying out the power flow with the Powergui block provided in MATLAB, it is observed that a 413MW power P12 should be transferred from area 1 to area 2. The inter-area mode of oscillations also has a frequency value of 0.64Hz. The system's responses to a 10-cycle three-phase-to-ground fault at the middle of the tie-line and two other locations, which are considered to be within areas 1 and 2, respectively, are all depicted in Figs. 5–7. For comparison purposes, the difference between the speed of generators G1 and G3, ω13=(ω1−ω3) is monitored. The performance of the proposed stabilizer is compared with both the MB-PSS and CPSS. From these figures, it can be concluded that the proposed SFWNAPSS provides the best damping to the system oscillations, not only in damping the inter-area oscillations but also in damping the oscillations on the tie-line between the two areas as compared with both the MB-PSS and CPSS. Additionally, the SFWNAPSS has better control performance in terms of settling time and overshoot, thanks to the on-line adaptation process. The intelligent changes of all learning rates of the SFWNAPSS are considered another advantage of the proposed approach. In order to demonstrate this capability, the timely variations of the SFWNAPSS learning rates for the case in which a 10-cycle three-phase fault occurs in the middle of the tie-line is presented in Fig. 8.One of the tie-line lines between the two areas is disconnected from the system as a contingency. The resulting system can be considered a post-contingency system, with a new configuration which operates at a new operating point; however, both load and generation patterns are the same as those of configuration A. This means that the frequency of the inter-area mode is also shifted from 0.64Hz to 0.44Hz. After removing one of the tie lines, the post-contingency system is subjected to a 10-cycle three-phase-to-ground fault in the middle of another tie-line line. The system responses to these faults are depicted in Fig. 9. To get an insight into the changing of the operating condition, rotor angle deviations (δ1−δ4) between G1 and G4 are also provided by the figure. From the results, it can be seen that both the MB-PSS and CPSS fail to stabilize the system in its new configuration; nevertheless, the proposed SFWNAPSS are successful in maintaining stability after being subjected to the fault. This is because the proposed SFWNAPSS is able to handle changes in the system conditions and/or the configurations by the concepts of both fuzzy theory and on-line training of FWNN.For the studies in this section, the investigated four-machine two-area benchmark model is developed to establish a six-machine three-area power system, shown in Fig. 10. Each area includes two generator units with the same characteristics. The areas 1 and 2 are connected to each other via two lines with a length of 220km, while the length of the connecting line between areas 1 and 3 is 50km. Like before, the performance of the proposed SFWNAPSS is compared with both the MB-PSS and CPSS. The modified system consists of five oscillation modes: three local and two inter-area modes [35]. The simulations are presented while the generators 1, 4 and 5 are equipped with the SFWNAPSS and the rest of the generators are equipped with CPSS.All network structures as well as the initialization and training processes for the SFWNAPSS are similar to those of the previous example system. Here again, the number of fuzzy rules and the number of wavelets are chosen to be three and two, respectively. Moreover, the value of penalty factor β is set to 0.00003, and a sampling rate of 60Hz is also selected. The input vector of SFWNAPSS is selected as the previous example. In order to investigate the performance of the proposed SFWNAPSS in damping low frequency oscillations in the test system, two case studies are considered.In this case, a 10-cycle three-phase-to-ground fault is independently applied at buses 7 and 9, respectively. After clearing the fault, the system configuration is restored to its original healthy state. The system responses associated with this case study are illustrated in Figs. 11 and 12. For comparison purposes, the differences between speed of generators G1 and G3, ω13=(ω1−ω3), G1 and G5, ω15=(ω1−ω5), G3 and G5, ω35=(ω3−ω5), G2 and G4, ω24=(ω2−ω4), are monitored. The performance of the proposed SFWNAPSS is compared with both the MB-PSS and CPSS. As observed in these figures, the SFWNAPSS successfully damps out all oscillation modes in the areas, and is able to preserve the stability of the system with a favorable performance. Furthermore, the results clearly indicate that the transient responses of the system to the proposed SFWNAPSS, for two different locations of the fault, are well damped as compared to those with the MB-PSS and CPSS.To further assess the effectiveness of the proposed SFWNAPSS regarding transient performance and robustness, a more severe contingency is chosen to be applied in the considered test power system. For this purpose, a 10-cycle three-phase-to-ground fault is applied at bus 16 at t=1.0s, and at t=3.0s, when the oscillations of the system have not yet been damped completely, another three-phase-to-ground fault with greater duration, i.e., 12-cycle, is applied at the same bus. The system responses obtained in this case are demonstrated in Fig. 13. The obtained responses are compared with both the MB-PSS and CPSS in the same figures. Notice that the second fault is applied when the system is still under the influence of the first fault, and has not yet reached a steady state. However, even in these more serious conditions, the results show that the dynamic stabilization performance offered by SFWNAPSS is better than both the MB-PSS and CPSS. All the capabilities of the proposed SFWNAPSS come from the fact that it employed some of the techniques, such as on-line training of FWNN with a LALR, as well as a self-recurrent consequent part, in the design procedure.

@&#CONCLUSIONS@&#
In this paper, a new stable fuzzy wavelet neural-based adaptive power system stabilizer (SFWNAPSS) for damping low frequency oscillations in a multi-machine power system is proposed. Design of this controller is based on a TSK fuzzy model so that the consequent parts of fuzzy rules are constructed using a self-recurrent wavelet neural network (SRWNN). The usage of the SRWNN enables the controller to cope with the complex nonlinear system by capturing the dynamic response of the system. An efficient GA approach is adopted for initialization of the proposed controller, while the BP algorithm is used for on-line training of the consequent part's parameters. A Lyapunov-based adaptive learning rates (LALRs) algorithm is also introduced with the aim of speeding up the stabilization rate, and guaranteeing the convergence of the proposed controller. The performance of the proposed SFWNAPSS is evaluated by two multi-machine power systems subjected to different types of disturbances. The results demonstrate the superior performance of the proposed SFWNAPSS in damping the electromechanical oscillations in comparison with the MB-PSS and CPSS. Hence, SFWNAPSS greatly enhances the system's dynamic stability and improves the damping characteristics of the power system. In addition, our study shows that the proposed controller can provide other benefits, such as fast convergence rate, considerable decrease in the number of fuzzy rules and an easy algorithm.