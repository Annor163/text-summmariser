@&#MAIN-TITLE@&#
A practical finite difference method for the three-dimensional Black–Scholes equation

@&#HIGHLIGHTS@&#
We develop the numerical method for pricing of the three-asset ELS options.We use the operator splitting method (OSM) on non-equidistant grid.We compare the OSM with the Monte Carlo simulation (MCS).The OSM is more efficient and stable than MCS for calculating the Greeks.

@&#KEYPHRASES@&#
Option pricing,Equity–linked securities,Black–Scholes partial differential equation,Operator splitting method,Non–uniform grid,

@&#ABSTRACT@&#
In this paper, we develop a fast and accurate numerical method for pricing of the three-asset equity-linked securities options. The option pricing model is based on the Black–Scholes partial differential equation. The model is discretized by using a non-uniform finite difference method and the resulting discrete equations are solved by using an operator splitting method. For fast and accurate calculation, we put more grid points near the singularity of the nonsmooth payoff function. To demonstrate the accuracy and efficiency of the proposed numerical method, we compare the results of the method with those from Monte Carlo simulation in terms of computational cost and accuracy. The numerical results show that the cost of the proposed method is comparable to that of the Monte Carlo simulation and it provides more stable hedging parameters such as the Greeks.

@&#INTRODUCTION@&#
Equity-linked securities (ELS) is one of the most popular investment products whose return is linked to the performance of an underlying equity such as a single stock, a group of stocks, or an equity-based index. The ELS option pricing model is based on the Black–Scholes (BS) partial differential equation (PDE) (Black & Scholes, 1973). For some cases, there exist closed-form solutions of pricing derivatives (Capiński, 2015; Pun, Chung, & Wong, 2015). However, in most cases with complex structures (e.g., ELS), it is inefficient or impossible to derive the exact solutions. To solve the problem, an alternative way is a numerical approach (see, for example, Bandi & Bertsimas, 2014; Han & Wu, 2003; Jeong, Kim, & Wee, 2009; Wilmott, Dewynne, & Howison, 1993; Zvan, Vetzal, & Forsyth, 2000). In numerical approaches, there are several ways such as Monte Carlo simulation (MCS), binomial method, finite difference method, etc.Among these, MCS is the most commonly used method for pricing complex derivatives because of its simplicity to use. However, it should be run with a large number of random samples to get a reliable option value or calculate its sensitivities which are called by the Greeks (Choi & Song, 2008; González-Parra, Arenas, & Chen-Charpentier, 2013; Marroquı & Moreno, 2013). The Greeks, which play a key role in hedging, are defined as changes in option value relative to changes in each independent variable. It is important to calculate the Greeks accurately for hedging an option. For example, Delta is the rate of change in option price relative to the underlying asset. Therefore, in hedging, the Delta provides the number of short units of the underlying asset which is combined with a call option to offset immediate market risk. That is, the accurate value of the Delta can give a dynamical strategy for hedging against risk. For more details about the Greeks, we refer the reader to Haug (2007).Finite difference methods (FDM) such as alternating direction implicit (ADI) and operator splitting method (OSM) have been widely used in practice. The reason is that the numerical solution from FDM quickly converges to a stable value unlike MCS. Nevertheless, when pricing ELS with more than three underlying assets, FDM is not practical because it needs a lot of computational resources. Therefore, MCS is the only practical choice for three-asset ELS even though there are drawbacks such as slow convergence and non-deterministic values due to its randomness.The main purpose of this paper is to develop a fast and accurate FDM for pricing three-asset ELS options and computing its Greeks. In this study, the mathematical model is discretized by using a non-uniform FDM and the resulting discrete equations are solved by means of OSM on adaptive grids with more grid points near nonsmooth position of payoff. To show the superiority of the proposed numerical method, we compare the numerical results with those from MCS. We obtain more stable results with our proposed method than MCS in pricing and computing the Greeks of the three-asset ELS option.The rest of the paper is organized as follows. Section 2 describes the Black–Scholes equation of European options with three underlying assets. Section 3 contains the finite difference discretizations for the BS PDE and a numerical solution algorithm using OSM on adaptive grids. We present the numerical experiments in Section 4. Finally, we conclude our study by summarizing the computational results in Section 5.The pricing of options on multi-underlying assets is of great interest in the financial industry (Persson & von Persson, 2007; Rambeerich, Tangman, Lollchund, & Bhuruth, 2013). In this paper, we focus on fast and accurate calculations of the three-asset option value and its Greeks.Let x, y, and z be three underlying assets’ prices and t be a time variable. For (x, y, z) ∈ Ω and t ∈ T, the option price u(x, y, z, t) follows the BS PDE:(1)ut(x,y,z,t)+rxux(x,y,z,t)+ryuy(x,y,z,t)+rzuz(x,y,z,t)+12σx2x2uxx(x,y,z,t)+12σy2y2uyy(x,y,z,t)+12σz2z2uzz(x,y,z,t)+ρxyσxσyxyuxy(x,y,z,t)+ρyzσyσzyzuyz(x,y,z,t)+ρzxσxσzxzuzx(x,y,z,t)−ru(x,y,z,t)=0with the terminal conditionu(x,y,z,T)=Φ(x,y,z),where Φ is the payoff function at the expiration time T (Reisinger & Wittum, 2004). Subscripts x, y, z, and t of u denote the partial derivatives with respect to those variables. σx, σy, and σzare volatilities of underlying assets x, y, and z, respectively. ρxy, ρyz, and ρzxrepresent the correlation values between two subscript asset variables. r is the constant risk-free interest rate. After we transform the backward-in-time PDE (1) into the forward-in-time PDE by usingτ=T−t,we have the initial value problem(2)uτ(x,y,z,τ)=rxux(x,y,z,τ)+ryuy(x,y,z,τ)+rzuz(x,y,z,τ)+12σx2x2uxx(x,y,z,τ)+12σy2y2uyy(x,y,z,τ)+12σz2z2uzz(x,y,z,τ)+ρxyσxσyxyuxy(x,y,z,τ)+ρyzσyσzyzuyz(x,y,z,τ)+ρzxσxσzxzuzx(x,y,z,τ)−ru(x,y,z,τ),(x,y,z,τ)∈Ω×(0,T],u(x,y,z,0)=Φ(x,y,z).Let us first discretize the computational domainΩ=[0,L]×[0,M]×[0,N]with positive non-uniform space stepshi−1x=xi−xi−1,hj−1y=yj−yj−1,andhk−1z=zk−zk−1. Here,x0=y0=z0=0,xNx=L,yNy=M,andzNz=N. A time step size is defined asΔτ=T/Nτ. The numbers of grid points in the x-, y-, z-, and τ-directions are denoted by Nx, Ny, Nz, and Nτ, respectively. Fig. 1 represents a schematic illustration of the non-equidistant grid on x-axis. Here, we define the ghost pointxNx+1asxNx+hNx−1to apply the linear boundary condition conveniently.Fig. 2shows a schematic illustration of three-dimensional non-uniform grid structure which will be used in this paper.Let us denote the numerical approximation of the solution byuijkn≡u(xi,yj,zk, nΔτ), wherei=0,…,Nx,j=0,…,Ny,k=0,…,Nz,andn=0,…,Nτ. We use the zero Dirichlet boundary conditions atx=0,y=0,andz=0and the linear boundary conditions atx=L,y=M,andz=N. Now, we apply OSM (Duffy, 2006; Jeong & Kim, 2013) in order to solve Eq. (2). OSM has been used extensively in mathematical finance for solving numerically multi-asset option pricing models. The basic idea of OSM is to divide each time step into fractional time steps with simpler operators.We consider the following semi-implicit scheme:(3)uijkn+1−uijknΔτ=(LBSxu)ijkn+13+(LBSyu)ijkn+23+(LBSzu)ijkn+1,where the discrete difference operatorsLBSx,LBSy,andLBSzare defined by(LBSxu)ijkn+13=(σxxi)22Dxxuijkn+13+rxiDxuijkn+13+13σxσyρxyxiyjDxyuijkn+13σyσzρyzyjzkDyzuijkn+13σzσxρzxzkxiDzxuijkn−13ruijkn+13,(LBSyu)ijkn+23=(σyyj)22Dyyuijkn+23+ryjDyuijkn+23+13σxσyρxyxiyjDxyuijkn+13+13σyσzρyzyjzkDyzuijkn+13+13σzσxρzxzkxiDzxuijkn+13−13ruijkn+23,(LBSzu)ijkn+1=(σzzk)22Dzzuijkn+1+rzkDzuijkn+1+13σxσyρxyxiyjDxyuijkn+23+13σyσzρyzyjzkDyzuijkn+23+13σzσxρzxzkxiDzxuijkn+23−13ruijkn+1.For the discretization of the spatial variables in Eq. (3), we employ the following difference equations:Dxuijk=−hixhi−1x(hi−1x+hix)ui−1,jk+hix−hi−1xhi−1xhixuijk+hi−1xhix(hi−1x+hix)ui+1,jk,Dxxuijk=2hi−1x(hi−1x+hix)ui−1,jk−2hi−1xhixuijk+2hix(hi−1x+hix)ui+1,jk,Dxyuijk=ui+1,j+1,k−ui−1,j+1,k−ui+1,j−1,k+ui−1,j−1,khixhjy+hi−1xhjy+hixhj−1y+hi−1xhj−1y.Then, OSM consists of the following three discrete equations(4)uijkn+13−uijknΔτ=(LBSxu)ijkn+13,(5)uijkn+23−uijkn+13Δτ=(LBSyu)ijkn+23,(6)uijkn+1−uijkn+23Δτ=(LBSzu)ijkn+1.Now, we describe the numerical algorithm for Eqs. (4)–(6). Givenuijkn,Eq. (4)is rewritten as follows:(7)αiui−1,jkn+13+βiuijkn+13+γiui+1,jkn+13=fijkfori=1,…,Nx,where(8)αi=−(σxxi)2hi−1x(hi−1x+hix)+rxihixhi−1x(hi−1x+hix),(9)βi=(σxxi)2hi−1xhix−rxihix−hi−1xhi−1xhix+1Δτ,(10)γi=−(σxxi)2hix(hi−1x+hix)−rxihi−1xhix(hi−1x+hix),(11)fijk=13σxσyρxyxiyjDxyuijkn+13σyσzρyzyjzkDyzuijkn+13σxσzρzxxizkDzxuijkn−1Δτuijkn.For fixed index j and k, the solution vectoru1:Nx,jkn+13=[u1jkn+13u2jkn+13⋯uNxjkn+13]Tcan be found by solving the tridiagonal systemAxu1:Nx,jkn+13=f1:Nx,jk,where Axis a tridiagonal matrix constructed from Eq. (7) with the zero Dirichlet (u0jkn+13=0atx=0) and linear boundary (uNx+1,jkn+13=2uNxjkn+13−uNx−1,jkn+13atx=L) conditions, i.e.,Ax=(β1γ10⋯00α2β2γ2⋯000α3β3⋯00⋮⋮⋮⋱⋮⋮000⋯βNx−1γNx−1000⋯αNx−γNxβNx+2γNx).Then, Eq. (4) is implemented in a loop over the y- and z- directions with the following Algorithm 1.Similarly, Eqs. (5) and (6) are solved. Note that one execution from Eqs. (4)–(6) advances the numerical solution with a Δτ-step in time. For more details about the solution algorithm, see references (Jeong & Kim, 2013; Jeong, Wee, & Kim, 2010).In order to demonstrate the efficiency and accuracy of the proposed method, we perform the numerical experiments such as convergence test, domain size effect, non-uniform grid size effect, comparison with MCS, computation of the Greeks, and pricing three-asset step-down ELS. In all numerical tests, unless otherwise stated, we use the same parametersr=0.03,σx=σy=σz=0.3,andρxy=ρyz=ρzx=0.5. OSM and MCS algorithms are implemented using MATLAB (Mathworks Inc., Natick, MA, USA) and closed-form solutions are obtained using Mathematcia (Wolfram, 1999). Especially, in MCS, we use the antithetic variates technique (Hammersley & Morton, 1956) among the variance reduction methods. The programs are executed on Intel(R) Core(TM) Duo CPU @3.00 GHz desktop PC.We perform a convergence test in order to verify the accuracy of OSM. We consider the cash-or-nothing option with three underlying assets. The payoff is given asu(x,y,z,0)={100ifx≥K1,y≥K2,z≥K3,0otherwise.Here, we takeK1=K2=K3=100. For this test, we useΩ=[0,200]×[0,200]×[0,200]andT=1/12. We discretize each direction of the domain as[0,100−(m+0.5)h,…,100−1.5h,100−0.5h,100+0.5h,100+1.5h,…,100+(m+0.5)h,200],wherem=round[100/h−0.5]−1. The order of accuracy is defined as the ratio of successive errors: log2(eh/eh/2), where ehis the difference of the numerical solution using the space step size h and the exact solution ue. Exact solution for the cash-or-nothing option is obtained from the formula which is described in Appendix.First, we compute the numerical solutions u(100, 100, 100, T) withΔτ=1/1440and a set of increasingly finer grids, i.e.,h=8,4,2,to test the convergence rate for the spatial discretization. To get the option value by OSM at a point(x,y,z)=(100,100,100),we use trilinear interpolation from the eight neighborhood points. The exact solution is calculated asue=24.41647at(x,y,z)=(100,100,100). Table 1shows that this method has the second order accuracy in space.To show the convergence rate for the temporal discretization, we fix the space step size ash=1and choose a set of decreasing time steps,Δτ=1/90,1/180,1/360. All other parameters are the same as before. As expected from the discretization, first-order accuracy with respect to time is observed in Table 2.We investigate the effect of domain sizeΩ=[0,L]3for the numerical solution u(100, 100, 100, T). We takeL=125,150,175,200,225,and 250 withh=1,T=1/2,andΔτ=1/360. For each x-, y-, and z-directions, we set the mesh as[0,0.5,1.5,…,L−1.5,L−0.5,L]. From Table 3, we can observe that if L is larger than 200, the values do not change significantly. Therefore,L=200is large enough to be used for calculating option values when the strike price is 100.In this test, we find an optimal non-uniform grid structure which gives the smallest number of grid points with equivalent accuracy of uniform mesh. Table 4shows the value of u(100, 100, 100, T) calculated by using non-uniform grids onΩ=[0,200]3withΔτ=1/360andT=1/12. In Table 4, a: h: b denotes that mesh is[0,a,a+h,a+2h,…,b−h,b,(b+200)/2,200]for all three x-, y-, and z-directions. As shown in Table 4, the values at the top five lines are almost the same. This result suggests that we can use smaller number of grid points with equivalent accuracy. Next to the values, we also put CPU times. By using non-uniform grid, we can substantially reduce the calculation time.We compare the results from MCS and OSM with equivalent computational costs. MCS is tested with a temporal step sizeΔτ=1/360and 104, 105, and 106 samples untilT=1/12. In OSM simulations, non-uniform meshes [0 69.5:1:130.5 165.25 200], [0 74.5:1:125.5 162.75 200], and [0 79.5:1:120.5 160.25 200] for each direction are used withΔτ=1/1440untilT=1/12. In Fig. 3, the open circles are the results of u(100, 100, 100, T) from MCS with varying number of samples. For each number of samples, we plot the results obtained from 10 trials. In the legend in Fig. 3, 69.5: 130.5 denotes the numerical solution (solid symbol) from OSM on a non-uniform grid [0 69.5: 1: 130.5 165.25 200]. The other notations represent non-uniform grids in the same manner. The solid line is the analytic solution. This simulation result indicates that OSM converges to the analytic solution faster than MCS does with the same computational cost.In this section, the temporal step sizesΔτ=1/720,Δτ=1/360are used for OSM and MCS, respectively. We get the values of the Greeks at a pointx=(100,100,100)and compare the two numerical results calculated by MCS and OSM.Delta (Δ) is the rate of change of the option price with respect to the price of the underlying asset. We calculate the Delta Δxatx=(100,100,100),which is defined as(12)Δx(x,T):=ux(x,T)≈u(x+0.5he,T)−u(x−0.5he,T)h,where e denotes (1, 0, 0). Therefore, we need two simulations to obtain two valuesu(x+0.5he,T)andu(x−0.5he,T)when we use MCS. However, in OSM, we can get the Delta from only one simulation. Fig. 4shows the results by a closed-form solution, MCS, and OSM. Here, the closed-form solution of the Delta is derived by the formula in Appendix and its value isΔx(x,T)=1.38192. In MCS, the values of the Delta converge as the number of samples increases. With OSM, we obtain the Delta on three different non-uniform grids. In the legend in Fig. 4, 69.5: 130.5 represents a non-uniform grid [0 69.5: 1: 130.5 165.25 200]. The other legends represent non-uniform grids in the same manner. We need 4.15 seconds for one MCS trial with 105 samples. This means that 10 MCS trials with 106 samples takes 415 seconds. However, the numerical solution by OSM on [0 69.5: 1: 130.5 165.25 200] is calculated in 24.99 seconds. As shown in Fig. 4, we can confirm that OSM is more stable and fast method than MCS.In this section, we consider the Gamma (Γ). Gamma represents the change in the Delta of an option relative to the change in the underlying assets. Therefore, in hedging, traders need to measure Gamma as large moves in an underlying asset could change the risks they hold in option positions dramatically.For comparison, we calculate the Gamma Γxat a pointx=(100,100,100). Since Γxis the second derivative of u with respect to x, we can express the Gamma Γxas follows:(13)Γx(x,T):=uxx(x,T)≈u(x−he,T)−2u(x,T)+u(x+he,T)h2.In order to evaluate the Gamma Γxwith MCS by the formula (13), we need three different simulations. However, we can get the Gamma from OSM through only one simulation. Therefore, we can save the computational time by using OSM on a non-uniform grid. Fig. 5represents the Gamma Γxfrom a closed-form solution, MCS, and OSM. The Gamma from a closed-form solution isΓx(x,T)=−0.133136. In MCS, the Gamma with 105 samples is obtained in about 5.88 seconds. To get a reliable result with MCS, we have to perform the simulation with more than 106 samples. It means that the computational time takes more than 588 seconds. However, with OSM, we can obtain a comparable value of the Gamma to closed-form solution within only 25.02 seconds. This shows that OSM is more efficient than MCS for calculating the Gamma.Vega is the option’s sensitivity to changes in the volatility. This value is a number that tells in direction and extent the option price will move if there is a positive change in the volatility.In this section, we compare the Vega from MCS and OSM. Since the Vega is the derivative of the option price u with respect to the volatility σx, we can calculate the Vega at a pointx=(100,100,100)andσx=0.35withΔσx=0.1,i.e.,(14)Vega(x,T)|σx=0.35:=uσx(x,T)|σx=0.35≈u(x,T)|σx=0.4−u(x,T)|σx=0.30.1.Fig. 6shows the numerical results of the Vega from a closed-form solution, MCS, and OSM. Here, the Vega from closed-form formula is−2.59518. As shown in Fig. 6, the numerical result of OSM is more closer to exact solution than MCS. Also, the values of Vega by OSM is stable and deterministic while those of MCS slowly converge.As the sensitivity of the option value to interest rate, Rho is defined the first derivative of the option value with respect to the interest rate r. In this section, we evaluate the Rho at a pointx=(100,100,100)andr=0.03as follows.(15)Rho(x,T)|r=0.03:=ur(x,T)|r=0.03≈u(x,T)|r=0.03+0.00015−u(x,T)|r=0.03−0.000150.0003.Here, the Rho means the rate of change in the option value per 1% change in the risk-free interest rater=0.03. Fig. 7 represents the Rho from a closed-form solution, MCS, and OSM.In Fig. 7, the numerical results by OSM are closer to the closed-form solution. However, the results by MCS have a big deviation from the exact solution. Therefore, OSM is more efficient to evaluate the Rho than MCS.Theta (θ) is the sensitivity of an option’s value to change in time. This indicates an absolute change in option value for one-unit reduction in time. We can calculate thisvalue though the following formula:(16)θ(x,T):=ut(x,T)≈u(x,T)−u(x,T−Δt)Δt.By Eq. (16), we obtain the value of θ from closed-form solution, MCS, and OSM. These results are shown in Fig. 8. One of the notable points is that the value of θ from OSM is more quickly evaluated than MCS. The θ can be calculated with two option valuesu(x,T−Δt)and u(x, T). Therefore, MCS needs two calculations unlike OSM which needs only one calculation.From these simulation results for computing the values of the Greeks, we can confirm that the numerical results from OSM converge to the analytic solutions faster than MCS with the same computational cost.As a practical example, let us consider a three-asset step-down ELS which is the most popular kind of ELS structure in Korean financial market. The three-asset step-down ELS is a derivative securities whose payoff is determined by three underlying equity prices. This option is automatically exercised at each validation date before or at maturity if the price of underlying asset is above a pre-defined exercise level. The validation date is called the early redemption date. In step-down ELS, the pre-specified exercise levels are lowered from previous validation date to next date (Lee, 2013). If the price of underlying asset is below those levels on each validation date, the payoff will be deferred maturity (Kim, Bae, & Koo, 2014).Fig. 9(a) and (b) show the pay-off function at maturity and early redemption date for the step-down ELS, respectively. Here, the early redemption value denotes the pre-specified interim evolution date which has early redemption chances (Kim et al., 2014).Let x(t), y(t), z(t) be linearly scaled underlying assets’ prices at time t with (x(0),y(0),z(0))=(100,100,100). Let T be maturity, F be face value, and tifori=1,…,Nbe early obligatory redemption observation dates. Kiand ciare corresponding exercise prices and rates of return, respectively. Let D denote the knock-in barrier level and d denote a dummy. LetSt=min{x(t),y(t),z(t)}be the minimum of three underlying assets at t. By definition of τ, we haveSτ=min{x(T−τ),y(T−τ),z(T−τ)}. Let u(x, y, z, τ) and v(x, y, z, τ) be the solutions with and without knock-in event, respectively. A knock-in event happens when min{St∣0 ≤ t ≤ T} < D. The initial conditions are given as(17)u(x,y,z,τ=0)={FST/100ifST<K6,(1+c6)Fotherwise.(18)v(x,y,z,τ=0)={(1+c6)FifST≥K6,(1+d)FifD<ST<K6,FST/100otherwise.andFig. 9(b) shows the diagonal plots of the early obligatory redemption conditions along the linex=y=z.The solution algorithm is as follows: First, we update u and v by solving Eqs. (4)–(6) with the initial conditions (17) and (18). After that we replace the values of v by u in the region which is bounded by the knock-in barrier D, i.e.,vijk1=uijk1for(xi,yj,zk)∈Ωki={(x,y,z)|x<D,y<D,z<D}. We apply this replacement after every time step untilτ=T,i.e.,vijkn=uijknfor (xi, yj, zk) ∈ Ωkiandn=1,…,Nt. LetΩm={(x,y,z)|x≥Km,y≥Km,z≥Km}. At the first observation dateτ1=T/6,we reset values of u and v asuijkn1=vijkn1=(1+c1)Ffor (xi, yj, zk) ∈ Ω1. Likewise, at the intermediate observation dates τn, we reset values of u and v asuijknm=vijknm=(1+cm)Ffor (xi, yj, zk) ∈ Ωmform=1,2,3,4,and 5. The parameters are listed in Table 5.In this section, we chose the following parameters: the reference priceK0=100,the interest rater=0.03,the volatilities of the underlying assetsσx=σy=σz=0.3,the total timeT=3years, the face priceF=100,the knock-in barrier levelD=0.65K0,the dummy rated=0.3,the correlationρxy=ρyz=ρzx=0.5,and the computational domainΩ=[0,200]×[0,200]×[0,200]. We compare the results from MCS and OSM for the step-down ELS option (see Fig. 9). As a reference solution value, we run MCS with 107 samples andΔτ=1/360. The option value obtained from this MCS is 84.4431 and it takes 5035.73 seconds. For OSM simulation,Δτ=1/30and a non-uniform mesh [0 60:2.5:130 160 180 200 220] for each direction are used. Fig. 10(a and b) show payoff functions of u and v atz=100,respectively. Fig. 10(c) is the final solution of v atz=100andτ=3. We get its numerical value as 84.6347 and it takes only 12.0938 seconds. The relative percent error is(84.4431−84.6347)/84.4431×100%=−0.2269%. This percent error demonstrates the efficiency and accuracy of the non-uniform OSM.

@&#CONCLUSIONS@&#
To price the three-asset equity-linked securities (ELS) options, a fast and accurate numerical method is developed. In this paper, we use the Black–Scholes partial differential equation for the option pricing. The model is discretized by using a non-uniform finite difference method and the resulting discrete equations are solved by means of the operator splitting method. In particular, in order to do fast and accurate calculation, we use non-uniform grid structures which put more grid points near the singularity of the nonsmooth payoff function. The numerical results show that the cost of the proposed method is comparable to that of Monte Carlo simulation and it provides more stable hedging parameters such as the Greeks.