@&#MAIN-TITLE@&#
A novel lottery protocol for mobile environments

@&#HIGHLIGHTS@&#
This study proposes a fair and secure protocol allowing users to safely and fairly purchase lottery tickets by smart phone.The proposed lottery protocol can satisfy the fairness, accuracy, and public verification requests in a mobile environment.The proposed protocol can prevent the various malicious attacks discussed above with low computation costs.The proposed protocol can achieve the multi-participants in a mobile environment.

@&#KEYPHRASES@&#
E-lottery,Fairness,Elliptic curve,Attack,Mutual authentication,

@&#ABSTRACT@&#
In general, in order for individuals to take part in a lottery, they must purchase physical lottery tickets from a store. However, due to the popularity and portability of smart phones, this paper proposes a lottery entry purchase protocol for joint multi-participants in a mobile environment. This method integrates cryptology, including elliptic curve cryptography and public key infrastructure, enabling users to safely and fairly join a lottery via a mobile device. The lottery organization involves an untraceable tamperproof decryptor to generate the winning numbers, and the generation of those winning numbers is fair and publicly verifiable. All participants share an equal probability of winning the prize. Subsequently, a comparison table shows that the proposed protocol can withstand attacks and efficiently satisfy the known requirements in a mobile environment. In addition, this study also ensures public verification and mutual authentication.

@&#INTRODUCTION@&#
Lottery gambling is non-predictable [1–3] and its prizes vary in size. While all participants stand a chance of winning, it is impossible to know which participant will win each lottery. The actual value of the prize will vary, depending on how many people take part in each lottery, and how many winners there are for each draw. This form of gambling thus remains fascinating and exciting for many people. Participants must select several numbers when they purchase each lottery ticket, and the lottery organization (LO) randomly generates the winning number. If the numbers selected by a participant match the randomly selected winning numbers, then they will have won the lottery. Sometimes, however, different participants select the same winning numbers, and in this case the prize money will be shared between them. If the prize is not claimed, the prize will be added to the prize money generated for the next draw, often called “roll-over”. This is an extremely powerful method to entice participant to purchase lottery tickets.With the rapid growth and development of portable devices (such as the cell phone or PDA) [4–7], mobile commerce has becomes a focal issue. At present, a method for implementing a fair and secure joint purchase e-lottery protocol via a mobile environment has still not been proposed. This study thus reviewed some lottery schemes to propose just such a solution. In 2005, Chow et al. [8] proposed an e-lottery scheme using a verifiable random function. Lee and Chang [9] proposed an electronic t-out-of-n lottery on the Internet in 2009. Even though the winning prize probability is very low [10], the participants can adopt the following two methods to enhance their probability of winning.•The coordinator can join other participants to purchase one lottery ticket if the coordinator and participant just want to spend a small amount of money.If the coordinator wants to purchase sequential numbers of lottery tickets, the coordinator can invite other participants in order to collect more money.The previous schemes [9–11] offered a participant lottery purchases on the Internet, but could not support an efficient joint purchase protocol in a mobile environment.So, the participants had to collect funds and commit a coordinator to purchase many lottery tickets in order to increase the probability of winning the lottery. A fair and joint e-lottery protocol cannot depend on the presupposition that the coordinator can be trusted. The chances for any participant to win the prize must be equal, and that participant must be able to claim his/her own prize. However the important issue is that the participant can be awarded the prize individually, even when the coordinator denies the committed activity. Moreover, this study noted that the elliptic curve is suitable for mobile environments [12,13]. Elliptic curve cryptography (ECC) can use a small key size to achieve the same security level of a discrete logarithm problem (DLP). For example, 160-bit ECC and 1024-bit RSA have the same security level [14]. In 2004, Liaw [15] proposed an untraceable decryptor which can randomly input a selector with memory, and store the input data in a buffer. Furthermore, it can be designed to output data when receiving n records, or at a specific pre-set time. If it receives an enabling signal, the public key decryptor will select a pair of parameters for itself automatically, and the private key cannot be modified because it is stored in the PROM.In a lottery protocol, one of the fundamental characteristics is that no one can predict or control the outcome. When a lottery is run, participants must believe that the lottery was fair and secure. In addition, a fair and secure joint purchase e-lottery protocol in a mobile environment is also necessary. Therefore, this study proposes the following requirements for a good joint purchase lottery protocol for a mobile environment:•Defend against attacks: The proposed protocol must be secure against known attacks (such as replay attack, man-in-the-middle attack, and impersonation attack).Anonymity: The coordinator should be anonymous to ensure a fair transaction during the ticket purchase.Verifiability: All legal lotteries and the generation of the winning numbers must be publicly verifiable.Fairness: The probability of each participant winning must be the same.Accuracy: The prize should be rewarded to the real winner/s and genuine proportional prizes allotted.The remainder of this paper is arranged as follows. Section 2 presents the preliminaries of bilinear pairings and related mathematical assumptions. Section 3 describes the proposed efficient joint purchase protocol. Security analyses of this protocol are presented in Section 4. Section 5 offers discussion of the performance analysis. Conclusions are presented in Section 6.This section will introduce bilinear pairings and related methodologies. Bilinear pairings are defined on elliptic curves for efficient ID-based cryptosystems [16–20].G1is an additive cyclic group with a large prime order q, andG2is a multiplicative cyclic group with the same order q.G1is a subgroup of the additive group of points on an elliptic curve over a finite fieldE(Fp), andG2is a subgroup of the multiplicative group over a finite field. P is a generator ofG1. The detailed descriptions of groups, maps and other parameters are given in [16–20]. A bilinear pairing is a mape:G1×G1→G2, and satisfies the following properties:(1)Bilinear: e(aP,bQ)=e(P,Q)abfor allP,Q∈G1, anda,b∈Zq∗.Non-degenerate: there existsP,Q∈G1such thate(P,Q)≠1.Computability: For allP,Q∈G1, there is an efficient algorithm to computee(P,Q).A bilinear map which satisfies the above three properties is called an admissible bilinear map.Bilinear pairings have the following problems and assumptions defined on elliptic curves.(1)Decision Diffie-Hellman (DDH) problem: Given xP, yP,zP∈G1for somex,y,z∈Zq∗, lete(xP,yP)ande(P,zP). Hence, the DDH problem is easily addressed inG1.Computational Diffie-Hellman (CDH) problem: Given P, xP,yP∈G1, it is difficult to computexyP∈G1; hence, the CDH problem is difficult to address inG1.Bilinear Diffie-Hellman (BDH) assumption: Let (P,xP,yP,zP) for somex,y,z∈Zq∗; computinge(P,P)xyz∈G2is difficult.This section will describe an efficient joint purchase protocol based on an elliptic curve for mobile environments. The method consists of five phases: the initial phase, the joint participant phase, the ticket purchase phase, the winning number generation phase and the lottery prize claim phase. There are five parties in the proposed protocol:•Coordinator (C): The coordinator collects participants’ information and commits to buying lottery tickets.Participant (P): One of the participants using a mobile device to participate in the lottery.Participant Group (PG): All of the participants (including the coordinator).Lottery Proxy Center (LPC): A trustee web site that is committed to coordinating the lottery.Lottery Originator (LO): An organization deploying an LPC provides the lottery prizes and holds the lottery; The LO also sets up an untraceable and tamperproof decryptor [14] to generate winning numbers for each lottery draw.In order to hold a fair and verifiable lottery, the LO is involved in the proposed protocol, generating the winning number, for public verification. Cryptology, such as symmetrical encryption and hash chain, is applied in the proposed protocol. The Internet Secure Socket Layer (SSL) protocol is applied to protect the end-to-end communications for lottery issuing and casting. A scenario involving the proposed protocol is shown in Fig. 1.(1)LOP: The participant uses his/her identity to register to the LO. The LO sends back a permit ticket.CP: The coordinator sends a request message for ticket purchases to other participants. The participants then respond to a hidden identity message.CLPC: The coordinator proposes a purchase request including a participant’s information, to purchase lottery tickets with participants’ information.LPCPG: The LPC sends shadows to the participants’ group, respectively.LPCLO: The LPC sends shadows to the participants’ group, respectively.LOP: The LO generates winning numbers by untraceable decryptor, and then publishes the winning numbers.PLO: The winning participant uses his/her shadow to claim the winning prize. Finally, the LO returns an invoice to the participant.The following notations are used in the proposed protocol:rxthe random number generated by X,rX∈Zq∗na large number wheren=p·q,φ(n)is a Euler Totient function andφ(n)=(p-1)(q-1). The(p,q)is a pair of large prime numbersh1(·)a one way hash function,h1:{0,1}∗×G1→{0,1}k, where k is the fixed output length [21]h2(·)the map-to-point function,h2:{0,1}∗→G1R(·)the real random number function [22]PRG(·)the pseudo-random number generation functionIDithe identity of user iHIDithe hash value of the user i identity, whereHIDi=h2(IDi)sthe LO and LPC’s secret key,s∈Zq∗dIDthe private identity of user iCKc,ithe session key between coordinator and user iEk(M)/Dk(M)use symmetrical key k to encrypt or decrypt message MSSKX(M)use X’s private keySKXto sign message MVPKX(M)use X’s public keyPKXto verify message MSigitheith signatureTKithe permit ticket of the ith purchaseSHKXX’s shadowSHKXYthe shadow key between X and Yf(x)a polynomial function generated for embedding the LO’s private keySKLO, wheref(x)=c·x+SKLOmodφ(n),c∈[1,φ(n)]Qthe point of groupG1NXthe nonce generated by X, and theNX∈Zq∗Numthe lottery number selected by coordinator, whereNum=(no1,no2,…,noj)ta,tp,tcthe time of winner announcement; deadline of prize claim request; deadline for collecting information between coordinator and participantstimestampXX′s timestampx[R]the x coordinate of the R point on the elliptic curve [23]InvXX’s invoicemthe number of participants∣∣the concatenation operation⊕the exclusive OR operationA≟Bcomparing whether or not A is equal to Bthe secure channel (for example: SSL channel)the insecure channelIn the initial phase, the participant i should register to be a legal user. The LO then issues a purchasing permit, public identity and private identity for participant i. The scenario of the initial phase is shown in Fig. 2.Step 1:The LO generates a secret key s and sends it to LPC; the LO also selects a finite fieldFqover a large odd primeq>2160, and then an elliptic curve function is used:ECq(a,b):y2≡x3+ax+b(modq)with the order q overFq, wherea,b∈Fq, and4a3+27b2≠0modq[16], with the public point Q with the order n overECq(a,b). The LO computesQpub=s·Q. TheEk(·) andDk(·) are the symmetric encryption and decryption algorithms [16], respectively. Then it publishes:ECq(a,b),Q,Qpub,Ek(·),and,Dk(·).The participant i sends his/her real identityIDito the LO for registration.First, the LO checks the real identity, and then generates the public identityHIDi, private identitydIDi, and purchases permit ticketTKi.(1)HIDi=h2(IDi)(2)dIDi=s·HIDi(3)CTKi=ESKLO(dIDi)(4)SGi=SSKLO(CTKi)(5)TKi=(CTKi,SGi)The LO storesIDi, and then sends the initial messages(HIDi,dIDi,TKi)to participant i.Upon receiving the initial message, participant i verifies ticketTKi(6)VPKLO(SG1)≟CTK1If the equality holds, then participant i usesTKito purchase a lottery entry. Afterward, the LO and LPC can verify the participant’s identity via ticketTKi.In the joint participant phase, coordinator C broadcasts a request message to other participants. If the other participators agree to the coordinator’s request, they will respond with a message to the coordinator. The scenario of the joint participant phase is shown in Fig. 3.Step 1:The Coordinator C chooses a nonceNcand a point Q of the groupG1. The coordinator then computesQcandTc:(7)Qc=Nc·Q(8)Tc=Nc·Qpub+h1(Qc)·dIDcThe coordinator selects a random numberrcand a number Num of the lottery to generate a signaturesc∗:(9)Rc=rc·Q(10)sc∗=rc-1(Num-Nc·x[Rc])modnThe coordinator repeatedly stores Num,NcandQcin the database and broadcasts request messages(Qc,Tc,HIDc,Num,Rc,sc∗,tc)to other participants.Upon receiving the request message, participant i checks if the request has been made before the collect deadline timetc. Next, the participant checks the coordinator’s legality:(11)e(Tc,Q)≟e(Qc+h1(Qc)·HIDc),Qpub)If the equality holds, then participant i checks the lottery number Num:(12)V1=x[Rc]·Qc+sc∗·Rc(13)V2=Num·Q(14)V1≟V2Participant i chooses a nonceNiand computesQi:(15)Qi=Ni·QParticipant i generates the session keyCKc,ibetween coordinator C and participant i for encrypting the participant’s information:(16)CKc,i=Ni·Qc(17)C1=ECKc,i(IDi)Finally, participant i sends the response message(Qi,C1)to the coordinator C.Upon receiving the response message, coordinator C computes the session keyCKc,iand decryptsC1:(18)CKc,i=Nc·Qi(19)IDi=DCKc,i(C1)The coordinator stores(IDi,Qi)in the database.In this procedure, the coordinator integrates the participants’ information into the purchase request for the LPC. The scenario is shown in Fig. 4.Step 1:After thetc, coordinator C generates the purchase messageMbuywith participants’ information:(20)Mbuy=(ID1‖ID2‖…‖IDm‖Q1‖Q2‖…‖Qm)(21)Vbuy=Mbuy⊕h1(e(HIDc,Nc·Qpub))Coordinator C uses his/her private identity to encrypt the purchase information((Qc,Vbuy),TKc,timestampc,Num), whereTKc=(CTKc,SGc)issued by LO:(22)C2=EdIDc((Qc,Vbuy),TKc,timestampc,Num)Coordinator C sends purchase message(C2,HIDc)to the LPC for lottery ticket purchase.The LPC uses secret key s andHIDcto decryptC2:(23)dIDc=s·HIDc(24)((Qc,Vbuy),TKc,timestampc,Num)=DdIDc(C2)The LPC checks iftimestampLPC-timestampc⩽ΔT.Upon receivingSGcandCTKcfromTKc, the LPC then verifies:(25)VPKLO(SGc)≟CTKc.Upon receiving the purchase message, the LPC verifies the coordinator’s identity, generates the lottery for the participant group, and then sends the lottery numbers to participants, respectively. The scenario is shown in Fig. 5.Step 1:The LPC extracts the participants’ informationMbuyfromVbuy:(26)Mbuy=Vbuy⊕h1(e(dIDc,Qc))=(ID1‖ID2‖…‖IDm‖Q1‖Q2‖…‖Qm)HID1=h2(ID1),fori=1tom, where m is the number of participants.The LPC then selects a nonceNRPCand generatesKias participants’ shadowsSHKifor claiming the prize:SHi=f(HIDi)(-HLO/(HIDi-HLO))modϕ(n),fori=1tom(27)Ki=(NLPC⊕HIDi)PKLOmodn,fori=1tom(28)SHKi=KiSHimodn,fori=1tomThe LPC generates theRQLPCandSTjin order for participants to verify the LPC’s identity:(29)RQLPC=NLPC·Q(30)STj=NLPC·Qpub+h1(RQLPC)·dLPCTo ensure that the shadow is mapped to the true participant, the LPC hides the lotterySHKiinRViby the participant’s public identityHIDiand public pointQpub. The participant extracts his/her own shadowSHKiby using the secret key s and public identityHIDi:(31)RVi=SHKi⊕h1(e(s·HIDi,NLPC·Qpub)),fori=1tomAt last, the LPC generates the tickets of lotteryTKrafflejas proof that the participants possess their lottery tickets:(32)Crafflej=ESKLPC(ID1‖ID2‖…‖IDm)(33)SGrafflej=SSKLPC(Crafflej,Num,ta,tp)(34)TKrafflej=(Crafflej,SGrafflej,Num,ta,tp)The LPC sends lottery message(HLO,RQLPC,STj,RVi,TKrafflej)to the participant group.Upon receiving the lottery message, the participants check if the message is round or not:(35)Checke(STj,Q)≟e(RQLPC+h1(RQLPC)·HRO),Qpub)If the equality holds, the participants get their shadowsSHKiwith the private identitydIDi:(36)SHKi=RVi⊕h1(e(dIDi,RQLPC)),fori=1tomThe LPC sends participants’ information to the LO. The LO generates the shadow key by the participant information and stores it in the database. Fig. 6shows the scenario of storing purchase information.Step 1:The LPC generates shadow keySHi,LO:(37)SHi,LO=f(HLO)(-HIDi/(HLO-HIDi))modϕ(n),fori=1tomand integratesKiinto K andSHi,LOinto SH:(38)K=(K1‖K2‖…‖Km),fori=1tom(39)SH=(SH1,LO‖SH2,LO‖…‖SHm,LO),fori=1tomThe LPC sends(Num,NLPC,Mbuy,K,SH)to the LO via secure channel.Upon receiving the message, the LO usesSHi,LOandKito computeTi,LO:(40)Ti,LO=KiSHi,LO,fori=1tomThe LO stores(Num‖NLPC‖Mbuy‖K‖T1,LO‖T2,LO‖…‖Tm,LO)in the database.After the winner announcement deadline, the LO sends k numbers (i.e. 1,2,…,59) [1] to the decryptor for the generation of the winning numbers. The scenario of the decryptor generating the winning numbers is shown in Fig. 7.Step 1:Upon receiving the 59 numbers from the LO, the decryptor generates a new public/private key(ep,np)/dp[23], and then selects a random numbertiby real random function [22], for i=1 to k.The decryptor usestiand the public key(ep,np)to generateMi:(41)Mi=tiep(noi)modnp,fori=1tok(42)M=(M1‖M2‖…‖Mk)It then selects 6 winning numbersV1,V2,…,V6by pseudo-random number generating function PRG():(43)Vj=PRG(M),forj=1to6The decryptor uses private keydpto signVj:(44)Vj′=(Vj)dp·tj-1=(noj)dpmodnp,forj=1to6The decryptor then publishes(V1′‖V2′‖…‖V6′‖M‖ep‖dp‖np)for public verification. Moreover, the decryptor sends(V1′‖V2′‖…‖V6′‖ep‖np)to the LO.The LO uses the public key(ep,np)to decrypt:(45)wnoj=(Vj)epmodnp=noi,forj=1to6and then publishes the winning numbers (wno1,wno2,…,wno6).In this phase, the winning participant claims the prize if his/her number matches the winning number. The LO uses the relative shadow to check the participant’s identity, which is already in the database; if it matches, the LO grants the claim into his/her credit and generates an invoice for the winning participant. In Fig. 8, the participant claims the prize from LO by his/her shadow and ticket.Step 1:Before the claim deadlinetp, participant i must generate the claim message with his/her shadowSHKi, privateIDiandTKrafflejto claim the prize:(46)Ui,WIN=SHKi⊕h1(e(HIDi,Ni·Qpub))(47)C3=EdIDi((Qi,Ui,WIN),TKrafflej,timestampi,WIN)To prove the participant has claimed the prize, the participant must generate the signature by his/her shadowSHKi:(48)Ri=ri·Q(49)si∗=ri-1(SHKi-Ni·x[Ri])modnThe LPC then sends(Num,C3,IDi,Ri,si∗)to the LO via secure channel.The LO first checks if the Num andIDiexist in the database. If they do not, it rejects the request. Next, the LO uses Num to find if the consistent lottery information exists in the database and then checks the participant’s identity and number:(50)Num≟NumWINThe LO recovers the private identitydIDifrom the database by the identityIDi:(51)HIDi=h2(IDi)(52)dIDi=s·HIDi(53)((Pi,Ui,WIN),TKrafflej,timestampi,WIN)=DdIDi(C3)(54)ChecktimestampLO-timestampi⩽ΔT(55)VPKLO(SGrafflej)≟Crafflej(56)SHKi=Ui,WIN⊕h1(e(dID1,Qi)(57)Ti=KiSHKimodn(58)NLPC′=(Ti,LO·Ti)⊕HIDi(59)CheckNLRC′≟NLPCIf the above verifications hold, the LO dispatches the prize to the winner’s credit, and computes invoiceCInvi:(60)CInvi=ESKLO(HIDi,timestampInvi,Num,SHKi)(61)SGInvi=SSKLO(CInvi)(62)TKInvi=(SGInvi,CInvi)Finally, the LO stores the draw information(Num,IDi,SHKi,Ri,si∗timestampInvi)in the database. In this way, if the winning participant denies having claimed the prize, the LO can use(Num,IDi,SHKi,Ri,si∗timestampInvi)to prove that the prize was issued, and then send the invoice messageTKInvito the winning participant.Participant i verifies the invoice message:(63)VPKLO(SGInvi)≟CInviIf the equality holds, the participant checks if the prize has been transferred to his/her credit.This section will discuss known attacks and criteria for the proposed protocol.In the lottery ticket purchase phase, coordinator C sends purchase messages(C2,HIDi)to the LPC. If a malicious attacker intercepts or wiretaps the messages, the attacker can use the message to request a lottery ticket as the message comprises the coordinator’s public identityHIDi. Even if the LPC receives and agrees to the replay message; the attacker will still not be able to claim the prize because the LPC sends back the lottery tickets with the identity fromMbuy=(ID1‖ID2‖…‖IDm‖Q1‖Q2‖…‖Qm)and only the receiver should use the correct private identitydIDito retrieve the shadowSHKito claim the prize as follows:SHKi=RVi⊕h1(e(dIDi,RQLPC))Therefore, an attacker cannot claim the prize by replay attack.Assume an attacker intercepts messages(Qc,Tc,HIDc,Num,Rc,sc∗,tc)between the coordinator and participant. They can modify the coordinator’s identityHIDctoHIDAand the number Num toNumA. The participant will thus receive the fake messages(Qc,Tc,HIDA,NumA,Rc,sc∗·tc).First, the participant checks the legality by:e(Tc,Q)≟e(Qc+h1(Qc)·HIDA),Qpub)e((Qc+h1(Qc)·HIDA)Qpub)=e((Nc·Q+h1(Qc)·HIDA),s·Q)=e((Nc·Q+h1(Qc)·HIDA),Q)s=e((Nc·s·Q+h1(Qc)·s·HIDA),Q)=e((Nc·Qpub+h1(Qc)·dIDA),Q)≠e(Tc,P)=e((Nc·Qpub+h1(Qc)·dIDc),Q)Therefore, the attacker should have the secret key s to make the private identitydIDcfor forging the legal identity. But the secret key s is kept secret by the LO and LPC.Second, the selected lottery numberNumAshould be checked as follows:V1=x[R]·Qc+(s∗)·Rc=(x[R])·Nc·Q+(rc-1(Num-Nc·x[R])(rc·Q)=(x[R])·Nc·Q+(Num-Nc·x[R])Q=(Num)Q≠(NumA)Q=V2Thus, it cannot pass the verification, unless the attacker knows the nonceNc. But nonceNcwas generated by the coordinator and can never be disclosed.Due to repeated forgery attempts (such as double claiming, without sharing with anyone else) taking place in lotteries, it is important to be able to verify a participant’s identity. This study discusses three cases of attempted forgery that are addressed by the proposed protocol.Case 1:The attacker impersonates a legal coordinator.The attacker uses the request message(Qc,Tc,HIDc,Num,Rc,sc∗,tc)to request a participant’s information. He/she can get the replay message(Qi,C1)and use the noncencto generate the session keyCKc,i=Nc·Qi. However, an attack that extracts nonceNcis difficult to achieve because of the Elliptic Curve Discrete Log Problem (ECDLP) fromQc. Therefore, the attacker cannot obtain the participant’s real identityIDi.The attacker impersonates a legal participant.If the LPC agrees to the purchase, it will generate shadowSHKifor every participant fromMbuyand send them to participants, respectively. Even if the attacker gets the messages(RQLPC,STj,RVi); he/she must have a private identitydIDcto receive the shadow as follows:RVi⊕h1(e(s·HIDi,RQi))=RVi⊕h1(e(HIDi,NLPC·Q)s)=RVi⊕h1(e(HIDi,Q)s·NLPC)=SHKi⊕h1(e(HIDi,Qpub)NLPC)⊕h1(e(HIDi,s·Q)NLPC)=SHKiHowever, the private identitydIDcand secret key s can never be leaked, so it is impossible for an attacker to obtain the shadowSHKi.The attacker impersonates a legal winning participant.When a participant presentsSHKiand Num to claim a prize, the LO will index by Num to find the correspondingKiandTi,LOin the database. The LO then checks the legality as follows:(Ti,LO·Ti)⊕HIDi=(KiSHi,LO·KiSHKi)⊕HIDi=Kif(HLO)(-HIDi/(HLO-HIDi))·Kif(HIDi)(-HLO/(HIDi-HLO))⊕HIDi=Ki(c·HLO+SKLO)(-HIDi/(HLO-HIDi))·Ki(c·HIDi+SKLO)(-HLO/(HIDi-HLO))⊕HIDi=Ki(-c·HLO·HIDi+c·HIDi·HLO+SKLO(-HIDi+HLO)/(HLO-HIDi))⊕HIDi=(NLPC⊕HIDi)PKLOSKLO⊕HIDi=NLRC=NLRC′If the participant is not a real winner, his/her identity will not be present in the database.A participant’s ticketTKcis very important, so the proposed method encrypts this information intoC2with his/her private identitydIDcand then blends it into the lottery ticket purchase phase as follows:C2=EdIDc((Qc,Vbuy),TKc,timestampc,Num)In particular, the participant’s information(IDi,Qi)is blended intoVbuyas follows:Mbuy=(ID1‖ID2‖…‖IDn‖Q1‖Q2‖…‖Qm)Vbuy=Mbuy⊕h1(e(HIDc,Qpub)Nc)Only the LO and LPC have the secret key s to make the private identitydIDi, as follows:dIDi=s·HIDiThus participants’ identities are secret during the transactions.In the winning number generation phase, the decryptor selects and publishes the winning number message(V1′‖V2′‖…‖V6′‖M‖ep‖dp‖np). The participants can use the published parameters(M‖ep‖dp||np)to verify the published winning numbers(wno1,wno2,…,wno6)as follows:checktiep·(noi)modnp≟Mi,fori=1tokcheck(Mj)dp·tj-1≟Vj′,forj=1to6check(Vj′)epmodnp≟wnou,forj=1to6If anyone challenges the result of the winning numbers(wno1,wno2,…,wno6), they can use the pseudo-random number generation function PRG(·) with M to generate the winning numbers again.The lottery protocol should ensure an equal probability of winning the prize for every participant. The decryptor’s winning number generating function cannot be controlled or influenced by the LO or any participants. In the proposed protocol, the untraceable and tamperproof decryptor is independent, despite being set up by the LO. When the LO sends the selected numbersnoito the decryptor, the decryptor automatically generates a pair of parameters e/d for itself. Even if the decryptor publishes the parameters after generating the winning numbers, the LO or participants will not be able to guess the parameters for the next generation. Because the decryptor uses the real random number function to generate parameters, the real number has a corresponding random numberti. For this reason, the real random numbers have a new fake numberM′for every iteration by new parameters(ti,ep,dp,np). The queue is also different every time in the decryptor. Since no one can predict the outcome, the winning number generation is fair.If the LO distributes the winning prize, he/she should accurately know how many participants are engaged in the lottery. In the purchase phase, the coordinator integrates participants’ information into purchase messageMbuy; the LPC then follows the message to generate shadows and the LO stores the purchase message in the database. When a participant claims a prize, the LO will generate correlated shadow keys by the purchase message. If the participant is a legal winner, the LO checks:NLRC′≟NLPCMoreover, the purchase message includes participants’ information. The LO can count the number of the purchase in order to determining which prize/s should be allocated to each winning participant.This section compares the performance of the proposed method in terms of security and computation costs, and compares this performance with those of other methods to show the contribution of this paper. First, the security and function analysis of the proposed protocol is compared with previous protocols in Table 1. From this it is clear that the proposed protocol can withstand attacks and satisfy the known requirements, while other protocols cannot. Chow et al. and Lee and Chang’s protocol only use the pseudo-random function to generate winning numbers. These other protocols cannot, therefore, defend against known attacks. Moreover, they do not satisfy the fairness, accuracy and public verification request requirements in a mobile environment. Therefore, a participant in the proposed protocol can use his/her cell phone or mobile device to simply and safely purchase lottery numbers by him/herself or jointly with other participants.Subsequently, Table 2summarizes the performance of the proposed protocol in terms of joint purchase, lottery ticket purchase, and prize claiming. This study defines some notations for the proposed protocol as follows:Te: the time taken to execute a bilinear map operatione:G1×G1→G2.Tmul: the time taken to execute a multiplication operation of point.TH1: the time taken to execute a one-way hash functionh1(·).TH2: the time taken to execute a map-to-point hash functionh2(·).Tadd: the time taken to execute an addition operation of points.Texp: the time taken to execute a modular exponentiation operation.Tsym: the time taken to execute a symmetrical encryption/decryption operation.TXOR: the time taken to execute an XOR operation.Tsign: the time taken to sign a signature.m: the number of participants.The time taken to execute a bilinear map operationTeis longer than other operations, with the exclusion of the time taken to execute a symmetrical encryption/decryption operationTsym. Some lightweight operations of the simulation results demonstrate thatTaddandTH1are trivial in comparison withTe,TmulandTH2. The operation of the participant’s mobile device is lightweight while the lottery proxy center and lottery originator are regarded as powerful devices.In Table 2, it is seen that the participant plays a part in every phase, but his/her computation cost is not heavy. The coordinator joins other participant information and purchase lottery. However, his/her computation is similar to that of other participants. The LO should maintain low computation to keep the system stable, even if the LO is a powerful server. Obviously, the LPC has high computation cost; it must verify the coordinator’s identity, generate lottery numbers for every participant and send participant information to the LO. This is necessary so that the proposed scheme can prevent the attacks discussed above, and so that participants can claim their prizes. Based on the description above, the ticket purchase process can be guaranteed by the proposed lottery ticket purchase protocol with low computation cost.

@&#CONCLUSIONS@&#
In general, lottery participants must purchase physical lottery tickets in stores. However, smart phones and mobile devices have become very popular and powerful, and are capable of supporting secure mobile environments. This study therefore proposes a fair and secure protocol allowing users to safely and fairly purchase lottery tickets by smart phone.Since ECC is easily implemented in mobile devices, a joint e-lottery scheme is proposed. The proposed scheme can achieve security and particular requests as follows:•Support e-lottery activity.Public verification.Fairness.Defend against known attacks.Mutual authentication.In the proposed scheme, even if the coordinator wishes to pocket prizes without sharing with anyone else, they will fail. This is because winning participants can claim prizes independently, even if the coordinator misappropriates the prize. Furthermore, the fairness of the winning number is ensured by the use of an untraceable and tamperproof decryptor with a real random number generation function. It can also provide public verification by a pseudo-random number generation function.Based on the performance analysis, the proposed lottery protocol can satisfy the fairness, accuracy, and public verification requests in a mobile environment requirements. As a result, each mobile user can easily purchase lottery numbers using their smart device. In addition, the proposed protocol can prevent the various malicious attacks discussed above with low computation costs. Future research will investigate participant commissions join other brokers to claim prizes in a mobile environment.