@&#MAIN-TITLE@&#
Ant colony optimization based binary search for efficient point pattern matching in images

@&#HIGHLIGHTS@&#
An ACOBSPPM algorithm is proposed to match an image with the stored images.The algorithm is shown to be efficient in terms of computation time and accuracy.The algorithm is shown to scale well when compared to binary search.The algorithm is efficient for matching identical and partial images.

@&#KEYPHRASES@&#
Decision support systems,Image recognition,Point pattern matching,Ant Colony Optimization,Binary search,

@&#ABSTRACT@&#
Point Pattern Matching (PPM) is a task to pair up the points in two images of a same scene. There are many existing approaches in literature for point pattern matching. However, the drawback lies in the high complexity of the algorithms. To overcome this drawback, an Ant Colony Optimization based Binary Search Point Pattern Matching (ACOBSPPM) algorithm is proposed. According to this approach, the edges of the image are stored in the form of point patterns. To match an incoming image with the stored images, the ant agent chooses a point value in the incoming image point pattern and employs a binary search method to find a match with the point values in the stored image point pattern chosen for comparison. Once a match occurs, the ant agent finds a match for the next point value in the incoming image point pattern by searching between the matching position and maximum number of point values in the stored image point pattern. The stored image point pattern having the maximum number of matches is the image matching with the incoming image. Experimental results are shown to prove that ACOBSPPM algorithm is efficient when compared to the existing point pattern matching approaches in terms of time complexity and precision accuracy.

@&#INTRODUCTION@&#
Point Pattern Matching (PPM) is an important problem in the field of computer vision and pattern recognition. Its major task is to pair up the points in two images of a same scene (Zhang, Zu, & Chnag, 2003). PPM can be classified as a complete match if there is a one to one mapping and an incomplete match otherwise. PPM is usually formulated as a geometric pattern recognition problem of point-sets, in which we seek to identify all correspondence(s) of a pattern set in a sampling set.Some of the practical applications of PPM includes model-based tracking and recognition of a referenced template pattern in images, duplicate image identification, remotely sensed data with applications in civilian, agriculture, geology, oil and mineral exploration, astronomy, and military (Li, Meng, & Holstein, 2003).Some of the algorithms existing in the literature for point pattern matching include Relaxation approach (Ranade & Rosenfeld, 1980), Fuzzy Relaxation approach (Ogawa, 1984), Alignment (Huttenlocher & Ullman, 1990), Randomized Alignment (Vinod & Ghose, 1993), 2D Cluster Approach (Irani & Raghavan, 1996), Nearest Neighbor search (Boxer, 1998), Probabilistic Sorted Nearest Neighbor approach and Input Sensitive algorithms (Aiger & Kedem, 2010). The drawback in these algorithms is that the computation complexity is high. Chew et al. (1997) have proposed the best known algorithm for rigid transformations for point pattern matching which requires O (m3n2 log mn) time, where ‘m’ denotes the number of points in the model matched with the number of points ‘n’ in the scene. Van Wamelen, Li, and Iyengar (2004) have proposed Fast Expected Time (FET) algorithm which is a randomized algorithm for the alignment approach to model-based recognition. The running time of this algorithm is found to be O (n (log m)3/2), where ‘m’ is the number of points in the model matched with the number of points ‘n’ in the scene. Aiger and Kedem (2010) have proposed an Approximate Input Sensitive algorithm for point pattern matching. According to this algorithm, given point sets P and Q in the plane, the problem of point pattern matching is to determine whether P is similar to some portion of Q, where P may undergo transformations from a group G of allowed transformations. The running time of this algorithm is roughly O (n log n + km log n), where ‘m’ denotes the number of points in P matched with the number of points ‘n’ in Q. However, the drawback of the rigid transformation algorithm, FET and Input Sensitive algorithms is that the time complexity for point pattern matching is higher.Kang, Efros, Hebert, and Kanade (2009) have proposed a Re-Search algorithm to cope with confusing patterns in an indoor environment. The drawback of this algorithm is that the images which are less similar to the query image are ranked higher when compared to the images which are more similar to the query image. To overcome the drawbacks in the existing approaches, an Ant Colony Optimization based binary search approach of point pattern matching has been proposed.According to this approach, the point pattern of an image is obtained from the edges of an image. Each point pattern has a group of point values. Consider that the incoming image and the stored image point patterns are denoted as I and S, respectively. Then, I = {ip1; ip2; : : : ; ipm} and S = {sq1; sq2; : : : ; sqn}, where ipjand sqkrepresent the point values in the incoming image and stored image point pattern, respectively. The problem is to find whether the point values in I are similar to some or all of the point values in S. An Ant Colony Optimization based Binary Search Point Pattern Matching (ACOBSPPM) algorithm is proposed for matching the point values in I with the point values in S.In ACOBSPPM algorithm, a group of ant agents equivalent to the number of stored image point patterns is chosen where each ant agent compares the point values in the incoming image point pattern with the point values of the stored image point pattern. The ant agents have a global value which is initially zero. Each ant agent deposits pheromone to match each point value of an incoming image point pattern with the point values of the compared stored image point pattern using a binary search method. The ant agent counts the number of point values in the incoming image point pattern matching with the compared stored image point pattern. This denotes the matching point value count. A threshold matching point value count is obtained by dividing the matching point value count by the total number of point values in the incoming image point pattern. If the threshold is greater than 5 percent, then the matching point value count of the ant agent is compared with the global value. If the matching point value count is greater than the global value, the ant agent updates the global value with the matching point value count and the corresponding stored image point pattern. The process is stopped if one of the ant agents has a threshold of 95 percent or above. If none of the ant agents obtains a threshold percent of 95, the process is stopped when all the ant agents complete the matching process. Thus the stored image point pattern corresponding to the highest matching point value count in the global value is the solution.This paper is organized as follows. Section 2 describes the related work. Section 3 describes Ant Colony Optimization. Section 4 describes the point pattern generation. Section 5 describes Ant Colony Optimization based Binary Search Point Pattern matching for image matching. Section 6 describes the mathematical model of the system. Section 7 describes a case study. Section 8 explains the computational complexity. Section 9 discusses the experimental results. Section 10 compares ACOBSPPM algorithm with the existing point pattern matching algorithms. The conclusions are presented in Section 11.

@&#CONCLUSIONS@&#
An Ant Colony Optimization based Binary Search Point Pattern matching algorithm is proposed to match an incoming image point pattern with the stored image point patterns. The algorithm is shown to be efficient when compared to FET and Approximate Input sensitive algorithm in terms of computation time. The ACOBSPPM algorithm is much better when compared to Re-Search algorithm both qualitatively and in terms of precision accuracy. Also ACOBSPPM algorithm is shown to have less number of comparisons when compared to binary search method. It is also shown that ACOBSPPM algorithm is efficient in matching the incoming images that are identical to the stored images. Also the efficiency of the algorithm is proved for matching the partial, rotated and blurred incoming images where only some point values of the incoming image point pattern matches with the point values of the stored image.