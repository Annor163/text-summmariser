@&#MAIN-TITLE@&#
Robust quadratic assignment problem with budgeted uncertain flows

@&#HIGHLIGHTS@&#
A robust approach for quadratic assignment problem (RQAP) with budgeted uncertainty.An exact and two heuristic methods to solve RQAP.Extensive experiments to show performance of methods and quality of solutions.RQAP can be solved significantly faster than minmax regret QAP.RQAP has adjustable conservativeness while minmax regret QAP has not.

@&#KEYPHRASES@&#
Robust optimization,Budgeted uncertainty,Quadratic assignment problem,2-Opt,Tabu search,

@&#ABSTRACT@&#
We consider a generalization of the classical quadratic assignment problem, where material flows between facilities are uncertain, and belong to a budgeted uncertainty set. The objective is to find a robust solution under all possible scenarios in the given uncertainty set. We present an exact quadratic formulation as a robust counterpart and develop an equivalent mixed integer programming model for it. To solve the proposed model for large-scale instances, we also develop two different heuristics based on 2-Opt local search and tabu search algorithms. We discuss performance of these methods and the quality of robust solutions through extensive computational experiments.

@&#INTRODUCTION@&#
[1] introduced the standard quadratic assignment problem (QAP). Standard QAP deals with choosing an optimal way to assignnfacilities tonlocations to minimize the total material handling cost, given all distances between locations and the amount of material flow between each pair of facilities. A more general form of the QAP was proposed by  [2].  [3,4] considered multi-dimensional QAP.QAP is one of the hardest problems in combinatorial optimization  [5,6] and even finding a constant-factor approximate solution for the QAP is NP-hard  [7]. However, some specific cases of QAP are easy to solve  [8,9]. Many exact and heuristic methods have been developed to solve different cases of QAP. Approximated dynamic programming  [10], genetic algorithm  [11], parallel algorithms  [12,13], hybrid algorithms  [14], teaching learning based optimization  [15], semidefinite programming relaxations  [16,17], mixed integer linear programming reformulation  [18–22], reformulation linearization technique (RLT)  [23–25], formulation reductions  [26], and exploiting data structure  [27] are some of these techniques.QAP has numerous applications such as backboard wiring  [28], scheduling problems  [29], economic problems  [30], designing typewriter keyboards  [31], facility layout  [32–34], assembling printed circuit boards  [35] and many other applications. For a detailed discussion about applications and solution methods for QAP see  [36,6,37,38].In deterministic optimization, it is assumed that input data (e.g. flows between facilities and distances between locations in QAP) are precisely known in advance. Although this assumption can be true in some applications, it is not realistic in many others  [39]. [40] proposed a design for robust facility layout under the dynamic demand environment. In their approach, the layout of expected flow or expected demand is applied in all the periods. [41] developed a fuzzy model to address uncertainty in QAP. [42] reviewed facility location problems under uncertainty.  [43] studied integration of facility layout design and flow assignment problem under demand uncertainty. [44] considered uncertainty in a hospital layout problem and proposed a robust model for this problem. QAP with uncertain locations was studied in  [39].  [45] used a robust deviation (minmax regret) approach to deal with uncertainty in material flows.In uncertain optimization problems with discrete variables, in addition to robust deviation, we can use budgeted uncertainty which has the same complexity as the original model and adjustable conservativeness  [46,47]. In practice, for an uncertain mixed integer programming (MIP) problem with interval data, solving robust counterparts for budgeted uncertainty sets is much easier than finding the minmax regret solution. For example, in redundancy allocation problems, this difference is obvious by comparing the results in  [48–51], respectively. In addition, former method can find solutions with different levels of conservativeness, while the latter approach outputs only one conservative solution.In this paper, we consider a generalization of the QAP where the flows are uncertain for some subsetJof pairs of facilities. For the flow between each pair of facilities only an interval estimate (uncertainty interval) is available, and the flow can take on any value from the corresponding uncertainty interval. But, for a given protection levelΓ∈[0,|J|], it is assumed that at most⌊Γ⌋of uncertain flows are allowed to change, and one flow changes by a ratio of at most(Γ−⌊Γ⌋)of its uncertainty interval. We are interested in an assignment which minimizes the maximum cost for any possible realization of flows. In other words, because it is unlikely that all uncertain flows adversely affect the cost of assignment, it is assumed that only a subset of uncertain flows change from their nominal values.This paper is organized as follows. In Section  2, we present notation and problem statement for deterministic and uncertain QAP, and an efficient MIP equivalent for QAP. In Section  3, we develop a mathematical programming formulation of the problem as well as an equivalent MIP model. Then, two heuristic algorithms are described in Section  4. Experimental results are discussed in Section  5, and conclusions are presented in Section  6.In this section, we first present notation and problem statement for classical QAP which is mostly quoted from  [45] with some slight adjustments. Then, we present an efficient MIP equivalent for QAP from the literature. Finally, we introduce budgeted uncertainty in flow between facilities and describe some concepts related to the proposed uncertain QAP.In the standard version of QAP, it is assumed that there arenfacilities that should be assigned tonlocations, in order to minimize the total material handling cost  [1]. LetN={1,2,…,n}. For each pairi,j∈Nof facilities, letfij≥0be the flow from facilityito facilityj. In addition, for each pairk,l∈Nof locations, letdkl≥0be the travel distance from locationkto locationl. An assignment of facilities to locations can be represented by ann×nbinary matrixX, wherexik={1if facilityiis assigned to locationk,0otherwise.In any feasible assignmentX∈{0,1}n×n, each location must be assigned exactly to one facility, and similarly each facility must be located exactly in one location. Therefore, the setPof all possible assignments is defined by constraints(1)∑k=1nxik=1∀i∈N,(2)∑i=1nxik=1∀k∈N,(3)xik∈{0,1}i,k∈N.For anyX∈P, letϕiXdenote the location assigned to facilityiin assignmentX. LetdijXbe the distance between facilitiesiandjin assignmentX. Therefore,(4)dijX≔dϕiXϕjX=∑k=1n∑l=1ndklxikxjl.Given ann×nflow matrixf=(fij)and an assignmentX=(xik)∈P, let〈f,X〉denote the corresponding cost of the assignment,(5)〈f,X〉≔∑i=1n∑j=1n∑k=1n∑l=1nfijdklxikxjl=∑i=1n∑j=1nfijdijX.For a given flow matrixf, the classical QAP is:(6)QAP(f):Minimize{〈f,X〉|X∈P}.[2] proposed a more general form of the QAP as follows:(7)minX∈P∑i=1n∑j=1n∑k=1n∑l=1ncijklxikxjlwherecijkl≥0,i,j,k,l∈Nare given coefficients. Note that QAP(f) is a special case of (7) wherecijkl=fijdkl, for alli,j,k,l∈N. As discussed in  [6], different approaches have been developed to linearize the general QAP (7).  [22] demonstrated experimentally that  [19] linearization is quite effective as a MIP formulation for the general QAP. The Xia-Yuan linearization for general QAP (7) is:(8)minX∈P∑i=1n∑k=1n(wik+ciikkxik),(9)wik≥∑j=1j≠in∑l=1l≠kncijklxjl−aˆik(1−xik),∀i,k∈N,(10)wik≥likxik,∀i,k∈N,where(11)lik=minX∈Pxik=1∑j=1j≠in∑l=1l≠kncijklxjl,andaˆik=maxX∈Pxik=1∑j=1j≠in∑l=1l≠kncijklxjl.Observe that constantslik,aˆikare obtained by means of solving the regular linear assignment problems (11) which can be done in polynomial time  [6]. Valueslikare called Gilmore–Lawler constants  [6]. Formulation (8)–(10) hasn2binary variables,n2continuous variables, and2n2+2nlinear constraints.QAP(f) is a valid optimization problem as long as the values of flows and distances are known precisely. However, flows between facilities are typically only estimated within most likely intervals. In the remainder of the paper, we deal with uncertain flows.Suppose that for any(i,j)∈N×N, two numbersfij−,fij+are given,0≤fij−≤fij+, wherefij−andfij+are lower and upper bounds forfij, respectively. LetJ⊂N×Nbe the set of pairs(i,j)of facilities with uncertain flow; that is,fij−<fij+for all(i,j)∈J, andfij−=fij+for all(i,j)∈Jc=(N×N)∖J. Assume that the flowfijcan take any value on[fij−,fij+]. To normalize the uncertainty set, suppose thatfij=fij−+δijξij, whereδij≔fij+−fij−is the interval length andξijis an uncertain variable in[0,1]. Letf−,f+andf=be the scenarios (flow matrices) where for alli,j∈N,fijequals tofij−,fij+and0.5×(fij−+fij+), respectively. For a given protection levelΓ∈[0,|J|], the set(12)UΓ≔{ξ∈ℜ|J|:∑(i,j)∈Jξij≤Γ,0≤ξij≤1,∀(i,j)∈J}is called a budgeted uncertainty set.  [46] introduced budgeted uncertainty to construct robust counterparts for LP and MIP models with adjustable conservativeness. WhileΓ=0gives the most optimistic solution (deterministic problem withf=f−),Γ=|J|generates the most pessimistic one (deterministic problem withf=f+).For any perturbation vectorξ, denote the corresponding flow matrix byf(ξ). Then, the uncertainty set for flow matrixfis:(13)VΓ≔{f∈ℜn×n:∃ξ∈UΓsuch thatf=f(ξ)}={f∈ℜn×n:∑(i,j)∈Jfij−fij−δij≤Γ,fij−≤fij≤fij+,∀(i,j)∈N×N}.For a givenΓ∈[0,|J|], the robust QAP is formulated as follows:(14)RQAP:minX∈Pmaxf∈VΓ〈f,X〉.For any assignmentX∈P, the value(15)Z(X)≔maxf∈VΓ〈f,X〉=maxξ∈UΓ〈f(ξ),X〉is called the worst-case or robust cost forX. A maximizer in (15) is called a worst-case scenario forX, which is denoted byfX. The corresponding worst-case perturbation vector isξXwherefX=f(ξX). RQAP seeks a feasible solution with the smallest robust cost. LetZ∗andX∗be the optimal objective value and solution for RQAP, respectively.LetRC(X)denotes the difference betweenZ(X)and〈f−,X〉(i.e. the robust and optimistic costs ofX, respectively) which is called the robustness cost of assignmentX. In other words,(16)RC(X)≔Z(X)−〈f−,X〉.By substituting〈f,X〉from (5) into (15), we have(17)Z(X)=maxξ∈UΓ{∑i=1n∑j=1nfijdijX}=maxξ∈UΓ{∑i=1n∑j=1n(fij−+δijξij)dijX}=∑i=1n∑j=1nfij−dijX+maxξ∈UΓ{∑(i,j)∈JδijdijXξij}=〈f−,X〉+maxξ∈UΓ{∑(i,j)∈JδijdijXξij}where the first and last equalities hold by definition. The second equality is true becausefij=fij−+δijξij,∀i,j. The third equality follows from the facts that for a givenX,fij−dijXis a constant∀i,j, andδij=0if(i,j)∉J. Eqs. (16) and (17) imply(18)RC(X)=maxξ∈UΓ{∑(i,j)∈JδijdijXξij}.In the following proposition, we show how to find a worst-case scenario for a givenX.Proposition 1Consider a fixedΓ∈[0,|J|], and a givenX∈P. Based on the value ofΓ, a worst-case scenario forXcan be found as follows:•IfΓis an integer, a scenario withξij=1forΓpairs(i,j)∈Jwith the largest values ofδijdijX, andξij=0for the remaining pairs is a worst-case scenario forX.IfΓis not integer valued, a scenario withξij=1for⌊Γ⌋pairs(i,j)∈Jwith the largest values ofδijdijX,ξij=(Γ−⌊Γ⌋)for the next largest value ofδijdijX, andξij=0for the remaining pairs is a worst-case scenario forX.ProofThe distance matrix has non-negative elements which impliesdijX≥0, for alli,j∈N. Therefore,〈f,X〉is a non-decreasing linear function off∈VΓ, or equivalently〈f(ξ),X〉is a non-decreasing linear function ofξ∈UΓ. That is, for any pair of matricesf̃,fˆ∈VΓiff̃ij≤fˆijfor all(i,j)∈N, then〈f̃,X〉≤〈fˆ,X〉. Thus, there exists an extreme pointξXof polytopeUΓsuch that∑(i,j)∈JξijX=ΓandξXis a worst-case scenario forXmaximizing〈f(ξ),X〉overξ∈UΓ. Note that in all extreme points ofUΓwith∑(i,j)∈JξijX=Γ,⌊Γ⌋of theξijXare equal to 1, up to oneξijXis(Γ−⌊Γ⌋), and the remaining are 0. □It is worth mentioning that for a given assignment, finding the worst-case scenario requires sortingδijdijXfor(i,j)∈Jwhich can be done inO(|J|log(|J|)), i.e polynomial time in size ofJand consequently inn. In contrast, obtaining the worst-case scenario in minmax regret QAP requires solving a general QAP which is NP-hard  [45].In this section, we propose a mixed integer quadratic programming (MIQP) formulation of RQAP and a linear MIP equivalent.An alternative formulation for RQAP (14) is(19)minX∈P{〈f−,X〉+maxξ∈UΓ{∑(i,j)∈JξijδijdijX}}=minX∈P{〈f−,X〉+RC(X)}.An equivalent MIQP for (19) is proposed in Proposition 2.Proposition 2Problem   (19)   is equivalent to problem   (20)–(21).(20)minq∈ℜ+,r∈ℜ+|J|,X∈P〈f−,X〉+Γq+∑(i,j)∈Jrij(21)q+rij≥δijdijX,∀(i,j)∈J.ProofBy using the same idea as  [46], one can substitute the inner maximization problem in (19) with its dual(22)minq∈R+,r∈ℜ+|J|Γq+∑(i,j)∈Jrij(23)q+rij≥δijdijX,∀(i,j)∈J,which results in problem (20)–(21). □Note that by definitions (4) and (5),dijXand〈f−,X〉are quadratic functions ofx. Thus, (20)–(21) is a MIQP problem with a quadratic objective function,|J|quadratic and2nlinear constraints,n2binary and|J|+1continuous variables. To solve RQAP with an off the shelf MIP solver, we need to linearize the objective function and constraints in (20)–(21).Next, we extend  [19] linearization to RQAP.Proposition 3Problem   (24)–(27)   is a MIP equivalent of problem   (20)–(21).(24)minX∈P,w∈ℜN×Nq∈ℜ+,r∈ℜ+|J|∑i=1n∑k=1n(wik+fii−dkkxik)+Γq+∑(i,j)∈Jrij(25)wik≥∑j=1j≠in∑l=1l≠knfij−dklxjl−aˆik(1−xik),∀i,k∈N;(26)wik≥likxik,∀i,k∈N,(27)q+rij≥δij(∑l=1ndklxjl+dkmax(xik−1)),∀(i,j)∈J,∀k∈Nwhere,(28)lik=minX∈Pxik=1∑j=1j≠in∑l=1l≠knfij−dklxjl,∀i,k∈N,aˆik=maxX∈Pxik=1∑j=1j≠in∑l=1l≠knfij−dklxjl,∀i,k∈N,dkmax=maxl∈N{dkl},∀k∈N.ProofNote that equivalence of problems (20)–(21) and (24)–(27) can be easily checked by using the same insights in  [19]. First part of the objective function in (24) together with constraints (25) and (26) correspond to the minimization of〈f−,X〉in (20). Moreover, in anyX∈P, for all(i,j)∈Jandk∈N∑l=1ndklxjl+dkmax(xik−1)={∑l=1ndklxjl=dijX,ifxik=1,∑l=1ndklxjl−dkmax≤0,otherwise.Therefore, (27) is a valid linearization of (21). □Formulation (24)–(27) has2n2+n(2+|J|)linear constraints andn2binary andn2+|J|+1continuous variables.Due to difficulty of the regular QAP, only relatively small instances can be solved by exact methods  [6]. To solve larger problems, a number of heuristics have been developed in the literature  [36,6]. Since the robust QAP is at least as hard as regular QAP, heuristics are needed even more. In this section, we extend the 2-Opt local search  [52] and tabu search  [53,54] for classical QAP to solve RQAP.[52] used a local search based on 2-Opt neighborhood to solve the general QAP (7). In this method, a neighbor of a current solutionX1is obtained by swapping locations of any two facilities. Suppose thatX2is obtained fromX1by swapping locations of facilitiesa,b∈N,a≠b. Then,ϕiX2={ϕiX1,∀i≠aandi≠b,ϕbX1,i=a,ϕaX1,i=b.The difference between the objective values ofX2andX1isΔab=∑i=1n∑j=1ncijϕiX2ϕjX2−∑i=1n∑j=1ncijϕiX1ϕjX1=(cabϕbX1ϕaX1−cabϕaX1ϕbX1)+(cbaϕaX1ϕbX1−cbaϕbX1ϕaX1)+(caaϕbX1ϕbX1−caaϕaX1ϕaX1)+(cbbϕaX1ϕaX1−cbbϕbX1ϕbX1)+∑i=1,i≠a,bn[(caiϕbX1ϕiX1−caiϕaX1ϕiX1)+(ciaϕiX1ϕbX1−ciaϕiX1ϕaX1)]+∑i=1,i≠a,bn[(cibϕiX1ϕaX1−cibϕiX1ϕbX1)+(cbiϕaX1ϕiX1−cbiϕbX1ϕiX1)].In RQAP (19), the objective function consists of two parts〈f−,X〉andRC(X). Next, we extend the 2-Opt procedure to heuristically solve RQAP. For this purpose, we need to change the way of computingΔabvalues. For all(i,j)∈J, letgijX≔δijdijX. For each pair of facilitiesaandb, letΔabbe as follows:(29)Δab=Δab1+Δab2,where,(30)Δab1=〈f−,X2〉−〈f−,X1〉=∑i=1n∑j=1nfij−dϕiX2ϕjX2−∑i=1n∑j=1nfij−dϕiX1ϕjX1=(fab−dϕbX1ϕaX1−fab−dϕaX1ϕbX1)+(fba−dϕaX1ϕbX1−fba−dϕbX1ϕaX1)+(faa−dϕbX1ϕbX1−faa−dϕaX1ϕaX1)+(fbb−dϕaX1ϕaX1−fbb−dϕbX1ϕbX1)+∑i=1,i≠a,bn[(fai−dϕbX1ϕiX1−fai−dϕaX1ϕiX1)+(fia−dϕiX1ϕbX1−fia−dϕiX1ϕaX1)]+∑i=1,i≠a,bn[(fib−dϕiX1ϕaX1−fib−dϕiX1ϕbX1)+(fbi−dϕaX1ϕiX1−fbi−dϕbX1ϕiX1)],and(31)Δab2=RC(X2)−RC(X1)=maxξ∈UΓ{∑(i,j)∈JξijδijdijX2}−maxξ∈UΓ{∑(i,j)∈JξijδijdijX1}=maxξ∈UΓ{∑(i,j)∈JξijgijX2}−maxξ∈UΓ{∑(i,j)∈JξijgijX1}.Note that for the cases withi≠a,b,j≠a,b, we havegijX2=gijX1. Therefore, we only need to updategij, for other pairs of(i,j)∈Jas follows.gijX2={δabdϕbX1ϕaX1,i=a,j=bδbadϕaX1ϕbX1,i=b,j=aδaadϕbX1ϕbX1,i=a,j=aδbbdϕaX1ϕaX1,i=b,j=bδajdϕbX1ϕjX1,i=a,j≠a,bδbidϕaX1ϕiX1,i=b,j≠a,bδiadϕiX1ϕbX1,i≠a,b,j=aδibdϕiX1ϕaX1,i≠a,b,j=b.To computeΔab2in (31), we need to updategijX2for all(i,j)∈J, and then sort them. Afterward, by Proposition 1,RC(X2)can be easily computed.Suppose the algorithm is started from a random assignment and (29)–(31) are exploited to computeΔabfor alla,b∈N,a≠b. LetΔmin=mina,b{Δab}. IfΔmin<0, swap the locations of the corresponding facilities, otherwise terminate the algorithm. This procedure may be trapped in a local optimal solution. To remedy this issue, we can use multi random initial assignments or extend Taillard’s general QAP tabu search  [55] to solve RQAP.Tabu search  [53,54] is a technique to overcome local optimality in local search algorithms. For details of the general QAP tabu search, the reader is referred to  [55]. A step of tabu search will be called a swap as it is based on an attempt to swap locations of two facilities. Next, we extend Taillard’s tabu search procedure to solve RQAP. In this method, we use (29)–(31) to computeΔaband the rest of the procedure is similar to  [55].Note that the 2-Opt and tabu search algorithms do not provide any lower bound for RQAP. But, they provide upper bounds for RQAP while the robust (minmax regret) QAP tabu search in  [45] provides neither a lower bound nor an upper bound.

@&#CONCLUSIONS@&#
