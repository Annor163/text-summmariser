@&#MAIN-TITLE@&#
GPU-based parallel group ICA for functional magnetic resonance data

@&#HIGHLIGHTS@&#
A parallel group ICA (PGICA) on GPU was proposed for fMRI data analysis.PGICA demonstrated significant speedup in comparison with serial group ICA.PGICA demonstrated comparable accuracy of functional networks detection.

@&#KEYPHRASES@&#
fMRI,GPGPU,Parallel computing,Group ICA,

@&#ABSTRACT@&#
The goal of our study is to develop a fast parallel implementation of group independent component analysis (ICA) for functional magnetic resonance imaging (fMRI) data using graphics processing units (GPU). Though ICA has become a standard method to identify brain functional connectivity of the fMRI data, it is computationally intensive, especially has a huge cost for the group data analysis. GPU with higher parallel computation power and lower cost are used for general purpose computing, which could contribute to fMRI data analysis significantly. In this study, a parallel group ICA (PGICA) on GPU, mainly consisting of GPU-based PCA using SVD and Infomax-ICA, is presented. In comparison to the serial group ICA, the proposed method demonstrated both significant speedup with 6â€“11 times and comparable accuracy of functional networks in our experiments. This proposed method is expected to perform the real-time post-processing for fMRI data analysis.

@&#INTRODUCTION@&#
The blood oxygen level-dependent (BOLD) contrast functional magnetic resonance imaging (fMRI) is a non-invasive technique for the human brain activity detection. Nowadays, FMRI has become increasingly used in the neuroimaging community and even in the neurosurgery field [1]. However, it is usually high time costing for the fMRI data processing since the data is always with four dimensions (three spatial domains and one temporal domain). Recently, some parallel algorithms based on GPU have been applied to fMRI analysis, where the data naturally fits for GPU computation. The reason is that these algorithms mostly perform exactly the same calculations for each voxel. The first GPU application for fMRI is correlation analysis, which calculates the correlation coefficients between the time course of each voxel and the reference time series [2]. In 2012, some fMRI data preprocessing processes, such as detrending, motion correction and spatial smoothing, etc., have been implemented on GPU [3], and achieved more 200 times acceleration compared with statistical parametric mapping (SPM) software on CPU (http://www.fil.ion.ucl.ac.uk/spm/). Meanwhile, Eklund et al. addressed the obvious GPU acceleration of the general linear model (GLM) and canonical correlation analysis (CCA) for fMRI analysis [3]. Furthermore, Ferreira da Silva [4] developed a R-CUDA implementation of parallel Markov chain Monte Carlo (MCMC) simulation-based Bayesian multilevel model for fMRI data analysis, obtaining about 60 times speed in comparison to CPU. Recently, Scheinost et al. [5] proposed a GPU-based accelerated motion correction algorithm and modular system which could satisfy the real-time processing requirement. Some basic medical signals analysis algorithm have been optimized by using GPU, such as fast box-counting [6] and fast ray-tracing of human eye optics [7]. Unfortunately all the above methods cannot meet the multi-subject data real-time processing at group-level, especially for the group functional networks detection, due to great large amount of fMRI data.In this study, we developed a GPU-based group-level functional networks detection method for multi-subjects, named PGICA (parallel group independent component analysis), which mainly consists of GPU-based PCA using SVD and Infomax-ICA. General purpose graphic processing units (GPGPU) is a new kind of massive parallel processor, introduced in 2006 [8], and has already been applied to a great variety of research and engineering fields to achieve significance improvement in speed, compared with the optimized CPU implementations. For more information of GPU computing, please refer to Appendix 1.The remainder of this paper is organized as follows: an introduction and analysis of ICA and group ICA will be firstly presented, and then followed by the implementation of PGICA and testing system. Finally, results and analysis will be presented together with interpretations and conclusions related to advantages and limitations of this new computing model.

@&#CONCLUSIONS@&#
