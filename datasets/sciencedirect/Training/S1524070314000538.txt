@&#MAIN-TITLE@&#
Finite element based tracking of deforming surfaces

@&#HIGHLIGHTS@&#
We present a method to robustly track the geometry of an object that deforms over time.We fit a FEM-based model to the data leading to physically plausible results.We evaluate the performance of our method using synthetic and scanned data.

@&#KEYPHRASES@&#
Geometry processing,Surface tracking,Template deformation,Linear finite element deformation,

@&#ABSTRACT@&#
We present an approach to robustly track the geometry of an object that deforms over time from a set of input point clouds captured from a single viewpoint. The deformations we consider are caused by applying forces to known locations on the object’s surface. Our method combines the use of prior information on the geometry of the object modeled by a smooth template and the use of a linear finite element method to predict the deformation. This allows the accurate reconstruction of both the observed and the unobserved sides of the object. We present tracking results for noisy low-quality point clouds acquired by either a stereo camera or a depth camera, and simulations with point clouds corrupted by different error terms. We show that our method is also applicable to large non-linear deformations.

@&#INTRODUCTION@&#
The accurate acquisition of physical objects has numerous applications, especially in the entertainment industry. While there exist commercial systems for digitizing rigid objects, the acquisition of deforming objects remains a challenge due to the complex changes in geometry over time. A rigid object can be scanned sequentially from multiple viewpoints to accurately capture the complete surface, whereas scanning the entire surface of a deforming object would require a complex and expensive physical setup involving multiple synchronized sensors, which may still be subject to occlusions.Recently, several techniques were proposed that solve this problem by using a template shape as a geometric and topological prior for the reconstruction and by deforming the template to fit to the observed data [10,38,21,7]. In some of these methods, the observed data comes from a set of single-view scans. The single viewpoint assumption greatly simplifies the acquisition process. Template-based tracking approaches are shown to lead to visually pleasing results for numerous examples. However, the deformation of the unobserved side of the object is generally only guided by a smoothness function.We combine a tracking-based approach with fitting a volumetric elastic model to improve the estimation of the unobserved side of the object. We employ a linear finite element method (FEM) to solve for physical deformations when a given force is applied. Our method proceeds in two steps: First, we use a tracking approach to deform the template model. Second, we use the displacements of the observed vertices of the template mesh found using the tracking step in a FEM to predict the displacements of the unobserved vertices. Hence, rather than smoothly deforming the unobserved side of the model, we deform the unobserved side through the volumetric mesh of the FEM model. We repeatedly linearize the deformation in the FEM at its current deformation state. Note that our method allows for tracking data acquired using single, multiple, or moving viewpoints.While deformable models have been introduced to computer vision and computer graphics 30years ago [34], here we combine modern non-rigid template-based tracking with a volumetric elastic model for completion of the deformation at the unobserved side only. Our major contributions are therefore:•The combination of a non-rigid template-based tracking approach with a linear finite element model to robustly track the complete geometry of an object whose deformation is captured from a single viewpoint only.The use of a FEM-based model to deform the unseen side leading to more physically plausible results than by using a smoothness cost in the template-based tracking.Tracking linear and non-linear deformations by repeatedly linearizing the FEM model at its current deformation state.This paper presents the following three major improvements over the preliminary version of this work [40]. First, we present a computationally more efficient energy formulation to track the deformable object using a non-rigid iterative closest point framework. Second, we propose an iterative method for the FEM estimation that considers forces at supporting surfaces of the model. Our method does not require the measurement of forces but estimates the forces up to a scale factor from the FEM model and the deformation. Third, we evaluate the performance of our method extensively using numerous synthetic and scanned data sequences and compare our results to our preliminary findings. Special attention is paid to the influence of both synthetic and real scanner noise, as well as to the influence of the FEM step on the result.

@&#CONCLUSIONS@&#
We proposed an approach to track the geometry of a surface over time from a set of input point clouds captured from a single viewpoint. We combine the use of a template and the use of a linear finite element method to track the model. By linearizing the deformation at each frame, we show that we can accurately track surfaces that deform in a non-linear fashion. We demonstrate the robustness of our approach with respect to noise using a synthetic evaluation and using real data captured with a stereo setup and with a depth camera.We leave the following ideas for future work. The tracking is lost when the distance between consecutive frames is large. This could potentially be addressed by tracking feature points on the model and by using these features to guide the non-rigid motion of the template during tracking. Furthermore, our approach assumes that a template is known a priori. While this assumption is commonly used in 3D tracking approaches, it will be interesting to relax this requirement in the future. One way to relax this requirement would be to assume that the undeformed object is observed from a single moving viewpoint before the deformation, which allows to fuse these views into a template shape automatically.