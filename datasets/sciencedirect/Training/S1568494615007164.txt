@&#MAIN-TITLE@&#
Evolutionary multi-objective optimization algorithms for fuzzy portfolio selection

@&#HIGHLIGHTS@&#
We consider a constrained three-objective optimization portfolio selection problem.We solve the problem by means of evolutionary multi-objective optimization.New mutation, crossover and reparation operators are designed for this problem.They are tested in several algorithms for a data set from the Spanish stock market.Results for two performance metrics reveal the effectiveness of the new operators.

@&#KEYPHRASES@&#
Portfolio selection,Evolutionary multi-objective optimization,Pareto optimal solutions,Possibility distributions,LR-fuzzy numbers,

@&#ABSTRACT@&#
In this paper, we consider a recently proposed model for portfolio selection, called Mean-Downside Risk-Skewness (MDRS) model. This modelling approach takes into account both the multidimensional nature of the portfolio selection problem and the requirements imposed by the investor. Concretely, it optimizes the expected return, the downside-risk and the skewness of a given portfolio, taking into account budget, bound and cardinality constraints. The quantification of the uncertain future return on a given portfolio is approximated by means of LR-fuzzy numbers, while the moments of its return are evaluated using possibility theory. The main purpose of this paper is to solve the MDRS portfolio selection model as a whole constrained three-objective optimization problem, what has not been done before, in order to analyse the efficient portfolios which optimize the three criteria simultaneously. For this aim, we propose new mutation, crossover and reparation operators for evolutionary multi-objective optimization, which have been specially designed for generating feasible solutions of the cardinality constrained MDRS problem. We incorporate the operators suggested into the evolutionary algorithms NSGAII, MOEA/D and GWASF-GA and we analyse their performances for a data set from the Spanish stock market. The potential of our operators is shown in comparison to other commonly used genetic operators and some conclusions are highlighted from the analysis of the trade-offs among the three criteria.

@&#INTRODUCTION@&#
Financial optimization models for allocating risky assets involve decision-making under uncertainty. Modern portfolio selection theory comes from the mean-variance (MV) model proposed in [1] and the non-linear programming problem involved in this approach has become a classical optimization problem. Since then, most authors have attempted to build optimal solutions for the portfolio selection problem by means of trade-off analysis between two criteria: the maximization of the (mean) expected returns and the minimization of a measure of the variability of outcomes, the risk of the investment. Regarding the second criterion, the Markowitz analysis of risk is applicable when the returns are normally distributed or the utility function to be maximized is quadratic. Otherwise, Arditti and Levy demonstrated in [2] the importance of the role of skewness in discrete time models. But it can be said that the most commonly used measure of the risk is the variance, although other measures have been considered in the literature [3,4]. Overall, the multi-objective optimization nature of the portfolio selection problem is unquestionable and the use of multi-objective optimization techniques has received a great deal of attention for solving these problems [5–10].In recent years, there has been a growing interest of including information about trading and investors’ requirements into the portfolio selection problem, since not all the relevant information for portfolio selection can be obtained just by optimizing returns and risk simultaneously. Thus, some practical constraints have been added to the portfolio selection problem in order to make it more realistic, such as upper and lower bound constraints, allowing assets combinations which respect the investor's wishes, or cardinality constraints limiting the number of assets participating in the portfolios. With the introduction of such constraints, the portfolio optimization problem becomes a constrained multi-objective problem that is NP-hard, and traditional optimization methods cannot be used to find efficient portfolios. To overcome this drawback, evolutionary multi-objective optimization (EMO) algorithms have been successfully applied for generating solutions of many portfolio selection models [8,11–16]. In general, EMO algorithms are aimed at approximating the set of Pareto optimal or efficient solutions of a multi-objective optimization problem (the so-called Pareto optimal front) by applying evolution-based operators to a population of solutions (for more details, see [17,18]). In [15,19], comprehensive literature reviews about the use of EMO algorithms for solving portfolio selection problems are presented, which is a proof of the growing interest on this research field.Along with the mean and the variance, some authors include the skewness as a criteria for selecting efficient portfolios when a symmetric behaviour of the returns is not achieved. For example, Lai [5] suggested to balance the maximization of the mean and the skewness of the returns and the minimization of the variance. Subsequently, numerous papers have studied the role of skewness in portfolio selection [6,20–22]. With the introduction of skewness, the portfolio selection problem becomes three-dimensional and, in this case, goal programming techniques [5,23,24] or suitable scalarizing (single-objective) approaches [20,25] are usually applied.Commonly, solving a portfolio selection problem requires two basic components: (i) a suitable approach for quantifying uncertainty of the future returns on a given portfolio, and (ii) an optimization procedure able to provide Pareto optimal portfolios which fit the investor's conditions. Regarding the future returns, classical portfolio selection problems consider the expected return on assets as problem parameters. They are estimated throughout historical data set, usually assuming that the vector of returns on assets is multivariate-normally distributed. However, since the information available in financial markets is often incomplete and, thus, decisions are made under uncertainty, other authors assume that the uncertainty of future return on assets can be quantified by means of fuzzy logic [26,27]. Under this assumption, the multi-objective portfolio selection problem can be solved by using soft computing approaches and fuzzy optimization decision-making techniques [21,28–32].In this regards, Vercher and Bermudez [22] have recently applied possibility distributions of LR-type fuzzy numbers to quantify the uncertain returns on a given portfolio, whose membership functions are built using sample quantiles information from historical data. Derived from the distribution properties of the investment returns, the authors proposed a multi-objective optimization model for the portfolio selection problem, called possibilistic Mean-Downside Risk-Skewness (MDRS) model. The criteria considered in the MDRS model are the maximization of both the mean and the skewness of the future returns, and the minimization of the absolute semi-deviation below the mean as a risk measure (downside risk). The MDRS model also includes budget, upper and lower bound, and cardinality constraints for both the diversification of investment and the restriction of the number of assets that compose the portfolios. Note that Vercher and Bermudez [22] introduced the skewness in order to incorporate a measurement of the asymmetry of the fuzzy return on a given portfolio and to study its role in the possibilistic portfolio selection problem. For this, they proposed solving the constrained multi-objective optimization MDRS problem by using an evolutionary procedure specially designed for generating non-dominated portfolios of two alternative reformulations of the MDRS model. Each of these two reformulations are a bi-objective optimization problem which optimizes two of the objectives of the MDRS model, while the third objective is considered as an additional constraint. With this, the authors analysed the influence of the skewness either as a criteria or as a constraint, and the results obtained supported previous research in this regard: the introduction of the skewness as a goal provokes important changes in the Pareto optimal front of the portfolio selection problem, and consequently in the patterns of investment.However, the genetic procedure developed in [22] to find efficient portfolios was designed to manage bi-objective optimization problems. Therefore, the possibilistic MDRS model has not been solved as a whole constrained multi-objective optimization problem. This means that, under the aforementioned fuzzy modelling framework, the three criteria (mean and skewness of future returns, and downside risk) have not been optimized alltogether at the same time yet, taking into account all the constraints mentioned. According to this, the main motivation of this paper is twofold. Firstly, our purpose is to solve the possibilistic MDRS model suggested in [22] as a whole constrained three-objective optimization problem. Secondly, we aim at extracting interesting insights about the relationships and trade-offs among the three objectives from an overall multi-objective perspective.For these two aims, EMO algorithms are particularly useful since they can provide a set of non-dominated portfolios in just one run, from which the objective functions can be analysed from an overall perspective. But applying EMO algorithms to constrained portfolio optimization problems requires a special care for handling the objectives and constraints [19]. Mainly, for the MDRS model, the difficulty comes from the fact that only a limited number of the available assets participate in the portfolios, but not all of them, because of the cardinality constraint. To overcome this, one option can be to consider commonly used genetic operators and, afterwards, to apply several repair mechanisms for the efficient management of the constraints [19]. Alternatively, we propose new mutation, crossover and reparation operators designed ad-hoc for generating feasible portfolios of the MDRS model, which are based on common ideas of evolutionary operators [33,34]. Next, for analysing the MDRS model and for showing the usefulness and potential of the proposed operators, we compare the performance of several EMO algorithms when our operators are used and when traditional operators are considered with repair mechanisms. For this comparison, we consider the Non-dominated Sorting Genetic Algorithm (NSGAII) [35], the Multi-objective Evolutionary Algorithm Based on Decomposition (MOEA/D) [36] and the Global Weighting Achievement Scalarizing Function Genetic Algorithm (GWASF-GA) [37].The rest of the paper is organized as follows. Section 2 introduces some general concepts of evolutionary multi-objective optimization and fuzzy sets theory, and provides a literature review of previous related works. The possibilistic MDRS portfolio selection problem that we are considering in this work is described in Section 3. Next, Section 4 presents the proposed mutation, crossover and reparation operators for the MDRS model. Subsequently, numerical results for a data set from the Spanish Stock Market are provided in Section 5, in which the proposed operators are compared to commonly used operators in NSGAII, MOEA/D and GWASF-GA. Finally, we conclude and give future research directions in Section 6.Multi-objective optimization problems are mathematical programming problems with a vector-valued objective function, which is usually denoted by f(x)=(f1(x), …, fn(x))Tfor a decision vector x=(x1, …, xN)T, where fj(x) is a real-valued function defined over the feasible setS⊆ℝN, for every j=1, …, n. Consequently, the decision space belongs toℝNwhile the criterion space belongs toℝn, and the multi-objective optimization problem can be stated as follows:(1)optimize{f1(x),…,fn(x)}s.t.x∈S.In the criterion space, some objective functions must be maximized (j∈J1) while others must be minimized (j∈J2), where J1 and J2 verify that J1∪J2={1, …, n} and J1∩J2=∅.We say that x∈S is a Pareto optimal or efficient solution if there does not exist another x′∈S such that fj(x′)≥fj(x) for every j∈J1 and fj(x′)≤fj(x) for every j∈J2, with at least one strict inequality. The set of all Pareto optimal solutions x∈S (in the decision space) is called the Pareto optimal set, denoted by E, and the set of all their corresponding objective vectors f(x) (in the criterion space) is called the Pareto optimal front, denoted by f(E). Additionally, given two objective vectorsz,z′∈ℝn, we say that z′ dominatesz if and only if z′j≥zjfor all j∈J1 and z′j≤zjfor all j∈J2, with at least one strict inequality. If z and z′ do not dominate each other, they are said to be non-dominated.In multi-objective optimization, the ideal and the nadir points are very useful since they define lower and upper bounds for the objective functions, respectively. The ideal pointz★=(z1★,…,zn★)T∈Rnis obtained by optimizing each objective function individually over the feasible set, that is,zj★=maxx∈Sfj(x)=maxx∈Efj(x)for every j∈J1, andzj★=minx∈Sfj(x)=minx∈Efj(x)for all j∈J2. The nadir pointznad=(z1nad,…,znnad)T∈Rnis defined aszjnad=minx∈Sfj(x)for all j∈J1 andzjnad=maxx∈Sfj(x)for all j∈J2. In practice, the nadir point is difficult to calculate and a general practice is to estimate it with different approaches [38,39]. Sometimes, a vector that dominates every Pareto optimal solution is required, what means that it is strictly better than the ideal point. This vector is denoted byz★★=(z1★★,…,zn★★)Tand it is called an utopian point. In practice, z★★ can be defined byzj★★=zj★+ɛjfor all j∈J1 andzj★★=zj★−ɛjfor all j∈J2, where ɛj>0 is a small real number for every j=1, …, n.The use of evolutionary multi-objective optimization (EMO) algorithms for solving multi-objective optimization problems has become very popular in the last two decades and, currently, it is one of the most active research fields [17,18]. In the EMO field, solving a multi-objective optimization problem is understood as finding a set of non-dominated solutions as close as possible to the Pareto optimal front (convergence) and which represents the entire Pareto optimal front (diversity). EMO algorithms are population-based approaches which start with a randomly created population of individuals. Afterwards, the algorithm enters in an iterative process that creates a new population at each generation, by the use of operators which simulate the process of natural evolution: selection, crossover, mutation and/or elitism preservation. Some popular EMO algorithms can be found in [35–37,40]. One of the main advantages of EMO algorithms is that they are very versatile, as they can deal with multi-objective optimization problems having variables and objective functions of different nature [41].One of the most used EMO algorithms is the Non-dominated Sorting Genetic Algorithm (NSGAII) [35]. This algorithm is based on the Pareto dominance and has stood out by its fast non-dominated sorting procedure for ranking solutions and its elite-preserving mechanism for the selection of the best individuals. Starting from a randomly generated population, at each generation of NSGAII, an offspring population is created through selection, crossover and mutation operators. Then, both parents and offspring are joined and classified into non-dominated fronts as follows. From the resulting population, the individuals which are not dominated by any other solution constitute the so-called first non-dominated front. These individuals are temporarily removed and, subsequently, the second non-dominated front is formed by the next individuals which are not dominated by any other solution in the population. This process continues until every individual has been included into some front. Afterwards, the population to be passed to the next generation is formed by the solutions in the lower level non-dominated fronts. If there are more solutions in the last front allowed than the remaining space in the new population, the individuals in this front are sorted according to a crowding distance. Somehow, this distance measures the objective space around each solution which is not occupied by any other solution in the population. Subsequently, the new population is completed with the individuals with the least crowding distance.Recently, the so-called decomposition-based EMO algorithms have received a great deal of attention. These algorithms decompose the multi-objective optimization problem into a set of scalar (single-objective) optimization sub-problems and optimize them, simultaneously or subsequently, following a population evolution-based rule. One of them is the Multi-objective Evolutionary Algorithm Based on Decomposition (MOEA/D) [36]. Using a set of evenly distributed weight vectors, a number of sub-problems are optimized at each generation of MOEA/D relying on the assumption that neighbour weight vectors produce neighbour solutions. To be more precise, for each sub-problem, an offspring is generated by genetic operators from the parents, which is compared with its neighbours for local replacement. The fitness evaluation of the individuals is done through the scalarizing function used in the sub-problem with different weight vectors. Then, if the new offspring achieves a better value of the scalarizing function than its neighbours, it replaces them.The MDRS model has also been solved by Global Weighting Achievement Scalarizing Function Genetic Algorithm (GWASF-GA), a recently proposed decomposition-based EMO algorithms [37]. This algorithm is based on the preference-based EMO algorithm suggested in [42]. In GWASF-GA, each sub-problem is formulated by an achievement scalarizing function based on the Tchebychev distance [43], in which two reference points are considered (an utopian and the nadir points). Besides, it considers a set with Nμweight vectors whose inverses are well-distributed. At each generation of GWASF-GA, the population of parents and offspring is divided into several fronts, as in NSGAII. However, the classification is done according to the values that each individual takes on the achievement scalarizing function, for each one of the weight vectors, and using simultaneously the nadir and the utopian points. The lower the function values reached by a solution for the nadir or the utopian points and for the weight vectors, the more quickly this solution is included into a front. Then, those individuals in the lower level fronts are selected for the next generation. From the practical point of view, the Pareto optimal front is approximated by projecting the nadir and the utopian points simultaneously, taking into account the set of projection directions (or search directions) defined by the set of weight vectors. As it can be noted, GWASF-GA combines the strengths of NSGAII and MOEA/D.In the portfolio optimization problems, the modelling of the uncertain returns on assets is made using different approaches. Some authors assume that these returns are random variables, while others consider fuzzy logic to integrate uncertainty of the datum, imperfect knowledge of the market behaviour, imprecise investor's aspiration levels and expert's opinion and so on. However, expected return on assets modelled either as random variables or fuzzy quantities are considered as known parameters of the optimization problem, which have been usually estimated throughout historical data set.In the MDRS model [22], fuzzy numbers are considered to represent the uncertainty of the investment returns on a given portfolio and historical data information is used for building suitable membership functions for the returns of the investment. For a capital market with N financial assets, a portfolio x=(x1, …, xN)Tdetermines how the total wealth of the investor is allocated, where xiis the fraction of the total investment devoted to the asset i, for every i=1, …, N. In this approach, its returns over T periods, denoted by{rt(x)}t=1T, are used as the historical data set, and the possibility distribution of the return on x allows us to evaluate their corresponding interval-mean valued expectations. Let us briefly review some definitions and results required about fuzzy set theory [26,27,44].A fuzzy number Q is said to be an LR-type fuzzy number if its membership function has the following form:μQ(y)=LA−ysAif−∞<y≤A,1ifA≤y≤B,Ry−BsBifB≤y<+∞,where A and B satisfy A≤B and represent the lower and upper bounds of the core of Q, respectively, i.e., [A, B]={y|μQ(y)=1}; sAand sBare the left and right spreads of Q, respectively; and L, R:[0, +∞)→[0, 1] are reference functions which are non-increasing and upper semi-continuous withlimt→+∞L(t)=limt→+∞R(t)=0. A fuzzy number Q is said to be a bounded LR-type fuzzy number if the reference functions are such that the support of Q is bounded, i.e., if there exist two real numbers a and b, with a<b, such that {y:μQ(y)>0}⊂[a, b].For a portfolio x, let us consider the reference functions Lπ(t)=1−tπand Rρ(t)=1−tρ, where π and ρ are their positive shape parameters, respectively, for every t=1, …, T. Thus, we have a power LR-fuzzy number,Q=(pl,pu,c,d)LπRρ, where [pl, pu] is the core, and c and d are the left and right spreads. Since the fuzzy number Q induces a possibility distribution that matches with its membership function μQ(y) [26], we consider power LR-fuzzy numbers to approximate the uncertain return on the portfolio x, and we directly approximate the possibility distribution of its return instead of aggregating the possibility distributions of the individual assets that compose x. Then, to approximate the expected return on a given portfolio, the concept of interval-valued expectation [45] is applied, with the usual defuzzification approach for a crisp representation of their possibilistic moments. It must be mentioned that other weighted mean-interval definitions could be used analogously [46].Let us introduce the explicit mathematical formulation of the possibilistic moments considered in [22] as objective functions of the portfolio selection MDRS model:•Possibilistic mean value:(2)E¯(Q)=pu+pl2+d2ρρ+1−c2ππ+1.Possibilistic downside risk:(3)w(Q)=pu−pl+dρρ+1+cππ+1.Third possibilistic moment:(4)μ3(Q)=14dρρ+1−cππ+13+12d3ρρ+3−c3ππ+3+3(pu−pl)4×d2ρρ+2−ρ2(ρ+1)2−c2ππ+2−π2(π+1)2−34d2ρρ+2+c2ππ+2dρρ+1−cππ+1.The expression given in (4) is the formula of the third possibilistic moment about the possibilistic mean valueE¯(Q), following the proposal suggested in [47], i.e., μ3(Q) is the middle point of the interval-valued third moment about the possibilistic mean value:μ3(Q)=E¯((Q−E¯(Q))3). In order to get a scale-independent measure of the asymmetry of the portfolio's returns, we consider the coefficient of possibilistic skewness instead, which is formulated as follows:(5)S(Q)=μ3(Q)w(Q)3.As we can see in (3), the measure of risk,w(Q), has been evaluated as the length of the interval-valued absolute semi-deviation about the possibilistic mean value, that is, as the amplitude ofE˜(max{0,E¯(Q)−Q}). The use of the mean semi-absolute deviation as a risk measure of a portfolio was first suggested in [4]. Recently, Konno et al. [48] indicates that lower partial risk (downside risk) models are useful to control the risk associated with underachievement below the mean when the return distribution of the investment is not normal nor symmetric.While classical portfolio optimization problems can be efficiently solved by applying classical optimization techniques, this is not the case if additional conditions, such as diversification and cardinality constraints, are introduced. Mainly, the most significant difficulty is the generation of feasible portfolios satisfying the requirements imposed by investors. Additionally, the solution process required for finding the set of efficient portfolios is not trivial. Note that the management of non-dominated solutions is computationally simple in the bi-objective case, but it is much complicated in the presence of multiple objectives (three or more). In this regards, the usefulness of evolutionary multi-objective optimization for solving constrained multi-objective portfolio selection problems is doubtless because of its ability to handle multiple criteria and constraints at the same time [19]. The reason for such a success is that they work with the problem as a black box, caring only for inputs and outputs, without requiring additional information like derivatives or continuity properties of the objective functions.For example, Chang et al. [8] applied these type of algorithms to the mean-variance (MV) model. They showed that limiting the number of assets in a portfolio (i.e. including cardinality constraints) and considering lower and upper bounds for the budget invested in each asset modify the shape of the Pareto optimal front. They demonstrated that, in the presence of these constraints, the Pareto optimal front of MV model is more difficult to approximate because it may become discontinuous.To handle cardinality constraints in the MV bi-objective optimization model, a few hybrid strategies have been applied quite often. In [49], a combined simulated annealing and evolutionary optimization procedure was suggested, while Moral-Escudero et al. [50] used a hybrid strategy that made use of genetic algorithms and quadratic programming for selecting the optimal subset of assets. In [11], an EMO algorithm was combined with fuzzy logic in order to facilitate the trade-off between the two objectives. They also analysed the performance of several EMO algorithms for solving the constrained MV portfolio optimization problem. For solving the cardinality constrained MV model, Chiam et al. [12] proposed an order-based representation with suitable variation operators and some techniques for handling constraints. More recently, Anagnostopoulos and Mamanis [13] applied three EMO algorithms in order to explore the Pareto optimal front if the cardinality was included into the MV model as an additional objective to be minimized. Also, Anagnostopoulos and Mamanis [14] presented a study in which five EMO approaches were applied to the cardinality constrained MV model for solving instances of data sets with a large number of assets, showing a clear superiority of the evolutionary algorithms SPEA2 [51] and NSGAII [35]. Lately, Liagkouras and Metaxiotis [16] has proposed a new mutation operator for solving the cardinality constrained MV model, which was compared with the classical polynomial mutation operator also in NSGAII and in SPEA2.Other authors solve portfolio selection models with alternative measures of risk and/or additional constraints by means of EMO algorithms. For example, Chang et al. [52] applied a genetic algorithm for solving bi-objective optimization portfolio selection problems with different risk measures (variance, semi-variance, absolute deviation), including skewness as a constraint. These authors reported the fact that investors should not consider portfolio sizes above one third of the total number of assets because they are dominated by others portfolios with less positive components.Note that the majority of the aforementioned evolutionary procedures are applied for solving extensions of the MV model, in which the expected return and risk of assets are considered as known parameters. Instead, fuzzy portfolio selection approaches allow the use of fuzzy numbers either for representing the investors’ aspiration levels for the expected return and risk, or for quantifying the uncertainty of future returns on assets, using credibility or possibility distributions. For example, Bhattacharyya et al. [21] considered a fuzzy mean-variance-skewness model with cardinality and trading constraints, which is solved by applying both fuzzy simulation and an elitist optimization genetic algorithm. Bermudez et al. [30] implemented a bi-objective optimization genetic algorithm for solving the fuzzy mean-downside risk portfolio selection problem with cardinality constraints and diversification conditions, in which the approximation of the uncertain returns was done through trapezoidal fuzzy numbers. In [31], a multi-criteria credibilistic portfolio selection model was proposed, which maximized (short and long-term) return and liquidity and considered the portfolio risk as a credibility-based fuzzy chance constraint. The fuzzy estimates were obtained assuming both trapezoidal possibility distributions and general functional forms. This model, which also included budget, bound and cardinality constraints, was solved by applying a hybrid algorithm that integrated fuzzy simulation with a real-coded genetic algorithm.In this section, we describe the MDRS model proposed in [22]. Let us consider a capital market with N financial assets offering uncertain rates of returns. An investor desires to know which is the optimal allocation of their wealth among the N assets, looking for the maximization of the return of the investment at the end of the period. Let us consider a portfolio x=(x1, …, xN)Tin which the total wealth is allocated, where xiis the fraction of the total investment devoted to the asset i, for every i=1, …, N. The portfolios must verify that:∑i=1Nxi=1,and the non-negative condition of every proportion, xi≥0 for every i=1, …, N, when short selling is excluded. In the MDRS model, the expected return on assets i and its possibilistic moments are not considered as known problem parameters. In [22], the authors turn the portfolio problem around: they assume that the portfolio composition x is known, and consider its historical returns for the quantification of the uncertainty of the future return of the investment. Actually, the possibility distribution of a given portfolio is directly approximated instead of using the aggregation of the possibility distributions of the individual assets, as mentioned before. Fig. 1shows the overall structure of the MDRS modelling approach.According to this, the return on the portfolio x is modelled by a power LR-fuzzy number, denoted byP˜x=(pl,pu,c,d)LπRρ, whose core and spreads are directly defined as functions of suitable percentiles qj's, while the shape parameters are evaluated using the reverse rating procedure, using those percentiles with a 50% possibility of being realistic.11Section 5.2 includes a particular proposal for building the membership function of a given portfolio x, following the aforementioned fuzzy representation of the portfolio returns.This modelling approach has been previously used for fuzzy ranking risky portfolios [53] and for obtaining efficient portfolios using bi-objective optimization procedures [30,32]. For building efficient portfolios, the MDRS model takes into account the possibilistic expected return, the absolute semi-deviation below mean (that is, the downside risk) and the skewness of every portfolio x modelled by the fuzzy numberP˜x, which are given in Eqs. (2), (3) and (5), respectively.Additionally, the MDRS model imposes limits on the budget to be invested in each asset i by using lower and upper bounds, denoted by liand ui, respectively, for every i=1, …, N. Besides, in order to control the number of assets in the portfolios, an additional constraint is incorporated to assure that the number of non-negative components in each portfolio is within an interval [kl, ku], for given values kland ku. In this constraint, we use the function c(x)=rank(diag(x)) (the rank of the diagonal matrix whose diagonal elements are the components of vector x), which gives the number of positive proportions in the portfolio x.Based on the aforementioned assumptions, the cardinality constrained possibilistic Mean-Downside Risk-Skewness (MDRS) model is formulated as follows:(6)(MDRS)maxE¯(P˜x)minw(P˜x)maxS(P˜x)s.t.∑i=1Nxi=1,(budget constraint)kl≤c(x)≤ku,(cardinality constraint)0≤li≤xi≤ui,(bound constraints)fori=1,2,…,N.To calculate the explicit values of these objective functions, we need to know the quantiles of the return possibility distribution ofP˜x. So, the MDRS model is a non-linear and non-convex multi-objective optimization problem due to the nature of quantiles calculation.The cardinality constraint can be transformed in order to control that the number of assets participating in the portfolios is always the same. In the rest of this paper, we assume that the cardinality of the portfolios is restricted in the MDRS model to a given numberk∈ℕ(i.e. kl=ku=k), that is, the cardinality constraint in (6) is formulated as c(x)=k from now on. This means that every feasible portfolio of (6) is obligated to invest in exactly k of the N available assets. Also, note that the cardinality constraint involves a quasi-concave function c(x), which implies that our multi-objective optimization problem is NP-hard. This remark can be also observed by the fact that finding a subset of assets for building a feasible portfolio is related to the NP-complete Subset Sum problem [50]. Therefore, for solving the above multi-objective optimization problem, the use of evolutionary multi-objective optimization procedures is highly recommended.It is important to note that other definitions of possibilistic expected mean and risk are available in the fuzzy portfolio literature, and that those choice in this paper do not affect the evolutionary operators proposed in Section 4 for building efficient portfolios, which can be also applied to obtain the Pareto optimal front of cardinality constrained portfolio selection problems with other alternative criteria.As indicated in Section 1, the MDRS problem (6) has not been solved yet as a whole constrained three-objective optimization problem. In [22], its Pareto optimal front was approximated by reformulating the MDRS model into two bi-objective optimization problems, which optimize two objectives over the feasible set and consider the third one as a constraint. Concretely, the first bi-objective optimization problem they formulated optimizesw(P˜x)andS(P˜x), using a constraint of the formE¯(P˜x)≥rf, where rfis either a rate offered on risk-free investment or an acceptable level of return on the investment for the investor. The second bi-objective optimization problem optimizesw(P˜x)andE¯(P˜x)and introduces the additional constraintS(P˜x)≥γ, where γ is a non-negative quantity. In [22], a bi-objective genetic algorithm specially designed for solving these two bi-objective problems was proposed for obtaining non-dominated portfolios. From the results obtained, the authors showed that the incorporation of the skewness as a goal in a constrained bi-objective optimization framework provokes important changes in the patterns of investment, when a fuzzy approach for the uncertainty quantification is used. For further details, see [22].Although interesting findings were found, the procedure followed in [22] for approximating the Pareto optimal front of the MDRS model has some disadvantages. Since the three criteria of the MDRS problem are not optimized simultaneously, the non-dominated portfolios obtained in [22] approximate the Pareto optimal fronts of the bi-objective problems, which may correspond to subsets of the Pareto optimal front of the three-objective problem (6). With this, there may be part of the Pareto optimal front of problem (6) that is not being approximated. Besides, there may be efficient solutions of the bi-objective optimization problems which correspond to dominated solutions of the MDRS problem (6), which can be proved trivially.22For example, let us consider the problem which maximizes the following three objective functions: f1(x1, x2, x3)=x1, f2(x1, x2, x3)=x2 and f3(x1, x2, x3)=x3 over the feasible set defined by the vectors(x1,x2,x3)∈ℝ3with 0≤xi≤1, for i=1, 2, 3. This problem has only one Pareto optimal solution, which is (1, 1, 1). From this problem, we can formulate the bi-objective optimization problem which maximizes only f1 and f2 and incorporates the third objective as the constraint f3(x1, x2, x3)≥0.5 (i.e., x3≥0.5). The set of efficient solutions of this bi-objective problem is formed by the solutions(1,1,λ)∈ℝ3with 0, 5≤λ≤1. It is obvious that e.g. (1, 1, 0.7) is an efficient solution of the bi-objective problem, but it is not Pareto optimal for the original three-objective optimization problem.Taking into account this, the main motivation of this paper is twofold: not only we aim at solving the MDRS model as a three-objective optimization problem by means of several EMO algorithms, but also we intend to extract interesting insights about the relationships among the objectives from an overall multi-objective perspective.There are many EMO approaches which can been applied to the three-objective MDRS problem. Initially, these algorithms generate a randomly set of solutions. Roughly speaking, at each generation, the selection operator chooses the parent solutions, the crossover operator recombines the parents to hopefully generate better offspring solutions, the mutation operator alters solutions in order to maintain the diversity of the population, and the elitism preservation operator prevents non-dominated solutions from being discarded due to random effects. It can be said that the fitness assignment and the selection become crucial to quickly converge to the Pareto optimal front, the mutation and the crossover operators ensure the exploitation and the exploration of solutions, while the elitism operator keeps the best solutions found along the generations.However, as indicated in [19], EMO algorithms cannot be applied directly in their standard form to constrained portfolio optimization problems and special care must be taken for handling the objectives and constraints of the problem. In the case of the MDRS model, the necessity of such an adaptation comes from the fact that, in the presence of the cardinality constraint, portfolios are rarely composed of all available assets, but only of a limited selection of them. Thus, several issues must be carefully defined, like representation of the portfolio solutions, evolutionary operators and constraint-handling techniques, which are described in what follows.The choice of the solution representation is very important because of its impact on the performance and functionality of the entire EMO algorithm. As said in [19], the most popular portfolio representations are the real-valued and the hybrid representations.The hybrid representation proposed in [54] defines a portfolio by means of two vectors, a binary one to specify which assets participate in the portfolio, and a real-valued vector indicating the proportions of the budget invested in the assets. In practice, this means to handle 2N decision variables for each portfolio in a problem with N assets. Besides, to manage cardinality and bound constraints, new restrictions must be imposed taking into account both vectors. All of this may increase the computational cost required by an EMO algorithm for solving the portfolio multi-objective optimization problem.In this work, we use a standard real-valued representation because it involves a lower number of decision variables than the hybrid representation. That is, a portfolio x is represented by a vectorx=(x1,…,xN)T∈ℝN, where each xirepresents the proportion invested in the asset i, for i=1, …, N. This means that, if xi≠0, the portfolio x invests in the asset i and the value of xiindicates the corresponding proportion of the capital budget allocated to the asset i. Besides, for every x, let us considerIx+=i=1,…,N:xi>0, that is,Ix+contains the assets which participate in the portfolio x. Let us denote byIx0the complementary ofIx+, that is,Ix0contains the assets not included (with non-positive proportions) in x.Hereafter, let us denote by #(A) the number of elements of a set A and, for a real number n, let ⌈n⌉ be the smallest integer not less than n and ⌊n⌋ the largest integer not greater than n.The main challenge for an EMO algorithm to solve the MDRS problem (6) is to generate feasible portfolios satisfying the budget, the bound and the cardinality constraints. Commonly, classical operators for real-valued representation are considered for solving constrained portfolio optimization problems, such as e.g. Gaussian or polynomial mutation and uniform or single-point crossover [19]. However, a repair mechanism needs to be incorporated for each constraint to assure the success of EMO algorithms. In this paper, we propose mutation and crossover operators specially designed ad-hoc for generating feasible portfolios of problem (6). Only a reparation operator is proposed to assure the budget constraint. It is noteworthy that these operators adopt basic ideas of classical operators [33,34].The mutation operator proposed is a unary operator which, for a given portfolio x, retrieves a mutated portfolio x′. The mutation operation used is just a simple procedure for swapping the proportion of an asset inIx+with another one of an asset inIx0. Both assets are randomly selected with a mutation probability Pm=1/k, where k number of assets that participates in the portfolio.The mutation of an individual x is done following Algorithm 1. Basically, for each asseti∈Ix+, a uniform random number r is generated. If r<Pm, xiis swapped with xj, where the assetj∈Ix0is randomly selected. Otherwise, if r≥Pm, the proportion xiof the asset i is not modified. Since the mutation operator is applied with a probability Pm=1/k, on average, only one of the k positive proportions of x is mutated. With this mutation operator, we assure that (a) the mutated portfolio meets the cardinality, budget and bound constraints considered in the MDRS model, and that (b) neutral mutation is avoided since we ensure that the selected asset to be mutated is within the portfolio. Finally, note that this mutation operator shares some ideas with the bit-swap mutation operator proposed in [12], which is used for order-based portfolio representation and allows swapping between the assets and weights of two randomly selected alleles in a solution vector.Algorithm 1Individual mutationInput:A portfolio x=(x1, …, xN)T.output:A mutated portfolio x′=(x′1, …, x′N)T.1:   Set Pm=1/k.2:   for alli∈Ix+do3:     Generate a number r in (0, 1) uniformly.4:     ifr<Pmthen5:       Select an indexj∈Ix0randomly.6:       Set xi′=xjand xj′=xi.7:       UpdateIx′+=Ix′+∪{j}andIx′0=Ix′0∪{i}.8:       Remove temporarily j fromIx0.9:     else10:       Set xi′=xi.11:       UpdateIx′+=Ix′+∪{i}.12:     end if13:   end forFig. 2shows an example which simulates the performance of our mutation operator. In this figure, the solutions x and x′ have been represented by rows of boxes, where each box is an asset of the portfolio. On each box, the symbol ○ indicates that a positive fraction is invested in the corresponding asset. This means that, for the solution x, this symbol appears in the boxes corresponding to the assetsi∈Ix+. In this example, N=9 (the portfolios of the problem are formed by 9 financial assets) and k=4 (all portfolios must invest in exactly 4 assets). As it can be seen, the mutation operator modifies just one positive proportion in this case.The role of the crossover operator is to inherit some characteristics of the two parents to generate the offspring solution(s). According to [19], the most commonly used mutation operators in portfolio selection problems are the uniform crossover and the single-point crossover, among others. But the offspring generated with these operators may not satisfy the cardinality constraint of our model, which fixes the portfolio size to a given number k. Thus, after applying one of these operators, it may be needed to correct the newly created portfolios. In order to avoid such a situation and to generate portfolios satisfying the cardinality constraint, we propose the following crossover operator which borrows basic ideas from the commonly used operators.Our crossover is a binary operator which, for two given parent portfolios, denoted by x1 and x2, generates two offspring portfolios, named as y1 and y2. Firstly, the offspring y1 and y2 are initialized as empty portfolios and the assets are added lately, inheriting k positive proportions from both parents as follows. Depending on the assets which participates in the parent portfolios (with positive proportions), we can distinguish three cases:•Case 1:Ix1+∩Ix2+=∅. In this case, the portfolios x1 and x2 invest in different assets and the offspring inherit assets from them as explained in Algorithm 2. Concretely, if k (mod 2) = 0, the offspring y1 inheritsk2−1assets with positive proportions from x1 andk2+1from x2, and the offspring y2 inheritsk2+1assets with positive proportions from x1 andk2−1from x2. Otherwise, if k (mod 2) ≠ 0, y1 inherits⌊k2⌋assets with positive proportions from x1 and⌈k2⌉from x2, and the offspring y2 inherits⌈k2⌉assets with positive proportions from x1 and⌊k2⌋from x2. In any case, the assets inherited are randomly selected.Fig. 3shows an example for N=9 and k=4, in which our crossover operator is applied to generate two new offspring y1 and y2 from two parents x1 and x2 withIx1+∩Ix2+=∅. In this case, k (mod 2) = 0, so y1 inherits 1 asset from x1 and 3 from x2, and y2 inherits 3 assets from x1 and 1 from x2.Case 2:0<#(Ix1+∩Ix2+)<k. In this case, the portfolios x1 and x2 invest in some common assets, but they also invest in some others which are not in common. In this situation, each offspring inherit the positive proportions of the assets in common from one parent, and the rest from the other parent, as explained in Algorithm 3. Concretely, the offspring y1 inherits the proportions of the assets inIx1+∩Ix2+from x1 and the proportions of the assets inIx2+\(Ix1+∩Ix2+)from x2. Similarly, the offspring y2 inherits the proportions of the assets inIx1+∩Ix2+from x2 and the proportions of the assets inIx1+\(Ix1+∩Ix2+)from x1.Algorithm 2Crossover operator – Case 1Input: Two parent portfolios x1 and x2 withIx1+∩Ix2+=∅.Output: Two offspring portfolios y1 and y2.1: ifk (mod 2) = 0 then2:     SetN1=k2−1andN2=k2+1.3: else4:     SetN1=⌊k2⌋andN2=⌈k2⌉.5: end if6: Randomly select N1 indexes fromIx1+, let denote them by{i1,…,iN1}.7: for alli∈{i1,…,iN1}do8:     Setyi1=xi1.9: end for10: for alli∈Ix1+\{i1,…,iN1}do11:     Setyi2=xi1.12: end for13: Randomly select N2 indexes fromIx2+, let denote them by{j1,…,jN2}.14: for allj∈{j1,…,jN2}do15:     Setyj1=xj2.16: end for17: for allj∈Ix2+\{j1,…,jN2}do18:     Setyj2=xj2.19: end forAlgorithm 3Crossover operator – Case 2Input: Two parent portfolios x1 and x2 with0<#(Ix1+∩Ix2+)<k.Output: Two offspring portfolios y1 and y2.1: for alli∈Ix1+∩Ix2+do2:     Setyi1=xi1.3:     Setyi2=xi2.4: end for5: for alli∈Ix1+\Ix1+∩Ix2+do6:     Setyi2=xi1.7: end for8: for alli∈Ix2+\Ix1+∩Ix2+do9:     Setyi1=xi2.10: end forFig. 4shows an example for N=9 and k=4, where two new offspring y1 and y2 are generated from two parents x1 and x2 with0<#(Ix1+∩Ix2+)=2<k. The grey boxes represent the assets in common between x1 and x2. Here, y1 inherits the proportions of the assets 4 and 8 from x1 and the proportions from x2 corresponding to the rest of assets with positive proportions (assets 1 and 6). The offspring y2 inherits the proportions of the assets 4 and 8 from x2 and the proportions from x1 corresponding to the rest of assets with positive proportions (assets 2 and 9).Case 3:#(Ix1+∩Ix2+)=k. In this case, the portfolios x1 and x2 invest exactly in the same assets and the crossover operator is applied as follows:Case 3.1: x1≠x2. This means that, at least, one of the proportions of x1 is different to that of x2. In this case, the crossover works as explained in Algorithm 4. If k (mod 2) = 0, the offspring y1 inheritsk2−1assets with positive proportions randomly selected from x1 and the restk2+1from x2, and the offspring y2 inheritsk2+1assets with positive proportions randomly selected from x1 and the restk2−1from x2. Otherwise, if k (mod 2) ≠ 0, y1 inherits⌊k2⌋assets with positive proportions randomly selected from x1 and the rest⌈k2⌉from x2, and y2 inherits⌈k2⌉assets with positive proportions randomly selected from x1 and the rest⌊k2⌋from x2.Algorithm 4Crossover operator – Case 3.1Input: Two parent portfolios x1 and x2 with#(Ix1+∩Ix2+)=kand x1≠x2.Output: Two offspring portfolios y1 and y2.1: ifk (mod 2) = 0 then2:     SetN1=k2−1andN2=k2+1.3: else4:     SetN1=⌊k2⌋andN2=⌈k2⌉.5: end if6: SetI=Ix1+∩Ix2+.7: Randomly select N1 indexes from I, let denote them by{i1,…,iN1}.8: for alli∈{i1,…,iN1}do9:     Setyi1=xi1.10: end for11: for alli∈Ix1+\{i1,…,iN1}do12:     Setyi1=xi2.13: end for14: Randomly select N2 indexes from I, let denote them by{j1,…,jN2}.15: for allj∈{j1,…,jN2}do16:     Setyj2=xj2.17: end for18: for allj∈Ix2+\{j1,…,jN2}do19:     Setyj2=xj1.20: end forFig. 5shows an example for N=9 and k=4 in which two new offspring y1 and y2 are obtained from two parents x1 and x2, with#(Ix1+∩Ix2+)=k=4and x1≠x2. Since k (mod 2) = 0, the offspring y1 inherits 1 proportion from x1 (asset 8) and 3 from x2 (assets 1, 4 and 9), and the offspring y2 inherits 3 proportions from x1 (assets 1, 4 and 9) and 1 from x2 (asset 8).Case 3.2. x1=x2. This implies that both portfolios x1 and x2 invest the same fraction of wealth in the k common assets. In this case, according to Algorithm 5, both offspring y1 and y2 inherit the proportions of the assets inIx1+from the parent x1. Subsequently, for everyi∈Ix1+,yi1is incremented by a valuevirandomly selected in [xi, ui] and, for everyi∈Ix1+,yi2is decremented by a valuewirandomly selected in [li, xi].Algorithm 5Crossover operator – Case 3.2Input: Two parent portfolios x1 and x2 with#(Ix1+∩Ix2+)=kand x1=x2.Output: Two offspring portfolios y1 and y2.1: for alli∈Ix1+do2:     Randomly selectvi∈[xi,ui]andwi∈[li,xi].3:     Setyi1=xi1+vi.4:     Setyi2=xi1−wi.5: end forFig. 6shows an example for N=9 and k=4 in which two new offspring y1 and y2 are obtained from two parents x1 and x2, with#(Ix1+∩Ix2+)=k=4and x1=x2. Both offspring solutions inherit the positive proportions of the parents. Afterwards, the proportions of y1 are incremented by randomly selected values, and the proportions of y2 are decremented similarly.Before the objective values are computed, a reparation operator is performed. Note that the new portfolios generated with our crossover operator satisfy the cardinality and the bound constraints, but it is not guaranteed that they meet the budget constraint of problem (6). To meet this constraint, the simplest strategy is to normalize the proportions of the assets that participate in the portfolio. Thus, if a portfolio x=(x1, …, xN)Tdoes not meet∑i=1Nxi=1, the reparation operator is applied according to Algorithm 6. Firstly, it performs a normalization as follows:x¯i=xi∑i∈Ix+xi,for alli∈Ix+,wherex¯=(x¯1,…,x¯N)Tdenotes the normalized portfolio. Fori∈Ix0, we setx¯i=0. Unfortunately, now the components ofx¯may not be within the limits of the bound constraints, given thatx¯imay be greater than the upper bound uior smaller than the lower bound li, for everyi∈Ix¯+. Therefore, ifx¯i∉[li,ui], the proportionx¯iof the asset i is repaired as explained in Algorithm 6. Roughly speaking, ifx¯i>ui, the excess amount is subtracted fromx¯iand it is randomly distributed among the assets inIx¯+\i. Besides, ifx¯i<li, the default amount is added tox¯iand it is randomly subtracted from the assets inIx¯+\i.Algorithm 6Reparation operatorInput: An infeasible portfolio x=(x1, …, xN)Twith∑i=1Nxi≠1.Output: A feasible portfoliox¯=(x¯1,…,x¯N)T.1: for alli=1, …, Ndo2:   ifi∈Ix+then3:     Setx¯i=xi∑i∈Ix+xi.4:   else5:     Setx¯i=0.6:   end if7: end for8: for alli∈Ix¯+do9:   whilex¯i>uido10:     repeat11:       Randomly selected an index j fromIx¯+\i.12:     untilx¯j<uj13:     Randomly selectedv∈(0,uj−x¯j].14:     Setx¯j=x¯j+v.15:     Setx¯i=x¯i−v.16:   end while17:  whileli>x¯ido18:     repeat19:       Randomly selected an index j fromIx¯+\i.20:     untillj<x¯j21:     Randomly selectedw∈(0,x¯j−lj].22:x¯j=x¯j−w.23:x¯i=x¯i+w.24:   end while25: end forTo study the cardinality constrained MDRS portfolio selection problem from a multi-objective perspective and to show the effectiveness of the operators described in Section 4.2, we have analysed and compared the approximations of the Pareto optimal front obtained by NSGAII, MOEA/D and GWASF-GA using, on the one hand, the proposed operators (which have been named with the subindex NewOp) and, on the other hand, the commonly used genetic operators explained hereafter. We would like to point out that we have applied the original versions of NSGAII, MOEA/D and GWASF-GA.NSGAIINewOprefers to the execution of NSGAII with the crossover, reparation and mutation operators proposed in Section 4.2. Each generation of NSGAIINewOpis executed as shown in Algorithm 7. Here, Npdenotes the population size and Ptand Qtare the population of parents and offspring, respectively, at generation t.Algorithm 7Each generation t of NSGAIINewOpInput: The population Ptat generation t.Output: The population Pt+1 for the next generation t+1.1: Set Qt=∅.2:   while #(Qt)<Npdo3:     repeat4:       Select two parents x1 and x2 from Ptby using binary tournament selection.5:       Crossover: using x1 and x2, generate two offspring portfolios y1 and y2 by means of Algorithm 2, 3, 4 or 5, depending on the assets that participate in x1 and x2.6:       Reparation: apply Algorithm 6 to the portfolios y1 and y2 if required.7:       Mutation: perform Algorithm 1 on y1 and y2 to produce two mutated portfoliosy¯1andy¯2.8:       Inserty¯1andy¯2into Qt.9:   until #(Qt)=Np10: end while11: Combine Ptand Qtto form a population of size 2Np. Select the best Npportfolios from the combined population to constitute the population Pt+1 as it is usually done in NSGAII [35].For the comparison, we have also executed NSGAII using the SBX crossover operator and the polinomial mutation [18], and we call it NSGAII in the computational tests. The internal procedure of NSGAII incorporates a constraint-handling technique in the binary tournament selection of parents (see [35] for more details), so the feasibility of the solutions is controlled with this technique in NSGAII.Regarding MOEA/D, we have applied our operators at each generation as shown in Algorithm 8, where Npindicates the number of sub-problems (i.e. population size) and B(i) is the neighbourhood of sub-problem i, for every i=1, …, Np. We refer to this version as MOEA/DNewOp.Algorithm 8Each generation t of MOEA/DNewOpInput: The population Ptat generation t.Output: The population Pt+1 for the next generation t+1.1: for alli=1, …Np2:     Randomly select two indexes r, l from B(i).3:     Crossover: generate two offspring portfolios y1 and y2 from xrand xlby means of Algorithm 2, 3, 4 or 5, depending on the assets that participate in xrand xl.4:     if y1 dominates y2then5:       Set y=y1.6: else if y2 dominates y1then7:     Set y=y2.8:     else9:       Randomly select one solution among y1 and y2 and set it as y.10:     end if11:     Reparation: apply Algorithm 6 to the portfolio y if required.12:     Mutation: perform Algorithm 1 on y to produce a mutated portfolio y′.13:     From y′, continue (update of neighbouring solutions and so on) as it is usually done in MOEA/D [36].14: end forIn the computational tests, we have also solved the MDRS model using MOEA/D with the Differential Evolution (DE) as crossover operator and the polinomial mutation, as suggested in [55]. This version is named as MOEA/D. MOEA/D does not include any constraint handling procedure, but it incorporates a specific step for improving the solution generated by a problem-specific repair algorithm (see Step 2.2 of the algorithm described in [36]). In this step, we need to repair the portfolios generated as follow. Let y be the portfolio generated by the DE and the polinomial mutation. If y does not satisfy the cardinality constraint (i.e., if more than k assets participates in y), then we remove from y the lowest proportions until having only k positive proportions in y. Afterwards, our reparation operator (Algorithm 6) is performed on y if it does not meet the budget and/or the bound constraints.As explained in Section 2, the working procedure of GWASF-GA is also based on a classification of parents and offspring into several fronts. Then, we have incorporated our crossover, reparation and mutation operators in GWASF-GA in a similar way as they are applied in NSGAII. This version is referred to as GWASF-GANewOp. Algorithm 9 describes each generation of GWASF-GANewOp.Algorithm 9Each generation t of GWASF-GANewOpInput: The population Ptat generation t.Output: The population Pt+1 for the next generation t+1.1: Set Qt=∅.2: while #(Qt)<Npdo3:   repeat4:     Select two parents x1 and x2 from Ptby using binary tournament selection.5:     Crossover: using x1 and x2, generate two offspring portfolios y1 and y2 by means of Algorithm 2, 3, 4 or 5, depending on the assets that participate in x1 and x2.6:     Reparation: apply Algorithm 6 to the portfolios y1 and y2 if required.7:     Mutation: perform Algorithm 1 on y1 and y2 to produce two mutated portfoliosy¯1andy¯2.8:     Inserty¯1andy¯2into Qt.9:   until#(Qt)=Np10: end while11: Combine Ptand Qtto form a population of size 2Np. Select the best Npportfolios from the combined population to constitute the population Pt+1 as it is usually done in GWASF-GA [37].In the computational tests, GWASF-GA refers to the execution of GWASF-GA using the SBX crossover operator and the polinomial mutation. The infeasible portfolios are treated by means of the constraint-handling technique of NSGAII.The case study we have considered is the one described in [22], which consists of a set of weekly returns on assets from the Spanish IBEX35 index, observed in T=152 periods from January 2007 till December 2009. The number of assets is N=27 because the other 12 assets were not included in the IBEX35 throughout the time windows considered (some companies were not listed at the starting period but entered afterwards, while others left the index at different dates over the period examined). For each i=1, …N, the sample returns on the individual assets, denoted by rti, are calculated asrti=p(t+1)i−ptipti, for every t=1, …, T, where ptiis the price of the asset i on Wednesday on the week t. With this, the weekly return of each portfolio x for the week t is obtained as rt(x) =∑i=1Nrti·xi. Finally, we build the membership function of the LR-fuzzy return by using the sample percentiles qjof the set{rt(x)}t=1T, where j is the order of the percentiles. In particular, the core and the support ofP˜x=(pl,pu,c,d)LπRρare represented by the intervals [q40, q60] and [q3, q97], respectively, while the shape parameters are obtained using the reverse rating procedure as follows:π=ln(0.5)/ln(q40−q20c)andρ=ln(0.5)/ln(q80−q60d), assuming that the percentiles q20 and q80 have a 50% possibility of being realistic.In the MDRS model, let us assume that k=9, and li=0 and ui=0.2 for every i=1, …, 27. We have set the cardinality in 9 assets, since we are working with a small number of securities, and in those conditions, [52] suggests that investors should not consider k-values above one third of the total number of assets because of dominance relationships.In our tests, 50 independent simulation runs were performed for each algorithm for evaluating their performance. Table 1summarizes the parameter setting used for the experiments. It should be said that several values for these parameters have been tested and the ones reported in Table 1 reached the best performances of the algorithms. In particular, we observed that using a number of generations or a population size higher than 500 and 220, respectively, did not provide significant improvements regarding the performance metrics used as explained below. The parameters of the DE operator (the crossover ratio CR and the scale factor F) were set to the default values proposed in [55,56]. Actually, in [55], it was stated that MOEA/D (the only algorithm making use of DE) is low sensitive to the setting of these two parameters. The computational implementations of the proposed operators have been computed in Java and have been incorporated into the jMetal framework [57], where the original implementations of NSGAII and MOEA/D algorithms are available, and where we have also introduced the code for GWASF-GA. This framework is an object-oriented Java-based framework for multi-objective optimization using meta-heuristic algorithms.Two performance metrics have been used for comparing the quality of the results obtained in the 50 independent runs. On the one hand, we have used the hypervolume indicator metric[58]. For a population of solutions P, the hypervolume of P, denoted by HV(P), can be defined as the hypervolume of the portion of the objective space that is dominated by the solutions in P and is bounded by a reference point r=(r1, …, rn), which is dominated by all the solutions in the population. In our computational tests,r=(rE¯,rw,rS)has been obtained using as rithe worst value reached by each objective function in all the solutions found by the algorithms for all runs, fori=E¯,w,S. Obviously, it is better to have a hypervolume indicator as higher as possible. On the other hand, we have also used the performance metric called set coverage (C-metric)[36]. For two approximation sets, A and B, of the Pareto optimal front of a multi-objective optimization problem, C(A, B) is defined as the percentage of the solutions in B that are dominated by at least one solution in A. Thus, C(A, B)=100 implies that all solutions in B are dominated by at least one solution in A, while C(A, B)=0 means that no solution in B is dominated by any solution in A.Since the original versions of the EMO algorithms are executed in these experimental tests and only the new operators are incorporated into them, the computational complexity required by each algorithm is the one of the original versions. That is, the computational complexity for the execution of NSGAII isO(n·Np2), for MOEA/D is O(n·Np·T) and for GWASF-GA is O(n·Np·Nμ), where n is the number of objectives, Npis the population size, T is the neighbourhood size of MOEA/D and Nμis the number of weight vectors used in GWASF-GA.Firstly, Table 2shows the mean and the standard deviation of the HV values33The reference point considered for computing the hypervolume is r=(−0.0013, 0.0263, −0.0840), which was estimated according to our results.achieved by NSGAII, MOEA/D and GWASF-GA, in the 50 independent runs, when they apply the proposed operators and when they consider the commonly used operators indicated in Section 5.1. The non-dominated portfolios found by NSGAIINewOp, MOEA/DNewOpand GWASF-GANewOpobtain higher averaged HV values (which are highlighted in bold face) than NSGAII, MOEA/D and GWASF-GA. Thus, according to the HV, we can conclude that the incorporation of our operators allows to approximate the Pareto optimal front for the cardinality constrained MDRS model with a higher diversity and convergence than with the commonly used operators. This shows the effectiveness of the proposed operators for solving the MDRS model using these EMO algorithms. Besides, among the algorithms which incorporate our operators, GWASF-GANewOpreaches the best mean HV value, so it can be said that this algorithm has outperformed NSGAIINewOpand MOEA/DNewOp.In order to individually analyse the performance of the HV achieved by each algorithm along the 50 runs, a statistical analysis was carried out using R language. The boxplots in Fig. 7shows the different performance of the HV values attained by each algorithm.Besides, a statistical comparison of the HV values obtained by each algorithm with and without our operators (NewOp vs. standard operators) was performed through the t-Student test. These statistical tests revealed that there are significant differences between the mean HV attained by the two executions of each algorithm (p-value < 2.2e−16), always in favour of the one which incorporates the suggested operators.Additionally, the comparison through the ANOVA test of the HV obtained by NSGAIINewOp, MOEA/DNewOpand GWASF-GANewOpalso stated significant differences among their mean HV values (adjusted p-value < 2.2e−16), being the multiple comparisons statistically significant (p-values < 0.0001). Fig. 8illustrates both the boxplots and 95% confidence intervals around their means. The highest averaged HV value was found by GWASF-GANewOp.Secondly, let us analyse the results obtained for the C-metric. Table 3compares the mean C-metric values achieved by each algorithm with and without our operators, in the 50 independent runs. Regarding NSGAII, it is surprising that, on average, all the portfolio solutions generated by NSGAII are dominated by, at least, a solution obtained by NSGAIINewOp, while no portfolio found by NSGAIINewOpis dominated by any solution of NSGAII. The same analysis states for the algorithm GWASF-GA. In the case of MOEA/D, 39.125% of the solutions found by MOEA/D are dominated, on average, by at least a solution found by MOEA/DNewOp, and just 4.394% of the portfolios of MOEA/DNewOpare dominated by one portfolio of MOEA/D. Therefore, these results show that the new operators provide significant improvements of the obtained solutions.It must be noted that, for the C-metric, no statistical comparison is needed for the two executions of NSGAII and GWASF-GA. For MOEA/D, statistical comparison using paired Wilcoxon test revealed significant differences between the percentages of dominated solutions (p-value = 3.02e-11), in favour of MOEA/DNewOp.The comparison of the mean C-metric values achieved between the approximations found by NSGAIINewOp, MOEA/DNewOpand GWASF-GANewOpare in Table 4. It can be seen that higher percentages of dominated solutions are achieved when A = GWASF-GANewOp, while lower percentages are associated to B = GWASF-GANewOp. We have analysed these results through a paired Wilcoxon test (comparing C(A,B) and C(B,A)), and the differences are significant for GWASF-GANewOp, with respect to MOEA/DNewOpand GWASF-GANewOp(p-value < 0.001), while there is no significant differences between the results obtained for NSGAIINewOpand MOEA/DNewOp(p-value = 0.199). From an overall perspective, this shows that GWASF-GANewOpoutperforms the other algorithms regarding the C-metric.In summary, these analysis show the superiority of the operators proposed in comparison to the other genetic operators considered. Besides, between the executions of the algorithms with our operators, we can conclude that better representations of the Pareto optimal front of the MDRS model are generated by GWASF-GANewOp, with significant differences regarding the HV and C-metric.Table 5shows the computational time required by each algorithm, on average, for solving the problem in the 50 independent runs. It can be seen that the times needed by NSGAIINewOp, MOEA/DNewOpand GWASF-GANewOpare higher than those for NSGAII, MOEA/D and GWASF-GA, respectively, although it must be noted that the difference among them is not very significant. Anyway, from the previous analysis of the HV and the C-metric, we can conclude that it is worth to sacrifice a bit the computational time for using the new operators in order to obtain better results.Finally, Fig. 9shows a three-dimensional representation of the final populations generated in one run of NSGAIINewOp, MOEA/DNewOpand GWASF-GANewOpfor the MDRS problem. Intuitively, it can be observed that all the algorithms provide sets of non-dominated portfolios which are widely distributed. Also, for this run, each pair of functions have been represented in bi-dimensional images in Figs. 10–12, which show the values of the two corresponding functions for all the solutions generated by the three algorithms. Regarding coverage of the bi-objective visualization of the Pareto optimal front, all of them present a suitable performance. It must be said that we have not plotted the approximations found when considering the commonly used operators because our operators have outperformed them.Additionally, it is worthy to analyse which type of solutions have been obtained by the algorithms because of the introduction of the skewness as a criterion. In Figs. 9 and 11, we can clearly distinguish two different subsets of portfolios from the non-dominated solutions. Note that for investors with less risk aversion, non-dominated portfolios with higher expected return are obtained, but the behaviour of this subset of the Pareto optimal front is clearly more disperse than those associated with portfolios for conservative investors. Additionally, Figs. 10 and 12 show that non-dominated portfolios which have higher skewness values achieve lower values for the expected return and the downside risk (in this run, less than 0.004 and 0.04, respectively), while portfolios which higher expected return or lower downside risk achieve lower values for the skewness. These performances agree with the advice given by some authors in the sense that taking skewness as a criterion in a multi-objective portfolio selection problem provokes major changes in the final Pareto optimal front. However, it must be mentioned that the performances of the algorithms with our operators were not as sensitive to this inclusion, which is also an interesting result from the financial point of view.

@&#CONCLUSIONS@&#
