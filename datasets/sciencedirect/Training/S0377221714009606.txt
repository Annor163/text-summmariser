@&#MAIN-TITLE@&#
The three-machine proportionate open shop and mixed shop minimum makespan problems

@&#HIGHLIGHTS@&#
We consider the three-machine proportionate open shop and mixed shop makespan problems.We derive sufficient conditions to solve the problems in polynomial time.We derive algorithms with worst-case bounds for the problems.We extend our open shop results to the unequal speed case.

@&#KEYPHRASES@&#
Scheduling,Open shop,Mixed shop,

@&#ABSTRACT@&#
We first consider the ordinary NP-hard three-machine proportionate open shop minimum makespan O3|prpt|Cmax  problem and show that it is solvable in O(nlog n) time when certain conditions on the total machine load are met. When these conditions are not met, we derive an approximate solution by implementing the optimal solution for the O3|prpt|Cmax  problem when the two longest jobs are of equal length. In that case, both absolute and ratio worst-case bounds are derived. We also consider the more general mixed shop problem M3|prpt|Cmax  in which a given job subset must be processed as in a flow shop while the remaining jobs can be processed as in the O3|prpt|Cmax  problem. We show that our open shop solution techniques can be implemented to derive exact and approximate solutions for the M3|prpt|Cmax  problem. Finally, we discuss the applicability of our open shop results to the proportionate open shop problem with unequal machine speeds.

@&#INTRODUCTION@&#
Open shop scheduling problems have received attention in the literature because of their applicability to the scheduling of medical tests in an outpatient health care facility and/or the scheduling of classes/exams in an academic institution. In both applications, the patients (students) must complete a number of medical tests (academic activities) in any order with the only restriction that these activities should not overlap.Let pijdenote the processing time of job Jjon machine Mi. The proportionate shop (in which pij= pjfor all jobs Jjand all machines Mi) is the most specialized shop with respect to job processing times. Two generalizations of the proportionate shop are possible. If the condition ptj> ptkfor two jobs Jj, Jk, on a machine Mtimplies that pij≥ pikon all machines Mi, then the shop has ordered jobs. If the condition pir> ptrfor some job Jron two machines Mi, Mtimplies that pij≥ ptjfor all jobs Jj, then the shop has ordered machines. An ordered shop is a shop with both ordered jobs and ordered machines.We first consider the three-machine proportionate open shop minimum makespan problem (denoted as O3|prpt|Cmax ) which was shown to be at least ordinary NP-hard by Liu and Bulfin (1987). The authors stated their NP-hardness theorem for the three-machine ordered open shop problem but they actually used an O3|prpt|Cmax  problem instance in their proof. The contrast with the complexity of the corresponding flow shop problem should be noted at this time. Chin and Tsai (1981) showed that all job permutations are optimal for the Fm|prpt|Cmax  problem (with any fixed number of machines m).In some shops, the technological order of the operations of a subset of jobs dictates the flow shop model for these jobs while the operations of the remaining jobs can be processed in any order according to the open shop model. In that case, the shop is called a mixed shop. A more general version of the mixed shop allows for a subset of jobs to be processed as in a job shop while the remaining jobs are processed as in an open shop.In this paper, we analyze the three-machine proportionate mixed shopM3|prpt|Cmax  problem in which each job has equal processing times on all three machines and a given job subset must be processed as in the F3|prpt|Cmax  problem while the remaining jobs can be processed as in the O3|prpt|Cmax  problem. The M3|prpt|Cmax  problem is at least ordinary NP-hard because of the complexity of the O3|prpt|Cmax  problem. Masuda, Ishii, and Nishida (1985) showed that the two-machine mixed shop M2||Cmax  problem (with arbitrary job processing times) is solvable in O(nlog n) time. Strusevich (1991) generalized the results in Masuda et al. (1985) by incorporating an additional subset of jobs following the M2 → M1 processing route. Shakhlevich and Sotskov (1994) considered a mixed shop with two jobs and any regular performance measure. A summary of the known results for a mixed shop with either two machines or two jobs is given by Brucker (1995). Shakhlevich, Sotskov, and Werner (1999) analyzed mixed shops with more than two machines and more than two jobs. They considered both the preemptive and the non-preemptive case. The complexity of mixed shops with three or more machines motivated Shakhlevich, Sotskov, and Werner (2000) to survey the results for these shops with a fixed number of jobs.The NP-hardness of the O3||Cmax  problem justified the identification of special cases solvable in polynomial time and also the development of heuristics with performance guarantees. Adiri and Aizikowitz (1989) showed that O3||Cmax  problem can be solved in linear time when there is a dominated machine. In that case, the maximum processing time on the dominated machine is no greater than the minimum processing time on another machine.Liu and Bulfin (1987) developed a linear time algorithm for the O3||Cmax  problem with ordered machines if the jobs can be arranged so that p11 = maxj = 1, …, n{p1j} and p22 = maxj = 1, …, n{p2j}, where pijdenotes the processing time of job Jjon machine Mi. As stated earlier, when the machines are ordered, all jobs have their longest processing times on M1 (which is then called the maximal machine), their second longest processing time on M2 and so on. In addition, the conditions p11 = maxj = 1, …, n{p1j} and p22 = maxj = 1, …, n{p2j} imply that the job with the longest processing time on M1 is not the job with the longest processing time on M2 (unless p21 = p22).Kyparisis and Koulamas (1997) generalized the results of Liu and Bulfin (1987) for the O3||Cmax  problem with ordered machines by showing that the problem is solvable in linear time if the jobs can be arranged so that p11 = maxj = 1, …, n{p1j} and p12 ≥ maxj = 1, …, n{p2j}. We should point out that neither the condition p22 = maxj = 1, …, n{p2j} nor the condition p12 ≥ maxj = 1, …, n{p2j} is, in general, true for the O3|prpt|Cmax  problem (unless p1 = p2, where J1 and J2 are the two longest jobs).Let P, pmax  denote the maximum machine load and the maximum job processing time respectively in an open shop problem; observe that in the case of the O3|prpt|Cmax  problem, all three machine loads are equal toP=∑j=1npj.Sevastjanov (1995) identified special cases of the Om||Cmax  problem (with a fixed number of m ≥ 3 machines) solvable in polynomial time. He showed that the Om||Cmax  problem is solvable in polynomial time when P = pmax . He also showed that the condition P ≥ (mR + 2m − 2)pmax  is sufficient to obtain a solution withCmax*=Pin polynomial time (whereCmax*denotes the optimal makespan value and R is the value of the radius for a compact vector summation problem related to the Om||Cmax  problem and detailed in Sevastjanov, 1995). This implies that the Om||Cmax  problem with a maximal machine is polynomially solvable withCmax*=Punder the condition P ≥ (2m − 2)pmax .Sevastianov (1998) proved that if P ≥ 7pmax , then the optimal schedule of length P can be constructed in O(nlog n) time for the O3||Cmax  problem; Kononov, Sevastianov, and Tchernykh (1999) proved that if P1 ≥ P3 + 2pmax  (where Piis the total work load of machine Miand the machines are indexed according to P1 ≥ P2 ≥ P3), then the optimal schedule of length P = P1 can be constructed in O(n) time for the O3||Cmax  problem.In the rest of the paper, we assume that the jobs in the open shop have been indexed in the non-increasing (LPT) order of their processing times so that pmax  = p1 ≥ p2 ≥ ⋅⋅⋅ ≥ pn.We show in the next section that the O3|prpt|Cmax  problem is solvable in polynomial time when either p1 = p2 or P ≤ 2p1 + p2 or P ≥ 3p1 + p3. These findings indicate that more instances of the O3|prpt|Cmax  problem are solvable in polynomial time compared to the O3||Cmax  problem.In the case of the O3||Cmax  problem with arbitrary job processing times, Chen and Strusevich (1993) proposed a linear time heuristic algorithm H and proved the tight worst-case ratio bound ofCmaxHCmax*≤32,whereCmaxHdenotes the makespan value supplied by the algorithm H. This bound is attained by the best of two constructed schedules. Chen and Strusevich (1993) also showed the tightness of the absolute boundCmaxS−Cmax*≤(m−1)pmaxfor the Om||Cmax  problem whereCmaxSdenotes the makespan of a dense schedule in which a machine is idle only when there is no job that can be processed on that machine.Sevastianov and Tchernykh (1998) proved the boundCmax*LB≤43for the general O3||Cmax  problem (where LB denotes the standard lower bound on the optimal makespan, computed as the maximum of two amounts: the maximum machine load and the maximum job length) and showed that this bound is tight. As a by-product of their proof, they constructed a linear time heuristic H with a guaranteed valueCmaxH≤43LB,which implies the worst-case ratio boundCmaxHCmax*≤43.Finally, several authors investigated the existence of the polynomial-time and fully polynomial-time approximation schemes (PTAS and FPTAS respectively) for the Om||Cmax  problem, that is algorithms H which, for any problem instance and any ε > 0, produce a solution in polynomial time such thatCmaxH−Cmax*Cmax*≤ϵ. While the existence of FPTAS for the O3||Cmax  problem is an open problem in scheduling theory, a PTAS for the Om||Cmax  problem was first proved by Sevastianov and Woeginger (1998). The currently best variant of a PTAS for the open shop problem was presented in Sevastianov and Woeginger (2001). It applies to the r-stage open shop problem with identical parallel machines at each stage, and the PTAS has a running time of the type O(nrm + C(m, ε)) where n is the number of jobs, m is the total number of machines and C(m, ε) is a function independent of n.In this paper, we propose a heuristic algorithm A with performance guarantees for the non-solvable cases of the O3|prpt|Cmax  problem. In those cases, we derive the tight worst-case bounds ofCmaxACmax*≤76andCmaxA−Cmax*≤12p1respectively whereCmaxAdenotes the makespan value supplied by our algorithm. The algorithm A is based on an exact algorithm for an O3|prpt|Cmax  problem withpj′job processing times such thatpj′=pj,j ≠ 2 andp2′=p1.We then turn our attention to the M3|prpt|Cmax  problem; let qjdenote the processing time of job Jjin the flow shop job subset, qmax  = max {qj} andQ=∑j=1nqj. Clearly,Cmax*≥P+Qfor the M3|prpt|Cmax  problem. We show that the M3|prpt|Cmax  problem is solvable in polynomial time when either p1 = p2 ≥ qmax  or when the conditions p1 > p2, P ≥ 3p1 + p3 and p1 = pmax  ≥ qmax  are in effect. We also show that for the non-solvable cases of the M3|prpt|Cmax  problem, the absolute performance bound ofCmaxH−Cmax*≤2max{pmax,qmax}and the ratio bound ofCmaxHCmax*≤53can be obtained.We conclude our introduction by summarizing our findings and some relevant literature. Table 1presents a summary of the best available worst-case ratio bounds for the non-polynomially solvable cases of the O3||Cmax  and the M3||Cmax  problems.Table 2presents a list of sufficient conditions related to P and pmax  so that the O3||Cmax  and/or the M3||Cmax  problems become polynomially solvable.The rest of the paper is organized as follows: In the next section, we propose exact algorithms for the O3|prpt|Cmax  problem when either p1 = p2 or P ≤ 2p1 + p2 or P ≥ 3p1 + p3. An approximation algorithm A for the non-solvable cases of the O3|prpt|Cmax  problem is presented in Section 3. The exact and approximation algorithms for the M3|prpt|Cmax  problem are presented in Section 4. The conclusions of this research are summarized in Section 5 along with a discussion about the applicability of our results to the proportionate open shop problem with unequal machine speeds.We first observe that the O3|prpt|Cmax  problem is solvable in polynomial time when p1 = p2 without any additional conditions imposed on the job processing times. This is because the condition p1 = p2 for the O3|prpt|Cmax  problem satisfies the sufficient condition p12 ≥ maxj = 1, …, n{p2j} of Kyparisis and Koulamas (1997) for solving the more general O3|Mj≥ Ml|Cmax  problem with ordered machines in polynomial time. Therefore, the following corollary can be stated without a proof.Corollary 1If p1 = p2, then O3|prpt|Cmax  is solvable in polynomial time andCmax*=max{P,3pmax}.Next, we present exact linear time algorithms for the O3|prpt|Cmax  problem when p1 > p2 and either P ≤ 2p1 + p2 or P ≥ 3p1 + p3. The proposed algorithms construct schedules with makespan equal to a lower bound on the optimal makespanCmax*in either case.Theorem 1(1)If p1 > p2 and P ≤ 2p1 + p2, then the O3|prpt|Cmax  problem is solvable in polynomial time andCmax*=3pmax.If p1 > p2 and P ≥ 3p1 + p3, then the O3|prpt|Cmax  problem is solvable in polynomial time andCmax*=P.(1)Assume that p1 > p2 and P ≤ 2p1 + p2. The last inequality can be written as∑j=3npj≤p1which together with the inequality p2 < p1 leads to a feasible O3|prpt|Cmax  schedule depicted in Fig. 1withCmax*=3p1; the constructed schedule is optimal because the total processing requirements of job J1 is a lower bound on the optimal makespan.Let Ti= pi+ ⋅⋅⋅ + pnand find i* = max {i|Ti≥ p1}. Then(1)Ti*≥p1.Since P ≥ 3p1 + p3 > 2p1 + p2 + p3, we have p4 + ⋅⋅⋅ + pn> p1, and so(2)i*≥4.At that,Ti*+1<p1,which, in view of (2), implies that(3)p2+⋯+pi*−1=P−p1−Ti*>(3p1+p3)−p1−(p1+pi*)=p1+p3−pi*≥p1.Let us now define a (no-idle) schedule S of length P, where machine M1 processes the jobs in the order i*, …, n, 1, …, i* − 1, machine M2 processes the jobs in the order 2, …, n, 1 and machine M3 processes the jobs in the order 1, …, n, (see Fig. 2which depicts the case whereJi*=J4).Then, the operations of job J1 do not overlap, due to (1) and (3). The feasibility of S with respect to all other jobs is evident from Fig. 2. Thus, the schedule S is feasible and, therefore, optimal.□In this section, we propose an approximation algorithm A for the non-solvable cases of the O3|prpt|Cmax  problem when p1 > p2 and 2p1 + p2 < P < 3p1 + p3.Theorem 2If p1 > p2 and 2p1 + p2 < P < 3p1 + p2, then there is a polynomial algorithm A for O3|prpt|Cmax  with the tight worst-case ratio boundCmaxACmax*≤76.We should point out that the boundCmaxACmax*≤76in Theorem 2 can be compared to the upper boundCmax(SH)−Cmax*Cmax*≤13on the relative error of the linear time heuristic H designed in Sevastianov and Tchernykh (1998) for the general O3||Cmax  problem with arbitrary job processing times.Proof of Theorem 2.Observe that these inequalities imply thatp2<p1<∑j=3npj<2p1. The schedule depicted in Fig. 3is feasible due to the above inequalities.In the schedule depicted in Fig. 3, there are idle time intervals of length p1 − p2 on all three machines to the immediate right of job J2. The makespan of this schedule is P + p1 − p2 and it is actually the optimal makespan for an auxiliary O3|prpt|Cmax  problem with p1 = p2 (the way to construct the optimal makespan for this auxiliary problem was detailed in the previous section). Effectively, we use the optimal solution of the auxiliary problem (with processing timespj′such thatpj′=pj,j ≠ 2 andp2′=p1) as an approximate solution for the problem on hand with the actual job processing times pj.We will consider three separate cases. LetCmaxA1,CmaxA2andCmaxA3denote the makespans of the schedules constructed by algorithm A for these three cases. Recall that the optimal makespan satisfies the conditionCmax*≥max{P,3p1}.Case 1p2≥12p1. In this case, we utilize the schedule depicted in Fig. 3 and thusCmaxA1=P+p1−p2. SinceCmax*≥max{P,3p1},CmaxA1−Cmax*≤p1−p2≤p1−12p1=12p1≤16Cmax*.p2≤14p1. The inequalities 2p1 + p2 < P < 3p1 + p3 imply that∑j=2npj<2p1+p3andp1<∑j=3npj. Sincep2+p3+p4≤3p2≤34p1,p1<∑j=3npjimplies thatp1≤p2+∑j=3kpj<p1+p3for some k ∈ {5, …, n}. This in turn implies that∑j=k+1npj=P−p1−(p2+∑j=3kpj)<(3p1+p3)−p1−p1=p1+p3. Based on the preceding inequalities, we can construct a feasible schedule depicted in Fig. 4.In this schedule, the start times of jobs Jk + 1, J2 on machines M2, M3 respectively precede the start time of job J1 on M1 by at most p3 and the completion times of jobs Jn, Jkon machines M1, M2 respectively exceed the completion time of job J1 on M3 by at most p3. Thus,CmaxA2≤3p1+2p3; sinceCmax*≥max{P,3p1},CmaxA2−Cmax*≤2p3≤12p1≤16Cmax*.14p1<p2<12p1.P > 3p1. The corresponding intermediate feasible schedule is depicted in Fig. 5and it is obtained from Fig. 3 by shifting to the right job J2 on M2 and jobs J1 and J2 on M3 by p1 − p2 (this is possible because P > 3p1).The makespan of this schedule is equal to P + p1 − p2 and the completion times of jobs J1, Jnon machines M2, M3 respectively exceed the completion time of job J2 on M1 byp1−p2>p1−12p1=12p1.The final feasible schedule is constructed from the schedule depicted in Fig. 5 by moving either job J3 alone or jobs J3, …, Jk(for some k ∈ {3, …, n}) into a position immediately following job J2 on machine M1 as detailed next.Whenp3≥14p1,we insert job J3 alone immediately after job J2 on M1 so thatCmaxA3=P+p1−p2−p3. Observe that job J3 will complete its processing on M1 prior to the completion time of job J1 on M2. Thus, sinceCmax*≥max{P,3p1},CmaxA3−Cmax*≤p1−p2−p3<p1−14p1−14p1=12p1≤16Cmax*.Whenp3<14p1,14p1≤∑j=3kpj≤12p1for some k ∈ {3, …, n} sincep1<∑j=3npj. Thus, in this case, we move jobs J3, …, Jkimmediately following job J2 on M1 so thatCmaxA3=P+p1−p2−∑j=3kpj. Thus, sinceCmax*≥max{P,3p1},CmaxA3−Cmax*≤p1−p2−∑j=3kpj<p1−14p1−14p1=12p1≤16Cmax*.P ≤ 3p1. The corresponding intermediate feasible schedule is depicted in Fig. 6and it is obtained from Fig. 3 by shifting to the right job J2 on M2 and job J1 on M3 by∑j=3npj−p1so that the completion time of job J1 on M3 coincides with its start time on M1 (this is possible because P ≤ 3p1). As a result of these shifts, there is an idle time interval equal to p1 − p2 at the end of the schedule on M1 and two idle time intervals on both M2 and M3 equal to∑j=3npj−p1and2p1−(p2+∑j=3npj)respectively (going from left to right).The final feasible schedule is constructed from the schedule depicted in Fig. 6 by moving either job J3 alone or jobs J3, …, Jk(for some k ∈ {3, …, n}) immediately after job J2 on machine M1 as in Subcase 3.1. Using the same argument proof as in Subcase 3.1 we can show thatCmaxA3−Cmax*≤12p1≤16Cmax*.By combining all cases, algorithm A supplies the worst-case ratio boundCmaxACmax*≤76.The tightness of the above bounds can be shown using a 6-job problem instance with [p1, p2, p3, p4, p5, p6] = [10, 5, 5, 4, 3, 3]. The heuristic schedule is as in Fig. 3 withCmaxA=35. The optimal sequence is {J4, J5, J6, J1, J2, J3} on M1, {J2, J3, J4, J5, J6, J1} on M2, and {J1, J2, J3, J4, J5, J6} on M3 withCmax*=P=3p1=30. Therefore,CmaxA−Cmax*=12p1=5andCmaxACmax*=76.□All proposed algorithms run in linear time and the initial sorting of the jobs requires O(nlog n) time; therefore, the overall running time of each algorithm is also O(nlog n).In this section, we show how some of our exact and approximation algorithms for the O3|prpt|Cmax  problem can be modified/extended so that they can be implemented to the more general M3|prpt|Cmax  problem. Chin and Tsai (1981) showed that any permutation is optimal for the F3|prpt|Cmax  problem withCmax*=Q+2qmax.The main idea in constructing optimal M3|prpt|Cmax  schedules is to apply the techniques of Section 2 for the O3|prpt|Cmax  problem and develop schedules of the form “O1–F–O2” withCmax*=P+Qunder the assumptions p1 = p2 ≥ qmax  and P ≥ 3p1 or under the assumptions p1 > p2, P ≥ 3p1 + p3 and p1 = pmax  ≥ qmax . In these schedules, one segment of the open shop job subset “O1” is sequenced first followed by the flow shop job subset “F” and then by the complementary segment of the open shop job subset “O2”.We first show that the M3|prpt|Cmax  problem can be solved optimally in polynomial time when p1 = p2 ≥ qmax  and P > 3p1.Theorem 3If p1 = p2 ≥ qmax  and P ≥ 3p1, then M3|prpt|Cmax  is solvable in polynomial time andCmax*=P+Q.Consider the schedule S depicted in Fig. 7. The flow shop job subset is depicted as the block “F” in Fig. 7 and it is sequenced in an arbitrary order. In view of the assumption that p1 ≥ qmax , the flow shop jobs in the block “F” do not overlap. Therefore, schedule S is feasible with Cmax (S) = P + Q and thus optimal.□We next show that the M3|prpt|Cmax  problem is solvable in polynomial time when p1 > p2, P ≥ 3p1 + p3 and pmax  ≥ qmax .Theorem 4If p1 > p2, P ≥ 3p1 + p3 and p1 = pmax  ≥ qmax , then M3|prpt|Cmax  is solvable in polynomial time andCmax*=P+Q.Consider the schedule S depicted in Fig. 8using the same “split” point for the open shop job subset as in Theorem 1, part (2), while constructing the open shop schedule depicted in Fig. 2 (the case whereJi*=J4is depicted in Fig. 8).The block “F” in Fig. 8 depicts the whole flow shop job subset sequenced in the SPT order. Fig. 8 is obtained from Fig. 2 by inserting the block “F” after job Jnon each machine. The feasibility of schedule S is implied by the feasibility of the schedule in Fig. 2 and by the assumption pmax  ≥ qmax  which guarantees that the jobs in “F” (sequenced in an arbitrary order) do not overlap. Therefore, schedule S is feasible with Cmax (S) = P + Q and thus optimal.□We close this section by considering approximate solutions for the non-solvable cases of M3|prpt|Cmax  problem. As pointed out by a referee, if the open shop jobs are treated as flow shop ones, then according to Chin and Tsai (1981), any permutation job sequence S will yieldCmax(S)≤P+Q+2qmax′,whereqmax′=max{pmax,qmax}and this bound is tight when P = 0. Sinceqmax′≤13Cmax*andP+Q≤Cmax*,Cmax(S)Cmax*≤53.

@&#CONCLUSIONS@&#
We conclude our presentation by discussing the applicability of our open shop results to the proportionate open shop problem with unequal machine speeds denoted as the O3|prpt, unsp|Cmax  problem. In the O3|prpt, unsp|Cmax  problem, the actual processing time of job Jjon machine Miis given aspij=pjsi,where si≥ 1 is the speed of machine Mi. By normalizing the speeds, we can assume that s1 = 1 < s2 ≤ s3.The O3|prpt, unsp|Cmax  problem can be solved optimally in polynomial time whenp2≥p1s2because the conditionp2≥p1s2satisfies the sufficient condition p12 ≥ maxj = 1, …, n{p2j} of Kyparisis and Koulamas (1997) for solving the more general O3||Cmax  problem with ordered machines in polynomial time.Also, we can construct an optimal schedule for the O3|prpt, unsp|Cmax  problem similar to the one depicted in Fig. 2 withCmax*=Pwhen P ≥ 3p1 + p3 by following the same steps as in Section 2 for the O3|prpt|Cmax  problem. Finally, we can construct an optimal schedule for the O3|prpt, unsp|Cmax  problem similar to the one depicted in Fig. 1 withCmax*=p1(1+1s2+1s3)whenp1≥s3max{p2,∑j=3npj}. The feasibility of the constructed schedule follows from the observation that the conditionp1≥s3max{p2,∑j=3npj}ensures thatp1s3≥p2and thatp1s3≥∑j=3npjas well. These last two results do not extend to the ordered open shop problem because the speed values s2, s3 are not common to all jobs in the ordered open shop.Future research should focus on approximate solutions for the non-solvable cases of the M3|prpt|Cmax  problem with stronger performance guarantees.