@&#MAIN-TITLE@&#
Kernels, in a nutshell

@&#HIGHLIGHTS@&#
A total function on an initial algebra is a homomorphism iff its kernel is a congruence.An earlier paper (CMCS 2001) elaborates on that classical result.We extend the result from total to partial functions.We simplify the proofs using the relational calculus.We generalise the setting to regular categories.

@&#KEYPHRASES@&#


@&#ABSTRACT@&#
A classical result in algebraic specification states that a total function defined on an initial algebra is a homomorphism if and only if the kernel of that function is a congruence. We expand on the discussion of that result from an earlier paper: extending it from total to partial functions, simplifying the proofs using relational calculus, and generalising the setting to regular categories.

@&#INTRODUCTION@&#
When is a function a fold? In one sense, the definition of fold says it all:A functionh:μF→acan be written in the form of a fold precisely when there exists anf:FA→Asuch thath=foldFf. For example, withLA=1+Nat×Aas the shape functor for lists of naturals,sum:μL→Natis a fold: indeed,sum=foldLaddwhereButallEqual:μL→Bool, the predicate testing that all elements of a list have the same value, is not a fold: with a little effort (for example, considering lists of length 0, 1, and 2), one can convince oneself that there exists no f withallEqual=foldLf.However, this criterion is a little unsatisfying. One can use the existence of f as a criterion to prove that h is a fold, by exhibiting the f; but it is harder to use it to disprove that h is a fold, since it is harder to provide evidence for the non-existence of any such f. The criterion is intensional, referring to some property f of the implementation of h, which we may not yet have to hand. We might hope for an extensional criterion instead, expressed purely in terms of the behaviour of h rather than of any possible implementation.An extensional but incomplete answer is given by the observation that if h is injective, so that there exists a post-inverseh′withh′∘h=id, thenand so h is a fold. But injectivity is only a sufficient condition, not a necessary one—indeed, sum is a fold, despite not being injective. So again this observation is no help in showing that a function is not a fold.In this paper, we discuss a necessary and sufficient condition for h to be a fold. The result was presented in an earlier paper [6]. It turns out to be a standard result in algebraic specification; see for example [4, §3.10]. We elaborate on that earlier work here. Our original presentation was purely in set-theoretic terms, treating functions as sets of pairs, and limited to total functions. Here, we point out a straightforward extension to partial functions, and we consider an allegorical (that is, axiomatic relational) presentation, which turns out to be rather simpler, and one in terms of regular categories, which is a bit more flexible.In the interests of brevity, we talk only about folds and postfactors. There's a dual story about prefactors, but the most useful connection with unfolds isn't quite one of duality (because dualising ‘partial function’ isn't very helpful). We leave the details for the curious reader to explore for themselves.In this section, we work in the categorySet, in which the objects are sets and the arrows are total functions between sets. In particular, a functionf:A→Bis a triple consisting of the source A, the target B, and the graph, the set of pairs{(a,b)|a∈A∧b=fa∈B}. We writeranf⊆Bfor the range of f.A crucial ingredient in the construction is the notion of the kernel of a function, that is, the set of pairs of arguments identified by the function.Definition 1The kernelkerfof a total functionf:A→Bis the set of pairs⋄It is easy to see that this definition yields an equivalence relation on A.Givenh:A→Candf:A→B, when can h be factorised intog∘ffor someg:B→C? It is clearly necessary for the function spaceB→Cto be non-empty, that is, eitherC≠∅orB=∅; otherwise, there can be no such g. Given that proviso, a necessary and sufficient condition for the existence of such a postfactor g is for the kernel of h to include the kernel of f:Theorem 2Givenh:A→Candf:A→Bsuch thatB→C≠∅,⋄ProofFrom left to right, suppose thath=g∘f. Thenwhich establishes the inclusion. From right to left, suppose thatkerh⊇kerf; we construct g as follows. Forb∈ranf, pick any a such thatfa=b, and definegb=ha; by the hypothesis, the choice of a does not affect the value ofgb. Forb∉ranf, definegbarbitrarily; by the assumption thatB→C≠∅, this is possible (classically).   ⋄From this follows the main result of [6]:Corollary 3For functorFsuch that the initial algebra(μF,inF)exists, and forh:μF→A,⋄ProofThe connection to Theorem 2 comes from the universal property of fold:(Note that the side conditionFA→A≠∅follows fromμF→A≠∅[6], which follows in turn from the existence of h.)   ⋄Remark 4One can show thatker(Fh)=RelF(kerh), whereRelFRdenotes the relational lifting of the relation R on A to a relation acting pointwise onFA. Moreover, sinceinFis a bijection,ker(h∘inF)is equivalent to justkerh. Finally, given anF-algebraf:FA→A, we say that a relation R is anF-congruence for f if pointwise-related arguments are taken by f to related results:Then the conditionker(h∘inF)⊇ker(Fh)in Corollary 3 is equivalent to saying thatkerhis anF-congruence forinF, which is the more traditional but less manipulable formulation.  ⋄The simple characterisation above of the kernel of a total function needs adaptation, if it is to continue to serve as an equivalence relation on the source of a partial function:Definition 5The kernelkerf⊆A×Aof a partial functionf:ABis the set of pairs⋄A postfactor theorem similar to Theorem 2 can be proved for partial functions. The conditions need to be strengthened in one sense: clearly now it is necessary fordomfto includedomh. But they may be weakened in another sense: we no longer need to assume a non-empty space of results, because partial functions exist even to empty sets.Theorem 6Given partial functionsh:ACandf:AB,⋄However, the proof is rather more awkward. It depends on the fact thatdom(g∘f)={a∈domf|fa∈domg}.ProofFrom left to right, suppose thath=g∘f. ThenAs for the kernel inclusion, suppose(a,a′)∈kerf, so either (i)a,a′∈domfandfa=fa′, or (ii)a,a′∉domf. In case (i), eitherfa,fa′∈domg, whena,a′∈domhandha=g(fa)=g(fa′)=ha′, so(a,a′)∈kerh; orfa,fa′∉domg, whena,a′∉domh, so(a,a′)∈kerh. Finally, in case (ii), againa,a′∉domhand so(a,a′)∈kerh.From right to left, suppose thatkerh⊇kerfanddomh⊆domf; we construct g withdomg={fa|a∈domh}as follows. Forb∈domg, pick anya∈domhsuch thatfa=b, and definegb=ha; by the hypothesis, the choice of a does not affect the result (for ifa,a′∈domh⊆domfwithfa=fa′, then(a,a′)∈kerf⊆kerhand soha=ha′). Of course, we do not have to considerb∉domg, so we need no longer resort to classical reasoning.   ⋄The construction in the proof of Theorem 2 essentially involves inverting f; this suggests that it might be worth exploring a presentation in terms of the relational calculus [2]. Rather than work concretely with relations as sets of pairs, as we did in Section 2 and in [6], we use the axiomatic presentation of a division allegory[5], falling back on sets of pairs only for the purposes of illustration. Formally, we consider typed relationsR:A∼B‘from A to B’; intersectionR∩Sforming a semi-lattice, and inducing inclusionR⊆Sas a preorder on relations of a common type; identity id and compositionR∘S, forming a monoid, with composition monotonic with respect to ⊆; converseR∘forming an involution, contravariant with respect to composition and monotonic with respect to inclusion; and division operatorsR/S,R\Sdiscussed in more detail below. One additional and non-obvious axiom is required, the so-called modular law(R∘S)∩T⊆(R∩(T∘S∘))∘S.Four special classes of relations are identified as follows:R injective:R∘∘R⊆idR simple:R∘R∘⊆idR entire:R∘∘R⊇idR surjective:R∘R∘⊇idWe say that R is coreflexive ifR⊆id. The domain of a relation is defined bywith the universal property thatdomRis the smallest coreflexive S that may be extracted as a prefactor:Lemma 7R∘domR=R⋄ProofWe have:⋄Right and left division are characterised by their universal propertiesThese are the least familiar of the operators of the relational calculus, but they are truly central:(/S)forms a Galois connection with(∘S), and(S\)with(S∘), and Galois connections—more generally, adjunctions—underlie most of the structural equivalences we use in program calculation [9].The appropriate notion of kernel for relations in general is as follows [1]:Definition 8The kernelkerRof a relation R is given by⋄In terms of concrete sets of pairs, the quotients reduce to the following constructions:and thereforeIn particular, when R is simple, so equivalent to a partial function, this agrees with the definition of kernels in Section 3.We identify three useful lemmas about kernels, which we will need for the proof of Theorem 12 on postfactors for simple relations, analogous to Theorem 2 and Theorem 6.Lemma 9Kernels enjoy the universal property that⋄ProofThis follows from the universal properties of the components:⋄Lemma 10R∘∘R⊆kerRfor simple R.  ⋄ProofWe have□Lemma 11R∘kerR⊆R⋄ProofWe have:⋄Theorem 12For simpleT:A∼CandR:A∼B, there exists simpleS:B∼CwithT=S∘RiffkerR⊆kerTanddomR⊇domT.  ⋄ProofFrom left to right, supposeT=S∘R. Thenand(We don't actually need the assumption that R, S, and hence T are simple.) Conversely, suppose the kernel and domain inclusions onR,T, and defineS=T∘R∘. ThenT=S∘R:Moreover, S is simple:⋄Note that this proof establishes the result in the more general setting of simple relations, that is, partial rather than total functions, with no extra fuss. In contrast, the proof of Theorem 6 is rather more complicated than the proof of Theorem 2, with an awkward case analysis.One might wonder whether the full structure of a division allegory is necessary for the postfactors result to hold: the proof in Section 4 uses division heavily, but the more concrete one in Section 2 does not. What abstract structure is actually required?Definition 13Kernel pairThe categorical analogue of the kernel of a function is the kernel pair of an arrow, the pullback of the arrow along itself:That is, the kernel pair off:A→Bis an object X and arrowsp0,p1:X→Asatisfyingf∘p0=f∘p1, with the universal property that, for any other object Y with arrowsq0,q1:Y→Asatisfyingf∘q0=f∘q1, there is a unique mediating arrowr:Y→Xsuch thatq0=p0∘randq1=p1∘r.  ⋄Such pullbacks do not always exist. They always do inSet, when the object X is just the set of pairskerffrom Definition 1, andp0,p1are the left and right projections; that justifies the use of ‘kerf’ for X in the commuting diagram above. More generally, a finitely complete category possesses all finite limits, and in particular pullbacks and hence kernel pairs. But for these kernel pairs to be in some sense well behaved, we need a couple of extra conditions as well.Definition 14Epimorphism, monomorphismAn arrowg:B→Cis an epimorphism if it is right-cancellable, in the sense that for anyh0,h1:C→D, ifh0∘g=h1∘gthenh0=h1.Dually, g is a monomorphism if it is left-cancellable: for anyf0,f1:A→B, ifg∘f0=g∘f1thenf0=f1.  ⋄Definition 15CoequaliserWe say that arrowg:B→Ccoequalises a parallel pair of arrowsf0,f1:A→Bifg∘f0=g∘f1. The coequaliser off0,f1is a universal such C and g—that is, for any other object D and arrowh:B→Dthat coequalisesf0,f1, there is a unique mediating arrowr:C→Dsuch thath=r∘g.⋄InSet, the coequaliser object C is the quotient of B by the smallest equivalence relation ≡ such that∀a∈A∘f0a≡f1a; that is, the reflexive, symmetric, transitive closure of the relation induced byf0,f1. It is an instructive exercise to verify that the coequaliser is necessarily an epimorphism (whatever the category). Not all epimorphisms arise as coequalisers; those that do are called the regular epimorphisms.Definition 16Regular categoryA regular category is one: that is finitely complete (so in particular has all kernel pairs); in which every kernel pair has a coequaliser; and in which regular epimorphisms are stable under pullbacks—that is, if g in the commuting diagram below is a regular epimorphism, then so isp1.The categorySetis regular.  ⋄Definition 17RelationOne can define a notion of ‘relation’R:A∼Bvia a spanA←R→B: in a Cartesian category (that is, one with products), R is modelled as a monomorphisminto the product:(To be more precise, one should consider equivalence classes of such spans under isomorphisms between their apices R. One can also remove the dependence on products by requiring that the two legs of the span are jointly monic, suitably defined.)  ⋄InSet, this directly corresponds to thinking of R as a subset ofA×B. But constructing the composition of relations involves taking a pullback of spans:(and then taking the ‘image’, as discussed above: the arrow from the apex toA×Cis typically not a monomorphism); in order for this composition to be associative, one needs the additional well-behavedness properties of a regular category [5, §1.569]. So regular categories are a somewhat necessary phenomenon in thinking about relational programming; for a recent crisp summary, see [7, Section 2].Definition 18Partial mapSimilarly, one can define a partial mapf:ABin a category as a span with a monomorphic left leg:writingf‾:domf→Bfor the restriction of f to its domain (again, up to equivalences arising from isomorphisms on the apices). Composition is again constructed by pullbacks of spans.  ⋄Lemma 19Image factorisationAn important result about regular categories is that every arrowf:A→Bfactorises into a regular epimorphism followed by a monomorphism.Indeed, an alternative chacterisation of regular categories is that they have finite limits and image factorisations, stable under pullbacks.  ⋄InSet,imgfisA/f, the quotient of A into equivalence classes according to f; that is, two elementsa,a′∈Aare equivalent ifffa=fa′(in other words,(a,a′)∈kerf). So one can think of e as taking an element of A to its equivalence class, and m mapping this class into B. Equivalently, one can think of e as being f but with the target restricted precisely to the range of f, and m as the embedding of the range back into the target:A/fis isomorphic toranf. For more about image factorisation, see Taylor [13].Theorem 20Given arrowsf:A→Bandh:A→Cin a regular category, there exists a partial mapg:BCsuch thath=g∘fif and only if there exists an arrowi:kerf→kerhsatisfyingp0=q0∘iandp1=q1∘i, wherep0,p1andq0,q1are the kernel pairs of f and h respectively.  ⋄ProofThe situation is illustrated in the diagram below:From right to left, suppose we are given i making the two upper left triangles commute; we construct g as follows. Letm∘ebe the image factorisation of f (making the lower left triangle commute), so that e is the coequaliser ofp0,p1. Now h also coequalisesp0,p1:so by the universal property of the coequaliser there exists a unique mediating arrowk:imgf→Cmaking the upper right triangle commute. We define partial mapg:BCto be the span.We have to show thath=g∘fas partial maps. Since f and h are in fact total, their domain coincides with their source, and the monomorphic left legs of the spans are the identity. So for the compositiong∘f, we have the following situation:and we have to show that the outer span equals h. Let us factor f intom∘e, and see what effect this has on the pullback diamond:We use two simple standard facts about pullbacks, both of which are straightforward to prove. Firstly, the pullback of a monomorphism along itself is the identity; soY=imgf, andc=d=id. Secondly, a pullback of the identity (c) is again the identity; soa=id, and henceX=Aandb=e. Therefore, the outer span is indeedas required.Conversely, givenh=g∘f, and kernel pairsp0,p1for f andq0,q1for h, we construct the mappingi:kerf→kerhas follows:We have thatp0,p1form a cone over:so by the universal property of the pullback, there exists a (unique) mediating arrowi:kerf→kerhmaking the trianglesp0=q0∘iandp1=q1∘icommute.   ⋄Have we gained anything by abstracting fromSetto regular categories? IfSetwere the only regular category, the answer would be ‘no’ (or at least, ‘not much’: it is still nice to see precisely which axioms are used, even if those axioms admit just one model). However, it is a standard result [3] that any category of Eilenberg–Moore algebras overSetis also regular. In particular, one can think of partial functions over sets as point-preserving total functions over pointed sets, which are the homomorphisms between algebras for the monad(1+); therefore the categoryPfunof sets and partial functions is equivalent to the category of Eilenberg–Moore algebras for this monad, and hence is regular. So the categorical story is more flexible; we can instantiate it for free at least to partial functions.

@&#CONCLUSIONS@&#
I presented a preliminary version of Section 2 at Meeting #55 of IFIP WG2.1 in Cochabamba in January 2001; Lambert Meertens simplified my proofs there. The work was subsequently published at CMCS 2001 [6], jointly written with Graham Hutton and Thorsten Altenkirch, whose contributions were invaluable. Bart Jacobs also made some helpful observations about congruences and images, pointing me towards his paper [8].Thanks to comments received at CMCS, I saw how to generalise from total functions to partial functions; I presented the more general results at Meeting #56 of WG2.1, in Ameland in September 2001—precisely while the tragedy of the twin towers was unfolding. Roland Backhouse encouraged me there to use the relational definitionkerR=(R\R)∩(R\R)∘of kernels from Section 4, but we didn't manage to complete the proof in the relational style at the meeting. (This notion of kernel turns out to date back at least to 1948 [12]; it is a special casekerR=syq(R,R)of the ‘symmetric quotient’ used by Schmidt and by Winter in this volume.) In October 2005, José Oliveira invited me to take part in a PURe Workshop in Braga; that was the spur I needed to complete the relational proofs (helped by Shin-Cheng Mu), which I presented there. José liked the results, because it turned out to be related to work he was doing on pointfree functional dependency theory [10]; he encouraged me to write those results up, but I've never had the excuse to make time for it—until now! (Note that the relational definition of kernels used here is in general incomparable to the definitionkerR=R∘∘Rused by José himself [10,11]as a stepping stone towards his ‘injectivity preorder’ on relations.)For help with the categorical construction, I am indebted to Maciej Piróg for pointing me towards regular categories; to James McKinna, Ohad Kammar, and Bob Harper, for enlightening discussions; and especially to Sam Staton, who sketched out the proof of Theorem 20 for me.