@&#MAIN-TITLE@&#
Survivable network design with shared-protection routing

@&#HIGHLIGHTS@&#
We solve the survivable network design problem with shared-protection routing with and without capacity reuse.Solution of a global rerouting problem solution provides a very tight lower bound to the problem.In many cases in our computational tests, one or two additional links suffice to provide shared-protection routing.

@&#KEYPHRASES@&#
Shared protection survivable network design,End-to-end restoration schemes,Column generation,Large scale optimization,

@&#ABSTRACT@&#
In this paper we study the problem of designing a survivable telecommunication network with shared-protection routing. We develop a heuristic algorithm to solve this problem. Recent results in the area of global re-routing have been used to obtain very tight lower bounds for the problem. Our results indicate that in a majority of problem instances, the average gap between the heuristic solutions and the lower bounds is within 5%. Computational experience is reported on randomly generated problem instances with up to 35 nodes, 80 edges and 595 demand pairs and also on the instances available in SNDlib database.

@&#INTRODUCTION@&#
We study the problem of designing a survivable telecommunication network with shared-protection routing. The standard network design problem (NDP) is to find the minimum cost installation of capacities on the edges of a graph that will permit a feasible multi-commodity flow of a given set of traffic demands. In the survivable network design problem, the capacities must be installed so as to permit a feasible flow of all traffic under any single edge failure (hereafter referred to as a fault). This problem has several different versions depending on the permissible re-routing (restoration) schemes. The problem is of considerable applied importance to telecommunications industry and has been extensively studied in its different versions during the last two decades. However, very limited success has so far been reported in finding optimal or demonstrably close to optimal solutions of realistic size instances. Our key contribution in this work is towards addressing this gap.There are two basic approaches to achieve survivability in telecom networks. On one hand, there are the “route-around-the-failure” approaches, in which the affected traffic is re-routed around the failed link, without disturbing its end-to-end path. On the other hand, we have the “end-to-end-restoration” approach, in which a completely different end-to-end path is used for the traffic affected by the fault. We are interested in the second approach. Within this approach too, several different restoration schemes are possible. The simplest but most expensive option is to provide, for each demand, a working path that is used when there is no fault (referred to as no-fault routing), and a dedicated edge-disjoint protection path, which is used in the event of a fault that disrupts the working path. This scheme is very expensive because separate restoration capacity is dedicated to each demand which remains completely unused unless the demand in question is disrupted.At the other end of the spectrum, the most flexible routing scheme is one in which any arbitrary path may be used for any demand under any fault. All we require is that there should exist a feasible routing of all traffic under any fault, without any restrictions on the routing at all. This routing scheme has been called global re-routing by Atamturk and Rajan (2008). Accordingly, we call this model SND-G. While such a model is appropriate for packet-switched IP networks, there are two serious implications of this scheme which make it unsuitable for circuit-switched networks. First, it implies that for a given demand, a potentially different path may be used under each fault. This is not practical to implement because it is difficult to detect and convey the information about the exact fault that has occurred to all the network nodes in real time. Second, and perhaps a more serious, implication is that under a fault, even those demands, which are not affected by the fault, may be required to be re-routed. This second implication is considered highly unacceptable from a real-world perspective. Despite these practical limitations, this model is theoretically important because the solution set of this model contains the solution sets of all other survivability models. Therefore, the optimal solution of this model provides a valid lower bound for all other survivability models. Recently, Agarwal (2013) has derived several classes of 3- and 4-partition based facets and valid inequalities for this model, which result in very tight lower bounds, permitting optimal solutions for fairly large instances with 35 nodes, 80 edges, and fully dense traffic matrices.Now we turn our attention to a routing scheme called shared-protection routing. Our results demonstrate that this scheme is only very slightly more expensive than global re-routing, but overcomes the practical difficulties associated with it. In this scheme, each traffic demand is assigned a working path, and an edge-disjoint protection path. The same protection path is used in the event of the working path being disrupted, irrespective of the specific fault that caused the disruption. Moreover, the network capacity used for the protection path is not dedicated, but is shared among various demands to the extent possible. Note that such sharing of protection path capacity is possible for two or more demands if their working paths are edge-disjoint, because these demands do not require the protection capacity simultaneously under the single edge failure assumption. We assume that the traffic demands are splittable, i.e. the total demand of a commodity is allowed to be split and routed along multiple paths. In the event of a fault, only that part of the split demand which is affected by the fault is re-routed. We address the single facility version of the problem. This means that capacity installed on each edge of the network is an integer multiple of a single base capacity (also referred to as the module capacity in the literature). The capacity as well as traffic demands are assumed to be undirected.The shared-protection routing scheme can be implemented in two different ways, leading to two sub-cases, namely with and without working capacity reuse. In the former case, the working-path capacity that is freed up due to disruption of demands affected by a fault, can be used to route other demands which are also affected by that fault. For example, consider two demands, say D1 and D2, with working paths 1-2-3-4 and 5-2-3-6, respectively. If the edge 2-3 fails, both demands will be disrupted, and one unit of capacity each on the edges 1-2, 3-4, 5-2 and 3-6 will be freed up. Suppose that the protection path of D2 is 5-1-2-6. Then, under working-capacity reuse model, this demand can use the capacity freed up by the D1 on edge 1-2, and no additional capacity for restoration is required on this edge. On the other hand, if the reuse of working capacity is not permitted, an additional unit of spare capacity is needed on edge 1-2, because the capacity freed up by demand D1 cannot be used by D2. We call the two models with and without working capacity reuse SND-R and SND-NR, respectively. In this paper, we address the problem of designing survivable networks under both these models.Our approach is as follows. An optimal solution of model SND-G is first obtained. A column-generation-based heuristic approach is used to find a feasible routing of all demands under SND-R (or SND-NR) model within this solution. If the heuristic succeeds in finding a feasible routing, then we have found the optimal solution for the SND-R/NR model. Otherwise, additional capacity is installed on one or more edges to make this solution feasible for model SND-R/NR. It is clear from the definition of these models that SND-NR will require more capacity than SND-R, which in turn will require more capacity than SND-G. Our computational results on randomly generated 35-node instances indicate that in a significant majority of cases, model SND-R requires no additional capacity over SND-G, while SND-NR requires about 3–4% additional capacity, on the average. On publicly available SNDlib (sndlib.zib.de) problem instances, we are able to achieve an average gap of less than 1% for model SND-R and slightly more than 2% for model SND-NR.We note that the model studied by us is suitable for the lower (transmission) layers of the telecommunication networks, where a fault such as an optical fiber cut leads to a complete failure of a single link, leading to disruption of all traffic using that link. For the upper layers of the network, as in IP networks, a fault at the lower level may cause partial failure of multiple links, as a single lower level facility may be carrying several upper level facilities among different node-pairs. While it may be possible to extend the scope of our model to this latter case, we restrict ourselves to the lower layer in the present work. The model can also be easily extended to the case where some links are 100% reliable, by excluding such links from the set of faults, and permitting such links to be used on both the working as well as the protection paths of a demand, i.e. path-pair used by a demand is not required to be disjoint with respect to such links. Żotkiewicz, Ben-Ameur, and Pióro (2010) present an algorithm that can be used for column generation under such circumstances.The rest of this paper is organized as follows. In Section 2 we describe our notation, and provide MIP formulations of the three models under consideration. In Section 3, we review the past work on this and related network design problems. We also briefly review recent advances in the design of SND-G which motivated the present work. Sections 4 and 5 provide the details of the overall approach. The column-generation subproblem and implementation issues are discussed. We provide computational results on randomly generated problems with 35 nodes, 80 edges and 595 demand pairs, and problems in SNDlib in Section 6. Some concluding remarks are made in Section 7.In this section we provide the MIP formulations of the three models mentioned earlier, and make a few remarks about the differences among them, and some issues pertaining to the difficulty of solving them.First, we list the notation and the MIP formulation for the model SND-G. This formulation is a flow-based formulation based on aggregate commodity definitions, where all traffic originating at a node is treated as a single commodity. We are given an undirected bi-connected graphG=(V,E)withn=|V|andm=|E|, called the supply graph, and K, a set of commodities. For eachk∈K, letqikbe the demand of commodity k at node i. Note that for SND-G we define all traffic with a common source node as a single commodity, withqikbeing negative for the source node, and non-negative for all other nodes. This, so-called aggregate commodity definition, leads to a substantial reduction in the number of flow variables compared to defining each origin–destination pair as a separate commodity. We note that it is not possible to use this aggregate commodity definition for models SND-R and SND-NR, where the traffic between each origin–destination pair must be treated as a separate commodity.Letcedenote the cost of installing one module (facility) of C units of capacity one∈E. Letyebe the number of facilities installed on edgee∈E, andgijktthe (directed) flow of commodity k on edgee=(i,j)under fault t, i.e. when edget∈Ehas failed. Note that for ease of notation, each edge(i,j)∈Eis mapped to a numeralt∈{1,2,…,m}, which denotes the failure of edge(i,j). The problem SND-G can be formulated as the following mixed integer program.(1)SND-GMinimize∑e∈Eceyes.t.∑i∈δ(j)gijkt-∑i∈δ(j)gjikt=qjk∀j∈V,∀k∈K,∀t∈E,t≠(i,j)(2)∑k∈K(gijkt+gjikt)⩽Cye∀e=(i,j)∈E,∀t∈E,t≠egijkt=gjikt=0∀k∈K,∀t=(i,j)∈Egijkt⩾0∀i∈V,∀j∈V,∀k∈K,∀t∈Eye∈Z+∀e∈EConstraints (1) are the flow conservation constraints at each node for each commodity under each fault, and (2) are capacity constraints. Hereδ(j)denotes the set of nodes adjacent to node j in G. The number of constraints in set (1) isO(n2m)and that in (2) isO(m2). The problem has m capacity variables, and2(n-1)m2flow variables, i.e.2mvariables for each of the(n-1)commodities, and each of the m faults. Clearly, the size of this formulation is substantially larger than the standard NDP, because the flow variables and the flow-conservation constraints have to be replicated for each fault. However, this difficulty can be overcome by solving the problem in the space of capacity variables alone by projecting out the flow variables via Benders’ decomposition. See, for instance, Bienstock and Mattia (2007), Mattia (2012) and Agarwal (2013) for details.Next, we present the formulations of models SND-R and SND-NR with an exponentially large number of columns. In such formulations, each column represents one complete source-to-destination routing option for a demand. It will be convenient, therefore, to let commodity k refer to the traffic demand for a given pair of nodes. Thus, the commodity set K contains all node-pairs with non-zero demand, i.e. in the worst case|K|=n(n-1)/2. Letdkbe the traffic demand of commodity k. Suppose that the edges in E are numbered from 1 tom=|E|. We defineF=E∪{0}as the index set of faults, where index 0 denotes the no-fault scenario, i.e. the case where none of the edges have failed. We usef∈Fas the index to denote a specific fault.In the case of SND-R and SND-NR, for each commodity, all traffic will be assigned to one or more path-pairs; each pair consisting of a working path and an edge-disjoint protection path. We use the term routing-option to denote each such pair of disjoint paths. LetRkbe the index set of all routing options for commodity k. Forr∈RkletAr⊂EandBr⊂E, respectively, be the sets of edges on the working- and protection-paths represented by routing option r. Givenk∈Kandr∈Rkwe define:θfekr=1,iff∈Arande∈Br1,iff∉Arande∈Ar0,otherwiseIn other words,θfekris 1 if routing option r for commodity k requires capacity on edge e under fault f, and 0 otherwise. Note that the above definition of capacity requirement is consistent with the model SND-R. On the other hand, for model SND-NR, the capacity requirement definition will be represented byγfekr, as defined below.γfekr=1,iff∈Arande∈Ar∪Br1,iff∉Arande∈Ar0,otherwiseGiven the above definitions, and lettingxkrbe the quantity of commodity k routed along routing optionr∈Rk, model SND-R can be formulated as follows:(3)SND-RMinimize∑e∈Eceyes.t.∑k∈K∑r∈Rkθfekrxkr⩽Cye∀f∈F,∀e∈E(4)∑r∈Rkxkr⩾dk∀k∈Kxkr⩾0∀k∈K,∀r∈Rkye∈Z+∀e∈EThe objective is to minimize the total cost of installed facilities. Constraints (3) ensure that under any fault the total traffic flow on any link does not exceed the capacity installed on the link. Constraints (4) ensure that the entire demand of each commodity is routed in the solution. Model SND-NR is obtained simply by replacingθfekrwithγfekras given below.SND-NRMinimize∑e∈Eceyes.t.∑k∈K∑r∈Rkγfekrxkr⩽Cye∀f∈F,∀e∈E∑r∈Rkxkr⩾dk∀k∈Kxkr⩾0∀k∈K,∀r∈Rkye∈Z+∀e∈ENote that by treating variablesxkras continuous variables, we assume that the traffic demands are arbitrarily splittable on a continuous scale. In reality, this splitting is restricted to integer multiples of a some basic unit at which the switching equipment performs the cross-connections. For example, in a network consisting of DS1 (1536Kb/s) facilities, the unit of cross-connection is usually a DS0 (64Kb/s) signal, i.e. a ratio of 1:24. We note that as long as the cross-connect unit is a small fraction of the facility capacity, as in the above example, treatingxkras a continuous variable is a reasonable approximation. A suitable post-processing heuristic can usually convert the solution of the above model into a solution with discretexkrvalues without requiring additional capacity.

@&#CONCLUSIONS@&#
