@&#MAIN-TITLE@&#
Cold vs. hot standby mission operation cost minimization for 1-out-of-N systems

@&#HIGHLIGHTS@&#
A method for evaluating mission cost in systems with standby elements is suggested.Arbitrary time to failure distributions of elements are taken into account.An optimization hot vs. cold standby problem is formulated and solved.Sequencing of standby elements and choice of standby modes are optimized.

@&#KEYPHRASES@&#
Standby system,Cold standby,Hot standby,Mission cost,Optimization,

@&#ABSTRACT@&#
It is well recognized that using the hot standby redundancy provides fast restoration in the case of failures. However the redundant elements are exposed to working stresses before they are used, which reduces the overall system reliability. Moreover, the cost of maintaining the hot redundant elements in the operational state is usually much greater than the cost of keeping them in the cold standby mode. Therefore, there exists a tradeoff between the cost of losses associated with the restoration delays and the operation cost of standby elements. Such a trade-off can be obtained by designing both hot and cold redundancy types into the same system. Thus a new optimization problem arises for the standby system design. The problem, referred to in this work as optimal standby element distributing and sequencing problem (SE-DSP) is to distribute a fixed set of elements between cold and hot standby groups and select the element initiation sequence so as to minimize the expected mission operation cost of the system while providing a desired level of system reliability. This paper first formulates and solves the SE-DSP problem for 1-out-of-N: G heterogeneous non-repairable standby systems. A numerical method is proposed for evaluating the system reliability and expected mission cost simultaneously. This method is based on discrete approximation of time-to-failure distributions of the system elements. A genetic algorithm is used as an optimization tool for solving the formulated optimization problem. Examples are given to illustrate the considered problem and the proposed solution methodology.number of elements in the systemnumber of HS elementsindex of the element initiated after i−1 failuresr.v. representing the time-to-failure of element jscale and shape parameters of element j with Weibull failure distributionprobability that element j fails in time interval i after its initiationcost (per time unit) of keeping element j in hot standby (or operation) modecost (per time unit) of keeping element j in cold standby modestartup cost of cold standby element jstartup cost of hot standby element jmission timesystem reliabilityexpected mission costrandom cumulative working time of elements s(1), s(2), …, s(i):Xi=minτ,∑j=1iTs(j))Pr{Xj=Δi}number of considered time intervals during the missionduration of each time intervaltotal cost of using HS element j failed or switched off at time ttotal cost of using CS element j initiated at time t0 and failed or switched off at time tcumulative distribution functionprobability density functionprobability mass functionrandom variablegenetic algorithmhot standbycold standbystandby element distributing and sequencing problem

@&#INTRODUCTION@&#
Standby redundancy is a technique in which one or multiple modules are on-line and operational with one or more modules serving as standby units. When an on-line unit becomes faulty, it is removed from operation and replaced with a standby unit. Using the standby redundancy technique to improve the reliability of a system or subsystem has become a well-known principle in the system reliability engineering field (Johnson, 1989). Examples abound in the real-world systems, such as airplanes with multi-engine systems, cables in a bridge, data processing systems with multiple video displays, and communication systems with multiple transmitters (Amari & Pham, 2010; Amari, Zuo, & Dill, 2008).There are two traditional types of standby redundancy: hot and cold. In hot standby redundancy, elements that are in the standby mode operate in synchrony with the on-line primary unit and are ready to take over at any time; while in cold standby redundancy, elements in the standby mode are unpowered and thus do not operate until needed to replace a faulty on-line unit (Johnson, 1989). Hot standby redundancy can provide fast restoration in the case of failures. However because the hot standby elements are fully exposed to working stresses, they can fail even before they are used, which reduces the overall system reliability. In contrast, the cold standby elements require long restoration delays when they are needed to operate as a substitute for a failed online element. However they are shielded from the working stresses associated with system operation; the likelihood of failure in the cold standby mode is very low and can be assumed to be zero. Therefore, using cold standby redundancy can usually provide higher system reliability than using hot standby redundancy.From the mission cost point of view, the cost of losses associated with the restoration delays in a hot standby redundancy system is much lower than that in a cold standby redundancy system. However, maintaining the redundant elements in the hot standby mode is usually much more costly than keeping them in the cold standby mode as working elements consume more energy and materials. Therefore, there exists a tradeoff between the restoration cost and the operation cost of standby elements. A compromise can be obtained by designing both types of redundancies into the same system. Consider a 1-out-of-N: G standby system designed with a fixed set of elements. The distribution of the system elements between hot and cold standby modes and the order in which the standby elements are initiated heavily affect the system reliability as well as mission cost (associated with energy consumption, standby and operation maintenance, startup expenses, costs of restoration delays, etc.). Thus a new optimization problem arises, which distributes the elements between cold and hot standby groups and selects the element initiation sequence with the objective to minimize the expected mission cost of the system while providing a desired reliability level. We refer to such problem as optimal standby element distributing and sequencing problem (SE-DSP). In this paper, we first formulate and solve the SE-DSP problem using a combination of a numerical method based on a discrete approximation of time-to-failure distributions of the system elements and a genetic algorithm. The numerical method is used for evaluating the system reliability and expected mission cost; the genetic algorithm is used as an optimization tool for solving the formulated optimization problem.Considerable research efforts have been expended in formulating and solving optimization problems such as redundancy allocation and reliability allocation problems for standby systems (Gen & Yun, 2006; Kuo, Prasad, Tillman, & Hawang, 2001; Kuo & Wan, 2007). For example, exact optimization methods like dynamic programming and integer programming were proposed for solving the redundancy allocation problem (RAP) of 1-out-of-N: G homogeneous hot-standby series-parallel systems, where one type of elements can be substituted only by the same type of elements to achieve fault tolerance (Fyffe, Hines, & Lee, 1968; Misra & Sharma, 1991). Meta-heuristic optimization methods like genetic algorithm and Tabu search were proposed to solve the RAP of 1-out-of-N: G or K-out-of-N: G heterogeneous hot-standby series-parallel systems, where one type of elements can be substituted with a different type of functionally-equivalent elements to achieve fault tolerance (Chen & You, 2005; Chia & Smith, 2004; Coit & Smith, 1996; Onishi, Kimura, James, & Nakagawa, 2007). In Coit (2001), an integer programming-based method was proposed to solve the redundancy optimization problem for 1-out-of-N: G cold-standby series-parallel systems. Furthermore, in Coit and Liu (2000), Coit (2003) the integer programming-based method was applied to solve the RAP for 1-out-of-N: G or K-out-of-N: G heterogeneous series-parallel systems with combined redundancies where each subsystem involves either hot or cold standby redundancy. It is worth noting that there also exist works considering both standby redundancy and active redundancy (Chambari, Rahmati, Najafi, & Karimi, 2012; Zhao & Liu, 2004). In the active redundancy technique, redundant elements are put in parallel to elements of the system for successful operation without using switching mechanisms; such technique is used when the replacement of elements during system operation is impossible (Bueno & Carmo, 2007; Zhao, Chan, & Ng, 2012). Particularly in Chambari et al. (2012), the RAP was solved in a bi-objective reliability-cost formulation using multi-objective version of the genetic algorithm for systems with choices of active or cold-standby redundancies for individual subsystems. In Zhao and Liu (2004) a hybrid intelligent algorithm based on genetic algorithm, neural networks, and fuzzy theory was proposed to solve the RAP for systems with uncertain element lifetimes where redundant elements are arranged in either active or cold-standby. To the best of our knowledge, none of the above-mentioned works have considered the proposed optimization problem that minimizes the expected mission operation cost for systems or subsystems with mixed hot and cold redundancy types.The remainder of the paper is organized as follows: Section 2 describes the system we considered and assumptions used in this work. Section 3 presents the numerical method for evaluating the system reliability and expected mission cost of a 1-out-of-N: G heterogeneous non-repairable standby system with a mix of hot and cold standby elements. Section 4 presents numerical examples and results for illustrating the proposed numerical method. Sections 5 and 6 present the formulation and examples for the considered optimization problem. Lastly, Section 7 gives conclusion as well as directions for future work.The system consists of N elements of which H elements are in the hot standby (HS) mode and N−H elements are in the cold standby (CS) mode. One working element can successfully accomplish the system mission, i.e. the system is of 1-out-of-N: G type. All the HS elements are initialized at the beginning of the mission. When a failed element is replaced with an HS element the replacement cost is much lower than in the case when it is replaced by a CS element. The cost of keeping any element in the HS mode is greater than the cost of keeping this element in the CS mode. The CS elements are initialized in a predetermined order. The first CS element is initialized when all the H HS elements have failed. The next CS element is initiated immediately after the failure of the previous CS element. The overall mission fails if all elements fail before the mission time.The following assumptions are made:(1)Time-to-failure distributions of elements under the operation mode are statistically independent.Mission time is fixed.Compared to the mission time the restoration times are negligible.The CS elements do not fail before their initiation.The cost (per time unit) of keeping any element in the HS mode equals the operational cost, and both are time-invariant. This is a common assumption used in the system optimization problem (Chia & Smith, 2004, 1996).The element failure rate in the HS mode is the same as the failure rate while in active operation because a hot standby element is fully exposed to the operational stress like the working active element (Amari, Pham, & Misra, 2012; Coit & Smith, 1996; Dugan, Bavuso, & Boyd, 1992; Merle, Roussel, & Lesage, 2011). Note that in this work we do not consider the warm-standby redundancy, in which the standby element is subjected to lower failure rate than in the active mode (Levitin, Xing, & Dai, 2013a; Papageorgiou & Kokolakis, 2010; Ruiz-Castro & Fernández-Villodre, 2012).The fault detection and switching mechanism of the system is perfect.The number and type of the elements are fixed. Only mission operation cost can change depending on elements modes and initiation sequence. Therefore, the design cost is not considered.The system and its elements are not repairable during the mission.We divide the mission time τ into m equal intervals with duration Δ=τ/m. Having the time-to-failure distribution of element j in the form of its cdf Fj(t) one can obtain the probability pj(i) that element j fails in the i-th time interval (time between Δi and Δ(i+1)) as Fj(Δ(i+1))−Fj(Δi) (Rausand & Høyland, 2003). For example, for the exponentially distributed failure time with failure rate λjand cdf Fj(t)=1−exp(−λjt):(1)pj(i)=[1-exp(-λjΔ)]exp(-λjΔi);for the Weibull distribution with scale ηjand shape βjparameters, and cdf Fj(t)=1−exp(−(t/ηj)βj) (Weibull, 1951):(2)pj(i)=exp{-[Δi/ηj]βj}-exp{-[Δ(i+1)/ηj]βj}.Instead of considering the random continuous time-to-failure of element j we consider the random discrete time-to-failure Tjof this element assuming that the pmf of Tjis presented by the vectorpj=(pj(0),…, pj(m)), where pj(i)=Pr{Tj=Δi}) for 0⩽i⩽m approximates the pdf of the element’s continuous time-to-failure.As no element should work longer than the mission time τ, the probability that the element does not fail during the mission pj(m)=Pr{Tj⩾τ=Δm} is determined aspj(m)=1-∑i=0m-1pj(i).We assume that for any given sequence of elements s(1), s(2), …, s(N), the first H elements are in the HS mode, i.e., elements s(1), s(2), …, s(H) are initiated when the mission begins (at time t=0); the next N−H elements s(H+1), s(H+2), …, s(N) are in the CS mode, i.e., for j>Hs(j) is the index of element initiated after j-1 failures in the system. Let Xjbe a random cumulative working time of elements s(1), s(2), …, s(j), i.e. the j-th failure in the system happens at time Xjfrom the beginning of the mission. The pmf of Xjcan be defined by a vectorQj=(Qj(0),…, Qj(m)), where Qj(i)=Pr{Xj=Δi}). It can be seen that for the element s(1) initiated at time 0, X1=Ts(1) and Q1(i)=ps(1)(i) for 0⩽i⩽m.All the HS elements start working at time t=0. Therefore for HS elements Xj=max(Xj−1,Ts(j)). Thus, one can obtain the probability Qj(i)=Pr{Xj=Δi} as(3)Qj(i)=∑k=0iPr{Xj=1=Δk}Pr{Ts(j)=Δi}+∑k=0i-1Pr{Xj=1=Δi}Pr{Ts(j)=Δk}=∑k=0iQj-1(k)ps(j)(i)+∑k=0i-1Qj-1(i)ps(j)(k).Any CS element starts working after the failure of all of the previously initiated elements. Therefore for CS elements Xj=Xj−1+Ts(j). Thus, one can obtain the probability Qj(i)=Pr{Xj=Δi} as(4)Qj(i)=∑k=0iPr{Xj-1=Δk}Pr{Ts(j)=Δ(i-k)}=∑k=0iQj-1(z)ps(j)(i-k),fori<mand(5)Qj(m)=∑k=0m-1Pr{Xj-1=Δk}∑n=m-kmPr{Ts(j)=Δn}=∑k-0m-1Qj-1(k)∑n=m-kmps(j)(n),because any element that would fail after time τ=Δm is switched off at this time.Note that k=m in the equation above corresponds to the mission success after initializing j−1 elements when the rest of elements are not initialized. Therefore k=m is excluded from the summation.HavingQj−1 andpjone can obtain vectorQjusing the following procedure:1.Assign Qj(k)=0 for k=0,…, m;For k=0,…, m−1:2.1For i=0,…, m:2.1.1x=f(k,i);Qj(x)=Qj(x)+Qj−1(k)ps(j)(i).where f(k,i)=max(k,i) for HS elements and f(k,i)=min(m,k+i) for CS elements.Let rjbe the probability that mission succeeds after initiation of j elements, i.e.,rj=Pr{Xj-1<τandXj=τ}.The entire mission reliability can be obtained as a sum of probabilities of mutually exclusive events (X1⩾τ), (X1<τ)∩(X2⩾τ),…, (XN−1<τ)∩(XN⩾τ) i.e.R=∑j=1Nrj.Notice that in vectorQjobtained in the procedure above Qj(m)=Pr{Xj=m} equals rj. Indeed, Qj(m) is obtained as the sum of probabilities of combinations of realizations of Xj−1<m and Ts(j) producing Xj=Δm=τ. Thus, the mission reliability can be obtained as(6)R=∑j=1NQj(m).The total cost of using HS element s(j) failed or switched off at time t is(7)θs(j)(t)=vs(j)+ws(j)t,where vs(j) represents the startup cost of HS element s(j), ws(j) represents the cost (per time unit) of keeping element s(j) in the HS (or operation) mode.The total cost of using CS element s(j) initiated at time t0 and failed or switched off at time t is(8)Θs(j)(t0,t)=Vs(j)+Ws(j)t0+ws(j)(t-t0)whent0<τ(9)andΘs(j)(τ,τ)=Ws(j)τwhent0=τas in this case the standby element is not initialized. In (8), Vs(j) represents the startup (or restoration) cost of CS element s(j), Ws(j) represents the cost (per time unit) of keeping the element in the CS mode.Having the probabilities Qj−1(i) and ps(j)(i) for i0, i=1,…, m one can obtain the expected cost of using HS element s(j) as(10)E(θs(j))=∑i=0mps(j)(i)θs(j)(Δi)=vs(j)+Δws(j)∑i=1mi·ps(j)(i).And the expected cost of using CS element s(j) can be obtained as(11)E(Θs(j))=∑i0=0m∑i=i0mQj-1(i0)·ps(j)(i-i0)·Θs(j)(Δi0,Δi)=∑i0=0m-1Qj-1(i0)Vs(j)+Δ·i0·Ws(j)+∑i=i0+1mps(j)(i-i0)·ws(j)·Δ·(i-i0)+Qj-1(m)·Δ·m·Ws(j)=Vs(j)(1-Qj-1(m))+Δ·Ws(j)∑i0=0mi0Qj-1(i0)+Δ·ws(j)∑i0=0m-1Qj-1(i0)∑i=i0+1m(i-i0)ps(j)(i-i0),where Q0(0)=1 and Q0(i)=0 for i>0 by definition.For the sequence of elements s(1), …, s(N) in which the first H elements are in the HS mode (initiated at time t=0) and the rest of N-H elements are in the CS mode (initialized one by one when all the previous elements fail), the expected mission cost is(12)C=∑j=1HE(θs(j))+∑j=H+1N(Θs(j)).Notice that Qj(i) and, therefore θs(j) and Θs(j) for i=1,…, N are obtained iteratively. Thus the algorithm for calculating C and R is also iterative.Based on the considerations presented in the previous sections the algorithm for evaluating the mission reliability and its expected cost for element sequence s(1), …, s(N) with the first H elements being HS elements and the rest of N–H elements being CS elements is as follows1.Assign C=R=0, Q0(1)=1 and Q0(i)=0 for 2, …, m;For j=1,…, H:2.1Assign Qj(k)=0 for k=1,…, m;C=C+vs(j);For i=0,…, m: C=C+Δ·i·ws(j)ps(j)(i);For z=0,…, m−1:2.4.1For i=0,…, m:2.4.1.1k=max(z,i);Qj(k)=Qj(k)+Qj−1(z)·ps(j)(i);R=R+Qj(m);For j=H+1,…, N3.1Assign Qj(k)=0 for k=0,…, m;C=C+Vs(j)(1−Qj−1(m))+Δ·m·Ws(j)Qj−1(m);For i0=0,…, m−1:3.3.1C=C+Δ·i0·Ws(j)Qj−1(i0);For i=0,…, m:3.3.2.1k=i0+i;if (k>m)k=m;C=C+Δ·(k−i0)·ws(j)·Qj−1(i0)·ps(j)(i);Qj(k)=Qj(k)+Qj−1(i0)·ps(j)(i);R=R+Qj(m).It can be easily seen that the computational complexity of the algorithm above is O(Nm(m+1)).Assume that the system consists of 3 elements. The mission time is divided into 3 intervals. Thus, the time-to-failure pmf of the elements take the form p1(0), p1(1), p1(2), p1(3); p2(0), p2(1), p2(2), p2(3) and p3(0),p3(1), p3(2), p3(3). Elements 1 and 2 are HS, element 3 is CS.According to the algorithmFor j=1:C=v1+1·Δw1p1(1)+2Δw1p1(2)+3Δw1p1(3)=v1+Δw1[p1(1)+2p1(2)+3p1(3)],Q1(0)=p1(0),Q1(1)=p1(1),Q1(2)=p1(2),Q1(3)=p1(3),R=Q1(3)=p1(3);For j=2:The value ofv2+Δw2(1p2(1)+2p2(2)+3p2(3))is added to C;Q2(0)=Q1(0)p2(0)=p1(0)p2(0),Q2(1)=Q1(0)p2(1)+Q1(1)p2(0)+Q1(1)p2(1)=p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1);Q2(2)=Q1(0)p2(2)+Q1(1)p2(2)+Q1(2)p2(0)+Q1(2)p2(1)=(p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1));Q2(3)=Q1(0)p2(3)+Q1(1)p2(3)+Q1(2)p2(3)=(1-p1(3))p2(3);The value ofQ2(3)=(1-p1(3))p2(3);is added to R.For j=3:The value ofV3(1-Q2(3))+3ΔW3Q2(3)+2ΔW3Q2(2)+1·ΔW3Q2(1)+Δw3[1·p3(1)(Q2(0)+Q2(1)+Q2(2))+1·Q2(2)(p3(2)+p3(3))+2Q2(1)(p3(2)+p3(3))+2Q2(0)p3(2)+3Q2(0)p3(3)]=V3(1-(1-p1(3))p2(3))+ΔW3{3(1-p1(3))p2(3)+2((p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1)))+(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))]+Δw3[p3(1)(1-(1-p1(3))p2(3))+(p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1))(p3(2)+p3(3))+2(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))(p3(2)+p3(3))+2p1(0)p2(0)p3(2)+3p1(0)p2(0)p3(3)]is added to C;Q3(0)=Q2(0)p3(0);Q3(2)=Q2(0)p3(2)+Q2(1)p3(1)+Q2(2)p3(0);Q3(3)=Q2(0)p3(3)+Q2(1)p3(2)+Q2(1)p3(3)+Q2(2)p3(1)+Q2(2)p3(2)+Q2(2)p3(3)=p1(0)p2(0)p3(3)+(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))(p3(2)+p3(3))+((p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1)))(1-p3(0));The value ofQ3(3)=p1(0)p2(0)p3(3)+(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))(p3(2)+p3(3))+((p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1)))(1-p3(0))is added to R.Finally we get:C=v1+v2+V3[1-(1-p1(3))p2(3)]+Δw1[p1(1)+2p1(2)+3p1(3)]+Δw2[p2(1)+2p2(2)+3p2(3)]+ΔW3{3(1-p1(3))p2(3)+2((p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1)))+(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))]+Δw3[p3(1)(1-(1-p1(3))p2(3))+(p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1))(p3(2)+p3(3))+2(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))(p3(2)+p3(3))+2p1(0)p2(0)p3(2)+3p1(0)p2(0)p3(3)];R=p1(3)+(1-p1(3))p2(3)+p1(0)p2(0)p3(3)+(p1(0)p2(1)+p1(1)p2(0)+p1(1)p2(1))(p3(2)+p3(3))+((p1(0)+p1(1))p2(2)+p1(2)(p2(0)+p2(1)))(1-p3(0)).Consider a 1-out-of-10 non-repairable standby system consisting of elements characterized by Weibull time-to-failure distributions with scale (ηj) and shape (βj) parameters presented in Table 1. Note that there are many different time-to-failure distributions that can be used to model element reliabilities (Leemis, 2009; Rausand & Høyland, 2003), and the methodology proposed in this work has no limitation on the distribution types. As an illustration example, we use the Weibull distribution which has a wide range of applications in reliability analysis due to its flexibility for modeling different types of failure rate behaviors (Modarres, Kaminskiy, & Krivtsov, 2010; Weibull, 1951). The operation cost (per time unit) and startup cost for HS and CS modes are also presented in this table. The mission time is τ=400. The obtained system reliability and expected mission cost for first five elements working in HS mode and the rest of the elements initiated from the CS mode in the sequence 6, 7, 8, 9, 10 are R=0.9522 and C=22572.6, respectively.To check the influence of the number of considered intervals on the accuracy of the obtained results the values of R and C are obtained for different m ranging from 100 to 2000. Fig. 1presents the values of R and C as functions of m. For m=100 the algorithm gives 0.63% underestimate of R and 0.42% underestimate of C. When m=1000 these errors lower to 0.03% and 0.02% respectively. Fig. 2presents the running time of the mission cost and reliability evaluation algorithm on Pentium 2GHz PC as a function of m.The optimal standby element distributing and sequencing problem (SE-DSP) for the mixed hot/cold standby system is formulated as follows. Find the initiation sequence s(1), s(2), …, s(N) of the elements and value of H (representing number of the HS elements) that minimize the expected mission cost subject to providing a desired level R∗ of the system reliability:(13)minCs.t.R⩾R∗.Finding the optimal element distribution and sequencing is a complicated combinatorial optimization problem having N·N! possible solutions. An exhaustive examination of all these solutions is not realistic for a large number of elements. As in most combinatorial optimization problems, the quality of a given solution is the only information available during the search for the optimal solution. Therefore, a heuristic search algorithm is needed which does not require derivative information to determine the next direction of the search. To solve the above formulated problem we use a Genetic Algorithm (GA) heuristic, in particular, the steady state GA suggested by Whitley (1989). Such advantages of the GA as solution representation flexibility, possibility of parallel computation, fast convergence to near optimal solutions, etc. make it the most widely used tool in reliability optimization (Goldberg, 1989; Levitin, 2006, 2007, 2008).The GAs operate with “chromosomal” representation of solutions, which requires the solution to be coded as a finite length string. The structure of the steady state GA used in this work is as follows (Whitley, 1989).1.Generate an initial population with Nsrandomly constructed solutions and evaluate their fitness values.Select two solutions randomly and use a crossover procedure to produce a new solution (offspring). The crossover procedure provides inheritance of some basic properties of the parent strings in the offspring.Apply mutation operation to the offspring, which results in slight changes in the offspring structure and maintains the solution diversity.Decode the offspring to obtain the objective function (fitness) values, which are a measure of quality to be used for comparing different solutions.Apply a selection procedure that compares the new offspring with the worst solution in the current population, selects the better of the two and discards the worse one. If equivalent solutions appear after the selection process, redundancies are eliminated leading to the decreased population size.Generate new random solutions to replenish the population. This step happens after steps 2–5 have been repeated Nreptimes or when the population contains only a single solution or solutions with equal quality. Then return to step 2 to run a new genetic cycle.Terminate the GA after Ncgenetic cycles.The final population contains the best solution achieved. It also contains different near-optimal solutions, which may be of interest in the decision-making process.To apply GA to a specific problem, one must define a solution representation and decoding procedure, as well as specific crossover and mutation procedures. GA operates with string representation of solutions. In our problem, each solution can be represented by a string containing N+1 different integer numbers, each ranged from 1 to N+1. To provide solution feasibility each number should appear in the string only once (representing permutations of numbers from 1 to N+1). The order in which the numbers from 1 to N appear determines the element initiation order s(j). The number N+1 separates HS elements from CS elements. For example in a system with 5 elements the string 2, 3, 5, 6, 1, 4 represents a solution in which elements 2, 3 and 5 work in the HS mode, elements 1 and 4 work in the CS mode and are initiated in a sequence they appear in the string. Observe that when the value of N+1 appears in the first position all the elements are CS, however the first element in the sequence (with the number residing in string position 2) is initialized at time 0, which means that this element essentially works in the HS mode. Thus, for example, strings 6, 1, 3, 2, 5, 4 and 1, 6, 3, 2, 5, 4 represent identical solutions. To obtain the sequence of elements initiation and the number of HS elements from any string in which number N+1 resides in position k one assigns H=k−1 and removes number N+1 from the sequence. Table 2presents the examples of string decoding for N=5. The HS elements are marked with bold font.For any string representing the element initiation sequence and number of HS elements, the algorithm presented in Section 3.5 evaluates the system reliability R and expected mission cost C and calculates the solution fitness value defined as Ω=M−C−δ min{0,R∗−R), where M is a large constant and δ is a penalty coefficient. The maximal value of Ω corresponds to the optimal solution of problem (13). When δ=0 the problem reduces to the cost minimization, when δ is large and R∗=1 the problem reduces to the reliability maximization.Crossover and mutation procedures should preserve feasibility of newly obtained solutions given that parent solutions are feasible. The crossover procedure used in this work first copies all the string components from the first parent to the same positions of the offspring. Then all the offspring components belonging to the fragment, defined as a set of adjacent positions between two randomly defined sites, are reallocated within this fragment in the order they appear in the second parent. The following is an example of the crossover procedure in which the fragment is marked in bold.First parent: 1 2 3 4 5 6 7 8 9 10.Second parent: 10 2 9 8 6 5 1 3 4 7.Offspring: 1 2 6 5 3 4 7 8 9 10.The mutation procedure used in our GA just swaps components initially located in two randomly chosen positions of the string. This procedure also preserves solution feasibility.Consider a system consisting of first five elements from Table 1. The minimal mission cost and the maximal mission reliability sequences obtained for different mission times by the genetic algorithm are presented in Table 3. The solutions of min C s.t. R⩾R∗ problem are also presented this table.When the mission time is small, the probability that all the elements are initiated during the mission is relatively small and it is worth keeping some elements in the CS mode saving their operation cost. When the mission time increases the probability that all the elements are initiated also increases which causes an increase of the expected startup cost. This expected startup cost can be reduced by keeping fewer elements in the CS mode and more elements in the HS mode. The reduction of the expected startup cost becomes greater than the growth of the operation cost of the standby elements when the startup events become more likely. Thus the min C solution for τ=100 keeps two elements in the CS mode, whereas it keeps only one element in the CS mode for τ=120 and no elements in the CS mode for τ⩾140.Notice that the min C solutions for τ⩾140 correspond to the situation when the expected startup costs (usually associated with operation interruptions and delays) are so high that keeping any element in CS is not beneficial and all the elements should work in the HS mode during the entire mission.Keeping all but one element in CS always provides the greatest possible system reliability because in this case the standby elements have zero failure rates. In this case the sequence of element initiation does not affect the system reliability as the system fails when the sum of random time-to-failure values of all the elements is less than the mission time. However the initiation sequence affects the expected mission cost. The presented max R solutions provide the minimal mission cost given all the standby elements are in the CS mode. It can be seen that the same initiation sequence corresponds to these solutions for all the considered values of τ.With the increase of the mission time min C s.t. R⩾0.95 solutions keep more elements in the CS mode to provide the desired mission reliability.In this example the 1-out-of-10 system with elements from Table 1 is considered. The solutions of min C s.t. R⩾R∗ problem are presented in Table 4for different values of R∗ and mission time is τ=500. It can be seen that as in the previous example the increase of the required mission reliability causes more elements to be distributed to the CS elements group. The obtained system reliability – expected cost tradeoff curve is presented in Fig. 3. Such curves are useful in making decisions about the best standby policy.The average running times of the GA for N=5 and N=10 when m=1000 are about 1 and 2 minutes respectively.In the heterogeneous 1-out-of-n: G standby systems, the standby modes of redundant elements and the order in which they are initiated heavily affect the system mission cost (associated with energy and material consumption, standby and operation maintenance, startup expenses, costs of restoration delays, etc.).In this paper we first formulated and solved the SE-DSP problem for 1-out-of-n: G heterogeneous non-repairable standby systems. The problem considers the distribution of standby elements between hot and cold standby modes and determines the initiation sequence of the cold standby elements with the objective to achieve the minimal mission operation cost while meeting a reliability constraint. The effect of the redundancy modes on elements’ time-to-failure distributions was taken into account. We showed that the suggested algorithm, which is based on a discrete approximation of time-to-failure distributions of the system elements, can provide fast results on the system reliability and expected mission cost. The computational efficiency of the suggested algorithm allows it to be used for solving the formulated optimization problem in combination with optimization tools. In particular, GA was used as such an optimization tool because it proved to be easily adaptable and very effective in solving reliability optimization problems. The given optimization examples showed that the combination of hot and cold standby elements allows one to reduce the expected mission cost providing the desired system reliability. The standby policy depends on reliability constraints and mission time. For example, greater reliability requirements cause more elements to remain in the cold standby mode, which leads to an increase of restoration delay but a decrease of operation cost. Therefore, the expected overall mission cost may grow or shrink depending on the input parameter values for a specific system. The choice on the distribution between hot and cold standby modes may not be obvious without detailed analysis using the suggested algorithm. The example of reliability–cost tradeoff curve was presented, which can serve as a useful tool for making practical decisions regarding the desirable standby policy.In the future research, the optimal SE-SDP problem will be solved for heterogeneous k-out-of-n: G standby systems based on the approach suggested in Levitin, Xing, and Dai (2013b).Assumption of time-invariant costs and time-to-failure distribution parameters in operation mode used in this paper is not relevant when a system works under varying conditions and loads, and the operational cost and failure behavior of system elements may change over the time. Such cases can be modeled using phased-mission systems (Levitin, Xing, & Amari, 2012), which will be another future work.We will also investigate the cold vs. warm standby tradeoff, where warm standby mode corresponds to situations when the standby elements are powered up and ready to operate, but remain unloaded and thus, have lower failure rates than the operating elements (Papageorgiou & Kokolakis, 2010; Ruiz-Castro & Fernández-Villodre, 2012). The method suggested in Levitin et al. (2013a) can be adapted to solve the problem.In addition, we have assumed perfect switching in the case of failures in this work. In the future, we will consider imperfect switching mechanisms in the reliability and mission cost analysis as well as in the optimization solution for standby systems.

@&#CONCLUSIONS@&#
