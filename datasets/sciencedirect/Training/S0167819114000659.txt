@&#MAIN-TITLE@&#
Scalable rank-mapping algorithm for an icosahedral grid system on the massive parallel computer with a 3-D torus network

@&#HIGHLIGHTS@&#
Rank-mapping algorithm for an icosahedral grid system is developed.The new algorithm is applicable to the computer with a 3-D torus network topology.Using the new algorithm, number of hops does not increase with the number of nodes.The new algorithm achieves almost perfect weak scaling on the K computer.The new algorithm seems to reduce the communication congestion on the K computer.

@&#KEYPHRASES@&#
MPI,HPC,Torus network topology,Icosahedral grid system,Rank-mapping algorithm,Performance,

@&#ABSTRACT@&#
In this paper, we develop a rank-mapping algorithm for an icosahedral grid system on a massive parallel computer with the 3-D torus network topology, specifically on the K computer. Our aim is to improve the weak scaling performance of the point-to-point communications for exchanging grid-point values between adjacent grid regions on a sphere. We formulate a new rank-mapping algorithm to reduce the maximum number of hops for the point-to-point communications. We evaluate both the new algorithm and the standard ones on the K computer, using the communication kernel of the Nonhydrostatic Icosahedral Atmospheric Model (NICAM), a global atmospheric model with an icosahedral grid system. We confirm that, unlike the standard algorithms, the new one achieves almost perfect performance in the weak scaling on the K computer, even for 10,240 nodes. Results of additional experiments imply that the high scalability of the new rank-mapping algorithm on the K computer is achieved by reducing network congestion in the links between adjacent nodes.

@&#INTRODUCTION@&#
A global atmospheric model is a core part of a numerical model for the simulation of weather and climate. In general, such a weather and climate model performs better as the spatial and temporal resolution are increased (e.g. [1]) and as more sophisticated physics components are introduced. Thus, a global atmospheric model should be carefully designed and tuned so that the weather and climate model uses computer resources as efficiently as possible.An icosahedral grid system [2–4] is a promising horizontal grid system for a global atmospheric model [5]. Historically, global atmospheric models often adopt the spectral method (e.g. [4]). However, the spectral method is not highly scalable for an up-to-date supercomputer with more than tens of thousands of computing nodes, since it needs global communication at every time step. In contrast, the finite volume method (FVM) just needs point-to-point communications with the surrounding control volumes, and such localized communications are more easily scaled. Because of its uniformity on a sphere, an icosahedral grid system is often employed as a horizontal grid system for the FVM [5–9]. In this study, the target application is the Nonhydrostatic Icosahedral Atmospheric Model (NICAM) [6,7], a global atmospheric model with an icosahedral grid system. NICAM uses the Message Passing Interface (MPI) for the point-to-point communications.A 3-D or higher-dimensional torus is a widely used node network topology in distributed-memory computer systems. Of the top ten supercomputers in the latest TOP500 list [10], Sequoia, Mira, JUQUEEN, Vulcan (these are Blue Gene/Q), the K computer (Tofu interconnect), and Titan (the Cray Gemini network) adopt a 3-D or higher-dimensional torus network topology. In this study, the target machine is the K computer [11,12], which adopts a virtual 3-D torus network topology called Tofu.In this study, we develop a rank-mapping algorithm (i.e., an algorithm that creates a one-to-one mapping between the MPI ranks and the computing nodes) for an icosahedral grid system on a supercomputer that uses the 3-D torus network topology. Weak scaling is defined to be a dependency of the elapsed time on the number of nodes, under a fixed amount of work per rank. The aim of this study is to improve the weak scaling performance of the point-to-point communications for exchanging grid-point values between adjacent grid regions on a sphere. Fig. 1shows an example of the NICAM communication graph, representing the MPI ranks and the communication networks between them. Ideally, MPI ranks should be allocated to the computing nodes so that all the adjacent MPI ranks in the communication network are adjacent in the node network; if so, each point-to-point communication has the exclusive use of a link between the computing nodes. However, finding such a perfect rank-mapping algorithm seems to be impossible for this case, since the NICAM communication graph has cycles consisting of three vertices. A 3-D torus graph does not have such a three-vertex cycle, except for the special case in which one length of the 3-D torus is exactly three. As we will explain in Section 4, as the number of computing nodes increases, simple rank-mapping algorithms cause an increase in the number of hops for the point-to-point communications. This generally results in the network congestion in the links between the nodes.In Section 2, we discuss related works. The specifications of NICAM and the K computer are presented and the rank-mapping problem is defined in Section 3. A new rank-mapping algorithm and the standard ones are presented in Section 4. These algorithms are evaluated using the NICAM communication kernel (Section 5) on the K computer, and the results are presented in Section 6. Our conclusions are presented in Section 7.

@&#CONCLUSIONS@&#
