@&#MAIN-TITLE@&#
An intelligent stock trading system using comprehensive features

@&#HIGHLIGHTS@&#
An intelligent stock trading system using comprehensive features (ISTSCF) is presented.ISTSCF consists of stock information extraction, prediction model learning and stock trading decision.Comprehensive features (CF) include sentiment analysis (SA), technical analysis (TA) and trend-based segmentation method (TBSM).The results of employing the comprehensive features are significantly better than traditional methods.

@&#KEYPHRASES@&#
Sentiment analysis,Technical analysis,Comprehensive features,Intelligent stock trading,

@&#ABSTRACT@&#
The aim of this study is to predict automatic trading decisions in stock markets. Comprehensive features (CF) for predicting future trend are very difficult to generate in a complex environment, especially in stock markets. According to related work, the relevant stock information can help investors formulate objects that may result in better profits. With this in mind, we present a framework of an intelligent stock trading system using comprehensive features (ISTSCF) to predict future stock trading decisions. The ISTSCF consists of stock information extraction, prediction model learning and stock trading decision. We apply three different methods to generate comprehensive features, including sentiment analysis (SA) that provides sensitive market events from stock news articles for sentiment indices (SI), technical analysis (TA) that yields effective trading rules based on trading information on the stock exchange for technical indices (TI), as well as the trend-based segmentation method (TBSM) that raises trading decisions from stock price for trading signals (TS). Experiments on the Taiwan stock market show that the results of employing comprehensive features are significantly better than traditional methods using numeric features alone (without textual sentiment features).

@&#INTRODUCTION@&#
Over the past few decades, financial data forecasting such as forecasting future stock prices, trading points and investment portfolios is a very popular research topic. In essence, researchers attempt to build analytical models that can transform certain financial knowledge for market trend prediction and then help investors achieve their investment objectives. The financial market is a very complex environment and is sensitive to various external factors such as financial news, financial reports, government policies, economic environments, interest rates, inflation rates, and stock transaction amount [1]. With equities being the form of investment product that is characterized by its volatility, better information will help investors in determining their investment risks. The abilities to extract and apply the information to powerful prediction models are especially important in such high-risk environments.The first step for stock market forecast relies in effective information extraction. Many studies in this area used the technical analysis (TA) to generate trading rules for future stock trend detection. TA is a security analysis discipline used for forecasting the direction of prices through the study of past market data, primarily price and volume [2,3]. Stock trend prediction using technical indices such as moving averages (MA) and relative strength indices (RSI) has been extensively investigated [4,5]. Additionally, sentiment analysis (SA) can also be applied to make trading decisions by identifying significant information affecting investors’ decisions. Generally, SA uses text mining (TM) techniques to find the useful information from news articles [7–9]. Textual data such as stock market news articles may affect investors’ decisions, and thus can be considered as another important factor affecting share prices or stock trends [9–11]. For example, positive news may encourage investors to buy shares, thus forcing the share price up, while negative news would have the opposite effect. However, the sheer volume of such news articles makes it difficult for investors to find such useful information from daily news sources. Performing SA on stock market news articles to identify positive and negative information has thus emerged as a promising technique for stock trend prediction. This approach can also help investors identify sentimental tendencies in financial news and facilitate investment decision making [8,12]. Several resources exist for obtaining emotion words and their intensity, including WordNet-Affect [13], SENTIWORDNET [10,14], SentiFul [15], EmotiNet [16], and several Chinese sentiment lexicons [17–20]. These lexicons have been used for many applications such as hotspot detection and forecasting [21] and identifying depressive symptoms and negative life events from psychiatric texts [22,23]. However, lexicon-based approaches usually have limited word coverage, and thus may fail to recognize emotion words not already defined in the lexicon. Therefore, recent studies have investigated the use of corpus-based approaches [24–26] to automatically discover new emotion words with their corresponding intensity from large corpora based on a small set of seed words derived from existing emotion lexicons. Accordingly, this study focuses on mining useful features to classify sentiment in stock market news.Stock trend forecast provides investors useful information for their investments. There are two major components for stock trend prediction: the future stock price forecast [27,28] and trading point identification [6,29,30]. Support vector machines (SVMs) and artificial neural networks (ANN) outperformed other prediction models of machine learning (ML) or soft computing (SC) tools used in nonlinear time series analyses [31–33]. The support vector regression (SVR) forecasting model is applied to accomplish the forecasting task in this research. Presently, the SVR which was evolved from SVM based on the statistical learning theory is a powerful forecasting and machine learning approach for numerical prediction [33,34]. In addition, SVR has a high toleration error rate and high accuracy for learning solutions to complex problems [35]. Although SVR can be applied to time series data, the input vector is a key successful factor. Therefore, we use a predication model as machine learning approach to predict investment timing.This research mainly focuses on developing an efficient trading model to build an intelligent stock trading system. We consider both numeric (stock exchange data) and textual (nominal stock messages) features to improve prediction accuracy of traditional methods using numeric feature alone. We also apply technical analysis to generate trading indices (TI) based on historical stock exchange, while sentiment analysis is used to identify the future trends and generate sentiment indices (SI). Combining the two information extraction techniques can improve the model's predictability [9,36]. Additionally, we apply the trend-based trend segmentation method (TBSM) to generate trading signals (TS) based on historical stock prices. The major contribution of this research is the combination of different feature extraction methods to create a useful and stable model for automatic stock trading for general users. The proposed model can be directly used to actual stock environments. By integrating immediate access to stock-related information into the proposed framework allows for the generation of automatic buy, sell and hold decisions. Despite the volatile nature of the stock markets, researchers still can find certain correlations between these factors and stock prices. The investor's primary goal is to make profits. In order to help investors achieve their financial objectives, the proposed intelligent stock trading system uses comprehensive features (CF) based on TI, SI and TS to automatic generate trading types and stable returns.The rest of this paper is organized as follows. Section “System framework” describes the overall framework of the proposed intelligent stock trading system which incorporates comprehensive features for trading predication. Section “Comprehensive features generation for intelligent stock trading system” explains the comprehensive features for building predication models. Section “Application and experimental results” summarizes experimental results. Discussions and conclusions are finally drawn in Section “Discussion and conclusions”.The section introduces the proposed intelligent stock trading system for investors to obtain excess returns. Trading information and stock messages can not only provide useful stock information but also generate comprehensive features for building forecast models. Therefore, we propose an intelligent stock trading system using comprehensive features called the “ISTSCF”. As depicted in Fig. 1, the ISTSCF consists of three major components: the stock information extraction, forecasting model learning and stock trading decision prediction.There are two resources can be used for stock information acquisition: stock news articles and trading information. Stock news articles can provide signals regarding to the future trend. For example, if a company developed a product of concern, its stock price has the potential to go up in future few days. Trading information such as stock prices and volumes can provide numeric variation. Information from these two resources is represented by two types of indices: sentiment indices and technical indices. In addition, the trading information can be used to identify better trading signals in a historical price period. Therefore, employing information extraction techniques can generate comprehensive features to build a more precise prediction model. The details of the information extraction process are described in Section “Comprehensive features generation for intelligent stock trading system”.In this section, we apply a machine learning method, SVR, for predicting trading signals. The objective is to build an effective stock trading system using comprehensive features such as technical indices and sentimental indices. Let X={SI, TI} be the input vectors which combine sentimental indices SI={x1, x2, …, xm} and technical indices TI={xm+1, xm+2, …, xn}, and each vector has m dimension. For example, there are m features extracted by sentiment analysis where x1 to xmdenote the intensity of sentiment indices of news in 1 day by m views. There are n–m features extracted by technical analysis where xm+1 to xm+ndenote the intensity of technical indices of 1 day by 22 indices. Let Y={TS} be an output vector representing a trading signal. We then build a prediction model to learn knowledge rules between output (trading signals) and input variables (sentiment indices and technical indices). Let N be the number of days in the training data. The dimensionality of the matrix of the input data (X) is N by m+n and that of output data (Y) is N by 1, which respectively correspond to vector X and Y by each day. In this paper, we use the SVR to learn trading rules using comprehensive features.In general, there are two trading types for daily forecasting and trading decision: buy and sell. If the forecasted trading signals in testing period exceeds the threshold of buy, then the buy decision will be performed as it would be very close to the turning point with lowest price in the period. Conversely, if the forecasted trading signals in testing period satisfies (less than) the threshold of sell, then the sell decision will be performed. If the state does not satisfy both thresholds, then no trading (hold) will be performed. These satisfied points recommend transactions to take place in the stock market. Before determining the trading timing and types, we need to calculate the buy and the sell threshold values for the two trading types from historic trading signals, as shown below.(1)Buy_threshold=μ+σ(2)Sell_threshold=1−μ+σ(3)μ=1N∑i=1Nxi(4)σ=1N∑i=1N(xi−μ)where xidenotes a trading signal, N denotes the total number of trading signals in the training data, μ denotes the average value of trading signals in the training data, σ denotes the standard deviation of trading signals in the training data, and Buy_threshold and Sell_threshold denote the buying threshold and selling threshold, respectively. A trading point for buy decision is recommended if the value of forecasted trading signals from a predict model in testing data exceeds Buy_threshold. Otherwise, a trading point for sell decision is recommended. The detail principles for trading decision making include:•If the forecasted trading signal is going up and intersects with buy trading threshold Buy_threshold, then a buy decision will be recommended.If the forecasted trading signals is going down and intersects with sell trading threshold Sell_threshold, then a sell decision will be recommended.A hold decision (no trading) is recommended when the forecasted trading signal does not intersect with either the two thresholds.If the trading decisions in a continuous sequence are the same type then first appeared is trading point.For example, Fig. 2shows trading point decisions for a stock in the testing period. The black square points indicate a timing to buy and black triangle points indicate a timing to sell. If a blue line intersects with a red line, then it is a timing to buy. Conversely, if a blue line intersects a green line, then this is a timing to sell. The trading points and trading types can then be determined using the proposed intelligent stock trading system.This section provides a detailed description of the sentiment indices generation, technical indices generation, and trading signal generation.The process of extracting stock information from stock news article presents a major challenge. In this research, we consider seed words as a set of keywords to flagging highly correlated emotional words. The contextual entropy model is used to capture qualitative stock information. The flowchart of the sentiment analysis is described in Fig. 3.In this research, we propose a multiple affective views (i.e., investor, politics, economy and technology are different impact) for capturing useful sentiment information from stock news articles.Given a corpus of annotated stock market news articles, the emotion seed words are selected by experts. Each distinct word in the labeled corpus is considered a candidate for expansion. To ensure the quality of the seed words, human experts manually select either positive or negative emotion words as the seed words. The intensity levels of the seed words are set to 1 and −1, respectively. Through this, we construct several set of seed word expert definition. Let the Seed be a set of seed words that are related to up and down trend, and each view has two seed word sets that are positive and negative. The definition of Seed is shown as follows:(5)Seedclass={word1,word2,…,wordz}where class denotes categories such as positive or negative, word denotes the seed word, and z denotes the number of seed words in a class.In the seed word set definition that there are several views to use. We first select high relationship seed words for positive and negative from stock messages. We then use the selected seed words to intersect other news to form other seed word set on other views.Instead of using co-occurrence strength alone, the CE model considers both the co-occurrence strength and the contextual distribution between the candidate words and seed words Seedclassto discover similar emotion words and their corresponding intensity from the unlabeled corpus. The CE model first uses a vector representation to represent the co-occurrence strength between the seed words and candidate words as well as their context words. The similarity between seed words and candidate words can then be calculated by comparing their vector representation of contextual distributions using relative entropy. Finally, a set of similar words and their corresponding intensities are selected for expansion. Below we describe the procedures for vector representation, similarity measurement, and expansion in the CE model. On the other hand, to avoid some of the contrast semantics the in a paragraph, we use simple punctuation marks (like comma, full stop, question mark) to separate different sentences in the content.(1)Step1: Vector representationThe CE model uses a high-dimensional vector to record the strength of co-occurrence between a word and its context words. In addition, a word has either a left or a right context depending on the context words preceding or following it in the sentences. For instance, the left and right context of a word wkin a sentence W=d1 … dk−1wkdk+1…dnare {d1, …, dk−1} and {dk+1, …, dn}, respectively. Each seed word and candidate word can be represented as a pair of vectors of its left and right contexts.(6)wk=(vwkleft,vwkright)=(〈mwkd1left,mwkd2left,…,mwkdNleft〉,〈mwkd1right,mwkd2right,…,mwkdNright〉)wherevwkleftandvwkrightrespectively denote the left and right context vectors of wk;mwkdidenotes the weight of the ith dimension of a vector, representing the co-occurrence strength between wkand its context word di, and N denotes the dimensionality of a vector, i.e., the number of distinct words appearing in the context of wkin the unlabeled corpus. Fig. 4shows the conceptual representation context information.Similar to the Hyperspace Analog to Language model [37,38], the weightmwkdiis calculated by considering both the location and distance of words in sentences. That is, a word in a context that is closer to the target word is given a greater weight. The approach adopts an observation window of length ℓ over the corpus to calculate the weights. All words within the window are considered as co-occurring with each other. Thus, the weight between any two words of distance d within a window is calculated as ℓ−d+1. For example, given the sentence W=…d1d2d3wkd4d5d6…, and a window size ℓ=3, the weight between d4 and wkis 3−1+1=3, i.e.,mwkd4=3. Similarly,mwkd4=3,mwkd4=mwkds=2, andmwkd4=mwkds=1.Once the weights are calculated, we use a weighting scheme to re-weight the dimensions of a vector, which is defined as(7)mwkdi=mwkdi×logN(V)N(Vdi)where N(V) denotes the total number of vectors, and N(Vdi) denotes the number of vectors with dias the dimension. Based on the above re-weighting scheme, the dimension words that appear in more vectors will be de-emphasized as such words usually carry less information to discriminate themselves among the vectors, and those that appear in fewer vectors are emphasized as these words are usually more informative.To further transform the vector representation of words into probabilistic distributions to calculate their similarity, the weights are also transformed into probabilistic representations, defined as(8)mwkdi=P(di|wk)=mwkdi∑imwkdiwhereP(di|wk)denotes the probability that diappears in the context of wk.(2)Step 2: Similarity measureThe previous step describes how each seed word and candidate word can be converted into a probabilistic vector representation of their contextual distributions. The present step introduces the use of the Kullback–Leibler (KL) distance [39] to measure the difference between the probabilistic context distributions of a seed word and a candidate word. LetCi=(vcileft,vciright)andseedi=(vseedileft,vseediright)be the vector representation of a candidate and a seed word respectively. The KL distance between their left (or right) contextual distributions, i.e.,D(vci||vseedi), is defined as(9)D(vci||vseedi)=∑k=1NP(dk|ci)logP(dk|ci)P(dk|seedj)where P(dk|ci) and P(dk|seedj) denote the probabilistic weights of the kth dimension of the left (right) context vector of ciand seedjrespectively. N denotes the dimensionality of a vector. The following divergence measure was adopted in the case of a symmetric distance:(10)Div(vci,vseedj)=D(vci||vseedj)+D(vseedj||vci)With this, the distance between ciand seedjcan be calculated by adding the KL divergence of their left and right contextual distributions. That is,(11)Dist(ci,seedj)=Div(vcileft,vseedileft)+Div(vciright,vseediright)Therefore, the similarity between ciand seedjcan be defined as(12)CE(ci,seedj)=11+Dist(ci,seedj)where CE(ci, seedj) denotes a similarity score output by the contextual entropy model, representing the contextual similarity between ciand seedj. In addition, the above equation indicates that a smaller distance between two words indicates a greater similarity between them.(3)Step 3: Expansion procedureOnce the similarity between each candidate word and each seed word is calculated using the contextual entropy model, the next step is to determine the sentiment class of each candidate by calculating its similarity to the positive group of seed words (i.e., Pseed) and negative group of seed words (i.e., Nseed), respectively. From the similarity of the contextual entropy scores, we get(13)CE(ci,Pseed)=1|Pseed|∑seedj∈PseedCE(ci,seedj)(14)CE(ci,Nseed)=1|Nseed|∑seedj∈NseedCE(ci,seedj)where CE(ci, Pseed) and CE(ci, Nseed) denote the similarity between ciwith the positive and negative group of seed words respectively, each calculated by averaging the similarity scores between ciand all the other seed words in the respective positive or negative group. By comparing CE(ci, Pseed) with CE(ci, Nseed), we get(15)r=CE(ci,Pseed)CE(ci,Nseed)The sentiment class of a candidate word is determined to be positive if its similarity to the positive group is greater than that to the negative group (i.e., r>1), and its intensity is represented by CE(ci, Pseed). Otherwise, the sentiment class of the candidate word is negative, and its intensity is expressed as CE(ci, Nseed). The intensity is also normalized to [0–1] using a sigmoid function. That is,(16)Intensity(ci)=11+exp−rCE(ci,Pseed)+θif the sentiment class ofciis positive11+exp−rCE(ci,Nseed)+θif the sentiment class ofciis negativeOnce the sentiment class and intensity of each candidate word are determined, both positive and negative candidates are ranked in descending order of intensity. A threshold is then applied to the ranked list to select those with higher intensity to be the expanded words for sentiment classification. The optimal threshold value for expanded word selection is determined empirically. Once the seed words have been expanded, both the seed words and expanded words are unified as an emotion lexicon for sentiment classification. That is, Pos=Pseed∪Pexpandrepresents the unified sets of positive seed words and their expanded words, and Neg=Nseed∪Nexpandrepresents the unified sets of negative seed words and their expanded words. The resulting emotion lexicon is denoted as Lex=Pos∪Neg.The input vectors of sentiment indices are calculated intensity on each sentiment index of each view of each day. Therefore the number of views and the sentiment indices are the same. Let D be the document and T be the day:(17)SI(T)view=∑D∈Tl(D)whereSI(T)viewrepresents the intensity value of Day T for each view. l(D) denotes the sentiment intensity of news article D. According to the intensity of stock information, we determine the new degree of affectedness using sentiment analysis. In terms of calculating the sentiment intensity of the news articles, the intensity scheme is developed. The intensity scheme compares the sum of the intensity levels of positive and negative emotion words in the articles. The intensity considers their intensity levels, defined as(18)l(D)=∑wi∈D∑wj∈PosI(wi,wj)Intensity(wi)−∑wi∈D∑wj∈NegI(wi,wj)Intensity(wi)where Intensity(wi) denotes the intensity level of an emotion word in the lexicon and I(wi, wj) is an identity function used to identify whether or not two words are identical, defined as(19)I(wi,wj)=1ifwi=wj0ifwi≠wj.By matching the emotion lexicon against the news article D,∑wi∈D∑wj∈PosI(wi,wj)and∑wi∈D∑wj∈NegI(wi,wj)in Eq. (18) can be calculated as the number of positive and negative emotion words in D. l(D) is positive if the number of positive emotion words in D is greater than the number of negative ones.Investment managers calculate different indicators from available data and plot them as charts. Observations on price, direction and volume on the charts assist managers in making decisions on their investment portfolios according to references. Previous research has shown that technical indices were highly correlated with stock prices. There are 22 technical indices (TI) for building numerical information as input data from trading information for the prediction model. All technical indices can follow formulas generated by Achelis's [40] definition, as shown in Table 1.In addition, the feature selection process is an effective dimension reduction in many forecasting problems; there are many feature selection approaches that capture important variables. In this research we use stepwise regression analysis (SRA) to select high relation variables. Let X={x1, x2, …, xn} be a feature set as TI that includes 22 indices according to the last step. SRA will be further applied to the feature set X to determine the set of independent variables which is most closely affecting the dependent variable Y (i.e., stock price and trading signal). SRA is a step-by-step process that selects factors into regression models, in which case if a factor is statistically significant, then it is selected. The F value of SRA is defined as(20)Fj*=MSR(xj|xi)MSE(xj|xi)=SSR(xj|xi)SSE/(n−2)(xj|xi)i∈I(21)SSR=∑(Yˆ−Y¯)2(22)SSR=∑(Yˆ−Y¯)2where SSR denotes the regression sum of squares, SSE denotes the residual sum of squares, x denotes the value of technical indices, y denotes the value of stock prices, n denotes the total number of training examples,Yˆstands for the forecasting value of regression andY¯stands for the average stock price of training data. After the feature selection by SRA, we can provide a set of features to form an input vector for learning the prediction model. In addition, the range of input variables of the SVR model is from 0 to 1. Afterwards, the selected technical indices are normalized as follows:(23)Normal(xij)=xij−min(xi)max(xi)−min(xi)where Normal(xij) denotes the normalized value of the jth data point of the ith technical index, max(xi) and min(xi) respectively denote the maximum and minimum values of the ith technical index, xijdenotes the original value of the jth data point of the ith technical index, and n and m respectively denotes the total number of technical indices and data points. In addition, the testing data set needs to be normalized and the max(xi) and min(xi) calculations are based on the training data set because of the time series consideration.This step is to discover trading trends and transforming trends to trading signals for the prediction model. Wu and Chang [33] showed that the time series segmentation approach of TBSM can generate effective trading signals from the historical price data. The processes and concepts are shown in Fig. 5.The method of TBSM is a segmentation method capable of generating multiple trend segments based on three trends: up trend, hold trend and down trend. Let xtbe a sequence of stock prices. A turning point (TP) in xtis at time index t where a local extreme point (either minima or maxima) is obtained. A turning point is called a peak if it is a local maximum and a trough if it is a local minimum. Examples for peaks and troughs are shown in the following Fig. 6.A trader who is able to identify peaks and troughs in a stock sequence can gain huge profits. He would buy at the troughs and sell at the peaks. Thus successful forecasting of turning points is very important for an investor. However all turning points are not useful for investors as small swings in prices can lead to only minor profits which may be more than compensated by trading commission, bid/ask spreads, liquidity, etc. Thus this may lead to a loss for the investor. Thus predicting significant turning points is crucial to investors. The method employed for this purpose in the paper is described here.In this paper, we use the trend-based segmentation method (TBSM) to find turning points and also to determine different trends in stock price time series. Three different trends such as uptrend, downtrend, and hold trend are considered when making the segmentation. The procedure of TBSM is as following: (1) PLR is applied to locate the turning points from the time series including uptrend or downtrend using the distance threshold (d-t); (2) The points around each turning point are checked to determine whether the variations of the points are within the hold-vertical threshold (hv-t) and hold-day threshold (hd-t). When they are within the threshold, these points will have the same buy/sell trading in this period; (3) These points are set to be in the same trend.We define different thresholds for obtaining the turning points with large enough variations to improve the chances of gaining profits. There are different thresholds used for three thresholds as d-t, hv-t, hd-t. They are defined as follows:Definition 1Distance threshold – The segmentation point x0 is the point with the maximum distance from the line joining the end points (x1, xn) as shown in Fig. 7, x0={xt|d(xt−AB)max∀xt∈(x1, xn)}. Distance threshold d-t determines whether or not a segment will be split into more trends. If the distance d≥d-t for any xt∈(x1, xn) where x1 and xnare the end points of the segment, then the segment is split further. If d<d-t, ∀ xt∈(x1, xn) then there is no more splitting. A greater threshold value leads to smaller but longer segments while a smaller threshold value leads to greater but shorter segments.Hold-day threshold – It determines the holding period in time series segmentation. If the segmentation point is xtand the hold day threshold is δ days, then ∀xt∈(xt−δ, xt+δ) lies in the hold segment, as shown in Fig. 8, where δ is given.Hold-vertical threshold – If the hold-vertical threshold is ρ, then ∀xts.t. Pt∈(Pt, Pt+P) lie within the hold segment, as shown in Fig. 9. This determines the vertical region within the hold-trend segment exists, where ρ is given.These trend-segments cannot be directly used for predication because it is a segment concept. Therefore, we need to transform trend segments to trading signals in order to determine which days satisfy the trading. Let Xtbe a price sequence and S(xt) be a sub-sequence consisting of the turning points. The transform to trading signals TS is defined as(24)TS={S′1,…,S′L}where L denotes the number of segments. If a segment belongs to up-trend or down-trend, then a trading signal value will be calculated as(25)S′k(xt)=t/lifSkisuptrendsegment(l−t)/lifSkisdowntrendsegmentwhere l denotes the length of a segment Sk. Conversely, if the segment belongs to the hold-trend, then a trading signal value will be calculated as(26)S′k(xt)=1ifkth is higher point in time series0ifkth is lower point in time series0.5otherwiseFor example, suppose that S1 and S3 are in the hold-trend and S1 and S4 respectively are the down-trend and up-trend. The result of trading signal TS is shown in Fig. 8. The red dotted line is the hold-trend, which is a special signal for increasingly reflected on the original turning points, making the hold-trend not a horizontal line. The purple dotted line is the down-trend signal, and the orange dotted line is the up-trend signal. For example, in the time series T, T1–T5 and T10–T14 represent the hold-trend signal, T6–T9 represents the down-trend signal, and T15–T18 represents the up-trend signal. Finally, the trading signal TS which is like to {TS={S1,S2,S3,S4}={S′1,S′2,S′3,S′4}={〈0.5,0.5,1,0.5,0.5〉,〈1,0.66,0.333,0〉,〈0.5,0.5,0,0.5,0.5〉,〈0,0.33,0.66,1〉}.In the experiment section, we designed a trading scenario to test the performance of the proposed framework ISTSCF. The data sets, design of experiments, performance criteria and experimental results as discussed below.There are two different data types include trading information and stock news. We have selected five stocks from the Taiwan stock market to compare profits achieved by various sets of feature combination. The selected stocks including China Steel Corporation (2002.TW), Hon Hai Precision Ind. Co., Ltd. (2317.TW), Taiwan Semiconductor Manufacturing (2330.TW), HTC Corporation (2498.TW) and Chinatrust Financial Holdings Company Ltd. (2891.TW). The trading information collects from U.S. YAHOO! FINANCE. For each stock, 150 data points (trading days) were collected for the training period between 06/01/2011 (mm/dd/yy) to 12/31/2011, and 70 data points were used for the testing period between 1/2/2012 to 4/20/2012, as shown in Fig. 10. The five selected stocks were selected from different industries and have more news articles compared to other stocks. In addition, these companies are reputable in the industry. The collection period of the news articles for a day predication was from 13:00p.m. of this day to 13:00p.m. of next day for next day predication.Our predication task is daily stock trading point predication. With this, we try to determine future trading points of the stock on the exchange. For each day, we forecast on the stock's investment advice as in hold, buy or sell. The feature combinations considered to verify the performance of sentiment analysis are described as follows.•TI: Using the technical indices by technical analysis alone (22 vectors).TI (SRA): using the technical indices by technical analysis alone, but these features were selected after SRA.TI+SI: Combine technical indices and sentiment indices by sentiment analysis (22+4 vectors).TI (SRA)+SI: Using the technical indices by technical analysis, but only TI are has selected after SRA and combine sentiment indices from sentiment analysis.TI (SRA)+SI (SRA): using the technical indices by technical analysis and combine sentiment indices from sentiment analysis. Both these are has selected after SRA.Each view will expand a number of emotional words for positive and negative features. Detailed expansion rates on each view are shown in Table 2. These seed word sets of four views are defined by domain experts. The positive and negative are the same number of words for different seed words and expansion words.The parameters of the SVR model of are listed in Table 3. The kernels of SVR included RBF, polynomial and sigmoid where the linear kernel does not have parameters for comparison. We herein used the RBF kernel because of its high dimensionality for the mapping function which can be used to analyze the problems of high complexity. For model selection, the root-mean-square error (RMSE) was used for measurement.We used the profit measurement to evaluate the performance of the proposed intelligent trading system with comprehensive features. Trading points (buy or sell timing) are given by ISTSCF. The profit indicators will evaluate various feature combinations with various stocks. In addition, we also evaluate the performance of different feature sets which has sentiment analysis or not. The profit rate is calculated as follows:(27)profit=C∏i=1k(1−a−b)×pSi−(1+a)×pBi(1+a)×pBiwhere C is the total amount of money to be invested at the beginning as well as the capital, a refers to the tax rate of the ith transaction, b refers to transaction feeds of the ith transaction, k is the total number of transaction, pSiis the selling price of the ith transaction, and pBiis the buying price of the ith transaction.The section compared the proposed ISTSCF method using both numeric and textual features (i.e., TI+SI, TI(SRA)+SI and TI(SRI)+SI(SRA)) against traditional methods using numeric features alone (i.e., TI and TI(SRA)) based on the profit rate on several Taiwan stocks. The SVR was used to forecast daily trading signals and trading decision, and the predictive performance was measured using Eq. (27). Table 4shows the profit rates on five Taiwan stocks for the involved methods. The TI(SRA)+SI feature set combination yielded the highest profit rate for all stocks. The highest profit rate was 42.32% on 2498.TW stock, which was a TI(SRA)+SI feature set combination. Compared to different feature set combinations, being the TI+SI and TI(SRA)+SI, the profit rate increased more with the SI than without SI for all stocks. Compared to TI, the improvement rate of TI+SI was 55.78%. Compared to TI(SRA), the improvement rate of TI(SRA)+SI was 68.70%.The average errors on each stock with each feature are shown in Table 5. For the 2002.TW stock, the investor view yielded a highest profit rate at 5.87%. For the 2317.TW stock, the science/technology view yielded a highest profit rate at 37.85%. For the 2330.TW stock, the economy view yielded a highest profit rate at 12.90%. For the 2498.TW stock, the investor, economy and science/technology views yielded a highest profit rate at 41.59%. For the 2891.TW stock, the science/technology view yielded a highest profit rate at 15.03%. For the average among the five stocks, science/technology view yielded a highest profit rate at 22.18%, compared to the other views.Table 6shows the performance on forecasting trading points using the SVR prediction model. The TI(SRA)+SI feature set combination presents comprehensive features which can improve the accuracy in forecasting under the SVR prediction model. Among the five feature combinations, the TI(SRA)+SI yielded the best profit rate at 24.10%. Moreover, the TI(SRA)+SI(SRA) feature set combination also used sentiment indices but its performance did not better than TI(SRA)+SI because the sentiment indices are just a minute adjustment function. That is, the main reason is that SI through feature selection has lost more useful information.The detailed trading decision using the proposed comprehensive features on the different stocks is shown in Figs. 11–15. The total number of trading decisions (buy and sell) of the five stocks is 25 pairs (buy then sell), equivalent to 96% of all, yielded positive trading decisions. Therefore, the ISTSCF is a useful tool for making predictions in the stock market. These buy decision points are almost at the trough position and the sell decision points are almost close to the peak position.

@&#CONCLUSIONS@&#
This study has examined that the ISTSCF achieved outstanding performance in terms of the profit measurement in several stocks. From the results the, we can know the information usefulness of stock is important. To analyze online stock market news articles, we used sentiment analysis, and further applied the contextual entropy model to expand a set of seed words by discovering similar emotion words and their corresponding intensities. This is accomplished by calculating the similarity between the seed words and candidate words from their contextual distributions using an entropy measure. In terms of technical analysis, we employed rules on stock prices and volumes. The two information extraction methods can generate two types of useful indices: sentiment indices and technical indices. The technical indices through the feature selection are effective for precision. Information on stocks is combined so that the two methods, i.e., sentiment analysis and technical analysis, can provide more effective information for improving the accuracy in forecasting techniques. Experimental results confirmed that the use of comprehensive features combined with technical indices, sentiment indices and trading signals can improve forecasting performance, which can be further enhanced by SA, TA and TBSM. Additionally, the TBSM also correctly determined trading decisions for obtaining better investment profits.This paper developed a useful model and combined it with different feature extraction methods. We attempt to use sentiment analysis as a text mining technique to analyze future stock trends using textual messages. Future work will pursue in two directions. First, various resources of messages for sentiment analysis will be investigated to obtain more effective emotion words and further increase the integrity of comprehensive features. Second, more in-depth stock trends such as different trading strategies will be explored and incorporated into trend-based segmentation methods.