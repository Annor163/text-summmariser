@&#MAIN-TITLE@&#
Multidimensional zero-correlation attacks on lightweight block cipher HIGHT: Improved cryptanalysis of an ISO standard

@&#HIGHLIGHTS@&#
Multidimensional zero-correlation attacks on round-reduced ISO-standard HIGHT.Key recovery for 27 (out of 32) rounds of HIGHT in classical single-key setting.Our 27-round attack significantly improves upon state-of-the-art in time and memory complexity.First key recovery for 26-round original HIGHT in classical single-key setting.

@&#KEYPHRASES@&#
Cryptography,Analysis of algorithms,Block cipher,Zero-correlation linear cryptanalysis,HIGHT,

@&#ABSTRACT@&#
HIGHT is a block cipher designed in Korea with the involvement of Korea Information Security Agency. It was proposed at CHES 2006 for usage in lightweight applications such as sensor networks and RFID tags. Lately, it has been adopted as ISO standard. Though there is a great deal of cryptanalytic results on HIGHT, its security evaluation against the recent zero-correlation linear attacks is still lacking. At the same time, the Feistel-type structure of HIGHT suggests that it might be susceptible to this type of cryptanalysis. In this paper, we aim to bridge this gap.We identify zero-correlation linear approximations over 16 rounds of HIGHT. Based upon those, we attack 27-round HIGHT (round 4 to round 30) with improved time complexity and practical memory requirements. This attack of ours is the best result on HIGHT to date in the classical single-key setting. We also provide the first attack on 26-round HIGHT (round 4 to round 29) with the full whitening key.

@&#INTRODUCTION@&#
With emerging pervasive applications in mind such as sensor networks, RFID tags and medical devices, a variety of lightweight cryptographic algorithms have been lately proposed including the two block ciphers adopted as ISO/IEC standard for lightweight encryption: PRESENT [7] proposed at CHES 2007 and CLEFIA [8] proposed at FSE 2007. Many more lightweight block ciphers have been published since then. Even the U.S. National Security Agency (NSA) has very recently contributed to the trend with two lightweight block ciphers: Simon and Speck [1]. HIGHT [6] is another lightweight block cipher designed with governmental involvement – Korea Information Security Agency (KISA).HIGHT was proposed at CHES 2006 and then adopted as ISO standard block cipher [9]. HIGHT has 32 rounds. It accepts a 64-bit block and a 128-bit key. Each round consists of four parallel Feistel functions. Whitening keys are applied before the first and after the last round. The security of HIGHT has been extensively evaluated. Zhang et al. [10] present an integral attack on 22-round HIGHT at CANS 2009 and the time complexity is then reduced by Sasaki and Wang [11] at SAC 2012. In the impossible differential cryptanalysis of HIGHT, to be able to cryptanalyze more rounds, most of the existing attacks do not consider the pre-whitening key except the attack on 27-round HIGHT given in [14] at AfricaCrypt 2012. Lu [12] gives the first impossible differential cryptanalysis against 25-round HIGHT. Then at ACISP 2009, Özen et al. [13] successfully mount an impossible differential attack on 26-round HIGHT. This result was then improved by Chen et al. [14] at AfricaCrypt 2012. Note that the attack on 27-round HIGHT with full whitening keys considered proposed in [14] has time complexity 2126.6 encryptions and 2120 memory accesses to a table of 2120 bytes, which can be considered marginal with respect to brute force. In the related-key setting, attacks on 28-round [12] and 31-round [13] HIGHT were presented using impossible differential attack and related-key rectangle attack on the full HIGHT was reported in [17]. Recently, independent biclique attacks – belonging to the class of polynomial advantage attacks – on the full HIGHT have been obtained in [15,16] with time complexities 2126.4 and 2125.9 encryptions, respectively.Zero-correlation linear cryptanalysis proposed by Bogdanov and Rijmen in [4] is a novel promising attack technique for block ciphers which has its theoretical foundation in the availability of numerous key-independent unbiased linear approximations with correlation zero for many ciphers. (If p is the probability for a linear approximation to hold, its correlation is defined asc=2p−1.) Though the initial distinguisher of [4] had some limitations in terms of data complexity, they were overcome in the FSE 2012 paper [5], where the existence of multiple linear approximations with correlation zero in target ciphers was used to propose a more data-efficient distinguisher. In a follow-up work at AsiaCrypt 2012 [2], fundamental links of integral cryptanalysis to zero-correlation cryptanalysis have been revealed. Namely, integrals (similar to saturation or multiset distinguishers) have been demonstrated to be essentially a special case of the zero-correlation property. On top of that, a multidimensional distinguisher has been constructed for the zero-correlation property, which removed the unnecessary independency assumptions on the distinguishing side. At SAC 2013 [3], an FFT technique for speeding up the key recovery in zero-correlation attacks has been proposed, which resulted in increasing the number of rounds that can be cryptanalyzed for Camellia-128 and Camellia-192 in the single-key setting.In this paper, we evaluate the security of HIGHT with respect to the recent technique of zero-correlation linear cryptanalysis. Our contributions can be summarized as follows.1.We reveal 16-round linear approximations of correlation zero in HIGHT.Based on those approximations, we propose a multidimensional zero-correlation attack on 27 rounds of HIGHT (round 4 to round 30) with all whitening keys. As mentioned above, in the single-key setting, the attack on the highest number of HIGHT rounds is the 27-round impossible differential attack of [14]. However, the latter provides only a marginal improvement over the brute force, given the enormous number of random accesses to a huge memory (see Table 1). Our zero-correlation attack features a lower time complexity that does not involve expensive memory accesses and a significantly reduced memory complexity, which is in fact practical. Our attack is arguably the best non-exhaustive attack on HIGHT in the classical single-key setting.We provide a key-recovery attack on 26-round HIGHT (round 4 to round 29) with all whitening keys. Note that all previous attacks on 26-round HIGHT ignored the pre-whitening key. To do this, we use the technique of multidimensional zero-correlation linear cryptanalysis. Thus, this attack of ours is the first one on 26-round HIGHT with all whitening keys in the single secret key setting.This paper is organized as follows. Section 2 briefly describes HIGHT and outlines the ideas of zero-correlation linear cryptanalysis. Section 3 presents our zero-correlation linear approximations that span 16 rounds of HIGHT. Section 4 illustrates our attacks on 26-round and 27-round HIGHT. We conclude in Section 5.⊞: addition modular 28⊕: exclusive-OR (XOR)Pi,Ci: the i-th byte of plaintext and ciphertext,0⩽i⩽7Xr: the input value of round r,1⩽r⩽32Xir: the i-th byte ofXr,0⩽i⩽7, corresponding to eight branchesXi(j)r: the j-th bit ofXir,0⩽j⩽7MKi: the i-th master key byte,0⩽i⩽15WKi: the i-th whitening key,0⩽i⩽7SKi: the i-th subkey,0⩽i⩽127⋘s: cyclic left shift by s bits,0⩽s⩽7|: concatenation of bits or bytesHIGHT is a 32-round lightweight block cipher with a 64-bit block and a 128-bit master key. It is an 8-line type-II generalized Feistel network: Each round consists of four parallel applications ofF0andF1functions. Whitening keys are added before the first and after the last round. The 16-byte master key is denoted as(MK15,MK14,…,MK0); the eight whitening key bytes are given by(WK7,WK6,…,WK0); we address the 128 subkey bytes by(SK127,SK126,…,SK0). Both the whitening keys and subkeys are generated from the master key by the key schedule shown in Algorithm 1. Both the whitening keys and subkeys are generated from the master key. The relation between master key bytes and partial subkeys and whitening keys are shown in Table 2.The 64-bit plaintext P and ciphertext C are denoted as(P7|⋯|P0)and(C7|⋯|C0), respectively. The 64-bit inputXiof round i is denoted as(X7i|⋯|X0i). The encryption process of HIGHT is shown in Algorithm 2, in whichF0(x)=(x⋘1)⊕(x⋘2)⊕(x⋘7)andF1(x)=(x⋘3)⊕(x⋘4)⊕(x⋘6).In this section, we briefly recall the basic concepts of zero-correlation linear cryptanalysis based on [4] and [2].First, we briefly mention the concept of correlation for linear approximations. We denote the scalar product of binary vectors bya⋄x=⨁i=1naixi. Linear cryptanalysis is based on linear approximations determined by input mask α and output mask β. A linear approximationα→βof a vectorial function f has a correlation defined byC(β⋄f(x),α⋄x)=2Prx(β⋄f(x)⊕α⋄x=0)−1.In zero-correlation linear cryptanalysis, the distinguisher uses linear approximations with zero correlation for all keys while the classical linear cryptanalysis utilizes linear approximations with correlation as far from zero as possible.In [2], Bogdanov et al. proposed a multidimensional zero-correlation linear distinguisher using ℓ zero-correlation linear approximations and requiringO(2n/ℓ)known plaintexts, where n is the block size of a cipher. In multidimensional zero-correlation cryptanalysis, the key recovery works as follows. For an n-bit block cipher, if there are m independent zero-correlation linear approximations such that allℓ=2mnon-zero linear combinations of them have zero correlation, the number of required known plaintexts N isO(2n/ℓ). For each of the2mvaluesz∈F2m, the attacker initializes a counterV[z],z=0,1,2,…,2m−1, to value zero. The attacker partially encrypts and decrypts each plaintext-ciphertext pair to the boundaries of zero-correlation linear approximations by guessing some key values and computes the corresponding data value inF2mby evaluating the m basis linear approximations and increments the counterV[z]of this data value by one. Then the attacker computes the statistic T:T=∑z=02m−1(V[z]−N2−m)2N2−m(1−2−m).The statistic T for the right key guess follows aχ2distribution with meanμ0=(ℓ−1)2n−N2n−1and varianceσ02=2(ℓ−1)(2n−N2n−1)2, while for the wrong key guess it follows aχ2-distribution with meanμ1=ℓ−1and varianceσ12=2(ℓ−1).We denote the type-I error probability asα0(the probability to wrongfully discard the right key guess), the type-II error probability asα1(the probability to wrongfully accept a wrong key guess as the right key). If we consider the decision thresholdτ=μ0+σ0q1−α0=μ1−σ1q1−α1, then the number of distinct known plaintexts isN=(2n−1)(q1−α0+q1−α1)(ℓ−1)/2+q1−α0+1,whereq1−α0andq1−α1are the respective quantiles of the standard normal distribution.To discuss the linear approximations, we need a proper way to denote linear masks. Hence, in the rest of the paper, if a mask on one byte is zero or undetermined in all 8 bits, we denote it with a single ‘0’ or ‘?’, respectively. Otherwise, we will refer to this mask bit by bit where ‘0’, ‘1’ and ‘?’ stand for a zero, nonzero and undetermined single-bit mask value.Based on properties of correlation for linear approximations over basic operations used in HIGHT such as linear map, XOR, branching, and modular addition proposed in [4,5], we derive a variety of zero-correlation linear approximations for 16-round HIGHT.Theorem 1Denote the input mask asα=(α7,α6,…,α0)and output mask after 16 rounds of HIGHT asβ=(β7,β6,…,β0). For anyαi=00000001,αj=0,j≠i,0⩽i,j⩽7,βk=1???????,βl=0,l≠k,0⩽l,k⩽7, if(i,k)∈{(6,5),(4,3),(2,1),(0,7)}, then the linear approximationsα→16rβhave correlation zero. For each(i,k)∈{(6,5),(4,3),(2,1),(0,7)}, there exist 128 linear approximations conforming toα→16rβ.Due to limited space here, we do not provide the proof of Theorem 1. However, we list the details of the zero-correlation linear approximations over 16-round HIGHT when(i,k)=(4,3)in Table 3since this kind of linear approximations will be used in our attack.In this section, we describe our attacks on 26 and 27 rounds of HIGHT. We use the key schedule of HIGHT to reduce the number of guessed bits in our attack. The number of guessed key bits is affected by several parameters including the zero-correlation linear property we choose (values of α and β), the position of the property (rounds spanned by zero-correlation approximations), and the number of rounds added before and after this property. To optimize the attack complexities, a proper choice of these parameters is needed. We have implemented the search for the best parameters in a computer program which counts the number of guessed key bits in the partial encryption/decryption phase for all possible combinations of the parameters. To reduce the time complexity, we choose parameters with the least number of guessed key bits.As a result, we can attack 26-round HIGHT (round 4 to round 29) with the full whitening key by spanning rounds 9 to 24 with the 16-round zero-correlation linear property of Theorem 1 and adding five rounds before and after the property. Also we can attack 27-round HIGHT (round 4 to round 30) with the full whitening key if we add five rounds before and six rounds after the zero-correlation property. We provide our attacks on 26- and 27-round HIGHT in Sections 4.1 and 4.2, respectively.The five initial rounds and five final rounds involved in the attack on 26-round HIGHT are shown in Fig. 1and Fig. 2, respectively. We need to encrypt and decrypt N(P,C)pairs to the boundaries of those zero-correlation linear approximations. In Fig. 1 and Fig. 2, we only show those intermediate state values, the subkeys, and whitening keys computed or guessed in the partial encryption and decryption process. The guessed subkeys and whitening keys are denoted with their corresponding master key bytes. Then the key-recovery attack on 26-round HIGHT is proceeded with partial-sum technique from Step 1 to Step 16 as follows.1.Allocate a counter vectorV1[X4(0)9|C7|C6|C5|C4|X329]of size 241 where each element is 32-bit length and initialize to zero.Guess all possible values of 50 master key bitsMK15,MK14,MK13,MK2,MK1,MK6,MK3(0),MK12(0).Partially encrypt and decrypt each of N(P,C)pairs to getX4(0)9andX329(e.g.X329=C3⊕(F0(C2⊕WK5)⊞SK113)). Add one to the correspondingV1[X4(0)9|C7|C6|C5|C4|X329].The time complexity of Step 3 is no more thanN⋅250⋅52626-round encryptions. Then, we proceed Steps 4–13 shown in Table 4. The second column stands for the master key byte or bit that should be guessed in each step and the corresponding subkey or whitening key is listed in the third column. The column headed as “#Bits” denotes the number of new guessed master key bits introduced in each step. The fifth column is the state value to be computed with the guessed key and known state value. We set up counters in each step to reduce time complexity. The counters we set are shown in column headed as “Counter” and its size is shown in the next column head as “Size”. The computational complexity of each step is shown in the last column, measured with 1/4 round encryption except those steps noted with ‘†’.To be more clear we explain Step 4 of Table 4 in details. In Step 4 of Table 4, we set up a counter vectorV2[X4(0)9|C7|C6|C5|X429|X329]of size 241 where each element is 32-bit length and initialize to zero and guess master key byteMK2corresponding toWK6. There is no new master key bits introduced since the value ofMK2has already been guessed in Step 2. ComputeC4⊞WK6→X429and add the correspondingV1[X4(0)9|C7|C6|C5|C4|X329]toV2[X4(0)9|C7|C6|C5|X429|X329]. Step 5 to Step 13 are proceeded in a similar way and after Step 13 we get the countersV11[X4(0)9|X325]for all possible values of(X4(0)9|X325).Note that to reduce the time complexity of Step 12 of Table 4, we guess the key byte ofMK7bit by bit, from the least significant bit to the most significant bit. The detailed procedure is shown in Table 5. The columns in Table 5 have the same meaning as those in Table 4. According to Table 5, the time complexity for Step 12 of Table 4 is225⋅289+224⋅290+223⋅291+222⋅292+221⋅293+220⋅294+219⋅295+218⋅296=8⋅2114=21171/4 round encryptions.After Step 13 of Table 4, 96 master key bits have been guessed and the parity ofα⋄X9⊕β⋄X25could be evaluated for all zero-correlation linear approximations presented in Table 3. Then we proceed the following steps:14.Allocate a counter vectorV[z]of size 27 where each element is 64-bit length for 7-bit z (z is the concatenation of evaluations of 7 basis zero-correlation masks).For 29 values of(X4(0)9|X325), evaluate all 7 basis zero-correlation masks with value(X4(0)9|X325)and put the evaluations to the vector z, thenV[z]:V[z]+=V11[X4(0)9|X325].ComputeT=N⋅27⋅∑z=027−1(V[z]N−127)2, ifT⩽τ, then the guessed key is a possible key candidate. As there are 32 master key bits that we haven't guessed, we do exhaustive search for all keys conforming to this possible key candidate. Only the right key value will survive if all possible key values are tested against a maximum of 3 plaintext-ciphertext pairs.In this attack, we set the type-I error probabilityα0=2−2.7and the type-II error probabilityα1=2−8.9. We haveq1−α0≈1.02,q1−α1≈2.86,n=64,ℓ=128. Then N should satisfyN=(2n−1)(q1−α0+q1−α1)(ℓ−1)/2+q1−α0+1≈262.79.The decision thresholdτ≈26.35. There are 96-bit master key value guessed during the encryption and decryption phase, and296⋅2−8.9=287.1key candidates survive in the wrong key filtration. These 287.1 key candidates are tested exhaustively against a maximum of 3 plaintext-ciphertext pairs along with the remaining 32 master key bits. The complexity of Step 16 is about 2119.1 26-round HIGHT encryptions which is also the dominant part of our attack. In total, the data complexity is about 262.79 known plaintexts, the time complexity is about 2119.1 26-round HIGHT encryptions and the memory requirement are 243 bytes for counters. This is the first attack on 26-round HIGHT considering full whitening key with practical memory requirements.If we add one more round after the zero-correlation linear distinguisher for 16-round HIGHT, we could attack 27-round HIGHT (round 4 to round 30) with full whitening key taken into consideration. The initial five rounds encryption of our attack on 27-round HIGHT is the same as that described in Section 4.1 shown in Fig. 1. The final six rounds are illustrated in Fig. 3. The key-recovery phase could be proceeded with partial-sum technique from Step 1 to Step 17 as follows.1.Allocate a counter vectorV1[X4(0)9|C7|C6|C0|X530|X329]of size 241 where each element is 32-bit length and initialize to zero.Guess all possible values of 58 master key bitsMK15,MK14,MK13,MK2,MK1,MK6,MK3(0),MK12(0),MK7.Partially encrypt and decrypt each of N(P,C)pairs to getX4(0)9,X530andX329. Add one to correspondingV1[X4(0)9|C7|C6|C0|X530|X329].The time complexity of Step 3 is no more thanN⋅258⋅52727-round encryptions. Then, we proceed Steps 4–14 shown in Table 6. The meaning of each column in Table 6 has already been described in Section 4.1. Also, Step 4 to Step 14 of Table 6 are proceeded in the same way as described in Section 4.1.After Step 14 of Table 6, 104 master key bits have been guessed and the parity ofα⋄X9⊕β⋄X25could be evaluated for all zero-correlation linear approximations shown in Table 3. Then we proceed the following steps:15.Allocate a counter vectorV[z]of size 27 where each element is 64-bit length for 7-bit z (z is the concatenation of evaluations of 7 basis zero-correlation masks).For 29 values of(X4(0)9|X325), evaluate all 7 basis zero-correlation masks on(X4(0)9|X325)and put the evaluations to the vector z, then add the correspondingV[z]:V[z]+=V12[X4(0)9|X325].ComputeT=N⋅27⋅∑z=027−1(V[z]N−127)2, ifT⩽τ, then the guessed key is a possible key candidate. As there are 24 master key bits that we haven't guessed, we do exhaustive search for all keys conforming to this possible key candidate. Only the right key value will survive if each possible key value is tested against a maximum of 3 plaintext-ciphertext pairs.In this attack, we also chooseα0=2−2.7andα1=2−8.9. Againq1−α0≈1.02,q1−α1≈2.86,n=64,ℓ=127and N should satisfyN=(2n−1)(q1−α0+q1−α1)(ℓ−1)/2+q1−α0+1≈262.79.About2104⋅2−8.9=295.1candidates are left after filtration, the complexity of the test in Step 17 is about295.1⋅224=2119.127-round encryptions. Note that Steps 11, 12, 13 in Table 6 have comparable time complexity. So the time complexity of our attack on 27-round HIGHT is about(2126+2125+2125)⋅14⋅127+2119.1≈2120.7827-round encryptions. The data complexity is 262.79 known plaintexts and the required memory is about 243 bytes. Compared with the previous best attack proposed in [14], our attack on 27-round HIGHT has a lower time complexity and successfully eliminates the requirements for unpractical memory.

@&#CONCLUSIONS@&#
