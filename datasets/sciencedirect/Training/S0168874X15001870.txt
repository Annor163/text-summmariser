@&#MAIN-TITLE@&#
A fracture-controlled path-following technique for phase-field modeling of brittle fracture

@&#HIGHLIGHTS@&#
The phase-field fracture-surface area is used as a path-following control equation.A staggered path-following algorithm is derived from the monolithic formulation.A detailed comparison of the monolithic and staggered schemes is presented.The influence of phase-field tip enrichment on snap-back behavior is demonstrated.

@&#KEYPHRASES@&#
Brittle fracture,Phase-field modeling,Path-following methods,Staggered solution procedures,

@&#ABSTRACT@&#
In the phase-field description of brittle fracture, the fracture-surface area can be expressed as a functional of the phase field (or damage field). In this work we study the applicability of this explicit expression as a (non-linear) path-following constraint to robustly track the equilibrium path in quasi-static fracture propagation simulations, which can include snap-back phenomena. Moreover, we derive a fracture-controlled staggered solution procedure by systematic decoupling of the path-following controlled elasticity and phase-field problems. The fracture-controlled monolithic and staggered solution procedures are studied for a series of numerical test cases. The numerical results demonstrate the robustness of the new approach, and provide insight in the advantages and disadvantages of the monolithic and staggered procedures.

@&#INTRODUCTION@&#
In many problems in brittle-fracture mechanics, phenomena such as nucleation, propagation, branching and merging occur. Complex crack patterns appear as a consequence of e.g. the presence of multiple cracks, anisotropy and heterogeneity. Using discrete fracture models it is generally difficult to capture such topologically complex crack patterns, which has led to the development of smeared or continuum crack models, including phase-field models [1,2]. In phase-field models the crack surface is regularized by a smeared damage (or phase-field) function, which avoids the need for the explicit tracking of fracture surfaces. Over the past years phase-field modeling of fracture has been applied to a wide range of problems, including dynamic fracturing [3,4], large deformation fracturing [5], fracturing of electromechanical materials [6], cohesive fracturing [7], and fluid-driven fracture propagation [8].In this work we consider the quasi-static evolution of brittle fractures in an elastic solid, where fractures are driven by gradual incrementation of the loading conditions. Since softening and snap-back behavior are frequently encountered in such situations, path-following control is required to adequately track the complete equilibrium path [9]. Path-following techniques have been an indispensable tool in non-linear solid mechanics since the pioneering works of Riks [10], Crisfield [11] and Ramm [12]. While these path-following techniques were developed in the context of snap-back behavior caused by geometrical non-linearities, over the past decades various enhancements to the original path-following procedures have been proposed in order to increase their versatility and computational efficiency.A particularly interesting application of path-following techniques is their use to track snap-back behavior as a result of material non-linearities, especially localized failure phenomena. In such situations the original path-following constraints have proven to lack robustness by the fact that they fail to account for the localized nature of the source of non-linearity. Various modified techniques have been proposed to account for this localized behavior, among which are a series of (semi-)automatic procedures for selecting degrees of freedom that contribute to the nonlinear behavior of the system [13,14]. Our work builds on the idea that an appropriate path-following technique can be obtained by selecting a physically motivated constraint equation. In this regard the crack mouth opening displacement (CMOD) and crack mouth sliding displacement (CMSD) control equations proposed by De Borst [15] can be considered as pioneering works. Inspired by these control equations energy-release rate path-following control was developed for the simulation of localized failure phenomena, including discrete cracking, smeared damage and softening plasticity [16,17]. The versatility of the energy-release rate control has been demonstrated for a variety of applications, including cases in which geometrical and material nonlinearities are competing [18].When applied in the context of discrete fracture simulations, the energy release-rate path-following technique has the ability to indirectly control the rate at which a fracture propagates by proper selection of the energy dissipation increment. In Ref. [19] it has been shown that the energy-release rate control can be successfully applied to phase-field simulations, where the dissipation increment is related to the fracture-surface area increment through the critical energy release rate. In the case of phase-field simulations the relation between the path-following constraint and the fracture-surface area increase can be made explicit, i.e. the fracture-surface area can be expressed as a functional of the phase-field solution. This allows for direct prescription of the surface-area increments. This explicit dependence allows for the selection of the path-following parameter increment based on a criterion that relates the crack surface growth to the size of the employed (finite element) mesh, which provides a natural way of controlling the accuracy of the path-following scheme. In this work we formulate and study such a fracture-based path-following technique, which – if used in combination with a monolithic incremental-iterative path-following procedure – allows for the parametrization of the equilibrium path by specified fracture-surface area increments.Quasi-static phase-field simulations of brittle fracture phenomena have mostly relied on the use of a staggered solution strategy, in which the elasticity problem and phase-field problems are decoupled [2]. This staggered solution strategy has been proven to be computationally efficient. A drawback of this solution strategy is that the step sizes need to be selected appropriately in order to control the accuracy of the procedure. The currently available staggered schemes are not capable of representing snap-back behavior. In this work a staggered fracture-based path-following method is derived from the monolithic scheme, which has the possibility of reducing the computational effort of the monolithic scheme at the cost of only satisfying the path-following increments in an approximate sense. This fracture-controlled staggered scheme does, however, inherit the property of the underlying monolithic scheme that the fracture propagation increments can directly be controlled (albeit in an approximate sense). This simplifies the selection of the step size compared to e.g. the displacement-based staggered scheme.In Section 2 we introduce the phase-field formulation for brittle fracture and its discretization using the finite element method. In Section 3 we derive the fracture-based path-following constraint. In this section we also discuss various aspects of the corresponding incremental-iterative path-following procedure. In Section 4 we systematically derive the staggered path-following scheme, after which the monolithic scheme and staggered scheme are studied in detail in terms of computational effort and accuracy in Section 5. In this section we also study the nature of the snap-back behavior encountered in phase-field simulations for brittle fracture. Finally, conclusions are drawn in Section 6.We consider the evolution of a regularized fracture surface,Γlc(d), in anndim-dimensionalelastic medium,Ω⊂Rndim, under quasi-static loading (see Fig. 1). The outward-pointing unit normal vector to the surface of the domain Ω is denoted byn:Γ→Rndim. Small deformations and deformation gradients are assumed, and the deformation of the medium is described by the displacement fieldu:Ω→Rndim. The fracture surface,Γlc(d), is represented by the phase fieldd:Ω→[0,1], which approaches 1 inside a regularized crack and vanishes far away from the fracture surface. External tractions,t¯, are applied along the Neumann boundaryΓNand prescribed displacements,u¯, are considered at the Dirichlet boundaryΓD.Under the above conditions, the strong form for the displacement and phase field is given by:(1)(S){∇·σ=0inΩ(1a)Gclc(d−lc2Δd)=2(1−d)HinΩ(1b)σ·n=t¯onΓN(1c)u=u¯onΓD(1d)∇d·n=0onΓ(1e)In this strong form,Gcis the Griffith type critical energy-release rate andlcis the length scale associated with the phase-field regularization of the fracture surface11Here the length scalelcis defined as in Ref. [2]. We note that in the literature sometimes use is made of the alternative length scale definitionε=lc/2, e.g.[1].(i.e. the width of the cracks) [1,2]. In order to restrict the fracturing process to tensile stress states, the Cauchy stress tensor in the above problem is defined as(2)σ(ε,d)=g(d)σ0+(ε)+σ0−(ε),whereg(d)=(1−d)2is the degradation function,σ0+andσ0−are the tensile and compressive parts of the virgin (d=0) Cauchy stress tensor [2], andε=∇suis the infinitesimal strain tensor. From the above stress definition it evidently follows that this degradation function must satisfy the conditionsg(0)=1andg(1)=0. The property thatg′(1)=0ensures that the thermodynamic driving force for the phase-field model (i.e. the right-hand-side of the phase-field equation) vanishes once a fracture has completely evolved.Irreversibility, i.e. the notion that the fracture surface can only extend (Γ̇lc≥0), is enforced in the strong form (1) by means of the history fieldH:Ω→R+. This history field satisfies the Kuhn–Tucker conditions for loading and unloading, defined as(3)ψ0+−H≤0,Ḣ≥0,Ḣ(ψ0+−H)=0,withψ0+the tensile part of the virgin elastic energy density.To compute an approximate solution to the strong form (1) using the finite element method, the weak form is derived. Using the function spacesVu={u∈H1(Ω)∣u=u¯onΓD}andVd=H1(Ω)for the trial functions, andV0u={u∈H1(Ω)∣u=0onΓD}andVdfor the test functions, we obtain:(4)(W){Find(u,d)∈Vu×Vdsuchthat:∫Ωσ:∇swdV=∫ΓNt¯·wdS∀w∈V0u(4a)∫Ω[(Gclc+2H)d−2H]e+Gclc∇d·∇edV=0∀e∈Vd(4b)This weak form is discretized using a (Bubnov–) Galerkin finite element discretization, for which the displacement field and phase field are interpolated by(5)u(x)=∑I=1nuNIu(x)aIu,d(x)=∑I=1ndNId(x)aId,wherenuand nddenote the number of displacement and phase field degrees of freedom, respectively. The vector-valued shape functionsNIu(x):Ω→Rndimand scalar-valued shape functionsNId:Ω→Rspan subsets ofH1(Ω)andH1(Ω), respectively. The nodal displacement components and phase-field values are respectively represented byau∈Rnuandad∈Rnd. The degrees of freedom are assembled in a single vector of coefficients:aT=[auT,adT]. The Dirichlet boundary conditions are enforced strongly by means of a constraints matrixC, such thata=Caf+ap, withafthe free degrees of freedom andapthe prescribed degrees of freedom.Using the finite element discretization (5), the weak form (4) can be written as a non-linear system of equations(6)fint(a)=fext,withfintT=[fintuT,fintdT]andfextT=[fextuT,0T], see Appendix A for the expressions of these force vectors.Commonly, the solution to the quasi-static nonlinear problem (6) is computed through an incremental-iterative solution procedure. In such a procedure either the external loading (fextk) or the boundary displacement (apk) is prescribed in a stepwise incremental fashion, with indexk=1,…,nsteps. In every step, the corresponding solution increment,Δak=ak−ak−1, is computed using Newton–Raphson iterations. The tangent stiffness matrices required by the Newton solution procedure can be found in Appendix A.Evidently, force-controlled and displacement-controlled solution procedures break down in the case of softening or snap-back behavior, respectively; see e.g.[9]. Therefore, in order to track the complete equilibrium path we need to supplement the system of equations with a path-following control.In this contribution we restrict ourselves to the case of proportional loading, i.e. we assume that the external force vectorfextkcan be written as a load level λktimes a “unit” load vectorf^in the case of force loading, and the boundary displacements are expressed asapk=λka^in the case of displacement loading.The monolithic path-following procedure is outlined in the pseudo-code Algorithm 1. This standard algorithm is here presented to place some specific algorithmic aspects of the current work in the proper perspective (see Section 3.3). Moreover, this algorithm will serve as the basis for the novel staggered path-following procedure to be derived in the next section.Algorithm 1Monolithic incremental-iterative path-following procedure.Input: (a0,λ0),H0# State vector, load level & history fieldOutput:(a1,λ1),(a2,λ2),…,(ansteps,λnsteps)# Discrete eq. path# Initializationcontrol=‘displacement’# Load stepsfork=1,…,nsteps:|a0k=ak−1,λ0k=λk−1# InitializationofNewtoniterations#Newtoniterationsform=1,…,mmax:|fint,K=assemble_augmented_system(am−1k,λm−1k,Hk−1)ζ,h,q=assemble_control_equation(am−1k,λm−1k,control)amk,λmk=solve_augmented_system(K,fint,ζ,h,q)converged=check_convergence(amk,λmk)ifconverged:breakendifconverged:|ak=amk,λk=λmk# UpdatestatevectorandloadlevelHk=update_history_field(ak,Hk−1)control=select_control_equation(ak,Hk)else:|restart_newton_iterations()endendUsing a path-following technique, the equilibrium path is defined as the set of all points{(a(t),λ(t))|t∈[0,T]}which are a solution to the non-linear system of equations (6), where t represents the time parameter ranging from 0 to the final time T. In practice the equilibrium path is represented by a finite sequence of equilibrium points{(ak,λk)}k=0nsteps, computed through the above-mentioned incremental-iterative solution procedure. In order to compute the discrete equilibrium points, the general idea of path-following techniques is to supplement the system of equations (6) with a path-following constraint of the form(7)ζ(ak,Δak,λk,Δλk;Δτ)=0,whereΔτ>0is the positive increment of the path-following parameter τ, which can be regarded as a pseudo-time parameter. By the incremental-iterative solution of the non-linear system of equations (6) in combination with this constraint equation, a discrete parametrization of the equilibrium path in terms of the path-following parameter τ is obtained:{a(τk),λ(τk)}k=0nsteps. We note that the case of force control, i.e.λk=λk−1+λ̇Δτ, is in fact the most simple case of path-following control possible:ζ=Δλk−λ̇Δτ=0, whereλ̇represents a prescribed loading rate.The choice for a particular path-following constraint is dictated by the existence of solutions to the non-linear system of equations (6) upon the incrementation of the path parameter τ. For example, force control will be unable to represent softening behavior, while displacement control will fail when snap-back occurs. In fracture mechanics problems various path-following constraints have been found to be very effective. The CMOD (or CMSD) control proposed in [15] has successfully been applied in many cases. Over the past decade the use of dissipation-based control has been studied extensively and was found to be very reliable for problems in which severe non-linear behavior is expected [17]. The rationale behind the dissipation-based control is that, from a physical perspective, dissipation has to be non-negative as a consequence of the irreversibility of fracture propagation. When fracture propagation is the dominant source of dissipation, this control is very effective in simulating the evolution of fractures.Inspired by the idea of dissipation-control, in this contribution we propose a path-following constraint directly based on the fracture-surface area (or fracture length in 2D). This has become tractable only with the introduction of phase-field models for brittle fracture, due to the availability of an explicit functional expression for the fracture-surface area. We note that in the case of Griffith׳s theory of fracture, there is a direct relation between the fracture-surface area and the amount of dissipation, and hence, under specific assumptions, the control equation developed herein is identical to that developed in [16] (see Appendix B for details).In the phase-field formulation for brittle fracture, the fracture surface area is expressed by(8)Γlc(d)=12lc∫Ωd2+lc2|∇d|2dV.In this work we prescribe the rate of fracture propagation,Γ̇lc, by means of the path-following constraint(9)ζ=Γlc(dk)−Γ̇lcτk=Γlc(dk)−Γlc(dk−1)−Γ̇lcΔτNote that this path-following constraint is a non-linear equation of the phase field. Since we apply this constraint in a Newton–Raphson solution procedure, it is required to compute the derivative of this constraint with respect to the nodal displacements, and nodal phase-field coefficients, which yields:(10)hu=∂ζ∂au=0hd=∂ζ∂ad=1lc∫ΩdNd+lc2∇d·∇NddVwithNdthe column vector of phase-field shape functions. In the remainder we will consider the combined vectorhT=[huT,hdT]. Since the constraint (9) does not depend on the load level explicitly, it follows that(11)q=∂ζ∂λ=0.The fracture-based path-following constraint (9) has two major benefits. First, it is evident that the path-following parameter is non-decreasing in time, and hence this constraint choice is anticipated to yield robust results, also in the case of material softening and/or snapback. The second advantage is that this choice for the constraint provides an intuitive way of selecting the appropriate step size. By requiring that the fracture surface should not propagate across multiple elements within in a single step, the irreverisibility condition can be adequately imposed. We will further study the choice of the step size in Section 5.In this section we discuss three algorithmic aspects that are specific to the current work: (i) the solution of the augmented system of equations within each Newton–Raphson iteration; (ii) the convergence criterion employed for the phase-field model; and (iii) the initialization and selection procedure for the control equation and the restarting procedure for the Newton–Raphson iterations.The solution-vector increment and load level increment in step k,Δak=ak−ak−1andΔλk=λk−λk−1, are computed using Newton–Raphson iterations. As a starting vector and load level for these iterations the solution to the previous step is used:a0k=ak−1andλ0k=λk−1. Subsequently, the solution vector increment is iteratively updated byΔamk=Δam−1k+δamkandΔλmk=Δλm−1k+δλmk, wherem=1,…,mmaxis the Newton–Raphson iteration counter. For the computation of the update vectorδamkand update load levelδλmkwe distinguish between the cases of force loading and displacement loading. Note that for notational brevity we omit the step number k and iteration number m in the following paragraphs (δamk=δaandδλmk=δλ). All matrices and vectors are evaluated at the state(am−1k,λm−1k)=(a,λ), i.e. the solution computed afterm−1iterations.Force loading: The external force vector in the discrete equilibrium equations (6) is then given byfext=λf^and the constraints are imposed bya=Caf+ap, where both the matrixCand the vectorapare constant throughout the simulation. The solution update is then computed through(12)(δafδλ)=[CTK(a)C−CTf^hT(a)Cq]−1(CT[λf^−fint(a)]−ζ(a))andδa=Cδaf. We compute the solution to this augmented system by solving through the Sherman–Morrison procedure discussed in e.g. Ref. [17]. The two linear systems of equations encountered in this procedure are solved using a GMRES solver with sparse ILU pre-conditioning. Since both systems have the same left-hand-side, the pre-conditioner needs to be computed only once per Newton iteration.Displacement loading: In this case the external force vector in Eq. (6) is equal to zero, and the constraints depend on the load level:a=Caf+ap+λa^. Note that the vectorapaccounts for Dirichlet constraints that are not dependent on the load level λ. The solution update is then obtained by(13)(δafδλ)=[CTK(a)CCTK(a)a^hT(a)ChT(a)a^+q]−1(−CTfint(a)−ζ(a))andδa=Cδaf+δλa^. As for the case of force loading we apply a Sherman–Morrison procedure to solve this augmented system of equations.After each Newton–Raphson iteration, convergence is checked based on the residual of the displacement field solution and phase-field solution, i.e. the solution is accepted when(14)∥ru(amk)∥≤ϵu∥ru(a1k)∥and∥rd(amk)∥≤ϵd∥rd(a1k)∥,whereϵuand ϵdare tolerances for the displacement residualruand phase-field residualrd, respectively.Consider the sensitivity of the load level to the path-following parameter:(15)∂λ∂τ=Γ̇lc(h·∂a∂λ)−1=Γ̇lc(hd·∂ad∂λ)−1.From this expression it is evident that the path-following constraint will fail if the vectorhin Eq. (10) is orthogonal to the sensitivity of the solution vector. One particular situation in which this occurs is when there is no damage present at all, and hence∥h∥=0. This is, however, not the only situation in which problems occur. Also in the case that the phase field is rather insensitive to the load level (∥∂ad/∂λ∥≈0), the constraint equation fails. This situation is encountered in the case that elastic behavior occurs, which happens particularly in the cases of initial loading and unloading. For this reason, initially displacement control is used. The switch to the fracture-surface area constraint is made after a significant amount of fracture-surface area has been formed.Depending on the number of Newton–Raphson iterations the path-parameter increment is adjusted [16]. To this end a target number of Newton–Raphson iterations,mtarg, is specified. The path-parameter for the next increment is then scaled with a factormtarg/mwith a maximum ofΔτmax. Evidently, when the path-parameter increment is chosen too large, it can occur that the Newton–Raphson iterations do not converge withinmmaxiterations. In that case the Newton–Raphson procedure for the same step is repeated with the path-parameter increment scaled bymtarg/mmax.Taking the monolithic path-following procedure in Algorithm 1 for the case of displacement loading (ap=λa^) as a starting point, we derive a staggered path-following procedure. The most notable difference of this staggered algorithm compared to the monolithic Algorithm 1 is that no Newton–Raphson iterations are conducted and that the associated convergence criterion is omitted. A consequence of this is that an additional source of error is introduced in the staggered scheme, which, in practice, needs to be compensated for by using smaller load step sizes. By virtue of the fact that no (Newton) iterations are performed within a single time step, this staggered approach is, however, considerably faster per load step than the Newton procedure.Algorithm 2Staggered path-following procedure.Input: (a0,λ0),H0# State vector, load level & history fieldOutput:(a1,λ1),(a2,λ2), … ,(ansteps,λnsteps)# Discrete eq.path# Initializationcontrol=‘displacement’# Load stepsfork=1,…,nsteps:|ak,λk=staggered_solution_update(ak−1,λk−1,Hk−1,∂H∂λ|k−1,control)Hk,∂H∂λ|k=update_history_field(ak,Hk−1)control=select_control_equation(ak,Hk)endThe staggered procedure developed herein is outlined in Algorithm 2. In the following sections we study the staggered_solution_update procedure. In Section 4.1 we show how the displacement-controlled staggered procedure as proposed by Miehe et al. [2] follows as a simplification of the incremental-iterative procedure in the previous section. This procedure is employed in the initial stage of loading, when fracture propagation does not yet occur. In Section 4.2 the staggered fracture-controlled path-following procedure is derived as a simplification of the monolithic fracture-controlled procedure outlined in the previous section.Note that in Algorithm 2 the sensitivity of the history field with respect to the load parameter is evaluated along with the history field itself at the end of each load step. Evaluation of this sensitivity is required at the end of step k for the staggered fracture-controlled procedure and is given by(16)∂H∂λ|k={∂ψe+∂ε|k:ε^ψe+(εk)≥Hk−10otherwise,whereε^=∇s(∑I=1nuNIu(x)∂aIu∂λ)is the strain field sensitivity to the load level λ, with:(17)K∂a∂λ=0andconstraint∂a∂λ=C∂af∂λ+a^.In order to simplify notation, in the following sections we drop the superscript k indicating the load step. Instead, the initial state for a given load step is indicated by a subscript 0 (following the notation for the Newton–Raphson initial estimate) and the updated state is represented without sub- or superscripts, i.e.a=a0+Δaandλ=λ0+Δλ.A displacement-controlled simulation can be cast into the form of a path-following procedure by using the control equationζ=Δλ−λ̇Δτ(andap=λa^), from which it follows thath=0and q=1. The monolithic augmented system of equations (13) for the Newton–Raphson iterations is then given by(18)[KuuKud0KduKdd00T0T1](δauδadδλ)=(−fintu−fintdλ̇Δτ),with the constraintsδau=Cuδafu+δλa^uandδad=Cdδafd, where the constraints matrixChas been decomposed in a displacement partCuand a phase-field partCd.The system (18) can serve as the starting point for the derivation of a displacement-controlled staggered procedure. To this end, the updates after a single iteration are accepted as the solution increments, i.e.Δa=δaandΔλ=δλ. An approximate solution to the system is then obtained in three steps. In Step 1 the phase-field sub-problem is solved with the load level, displacement field and history field resulting from the previous load step. In Step 2 the load level is updated, and finally in Step 3 the displacement sub-problem is solved with the phase field as computed in Step 1 and the load level as determined in Step 2. These three sub-problems can be written in total form as:(19a)Kdd(H0)ad=−fintd(a0d,H0)+Kdd(H0)a0dad=Cdafd+apd(19b)λ=λ0+λ̇Δτ(19c)Kuu(a0u,ad)au=−fintu(a0u,ad)+Kuu(a0u,ad)a0uau=Cuafu+apu+λa^uFurther simplification using(20)fintd(0,H0)=fintd(a0d,H0)−Kdd(H0)a0d=−2∫ΩH0NddVandfintu(a0u,ad)=Kuu(a0u,ad)a0ufinally results in the control==‘displacement’ conditional block in the staggered_solution_update function shown in Algorithm 3. We note that this algorithm is equivalent to the staggered algorithm presented in Ref. [2].Using the fracture control equation (9), the monolithic augmented system of equations (13) for the Newton–Raphson iterations can be written as(21)[KuuKud0KduKdd00ThdT0](δafuδafdδλ)=(−fintu−fintdΓ̇lcΔτ),with the constraintsδau=Cuδafu+δλa^uandδad=Cdδafd, and withhdas defined in Eq. (10).Following the same procedure as for the case of staggered displacement control, the updates of the state vector and load level after a single Newton–Raphson iteration are accepted as the solution increments, i.e.Δa=δaandΔλ=δλ. In contrast to the case of displacement control discussed in the previous section, in this case there is no natural decoupling of the phase-field and the load level. An approximate solution to the system (21) is therefore obtained in only two steps. In Step 1 the combined phase field and load level system is solved, with the displacement field and history field following from the previous load step. In Step 2 the displacement sub-problem is solved with the phase field and load level as computed in Step 1. In total form, this results in the following sub-problems:(22a)[Kdd(H0)−f^d(a0d,∂H∂λ|0)hd(a0d)T0](adλ)=(−fintd(0,H0)−λ0f^d(a0d,∂H∂λ|0)Γ̇lc(τ−τ0)+hd(a0d)Ta0d)(22b)Kuuau=−fintu+Kuua0uwithad=Cdafd+apdandau=Cuafu+apu+λa^uand where the unit driving force is defined as(23)f^d(a0d,∂H∂λ|0)=−Kdu(a0d,∂H∂ε|0)a^u=∫Ω2(1−d0)Nd(ε^:∂H∂ε|0)dV=∫Ω2(1−d0)Nd∂H∂λ|0dV.Using the fact thathdTa0d=2Γ̇lcτ0this results in the control==‘fracture’ conditional block in the procedure shown in Algorithm 3. The augmented system of equations (22a) is solved using the Sherman–Morrison procedure.Algorithm 3Staggered solution update procedure.In this section the performance of the numerical algorithms outlined in the previous sections is studied. We will investigate the proposed numerical algorithms using two standard benchmark simulations: the single edge notched tension test (Section 5.1) and the single edge notched pure shear test (Section 5.2). Moreover, we will study the performance of the monolithic and staggered schemes for a tension test with multiple pre-existing fractures (Section 5.3). In contrast to the two benchmark tests, this simulation demonstrates the performance of the algorithms in the case of fracture interactions.For all simulations we assume plane strain conditions. The first Lamé parameter is taken asλ=121.15kN/mm2, while the second Lamé parameter (or shear modulus) isμ=80.77kN/mm2. The critical energy release rate equalsGc=2.7·10−3kN/mm.We consider a two-dimensional square specimen of size1×1mm2with a horizontal notch starting at the left boundary and ending in the middle of the specimen (Fig. 2a). The bottom boundary is constrained in the vertical direction and is free to move in the horizontal direction. In order to eliminate rigid body motions, the bottom-left corner point is also constrained in horizontal direction. The top boundary is stretched in vertical direction, and free to move horizontally. For all simulations in this section the phase-field length scale is taken aslc=0.015mm. Linear triangular meshes for both the displacement field and phase field have been used, with local mesh refinement along the anticipated crack path. The number of elements for the various meshes is reported in Fig. 2b, where h is the characteristic element size in the refinement region.Below we will study the performance of three solution algorithms for this test case: the displacement-controlled staggered scheme as employed in e.g. Ref. [2], the fracture-controlled Newton–Raphson scheme as outlined in Section 3, and the fracture-controlled staggered scheme proposed in Section 4.In this subsection we consider the solution obtained by the displacement-based staggered solution procedure as proposed by Miehe et al. [2]. The motivation for considering this solution procedure is to study the dependence of the solution on the selected displacement increment size and to enable direct comparison with fracture-controlled schemes. This study provides insight in the performance of staggered solution procedures compared to the monolithic scheme considered in this work.In Fig. 3we study the influence of the mesh size by consideration of meshes with characteristic element sizes ofh=lc/2,lc/4,lc/6andlc/8in the region where the crack is anticipated to propagate. For all simulations a relatively large step size ofΔu¯n=1·10−5mmis used. Figures 3a and 3b depict the dependence of the response on the selected mesh size. As observed, the measured response converges upon mesh refinement. Based on these observations, in the remainder of this section we will employ a fixed mesh size with a characteristic element size ofh=lc/6in the refinement region.In Fig. 4we study the dependence of the response on the selected step size,Δu¯n. From the force–displacement curves we observe that the overall dissipation is overestimated when using too large step sizes. On one hand this is explained by the fact that a too large step size delays the instance of propagation, i.e. the phase field reaches a value of 1 at a later moment than for a smaller step size (Fig. 4c). On the other hand we observe that the overall crack length is considerably overestimated for too large step sizes (Fig. 4b). In Fig. 5we illustrate the primary reason for this overestimation by considering the phase field atΓlc≈0.4mmfor step sizes ofΔu¯n=4·10−5mmandΔu¯n=0.5·10−5mm. As can be seen, the delay in the update of the phase field due to the use of the staggered solution procedure causes the crack to widen, and hence the total fracture length (Γlcatu¯n=0.009mm) to be overestimated. In Table 1we report the computed peak force values (Fpeak) and its corresponding displacement (u¯n,peak), as well as the crack length atu¯n=0.009mm(Γult). From the results in Table 1 it can be inferred that all reported quantities converge linearly under step size refinement.Evidently, using uniform step sizes is not optimal in terms of computational effort versus step size error. For example, relatively large step sizes can be used in the elastic regime. As we will see in Section 5.1.3, the fracture-based scheme provides a natural adaptive refinement strategy.In this section we study the monolithic fracture-controlled scheme (Algorithm 1) with and without adaptive crack size increments. As outlined in Section 3.3.3, we use displacement control to initiate the solution procedure. In this caseΔu¯n=1·10−4mmis used. When the crack length increment exceedsΔΓswitch=1·10−5mm, the switch is made to fracture control. This choice forΔΓswitchis based on the fact that it should be considerably larger than the machine precision, and considerably smaller than the representative element size h, since the switch to fracture control should be made well before the fracture starts to propagate. The obtained solution was observed to be insensitive to variations in this switching value.In Fig. 6a we show the force–displacement curves for the case in which the fracture surface incrementΔΓis kept fixed. We observe that for all simulations the Newton–Raphson procedure with a tolerance of1×10−5fails to converge at some point in the incrementation process after softening and/or snapback has occurred. This is caused by the fact that the initial estimate for the Newton procedure is outside the radius of convergence of the Newton procedure. In line with this is the observation that decreasing the step size increases – albeit moderately – the extend to which the equilibrium path can be computed. A notable difference between these monolithic results and the staggered results presented above is that the errors due to the staggered steps are completely eliminated, i.e. virtually the same result is obtained independent of the selected crack length increment.In order to track the complete equilibrium path we have employed the adaptive scheme as discussed in Section 3.3.3 withmtarg=4. The results are presented in Fig. 6b. With this adaptive step size increment, the same equilibrium path is recovered regardless of the maximum allowable increment. In fact, the maximum step size increment is ineffective as a result of the limitation imposed by the target number of Newton iterations. We observe that the monolithic solution procedure is very effective in capturing the peak load. The computed value ofFpeak=715.26Nis free of the step size errors introduced by the staggered procedure in Section 5.1.1, and can be obtained in relatively few steps. In addition, the fracture-controlled Newton scheme is capable of tracking the snap-back part of the equilibrium path.The origin of this snap-back behavior is that at the crack tip a phase field needs to nucleate. In the case that we enrich the tip of the pre-existing fracture with a phase field (see Appendix Appendix C) – thereby regularizing the stress field around the tip – this snap-back feature vanishes (Fig. 7).As for the monolithic scheme discussed above, for the fracture-controlled staggered scheme we use an initial displacement step size ofΔu¯n=1·10−4mmand switch to the fracture-controlled scheme when the crack length increment exceedsΔΓswitch=1·10−5mm. In Fig. 8the results are shown for various crack length increments, and some solution characteristics are collected in Table 2.It is observed that as for the displacement-controlled staggered solution procedure, an error is introduced by this staggered scheme. For the quantities in Table 2 this error is observed to decrease at least linearly with the selected step size. Compared to the displacement-based scheme, the fracture-controlled staggered scheme has two advantages. First, under step-size refinement it converges to the Newton–Raphson solution, including snap-back behavior. Such convergence is not observed for the displacement-based staggered scheme of Section 5.1.1. A second advantage is that the step size for the fracture controlled simulation can be selected conveniently by relating it to the representative element size (h). This permits us to allow for the gradual motion of a crack through the mesh, i.e. the crack is not permitted to propagate through multiple elements in a single step whenΔΓis limited by the element size. As indicated above, the fracture-controlled procedure serves as an automatic displacement step size adjuster. This is shown in Fig. 9where the displacement step size is plotted versus the step size number. As can be seen, the staggered scheme automatically accounts for a smaller (or even negative) displacement increment when crack propagation occurs.In Table 2 we also compare the monolithic scheme with adaptive step size with the staggered scheme for various step sizes. We observe that the monolithic scheme on average has a step size,ΔΓ, comparable to the staggered scheme withΔΓ=12h. Also the number of steps to track the shown equilibrium path is similar (488 for the monolithic scheme vs. 529 for the staggered scheme), but evidently the number of linear system solves for the monolithic scheme is considerably higher (1210 for the monolithic scheme vs. 529 for the staggered scheme) and in addition each system solve in the monolithic scheme is computationally more expensive. The error related to the staggered procedure remains limited to a few percent for both the peak load and the overall crack length. When comparing with the displacement-controlled staggered scheme withΔu¯n=2·10−5mm(Table 1), for which a similar number of system solves is required (500), we observe that the fracture-controlled staggered scheme provides a better approximation of the peak load and total crack length than the displacement-controlled scheme. For the peak load the obtained improvement is moderate, and can be attributed to the fact that the fracture-controlled scheme automatically provides displacement step size adjustments. A significant improvement is obtained for the total crack length, which is a consequence of the fact that the displacement-controlled scheme fails to account for the snap-back behavior. For the staggered scheme withΔΓ=14ha similar number of system solves is required as for the monolithic scheme. In this case errors of less than 2% in the peak load and crack length are obtained.In this section we investigate the setup represented in Fig. 10a. The geometry is identical to that considered for the tension simulation discussed above, but pure shear boundary conditions are used. This means that the vertical displacement component is constrained on all four sides of the domain. Moreover, the bottom boundary is constrained horizontally, and a prescribed horizontal displacement,u¯s, is applied to the top boundary. The same material parameters are used as for the tension simulation. The fracture length scale is equal tolc=0.015mm. In order to accurately capture the phase-field evolution, the mesh is refined along the anticipated crack path (Fig. 10b). The characteristic element size in this refinement region ish=lc/4=0.00375mm, which results in a mesh with 26472 elements.In Fig. 11we study the convergence of the displacement-based staggered solution procedure under step size refinement. We observe very close agreement with the results reported in literature [2]. Using the fracture-controlled Newton–Raphson procedure with adaptive step size andΔΓmax=2h(Fig. 12) we observe that the bump in the force–displacement curve at crack nucleation is related to the occurrence of snap-back, a phenomenon not captured by the displacement-based staggered scheme. By comparison with the results with phase-field tip enrichment, we observe that this snap-back behavior is closely related to the nucleation of the phase-field fracture at the tip of the pre-existing fracture.In Fig. 13we study the influence of the crack-length increment size for the fracture-controlled staggered solution procedure. This figure conveys that the staggered procedure converges to the monolithic result as the step size decreases. In Table 3we compare the monolithic and staggered scheme for various quantities of interest. The total crack lengthΓultis measured atu¯s=0.016mm. The peak load and total crack length are observed to converge at least at a linear rate. As for the tensile test we observe that the crack path is predicted appropriately by the staggered scheme for relatively large step sizes. ForΔΓ=h/2we observe errors of a few percent, while the involved number of system solves is considerably smaller than for the monolithic scheme.We finally study the performance of the fracture-based path-following schemes for a test case with complex fracture surface evolution. To this end we consider a1×1mm2tensile test with six, randomly distributed, pre-existing cracks (Fig. 14). The discretized displacement field is discontinuous over the pre-existing cracks, which is established by aligning the elements of the bulk material with the pre-existing cracks and duplicating the nodes on the cracks. An irregular triangular finite element mesh with 28826 equal-sized linear elements and 14700 nodes is used to discretize the bulk material. The element length along the boundaries and pre-existing cracks ish=0.01mm. The same material parameters as for the test cases discussed above have been used. The crack length scale is equal tolc=0.025mm.In Fig. 15we show the solutions obtained by the monolithic scheme, with and without tip enrichment. As for the above experiments we observe overshoots in the response curve in the case that the pre-existing tips are not regularized by a phase field. This effect is here more pronounced due to the fact that the elements around the tips are relatively coarse (the same element size is used throughout the complete domain). Evidently, due to the iteration-based step size adjustment strategy, the monolithic scheme is capable of tracking the snap-back paths.In Fig. 16we show six snapshots of the fracture evolution pattern. The labels (a)–(f) are reflected in the force–displacement diagram in Fig. 15b. Initially, the specimen is loaded elastically (a), until pre-existing crack 2 propagates toward the right edge of the specimen (b). When this happens, the specimen unloads, after which a secondary crack propagates from the bottom tip of pre-existing crack 2 (c) and merges with pre-existing crack 1 (d). After another unloading stage, finally pre-existing crack 1 propagates toward the left edge of the specimen (e) until it reaches the left edge and the specimen lost all its load-carrying capacity (f).In Fig. 17we show the force–displacement curves computed using the staggered path-following scheme withΔΓ=h,h2andh4. We observe that already with a step size of h, the correct fracture pattern is predicted. The effect that the energy dissipation is increased is also observed here. As the step size decreases, the force–displacement curve converges toward the Newton–Raphson case. It is important to note here that since the fractures evolve in stages, during the fracture process there is always one dominant fracture. This allows for the interpretation that the crack extends by approximately a single element in the case thatΔΓ=his used. In the case that the evolution of a secondary crack is non-negligible, effectively a smaller crack incrementation length (per crack) is used. In this sense, the choice of the crack length increment is a conservative choice, which permits its usage also in the case of complex fracture evolutions as considered here.In Table 4the monolithic scheme and staggered schemes with various fracture surface increments are compared in terms of the predicted fracture strength and total crack length. For all simulations regularized pre-existing crack tips are considered. We observe errors of a few percent for the staggered scheme with a step size ofh/4, which is in agreement with the observations of the benchmark simulations discussed above. In terms of the number of system solves, this staggered simulation requires approximately half the number of solves of the monolithic scheme.

@&#CONCLUSIONS@&#
In this contribution we studied the application of a fracture-based path-following constraint for the simulation of phase-field cracks. The employed constraint is closely related to the dissipation-based constraint proposed in [16], but is formulated in terms of the phase field instead of stresses and strains (and rates thereof). Formulation of this constraint in terms of the phase field invokes a natural decomposition of the phase-field problem and the elasticity problem. Based on this decomposition, we developed a fracture-controlled staggered solution procedure. The derivation of this staggered procedure proceeds in essentially the same manner as the derivation of the commonly used displacement-based staggered scheme [2] from a displacement-controlled monolithic solution procedure.There are two advantages to the use of a fracture-controlled path-following constraint. First, this constraint permits for the simulation of snap-back phenomena. In the studied numerical examples we have observed that snap-back is typically encountered when a phase-field crack nucleates from a sharp crack tip. By enriching the tips of pre-existing fractures with a phase field, this snap-back behavior vanishes. The fracture-controlled constraint opens the doors to a systematic study of this snap-back behavior, but this study is considered beyond the scope of this manuscript. The second advantage of fracture-control is that it provides a natural way to select the step size increments, this in contrast to the displacement-controlled staggered procedure. By requiring that the cracks propagate gradually through the mesh, the step size can be related to the characteristic element size. We have demonstrated that also in the case of multiple cracks this way of selecting the fracture step sizes renders meaningful results.We have studied the performance of the fracture-controlled monolithic and staggered solution procedures. Evidently, an advantage of the monolithic scheme is that in every step the non-linear system to compute the solution updates is solved exactly (up to the precision of the Newton–Raphson process). In contrast, the fracture-based staggered scheme introduces an additional source of errors by not resolving the non-linearities in every step. The advantage of the staggered scheme is, however, that it is computationally cheaper per load step by virtue of the fact that only a single decoupled elasticity problem and phase-field problem is solved. In the studied numerical examples we have found that the staggered scheme is capable of computing typical quantities of interest such as the peak load and total crack length with errors of a few percent when step sizes of half the representative element length scale are used. Overall it can be concluded that when a high accuracy is required, the monolithic scheme is preferred. When minor inaccuracies are acceptable, the staggered procedure can be expected to outperform the monolithic scheme in terms of computational effort.We note that herein we have considered a staggered solution procedure with a single iteration per load step. It is possible to improve the accuracy of this staggered procedure by using multiple sub-iterations per load step. This will provide the opportunity to make a trade-off between computational effort and solution accuracy. A detailed study of a staggered solution procedure with sub-iterations is a topic of further study.