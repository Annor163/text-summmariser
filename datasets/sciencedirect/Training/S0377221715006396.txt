@&#MAIN-TITLE@&#
Optimal product line pricing in the presence of budget-constrained consumers

@&#HIGHLIGHTS@&#
First study of the product line pricing problem with budget-constrained consumers.Consideration of both optimal and heuristic types of consumer purchase behaviour.Proposition of mixed-integer linear programming formulations for the problem.Development of a branch-and-bound procedure with problem-specific bound arguments.Extensive simulation study to evaluate the procedure and derive managerial insights.

@&#KEYPHRASES@&#
Pricing,Mixed-integer programming,Branch-and-bound,Knapsack constraints,

@&#ABSTRACT@&#
The product line pricing problem is generally defined as a seller's task to determine the optimal prices for each product in a product line while accounting for both demand-side and supply-side restrictions. In this paper, we contribute to the existing literature by incorporating consumers’ budget considerations into the seller's optimisation problem. Despite playing an important role in many applications, such as the pricing of tickets for sporting or theatre seasons, budget constraints have not been considered in the academic literature in the context of product line pricing to date.By building on the assumptions and the model formulation recently proposed in a previous study by [Burkart, W. R. et al. (2012). Product line pricing for services with capacity constraints and dynamic substitution. European Journal of Operational Research, 219(2), 347--359] for standard product line pricing, we propose a number of new mixed-integer linear formulations assuming budget-constrained consumers. The formulations differ in terms of how consumers handle their individual budget limitations. To solve the underlying problems, we propose a customised branch-and-bound procedure that relies on various novel problem-specific bound arguments explicitly exploiting the consumers’ budget limitations. Experimental tests show that the branch-and-bound procedure clearly outperforms IBM ILOG CPLEX, which is unable to solve problems for even medium-sized instances. Furthermore, based on a number of scenarios, we derive managerial insights regarding, e.g., the overall impact of considering budget constraints on the seller's revenue as well as the impact of correctly anticipating the type of consumer purchase behaviour.

@&#INTRODUCTION@&#
In general, a product line is defined as a set of several closely related products, such as goods or services, which are separately offered by a single seller. A product line can comprise related products of various sizes, types, colours, qualities, or prices that satisfy the same general needs and may be marketed together (Monroe & Zoltners, 1979). Product lining is different from product bundling, where several products are combined into one group, which is then offered for sale as a unit (cf., e.g., Chakravarty, Mild, & Taudes, 2013 and Mayer, Klein, & Seiermann, 2013). The seller's task to determine the optimal prices for each product in a line while accounting for both demand-side and supply-side restrictions is generally referred to as the product line pricing problem. In the academic literature, this problem was first formalised by Dean (1950).Most researchers focus on product lines in which the products are substitutes from a consumer's point of view, each destined for the same overall market (cf., e.g., Phillips, 2005, chap. 4.3.5 or Rao, 2009, chap. 10). Setting the prices within the product line then mainly aims at extracting different consumers’ willingness-to-pay and is in fact an implementation of price differentiation. In this context, a number of optimisation models and procedures have been proposed, mainly in the marketing and operations research literature (cf., e.g., Burkart, Klein, & Mayer, 2012; Chen & Hausman, 2000; Day & Venkataramanan, 2006; Dobson & Kalish, 1988, 1993; Green & Krieger, 1985; Hanson & Martin, 1996; Kraus & Yano, 2003; Reibstein & Gatignon, 1984; Shioda, Tuncel, & Myklebust, 2011; Zufryden, 1982). They often also include product line selection, i.e., deciding which products to offer.Regarding the supply-side restrictions, some of the authors consider the limited inventory of the offered products (cf., e.g., Burkart et al., 2012), implying dynamic substitution effects in the case that products become unavailable for consumers during the sales process. Indeed, service providers in particular often face strong capacity constraints, as the total supply is limited by external factors that do not allow for an adaption of capacity in the short run (cf., e.g., Kimes, 1989). Examples include selling tickets for sporting or theatre events, where the number of saleable tickets is limited by the number of available seats and selling advertisement time and space in TV and newspapers, respectively.Considering the demand-side, an essential part of any product line pricing model is how the consumer purchase behaviour is incorporated, as consumers can self-select their desired purchase option. The literature usually assumes risk-neutral consumers who make fully rational decisions and maximise their individual utility. Although some researchers model consumer purchase behaviour by a discrete choice model in this context (cf., e.g., Bitran & Ferrer, 2007; Gallego & Wang, 2014; Hanson & Martin, 1996), the most common approach in the literature on pricing to capture consumer behaviour is the deterministic max-surplus choice rule based on consumers’ valuations. Represented by two well-known concepts based on reservation prices, i.e., individual rationality (or participation) and incentive compatibility, this choice rule can be incorporated into optimisation models or analytical approaches (cf., e.g., Dobson & Kalish, 1993; Green & Krieger, 1985; Shioda et al., 2011).Given this emphasis on detailed modelling of the effect of consumers’ individual valuations on their purchase behaviour, it is surprising that little attention has been paid to individual budget constraints as limiting resources on the demand-side in the literature on product line or bundle pricing. Budget considerations are particularly necessary if not all products of a product line are substitutes, such that consumers can decide to purchase several products at once. In this case, consumers may not be able to buy all products that yield a positive individual surplus (which is defined as the difference between valuation and price); instead, they can only select a subset of the relevant products to keep to their available budget while striving to maximise their surplus. Originating in the 19th century, budget constraints have been intensively discussed and analysed in the field of neo-classical microeconomics. Despite the economic implications of existing budget constraints, they have attracted little interest in the traditional operations research stream of research; however, this interest is growing, e.g., in the context of multi-product or combinatorial auctions and mechanism design, situated at the interface of economics and operations research. Undoubtedly, there are many real-world examples where the available budget has a strong influence on the consumers’ purchase decisions when selecting from a product line. Using the example of ticket pricing for sporting or theatre events, consumers facing a limited budget may be restricted to purchasing only a subset of the tickets for all events of a certain season that yield a positive surplus. Similarly, firms that want to promote their products or services in TV commercials or banners on websites must carefully decide on the duration, time, and location of the promotion subject to their advertising budget. Other examples include tour operators, who usually publish their package coach tours in a seasonal brochure in advance. Consumers then have to book their preferred trips subject to their travel budget.To address the resulting research gap, in this paper, we introduce the product line pricing problem with budget-constrained consumers. More specifically, the contributions of our work are as follows:•First, we propose a mixed-integer linear programming model (MILP) for the product line pricing problem with budget-constrained consumers. The problem specification also contains capacity constraints and thus dynamic substitution such that the resulting model can be observed as a natural extension of that proposed by Burkart et al. (2012) for product line pricing under capacity constraints and substitutable products. We argue that the problem is NP-hard and thus potentially difficult to solve in general. Furthermore, we present MILP formulations for two variants of the original problem differing in terms of the assumptions regarding consumer purchase behaviour. More precisely, we consider the case that consumers may not be able to precisely determine their optimal purchase option given their individual budget constraint, behaving heuristically instead. This type of limitation is quite common in the context of the theory of bounded rationality (cf., e.g., Kahneman & Tversky, 1979 or Gigerenzer & Gaissmaier, 2011). Particularly, it has extensively been discussed in the economic literature on the so-called classical consumer problem, of which our model of consumer purchase behaviour is an instance (cf. Section 2.2).Second, we develop a customised branch-and-bound procedure to solve the original problem as well as the variants to optimality. In this context, special emphasis is put on the development of a number of problem-specific bounds that partly extend existing bound arguments in product line pricing to the new setting and partly rely on new considerations specifically arising from the budget constraints.Third, regarding the original problem, we demonstrate that applying the proposed branch-and-bound procedure clearly outperforms solving the corresponding MILP formulation with the standard software package IBM ILOG CPLEX (henceforth, CPLEX). In particular, we present details from a comprehensive numerical study considering problem classes of typical sizes investigated in the former literature on standard product line pricing. We first examine the performance of the different proposed bound arguments and calibrate the branch-and-bound procedure accordingly. Next, we compare the performance of the branch-and-bound procedure with the performance of CPLEX. It turns out that even though the problem itself is much more complicated than the standard product line pricing problem without budget constraints, all problem classes can be solved to optimality by the branch-and-bound procedure. In contrast, we show that applying CPLEX requires a much higher runtime and is impossible for even medium-sized problem classes.Fourth, we derive managerial insights by evaluating, e.g., in detail the profit losses experienced in the case that the consumers’ budget limitations are neglected by the seller. It turns out that the optimised prices are significantly influenced by the anticipation of the budget constraints and, as a consequence, the revenues increase and decrease correspondingly. In contrast, the loss in revenue is rather limited if the seller optimises prices assuming heuristic consumer behaviour while in fact the consumers behave optimally, and vice versa. Interestingly, however, the heuristic problem variants can be solved substantially faster. Furthermore, we state and discuss a number of observations regarding the optimal prices depending on the parameters of the specific problem class, leading to additional managerial insights.The paper is structured as follows: In Section 2, we formally present the product line pricing problem with budget-constrained consumers and introduce the relevant notation. We also formalise the demand model reflecting consumer behaviour, as well as the corresponding assumptions underlying the problem variants. In Section 3, we present the MILP formulations for the original problem as well as the problem variants. In Section 4, we propose the customised branch-and-bound procedure to solve these problems. Section 5 contains the performance analysis. In Section 6, we present the managerial insights. The main results of the paper are summarised in Section 7.The basic problem assumptions are in line with the assumptions from the existing product line pricing literature incorporating capacity constraints (cf., e.g., Burkart et al. (2012)). In particular, we consider a seller who has to determine static product-specific prices pjfor J products(j=1,…,J)at the beginning of a selling period. We assume that the initial capacity of each product j is fixed at c0jand that there are no additional variable costs linked with selling a product, such that the seller simply aims to maximise his total revenue. Note that – in line with the existing literature – we use the term ‘capacity’ referring to the number of available supply units, in spite of the discrete nature of the parameter. The set of possible prices is discrete. Hence, the seller has to select a price for each product j out of a set of discrete price points{pj1,…,pjNj}. In this section, for ease of presentation, letpj∈{pj1,…,pjNj}denote the selected price point for product j. Subsequently, I consumers(i=1,…,I)arrive consecutively during the selling period. Each time a unit of a product is sold to a consumer i the corresponding remaining capacity is reduced by one. The remaining capacity of product j after handling consumer i is denoted by cij, and we call it available for consumer i ifci−1,j>0. The consumers(i=1,…,I)appear in the sequence of their numbering and evaluate the available products subject to the effective prices. The monetary valuation of consumer i for product j is represented by a reservation price (or valuation) denoted by vij≥ 0, and, on this basis, the surplus sijfor product j is defined as the difference between the valuation and the respective price, i.e.,sij=vij−pj. Applying the max-surplus choice rule, consumers act according to the following two assumptions (cf., e.g., Talluri & van Ryzin, 2004, chap. 8.3.3.3). First, an available product j may only be bought if the participation constraint (PC) is satisfied, i.e., if the corresponding obtainable surplus is nonnegative (sij≥ 0). We call such a product acquirable. Second, the incentive compatibility constraint (IC) claims that there is no purchase alternative that yields a higher utility (i.e., overall surplus) than the subset of products that is selected by the consumer. In this context, the budget constraints we additionally consider in this paper become relevant. A consumer i may not simply self-select all products that are acquirable. In fact, the sum of the prices of the products that consumer i selects for purchase must not exceed the available budget Bi; we call such a subset of acquirable products affordable. Regarding the consumers’ ability to solve the IC, i.e., to figure out which subset of affordable products leads to the highest utility, we distinguish between four types of consumer behaviour, which are outlined in the following subsections.We first consider the case that consumers maximise their utility exactly. The resulting decision problem for a consumer i evaluating the products j at the given prices pjcan be formalised by a binary linear program that maximises the surplus the consumer receives when making a purchase. With binary decision variables xjindicating whether product j is contained in the selected set of consumer i andJi={j∈{1,…,J}|ci−1,j>0∧sij≥0}denoting the set of acquirable products, this program can be stated as follows:(1)Max∑j∈Jixjsij(2)s.t.∑j∈Jixjpj≤Bi(3)xj∈{0,1}forallj∈JiThe objective function (1) maximises the sum of the surpluses of all products being selected. Constraint (2) ensures that the sum of the corresponding prices does not exceed the budget. Constraints (3) are the definition of the binary variables. Note that as only acquirable products are considered in the formulation, the PC is satisfied. In addition, maximising (1) under (2) simultaneously ensures that the IC is fulfilled. In the event that no product is acquirable (Ji=∅)or no subset of acquirable products is affordable, consumer i leaves without buying anything. Technically, (1)–(3) is the model of a standard knapsack problem with|Ji|elements, weights sij, and size Bi.The way consumers optimally solve the IC – as given by (1)–(3) – is an instance of the classical consumer problem known from neoclassical consumer theory. In this context, many economists agree on the fact that the underlying assumptions of rational behaviour are often not very plausible in practice, at least when being literally interpreted (cf., e.g., Gilboa, Postlewaite, & Schmeidler, 2010). One of the criticised assumptions is that consumers are aware of all the potential product bundles that fit in their budget. In fact, this implies that consumers need to solve a very complex decision problem. The combinatorial aspects of the classical consumer problem have explicitly been discussed in the literature (cf., e.g., MacLeod, 1996). Indeed, in the context of our model, already for a supposedly small number of|Ji|=6acquirable products, up to26=64potential bundles would have to be evaluated by a consumer i. Gilboa et al. (2010) show that not only the number of possible bundles grows exponentially in the problem parameters, but the problem is even NP-complete, i.e., it is complex in a formal sense. This implies that even latest computer technology cannot solve larger instances of the problem, making it unlikely that consumers can do so. Even more, opposed to some other prominent behavioural effects discussed by economists (cf., e.g., the framing of decisions investigated by Tversky & Kahneman, 1981), resulting deviations from neoclassical consumer theory cannot simply be seen as ‘careless mistakes’ that can be solved by being careful enough (cf. Gilboa et al., 2010). Overall, it is very likely that consumers apply a kind of heuristic approach to figure out their purchase decisions, that is, they show bounded rationality in their behaviour. Nevertheless, it is reasonable to assume that heuristic behaviour regarding a product line is not completely uninformed, but the result of some assessment. Therefore, in the following subsections, we present two heuristics – greedy consumer behaviour and look-ahead consumer behaviour – that both explicitly incorporate exact information on the budget, the prices, and the consumers’ reservation prices. To further justify the use of bounded rationality as well as the relevance of the two heuristics in our setting, we additionally performed an informal test with a class of 25 OR-students at advanced bachelor-level. Interestingly, when giving them the result of the look-ahead heuristic for a problem instance withJ=6products, nearly all of them explicitly confirmed the optimality of the solution, even though it was not optimal. Even after having explained them how the heuristic works, they did not doubt that this procedure leads to the optimum.First, we consider consumers who select the products they purchase in a greedy manner. More precisely, each consumer i adds acquirable products to her purchase according to the corresponding surplus sijshe receives from the product. The resulting algorithm can be stated as follows:1.Sort the acquirable products in decreasing order according to sij:Priority list〈ti1,…,tik,…ti|Ji|〉withtik∈Jifork=1,…,|Ji|, tik≠ tilfork,l=1,…,|Ji|and k ≠ l, andsitik≥siti,k+1fork=1,…,|Ji|−1Initialise the remaining budget bi:bi:=Bi.Loop over all acquirable products in decreasing order of the consumer surplusk=1,…,|Ji|:Ifbi≥ptik:xtik:=1andbi:=bi−ptik.Second, we consider consumers who follow a look-ahead approach. In extension to greedy behaviour, they explicitly consider the budget consumption when calculating the surplus of a product. More precisely, products are added to the purchase according to the corresponding relative surplussijrel, i.e., the consumer surplus relative to the price that has to be paid. The resulting algorithm is a straightforward extension of that presented above for greedy consumers by simply replacing sijwithsijrel, which is calculated bysijrel:=(vij−pj)/pj. Note that, technically, this procedure is closely related to the well-known standard procedure for solving the continuous knapsack problem (cf. Dantzig, 1957).To illustrate the problem setting and assumptions, we provide a brief example, allowing us to compare the sales processes for the different types of consumer behaviour. The seller offersJ=3single products with an initial capacity ofc0j=2∀j∈{1,2,3}. Pursuing the objective to maximise his revenue, he can choose prices pjfor all of the products j out of a set of discrete price pointspj∈{5,10,…,100}. Table 1 depicts the reservation prices ofI=3consumers, who arrive during the selling period together with the (relative) surplus for an arbitrary chosen price vectorp=(60,40,50). The products that are selected by a consumer are highlighted in grey.First, we see that in this example, given the price vector, all three types of consumer behaviour lead to different overall sales processes and even different obtained revenues of 240, 250, and 210. We now specifically discuss the differences between optimal, look-ahead, and greedy behaviour. For consumeri=1, the set of selected products assuming optimal behaviour is identical to that under look-ahead behaviour but different from that under greedy behaviour. Specifically, a greedy consumer buys productj=1due to the high absolute surpluss11=15, implying that no other products can be purchased according to the budget constraint. In contrast, optimal as well as look-ahead behaviour ‘recognises’ this circumstance, and the consumer selects the other two products, leading to a higher overall surplus. For consumeri=2, the look-ahead behaviour fails to be optimal, while the greedy behaviour is in line with the optimum. First note that any two of the three products could potentially be bought due to the budget constraint. Next, productj=2comes along with the highest relative surpluss22rel=0.23, leading to a purchase of productsj=2andj=1under look-ahead behaviour. However, it is obviously preferable to add productj=3to the purchase instead of productj=2because although the relative surplus of productj=3is lower, its absolute value is higher than that of productj=2(s23=10>s22=9), and it fits into the given budget as well. We now turn to consumeri=3. For her, due to the given price vectorp, productj=3is not acquirable because the PC is not satisfied (marked with (PC)). Regarding the other products, the situations for different behaviours differ because of the differences that occur for the predecessors. More precisely, while under optimal behaviour, both products are still available, under look-ahead and greedy behaviour, productsj=2andj=1are already sold out (marked with (c)), leading to different purchase decisions.In this section, we develop MILP formulations for each of the different consumer behaviour variants of the product line pricing problem described in Section 2, incorporating both budget and capacity constraints. The common notation for the model formulations is shown in Table 2. As the formulations become more complex with an increasing level of sophistication of the consumer behaviour, we begin with the description of the model with the simplest heuristic behaviour, i.e., greedy behaviour, and continue with look-ahead and optimal behaviours.The product line pricing problem assuming greedy consumer behaviour, as described in Section 2.2.1, can be formulated as a mixed-integer linear program as follows (MILPgreedy):(4)Max∑i=1I∑j=1J∑n=1Njxijnpjn(5)s.t.∑n=1Njπjn=1forallj(6)cij=ci−1,j−∑n=1Njxijnforalli,j(7)∑n=1Njγijn≤ci−1,jforalli,j(8)γijn≤πjnqijnforalli,j,n(9)γijn≥qijn+πjn+ci−1,jc0j−2foralli,j,n(10)xijn≤γijnforalli,j,n(11)∑j=1J∑n=1Njxijnpjn≤Biforalli(12)Bi−∑k=1J∑m=1Nkxikmpkm+ϵ≤∑n=1Nj(γijn−xijn)pjn+(1+∑n=1Nj(xijn−γijn))Miforalli,j(13)(Bi−∑l≠j∧l≠kl=1J∑n=1Nlplnxiln−∑n=1Njpjnπjn+ϵ)/Mij≤(1−ρijk)foralli,j,k:j≠k(14)(∑l=1l≠j∧l≠kJ∑n=1Nlplnxiln+∑n=1Njpjnπjn−Bi+ϵ)/Mik′≤ρijkforalli,j,k:j≠k(15)∑m=1Nkxikm≤1+∑n=1Njxijn+(∑m=1Nksikmγikm−∑n=1Njsijnγijn)/Mik′′+ρijkforalli,j,k:j≠k(16)cij≥0foralli,j(17)ρijk∈{0,1}foralli,j,k:j≠k(18)xijn,πjn,γijn∈{0,1}foralli,j,nThe objective function (4) maximises the seller's total revenue by aggregating the purchase decisions of consumersi=1,…,I. In the event that consumer i purchases product j at price point pjn, i.e., ifxijn=1, the corresponding revenue is included in the objective function value. Constraints (5) ensure that exactly one price point pjnis selected for each product j. In constraints (6), the capacity of each productj=1,…,Jis reduced by 1 after each consumer i if she bought the respective product. Constraints (7)–(9) control the value of the auxiliary variable γijn, which indicates whether product j is acquirable at price point pjnby consumer i. Constraints (7) force the value of γijnto 0 if product j is not available, and constraints (8) force it to 0 in the case that the corresponding price point pjnis not chosen or the PC is not satisfied for consumer i. On the other hand, if all three conditions are satisfied, γijnis forced to 1 by constraints (9). Constraints (10) link the auxiliary variables γijnto the decision variables xijnby preventing a purchase in the case thatγijn=0. Constraints (11) ensure that the total price consumer i pays for the purchase does not exceed her available budget.Constraints (12) ensure that no consumer i is allowed to save a part of her budget if acquirable products are still available. The remaining budget after the purchase decision has to be smaller than the price pjof each product j that is acquirable(γijn=1)but not yet selected(xijn=0). Otherwise, if product j is either not acquirable or already selected, the right-hand side of (12) takes on a sufficiently large value Miand the constraints are not binding. Constraints (13) and (14) control the values of the new binary auxiliary variables ρijkfor each consumer i and each pairwise comparison of products j and k. Each of these variables, which are needed in (15) when analysing a certain product k, indicates whether the budget is sufficient for additionally purchasing a product j. More precisely, due to constraints (13), if the remaining budget after considering the purchase decisions of all products l ≠ (j∨k) is sufficient for also purchasing product j, the left-hand side of (13) is positive, and ρijkis forced to 0. Otherwise, ρijkis forced to 1 due to (14). Finally, constraints (15) assure that the purchase decision is made according to decreasing values of the surplus sijn. They ensure that a product k cannot be bought if an acquirable product j ≠ k, which yields a higher surplus and would alternatively fit into the consumer's budget (ρijk=0), is not selected(∑n=1Njxijn=0). In contrast, in the case that product j has a positive surplus but cannot be chosen because the consumer's budget Biis no longer sufficient, it might be possible for consumer i to choose product k. Then,ρijk=1due to (14), and the right-hand side of (15) is larger than 1, which allows the term∑m=1Nkxikmto equal 1. If product j is already selected, constraints (15) do not limit the decision for product k. Note that we can setMi:=Bi+ϵin (12),Mij:=Bi−pj1+ϵin (13),Mik′:=∑l=1,l≠kJplNl−Bi+ϵin (14), andMik′′:=vik−pk1in (15) to tighten the formulation.The model formulation for look-ahead consumer behaviour, as described in Section 2.2.2, is quite similar to the model for greedy behaviour. In fact, the only modification is that in (15), sijnmust be replaced withsijnreland the calculation ofMik′′needs to be adapted accordingly (Mik′′:=(vik−pk1)/pk1). Overall, we obtain the following model formulation (MILPlook-ahead):(19)Max∑i=1I∑j=1J∑n=1Njxijnpjn(20)s.t.∑m=1Nkxikm≤1+∑n=1Njxijn+(∑m=1Nksikmrel·γikm−∑n=1Njsijnrel·γijn)/Mik′′+ρijkforalli,j,k:j≠kand constraints (5)–(14) and (16)–(18).Obtaining the optimal prices under optimal consumer behaviour requires a model formulation in which the different purchase alternatives that consumers are faced with are explicitly considered. More precisely, each consumer i selects an alternative z out of all 2Jpossible alternatives, i.e., product combinations. We defineKz⊆{1,…,J}as the set of products of alternative z. Again, basically only the constraints reflecting consumer behaviour need to be modified, such that we obtain the following formulation (MILPoptimal):(21)Max∑i=1I∑j=1J∑n=1Njxijnpjn(22)(Bi−∑k∈Kz∑n=1Nkpknπkn+ϵ)/Bi≤βizforalli,z(23)(Bi−∑k∈Kz∑n=1Nkpknπkn)/Miz≥βiz−1foralli,z(24)δizkn≤βizforalli,z,n;k∈Kz(25)δizkn−γikn≤1−βizforalli,z,n;k∈Kz(26)γikn−δizkn≤1−βizforalli,z,n;k∈Kz(27)∑j=1J∑n=1Nj(vij−pjn)xijn≥∑k∈Kz∑n=1Nk(vik−pkn)δizknforalli,z(28)0≤δizkn≤1foralli,z,n;k∈Kz(29)βiz∈{0,1}foralli,zand constraints (5)–(11), (16), and (18).Constraints (22) and (23) control the value of the additional auxiliary variable βizfor each alternative z. Constraints (22) force βizto 1 if the budget of consumer i is sufficient to buy all products of alternative z. Otherwise, βizis set to 0 by constraints (23). Constraints (24)–(26) are purely technical, as they represent a linearisation of the equationδizkn=βizγikn,∀i,z,k∈Kz,n. The additional auxiliary variable δizknis set to 1 if alternative z is affordable by consumer i, i.e., if consumer i’s budget is sufficient to purchase the products that are contained in alternative z (βiz=1), and if each product k of alternative z is acquirable for consumer i, and if the price point pknis selected (γikn=1). Constraints (27) assure that each consumer i selects the alternative that maximises her individual utility according to the objective function. The products are selected in such a way that the corresponding aggregated surplus∑j=1J∑n=1Nj(vij−pjn)xijnis greater than or equal to the aggregated surplus of all alternatives z for whichδizkn=1. In the case that no product j yields a positive surplus, consumer i leaves without buying anything according to constraints (10). We can setMiz:=Bi−∑k∈Kzpk1in (23) to tighten the formulation. Note that MILPoptimal is quite a complex optimisation problem, as the number of constraints is linearly dependent on the number of alternatives a consumer is faced with, which is in turn exponential in the total number of products in the line in general. Obviously, the problem is NP-hard, as one can easily perform a polynomial-time reduction from an arbitrary standard knapsack problem instance with H elements (h=1,…,H), utilities uh, weights wh, and size κ. This is accomplished by definingI:=1,J:=H,Nj:=1,andB1:=κas well as c0j≥ 1,pj1:=ujandv1j:=wj+ujfor allj=1,…,J. In fact, the generation of one constraint for each possible alternative resembles a complete enumeration over the solution space of a knapsack problem.In this section, we propose a customised branch-and-bound procedure to solve the different variants of the product line pricing problem presented above. In Section 4.1, several problem-specific upper bound arguments are introduced. In Section 4.2, we propose a branching scheme and show how the definitions of the proposed bounds need to be adapted within the enumeration tree to fathom nodes.All of the upper bound arguments we propose, i.e., UB1, UB2, UB3, and UB4, have in common that the utility maximising behaviour (IC) of the consumers as well as the sequence of the consumers’ arrival are relaxed. This automatically implies that these bounds are valid for all four problem variants discussed above. Regarding the other characteristics of the product line pricing problem, the bounds differ substantially. Table 3summarises which characteristics are considered (✓) and which are not (✗) for each of the bounds.Furthermore, for all bound arguments, we conduct some pre-processing to improve the resulting quality of the bounds. Taking into consideration the discrete nature of the prices, we round down the reservation prices vij∀ i, j to the next-lowest price point pjn, i.e., to the highest price point pjnsatisfying the PC for consumer i, and use these modified reservation pricesvij′in all subsequent considerations:vij′:=maxn∈{1,…,Nj}{pjn|pjn≤vij}.The first argument UB1 is a natural extension of the bound argument UB_SP in Burkart et al. (2012), which is adapted to the context of budget-constrained consumers. Within this context, we consider the productsj=1,…,Jseparately and identify the prices that yield the maximum product-specific revenues given this product's total capacity; thereby, constraints (11) are relaxed, allowing the consumers to purchase more products than they can afford provided that the PC is satisfied. For this purpose, product-specific achievable revenues arjnare determined for each price point pjnwithn=1,…,Njbyarjn=pjn×min{c0j,|Ijn|}withIjn={i∈{1,…,I}|vij′≥pjn}. The setIjncomprises all consumers who buy product j at the corresponding price point pjnas the corresponding PC is satisfied. Then, UB1 as an upper bound on the total maximal revenue is calculated by aggregating the maximal product-specific revenuesmaxn∈{1,…,Nj}{arjn}:(30)UB1=∑j=1Jmaxn∈{1,…,Nj}{arjn}The further bound arguments UB2–UB4 are based on new considerations, as they explicitly take into account the consumers’ budget limitations. In addition to the relaxation of the IC and the sequence of arrival, UB2 also relaxes the product-specific prices of the original problem and allows consumer-specific prices while still accounting for capacity as well as budget considerations. For this purpose, we define the binary variables xij∈ {0, 1} and price variables πij≥ 0, denoting whether product j is sold to consumer i and at what price, respectively. The bound can then be calculated by the following straightforward mixed-binary optimisation model:(31)UB2=Max∑i=1I∑j=1Jπij(32)s.t.∑j=1Jπij≤Biforalli(33)πij≤vij′foralli,j(34)πij≤Mixijforalli,j(35)∑i=1Ixij≤c0jforallj(36)xij∈{0,1}foralli,j(37)πij≥0foralli,jThe objective function (31) maximises the total revenue as the sum of the consumer-specific prices. Constraints (32) enforce the budget limitations regarding each consumer. Constraints (33) ensure that the consumer-specific selling prices cannot exceed the reservation prices. Constraints (34) force the price for a product to zero in the case that the product is not sold to the given consumer (xij=0); here, we can setMi:=maxj∈{1,…,J}{vij′}. Constraints (35) represent the capacity constraints.A more efficient reformulation of (31)–(37) with substantially fewer variables can be obtained by the following observation. In the case that a number of products are sold to a certain consumer, it is not necessary to determine the price of each product for this consumer. Instead, it is sufficient to ensure that the overall revenue from the consumer neither exceeds her budget nor the sum of the corresponding reservation prices. Let πidenote the total revenue obtained from consumer i. Then, the above consideration can be expressed by(38)πi=min{Bi,∑j=1Jvij′xij}where the equality sign follows from revenue maximisation. Based on this idea, the following reformulation is obtained:(39)UB2=Max∑i=1Iπi(40)s.t.πi≤Biforalli(41)πi≤∑j=1Jvij′xijforalli(42)∑i=1Ixij≤c0jforallj(43)xij∈{0,1}foralli,j(44)πi≥0foralliThe objective (39) is to define the values of the consumer-specific revenues πias high as possible. Constraints (40) and (41) represent the linearisation of (38). Constraints (42) are identical to (35) from the model above, accounting for the total capacity of each product.Model (39)–(44) can be solved by a mixed-integer programming solver. Alternatively, a dynamic programming approach is promising. Each consumer i corresponds to a stage of the dynamic program. The transition from stage i toi+1is given by determining the purchase of consumer i, i.e., selecting possible values of the variables xij≤ cjfor all j with cjbeing the corresponding remaining capacity. The corresponding reward is calculated by (38). The state space is defined by the possible vectors of the remaining capacity cjof all products after the assignment. Now, letπi(c1,…,cJ)denote the cumulated revenue obtained from stage i onwards, given remaining capacityc1,…,cJ. Next, the upper bound can be recursively computed byUB2=π1(c01,…,c0J)given the Bellman functionπi(c1,…,cJ)=maxxi1≤c1,…,xiJ≤cJ{min{Bi,∑j=1Jvij′xij}+πi+1(c1−xi1,…,cJ−xiJ)}with the boundary constraintπI+1(·,…,·)=0.Note that computing UB2 can be quite time-consuming, as can be concluded from the dynamic programming formulation, which obviously suffers from the curse of dimensionality resulting from the multidimensional state space. Therefore, it can be beneficial to consider further relaxations to obtain more tractable bounds that can, e.g., be computed more often throughout a branch-and-bound procedure. This is performed in the following two subsections.Basically, the upper bound UB3 is the LP-relaxation of (39)–(44), i.e., xij∈ {0, 1} is replaced by 0 ≤ xij≤ 1 ∀ i, j in (43). Furthermore, some simplifications in the resulting model can be realised as follows: first note that in an optimal solution, considering a single consumer i, at least one of the constraint sets (40) and (41) is binding. We now distinguish two cases. First, if only (41) is binding, i.e., πi< Bi, or if both constraints are binding, i.e.,Bi=∑j=1Jvij′xij, then the aggregated value of the allocations to consumer i is chosen such thatπi=∑j=1Jvij′xijholds. Second, if only (40) is binding, i.e.,πi<∑j=1Jvij′xij, then there exists another feasible solution withx^ij∈[0,xij]∀jwith the same objective function value such thatπi=∑j=1Jvij′x^ijholds. This follows from the fact that if the values xijare feasible with respect to the capacity constraints (42), then by definition ofx^ij, the inequality∑i=1Ix^ij≤c0jholds as well. As such an optimal solution exists, we can conclude that πican be replaced ex ante by∑j=1Jvij′xijin (39)–(41), which eliminates πifrom the model. Thus, UB3 can be reformulated as follows:(45)UB3=Max∑i=1I∑j=1Jvij′xij(46)s.t.∑j=1Jvij′xij≤Biforalli(47)∑i=1Ixij≤c0jforallj(48)0≤xij≤1foralli,jModel (45)–(48) can be solved by a linear programming solver. Note that it is not possible to re-obtain the model formulation (39)–(44) by simply re-specifying the decision variables xijas binary in (45)–(48) and thus obtaining a potentially easier model of UB2. The resulting model would no longer represent an upper bound of the total revenue due to the fixed weightsvij′in (47) and (48). In a binary formulation, these weights would inhibit the vendor from selling the product j to consumer i at a price lower thanvij′. However, choosing such a lower price point for a product j might result in a higher consumer-specific total revenue because additional products might be sold, thereby exploiting the consumer's budget to a greater extent.The upper bound UB4 is also based on (39)–(44) and obtained from applying a surrogate relaxation regarding the capacity constraints (42). More precisely, we replace these constraints by their sum such that the resulting model only contains the following aggregated capacity constraint, which no longer distinguishes between products:(49)∑i=1I∑j=1Jxij≤∑j=1Jc0jThe resulting model – consisting of (39)–(41), (43)–(44), and (49) – can be further simplified based upon the following proposition, which is intuitive and can easily be shown by contradiction (the proof is omitted):Proposition: For alli=1,…,I;j,j′=1,…,J,j≠j′, there is an optimal solution with:vij′>vij′′⇒(xij′=1⇒xij=1)From the proposition, it follows that products that are sold to a specific consumer i can always be selected according to monotonically decreasing (modified) reservation pricesvij′without interruption. Therefore, we can ex ante further transform the (modified) reservation pricesvij′, i.e., the maximum obtainable revenue from selling product j to consumer i, such that they implicitly incorporate the limitations resulting from the budget constraints (40). To formally specify these transformed reservation prices, we first define a priority list sorting the products for each consumer i according to the original valuesvij′:〈ti1,…,tik,…,tiJ〉withtik=1,…,Jfork=1,…,J, tik≠ tilfork,l=1,…,Jand k ≠ l, andvitik′≥viti,k+1′fork=1,…,J−1.Furthermore, we definej¯i:=maxl∈{1,…,J}{∑k=1lv′itik≤Bi}+1. Now, the transformed reservation prices aijcan be calculated as follows:(50)aitik=vitik′foralli;k=1,…,j¯i−1(51)aitik=Bi−∑l=1k−1vitil′foralli;k=j¯i(52)aitik=0foralli;k=j¯i+1,…,JThe transformation can be explained as follows: As long as the budget is sufficient – i.e., when selling up to the firstj¯i−1products of the priority list – the revenues obtained correspond to the original modified reservation pricesvitik′(cf. (50)). Selling productj¯ifrom the priority list does not correspond to the full (modified) reservation pricevitij¯i, but only to the fraction of the budgetBi−∑l=1j¯i−1vitil′remaining after selling the firstj¯i−1products (cf. (51)). Finally, selling products of even lower priority (k=j¯i+1,…,J)would result in a revenue of 0 due to the budget limitation (cf. (52)). Overall, as the transformation fully comprises the limitations resulting from the consumers’ budgets, we can replacevij′with aijin the model, omit constraints (40) – which also impliesπi=∑j=1Jaijxijsuch that πican be substituted as well – and obtain the following simplified binary program:(53)UB4=Max∑i=1I∑j=1Jaijxij(54)s.t.∑i=1I∑j=1Jxij≤∑j=1Jc0j(55)xij∈{0,1}foralli,jNote that (53)–(55) is a special knapsack problem with all weights in the knapsack constraint (54) being 1, such that an optimal solution can easily be found without relying on dynamic programming or integer programming solvers. More precisely – technically analogously to the algorithm described in Section 2.2.1 for greedy consumer behaviour – the values xijcan simply be set to 1 in decreasing order of aijover all consumers i and products j while the capacity is sufficient.The branching scheme we propose is based on that presented by Burkart et al. (2012). More precisely, the enumeration tree is constructed according to a depth-first search, with the products being considered in the sequencej=1,…,J, each corresponding to a level of the enumeration tree. Let LB denote the objective function value of the incumbent and let UBjndenote the local upper bound for a node with price index n on level j within the enumeration tree. Then, the latter can be fathomed in the case that UBjn≤ LB. Otherwise, it is branched according to theNj+1price pointspj+1,nof the next levelj+1in a depth-first manner.With respect to the different bound arguments presented in Section 4.1, the corresponding local upper bound for the price index n on level j can be derived as follows, with n(k) denoting the branching decisions in the preceding levelsk=1,…,j−1:•UB1: in line with Burkart et al. (2012), the local upper bounds are straightforwardly derived byUB1jn=∑k=1j−1ark,n(k)+arjn+∑k=j+1Jmaxm∈{1,…,Nk}{arkm}, taking into account that the achievable revenues for the products1,…,jare determined by the selected price points on the upper levels of the tree (first two terms), while for the following levels, the optimal price points are chosen as in UB1 (last term). Note that the product-specific achievable revenues arjnfor all price indices n only have to be calculated once in the root node for all products j and can then be reused, such that the computation of the corresponding local bounds is very efficient. Given this fact, the branching of a node on levelj−1over the price indices n can easily be performed according to monotonically decreasing values UB1jnin the spirit of a ‘local’ maximum upper bound search strategy, such that we have a depth-first search with complete branching (cf., e.g., Klein, 2000, chap. 6.1.2). As a consequence, as soon as a node of price index n with UB1jn≤ LB is fathomed, all the remaining price indices on the current level j can be fathomed as well. This drastically increases the performance.UB2–UB4: the new local upper bounds UB2jn, UB3jn, and UB4jnare derived by solving the corresponding mathematical model from Section 4.1 using the following adjustment of the modified reservation prices:(56)vik′:={pk,n(k)ifvik′≥pk,n(k)0otherwiseforalli;k=1,…,jThis takes into account that for the productsk=1,…,j, the maximum revenue, which can be extracted from a consumer i, is limited by the fixed price pk, n(k) of level k and that those products cannot be sold to consumers with lower valuations.In this section, we present the results of a comprehensive experimental study. In Section 5.1, we describe the experimental design. In Section 5.2, we investigate in detail various specifications of our branch-and-bound procedure. For this purpose, we analyse the performance of the upper bound arguments developed in Section 4.1 and compare the performance of the branch-and-bound procedure with that of CPLEX.

@&#CONCLUSIONS@&#
