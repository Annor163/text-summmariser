@&#MAIN-TITLE@&#
Adaptive dynamic programming algorithms for sequential appointment scheduling with patient preferences

@&#HIGHLIGHTS@&#
Both physician preference and time slot preference are considered.A Markov decision process model is proposed to optimize scheduling appointment.Adaptive dynamic programming algorithms are proposed to learn patient preferences.

@&#KEYPHRASES@&#
Markov decision process,Adaptive dynamic programming,Outpatient department,Appointment scheduling,Patient preferences,

@&#ABSTRACT@&#
ObjectivesA well-developed appointment system can help increase the utilization of medical facilities in an outpatient department. This paper outlines the development of an appointment system that can make an outpatient department work more efficiently and improve patient satisfaction level.MethodsA Markov decision process model is proposed to schedule sequential appointments with the consideration of patient preferences in order to maximize the patient satisfaction level. Adaptive dynamic programming algorithms are developed to avoid the curse of dimensionality. These algorithms can dynamically capture patient preferences, update the value of being a state, and thus improve the appointment decisions.ResultsExperiments were conducted to investigate the performance of the algorithms. The convergence behaviors under different settings, including the number of iterations needed for convergence and the accuracy of results, were examined. Bias-adjusted Kalman filter step-sizes were found to lead to the best convergence behavior, which stabilized within 5000 iterations. As for the effects of exploration and exploitation, it resulted in the best convergence behavior when the probability of taking a myopically optimal action equaled 0.9. The performance of value function approximation algorithm was greatly affected by the combination of basis functions. Under different combinations, errors varied from 2.7% to 8.3%. More preferences resulted in faster convergence, but required longer computation time.ConclusionsSystem parameters are adaptively updated as bookings are confirmed. The proposed appointment scheduling system could certainly contribute to better patient satisfaction level during the booking periods.

@&#INTRODUCTION@&#
Healthcare systems are facing increasing pressure to satisfy diverse demands especially in an aging society. According to statistics from Ministry of Health of China, the number of visits to health institutions in 2012 approached 6.9 billion, representing a 9.7(2013) [1] showed that there were only 3.19 practicing physicians per 1000 persons in the urban areas. Therefore, demands for healthcare resources far outstrips their supply. Owing to ineffective healthcare systems, the complaints received by institutions are escalating. Hence, it is essential that healthcare resources and medical quality have to be significantly improved as early as possible. In 2009, the Ministry of Health in mainland China started requiring hospitals to install appointment systems. Currently, because of great demand, a patient wanting to see a specialist (a senior physician) has to make an appointment in advance.A good appointment system can increase utilization of facilities, cut waiting time for patients, and in turn improve patients’ satisfaction level. Besides, patients’ satisfaction is influenced not only by the perceived quality of medical services but also by their appointment booking experience [2]. However, there are a lot of variables in the patients’ arrival and service process, making scheduling of outpatient appointments more complicated. Many papers focus on different aspects, such as no-show [3,4], interruption [5], cancellation [6], traditional and open-access policies [7], and patient priority [8]. These papers contribute greatly for their respective areas. However, patient preference is still a relatively new attribute in the scheduling problem in healthcare industry. Fortunately, the problems of preference and choice in marketing have been widely studied in the past, giving great inspirations to healthcare. Van Ryzin [9] provides an exact and general analysis of the revenue management issues subject to customer preference. In the model, some available choices are provided to allow customers to select. With the assumption that purchase probability increases with the number of choices made available, they arrive at an optimal policy involving an elegant form of an ordered family of “efficient” subsets. Zhang and Cooper [10] consider airline revenue management problems with customer choice within a group of flights serving a common route. Chen and Homem-de-Mello [11] discuss an airline revenue management problem with discrete customer choice behavior, and preference orders are proposed to describe customers’ choice list. If a preferred option is not available, the customer moves to the next choice on the list subject to certain probabilities, and a post-optimization heuristic is used to refine the allocation process. Shen and Su [12] review methods of modeling customer behavior in revenue management and auction. These papers definitely give researchers a great deal of inspirations to study the problem of patient preferences.Patient preference is first modeled explicitly by Gupta and Wang [2]. To some extent, the approach constitutes significant progress in research on appointment scheduling. Patient choices in this paper include preferred physicians and time slots. Patients are divided into two categories: regular patients who call more than one day in advance, and same-day patients who arrive at the start of a workday. The patient choice of a particular workday is modeled as a Markov decision process (MDP). Patients are allowed to switch their choice if their preferred time slot or physician is not available. Both single physician and multi-physician scenarios are simulated. Based on this work, Wang and Gupta [13] further develop an adaptive appointment system, which dynamically learns and updates patients’ preferences. The patients seeking to book a block have an acceptable set, from which scheduler offers a block to them. The work described in this paper differs from their previous one since appointments are scheduled in an outpatient department more than just resources allocation. Qu and Shi [14] model the performance of open access scheduling with patient choice. Vermeulen et al. [15] consider both patient preference and the urgency of the cases.However, most available literature considers appointment systems in the western world which are relatively well-developed. However, very little work has been done concerning situations relevant to mainland China. This paper mainly focuses on sequential appointment scheduling in outpatient departments (OPDs) in hospitals in China. The appointment systems in OPD also have different characteristics because of differences in the approaches used in China and the West. Gupta and Denton [16] summarize three different healthcare scenarios: primary care clinics, specialty care clinics and hospitals. In the West, most people go to a neighborhood clinic in ordinary consultations. If necessary, they are referred to a hospital for follow-up actions. Neighborhood clinics greatly relieve the pressure on the hospitals. However, in China, most people prefer to go directly to a hospital because they trust hospitals more. As a result, hospitals become heavily crowded, especially the more “famous” ones. OPD in China is similar to some extent to primary care clinics in the West. However, there are some distinct differences. For instance, in China, most OPD physicians also work in inpatient departments and the distribution can vary daily based on the planned schedule. Also, in Western primary care clinics, patients usually have a designated physician, the primary care provider, to take care of the majority of the medical needs of a given individual. However, in China, people believe that it is better to go to a well-known hospital specializing in a given type of medical needs. In most Western cases, the primary care clinic is close to the patient's home whereas, in China, patients do not mind going to a hospital far away from home, if it is well-known. Therefore, along with the availability of the resources needed, patient preference in China can vary with the reputation of the hospital or, even, of a certain physician.Taking the special healthcare environment into account, this paper mainly focuses on the appointment scheduling for specialists in OPD. The main contributions of this paper are as follows:•A new revenue function is formulated to evaluate patient satisfaction level, disregarding the financial income.Based on a new evaluation method, a MDP model is developed to model the sequential appointment process.Adaptive dynamic programming algorithms are proposed to dynamically capture patient preferences, and thus update the value functions timely.The model tries to emulate the booking processes in an outpatient department of a typical hospital in China specializing in the treatment to cardiovascular diseases. The outpatient department is composed of seven sub-departments each with several physicians. Patients can make their choices according to the availability of physicians and the schedule on the website. The booking process is illustrated in Fig. 1. During online booking exercises, patients indicate their preferences, including the preferred physician(physician preference) and the convenient time(time preference). It is common for a patient to have more than one choice. Denote R as a preference set and pRas the probability that a patient with a preference set R calls for an appointment in a call-in period. Let Ω be a set that includes all possible preference sets and p0 the probability that there is no appointment request during the call-in period. ∑R⊆ΩpRis considered as the probability that there is a call (no matter what preferences (s)he holds) in a call-in period. There is ∑R⊆ΩpR+p0=1, indicating that the probability that there are more than one call in a call-in period is zero. Considering patient preferences and the current system state, the scheduler confirms an appointment decision, i.e., assigns or refuses the request. Since no emergency patients are considered in the proposed model, a non-assignment policy is permitted provided that the penalty of a non-assigned patient is smaller than the expected revenue upon completion of the time slot in question. If the request is refused, a penalty l1 is imposed on the hospital. Upon receiving an offer, the patient can choose to accept or decline it. Whenever a patient declines an offer, the hospital suffers a revenue penalty of l2 because the appointment decision dissatisfies the patient (normally, l1≥l2). Finally, the booking process is terminated. If all slots in a shift have been fully scheduled, the booking system for the given shift is closed. Hospital statistics have indicated that, owing to the high demand for specialist service and reputation of the hospital in question, the rate of a patient declining an appointment decision is low.Each call-in period (the booking horizon) is divided into T time intervals [4]. Each interval is small enough so that there is no more than one call within the given time period. For a given workday schedule, calls come within the booking horizon. Different from literature where patients are divided according to on their arrival probabilities [17], choice probabilities [2], or no-show rates [4], patients in our model are categorized according to their preferences.In the proposed appointment system, there are M physicians whose working shifts in a day are divided into N time slots. It is assumed that the length of all the time slots are equal [17], all patients should arrive punctually without no-shows, each time slot can accommodate only one patient, and the service process can be finished within the time slot.A typical state S takes the formS=s11…s1n⋮⋱⋮sm1⋯sMNwhere sij={0, 1}. sijdenotes the state of time slot j of physician i. sij=1 means that the time slot has already been booked, Otherwise, sij=0. Therefore, in principle, there are 2MNstates in each period. This number can be huge though M and N, individually, are not very large. This leads to the curse of dimensionality [18]. There are several approximate methods that can resolve this problem. An example is the simulation-based method [19]. These methods are used in Section 3 to illustrate how the problem of curse of dimensionality can be resolved.After receiving information concerning patient preferences, the scheduler makes an appointment decision (i, j) based on the current state S. A decision/action (i, j) means that the patient is assigned into jth time slot of physician i. Obviously, (i, j)∈A(S), whereA(S)=i,j|i=1,…,M;j=1,⋯,N;sij=0. The patient must be assigned into an available time slot. If an entry (i, j) is assigned, Δijis used to describe this decision. Δijis an M*N matrix, in which entry (i, j) equals 1, indicating that a patient has been assigned to slot j of physician i, while other entries are all zero.The work reported in this paper seeks to maximize the total expected satisfaction level of all patients during a booking horizon. To achieve this objective, a revenue function is formulated to evaluate patient satisfaction levels. “Revenue” is taken as the contribution of a healthcare system to the society. Note that this has nothing to do with financial income. This definition of revenue is an important feature that makes this work different from most works described in the literature. There is little doubt that the function depends on the degrees to which patient preferences match appointment decisions.The preferences with regard to physicians and time slots are assumed to be independent of each other. First, let us consider how physician preference affects revenue. Let r be the average revenue from each accepted request when physician preference is satisfied, r1 be the average revenue from patient–physician mismatch resulting from the appointment, and r2 be the average revenue derivable by assigning a patient with no physician preference. Patient–physician mismatches can lower the overall revenue, that is, r1≤r. Physicians have to spend more time reading the medical histories of unfamiliar patients [20]. On the other hand, patients forced to see an unexpected physician most likely have a lower satisfaction level. Letrmibe the revenue derived from the fact that the patient is assigned to physician i, while physician m was the preferred one. Then,rmi=ri=mr1i≠mr2m=0in which m=0 means the patient has no physician preference.Estimating the revenue from a time slot assignment is a bit more complicated because of the fact that the interval between the assigned and expected time slots influences revenue. If a patient preferring slot n is assigned to slot j, the degree of mismatch can be evaluated as(1/N)n−j. Hence the degree of match is1−(1/N)n−j. Letdnjbe the revenue derivable in case the patient is assigned to time slot j, whereas time slot n is the preferred one. Then,dnj=1n=01−1Nn−jn≠0where n=0 means that the patient has no time preference. Obviously,0≤dnj≤1.In summary, by combining the above two branched functions, the total revenue function of an appointment decision can be expressed as(1)Cmnij=rmir+dnjin which,Cmnijis the revenue derivable from the fact that the patient with a preference for physician-slot pair (m, n) is actually assigned to physician-slot pair (i, j). The first part of the function is to normalize the revenue from physician preference. Clearly,0≤Cmnij≤2. It is now easy to arrive at the following lemma, which is utilized in the algorithm to be proposed Section 3.Lemma 1The revenue decreases as the value ofm−iorn−jincreases.The sequential appointment scheduling problem can be modeled by the following recursive equation.(2)Vt(S)=∑R⊆ΩpRmaxmax(m,n)∈R,(i,j)∈A(S)pRijVt+1S+Δij+Cmnij+1−pRijVt+1S−l2,Vt+1S−l1+p0Vt+1(S)where t=0, 1, 2, …, T, and the value function Vt(S) specifies the maximum revenue from the current stage, t, onwards, given the current state S. The first part of the equation captures the expected revenue assuming that a request has indeed arrived at stage t. The second part is the expected revenue from the current stage onwards if there is no request at stage, t. The revenue for the first part comes from making the best decision in response to an appointment request. After the scheduler has made an offer, the patient can decide whether to accept the decision. LetpRijbe the probability that the offer is accepted (it can be achieved from historical data).The appointment scheduling exercise is finalized at the last stage T, or when all pairs (i, j) have turned unavailable. A matrix, E(a M*N matrix of ones), is used to describe the scenario so that(3)VTS=VtE=0.Adaptive dynamic programming (ADP) algorithms have been widely used while learning patient preferences and improving appointment decisions. In this section, several ADP algorithms, including a simulation-based algorithm (SBA) and a value function approximation algorithm (VFA), are proposed.Algorithm 1 Simulation-based algorithmStep 0: InitializationStep 0a: InitializeV¯t0(S);Step 0b: Choose an initial stateS01;Step 0c: Set k=1.Step 1: Generate a sample path.Step 2: For t=1, 2, …, T,Step 2a: LetV¯tkS=V¯tk−1(S);Step 2b: If|AStk|=0, go to Step 3;Step 2c: If there is no call,vˆ=V¯t+1k−1Stk;Step 2d: If there is a call,vˆ=maxmax(m,n)∈R,(i,j)∈A(Stk)pRijV¯t+1k−1Stk+Δij+Cmnij+1−pRijVt+1k−1Stk−l2,Vt+1k−1Stk−l1Let akbe the action that solves the maximization. Take akwith probability p. Take other action with probability 1−p and get a new value ofvˆ.Step 2e: UpdateV¯tkS,V¯tkS=1−αk−1V¯tk−1Stk+αk−1vˆS=StkV¯tk−1(S)O.W.Step 2f: ComputeSt+1k=Stk+ak.Step 3: Let k=k+1. If k<K, go to Step 1.Step 4: Return the value functionV¯tKt=0T.In the backward induction process applied in the proposed MDP model, all states at any stage must be visited, leading to a waste of computational space and time. In order to sidestep the disadvantages associated with solving the backward problem directly. Algorithm 1 is used while implementing a forward simulation algorithm. This algorithm is a modified version of the forward dynamic programming routine described in Chapter 4 of [18]. Several fundamental challenges impacting the convergence rate of the algorithm need to be noted.The first challenge is the initialization problem. In the first step, all the values,V¯t0, concerning value of being in a state need to be initialized. It is claimed by [18] that, for a deterministic problem, an optimistic estimate of a value can guarantee the best solution, i.e., a lower value for a problem of minimization and a larger value for one of maximization. For a stochastic problem, an optimistic estimate leads to wider exploration, which results in a better solution. Since ours is a maximization problem, our goal is to find the upper bound.Lemma 2For t=1, 2, 3, ⋯, T−1,Vt(S)⩽2minAS,T−t.Lemma 2 indicates two upper bounds of the value function. They come from the assumptions that each time slot can just allow one patient and that there is no more than one call during any given calling period. The upper bounds can provide some reference points during initialization.Another challenge associated with the algorithm concerns the probability of taking a myopically optimal action, p, in Step 2d. The probability refers to the “exploration vs. exploitation” problem. Exploration uses better information to obtain a superior value of being in a state, no matter whether the chosen decision is the optimal one given the current information. Exploitation proceeds from currently optimal decisions. A purely exploitative policy leads to a local optimum [18]. This paper simply employs some strategies involving deterministic probabilities. In Section 4, the effects of such probabilities are investigated.Another significant challenge relates to how one should iterate the value of the step-size, αk, in Step 2e. Step-size is related to how important the averaged contributions and the current observations individually are. There are three different step-size rules: the constant rule, the deterministic rule, and the stochastic rule.In a constant rule, the value of αkdoes not change during all iterations, e.g., αk=0.05. In a deterministic rules, αkdoes not change with the observations [21]. There are many kinds of deterministic rules [18], such as the generalized harmonic (GH) step-size rule, the Polynomial Learning Rate rule, and McClain's Formula. With respect to GH step-sizes, a widely-used rule, Eq. (4) is chosen to investigate the proposed model:(4)αk−1=aa+k−1where a is a parameter that should be chosen carefully to determine the value of GH step-sizes (see Section 4.1).In contrast to deterministic rules, stochastic rules adapt to the observations [21]. Our approach uses the bias-adjusted Kalman filter (BAKF) step-sizes proposed by George and Powell [22]:(5)αk−1=1−(σ¯2)kv¯kwhereσ¯2andv¯kdenote the estimated variance of the error and of the bias after iteration k respectively.v¯kcan be estimated recursively by(6)v¯k=(1−ηk−1)v¯k−1+ηk−1(ɛk)2where ηkis computed by usingηk=aa+k, and ɛkis the temporary errorV¯k−1−V¯k.Another method to reduce the computational space is to adopt a value function approximation algorithm, which uses certain parametric models to estimate value functions. The value function can be considered as a linear or non-linear combination of basis functions, e.g., a linear model takes the form [23]:(7)V¯S=w0+∑h=1HwhϕhSwhere H denotes the number of basis functions. It is expensive to estimate the parameters,wh, by using classical statistics. Let W be a |1+H| vector,W=w0,w1,…,wHT. Powell [18] presents following recursive formula (Eq. (8)) to update the vector W.(8)Wk=Wk−1−Qkϕkɛˆkwhere ϕ is a |1+H| vector,ϕ=1,ϕ1,ϕ2,…,ϕHT(HereϕhSis simplified to be ϕhfor notational convenience.); Q is a |1+H| by |1+H| matrix; andɛˆis a scalar. Q andɛˆare updated using the following equations.Qk=1γkBk−1;ɛˆk=V¯s(Wk−1)−vˆk;Bk=Bk−1−1γk(Bk−1ϕk(ϕk)TBk−1);γk=1+(ϕk)TBk−1ϕk.In the above equations, γ is a scalar and B is a |1+H| by |1+H| matrix, which is initialized by using B0=ϵE (E is the identity matrix; and ϵ is a small constant, e.g., it equals 0.1 in our numerical study in Section 4.3).A notable feature of this algorithm concerns the design of basis functions, which can be used to capture all the features of the value function. Since the value of being in a state in the proposed model is closely related to the situation with regard to the available time slots, the following four sets of basis functions are proposed as follows.(9)ϕm1=∑j=1Nsmj,form=1,2,…,M(10)ϕn2=∑i=1Msin,forn=1,2,…,N(11)ϕm3=∑i=1m∑j=1Nsij,form=1,2,…,M(12)ϕn4=∑j=1n∑i=1Msij,forn=1,2,…,NLinear basis functions ϕ1 and ϕ2 represent the number of unavailable slots belonging to a physician and a time period separately. ϕ3 and ϕ4 are non-linear basis functions that are also relevant with the number of available slots. While implementing the value function approximation algorithm, the equation in Step 2d in Algorithm 1 is replaced by Eq. (13).(13)vˆ=max{max(m,n)∈R,(i,j)∈A(S){pRijw0+∑h=1HwhϕhS+Cmnij+1−pRijVt+1k−1S−l2},Vt+1k−1S−l1}This section describes some experiments performed to evaluate the performances of the proposed algorithms. The computations were performed in MATLAB R2009b in the following computational environment: I5-2400 CPU 3.10GHz, 4.00GB RAM, Window 7 Enterprise Edition.Consider now the experiment conducted to examine a sub-department with two physicians, each of whom has four time slots. Let l1=0.1, l2=0.08, T=10, r=1, r1=1/2, and r2=1/3. It was assumed that there was no more than one preference for each patient. First, the simulation-based algorithm was implemented up to 10,000 iterations. Fig. 2a listed the values estimated using different step-sizes during iterations, where GH step-sizes were described in the form of “GH – the value of parameter a”. The BAKF step-sizes varied randomly and tended to converge to zero because the estimate of the variance of the error and bias were likely to be equal. However, GH step-sizes converged rapidly to zero. The smaller the parameter a, the faster the convergence to zero.The estimated value of V0(0) (the expected revenue at the beginning, and 0 was a M*N matrix of zeros) was used as an example to illustrate the convergence behaviors during the iterations, that is, the value of V0(0) was the objective value. Fig. 2b plotted the convergence behaviors resulting from different step sizes. The value of the benchmark was derived from resolving Eq. (2) directly using backward iterations. Table 1listed the computational times, the objective values, the differences between the means and the corresponding benchmarks, and the numbers of iterations leading to final convergence. The first column indicated the algorithms in the form of “algorithm name (SBA)-step-size and parameter-exploitation probability-iteration times” or “algorithm name(VFA)-basis functions-iteration times”. As shown in the table, computational time was almost the same for the same number of iterations. It was obvious that BAKF step-sizes yielded the best convergence behavior, which stabilized after 5000 iterations, and that the result was much better than any of those obtained by deterministic procedures or ones using GH step-sizes. As for GH step-sizes, larger values of parameter a leaded to superior convergence behaviors, that is, they converged and stabilized quickly. However, deterministic and GH step-sizes cannot converge even when the number of iterations reached 10,000. Hence, even more iterations (say 100,000 cycles) were conducted. As shown in Table 1, the deterministic step-size method converged after 50,000 iterations, whereas GH still did not. The reason was that when iteration number k increased to a large number the GH step-sizes,αk−1=aa+k−1, became very small and almost equaled to zero. Table 1 indicated that the results following 10,000 and 100,000 iterations were quite close: 13.97 and 12.59 respectively. Note that the final 90,000 iterations converged very slowly. Though, seemingly, the deterministic step-size (α=0.05) method exhibited a higher convergence rate in comparison to GH, it was less stable.In this subsection, variant exploitation probability was tested to compare the effects of exploration and exploitation. In Fig. 3, smaller exploitation probability had larger a convergence rate, while larger probability was associated with better stabilization. When the probability was 0.9, the result was closest to the benchmark. Table 1 showed the difference between the value of the objective values and benchmark. The iteration time had nothing to do with exploitation probability. Columns labeled “Variance” and “Bias” in Table 1 listed the variances of the error and bias after 10,000 iterations, respectively. However, the question of how one can balance exploration and exploitation still does not have a clear answer. Powell [18] tried to provide some theories that might be put into practice.In this subsection, the SBA was compared with the value function the VFA. In Fig. 4, the estimation of V0(0) was also used as an example to show the convergence behaviors of SBA and VFA with different combinations of basis functions. Generally, VFA exhibited a faster convergence rate and reached the value near the benchmark in about 2500 iterations. Additionally, the convergence behavior of VFA was more stable than that of SBA.Furthermore, VFA with different basis functions resulted in different situations of convergence scenarios. Linear basis functions ϕ1 and ϕ2 did not appear to converge to a value within 10,000 iterations, and worse, the achieved results after 3000 iterations went below the benchmark and tended to go down further. As a result, basis functions ϕ1 and ϕ2 cannot fully represent the features of states. By contrast, ϕ3 and ϕ4 leaded to good convergence behaviors; they stabilized and approached the benchmark within just 1500 iterations. Compared to other algorithms, this one was extremely effective and efficient. However, when all the proposed basis functions (ϕ1234) were used, the result was unacceptable since it was not superior to even ϕ34. This might be due to the negative effects of ϕ1 and ϕ2. However, the question of how one should design the basis functions continued to remain a problematic area in ADP. As shown in Table 1, ϕ12 required less computational time than the other two combinations. The variance of the error of VFA was larger than that of SBA.In improving patient satisfaction levels, it was permitted that a patient can provide several preferences, that is, |R|>1. In this subsection, a smaller system was used to test the effects of the number of preferences, which was set at two physicians each with two time slots. Set T=6. Let the number of preferences vary from 0 to 9. Using the adjusted “SBA-BAKF-50-0.9-3000” algorithm, Fig. 5a showed that both the computational time and the expected revenue increased with the number of preferences. The reason was that schedulers had more choices when patients provided more preferences, which also leaded to more computational time. At the extreme, when the number of preferences reached the maximal value(9 in this example), i.e., patients can accept any physician and any time slot, the expected revenue rises to the maximum value(8 in this example). Fig. 2b showed the convergence behaviors with different number of preferences. A greater number of preferences resulted in faster convergence.

@&#CONCLUSIONS@&#
