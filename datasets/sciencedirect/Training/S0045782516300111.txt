@&#MAIN-TITLE@&#
An efficient and robust rotational formulation for isogeometric Reissner–Mindlin shell elements

@&#HIGHLIGHTS@&#
A rotation-based isogeometric Reissner–Mindlin shell formulation which is able to handle finite rotations and large deformations is presented.A continuous rotation of the director vector with multiplicative update ensures robust computations of arbitrarily curved structures.Three integration schemes are presented and compared in terms of computational costs and influence on accuracy.The efficiency of the proposed shell formulation is shown to be competitive to standard Lagrange-based finite element shell formulations.

@&#KEYPHRASES@&#
Isogeometric analysis,Geometrically nonlinear Reissner–Mindlin shell,NURBS,Interpolation of rotations,Numerical integration,

@&#ABSTRACT@&#
This work is concerned with the development of an efficient and robust isogeometric Reissner–Mindlin shell formulation for the mechanical simulation of thin-walled structures. Such structures are usually defined by non-uniform rational B-splines (NURBS) surfaces in industrial design software. The usage of isogeometric shell elements can avoid costly conversions from NURBS surfaces to other surface or volume geometry descriptions. The shell formulation presented in this contribution uses a continuous orthogonal rotation described by Rodrigues’ tensor in every integration point to compute the current director vector. The rotational state is updated in a multiplicative manner. Large deformations and finite rotations can be described accurately. The proposed formulation is robust in terms of stable convergence behavior in the nonlinear equilibrium iteration for large load steps and geometries with large and arbitrary curvature, and in terms of insensitivity to shell intersections with kinks under small angles. Three different integration schemes and their influence on accuracy and computational costs are assessed. The efficiency and robustness of the proposed isogeometric shell formulation is shown with the help of several examples. Accuracy and efficiency is compared to an isogeometric shell formulation with the more common discrete rotational concept and to Lagrange-based finite element shell formulations. The competitiveness of the proposed isogeometric shell formulation in terms of computational costs to attain a pre-defined error level is shown.

@&#INTRODUCTION@&#
Thin-walled structures occur frequently both in nature and in man-made structures due to their advantageous ratio between load capacity and dead weight. They can be described by a two-parametrical surface embedded in the three-dimensional space together with the description of the thickness behavior. Such dimensionally reduced structure models are called shells. The two main formulations for the analysis of shells are Kirchhoff–Love and Reissner–Mindlin shell formulations; see e.g. the survey work  [1]. The deformation behavior of thin shells is dominated by bending and membrane strains, whereas the behavior of thick shells is also influenced by transverse shear strains. A common distinction criterion between thick and thin shells is a ratio of20:1between radius of curvature and wall thickness. Within this work a shear-deformable Reissner–Mindlin shell formulation is proposed, which is able to accurately describe the deformation behavior of thin and moderate thick shells. The thickness dimension is described with the help of a director vector. The kinematic behavior is expressed by displacements and rotations as additional unknowns, which are used to model the deformations of the director vector. Only first derivatives of the displacements and of the additional unknowns appear in the equilibrium equation. Thus,C0-continuity of deformations and additional unknowns suffices.Current CAD tools describe thin-walled structures by their mid-surface with the help of non-uniform rational B-splines (NURBS) surfaces. The basic idea of isogeometric analysis, which was introduced in  [2], is to use the same geometry description for design and analysis in order to increase accuracy and to reduce computational costs induced by conversions. NURBS surfaces are two-parametrical surfaces embedded in the three-dimensional space, which is exactly the kind of geometry definition shell formulations are based on. Thus, efficient NURBS-based shell formulations are essential for the isogeometric analysis of thin-walled structures in order to avoid conversions to volumetric NURBS. The higher continuity provided by splines allows an exact determination of curvature, tangent and normal vectors in every physical point. This favors the formulation of a shell formulation which takes advantage of this additional geometrical information.The first shell formulation in the context of isogeometric analysis basing on the Kirchhoff–Love shell theory was presented in  [3]. As a Kirchhoff–Love kinematics is used, no rotational degrees of freedom are needed at the expense of requiredC1-continuity of displacements between elements. This requires penalty-like measures at the intersection of patches to avert unintentional hinge-like behavior, see  [4]. This shell formulation is used in  [5] as a basis for the simulation of arbitrary complex NURBS surface geometries. A further rotation-free shell formulation was proposed in  [6], where the need for higher continuity is avoided by fulfilling the Kirchhoff conditions only in discrete points. The first isogeometric Reissner–Mindlin shell formulation was proposed in  [7]. The interpolation of the current director vector is accomplished by rotating nodal director vectors in a discrete manner. The quality of the interpolation of rotations deteriorates with rising order of the NURBS basis functions. Thus, divergent deformation behavior can occur. A Reissner–Mindlin shell formulation which uses a more precise continuous rotational formulation is proposed by the first author of this work in  [8,9]. The continuous rotation ensures convergence and stability for rising orders of the NURBS basis functions. However, the rotational formulation used in  [8,9] yields a problematic path-dependency for geometries with kinks under large rotations, which is shown in the Appendix and in  [10]. This is the main motivation for the rotational formulation proposed in this work which reduces this path-dependency to an extent at which its influence is negligible and at the same time is more efficient.All shell formulations mentioned above do not take any measures against locking effects. The hierarchic shell formulation with linear kinematics proposed in  [11] is by construction free from transverse shear locking, which occurs in Reissner–Mindlin shells with standard kinematics. Furthermore, the DSG method (Discrete Strain Gap, see  [12]) and the usage of a Hellinger–Reissner variational formulation are examined to alleviate remaining locking effects. A non-uniform integration rule for shell elements is presented in  [13]. This rule is designed to overcome locking by using an optimal number and layout of integration points. Isogeometric shell formulations of volumetric type with methods against locking are proposed in  [14–16].The main objective of this contribution is to propose a shell formulation which is adapted to the possibilities and challenges yielded by the isogeometric concept. The numerical efficiency shall be comparable to standard finite element shell formulations. The exact geometry and the existence of a uniquely defined normal vector field are used to obtain robust computations with minimal user interaction. The term robust refers to computations with stable convergence behavior in the nonlinear equilibrium iteration for large load steps and geometries with large and arbitrary curvature. Furthermore, insensitivity to shell intersections with kinks under small angles is subsumed under the term robustness. The geometry is defined by a reference surface and a director vector field. The Reissner–Mindlin kinematic assumptions are enforced with the help of a rotational formulation to determine the current director vector. The geometrically nonlinear formulation allows the simulation of problems including large deformations and rotations. A precise concept for the interpolation of the current director vector using a continuous rotation with multiplicative update is proposed, which is the key to an efficient and robust isogeometric shell formulation. The non-uniform integration rule proposed in  [13] is extended to higher order NURBS and used in order to increase efficiency and especially to show the behavior of the proposed shell formulation if methods to reduce locking effects are taken.Three-dimensional bodiesBwith the thicknesshbeing significantly smaller than the two other dimensions are referred to as shell structures. This fosters a dimensional reduction to a two-dimensional surface in space with additional information about the thickness. In this work two kinematic assumptions are made for the dimensional reduction. The first assumption is that cross sections remain straight during deformation and the second assumption is the inextensibility condition in thickness direction. Shell formulations with these two kinematic assumptions are mostly referred to as Reissner–Mindlin shells to honor these authors’ contributions to theory of plates. The incorporation of transverse shear deformations entails realistic simulation results both for thin and thick shell structures. However, problems involving large strains cannot be treated properly due to the inextensibility assumptions. Problems of this class require additional parameters for thickness stretching.The presented shell theory is derived from the three-dimensional continuum. The shell body is described by the shell reference surfaceΩin combination with an inextensible director vector field|D|=1which defines the thickness direction. The boundary of the shell reference surface is denoted byΓ=∂Ω. The shell reference surface is described by the two in-plane coordinatesξ1andξ2. Without loss of generality the shell mid-surface is chosen as shell reference surface. Thus, the thickness coordinateξ3ranges from−h/2toh/2. The initial configuration of a shell body at timet=t0is denoted byB0and referred to as reference configuration. Deformed states at timet>t0are referred to as current configuration; a subscripttinstead of 0 is used. This notation is applied akin to the shell reference surfaceΩand its boundaryΓ=∂Ω. Quantities in the reference configuration are denoted by uppercase letters, and quantities in the current configuration by lowercase letters. Tensors, matrices and vectors are uniformly printed bold face. The Einstein summation convention is used where not specified differently. Latin indices take the valuesi=1,2,3and Greek indices the valuesα=1,2. Thus, the position vectorX(ξα)defines the shell reference surfaceΩ0in the reference configuration, whereasx(ξα)denotes the dual value for the shell reference surfaceΩtin the current configuration. The reference director vectorD(ξα)is chosen to be equal to the normal vectorN(ξα)with respect to the shell mid-surface. Due to the allowance of transverse shear deformations, their respective counterparts in the current configuration can deviate from each other. Thus, the relations between director vectors and normal vectors read(1)D(ξα)=N(ξα)d(ξα)≠n(ξα).The current director vectord(ξα)is determined by the rotation(2)d(ξα)=RD(ξα)R∈SO(3),where the orthogonal rotation groupSO(3)defined by(3)SO(3)≔{R:R3→R3|RT=R−1,detR=1}ensures the inextensibility of the director vector|d(ξα)|=|D(ξα)|. The axial vector of the rotationω=ω(ξα)∈R3defines the state of Rodrigues’ rotational tensor(4)R=1+c1Ω+c2Ω2c1=sinωωc2=1−cosωω2Ω=skewω=[0−ω3ω2ω30−ω1−ω2ω10]ω=|ω|.The use of Rodrigues’ rotational tensorRallows a proper treatment of large rotations. The singularity ofRatω=2kπfork∈Nrequires an appropriate update procedure, see Section  2.6. Using the definitions introduced above, the location of a pointX̃(ξi)on the shell bodyBis defined by(5)X̃(ξi)=X(ξα)+ξ3D(ξα)andx̃(ξi)=x(ξα)+ξ3d(ξα)in the reference configurationB0and in the current configurationBt, respectively. The displacement vector of the shell reference surfaceΩis defined by(6)u(ξα)=x(ξα)−X(ξα).All essential quantities are displayed in Fig. 1. Explicit indication of the dependence of the aforementioned quantities on the surface coordinatesξαis omitted in the following. Covariant basis vectors in the shell body which are aligned to the convected coordinatesξαare computed by(7)Gα=∂X∂ξα+ξ3∂DξαG3=Dusing the decomposition of the position vectors introduced in (5). In the following the basis vectorsGiare considered to be constant over the thickness; the term containingξ3is neglected. This approximation is equal to setting the determinant of the shifter tensor to one. The entailed error is very small and negligible unless large curvatures occur. For a study on the influence of this approximation see  [1]. The unapproximated derivation can be found in  [10]. The evaluation of volume integrals(8)∫B0(…)dV=∫ξ1∫ξ2(∫ξ3(…)dξ3)dA=∫ξ1∫ξ2(∫ξ3(…)dξ3)|G1×G2|dξ2dξ1can be transformed to the evaluation of area integrals with a pre-integration in thickness direction. Local Cartesian basis systems{Ai}i=1,2,3withAi=Aiare used for strains and stresses to allow the use of constitutive tensors with Cartesian basis. The local Cartesian basis systems are chosen aligned to the tangent plane with respect to the shell mid-surface. For this purpose the lamina coordinate system as described in  [17] is used. The basis vectorsAiare computed by(9)A1=22(A¯ξ1−A¯ξ2)A2=22(A¯ξ1+A¯ξ2)A3=G3with(10)Aξ1=G1|G1|Aξ2=G2|G2|A¯ξ1=12(Aξ1+Aξ2)|12(Aξ1+Aξ2)|A¯ξ2=G3×A¯ξ1|G3×A¯ξ1|.The orthonormal basis vectorsAiare used to define the local Cartesian coordinatesθi. The position vectors in the reference configurationB0and in the current configurationBtare expressed by(11)X̃(θi)=X(θα)+θ3D(θα)andx̃(θi)=x(θα)+θ3d(θα),respectively, using the coordinate systemθi. Derivatives with respect to the convected basis systemξiare assumed to be provided by the geometrical description. The Jacobian matrix(12)J=[Jαβ]Jαβ=∂θβ∂ξα=Gα⋅Aβhas to be inverted. The coefficientsJαβ−1of the inverse JacobianJ−1are used for the transformation(13)(…),α≔∂(…)∂θα=Jαβ−1∂(…)∂ξβof spatial derivatives from the convective basis systemξito the local Cartesian basis systemsθi.The presented shell formulation uses Green–Lagrange strains and the work-conjugate second Piola–Kirchhoff stresses. The Green–Lagrange strains(14)E=EijAi⊗AjwithEij=12(x̃,i⋅x̃,j−X̃,i⋅X̃,j)are fractionized byEαβ=εαβ+θ3καβ+O((θ3)2)and2Eα3=γαinto(15)membrane strains:εαβ=12(x,α⋅x,β−X,α⋅X,β),curvatures:καβ=12(x,α⋅d,β+x,β⋅d,α−X,α⋅D,β−X,β⋅D,α),transverse shear strains:γα=x,α⋅d−X,α⋅D,where terms of order(θ3)2are neglected. The normal thickness strainsE33are zero due to the chosen kinematics. The quantities defined in Eq. (15) are assembled into the vector(16)ε=[ε11,ε22,2ε12,κ11,κ22,2κ12,γ1,γ2]Tusing Voigt notation. The second Piola–Kirchhoff stress tensor is defined by(17)S=SijAi⊗Aj.The membrane forcesnαβ, bending momentsmαβand shear forcesqαare defined by(18)nαβ=∫θ3Sαβdθ3mαβ=∫θ3Sαβθ3dθ3qα=∫θ3Sα3dθ3and arranged in the vector(19)σ=[n11,n22,n12,m11,m22,m12,q1,q2]T,which is work-conjugate to the shell strains assembled inε. This allows to compute the work integral(20)∫B0S:EdV=∫B0SijEijdV=∫Ω0∫θ3SijEijdθ3dA=∫Ω0εTσdAusing pre-integration in thickness direction. Accordingly, the virtual work term defined by the product of the virtual strainsδEand the stressesS(21)∫B0S:δEdV=∫Ω0δεTσdA,can be computed using virtual shell strainsδεand stress resultantsσ. The components of the virtual shell strainsδεare computed by(22)δεαβ=12(δx,α⋅x,β+δx,β⋅x,α)δκαβ=12(δx,α⋅d,β+δx,β⋅d,α+δd,α⋅x,β+δd,β⋅x,α)δγα=δx,α⋅d+δd⋅x,αand assembled akin to Eq. (16). The variation of the position vector is given byδx=δu. The derivatives are computed according byδx,α=δu,α. The variation of the director vectorδdand its derivatives is more involved and given in Section  2.5.Three-dimensional constitutive laws have to be adapted for the use in the presented shell formulation. The inextensibility in thickness direction entails zero transverse normal strainsE33. Nevertheless, a non-zero Poisson ratio can lead to thickness normal stressesS33≠0. In order to avoid artificial stiffening effects, the conditionS33=0has to be enforced, see  [1,10]. In this work a linear elastic St. Venant–Kirchhoff material is used. Thus, the static condensation of the three-dimensional constitutive law can be performed analytically and the condensated constitutive relation(23)[S11S22S12]=CP[E11E222E12]CP=E1−ν2[1ν0ν10001−ν2][S13S23]=CS[2E132E23]CS=κSE2(1+ν)[1001]with the shear correction factorκS, Young’ modulusEand Poisson’s ratioνcan be used directly. For rectangular cross sectionsκS=5/6is used, see  [1]. The condensated constitutive relation (23) relates stresses and strains. It has to be pre-integrated in thickness direction to attain the material matrixD¯, which connects shell strains and stress resultants. This integration can be performed analytically due to the approximations explained above and yields the constitutive relation(24)σ=D¯εwithD¯=[hCP000h312CP000hCS].For a detailed and more general derivation see  [10]. The use of more complicated nonlinear constitutive relations requires the consideration of thickness deformations. The constraintS33=0cannot be enforced by a simple static condensation; it has to be enforced e.g. by an iterative procedure  [18] or in a weak manner  [19].A purely deformation-based variational formulation is used within this work. No explicit measures against locking are considered.11The application of a non-uniform Gauss integration rule basing on the work of  [13] slightly reduces locking effects. This reduction shows the behavior of the presented shell formulation if measures against locking are taken.The vector of the independent deformation variables(25)v=[uω]contains the displacementuof the shell reference surface and the axial vector of rotationω. Conservative boundary tractionst¯0on the Neumann boundaryΓ0Nand conservative surface loadsp¯0on the reference surfaceΩ0can be applied, whereby all loads are assumed to be static. The principle of virtual work(26)G(v,δv)=∫Ω0δεTσdA−∫Ω0δvTp¯0dA−∫Γ0NδvTt¯0ds=0is used to derive the weak form of the equilibrium equation. Deformation boundary conditionsv=v¯on the Dirichlet boundaryΓ0Dare not considered in Eq. (26). They are enforced in a strong sense by using the solution spaceSforv. The solution spaceSand the trial spaceS0are given by(27)S={v∈H1|v=v¯onΓ0D}andS0={δv∈H1|δv=0onΓ0D},respectively. The space of all functions which have square integrable derivatives up to order 1 is denoted by the Sobolev spaceH1, see  [20] for details. Finally, the presented static boundary value problem is solved by a valuev∈Sthat fulfills(28)G(v,δv)=0∀δv∈S0.Eq. (28) serves as a basis for the isogeometric finite element shell formulation. A nonlinear system of equations arises due to the nonlinearity of the kinematic relations (14) and (15).The nonlinear differential equation (28) is linearized by(29)L[G(v,δv)]=G+DG(v,δv)⋅Δv=0withDG(v,δv)⋅Δv=∫Ω0δεTD¯Δε+ΔδεTσdA,for the Newton–Raphson iterative solution procedure, where a linear system of equations is solved for incremental deformationsΔvin every iteration. The termDG(v,δv)⋅Δvis the Gâteaux derivative of the weak formG(v,δv). The initial stress partΔδεTσin Eq. (29) requires the second variation of the shell strainsΔδε. The componentsΔδεαβ=12(δx,α⋅Δx,β+δx,β⋅Δx,α)(30)Δδκαβ=12(δx,α⋅Δd,β+δx,β⋅Δd,α+δd,α⋅Δx,β+δd,β⋅Δx,α+x,α⋅Δδd,β+x,β⋅Δδd,α)Δδγα=δx,α⋅Δd+δd⋅Δx,α+x,α⋅Δδdare arranged akin to Eq. (16) in the vectorΔδε. The incremental shell strainsΔεare obtained by replacing the symbolδbyΔin Eq. (22). The second variation of the current director vectorΔδdis given in Section  2.5. An update procedure to compute the current deformation statevifrom the deformation state of the last iteration stepvi−1and the incremental deformationsΔvis required. An additive update(31)ui=ui−1+Δu,is the obvious choice for the displacement vectoru. The situation is different for the axial vector of the rotationω. It is the state variable of the current director vectord=R(ω)D. Thus, several possibilities to perform the discretization ofdand the update of the rotational state exist. Within this work a multiplicative update strategy is chosen.The current director vectordis computed by Eq. (2) with the help of the rotational tensorRdefined by Rodrigues’ formula given in Eq. (4). The vectorωis the state variable ofR. The direction ofωdefines the rotational axis in space, whereas its lengthωis the angle of the rotation. The derivatives of the current director vectordare computed by(32)d,α=RD,α+R,αD,whereD,αis the differentiated reference director vector andR,αis given by(33)R,α=c1,αΩ+c1Ω,α+c2,αΩ2+c2(Ω,αΩ+ΩΩ,α)Ω,α=skewω,αω,α=ω,α⋅ωωc1,α=ω,αωcosω−sinωω2c2,α=ω,αωsinω−2+2cosωω3using the definitions of Eq. (4). Small values ofωrequire the use of the limit valuesc1=1,c1,α=0,c2=1/2,c2,α=0andω,α=0to ensure numerical stability. The variation of the current director vector is derived in  [21] in full extent. The matricesW=skewdand(34)H=1+h1Ω+h2Ω2h1=1−cosωω2h2=ω−sinωω3are introduced for a compact notation. Ifωapproaches zero, the valuesh1=1/2andh2=1/6have to be used. The variation of the current director vector(35)δd=WTHδωis expressed in terms of the variation of the axial vector of the rotationδω. A more detailed derivation of the variation can be found in  [10]. The second variation of the current director vectorΔδdalways occurs in a dot producth⋅Δδdwith an arbitrary vectorh∈R3. The variation is given by(36)h⋅Δδd=Hδω⋅[d⊗h−(d⋅h)1]HΔω+b⋅ΔHδωwithb=d×h. The first term in Eq. (36) can be computed straightforwardly, whereas the second term requires a further lengthy derivation to make it amenable to numerical computations. Within this work a simplification of the rotational formulation is used which entails the cancellation of the second term, see Section  2.6.The rotational tensor of the current iteration stepiis denoted byRi. It is computed from the rotational tensor of the last iteration stepRi−1using an update with the incremental rotationsΔω. Within this contribution a multiplicative update scheme for the rotational state is chosen. This is in contrast to previous works of the first author  [8] and the decisive difference which almost completely removes the path-dependency of the shell formulation with continuous rotations and additive rotational update that is presented in  [8]. Multiplicative update schemes were proposed e.g. in  [22] and  [23] for beams and shells, respectively. The incremental axial vector of the rotationΔωis inserted into Eq. (4). The resulting tensor is referred to asΔR=R(Δω). The current rotational tensor is computed by(37)Ri=ΔRRi−1.The differentiation of Eq. (37) with respect to the local Cartesian coordinates yields(38)R,αi=ΔR,αRi−1+ΔRR,αi−1,whereΔR,α=R,α(Δω,α)is computed by inserting the derivatives of the incremental axial vector of the rotationΔω,αinto Eq. (33). If the multiplicative update concept of the rotational state defined in Eq. (37) is applied, then incremental values of the axial vector of the rotationΔωhave to be inserted into the matrixH=H(Δω)defined in Eq. (34). The incremental valueΔωapproaches the zero vector if equilibrium is attained in the course of iterative nonlinear computations. Thus, the matrixHtends to(39)limΔω→0H=1,which justifies settingH=1. The equilibrium state is not changed, only an approximation in the equilibrium iteration is introduced. For a detailed discussion of this issue the reader is referred to  [21]. Thus, the variation of the current director vector and the derivatives thereof reduce to(40)δd=WTδωandδd,α=W,αTδω+WTδω,αwithW,α=skewd,α. The second variation of the current director vector reduces to(41)h⋅Δδd=δωTMU(h)ΔωwithMU(h)=d⊗h−(d⋅h)1.The matrixMU(h)is clearly unsymmetric. This yields a non-symmetric global stiffness matrix, which increases computational costs. In order to avoid this issue the symmetrized matrix(42)M(h)=12(d⊗h+h⊗d)−(d⋅h)1is used instead ofMU(h). In the state of equilibrium, the term(43)h⋅Δδd=δωTM(h)Δωis equivalent to Eq. (36), as all terms depending onωvanish. Thus, the symmetrization is justified. For more details see  [10]. The derivatives of the second variation of the director vector are given by(44)h⋅Δδd,α=δω,αTM(h)Δω+δωTM,α(h)Δω+δωTM(h)Δω,αwith the differentiated matrix(45)M,α(h)=12(d,α⊗h+h⊗d,α)−(d,α⋅h)1.The use of the multiplicative update concept averts numerical problems due to the singularity of the rotational tensorR(ω)atω=2kπfork∈Nas incremental valuesΔωare inserted intoR. The restrictionΔω<2πfor incremental values is of no practical relevance. Total rotations are unlimited.The presented shell theory is discretized with NURBS surfaces to make it amenable to numerical solution procedures. The isogeometric finite element method is used. Details about the basics of NURBS and isogeometric analysis can be found in  [24,25]. Complex geometries consist in general of several NURBS patches, which are defined independently in the geometry model. The total number of patches is denoted bynp. A superscriptkrefers to the patch of the concerned quantity. The set ofncpk=n1k⋅n2kcontrol points(46)B(ij)k=[x(ij)k,y(ij)k,z(ij)k,w(ij)k]T=[X(ij)kw(ij)k]i=1,…,n1kj=1,…,n2ktogether with the two open knot vectors(47)Ξαk={ξ1α,ξ2α,…,ξnαk+pαk+1α}α=1,2defines the patchkwith basis functions of orderp1kandp2kin the first and second parametric direction. Every tensor product of two knot spans(48)[ξi1,ξi+11]×[ξj2,ξj+12]i∈{p1k+1,…,n1k}j∈{p2k+1,…,n2k}defines a finite elemente. This is performed for all combinations ofiandjseparately for every patchk. The total number of elements is given bynel=∑k=1npnelkwithnelk=(n1k−p1k)(n2k−p2k)and contains also zero-sized elements in the case of repeated knot values. The total number of control points is denoted byncp=∑k=1npncpkwithncpk=n1k⋅n2k. Control points with corresponding locationsX(ij)k=X(i1j1)k1for all combinations ofi=1,…,n1k,j=1,…,n2kandk=1,…,npare assigned to the same nodeXI=X(i1j1)k1for the finite element analysis. The total number of finite element nodesXIis referred to asnnp. The number of control points which have influence on an arbitrary element in patchkis given bynenk=(p1k+1)(p2k+1). The bijective function(49)fe:{1,…,n1k}×{1,…,n2k}×{1,…,np}×{1,…,nelk}→{1,…,nenk}establishes a relation between control points and element node index for each elemente. The element node index is thus computed byI=fe(i,j,k,e). Univariate B-spline basis functions of orderpare recursively defined by the Cox–de Boor formula(50)p=0:Ni0(ξ)={1ifξi≤ξ≤ξi+10otherwisep>0:Nip(ξ)=ξ−ξiξi+p−ξiNip−1(ξ)+ξi+p+1−ξξi+p+1−ξi+1Ni+1p−1(ξ).The NURBS surface basis functions of elementein patchkare defined by(51)NI(ξ1,ξ2)≔Ni1p1k(ξ1)Ni2p2k(ξ2)w(ij)kWkwithWk=Wk(ξ1,ξ2)=∑I=1nenkNi1p1k(ξ1)Ni2p2k(ξ2)w(ij)k,where the relationI=fe(i,j,k,e)is used. With the help of the basis functionsNIthe interpolation of a physical pointXon the NURBS surface is given by(52)X(ξ1,ξ2)=∑I=1nenkNI(ξ1,ξ2)XIwithXI=X(ij)k,I=fe(i,j,k,e).The partial derivatives of the position vectorXwith respect to the parametric directionαare given by(53)∂∂ξαX(ξ1,ξ2)=∑I=1nenk∂NI(ξ1,ξ2)∂ξαXIwith∂NI(ξ1,ξ2)∂ξα=w(ij)kNi3−αp3−αk(ξ3−α)Wk∂Niαpαk(ξα)∂ξα−∂Wk∂ξαNiαpαk(ξα)(Wk)2.The paradigm of isogeometric analysis is to use the basis functions of the geometry description also in the frame of the analysis for the geometry definition and the approximation of unknowns. Thus, the geometry is defined exactly in every discretization. Within this work the geometry is defined by means of NURBS surface patches as defined in Section  3. The isogeometric shell element formulation presented in the following bases on the shell theory presented in Section  2. Computations with this element formulation are referred to as continuous in the numerical examples in Section  6.The shell middle surface in the reference and in the current configuration as well as the derivatives thereof are interpolated by(54)X=∑I=1nenkNIXI,xh=∑I=1nenkNIxI,X,α=∑I=1nenkNI,αXI,x,αh=∑I=1nenkNI,αxI,with the NURBS basis functionsNIdefined in  (51) and the derivatives of the basis functions with respect to local Cartesian coordinatesNI,α. The current nodal position vectorsxIare computed byxI=XI+uIfrom the nodal displacementsuI. The superscripthdenotes approximated quantities. The differentiated basis functions with respect to the local Cartesian coordinatesNI,αcan be computed by(55)NI,α=Jαβ−1∂NI(ξ1,ξ2)∂ξβfrom the differentiated basis functions with respect to the parametric coordinatesξiusing the transformation rule  (13).The reference director vectorDis interpolated with the NURBS basis functionsNI. For this purpose a set of discrete nodal director vectorsDIis required. The interpolation should be at leastC1-continuous in smooth regions and must be discontinuous at kinks. A method to compute nodal basis systems which interpolate the director vector best possible in smooth regions is proposed in  [8]. It is extended to achieve a discontinuous interpolation of the director vector at kinks in  [9]. This method named computation of optimal nodal basis systems is given in full detail in  [10]. A nodal basis systemA(ij)k={Am(ij)k}m=1,2,3is computed at every control pointB(ij)k. The nodal director vectors(56)DI=A3(ij)kare obtained withI=fe(i,j,k,e)for every element nodeIof the elemente. The reference director vector and its derivatives are interpolated by(57)Dh=∑I=1nenkNIDIandD,αh=∑I=1nenkNI,αDIfrom the nodal director vectorsDI. The incremental axial vector of the rotationΔωis interpolated by two nodal rotationsΔβI=[ΔβαI]around aligned basis vectorsaαIin smooth regions and by three global rotationsΔβI=[ΔβiI]at kinks. The reduction to two rotational degrees of freedom in smooth regions eliminates zero energy modes yielded by rotations around the director vectord. Thus, the use of drilling rotation stabilization can be avoided. This concept is proposed e.g. in  [26]. The aligned basis vectors in smooth regions(58)aαI=RIiAαIwithAαI=Aα(ij)k,I=fe(i,j,k,e)are computed by an orthogonal rotation with the nodal rotation matrix(59)RIi=R(ΔωI)RIi−1,where the nodal increment of the axial vector of the rotationΔωIhas to be inserted into Eq. (4) andRIi−1denotes the nodal rotational matrix from the last iteration step. The transformation matrix(60)T3I={[a1Ia2I]for nodes in smooth regions13×3for nodes on kinksis introduced to establish the transformation between incremental nodal rotationsΔβIand the increment of the axial vector of the rotationΔωI=T3IΔβIin smooth regions. At kinks three global rotations are used and thus no transformation is required. Finally, the increment of the axial vector of the rotationΔωand the derivatives thereof are interpolated from incremental nodal rotationsΔβIby(61)Δωh=∑I=1nenkNIT3IΔβIandΔω,αh=∑I=1nenkNI,αT3IΔβI,respectively. The interpolation of the axial vector of the rotation used here is significantly simpler than the interpolation used in previous works  [8,9]. For more details see Appendix. The interpolated current director vectordhis computed by an orthogonal rotation(62)dh=(Ri)hDhwith(Ri)h=R(Δωh)(Ri−1)h,where the interpolated increment of the axial vector of the rotationΔωhhas to be inserted into Eq. (4) and(Ri−1)hdenotes the rotational matrix from the last iteration step. This concept is classified as continuous rotational concept as the continuously defined reference director vector is rotated. The determination of the current director vector given in Eq. (62) ensures the inextensibility condition‖dh‖=‖Dh‖. The derivatives of the rotational matrixR,αiare interpolated by(63)(R,αi)h=R,α(Δω,αh)(Ri−1)h+R(Δωh)(R,αi−1)h,where the interpolated derivatives of the axial vector of the rotationsΔω,αhhave to be inserted into Eq. (33). The spatial derivatives of the current director vector are given by(64)d,αh=(R,αi)hDh+(Ri)hD,αh.A similar rotational formulation named fullSO(3)update is discussed in  [23] and elaborated in  [27]. But the idea is not followed further in  [23] as the higher computational effort does not pay off for the employed low-order Lagrange basis functions. The situation is shown to be different for higher order NURBS basis functions with the help of numerical examples in Section  6. This concept has been used in isogeometric analysis for the first time in  [10], where it is referred to by the abbreviationΔRIDω. This abbreviation reflects that a multiplicative update of the rotation of interpolated director vectors is performed, and thatΔωis the interpolated rotational quantity.The interpolation of the shell strainsεhis obtained by replacing all quantities in Eqs. (15) and (16) by their interpolated counterparts. The interpolation of the variation of the shell strainsδεhrequires the interpolation of the variation of the position vectorδxhand the director vectorδdhas well as their derivatives. The variationδxhand its derivatives are expressed by(65)δxh=∑I=1nenkNIδuIandδx,αh=∑I=1nenkNI,αδuIas a function of the virtual nodal deformationsδuI. The interpolation of the variation of the director vectorδdis given by(66)δdh=WhTδωh=∑I=1nenkTIδβIwithTI=WhTNIT3IandWh=skewdh. AccordinglyW,αh=skewdh,αis defined. The derivatives of the variation of the current director vector read(67)δd,αh=∑I=1nenkTI,αδβIwithTI,α=[W,αhTNI+WhTNI,α]T3I.The interpolation of the variation of the shell strains is expressed by(68)δεh=∑I=1nenkBIδvI=∑I=1nenkBI[δuIδβI]withBI=[NI,1x,1hT0NI,2x,2hT0NI,1x,2hT+NI,2x,1hT0NI,1d,1hTx,1hTTI,1NI,2d,2hTx,2hTTI,2NI,2d,1hT+NI,1d,2hTx,1hTTI,2+x,2hTTI,1NI,1dhTx,1hTTINI,2dhTx,2hTTI]in compact form using theBImatrix. The incremental values of the shell strains are computed akin by replacing the symbolδbyΔ. The linearization of the weak form of equilibrium requires the second variation of the shell strainsΔδε. The interpolation of the membrane components is given by(69)Δδεαβh=12(δx,αh⋅Δx,βh+δx,βh⋅Δx,αh)=∑I=1nenk∑K=1nenk12(NI,αNK,β+NI,βNK,α)δuIT1ΔuK.The transverse shear strain and the curvature components require the interpolation of the second variation of the director vector (Eq. (43)) and the derivatives thereof (Eq. (44)). These quantities are interpolated by(70)h⋅Δδdh=∑I=1nenk∑K=1nenkδβITT3ITNIMh(h)NKT3KΔβKand(71)h⋅Δδd,αh=∑I=1nenk∑K=1nenkδβITT3IT[NI,αMh(h)NK+NIMh(h)NK,α+NIM,αh(h)NK]T3KΔβK,where the matricesMh(h)andM,αh(h)are obtained by inserting interpolated valuesdhandd,αhinto Eq. (42) and Eq. (45), respectively. The abbreviation(72)qˆIKββ(h)=NINKT3ITMh(h)T3Kallows the interpolation of the second variation of the shear strains to be expressed by(73)Δδγαh=∑I=1nenk∑K=1nenk{δuITNI,αTKΔβK+δβITNK,αTITΔuK+δβITqˆIKββ(x,αh)ΔβK}in short form. Using the definitions introduced above and the abbreviation(74)mˆIK,αββ(h)=T3IT[(NI,αNK+NINK,α)Mh(h)+NINKM,αh(h)]T3K,the second variation of the curvatures is interpolated by(75)Δδκαβh=12∑I=1nenk∑K=1nenk{δuIT[NI,αTK,β+NI,βTK,α]ΔβK+δβIT[NK,βTI,αT+NK,αTI,βT]ΔuK+δβITmˆIK,αββ(x,βh)ΔβK}.The linearization of the weak form has to be interpolated to attain a linear system of equations within each iteration step. The residual vectorfarises from the weak formGand the consistent tangent stiffness matrixKarises from the Gâteaux derivativeDG(v,δv)⋅Δvof the weak form given in (29). The interpolation of the Gâteaux derivative reads(76)DGh(vh,δvh)⋅Δvh=∑I=1nenk∑K=1nenk∫Ω0(δvITBITD¯BKΔvK+δvITGIKΔvK)dA,where Eq. (68) is used. The initial stress matrixGIKoriginates from the termΔδεhTσand is attained by multiplying Eqs. (69), (73) and (75) with their respective conjugate stress resultant. It is given by(77)GIK=[nˆIKgˆIKgˆKITmˆIK,1ββ(h1)+mˆIK,2ββ(h2)+qˆIKββ(hq)]with the matrices(78)nˆIK=1(n11NI,1NK,1+n22NI,2NK,2+n12(NI,1NK,2+NI,2NK,1))gˆIK=m11NI,1TK,1+m22NI,2TK,2+m12(NI,1TK,2+NI,2TK,1)+(q1NI,1+q2NI,2)TKand the vectorshq=q1x,1h+q2x,2h,h1=m11x,1h+m12x,2handh2=m22x,2h+m12x,1h. The interpolation of the weak form (26) is given by(79)Gh=∑I=1nenk[∫Ω0δvITBITσdA−∫Ω0δvITNIp̄0dA−∫Γ0NδvITNIt̄0ds].Stiffness matrixKand residual vectorfare assembled element-wise for each elementein the domainΩe. The element load vector for the nodeIis defined by(80)fIe,ext=∫ΩeNIp̄0dA+∫ΓeNNIt̄0dsand originates from the second and the third term in Eq.  (79). The entries of the element stiffness matrixKeand the element residual vectorfeare computed by(81)KIKe=∫Ωe(BITD¯BK+GIK)dAandfIe=∫ΩeBITσdA−fIe,ext,respectively. The assembly procedure to attain the global stiffness matrixKand the global residual vectorfis defined by(82)δvˆTKΔvˆ=⋃e=1nel∑I=1nenk∑K=1nenkδvITKIKeΔvKandδvˆTf=⋃e=1nel∑I=1nenkδvITfIewith(83)Δvˆ=[Δv1TΔv2T…ΔvnnpT]Tandδvˆ=[δv1Tδv2T…δvnnpT]T.Finally, the finite element approximation of the linearized weak form is written by(84)Lh[G(v,δv)]=δvˆT(KΔvˆ+f)=0.The variation of the nodal valuesδvˆcan be dropped due to its test function character. Thus, the linear global system of equations(85)KΔvˆ+f=0for the computation of nodal incrementsΔvˆarises. This system has to be solved within each iteration of a Newton–Raphson solution. The iterative solution process will converge quadratically in the proximity of the solution due to the consistent linearization performed above.The integrals for the element stiffness matrix and the element residual vector defined in Eq. (81) have to be evaluated numerically. In this investigation Gauss integration is used. Three different Gauss schemes are considered and compared in the numerical examples in Section  6. The number of integration points required for each integration scheme is compared in Fig. 2for an exemplary NURBS mesh.Univariate B-spline basis functions of orderpcan be integrated exactly by usingp+1integration points in every knot span. An exact integration of rational NURBS basis functions is not possible for arbitrary weights. However, in common cases the use ofp+1integration points yields accurate results. Surface integrals are integrated using(86)ngp=(p1k+1)(p2k+1)integration points, wherepαkare the orders of the basis functions of the concerned patchk. The usage of the integration rule (86) is denoted by full integration (FI). This integration scheme yields 900 integration points for the exemplary NURBS mesh of Fig. 2. The integration points are visualized in Fig. 2(a).The use of a more efficient integration rule is proposed in  [28]. Uniform Gauss integration with(87)ngp=(ceilp1k/2+1)(ceilp2k/2+1)integration points is used, whereceilxdenotes the smallest integer not less thanx. This integration scheme is a stable choice for the evaluation of the stiffness matrix ifnαk−pαk≥2holds in both parametric directions. The usage of integration rule (87) is denoted by reduced integration (RI) in the following. This integration scheme yields 324 integration points for the exemplary NURBS mesh of Fig. 2. The integration points are visualized in Fig. 2(b).A non-uniform Gauss integration rule for beam elements with uniform continuity is proposed in  [29]. Basing on a balance between unknowns and equations integration rules for quadratic and cubic B-spline basis functions are provided. The number of integration points is chosen to both alleviate locking and to preclude zero-energy modes. This approach is applied to shell formulations basing on NURBS surfaces in  [13].Basing on the works aforementioned, which are restricted to quadratic and cubic B-splines, an integration rule for higher order NURBS surfaces is proposed in the following. This integration scheme represents a generalization of the scheme established in  [13]. The number of integration points is defined separately for every knot span in the two parametric directionsξα. The number of Gauss points is given byngp=pαk−1for knot spans at the patch boundary ifpαk>3holds. Ifpαkis equal to two or three, thenngp=pαkis used. In the second and in the penultimate knot span the number of integration points is given byngp=max(2,m), wheremis the uniform multiplicity of the interior knot values. In all other interior knot spansngp=mis used. If the number of knot spans isnαk−pαk≤4, thenngp=max(1,m)is used for the interior knot spans. The usage of this integration scheme is denoted by non-uniform integration (NI). The rules for the determination of integration points for every element are summarized in Table 1. The accuracy of the integration rule slightly depends on the boundary conditions. If no or almost no boundary conditions are set in one parametric direction, the system response may be too soft. Thus, we add one more integration point at each end of the knot vector, which yields a more conservative integration rule. In the third knot span from either side alsongp=max(m,2)is used. In this case the integration rule is referred to as non-uniform integration (NI∗). This alteration affects only knot vectors with more than four elements in the corresponding parametric direction. Thus, in Table 2only the two affected cases are displayed.The definition of the non-uniform integration rule (NI∗) is rather empirical but it is suitable to stabilize computations in most cases. However, the numerical example given in Section  6.6 shows that adding one integration point at each end of the knot vector is not sufficient in all cases. This clearly shows that in-depth research is necessary to establish a reliable non-uniform integration rule. In all cases the correct number of rigid body rotations in an eigenvalue analysis of an unsupported patch was observed. This shows that no zero energy modes occur. At this point it is to be noted that the primary aim of establishing and using non-uniform integration within this work is to show the behavior of the proposed shell formulation if methods against locking are taken. Thus, no further investigations on stability and efficacy against locking are performed here. The non-uniform integration rule is applied as defined in order to examine the influence of methods against locking on each rotational concept. Furthermore, the reduction of computational costs yield by the reduction of integration points is a welcome side effect.The integration scheme for the two-dimensional case is attained by a tensor product of the one-dimensional integration schemes. The use of non-uniform integration (NI) yields 144 integration points for the exemplary NURBS mesh of Fig. 2. The integration points are visualized in Fig. 2(c).The proposed integration rule is not able to determine the area of the reference surface accurately. Thus, the element areaAe=∫ΩedAis computed using the reduced integration rule defined in Eq. (87). With the help of the accurate element areaAea correction factor is determined.Linear and nonlinear numerical examples are used to verify the implementation and to show the efficiency and robustness of the proposed Reissner–Mindlin shell formulation, which uses a continuous rotation to determine the current director vector. The results are compared to an isogeometric Reissner–Mindlin shell formulation with a discrete rotational concept, see Section  6.1. The two shell formulations differ only in the rotational concept and are identical in all other aspects in order to allow a good comparison. Furthermore, efficiency is compared to finite element shell formulations with linear Lagrange basis functions. The influence of the integration schemes is assessed. Special focus is put on problems yielding large deformations and large rotations as well as on shell geometries with kinks. The orders of the NURBS basis functions in all patches and all parametric directions are uniform and denoted byp. Order elevation is performed usingk-refinement. All computations are carried out in an extended version  [30] of the finite element code FEAP  [31].Computations with the shell formulation presented in this contribution are referred to as continuous to denote the continuous character of the interpolation of the director vector. In  [10] the abbreviationΔRIDωis used to refer to this concept. The results of the presented shell formulation with the continuous rotational concept are compared to computations with a discrete rotational concept, of which the characteristic formulae are sketched in the right column of Table 3; see  [8,10] for more details. This concept in its diverse forms is used in the majority of Reissner–Mindlin shell formulations in literature, e.g.  [7,13,23,32,33]. The main feature of this concept is the interpolation of the current director vector in the formdh=∑I=1nenkNIRIiDI. In some cases a multiplicative update instead of the additive update shown in Table 3 is used. The results do not differ significantly between the different forms of discrete concepts. In  [10] computations with the discrete concept and a multiplicative update are denoted byΔRND. The results have shown to coincide with the RND concept exactly except in proximity to the singularity ofR. Where required by the absolute value of rotations the multiplicative schemeΔRND is used for computations; in other cases the RND scheme as shown in Table 3 is used for the discrete concept. The difference between the RND and theΔRND concept in terms of computational costs is negligible. A comparison of the presented isogeometric shell formulation with continuous rotations to previous works  [8,9], which use a continuous rotational concept with more complicated interpolation and additive rotational updates, is given in the Appendix.The pinched cylinder is a numerical benchmark from the shell obstacle course proposed in  [34]. It is a severe test for both inextensional bending modes and complex membrane states  [34]. The geometrical shape is a cylinder of radiusR=300and lengthL=600. It is constrained at both ends by a rigid diaphragm. The material is specified by a Young’s modulusE=3.0⋅106, a Poisson’s ratioν=0.3and a wall thicknesst=3. Due to symmetry only one eight of the geometry is modeled. A system sketch is given in Fig. 3. The system is loaded by a point loadF. The consideration of transverse shear deformations entails a slight singularity in the deformations at the loaded point. The influence of this singularity is negligible as can be seen in the mesh refinement study in Fig. 4(a). The rigid diaphragm is modeled by fixing all in-plane displacements at the concerned edge as well as the rotation around the tangent vector in circumferential direction. All computations are linear and the curvature is constant. Thus, the differences between the deformation results of the presented shell formulation with the continuous rotational concept and deformation results of a shell formulation with the discrete rotational concept are very small and only results for the presented shell formulation with continuous rotations are shown. The pinched cylinder is used to show the influence of the integration rules on the deformation results and on computational costs. Furthermore, the accuracy of the presented shell formulation with continuous rotations is compared to isogeometric reference shell formulations. All deformations in Fig. 4are normalized to a deformationuref=1.840⋅10−5of the loaded control point in direction of the load. This value is the rounded result of a computation with 200×200 elements of polynomial orderp=5with the presented shell formulation using the continuous rotational concept and non-uniform integration (NI).The deformation results of computations with the continuous rotational concept using full integration (FI), reduced integration (RI) and non-uniform integration (NI) are compared in Fig. 4(a). Full integration (FI) yields the worst results for all orders. The convergence behavior is improved for all three displayed orders by using reduced integration (RI), whereby the greatest difference occurs forp=2. The significant improvement of the accuracy forp=2is a clear indication for the presence of locking, which is, from a numerical point of view, caused by spurious constraints. The use of less integration points reduces the number of constraints in the system, and thus reduces locking effects, see  [13]. The graphs of full integration (FI) and reduced integration (RI) forp=5almost lie on top of each other. The reduction of the number of integration points fromngp=6(FI) tongp=4(RI) is not sufficient to alleviate locking significantly. The use of non-uniform integration (NI) further reduces the number of integration points. The results of computations using non-uniform integration (NI) are more accurate than those with reduced integration (RI). Even in the high order casep=5significant improvements are visible if non-uniform integration (NI) is used. Thus, locking occurs even for higher orders. A positive side effect of non-uniform integration (NI) is a significant reduction of computational costs. The presented shell formulation with the continuous rotation concept is compared to a shell formulation with the discrete rotational concept in Table 4. In the case of full integration (FI), the computational costs for the formation of the stiffness matrix of the continuous rotation concept are between 2.3 times and 1.3 times higher than for the discrete rotational concept. In the case of non-uniform integration (NI), this ratio reduces to 1.5 times for an orderp=2, 1.17 times forp=3and 1.05 times forp=6. As a rule of thumb, it can be said that the computational costs of reduced integration (RI) are about half of full integration (FI), whereas non-uniform integration (NI) is only about one fifth of it. The time for solution is independent of the integration rule and the rotational concept.The deformation convergence behavior of the presented shell formulation with continuous rotations is compared to reference shell formulations in Fig. 4(b). The isogeometric Kirchhoff–Love shell proposed by Kiendl et al.  [3] and the isogeometric Reissner–Mindlin shell presented by Benson et al.  [7] are used as reference. The ratio between radius and wall thickness isR/t=100, which classifies the system as thin shell. Thus, transverse shear strains do not cause significant deformations. This allows a comparison to results attained with Kirchhoff–Love shell formulations. Computations are performed with orderp=2,p=4andp=5. The results of the presented shell formulation with the continuous rotational concept using non-uniform integration (NI) are slightly superior to the reference results of Kiendl et al.  [3]. The use of non-uniform integration for the reference shell formulation of Kiendl et al.  [3] would surely yield results which are in the same range as the results of the presented shell formulation with continuous rotations. The accuracy of computations with presented shell formulation with continuous rotations improves with rising orderpof the NURBS basis functions, which is not the case in the reference computations of Benson et al.  [7].This example shows that the reduction of integration points, which is yielded by the use of non-uniform integration (NI), increases efficiency significantly as both accuracy is improved and computational costs are reduced. Thus, for this example the use of non-uniform integration is recommended.The Scordelis–Lo roof is part of the shell obstacle course proposed in  [34] and mainly tests the ability to solve complex states of membrane strains. Membrane locking has no significant influence in this example; see  [34]. The geometry is defined by an 80° section of a cylinder which is fixed by a rigid diaphragm at both ends of the cylinder. The two other edges are free. The radius of the cylinder isR=25and the length is given byL=50. Only one quarter is modeled due to symmetry. A uniform gravity load ofg=90is applied in vertical direction, which is defined by the normal vector in the intersection of the two symmetry axes. A system sketch is given in Fig. 5. The Young’s modulus and Poisson ratio are defined byE=4.32⋅108andν=0, respectively. The wall thickness ist=0.25. The rigid diaphragm is modeled by fixing all in-plane displacements at the concerned edge.The displacementsuin vertical direction at point A are used in Fig. 6to assess the deformation convergence behavior. The reference deformation valueuref=0.3024is taken from  [34]. A comparison to other isogeometric shell formulations is given in Fig. 6(a). The number of elements per complete edge is used as abscissa to allow a good comparison to the results of  [11], which are performed for the complete model. Thus, the number of elements per edge in the symmetric model is multiplied by two. The deformation results in Echter et al.  [11] are provided depending on the number of control points along the complete edge. This number has to be subtracted by two for the use in Fig. 6(a). The results in Kiendl et al.  [3] are provided depending on the number of control points along one symmetric part of the edge. This number has to be subtracted by two and then multiplied by two for the use in Fig. 6(a). The reference curve Ref. Echter et al.  [11], R-M, hier. are computations with the hierarchic isogeometric shell formulation proposed in  [11] using a Reissner–Mindlin kinematics and a pure displacement formulation. The reference curve Ref. Echter et al.  [11], R-M, hier. HS are computations with the hierarchic isogeometric shell formulation proposed in  [11] using a Reissner–Mindlin kinematics and a hybrid stress Hellinger–Reissner variational formulation. The reference curve Ref. Kiendl et al.  [3], K-L are computations with the isogeometric Kirchhoff–Love shell formulation proposed in  [3]. Computations with the isogeometric shell formulation with continuous rotations are given for full integration (FI), reduced integration (RI) and non-uniform integration (both NI and NI∗). The results of the computations using full integration (FI) correspond very well to the reference results with the displacement-based shell formulation of Echter et al.  [11] and the isogeometric Kirchhoff–Love shell formulation of Kiendl et al.  [3]. If reduced integration (RI) or non-uniform integration (both NI and NI∗) is used, then the computations with the presented shell formulation with continuous rotations agree very well with the results of the hybrid stress formulation of Echter et al.  [11].A more detailed comparison of the integration schemes presented in this work is given in Fig. 6(b). Here the number of control points along one part of the symmetric edge is used as abscissa. Reduced integration (RI) yields the most precise results for coarse meshes, and non-uniform integration (NI) is the best choice for fine meshes. The differences between non-uniform integration (NI) and non-uniform integration (NI∗) are only very small. Furthermore, the influence of the area correction factor introduced in Section  5.3 is studied. Computations where this correction factor is skipped are denoted by an appended ANC in Fig. 6(b). The curves for computations with corrected area and without corrected area correspond very well. This shows that the influence of the area correction factor on the deformation results is negligible. The error of the area is given in Table 5for some exemplary values. The area is computed several orders of magnitude more exact if the correction factor is used in comparison to computations without the correction factor. However, the influence of an error for the area in the range of 10−5 is negligible.This example shows that the presented shell formulation with continuous rotations is competitive to existing isogeometric shell formulations in the literature. If reduced integration or non-uniform integration is used, then locking effects are significantly reduced for the Scordelis–Lo roof with basis functions of orderp=2. The shell formulation of this work with reduced or non-uniform integration yields the same level of accuracy as the hierarchic isogeometric shell formulation with hybrid stress formulation proposed in  [11].The hemispherical shell with hole is used to test the ability of the presented shell formulation with continuous rotations to handle large deformations and finite rotations and to compare its efficiency to an isogeometric shell formulation with the discrete rotational concept as well as to Lagrange-based finite element shell formulations. The linear form of this benchmark example was proposed in  [35]. The geometry is a hemispherical shell with an18°hole in the center. The upper and lower edge are free. The system is loaded with radial point loads2Fon the equatorial edge with alternating orientation every90°. Due to symmetry only one fourth of the system is modeled. The system is sketched in Fig. 7. The radius of the hemisphere is given byR=10and the wall thickness ist=0.04. A Young’s modulus ofE=6.825⋅107and a Poisson’s ratio ofν=0.3are used as material parameters. The loadF=100is applied in ten equal loadsteps and yields large deformations and rotations. Nonlinear reference computations with finite shell elements can be found e.g. in  [23,33]. Nonlinear computations with isogeometric shell elements are reported in  [36,37], where results for discretizations with 16 and 256 elements are provided. Results obtained with the discrete rotational concept as well as with a more expensive, additively updated continuous rotational concept are given in  [8]. The main intention within this contribution is to show the competitiveness of the presented isogeometric shell formulation with the continuous rotational concept to Lagrange-based finite shell element formulations. The consideration of transverse shear deformations entails a slight singularity in the deformations at the loaded points. Thus, the solution tends to infinity for decreasing element size. In the range of the considered element sizes, the effect of the singularity is very small in comparison to the differences between the respective rotational concepts. Thus, the comparison of different concepts with the help of a deformation convergence study is of significance and this example can be used for a study of efficiency. The deformationuref=5.86799is used as reference value in Figs. 8–10. This value is obtained by determining the mean value of the deformationucomputed with the proposed shell formulation using the continuous rotational concept and the integration schemes FI, RI and NI∗, whereby the system is discretized with 200×200 elements of orderp=6. Two finite shell element formulations based on linear Lagrange basis functions (p=1) are used as reference for the assessment of efficiency. The results of a purely deformation-based nonlinear four node shell element are referred to as FE displacement. This shell element uses the rotational formulation presented in  [38] and the discrete shear gap (DSG) method (see  [39]) to alleviate locking effects. Results of a nonlinear mixed hybrid quadrilateral shell element basing on a Hu–Washizu variational formulation are referred to as FE Hu–Washizu. This element formulation is described in  [33]. Both finite shell elements were provided by Friedrich Gruttmann and are implemented in the same finite element code as the isogeometric shell elements of this work.The deformation convergence behavior of the presented shell formulation with the continuous rotational concept is compared to computations with the discrete rotational concept and to Lagrange-based finite shell element computations in Fig. 8 for different ordersp. Results for full integration (FI) are given in Fig. 8(a). The deformation results of the proposed shell formulation with continuous rotation show monotonically increasing accuracy for mesh refinement and order elevation, and the graphs of all orders converge from below. Computations with the discrete rotational concept yield comparable results forp=2, but this concept yields convergence from above for higher orders with deteriorating accuracy for rising orders. Beginning fromp=6, computations with discrete rotation are instable and thus not shown. The error level of the reference finite element computations with Lagrange basis functions of orderp=1is in the same range than isogeometric computations with the proposed shell formulation using the continuous rotational concept and basis functions of orderp=3. The reference finite element formulations use efficient measures against locking effects, whereby for the isogeometric shell formulation no measures at all are taken against locking effects. This shows that the isogeometric shell formulation is seriously affected by locking effects. The number of iterations required in the nonlinear Newton–Raphson equilibrium iteration is given in Table 6for an exemplary mesh. Quadratic convergence in the energy norm has been attained in all cases.The non-uniform integration (NI∗) scheme is applied in Fig. 8(b). The hemispherical shell with hole requires the usage of the NI∗ scheme for non-uniform integration as in one parametric direction no boundary conditions are set. Thus, in the third knot span from either side one integration point is added. If the unaltered NI scheme is used, then the system response is slightly too soft and the deformation convergence behavior is deteriorated. However, the results of the NI and the NI∗ scheme converge to the same deformations. The deformations of all computations are slightly increased in comparison to full integration (FI). This improves accuracy for the proposed shell formulation with continuous rotations, especially forp=2. In contrast to that, the accuracy of computations with discrete rotations is deteriorated for all orders, even forp=2and fine meshes (beginning from 30 elements per edge). The comparison to the reference finite element computations with linear Lagrange basis functions shows that locking is still present.The number of integration points is reduced in order to save computational costs and to alleviate locking effects. The effect of using reduced integration (RI) and non-uniform integration (NI∗) on locking effects and accuracy of deformation results is displayed in Fig. 9, separately for the proposed shell formulation with continuous rotations and for an isogeometric shell formulation with discrete rotations. Double logarithmic diagrams displaying the error of deformation are used to show the influence of the integration schemes in detail. Results of the proposed isogeometric shell formulation which uses the continuous rotational concept, are shown in Fig. 9(a). The use of reduced integration (RI) improves the accuracy of computations in comparison to full integration (FI) for all orders. The effect is more pronounced for even orders, especially forp=2. This is due to the higher ratio between integration points of full integration (FI) to reduced integration (RI). The use of non-uniform integration (NI∗) entails a further significant gain in accuracy forp=2, whereas the accuracy of computations withp=3is only improved for fine meshes. The peaks in the NI∗-graphs forp=2(at 40 elements per edge) andp=3(at 100 elements per edge) are due to a change from underestimated deformations to overestimated deformations. Computations withp≥4slightly overestimate deformations and show some oscillatory behavior, see Fig. 8(b). This entails the peaks in the NI∗-graphs forp=4andp=5in Fig. 9(a) and prevents significantly improved deformation convergence behavior. The resulting accuracy is slightly better than for full integration (FI). Due to the reduced computational costs in comparison to FI and RI computations, non-uniform integration (NI∗) is nevertheless an attractive choice. The effect of the alleviation of locking effects on an isogeometric shell formulation with the discrete rotational concept is assessed in Fig. 9(b). The use of reduced integration (RI) forp=2entails significant improvements of accuracy. In contrast to that, accuracy of computations withp≥3slightly deteriorates in comparison to full integration (FI). This is due to the fact that the alleviation of locking yielded by reduced integration (RI) leads to larger deformations, which is counterproductive as computations with the discrete rotational concept converge from above. The use of non-uniform integration (NI∗) yields similar results. The deformation convergence behavior of computations withp=3andp=4is slightly deteriorated in comparison to full integration (FI). Computations withp=5do not converge for all discretization and are thus not displayed. The accuracy of computations withp=2is initially improved by the reduction of integration points, but beginning from 30 elements per edge the deformation is overestimated and the deformation convergence behavior ofp=2is akin to higher orders. These observations suggest that methods to alleviate locking effects are counterproductive if a discrete rotational concept is applied.An important point in the comparison of rotational concepts and integration schemes is the efficiency of computations. Efficiency is defined by required computational costs to attain a pre-defined error level. All isogeometric formulations and the reference Lagrange-based finite shell elements are implemented into the finite element code FEAP. This allows a meaningful comparison of computational costs measured in CPU seconds. All computations are performed with one core of an Intel®  Core™ i7-3520M CPU in order to exclude scaling effects. The global system of equations is solved with the PARDISO solver from the Intel®  Math Kernel Library. An error level of±0.1%with respect tourefis chosen for the diagrams in Fig. 10. The underlying numbers for these diagrams can be found in  [10]. The appropriate discretization for all combinations of rotational concept, integration scheme and orderpcan be inferred from the double logarithmic diagrams in Fig. 9. The computational costs consisting of costs for the formation of the stiffness matrix and for the solution of the global system of equations summed up for all load steps are given in Fig. 10(a). In general, the proposed shell formulation with continuous rotation is more efficient than the shell formulation with discrete rotation, except forp=2for full integration (FI). The combination of the continuous rotational concept and non-uniform integration (NI∗) yields the most efficient computations for2≤p≤5. Forp=6reduced integration in combination with the continuous rotational concept is the most efficient choice. Here reduced integration (RI) is more effective than non-uniform integration (NI∗) as computations with reduced integration (RI) require less elements than computations with the non-uniform integration (NI∗) in order to obtain the pre-defined error level. This is due to the oscillations which are yielded by non-uniform integration (NI∗) and are more pronounced for rising orders. The computational costs of the combination continuous rotational concept and non-uniform integration (NI∗) forp=2(20.35s) are in the same order of magnitude as for the reference finite element shell formulations (15.57sfor FE displacement and12.16sfor FE Hu–Washizu). Furthermore, the computational costs of the continuous rotational concept do not grow dramatically for ordersp=3andp=4. Computations using reduced integration (RI) are between two and three times more expensive as with non-uniform integration (NI∗) for2≤p≤4. The results of isogeometric computations with the discrete rotational concept reveal a completely different picture. The computational costs for non-uniform integration (NI∗) in the case ofp=2are higher than for reduced integration (RI). The discrete rotational concept yields higher computational costs than the continuous rotational concept for all discretizations if reduced integration (RI) or non-uniform integration (NI∗) is used. Furthermore, computational costs grow significantly for rising orderp. The required number of integration points to attain the pre-defined error level is given in Fig. 10(b). The proposed isogeometric shell formulation with continuous rotation requires significantly less integration points than the reference finite shell elements. In case of more complicated material laws or multi-scale formulations, which entail additional effort at the integration points (e.g.  [18,40,41]), the proposed isogeometric shell formulation with continuous rotations can thus be more effective than the reference finite shell elements.This example clearly shows that the proposed shell formulation with continuous rotations is superior to an isogeometric shell formulation with discrete rotations in terms of accuracy and robustness. The proposed shell formulation with continuous rotations shows correct convergence behavior and is competitive to standard finite element shell formulations, which is not the case for the discrete rotation formulation. The reduction of integration points lowers computational costs and increases accuracy as locking effects are reduced. Non-uniform integration (NI∗) works very well for this example as it reduces computational costs and increases accuracy for the proposed shell formulation with continuous rotations. Here the combination of continuous rotations and non-uniform integration (NI∗) is recommended.The roll-up of a cantilevered flat plate strip is a severe test for the handling of large rotations. An analytical solution exists for the simplified computation as a beam. This favors the consideration of this benchmark example throughout literature on finite rotation shell analysis, see e.g.  [23,42]. The system is sketched in Fig. 11. The plate strip of lengthL=12and widthB=1has a wall thicknesst=0.1. The Poisson ratio is set toν=0in order to reproduce beam-like behavior. The Young’s modulus isE=1.2⋅106. One end of the plate strip is clamped, whereas the other end is loaded with a uniform line momentm=M/B. No additional boundary or linking conditions are set. The analytical beam solution is given byu(M)=[sin(M/M0)⋅M0/M−1]LwithM0=(EI)/L=25/3. The cantilever is fully rolled up forMmax=2πM0, which is applied in ten load steps. The resulting rotationφAin point A isφAref=2π, which is used for the normalization in Fig. 12. The absolute value of rotation requires a multiplicative update of the rotational tensorRdue to the singularity ofRforω=2π. Thus, in this example also the isogeometric shell formulation with the discrete rotational concept is updated multiplicatively. The deformation convergence behavior is reported in Fig. 12 with the help of the endpoint rotation in point A.Results for the proposed isogeometric shell formulation with the continuous rotational concept are shown in Fig. 12(a). Computations using full integration (FI) converge strictly from below and accuracy increases with rising orderp. Computations are stable, even for coarse meshes. If non-uniform integration (NI∗) is used instead, then accuracy increases significantly, especially for even orders. This is due to the alleviation of locking effects, which is more pronounced for even orders due to the ratio of integration points from full integration (FI) to non-uniform integration (NI∗). However, strict convergence from below is not maintained as computations with higher order tend to converge from above. The results of the full integration (FI) computations deteriorate from one element to two elements; see the kinks in the full integration (FI) graphs. The reason for this deterioration is locking effects. Full integration (FI) yields the optimal number ofp+1integration points for the discretization with one element. But for two elements2(p+1)integration points are used, whereby the optimal number of integration points isp+2, see  [13]. Thus, the influence of locking effects is more pronounced for two elements than for one element. This effect explains the kink in the full integration (FI) graphs for coarse meshes. The kink in the graph for non-uniform integration (NI∗) forp=2is due to the fact, that the employed integration rule yields an integration point sequence of2∣1∣1∣2for four elements and2∣2∣1∣1∣1∣1∣2∣2for eight elements. Thus, locking effects are more efficiently reduced for four elements, which in turn yields numerical results which are more precise for four elements than for eight elements.Results for an isogeometric shell formulation with the discrete rotational concept are provided in Fig. 12(b). The fully integrated results forp=2are akin to the continuous rotation results. But all computations with higher orders converge from above and accuracy deteriorates with rising orders. Furthermore, computations of coarse meshes do not converge at all, even for smaller load steps. This formulation is quite unstable if the differences between interpolated and nodal director vectors are large. The application of non-uniform integration (NI∗) for this rotational concept is not beneficial at all in terms of accuracy. The alleviation of locking effects leads to convergence from above for all orders with a higher absolute error than for full integration (FI). This effect is clearly visible forp=2, where the convergence behavior changes completely. For higher orders the differences are hardly visible. In addition to the deterioration of accuracy, also robustness of computations is affected. Finer meshes are required to attain stable computations. Obviously the use of the discrete rotational concept leads to an overestimation of deformations. In contrast to that, locking yields an underestimation of deformations. If no measures against locking are taken, then these two errors partly cancel out. But in case locking is alleviated, as is done by using non-uniform integration (NI∗), the alleviation of locking can lead to a deterioration of accuracy.The results of this example clearly show the necessity to use the more precise continuous rotational concept which is used in the proposed isogeometric shell formulation. Only if this kind of rotational concept is used, methods against locking are beneficial. Here, the use of the presented shell formulation with continuous rotations together with non-uniform integration (NI∗) is the most efficient combination.The channel section beam is used to show the ability of the proposed shell formulation with continuous rotations to compute thin-walled geometries with intersections. The geometry is a cantilevered beam modeled by three adjoined plane shell stripes. Geometrical and material data are chosen as proposed in  [33,38]. A point loadFis applied at the free end at the intersection of web and upper flange. The system is defined in Fig. 13. The length of the beam isL=900, with a wall thicknesss=1.0of the web andt=1.6of the flanges. Young’s modulus and Poisson’s ratio areE=21000andν=0.3, respectively. All degrees of freedom at the clamped end are fixed. The classification criterion proposed in  [9] automatically assigns three rotational degrees of freedom to control points at intersections and two rotational degrees of freedom to all other control points. The coarsest mesh is defined by 18×3 elements for the web and 18×1 elements for each flange. Mesh refinement is performed by equal subdivision of all elements in both parametric directions. The maximum available continuity is obtained ask-refinement is used. Deformation convergence studies for the linear and the geometrically nonlinear case are given in Fig. 14. Results are provided for ordersp=2,p=4andp=6in the linear case, and forp=2andp=4in the nonlinear case. The odd orders are not displayed for clarity, but the results for these orders are in between the results of the next higher and the next lower even order. In addition to the studies performed in this section, a comparison of the presented continuous rotational shell formulation to the continuous rotational shell formulation with more complicated interpolation and additive update of previous works  [8,9] is given in the Appendix.In the linear case a forceF=1is applied. The normalized vertical deformationsuzof the loaded control point are plotted in Fig. 14(a). The reference value for the normalizationuzref=−1.483710is obtained with 468×130 elements of orderp=6using the proposed isogeometric shell formulation with continuous rotations and full integration (FI). In the linear case, the flat character of each structural part yields coinciding results for the proposed shell formulation with continuous rotations and for shell formulations using the discrete rotational concept. The graphs for full integration (FI) show correct deformation convergence behavior forh-refinement and order elevation. Reference computations in LS-DYNA with the isogeometric Reissner–Mindlin shell formulation presented in  [7] converge to the same reference valueuzref; see  [10] for more details. The employed integration scheme noticeably influences the deformation results for this example. Reduced integration (RI) yields more accurate results than full integration (FI), which can be justified by the alleviation of locking effects. Non-uniform integration (NI∗) yields too soft behavior for this example. Deformations are overestimated, especially for coarse meshes, and the absolute errors of the deformation results are higher than for full integration (FI). This shows that the non-uniform integration scheme used in this work, which is an extended version of  [13], requires comprehensive numerical testing and theoretical studies in order to establish reliable rules for the distribution of integration points.In the geometrically nonlinear case a loadF=15is applied in 30 uniform load steps. This yields large rotations, which allows a good comparison of the proposed isogeometric shell formulation with continuous rotations to a shell formulation using the discrete rotational concept. Furthermore, the influence of integration rules is assessed. Deformation results are given in Fig. 14(b). All computations converge to the same valueuzref=−209.045, which is used for the normalization. The deformation results for full integration (FI) are akin to prior examples. Computations with the continuous rotational concept converge from below, whereas computations with the discrete rotational concept converge from above forp=4. The use of reduced integration (RI) increases the deformations for all displayed orders and rotational concepts due to a slight alleviation of locking effects. Forp=2this entails more precise results for both rotational concepts. In the casep=4, the accuracy of computations with the proposed shell formulation with continuous rotations is slightly improved, but deformations are overestimated for coarse meshes. In contrast to that, the accuracy of computations with the discrete rotational concept is clearly deteriorated by the use of reduced integration (RI) instead of full integration (FI).This numerical example shows that the proposed shell formulation with continuous rotations is required to obtain correct convergence behavior for higher orders. Furthermore, non-uniform integration (NI∗) does not yield accurate computations for this example. Thus, the use the proposed shell formulation with continuous rotations with reduced integration (RI) is recommended.The ability of the proposed shell formulation with continuous rotations to compute arbitrarily curved geometries with kinks is compared to computation with discrete rotations with the help of this example. Two patches, which are smooth within, intersect at an angle which changes from90°to almost0°along the joint. Thus, the robustness of the shell formulations to handle geometries which contain kinks with small angles is tested. The details to construct this geometry are provided in  [9,10]. A system sketch is given in Fig. 15. The system is loaded with a line loadpy=10along the upper edge of patchΩ1. Both patches are fully clamped along the lower edge. All other edges are free. The number of rotational degrees of freedom for control points along the kink is automatically determined with the classification criterion proposed in  [9]. The intersection angle between two surfaces at a kink is computed for each node in order to distinguish between nodes on kinks and nodes in smooth regions. A limit intersection anglecangle=2°is used for this distinction where not mentioned differently. If the intersection angle falls below this threshold, the respective node is classified to be in a smooth region. Thus, in this region the kink is treated as if it would be a smooth transition. This value is higher than the smallest value of the angle along the kink. Thus, some control points along the kink are classified wrongly as smooth node for fine meshes. The influence of the limit intersection angle on geometrically nonlinear computations will be shown below. The wall thicknesst, Young’s modulusEand Poisson’s ratioνare given in Fig. 15. The coarsest mesh displayed in Fig. 15 is equally subdivided in both parametric directions forh-refinement studies. Order elevation is performed usingk-refinement. The subdivision factor, which is defined by the number of knot spans per initial knot span, is used as abscissa in Fig. 16, whereby the deformation of point A iny-direction is used as ordinate. The initial order of the basis functions isp=3. Refinement studies are given for ordersp=3top=5. The provided graphs are for computations using full integration (FI). Graphs for reduced integration (RI) are almost not distinguishable by the eye from the full integration (FI) graphs. Thus, the reduced integration (RI) graphs are not displayed in Fig. 16 for the sake of clarity. The continuity between elements is not uniform in this example. Thus, non-uniform integration cannot be used here as it is only defined for uniform conformity; see Section  5.3. Deformation convergence studies for the linear and the geometrically nonlinear case are given in Fig. 16. Here only the influence of the rotational concept on the accuracy of computations is assessed. A comparison of the presented continuous rotational shell formulation to the continuous rotational shell formulation with more complicated interpolation and additive update of previous works  [8,9] is given in the Appendix.A linear deformation convergence study is given in Fig. 16(a). The deformation results are normalized to the reference valueuyref=0.600035, which is computed with 73 728 elements of orderp=5using the proposed isogeometric shell formulation with continuous rotations. Akin to prior examples, computations with the present shell formulation using the continuous rotational concept converge from below and show correct convergence behavior for rising ordersp. With the exemption of coarse meshes, computations with an isogeometric shell formulation with discrete rotations converge from above and accuracy is deteriorated with rising ordersp. Thus, divergence occurs for order elevation. These findings are in accordance with prior examples.The deformation convergence behavior in the geometrically nonlinear case is studied in Fig. 16(b). The deformation results are normalized to the reference valueuyref=0.410789, which is computed with 73 728 elements of orderp=4using the proposed isogeometric shell formulation with continuous rotations. This subdivision factor in combination withp=5exceeded available memory. The deformation convergence behavior in the geometrically nonlinear case shown in Fig. 16(b) is described as follows. As in the linear case, the deformation converge behavior of the proposed shell formulation with the continuous rotational concept is clearly superior to the shell formulation with discrete rotations. In this example, convergence from above can be observed also for the proposed shell formulation with continuous rotations, but the correct convergence behavior for rising orderpis maintained. All computations are stable and show good convergence behavior in the Newton–Raphson equilibrium iteration. In each case eleven iterations are sufficient. The right column of Table 7suggests that the choice ofcanglehas only minor influence on the deformation results of computations using the continuous concept. Numerical stability is not affected at all, even for very small values ofcangle. The situation is completely different for computations with an isogeometric shell formulation which uses the discrete rotational concept. There the graphs of all orders converge from above, and the accuracy of the deformation results deteriorates with rising order. Computations of orderp=3are stable and the results yielded by an additive and a multiplicative update of the rotational state are equivalent up to numerical precision. In all cases eleven iterations in the Newton–Raphson iteration are sufficient, andcangle=2°can be used. Computations with the discrete rotational concept of orderp=4require two load steps for some subdivision factors. Otherwise the equilibrium iteration diverges. In addition to that, the limit intersection angle has to be increased tocangle=5°for a subdivision factor of 64 in order to attain convergence. Computations with the discrete rotational concept of orderp=5require a multiplicative update of the rotational state. Furthermore, in some cases two load steps are required to attain convergence. The numerical instabilities entailed by insufficient drilling rotation stiffness yield an incorrect deformation result ofuy=0.411487ifcangle=2°is used for a subdivision factor of 64. An increased limit intersection angle ofcangle=10°yields a more plausible deformationuy=0.410996. This value is used for the discrete graph forp=5in Fig. 16(b).The choice of the limit intersection anglecanglehas a significant influence on the stability of the Newton–Raphson iteration and the accuracy of results for shell formulations with the discrete rotational concept. An example is given in Table 7. Ifcangle=0.5°is used, then all nodes on the kink are classified correctly. Computations with the discrete concept and additive rotational update diverge, while the discrete concept with multiplicative rotational update yields an incorrect deformation result due to numerical issues. In contrast to that, the deformation computed with the proposed shell formulation with the continuous rotational concept forcangle=0.5°does not deviate significantly from the results for higher values ofcangle. Neither the accuracy of results nor the stability of equilibrium iterations of the proposed shell formulation with continuous rotations depends significantly on the limit intersection anglecangle. An explanation of this difference in sensitivity to kinks with small angles is given in the following. Stiffness against drilling rotations around the director vector arises only due to the intersection of the patches at kinks for the discrete rotational concept. If the intersection angle is very small, almost no stiffness arises. This entails a bad condition of the stiffness matrix, which can deteriorate accuracy or impede convergence in the equilibrium iteration; see  [10] for a study on this. If the continuous rotational formulation of this work is used, then stiffness against drilling rotations also arises due to the curvature of elements which adjoin the kink. If the vectordhin the integration point deviates from all three nodal basis vectorsaiIof the node on the kink, then every column of the matrixTIin Eq. (66) has at least one non-zero entry. Thus, stiffness against all three rotational degrees of freedom of the node on the kink arises. This improves numerical stability for intersection angles which approach zero.This example shows the superior accuracy and robustness of the proposed isogeometric shell formulation with continuous rotations in comparison to a shell formulation with discrete rotational concept. Here, reduced integration (RI) is the most efficient choice as its accuracy is akin to computations using full integration (FI), but the computational costs are lower. Non-uniform integration cannot be used in this example due to the non-uniform continuity between elements. Thus, in this example the combination of continuous rotations and reduced integration (RI) is recommended.

@&#CONCLUSIONS@&#
