@&#MAIN-TITLE@&#
Valid inequalities for the synchronization bus timetabling problem

@&#HIGHLIGHTS@&#
The SBTP favors passenger transfers and avoids congestion of buses at common stops.Four classes of valid inequalities for its MIP using combinatorial properties.The enhanced MIP yields high quality solutions using short computational times.Realistic instances are solved within few minutes with a 3 percent deviation from the optimum.

@&#KEYPHRASES@&#
Integer programming,Transportation,Timetabling,Valid inequalities,Urban bus system,

@&#ABSTRACT@&#
Bus transit network planning is a complex process that is divided into several phases such as: line planning, timetable generation, vehicle scheduling, and crew scheduling. In this work, we address the timetable generation which consists in scheduling the departure times for all trips of each bus line. We focus on the Synchronization Bus Timetabling Problem (SBTP) that favors passenger transfers and avoids congestion of buses at common stops. A Mixed Integer Program (MIP) was proposed in the literature for the SBTP but it fails to solve real bus network instances. We develop in this paper four classes of valid inequalities for this MIP using combinatorial properties of the SBTP on the number of synchronizations. Experimental results show that large instances are solved within few minutes with a relative deviation from the optimal solution that is usually less than 3 percent.

@&#INTRODUCTION@&#
Planning and operating a public transportation network in a relatively big city (3 millions people) is an enormous task if the aim is to reduce the costs without degrading the level of service for the users. The bus transit network planning problem is presented as a sequence of four main phases (Ceder, 2007; Ibarra-Rojas, Delgado, Giesen, & Muñoz, 2015a). The first one is the line planning phase that defines the routes, stops, and frequency for each bus line in a specific territory. Then, the timetable generation phase determines the departure times of all the trips of the lines to achieve a specific level of service. The third subproblem is the vehicle scheduling phase that assigns vehicles to trips associated to bus lines. Finally, the crew scheduling phase defines tasks assigned to drivers. The bus transit network planning problem is commonly tackled by sequential approaches. Therefore, obtaining high quality solutions in short time for each phase is an important issue since it is often necessary to iterate several times to find a suitable solution for the entire planning process.In this paper, we focus on bus networks having the following characteristics. The passengers of a line have an estimate of their waiting time at each stop rather than knowing the whole timetable of the line. Therefore, regularly spaced departure times for the trips of each line are required. Moreover, since different lines frequently converge at specific stops of the network, it is necessary to reduce congestion to improve the level of service. In the sequel, a synchronization occurs when the timetable avoids that two buses arrive at a stop at the same time or when it permits well timed transfers for passengers, i.e. transfers that ensure both short waiting times and enough time to change from one line to another. Therefore, the Synchronization Bus Timetabling Problem (SBTP) consists in determining the departure time of every bus trip in order to maximize the synchronization of different bus lines of a network. Thus, the SBTP corresponds exactly to the timetable generation phase for networks that appear in different cities of Latin America, as for instance, the network of the city of Monterrey in Mexico which has more than 300 bus lines.Ibarra-Rojas and Rios-Solis (2012) have proved that the SBTP is NP-hard. They have proposed a multi-start iterated local search algorithm and a MIP. We denote by SBTP MIP this formulation that will be described in Section 2. However, the SBTP MIP solved using a standard linear solver (CPLEX 12.6) has not succeeded in efficiently solving realistic instances within reasonable CPU times. Since the number of disruptions such as bus failures or crash accidents, is close to 10 percent of the vehicles used per day (in Monterrey), bus timetables may be recomputed several times a day. Consequently, heuristic methods are usually used to quickly produce timetables. Ibarra-Rojas, López-Irarragorri, and Rios-Solis (2015b) extend the heuristics presented by Ibarra-Rojas and Rios-Solis (2012) to solve the multiperiod case. However, heuristic methods do not ensure any guarantee on the solution quality.Particular cases of the SBTP have been considered in the literature. Ceder and Tal (2001) and Ceder (2011) have introduced a simpler version of the SBTP where synchronizations are defined as simultaneous arrivals at common stops subject to bound constraints on the the separation time between consecutive trips of the same line. Constructive algorithms were developed for this case. An extension of Ceder’s studies is presented by Eranki (2004) where a synchronization is redefined as arrivals within a time window. Liu, Shen, Wang, and Yang (2007) have reformulated the timetabling problem presented by Ceder, Golany, and Tal (2001) and implemented a Tabu search to solve the problem.Some closely related problems on transport networks have been studied using integer programming approaches. We can quote the scholar bus scheduling problem introduced by Fügenschuh (2009) where starting times of schools and starting times of scholar buses must be synchronized to minimize the number of vehicles to transport all students. The authors have developed different families of valid inequalities leading to a branch-and-cut algorithm. Quadrifoglio, Dessouky, and Ordóñez (2008) optimized a weighted objective function based on vehicle resources and level of service for a transport network. They define logic constraints to reduce the feasible space which allows to reduce up to 90 percent of the CPU time when these cuts are added at the beginning of a branch-and-bound algorithm. In railway systems, timetabling problems have been extensively studied using integer programming techniques. In particular, the periodic timetabling case has a special structure (not present in the SBTP) that favors the design of valid inequalities commonly implemented in branch-and-cut algorithms (Caimi, Fuchsberger, Laumanns, and Schüpbach, 2011; Giesemann, 2002; Liebchen, 2004, 2007; Liebchen and Möhring, 2002, 2007; Schröder and Solchenbach, 2006). Comprehensive reviews are provided by Guihaire and Hao (2008), Cacchiani and Toth (2012), and Ibarra-Rojas et al. (2015a).In this paper, we present an exact approach to solve the SBTP using integer programming techniques and show that high quality solutions can be produced for real size instances within a few minutes. An inequality is said to be valid for a MIP if every solution of the MIP satisfies this inequality. Consequently, a valid inequality can be added to a MIP in order to obtain a stronger formulation (Wolsey, 1998) that will be easier to solve. Our main contributions are to define four families of valid inequalities that will be used for the SBTP MIP. The first two families of valid inequalities bound the number of possible synchronizations that can occur at a node for a specific trip. The two other families are obtained from the previous ones using a generic lifting procedure. The enhanced SBTP MIP is then solved with a standard linear solver to obtain optimal solutions for most of the realistic instances. Moreover, for all the instances, solutions with less than 3 percent of deviation from the optimum are found in less than five minutes.A main insight of our proposed methodology that it can be used as a heuristic to obtain high quality solutions with short computation times. Indeed, the SBTP strengthen with our valid inequalities can be solved with a linear solver that has a stopping criterion of 3 percent of relative gap. This approach outperforms the multi-start iterated local search algorithm presented by Ibarra-Rojas et al. (2015b).The rest of the paper is organized as follows. In Section 2, we briefly recall the SBTP MIP that we will enhance with our proposed valid inequalities that are defined in Section 3. Experimental results are presented in Section 4 where we show the impact of some combination of the valid inequalities families. Finally, conclusions and future research areas are addressed in Section 5.In this section, we present the SBTP and its mixed integer program proposed by Ibarra-Rojas and Rios-Solis (2012). First, we will introduce the problem assumptions. Secondly, we will discuss the concept of synchronization. Finally, we will address the optimization problem and its mathematical formulation.The given transit network is defined with a set I of transit lines and a set of nodes B which represents the stops (or zones) where synchronization of different lines is needed to allow well timed passenger transfers or diminish traffic congestion. Let T be the planning horizon defined in time units. We denote by fithe frequency of line i ∈ I in the given planning period, that is to say the number of trips that have to be scheduled within T for line i. We assume that buses of the same line will run at regular speed and we denote bytbi,i ∈ I, the travel time for a bus from an initial node, called depot, to a node b ∈ B.In the context of transit systems, the headway refers to the separation time between consecutive trips of the same line (Ceder, 2007; Ceder & Tal, 2001). For example, if the first trip of a line departs at time unit 3 and the second trip of the same line departs at time 23, the headway between these two trips is of 20 time units. In our case, providing a regular service is important for transit operators and passengers thus, each trip of a line i of I will start everyTfitime units with a flexibility of δitime units. Consequently,hi=Tfi−δi(resp.Hi=Tfi+δi) is the minimum (resp. maximum) headway time for a line i ∈ I. Fig. 1illustrates the departure times for a given line i of frequencyfi=4with and without flexibility.In a regular timetable with constant headways, well timed transfers would occur by chance while in a timetable with flexible headways, one can induce more well timed synchronizations.Another important aspect of the transit system operation is to guarantee that the entire planning horizon is covered by trips. To achieve this, the first (resp. last) trip of line i must start before Hi(resp. afterT−Hi). Considering the previous definitions and assumptions, a timetable given by the departure timesXpiof each tripp∈{1,⋯,fi}of every line i ∈ I will satisfy the following: i)X1i≤Hifor every i ∈ I; ii)hi≤Xp+1i−Xpi≤Hifor every i ∈ I andp∈{1,⋯,fi−1}; and iii)T−Hi≤Xfii≤Tfor every i ∈ I.We recall that our goal is to synchronize different transit lines in order to benefit passenger transfers and to reduce congestion of buses at common stops. Then, we consider two types of synchronization nodes. A transfer node is a stop or zone in the network where passengers may transfer from one line i to some line j. To allow well timed passenger transfers at node b, the difference between two bus arrivals at this node has to be lower than a specific value denoted Wb. Moreover, a minimum waiting time wbis defined for passengers who need to walk to board line j in order to avoid ”too short transfer”. A congestion node is a stop or a particular point in the network where different lines start a common route segment, and the congestion level at this node could be reduced if trips are properly separated. Consequently, to reduce congestion of buses at node b, the length of the time interval between two bus arrivals at node b has to be greater than a specific value denoted wb. In this case, it is convenient to consider a maximum separation time Wbbetween the bus arrivals at node b such thatWb−wb<hj.A synchronization of two trips at node b happens if the difference of their arrival times is in the so-called waiting time window [wb, Wb]. For each line i ∈ I, let us denote by I(i) the set of lines that share a synchronization node with line i. Notice that for i, j ∈ I, j ∈ I(i) does not imply i ∈ I(j). Indeed, it could be desirable in some situations to enforce the passenger transfers only from line i to line j. As an illustration, Fig. 2shows synchronization events between lines i and j at the two types of nodes representing specific zones of the transit network in Monterrey, Mexico. The numbers by the side of node b represent the arrival times of a trip of lines i and j. A transfer zone can be represented by a transfer node b where passengers need to walk in order to go from one trip of line i to some trip of line j. In this case, 5 time units is the maximum desired passenger waiting time and 2 time units is the minimum waiting time to avoid too short transfer. Then, the waiting time window is given by[wb,Wb]=[2,7],and arrival times 8:35 and 8:38 of trips of lines i and j, respectively, define a well timed transfer from i to j . Zones in the central business district of Monterrey’s transit network could be represented by a congestion node b where lines i and j converge and then share a segment of their routes. The minimum and maximum separation times to reduce congestion at this node b arewb=6andWb=12which are satisfied by the actual separation between trips of lines i and j arriving at 8:14 and 8:20, respectively.We highlight that the set of synchronization nodes does not necessarily include all intersecting points for each pair of lines. Instead, synchronization nodes are stops or zones in the transit network where the synchronization of different lines has a high impact on the transit system operation. For example, transfer nodes could represent convergence points for trunk and feeder lines, while congestion nodes could model the beginning of common route segments of lines. By selecting the nodes regarding their average number of passengers, the demand over the network is then considered. This number, denoted byNbij,represents the number of passengers that will benefit of the synchronization of lines i and j at node b.On the basis of the above, the SBTP determines the departure timesXpiof each trip p ∈ {1, ..., fi} of every line i ∈ I such that the headway time bounds are satisfied,X1i≤Hi,hi≤Xp+1i−Xpi≤Hifor every i ∈ I,T−Hi≤Xfii≤T. Two trips p ∈ {1,…, fi} and q ∈ {1,…, fj} will then be synchronized at node b ifwb≤(Xqj+tbj)−(Xpi+tbi)≤Wbis satisfied, for i ∈ I, j ∈ I(i). The objective is to maximize the weighted sum of the number of synchronized pairs of trips at node b, where the weights correspond to the numberNbijof passengers.We consider in the following an instance of SBTP. For a given line i ∈ I, we will denote by (p, i),p∈{1,⋯,fi},the pth trip of line i and we associate to (p, i) the real variableXpithat represents its departure time. For a pair of lines (i, j), j ∈ I(i), the set Bijis the set of all the synchronization nodes shared by i and j. The binary decision variableYpqbijis equal to 1, if and only if, trip (p, i) arrives first at node b and if trips (p, i) and (q, j) induce a synchronization at node b. In the sequel, we will denote by (X, Y) a solution of an SBTP instance.Considering the previous parameters and decision variables, the SBTP MIP is given bymax∑i∈I∑j∈I(i)∑b∈BijNbij∑p=1fi∑q=1fjYpqbij(1)s.t.X1i≤Hii∈I(2)T−Hi≤Xfii≤Ti∈I(3)hi≤Xp+1i−Xpi≤Hii∈I,p=1,⋯,fi−1(4)(Xqj+tbj)−(Xpi+tbi)≥wb−M(1−Ypqbij)i∈I,j∈I(i),b∈Bij,p=1,⋯,fi,q=1,⋯,fj(5)(Xqj+tbj)−(Xpi+tbi)≤Wb+M(1−Ypqbij)i∈I,j∈I(i),b∈Bij,p=1,⋯,fi,q=1,⋯,fj(6)Xpi∈Ri∈I,p=1,⋯,fiYpqbij∈{0,1}i∈I,j∈I(i),b∈Bij,p=1,⋯,fi,q=1,⋯,fjThe objective function maximizes the total weighted number of synchronizations. Constraints (1) and (2) guarantee that the entire planning horizon is covered by the trips together with Constraints (3) which impose that consecutive trips of line i must happen with a minimum (resp. maximum) headway time hi(resp. Hi). Remark that the arrival time of trip (p, i) at node b isXpi+tbi. Hence Constraints (4) and (5) activate the synchronization variablesYpqbijif the difference between the arrival times of (p, i) and (q, j) at node b is within [wb, Wb] with (p, i) arriving first at node b.In the following, we propose a way to define a tight value for constant M for computational purposes. Note that departure timesXpiare within a feasible time window given by[d̲pi,d¯pi]withd̲pi=max{(p−1)hi,T−(fi−(p−1))Hi}d¯pi=min{pHi,T−(fi−p)hi}.Therefore, the minimum difference of arrival times between trips (q, j) and (p, i) at node b isd¯pi+tbi−d̲qj−tbj. Consequently, given a solution(X˜,Y˜)of the SBTP, we know that(X˜qbj+tbj)−(X˜pbi+tbi)≥d¯pi+tbi−d̲qj−tbj.Similarly, we can remark that the maximum difference of arrival times between trips (q, j) and (p, i) at node b satisfies the following inequality.(X˜qbj+tbj)−(X˜pbi+tbi)≤d¯qj+tbj−d̲pi−tbj.Then, we can replace M bympqbij=d¯pi+tbi−d̲qj−tbjandMpqbij=d¯qj+tbj−d̲pi−tbjin Constraints (4) and (5) for indices (i, j, p, q, b) ∈ ξ, respectively.The SBTP MIP cannot be used to solve realistic instances of the SBTP using a standard linear programming solver (see Ibarra-Rojas & Rios-Solis, 2012). The main contributions of this paper is to strengthen SBTP MIP by introducing valid inequalities that allow to efficiently solve the real size instances of the SBTP.To obtain tighter formulations for the SBTP, we add valid inequalities to the SBTP MIP before its resolution by a linear programming solver. In fact, adding valid inequalities permits to cut fractional solutions of the linear relaxations of integer programs or to cut non-optimal feasible solutions (Nemhauser and Wolsey (1999); Wolsey (1998)). In the following, we introduce two families of valid inequalities for the synchronization bus timetabling problem obtained from the headway time parameters and the propagation of Constraints (1), (2), and (3).We can take advantage of the headway time parameters to define a family of valid inequalities for each trip to be synchronized. Let us consider two lines i and j to be synchronized at a given node b such that the minimum headway time hjof line j is greater than the length of the waiting time window of node b, i.e.,hj>Wb−wb. If a trip (p, i) synchronizes with another trip (q, j), the synchronization of (p, i) with trips(q−1,j)or(q+1,j)is impossible since there would not be enough time units to ensure solution feasibility. Generalizing the previous idea, we obtain the following result.Theorem 1The inequalities(7)and(8), called synchronization inequalities, are valid for the SBTP MIP.(7)∑q=1fjYpqbij≤1+⌊Wb−wbhj⌋i∈I,j∈I(i),b∈Bij,p∈{1,⋯,fi}(8)∑p=1fiYpqbij≤1+⌊Wb−wbhi⌋i∈I,j∈I(i),b∈Bij,q∈{1,⋯,fj}.We will prove that inequalities (7) are valid, the proof for (8) is analogous. Let us suppose that there exists a feasible solution(X˜,Y˜)of the SBTP, a trip (p, i), and a line j ∈ J(i) such that, Constraint (7) is violated, i.e. there existr>1+⌊Wb−wbhj⌋tripsq1<q2<⋯<qrof line j that may synchronize with trip (p, i). We will show that it is impossible to schedule these synchronized trips because of the imposed minimal headway times between trips. The arrival times of these trips are within the feasible synchronization time window[X˜pi+tbi+wb,X˜pi+tbi+Wb]. Therefore, the difference between the arrival timesX˜qrj+tbiandX˜q1j+tbiof trips (q1, j) and (qr, j) must be less thanWb−wb,consequently we obtainX˜qrj−X˜q1j≤Wb−wb. However, since solution(X˜,Y˜)corresponds to a regularly spaced schedule, we have thatX˜ql+1j−X˜qlj≥hj. We then haveX˜qrj−X˜q1j≥(r−1)hj≥(1+⌊Wb−wbhj⌋)hj>(1+(Wb−wbhj−1))hj=Wb−wbwhich is a contradiction.□To give an insight about the result of this section, let us assume that two trips p and q of line i and j, respectively, are synchronized at a node b. Since a minimum headway time is considered, it is unlikely that trips p′ and q′ with p < p′ and q < q′ (or p′ < p and q′ < q) will then also be synchronized. Using this idea, we can devise the following class of inequalities.(9)Ypqbij+∑q′=q+1fjYpq′bij+∑p′=p+1fiYp′qbij≤1+⌊Wb−wbmin(hi,hj)⌋i∈I,j∈I(i),b∈Bij,p∈{1,⋯,fi},q∈{1,⋯,fj}(10)Ypqbij+∑q′=1q−1Ypq′bij+∑p′=1p−1Yp′qbij≤1+⌊Wb−wbmin(hi,hj)⌋i∈I,j∈I(i),b∈Bij,p∈{1,⋯,fi},q∈{1,⋯,fj}.We will denote these inequalities as headway inequalities as they depend on the value of the desired minimum headway time between trips. We then have the following result.Theorem 2Headway inequalities(9)and(10)are valid for the SBTP MIP.We will consider an inequality (9) corresponding to the two trips (p, i), (q, j) and a node b ∈ Bij(the proof for inequalities (10) is analogous). Let(X˜,Y˜)be a feasible solution of the SBTP. We consider the two quantities c and r defined as followsr=∑q′=q+1fjY˜pq′bijandc=∑p′=p+1fiY˜p′qbij.Ifr=0then from inequality (8) we know thatY˜pqbij+c≤∑p′=1fiY˜p′qbij≤1+⌊Wb−wbhi⌋≤1+⌊Wb−wbmin(hi,hj)⌋.Similarly, ifc=0,from inequality (7), we obtain thatY˜pqbij+r≤∑q′=1fjY˜pq′bij≤1+⌊Wb−wbhj⌋≤1+⌊Wb−wbmin(hi,hj)⌋.Let us now suppose that both r ≥ 1 and c ≥ 1. Since r ≥ 1, trip (p, i) synchronizes with r trips among tripsq+1,…,fjof line j. Let q′ be the first of these trips that is synchronized with (p, i). Consequently, arrival times of tripsq′,q′+1,…,q′+(r−1)at node b are within the time window[X˜pi+tbi+wb,X˜pi+tbi+Wb]. Since the minimal headway time between two trips of line j is hj, the arrival time of trip (q′, j) at node b satisfiesX˜q′j+tbj≤X˜pi+tbi+Wb−(r−1)hj. SinceX˜q+1j≤X˜q′j,we finally obtainX˜q+1j+tbj≤X˜pi+tbi+Wb−(r−1)hj.Similarly, since c ≥ 1 there are c trips amongp+1,…,fiof line i that synchronizes with (q, j). Let p′ be the last of these trips that synchronized with (q, j), thus we know thatX˜qj+tbj≥X˜p′i+tbi+wb. Moreover, since tripsp′−(c−1),…,p′are synchronized with (q, j) and because of the imposed minimum headway times of line i, we know thatX˜qj+tbj≥X˜p′−(c−1)i+tbi+wb+(c−1)hi. SinceX˜p′−(c−1)i≥X˜p+1i,we obtainX˜qj+tbj≥X˜p+1i+tbi+wb+(c−1)hi.Because of the minimum headway times between trips of line j, we then gethj≤(X˜q+1j+tbj)−(X˜qj+tbj)≤X˜pi−X˜p+1i+Wb−wb−(r−1)hj−(c−1)hi.And, because of the minimum headway time between trips (p, i) and(p+1,i),we haveX˜p+1i−X˜pi≥hi. Then, we obtainhj≤−hi+Wb−wb−(r−1)hj−(c−1)hi,which then becomesrhj+chi≤Wb−wb.W.l.o.g. we can suppose that hj≤ hi. We then obtainr+c≤r+chihj≤Wb−wbhj.Thus, we getY˜pqbij+r+c≤1+Wb−wbhj,which proves the validity of inequality (9).□In this section, we present a generic lifting method that permits to compute new valid inequalities from previous ones.Let us first introduce a useful notation. Let ξ be the set of all 5-tuples (i, j, p, q, b) with i ∈ I, j ∈ I(i), p ∈ {1,…, fi}, q ∈ {1,…, fj} and b ∈ Bj. Notice that set ξ is in a one-to-one correspondence with the set of Y’s variables, that is to say, each 5-tuple (i, j, p, q, b) ∈ ξ corresponds to a potential synchronization between trips (p, i) and (q, j) at node b so that trip (p, i) arrives first at node b.Let us consider the following inequality:(11)∑(i,j,p,q,b)∈EYpqbij≤γwhere E ⊂ ξ and γ is an upper bound over the number of synchronizations in E. The inequalities of type (11) are clearly valid. We note that the synchronization and headway inequalities belong to this class. For instance, given i ∈ I, j ∈ I(i), b ∈ Bijandp∈{1,⋯,fi},the corresponding synchronization inequality of type (7) is defined by the setE={(i,j,p,q,b)|q∈{1,⋯,fj}}andγ=1+⌊Wb−wbhj⌋.Given (i0, j0, p0, q0, b0) ∈ ξ, we consider a set E′ of 5-tuples (i, j, p, q, b) subset of E so that trips (p, i) and (q, j) cannot be synchronized at node b if trips (p0, i0) and (q0, j0) are synchronized at node b0 and trip (p0, i0) arrives first at node b0, that is to say that, for a given solution(X˜,Y˜)of SBTP MIP,Y˜p0q0b0i0j0=1impliesY˜pqbij=0for all (i, j, p, q, b) ∈ E′. Inequality (11) can be then lifted to create the following inequality(12)∑(i,j,p,q,b)∈E′Ypqbij≤γ(1−Yp0q0b0i0j0)which is clearly valid.In the following, we present a generic lifting procedure to obtain inequalities of type (12). This procedure will be applied to both synchronization and headway inequalities in order to obtain lifted synchronization inequalities and lifted headway inequalities. Remark that the set of variables Y of such a lifted inequality is related to different lines while the set of variables of a headway or a synchronization inequality is related to only two lines.To compute the lifted inequalities given a 5-tuple (i, j, p, q, b), we will need to find a list of 5-tuples that can not be synchronized if (i, j, p, q, b) is synchronized. To achieve this, we recall that the time window[d̲pi,d¯pi]constitutes a generic feasible departure time window. Then, assuming that two trips are synchronized, it is be possible to tighten the latter window getting a new feasible departure time windowDpi⊂[d̲pi,d¯pi]. This can be done using logical inferences that are given in Ibarra-Rojas and Rios-Solis (2012). An example of how to tighten time windows is the following. Consider the feasible departure time windows [15, 20] and [18, 25] for trips (p, i) and (q, j), respectively. Assume we have the parameters valuestbi=10,tbj=22,and[wb,Wb]=[3,8]. Then, the arrival of trip (q, j) at node b is within the interval[18+22,25+22]=[40,47]and the arrival of trip (p, i) at node b is within[15+10,20+10]=[25,30]. If it is possible to synchronize trip (p, i) with trip (q, j), then the arrival time of trip (q, j) at node b must be within[25+3,30+8]=[28,38]which is impossible since[28,38]∩[40,47]=∅.Having a feasible departure time windowDpifor a given trip (p, i), tighter departure time windowsDp′i,for all trips p′ ≠ p, can be similarly inferred using the headway times between trips of line i.Algorithm 1, called Generic Lifting, shows the steps to generate lifted inequalities. The general idea to obtain these inequalities is to consider a 5-tuple (i0, j0, p0, q0, b0) ∈ ξ and see what implications arise if the corresponding synchronization is set, that is to say whenYp0q0b0i0j0=1. Steps 2–4 implement the inference process described above to compute tight departure times windows, assuming that (i0, j0, p0, q0, b0) is synchronized at node b. We then apply a specific procedure for each inequality∑(i,j,p,q,b)∈EYpqbij≤γof type (11): we determine a set E′ of 5-tuples (i, j, p, q, b) of E that cannot be synchronized and we then can create the corresponding lifted inequalities. Unfortunately, these last Steps 5–8 must be dedicated to each of the synchronization and headway inequalities in order to get sets E′ with known upper bounds.In order to find which trips cannot be synchronized, a synchronization test can be easily devised for each class of synchronization and headway inequalities. Such a test determines if a trip (p, i) cannot be synchronized with a trip (q, j) due to the fact that (i0, j0, p0, q0, b0) is synchronized.For creating lifted synchronization inequalities of type (7), lines 5–8 of Generic Algorithm 1 have to be replaced by Algorithm 2. This algorithm enumerates every synchronization inequality of type (7) which can be affected by the modification of lines i0 and j0 (Steps 2–4 of Generic Algorithm 1). Each potential trip q is then tested to know if (i, j, p, q, b) becomes impossible leading to a lifted synchronization inequality from the set E′ which represents the set of impossible synchronizations.Using similar ideas, three other algorithms can also be derived to lift the synchronization inequalities of type (8) and the headway inequalities of type (9) and (10).

@&#CONCLUSIONS@&#
We define an exact solution approach for the NP-hard synchronization bus timetabling problem. This problem determines regular spaced departure time for all the trips of each line to allow well timed passenger transfers and reduce congestion of buses belonging to different lines at common stops. The flexibility in the SBTP given by headway time bounds (instead of a fixed headway time) allows us to define different families of valid inequalities to tighten the SBTP MIP.Our solution approach is to strengthen the SBTP MIP using our proposed valid inequalities and using an integer linear solver. Numerical results show that high quality solutions (optimal for most cases) can be found for large instances of SBTP in a short time. Moreover, there is a fast convergence of our approach to solutions with less than 3 percent of relative deviation from the optimal solution in seconds. These results are very interesting if we want an integrated approach with the vehicle scheduling since we have a stronger formulation that can be used in a sequential approach or in an integration with other subproblems of the entire transit network planning problem.Although we obtain high quality solutions in a short time, there are interesting research lines such as determining the dimension of the valid inequalities proposed in this study. A natural improvement for this work is to develop a polyhedral study along with a branch-and-cut approach to handle unsolvable instances. The lifting procedures may be of particular interest in a branch-and-cut. Finally, the integration of SBTP with other subproblems of transit network planning such as vehicle and crew scheduling is a challenging research area.