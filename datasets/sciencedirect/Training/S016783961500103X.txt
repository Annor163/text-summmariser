@&#MAIN-TITLE@&#
On shape-preserving capability of cubic L

@&#HIGHLIGHTS@&#
We analytically quantify shape-preserving capability of cubic L1 spline fits.We propose a shape-preserving metric for the linear shape of Heaviside step function.We analytically calculate and numerically compute the metric.We find that function-value-based spline fits preserve linear shape best.

@&#KEYPHRASES@&#
L,1,spline,Shape preservation,Approximation,Spline fit,Univariate,

@&#ABSTRACT@&#
CubicL1spline fits have shown some favorable shape-preserving property for geometric data. To quantify the shape-preserving capability, we consider the basic shape of two parallel line segments in a given window. When one line segment is sufficiently longer than the other, the spline fit can preserve its linear shape in at least half of the window. We propose to use the minimum of such length difference as a shape-preserving metric because it represents the extra information that the spline fits need to preserve the shape. We analytically calculate this metric in a 3-node window for second-derivative-based, first-derivative-based and function-value-based spline fits. In a 5-node window, we compute this metric numerically. In both cases, the shape-preserving metric is rather small, which explains the observed strong shape-preserving capability of spline fits. Moreover, the function-value-based spline fits are indicated to preserve shape better than the other two types of spline fits. This study initiates a quantitative research on shape preservation ofL1spline fits.

@&#INTRODUCTION@&#
Shape preservation is an important objective in the interpolation and approximation of data with abrupt changes in magnitude and/or spacing, such as natural and urban terrain, geophysical features, robot paths, financial data and many other irregular phenomena. Over the past decade and more,L1splines have been developed for multiscale univariate (Auquiert et al., 2007a; Cheng et al., 2002; Lavery, 2000, 2002) and bivariate (Lavery, 2001; Wang et al., 2005; Zhang et al., 2006) data and have shown excellent performances in shape preservation, such asL1interpolating splines (Auquiert et al., 2007b; Cheng et al., 2005b; Jin et al., 2010; Nyiri et al., 2011; Yu et al., 2010),L1smoothing splines (Cheng et al., 2005a; Lavery, 2000) andL1spline fits (Lavery, 2004; Wang et al., 2014). Applications on urban terrain reconstruction can be seen, for example, in Bulatov and Lavery (2010) and Lin et al. (2006).CubicL1spline fits are defined by minimizing anL1data fitting functional over a manifold ofL1interpolating splines. SuchL1interpolating splines are calculated by minimizing anL1interpolating functional. Regarding the order of derivative that is involved in theL1interpolating functional, there are three types of spline fits which are second-derivative based, first-derivative based and function-value based, respectively (Jin et al., 2011; Lavery, 2006, 2009). Global algorithms and local moving-window approach have been designed and both produce spline fits that preserve shapes well (Lavery, 2004; Wang et al., 2014; Jin et al., 2010; Yu et al., 2010).Nevertheless, to the best of our knowledge, no theoretic analysis on the shape-preserving capability of theL1spline fits is available while the demand for it is growing. Fundamentally, such a theory should define shape preservation in a mathematical form so that different data-approximating principles could be fairly compared. In particular, comparison of the three types of spline fits is of interest. Practically, it should enable us to explain or predict the approximating results of cubicL1spline fits in various circumstances. It could help users improve the spline nodes placement or acquire more data where needed. This study is the first step towards this direction. We propose a metric to assess the capability of spline fits in preserving a given linear shape. Then we compare second-derivative-based, first-derivative-based and function-value-based spline fits against this metric. Throughout this paper, by “spline fits” we refer to the univariate cubicL1spline fits. Bivariate splines, multivariate splines and polynomials of higher orders are beyond the scope of this paper.One of the basic principles of shape preservation is that, if some portion of the data is aligned along a straight line segment, the spline fit should reconstruct that line segment. We consider two parallel horizontal line segments, which is a simple and often seen pattern in irregular and multiscale geometric data. For example, a building and its ground around may form such a pattern. This pattern is characterized by a Heaviside step function. Another practical significance of Heaviside step function is in G01 codes in CNC machining, where there is often data lying along a straight line and they need to be fitted by splines (Farouki and Shah, 1996). Spline fits, however, are designed to beC1-smooth and thus cannot perfectly recover the jump between the two parallel line segments. Additionally, the spline nodes in applied scenarios are usually fixed a priori. Then, the shape-preserving performance of a spline fit is highly dependent on the relative positions of spline nodes and data. In this study, we approximate the Heaviside step function by spline fits in a window of odd-number equally spaced spline nodes. Naturally, the definition of spline fits is generalized to handle not only discrete data but also functions. In this window, the two parallel line segments may have different lengths. Without loss of generality, we assume the line segment on the left is longer than the line segment on the right. When this length difference is large enough, the spline fit will preserve the linear shape of the longer line segment in at least the left half of the window. The shorter line segment is not necessarily preserved. The reason to this phenomenon is that the longer line segment provides sufficient extra information that leads the spline fit to preserve its linear shape. This extra information can be represented by the length difference between the line segments. Hence, we define the “shape-preserving metric” to be the minimum of such length difference that the linear shape of the loner line segment can be preserved. A smaller metric value indicates the stronger shape-preserving capability.To calculate the shape-preserving metric, we develop an analytic approach in a 3-node window and a numerical procedure in a 5-node window. In the 3-node window, to keep the information contained in the Heaviside step function from being completely lost, we impose boundary conditions that the first and third spline node have the same function value and first derivative as the Heaviside step function. Then, we can solve the spline fit problem analytically and obtain the explicit relation between the length difference and the function value and first derivative at the middle spline node. Thus, the metric is the minimum length difference such that the middle spline node has the same function value and first derivative as the Heaviside step function. In the 5-node window, we keep increasing the length difference by a given precision and solve the spline fit problem numerically. The metric is the corresponding length difference when the linear shape is preserved for the first time. No boundary conditions are fixed in this case.Results in 3-node and 5-node windows show that all three types of spline fits have relatively small shape-preserving metrics compared to the space between adjacent spline nodes. Furthermore, we find the second-derivative-based spline fits yield the biggest metric value and the function-value-based spline fits have the smallest. This suggests that the function-value-based spline fits may perform better in shape preservation than the other two types of spline fits.The remaining of this paper is organized as follows. In Section 2, we extend the second-derivative-based cubicL1spline fits to function approximation and introduce first-derivative-based spline fits and function-value-based spline fits. In Section 3, we define the shape-preserving metric by approximating the Heaviside step function in a given window. In Section 4, we calculate the shape-preserving metrics for the three types of spline fits in a 3-node window with fixed boundary conditions. In Section 5, we numerically compute the shape-preserving metrics in a 5-node window. Section 6 summarizes the paper with some concluding remarks.CubicL1spline fits are originally designed in Lavery (2004) to be used for approximating discrete data and they are based on second derivatives of the splines. In this section, we extend the use of spline fits to function approximation and introduce first-derivative and function-value-based spline fits. Suppose the function to be approximated isf(x),−∞<x<∞. Let the monotonically increasing spline nodes bexi,i=0,1,…,I. The function values and first derivatives of the spline fit at these nodes are denoted byziandbi, respectively. Letz=(z0,z1,…,zI)andb=(b0,b1,…,bI). Also lethi=xi+1−xiandΔzi=zi+1−zihi. We considerC1-smooth piecewise cubic polynomialsz(x)with nodesxi,i=0,1,…,I, of the form(1)z(x)=zi+bi(x−xi)+1hi[−(2bi+bi+1)+3Δzi](x−xi)2+1hi2[bi+bi+1−2Δzi](x−xi)3in each interval[xi,xi+1],i=0,1,…,I−1. A cubicL1spline fit is a functionz(x)of form (1) that minimizes theL1fitting functionalF(z,b):=∫x0xI|z(x)−f(x)|dxover a manifold of cubicL1interpolating splines. The free parameters in a cubicL1spline fit are the function valueszi,i=0,1,…,I, at the nodes. For each z, the first derivativesbi,i=0,1,…,Iof the corresponding interpolating spline are calculated by minimizing anL1interpolating functional as described below.The second-derivative-based interpolating functional isG(b):=∫x0xI|d2zdx2|dxwith z fixed. Therefore, the second-derivative-based spline fit optimization problem is(2)minz∫x0xI|z(x)−f(x)|dxs.t.b=arg⁡minb⁡∫x0xI|d2zdx2|dx.The lower-level problem is called the interpolating spline problem.For the first-derivative-based interpolating spline, the interpolating functional isG(b):=∑i=0I−1∫xixi+11hi|dzdx−dζdx|dxwhereζ(x)is the piecewise linear function that connects(xi,zi),i=0,1,…,I, i.e.,(3)ζ(x)=zi+Δzihi(x−xi)in each interval[xi,xi+1]. Consequently, the first-derivative-based spline fit optimization problem isminz∫x0xI|z(x)−f(x)|dxs.t.b=arg⁡minb⁡∑i=0I−1∫xixi+11hi|dzdx−dζdx|dx.The function-value-based interpolating functional isG(b):=∑i=0I−1∫xixi+11hi2|z(x)−ζ(x)|dxwhereζ(x)is the same as in (3). The function-value-based spline fit optimization problem isminz∫x0xI|z(x)−f(x)|dxs.t.b=arg⁡minb⁡∑i=0I−1∫xixi+11hi2|z(x)−ζ(x)|dx.For each given z, we denote the optimal solution to the interpolating spline problem byb⁎(z). The optimal solution to the spline fit problem is denoted byz⁎.Consider the following Heaviside step function with a jump atx=ϵ≥0:Hϵ(x)={0,ifx≤ϵ,1,ifx>ϵ.Hϵ(x)characterizes the geometric pattern of two parallel line segments, as shown in Fig. 1. W.l.o.g., the gap between two parallel line segments is set to be 1. We approximateHϵ(x)in a window ofI+1equally spaced spline nodesx0=−I2,…,xI/2=0,…,xI=I2whereI≥2is an even number. For convenience, the splines nodes are set to be equally spaced and the space between each two adjacent nodes is 1. General spacing settings can be handled without difficulty. If the spline fitz(x)satisfiesz(x)=Hϵ(x)for allx0=−I2≤x≤0=xI/2, we say the spline fit ϵ-preserves the linear shape. (If not specified otherwise, we use “preserve” instead of “ϵ-preserve” for simplicity.) For example, it is easy to see that whenϵ=I2, we haveHϵ(x)=0. The spline fit satisfieszi=bi=0,i=0,…,Iand preserves the linear shape.The spline fit can preserve the linear shape when the longer line segment contains sufficient extra information over the shorter one. Such extra information is represented by the length difference of the two parallel line segments inHϵ(x), which is 2ϵ. For simplicity, we use ϵ to denote this length difference. We propose the shape-preserving metric as defined below.Definition 1The ϵ-shape-preserving metricϵ⁎of cubicL1spline fits for approximatingHϵ(x)is defined as the minimum of such ϵ that the spline fitz(x)satisfiesz(x)=Hϵ(x)forx0≤x≤xI/2.For simplicity, we use “shape-preserving metric” to refer to “ϵ-shape-preserving metric” in the rest of this paper.The existence ofϵ⁎is guaranteed. Actually,ϵ⁎≤I2. As we will show in the later sections, whenϵ<ϵ⁎, the spline fit fails to preserve the linear shape. Whenϵ≥ϵ⁎, the spline fit preserves the linear shape. Fig. 1 illustrates that the second-derivative-based spline fit fails to preserve the linear shape ofH0(x)in a 5-node window. Fig. 2illustrates the second-derivative-based spline fit preserves the linear shape ofH0.5(x)in a 5-node window.In this section, we calculateϵ⁎for the three types of spline fits in a 3-node window, i.e.,I=2. Noting that a 3-node window is relatively small, we impose boundary conditions so that the information ofHϵ(x)can be contained at the boundary. Specifically, we set(4)z0=0,b0=0,z2=1andb2=0.That means that, the boundary nodes coincide withHϵ(x)in terms of function values and first derivatives. In this case, the linear shape will be preserved for−1≤x≤0ifz1=0andb1=0.We adopt an analytic approach. For second-derivative-based spline fits, we can solve the interpolating spline problem in (2) for the first derivativeb1, which is a function inz1. Then we solve the spline fit problem (2) and analyze the relation between the optimal solutionz1⁎and ϵ. We prove that there existsϵ⁎>0such thatz1⁎=0if and only ifϵ≥ϵ⁎. In this case,b1⁎(z1⁎)=0and thus spline fit preserves linear shape. The value ofϵ⁎can be analytically calculated. Shape-preserving metrics of first-derivative-based and function-value-based spline fits are calculated by similar procedures.The solution to the interpolating spline problem is given by the following theorem:Theorem 1Givenz0=0,b0=0,z2=1andb2=0, the first derivativeb1⁎that minimizes the second-derivative-basedL1interpolating functional∫−11|d2zdx2|dxis a function ofz1with the following explicit form:(5)b1⁎(z1)={0,ifz1≤0,4z1(1−z1),if0<z1≤14,1−z1,if14<z1≤25,smaller root ofz1=112(6−221b12−b12(81b12−156b1+76)−38b1+18),if25<z1≤12,smaller root ofz1=112(6+221b12−b12(81b12−156b1+76)−38b1+18),if12<z1≤35,z1,if35<z1<34,4z1(1−z1),if34<z1≤1,0,ifz1>1.By direct calculation, we havez″(−1)=−2b1+6z1,z″(0−)=4b1−6z1,z″(0+)=−4b1−6z1+6,z″(1)=2b1+6z1−6.Note thatz″(x)is discontinuous atx=0. The expression ofG(b1)depends on the signs ofz″(−1),z″(0−),z″(0+)andz″(1). Accordingly, there are 11 cases as shown in Table 1, along with their defining linear inequalities in terms ofb1andz1. The second column denotes the signs of (z″(−1),z″(0−),z″(0+),z″(1)). Fig. 3illustrates the 11 cases in a(z1,b1)plane. Within each case, we minimizeG(b1)for any givenz1and denote its minimizer byb¯1(z1). The results are listed in Table 1. We use Case 9 and Case 5 as examples to show how to findb¯1(z1).In Case 9,z″(−1)≤0,z″(0−)≥0,z″(0+)≤0andz″(1)≥0. The roots ofz″(x)=0in[−1,0]and[0,1]areu1=−2b1+3z13(b1−2z1)andu2=2b1−3(1−z1)3(b1−2(1−z1)),respectively. Hence, for any fixedz1,G(b1)=∫−1u1−d2zdx2dx+∫u10d2zdx2dx+∫0u2−d2zdx2dx+∫u21d2zdx2dx=2[b1−z′(u1)−z′(u2)].The first derivative ofG(b1)isG′(b1)=2[(b1+z1−1)(b1+3z1−3)3(b1+2z1−2)2+(b1−z1)(b1−3z1)3(b1−2z1)2+1].Note thatb1≥3z1andb1≥3(1−z1). ThenG′(b1)>0for allz1∈R. Therefore, the minimizerb1ofG(b1)in this case isb¯1(z1)=max⁡{3z1,3(1−z1)}.G′(b¯1)>0in this case.In Case 5,z″(−1)≥0,z″(0−)≤0,z″(0+)≥0andz″(1)≤0. We haveG(b1)=∫−1u1d2zdx2dx+∫u10−d2zdx2dx+∫0u2+d2zdx2dx+∫u21−d2zdx2dx=2[z′(u1)+z′(u2)−b1]andG′(b1)=2[−(b1+z1−1)(b1+3z1−3)3(b1+2z1−2)2−(b1−3z1)(b1−z1)3(b1−2z1)2−1].Within this case, forz1≤0, we haveG′(3z1)=−2(3z1−1)(11z1−5)(5z1−2)2≤0. Consequently,b¯1(z1)=3z1. We also haveb¯1(z1)=32z1for0≤z1≤25,b¯1(z1)=32(1−z1)for35≤z1≤1, andb¯1(z1)=3(1−z1)forz1≥1.For25≤z1≤12, we haveG′(32z1)≥0andG′(0)<0. Hence,b¯1(z1)solves the equationG(b1)=0. Fig. 4shows the curveG′(b1)=0. We can see that in the region corresponding to Case 5,b¯1(z1)is the smaller root of the equationG′(b1)=0. Finding an explicit form ofb¯1(z1)is a difficult task. (We tried in Mathematica and the obtained expression ofb¯1(z1)is complicated and inaccurate.) Nevertheless, by simplifyingG′(b1)=0, we have(6)z1=112(6−221b12−b12(81b12−156b1+76)−38b1+18).Therefore, for25≤z1≤12,b¯1(z1)is the smaller root of Equation (6).For12≤z1≤35,b¯1(z1)is the smaller root of the equationz1=112(6+221b12−b12(81b12−156b1+76)−38b1+18).Similarly, we can calculateb¯1(z1)and the sign ofG′(b¯1)for all other cases. Note thatG(b1)is continuous and convex inb1. Thenb1⁎(z1)should be theb¯1(z1)that satisfiesG′(b¯1)=0. By observing Table 1, we have the expression as in Equation (5). Fig. 5shows the graph ofb1⁎(z1).  □Now we study theL1fitting functional and calculate the shape-preserving metricϵ⁎.Lemma 1For two splinesz(x)andz˜(x)in the 3-node window with boundary conditions(4), ifb1⁎(z1)=b1⁎(z˜1), thenz(x)−z˜(x)=z(−x)−z˜(−x)for−1≤x≤1.When−1≤x≤0, we havez(x)−z˜(x)=1h0(x−x0)2(Δz0−Δz˜0)[3−2h0(x−x0)]=(z1−z˜1)(1−3x2−2x3)andz(−x)−z˜(−x)=z1−z˜1+1h1(−x−x1)2(Δz1−Δz˜1)[3−2h1(−x−x1)]=(z1−z˜1)(1−3x2−2x3).Therefore,z(x)−z˜(x)=z(−x)−z˜(−x)for−1≤x≤0. Similar proof applies to0≤x≤1.  □Lemma 2Given any0<ϵ≤1,0≤z1⁎≤14holds for the second-derivative-based spline fit forHϵ(x).We prove this lemma by considering different ranges ofz1according to the expression ofb1⁎(z1).First, we prove thatz1⁎≤12. Consider two splinesz(x)andz˜(x)withz1>12andz˜1=1−z1. By symmetry, the first derivatives at nodex1for both splines are equal, i.e.,b1⁎(z1)=b1⁎(z˜1). We havez(x)=1−z˜(−x)andz(x)−z˜(x)=1h0(x−x0)2(Δz0−Δz˜0)[3−2h0(x−x0)]≥0for all−1≤x≤0. By Lemma 1 we havez(x)−z˜(x)≥0for−1≤x≤1. Whenϵ=0, we knowF0(z1,b1⁎(z1))=F0(z˜1,b1⁎(z1)). When0<ϵ≤1, we considerFϵ(z1,b1⁎(z1))−F0(z1,b1⁎(z1))=∫0ϵ[|z(x)−0|−|z(x)−1|]dx=∫0ϵ[z(x)−|z(x)−1|]dxandFϵ(z˜1,b1⁎(z˜1))−F0(z˜1,b1⁎(z˜1))=∫0ϵ[|z˜(x)−0|−|z˜(x)−1|]dx=∫0ϵ[|z˜(x)|−1+z˜(x)]dx.(1)If12<z1≤34, then12<z(x)<1and0<z˜(x)<z(x)for0≤x≤ϵ. Hence,z(x)−|z(x)−1|=2z(x)−1>2z˜(x)−1=|z˜(x)|−1+z˜(x).If34<z1≤1, then0<z˜(x)<min⁡{z(x),1}for0≤x≤ϵ. Hence,z(x)−|z(x)−1|=min⁡{2z(x)−1,1}>2z˜(x)−1=|z˜(x)|−1+z˜(x).Ifz1>1, thenz(x)>1andz˜(x)<1for0≤x≤ϵ. Hence,z(x)−|z(x)−1|=1>max⁡{2z˜(x)−1,−1}=|z˜(x)|−1+z˜(x).Second, we prove thatz1⁎≤25. Suppose that25<z1≤12. It is easy to see there exists14≤z˜1≤25such thatb1⁎(z˜1)=b1⁎(z1). Notice thatb1⁎(z1)≤3z1,b1⁎(z1)≤3(1−z1),b1⁎(z˜1)≤3z1andb1⁎(z˜1)≤3(1−z1). Thus, we have0≤z˜(x)≤z(x)≤1for all−1≤x≤1and the equality holds only atx=−1and 1. By Lemma 1, we know∫−1−ϵ|z(x)−0|dx−∫−1−ϵ|z˜(x)−0|dx=∫ϵ1|z˜(x)−1|dx−∫ϵ1|z(x)−1|dx. Note∫−ϵϵ|z(x)−0|dx>∫−ϵϵ|z˜(x)−0|dx. Hence,Fϵ(z1,b1⁎(z1))>Fϵ(z˜1,b1⁎(z˜1)). Consequently,z1⁎≤25.Third, we show thatz1⁎≤14. When14≤z1≤25,b1⁎(z1)=1−z1. Then, the fitting functional becomesFϵ(z1,b1⁎(z1))=ϵ4z12−ϵ42−2ϵ3z3+2ϵ33−ϵ2z1+ϵ2+2ϵz1−ϵ+z16+13.The first derivative inz1isdFϵ(z1,b1⁎(z1))dz1=16(3ϵ4−4ϵ3−6ϵ2+12ϵ+1)=16[3ϵ4+4ϵ(1−ϵ2)+6ϵ(1−ϵ)+2ϵ+1]>0.Therefore, the minimumz1⁎ofFϵ(z1,b1⁎(z1))inz1≤25satisfiesz1⁎≤14.Finally, we prove thatz1⁎≥0. Suppose thatz1<0. Then we knowb1⁎(z1)=0. For−1≤x≤0,z(x)=z1(1+x)2(1−2x)≤0. For0≤x≤1,z(x)=3x2(1−z1)−2x3(1−z1)+z1. It is easy to verify thatz′(x)≥0. Thus,z(x)=0has one root in0≤x≤1. Denote this root byr(z1). Using the implicit function theorem, we havedr(z1)dz1=−∂z(x)∂z1∂z(x)∂x=−−3x2+2x3+16x(1−z1)(1−x)≤0.Hence,r(z1)decreases asz1increases. For any0<ϵ≤1, there exists some node function valuez1(ϵ)such thatr(z1(ϵ))=ϵ. Whenz1<z˜1≤z1(ϵ), we can easily seez(x)≤z˜(x)and, consequently,Fϵ(z1,b1⁎(z1))>Fϵ(z˜1,b1⁎(z˜1)). Whenz1(ϵ)<z1≤0,Fϵ(z1,b1⁎(z1))=∫−10−z(x)dx+∫0r(z1)−z(x)dx+∫r(z1)ϵz(x)dx+∫ϵ11−z(x)dx.Taking the derivative with respect toz1, we havedFϵ(z1,b1⁎(z1))dz1=∫−10−dz(x)dz1dx+∫0r(z1)−dz(x)dz1dx+∫r(z1)ϵdz(x)dz1dx+∫ϵ1−dz(x)dz1dx.Notice thatdz(x)dz1≥0for−1≤x≤1. By direct calculation, we have∫−10−dz(x)dz1dx+∫01dz(x)dz1dx=0. Hence,dFϵ(z1,b1⁎(z1))dz1≤0andz1⁎≥0.Combining all arguments above, we have0≤z1⁎≤14.  □Theorem 2Fixz0=0,b0=0,z2=1andb2=0in the 3-node window. The second-derivative-based spline fit forHϵ(x)preserves its linear shape in−1≤x≤0, i.e.,z1⁎=0andb1⁎(z1⁎)=0, if and only ifϵ≥0.250. This means that the shape-preserving metric of second-derivative-based spline fits is 0.250.To solve the spline fit problem, we only need to consider0≤z1≤14. In this range ofz1,b1=4z1(1−z1)>3z1. This meansz″(−1)≤0and the cubicL1spline fit intersects withHϵ(x)in the interval−1<x<0at another point besidesx0. Solve the equationz(x)=0, we have this pointx¯=14z1−2. The cubicL1spline fit has no other intersection withHϵ(x)thanx2in the interval0≤x≤1becauseb1⁎(z1)<3(1−z1)when0≤z1≤14.TheL1fitting functional then becomesFϵ(z1,b1⁎(z1))=∫−1x¯[Hϵ(x)−z(x)]dx+∫x¯0[z(x)−Hϵ(x)]dx+∫0ϵ[z(x)−Hϵ(x)]dx+∫ϵ1[Hϵ(x)−z(x)]dx=−2ϵ4z12+3ϵ4z1−ϵ4+16ϵ3z123−22ϵ3z13+2ϵ3−4ϵ2z12+4ϵ2z1+2ϵz1−ϵ−8z153(2z1−1)3+8z143(2z1−1)3−2z13(2z1−1)3+z123+z12(2z1−1)3−5z16−3z116(2z1−1)3+12.The first derivative inz1is∂Fϵ(z1,b1⁎(z1))∂z1=ϵ4(3−4z1)+23ϵ3(16z1−11)+ϵ2(4−8z1)+2ϵ+4z1(73−64z1(3(z1−2)z1+4))−3148(1−2z1)4.Then we have∂2Fϵ(z1,b1⁎(z1))∂ϵ∂z1=−2(ϵ−1)2(ϵ(8z1−6)−1)and∂2Fϵ(z1,b1⁎(z1))∂z12=2(37−64z1)z1−1112(2z1−1)5−43ϵ2(ϵ(3ϵ−8)+6).It is easy to verify that∂2Fϵ(z1,b1⁎(z1))∂z12≥∂2Fϵ(z1,b1⁎(z1))∂z12|z1=0for0≤z1≤14and0≤ϵ≤1. Notice that∂2F0.5(z1,b1⁎(z1))∂z12|z1=0=0. Therefore,∂2F0.5(z1,b1⁎(z1))∂z12≥0for0≤z1≤14. Then∂F0.5(z1,b1⁎(z1))∂z1≥∂F0.5(z1,b1⁎(z1))∂z1|z1=0=1524>0. On the other hand,∂2Fϵ(z1,b1⁎(z1))∂ϵ∂z1≥0for0≤z1≤14and0≤ϵ≤1. Hence,∂Fϵ(z1,b1⁎(z1))∂z1≥0for0≤z1≤14and0.5≤ϵ≤1. This implies thatz1⁎=0for0.5≤ϵ≤1andϵ⁎≤0.5.When0≤z1≤14and0≤ϵ≤0.5, by noticing∂2Fϵ(z1,b1⁎(z1))∂z12is decreasing in ϵ, we have∂2Fϵ(z1,b1⁎(z1))∂z12≥∂2F0.5(z1,b1⁎(z1))∂z12|z1=0=0. Consequently,Fϵ(z1,b1⁎(z1))is convex in0≤z1≤14for0≤ϵ≤0.5. Thenz1=0minimizesFϵ(z1,b1⁎(z1))if∂Fϵ(z1,b1⁎(z1))∂z1|z1=0≥0. By direct calculation we have∂Fϵ(z1,b1⁎(z1))∂z1|z1=0=3ϵ4−22ϵ33+4ϵ2+2ϵ−3148.Recall that∂2Fϵ(z1,b1⁎(z1))∂ϵ∂z1≥0. Solve the equation∂Fϵ(z1,b1⁎(z1))∂z1|z1=0=0and we have its unique solutionϵ⁎=1118−11872(97−223+97+223+14)+11872(−97−223−97+223+281497−223+97+223+14+28)≃0.250.Therefore, whenϵ≥0.250, the second-derivative-based spline fit forHϵ(x)satisfiesz1⁎=0andb1⁎(z1⁎)=0.  □Theorem 3Givenz0=0,b0=0,z2=1andb2=0, the first derivativeb1⁎that minimizes the first-derivative-basedL1interpolating functional∫−11|dzdx−dζdx|dxsatisfies the following properties:(1)b1⁎(z1)=0, ifz1≤0,z1≤b1⁎(z1)≤2z1, if0<z1≤0.255443,0<b1⁎(z1)≤z1, if0.255443<z1≤12,0<b1⁎(z1)≤1−z1, if12<z1≤0.755443,1−z1≤b1⁎(z1)≤2(1−z1), if0.755443<z1≤1,b1⁎(z1)=0, ifz1>1.ProofNote that the interpolating functional∫−11|dzdx−dζdx|dxis convex inz1andb1. Consequently,G(b1)is convex inb1for any givenz1.When−1≤x≤0, we havez′(x)=3(b1−2z1)(x+1)2−2(b1−3z1)(x+1)andζ′(x)=z1.Whenz1≤0andb1≥z1, the equationz′(x)−ζ′(x)=0has two roots in−1≤x≤0. Moreover,w1=−b12−3b1z1+3z12−2b1+3z13(b1−2z1),w2=b12−3b1z1+3z12−2b1+3z13(b1−2z1),G0(b1)=∫−1w1z′(x)−ζ′(x)dx+∫w1w2ζ′(x)−z′(x)dx+∫w20z′(x)−ζ′(x)dx,anddG0db1=∫−1w1∂z′(x)∂b1dx+∫w1w2−∂z′(x)∂b1dx+∫w20∂z′(x)∂b1dx.Whenb0=0, we havedG0db1|b1=0=−z1233z1=133.Similarly, whenz1≤0andb1≤1−z1, we can calculatedG1db1|b1=0=−(1−z1)233(1−z1)=−133.Hence,dGdb1|b1=0=dG0db1|b1=0+dG1db1|b1=0=0.Therefore,b1⁎(z1)=0forz1≤0.Whenz1≥0,z1≤b1≤2z1andb1≤1−z1, the equationz′(x)−ζ′(x)=0has one rootw2in−1≤x≤0and the following two rootsw3andw4in0≤x≤1:w3=−b12−3b1(1−z1)+3(1−z1)2−2b1+3(1−z1)3(b1−2(1−z1)),w4=b12−3b1(1−z1)+3(1−z1)2−2b1+3(1−z1)3(b1−2(1−z1)).ThenG(b1)=∫−1w2ζ′(x)−z′(x)dx+∫w20z′(x)−ζ′(x)dx+∫0w4ζ′(x)−z′(x)dx+∫w4w3z′(x)−ζ′(x)+∫w31ζ′(x)−z′(x)dx.We can verify thatG(b1)|b1→2z1>0for0≤z1≤13andG(b1)|b1=1−z1>0for13≤z1≤12. Furthermore,G(b1)|b1=z1is increasing in0≤z1≤12,G(b1)|b1=z1=0<0andG(b1)|b1=z1=12>0. Denote the root ofG(b1)|b1=z1=0by θ. We can computeθ≈0.255443. Therefore,z1≤b1⁎(z1)≤2z1, if0≤z1≤0.255443. Moreover,b1⁎(z1)≤z1, if0.255443≤z1≤12.Whenz1≥0,b1≤z1andb1≤1−z1, we can calculatedGdb1|b1=0=−233<0.Then0<b1⁎(z1)≤z1, if0.255443≤z1≤12. The remaining part of the theorem holds by symmetry.  □Fig. 6shows the graph ofb1⁎(z1).Lemma 3Given any0<ϵ≤1,0≤z1⁎≤12holds for the first-derivative-based spline fit forHϵ(x).Note that0≤b1⁎(z1)≤3(1−z1)for12≤z1≤1,b1⁎(z1)=0forz1≥1, andb1⁎(z1)=0forz1≤0. The proof of Lemma 2 can be applied.  □Theorem 4Fixz0=0,b0=0,z2=1andb2=0in the 3-node window. The first-derivative-based spline fit forHϵ(x)preserves its linear shape in−1≤x≤0, i.e.,z1⁎=0andb1⁎(z1⁎)=0, if and only ifϵ≥0.109. This means that the shape-preserving metric of first-derivative-based spline fits is 0.109.We only need to consider0≤z1≤12. First, we prove thatz1⁎=0minimizesFϵ(z1,b1⁎(z1))locally in0≤z1≤0.255443only ifϵ≥0.109. Second, that we prove whenϵ≥0.109,z1⁎=0minimizesFϵ(z1,b1⁎(z1))globally in0≤z1≤12.We notice that0≤z(x)≤1for−1≤x≤1becauseb1⁎(z1)<min⁡{3z1,3(1−z1)}. Therefore,Fϵ(z1,b1⁎(z1))=∫−10[z(x)−Hϵ(x)]dx+∫0ϵ[z(x)−Hϵ(x)]dx+∫ϵ1[Hϵ(x)−z(x)]dx=(ϵ42−4ϵ33+ϵ2−16)b1+(ϵ4−2ϵ3+2ϵ)z1−ϵ4+2ϵ3−ϵ+12.The first derivative inz1is∂Fϵ(z1,b1⁎(z1))∂z1=(ϵ42−4ϵ33+ϵ2−16)db1dz1+(ϵ4−2ϵ3+2ϵ).The second derivative inz1is∂2Fϵ(z1,b1⁎(z1))∂z12=(ϵ42−4ϵ33+ϵ2−16)d2b1dz12.We observe from Fig. 6 thatb1⁎(z1)is concave in0≤z1≤0.255443. Thusd2b1dz12≤0. On the other hand,(ϵ42−4ϵ33+ϵ2−16)=16(ϵ−1)3(3ϵ+1)≤0for0≤ϵ≤1. Consequently, we have∂2Fϵ(z1,b1⁎(z1))∂z12≥0and thenFϵ(z1,b1⁎(z1))is convex inz1.z1⁎=0minimizesFϵ(z1,b1⁎(z1))in0≤z1≤0.255443if and only if∂Fϵ(z1,b1⁎(z1))∂z1|z1=0≥0. Notice that∂2Fϵ(z1,b1⁎(z1))∂ϵ∂z1=2(ϵ−1)2ϵdb1dz1+2(ϵ−1)2(2ϵ+1)≥0for0≤ϵ≤1. We need to solve the following equation forϵ⁎:(7)−ϵ4−2ϵ3+2ϵϵ42−4ϵ33+ϵ2−16=db1dz1|z1=0.Now we calculatedb1dz1|z1=0. Supposedb1dz1|z1=0=k. Solve the equationlimz1→0⁡dG(b1)db1|b1=kz1=0and we havek=1.37885. Substitutingdb1dz1|z1=0=1.37885to Equation (7), we can obtainϵ⁎=0.109.Now we prove that whenϵ≥ϵ⁎,z1⁎=0is the global minimum ofFϵ(z1,b1⁎(z1))in0≤z1≤12. We observe thatb1⁎(z1)is concave in0.255443≤z1≤12. Moreover,db1dz1|z1=0.255443≤1becauseb1⁎(0.255443)=0.255443andb1≤z1for0.255443≤z1≤12. Hence,∂Fϵ(z1,b1⁎(z1))∂z1≥0in0.255443≤z1≤12. Therefore, whenϵ≥ϵ⁎,∂Fϵ(z1,b1⁎(z1))∂z1is monotonically increasing in0≤z1≤12. The minimum isz1⁎=0.  □Remark 1In the proof of Theorem 4, we used the concavity of functionb1⁎(z1)in intervals0≤z1≤0.255443and0.255443≤z1≤12. This property ofb1⁎(z1)is assumed without a mathematical proof because no analytic expression ofb1⁎(z1)is available. Nevertheless, we can observe it in Fig. 6.Theorem 5Givenz0=0,b0=0,z2=1andb2=0, the first derivativeb1⁎that minimizes the function-value-basedL1interpolating functional∫−11|z(x)−ζ(x)|dxsatisfies the following properties:(1)b1⁎(z1)=0, ifz1≤0,0≤b1⁎(z1)≤z1, if0≤z1≤12,0≤b1⁎(z1)≤1−z1, if12≤z1≤1,b1⁎(z1)=0, ifz1≥1.Note thatG(b1)is convex inb1for any givenz1. When−1≤x≤0, we havez(x)=(b1−2z1)(x+1)3−(b1−3z1)(x+1)2andζ(x)=z1(1+x).Whenz1≤0andb1≥z1, the equationz(x)−ζ(x)=0has a root in−1<x<0asr1=z1−b1b1−2z1. We haveG0(b1)=∫−1r1z(x)−ζ(x)dx+∫r10ζ(x)−z(x)dxanddG0db1|b1=0=132.Whenz1≤0andb1≤1−z1, the equationz(x)−ζ(x)=0has a root in0<x<1asr2=b1+z1−1b1+2z1−2. We haveG1(b1)=∫0r2ζ(x)−z(x)dx+∫r21z(x)−ζ(x)dxanddG1db1|b1=0=−132.Hence,dG(b1)db1|b1=0=0whenz1≤0. Consequently,b1⁎(z1)=0forz1≤0.Whenz1≥0,b1≤z1andb1≤1−z1, we haveG(b1)=∫−1r1ζ(x)−z(x)dx+∫r10z(x)−ζ(x)dx+∫0r2ζ(x)−z(x)dx+∫r21z(x)−ζ(x)dxanddGdb1|b1=0=−116<0.Henceb1⁎(z1)>0for0≤z1≤1.When0≤z1≤12, we havedGdb1|b1=z1=(z1−1)3(9z1−5)6(2−3z1)4>0.Henceb1⁎(z1)≤z1for0≤z1≤1. By symmetry we can prove the remaining of the theorem.  □Fig. 7shows the graph ofb1⁎(z1).Lemma 4Given any0<ϵ≤1,0≤z1⁎≤12holds for the function-value-based spline fit forHϵ(x).Note that0≤b1⁎(z1)≤3(1−z1)for12≤z1≤1,b1⁎(z1)=0forz1≥1, andb1⁎(z1)=0forz1≤0. The proof of Lemma 2 can be applied.  □Theorem 6Fixz0=0,b0=0,z2=1andb2=0in the 3-node window. The function-value-based spline fit forHϵ(x)preserves its linear shape in−1≤x≤0, i.e.,z1⁎=0andb1⁎(z1⁎)=0, if and only ifϵ≥0.050. This means that the shape-preserving metric of function-value-based spline fits is 0.050.Proof of Theorem 4 applies. For function-value-based spline fits,db1dz1|z1=0=0.61191andϵ⁎=0.050. We also need the assumption of concavity ofb1⁎(z1)here. This property can be observed in Fig. 7.  □Table 2shows the shape-preserving metrics of the three types of spline fits. The shape-preserving metrics are no more than25%of the space between adjacent spline nodes. This implies the strong shape-preserving capability of spline fits. We can see that the shape-preserving metrics of the second-derivative-based, first-derivative-based and function-value-based spline fits decrease in sequence. This indicates that the function-value-based spline fits have the strongest shape-preserving capability among these three types of spline fits.In the local-calculation approaches for interpolating spline and spline fits, a window of 5 nodes is of the appropriate size for both accuracy and efficiency (Jin et al., 2010, 2011; Wang et al., 2014; Yu et al., 2010). To evaluate the shape-preserving performance of the local-calculation approach and provide further comparison of the three types of spline fits, we computeϵ⁎in a 5-node window. No boundary conditions are imposed in this case. Considering that a similar analysis as in Section 4 for the 5-node window case is extremely cumbersome, we computeϵ⁎numerically in this section. The numerically computational procedure is as follows.Step 1Set a precision increment of0<Δϵ<1. Letϵ=0.Solve the spline fit problem numerically. Ifz0=z1=z2=0andb0=b1=b2=0, go to Step 3. Otherwise, letϵ=ϵ+Δϵand repeat Step 2.Outputϵ⁎=ϵ. Stop.In Step 2, we need to solve the interpolating spline problem forb⁎(z). While analytic methods have been developed for second-derivative-based and first-derivative-based splines, no such method is available for function-value-based splines. To conduct a fair comparison of the three types of spline fits, we use the Lagrangian multiplier primal affine method as in Lavery (2004) and (2009). This algorithm is satisfyingly accurate for our purpose of comparing the metrics. We use the MATLAB function fmincon to numerically minimize theL1fitting functional, which is in general not analytically expressed. The starting point for fmincon is set asz=(0.5,0.5,0.5,0.5,0.5). The criterion of determiningz0=z1=z2=0is that|z0|+|z1|+|z2|<10−3. The criterion of determiningb0=b1=b2=0is that|b0|+|b1|+|b2|<10−3. We setΔϵ=0.001.The computational results are shown in Table 3. The strong capability of spline fits and superior performance of function-value-based spline fits are verified. Moreover, by comparing to Table 2, we note that the metrics in the 5-node window are smaller than those in the 3-node window. This suggests that a 5-node window contains more information about the geometric pattern to be approximated. Hence, in the local-calculation approach for spline fits, the 5-node algorithm should be preferred to the 3-node algorithm.Analysis and numerical study for windows of 7 or more nodes may provide additional comparison of the three types of splines. In Yu et al. (2010), numerical experiments for interpolating splines in 7-node windows and global windows are conducted respectively, and are compared with 5-node windows. Yu et al. (2010) claim that these experiments provide “a piece of evidence supporting the use of second-derivative-based 5-point-windowL1splines.” For spline fits, we may also conduct experiments of different sizes. Since the numerical method would be very similar to that for 5-node windows, and the primary purpose of this paper is not calculating shape-preserving metrics of all kinds of windows, we leave the study of other window sizes to future research.We close the section by giving the general form of minimum length difference needed for preserving linear shape of two parallel line segments. The next theorem shows that the minimum length difference is proportional to the node space and is independent of the gap between the parallel line segments.Theorem 7LetI≥2be an even number,ϵˆ>0,D1>0andD2>0. The spline fitzˆ(x)with nodesxˆ0=−I2D1,…,xˆI/2=0,…,xˆI=I2D1preserves the linear shape of the functionHˆϵˆ(x)={0,ifx≤ϵˆD2,ifx>ϵˆinxˆ0≤x≤xˆI/2if and only ifϵˆ≥D1ϵ⁎, whereϵ⁎is the corresponding shape-preserving metric to the type of the spline fit.ProofNote that for any cubic splinez(x)with first derivativesbiat nodexi,i=0,…,Iandzˆ(x)with first derivativesbˆiat nodexˆi,i=0,…,I, ifbˆi=D2D1bi,i=0,…,I, thenzˆ(x)=D2z(xD1)for allxˆ0≤x≤xˆI. Consequently, ifb⁎(z)minimizes the interpolating functionalG(b), thenbˆ⁎(z)=D2D1b⁎(z)will minimizeG(bˆ). For the fitting functional, we haveF(z,bˆ⁎(z))=D1D2F(z,b⁎(z)). The spline fits forHˆϵˆ(x)andHϵ(x)will then have the same function values at nodesxˆiandxi,i=0,…,I. Therefore, spline fitzˆ(x)preserves linear shape ofHˆϵˆ(x)if and only ifϵˆD1≥ϵ⁎, i.e.,ϵˆ≥D1ϵ⁎.  □We have defined a metric to quantitatively characterize the shape-preserving capability of three types of cubicL1spline fits. To calculate this metric, we have developed an analytic approach in a 3-node window and a numerical procedure in a 5-node window. In both cases, the spline fits are shown to have convincingly strong capability in preserving linear shape. The function-value-based spline fit yields the smallest metric, which suggests it is better in shape preservation than the other two types of spline fits. This paper is of the first theoretic study on shape-preserving property of cubicL1spline fits. Such a study may help explain phenomena inL1splines applications. It may also be used as a reference to improve spline node positions and collect data of better quality for shape preservation purposes.Shape preservation deserves a more general and precise definition. We have discussed the principle of preserving linear shapes in given data. Another principle is to preserve convex shapes, such as corners and circles. To fully evaluate the shape-preserving capability, we need to investigate more shapes such as a triangular function or a circle. The shape-preserving metrics in these cases should be defined accordingly. Furthermore, an analytic approach for calculating the metric in a 5-node window is worth designing. The analysis in the 3-node window, as well as the analytic solution to theL1interpolating spline problem in a 5-node window (Jin et al., 2010, 2011; Yu et al., 2010), shows the potential in these regards.As indicated, function-value-based spline fits may perform superiorly in shape preservation. Analytic methods for solving the function-value-based interpolating spline problem and spline fit problem become more necessary and appealing. Such computational development may also be used to better evaluate the shape-preserving capability.

@&#CONCLUSIONS@&#
