@&#MAIN-TITLE@&#
Automated design space exploration of multi-cycle transient fault detectable datapath based on multi-objective user constraints for application specific computing

@&#HIGHLIGHTS@&#
Novel exploration approach for multi-cycle transient fault detectable datapath.Novel mechanism for detecting multi-cycle transient fault.Performs tradeoff between power and execution delay.Provides an average improvement in QoR of >9% compared to [15].

@&#KEYPHRASES@&#
Multi cycle,Transient,Fault detectable,Design space exploration,Power,Delay,Bacterial foraging,

@&#ABSTRACT@&#
A novel automated design space exploration (DSE) approach of multi-cycle transient fault detectable datapath based on multi-objective user constraints (power and delay) for application specific computing is presented in this paper. To the best of the authors’ knowledge, this is the first work in the literature to solve this problem. The presented approach, driven by bacterial foraging optimization (BFO) algorithm provides easy flexibility to change direction in the design space through tumble/swim actions if a search path is found ineffective. The approach is highly capable of reaching true Pareto optimal curve indicated by the closeness of our non-dominated solutions to the true Pareto front and their uniform distribution over the Pareto curve (implying diversity). The contributions of this paper are as follows: (a) novel exploration approach for generating a high quality fault detectable structure based on user provided requirements of power-delay, which is capable of transient error detection in the datapath; (b) novel fault detectable algorithm for handling single and multi-cycle transient faults.The results of the proposed approach indicated an average improvement in Quality of Results (QoR) of >9% and reduction in hardware usage of >23% compared to recent approaches that are closer in solving a similar objective.

@&#INTRODUCTION@&#
DSE in HLS includes searching an optimal datapath from a set of assorted design alternatives of equivalent functionality which offer higher performance, and lower power expenditure with complete fault reliability attribute. The aim of the exploration approach is to reduce the large and complex design space into a set of feasible design solutions meeting multiple designs performance along with certain orthogonal issues like runtime and QoR [5,8–13,23,26–28].However, optimizing area, power and performance remains no longer sufficient now. Specifically, for current generation of systems which demand designs (especially for space applications where radiation induced faults are highly possible) that requires ability to detect errors occurring due to transient faults (such as single event upsets). Transient faults are radiation induced faults which are non-permanent in nature. These nonrecurring faults can be caused by energized particles, environmental noise or electromagnetic interference. The duration of such faults is in order of a few picoseconds [16,24]. The occurrence of transient faults is due to recent advancements in technology where the packing of millions of transistors on a single chip have become more feasible. The increase in density per unit area is negatively impacting the device and overall systems reliability by making it susceptible to transient faults or the single event upsets (SEU) [31] especially in space applications. Therefore, to achieve high reliability of the systems, fault detectability [31–36] should be considered as design metric (or constraint) during multi-objective DSE in HLS [25,34].Summary: BFOA uses a simplified framework and is less sensitive than other evolutionary techniques such as particle swarm optimization (PSO) and genetic algorithm (GA), yet capable of reaching high quality optimal solution. Therefore, it is better adaptable to the problem at hand which is considered intractable and NP hard. The detailed motivation for adopting BFOA is provided below:A regular DSE process with power and delay as design objective is considered intractable [26]. Inclusion of multi-cycle fault detectability as additional design objective would intricate the mechanism and therefore shall require advanced search algorithm to find a quality design solution. Methodologies such as BFOA would be considered suitable for such notorious problems because other evolutionary algorithms such as GA, hybrid GA and PSO do not provide flexible options for guided/adaptive searching such as change in directions when a certain search path is found unproductive. Further, PSO is known to be a highly sensitive algorithm; therefore failing to clinically pre-tune the parameters often would result in convergence to local optima [38]. Additionally, due to multiple loops involved in BFOA such as chemotaxis and dispersal as well as options of tumble/swim (helping to change directions when required), the framework of this algorithm provides the flexibility to be configured in an proficient way for eliciting efficient search behavior during multi-dimensional DSE. BFOA comprises of primarily of two major steps: chemotaxis and dispersal for locomotion of bacterium. Using locomotion mechanisms (such as flagella) bacteria can move around in their environment, sometimes moving chaotically (tumbling and spinning), and other times moving in a directed manner that may be referred to as swimming. The algorithm was designed for application to continuous function optimization problem domains. Given the loops in the algorithm, it can be configured in numerous ways to elicit different search behavior. It is common to have a large number of chemotaxis iterations, and small numbers of the other iterations [37]. The steps on how locomotion movement of bacterium is employed for DSE of the given problem are described in Section 3.3.

@&#CONCLUSIONS@&#
