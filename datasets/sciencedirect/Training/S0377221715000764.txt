@&#MAIN-TITLE@&#
Algorithm for computing the queue length distribution at various time epochs in DMAP/G

@&#HIGHLIGHTS@&#
We investigate a discrete-time queue with batch-size-dependent service.The discrete-Markovian arrival process captures the correlation structure of the arrival process.UL-type RG-factorization approach is employed to calculate the joint state probabilities at various epochs.The impact of the correlation factor on performance measures is also studied.

@&#KEYPHRASES@&#
Queueing,Batch-size-dependent service,Markovian arrival process,Phase-type distribution,Finite-buffer,

@&#ABSTRACT@&#
This paper presents a discrete-time single-server finite-buffer queue with Markovian arrival process and generally distributed batch-size-dependent service time. Given that infinite service time is not commonly encountered in practical situations, we suppose that the distribution of the service time has a finite support. Recently, a similar continuous-time system with Poisson input process was discussed by Banerjee and Gupta (2012). But unfortunately, their method is hard to apply in the analysis of discrete-time case with versatile Markovian point process due to the fact that the difference equation governing the boundary state probabilities is more complex than the continuous one. If we follow their ideas, we will eventually find that some important joint queue length distributions cannot be computed and thus some key performance measures cannot be derived. In this paper, replacing the finite support renewal distribution with an appropriate phase-type distribution, the joint state probabilities at various time epochs (arbitrary, pre-arrival and departure) have been obtained by using matrix analytic method and embedded Markov chain technique. Furthermore, UL-type RG-factorization is employed in numerical computation of block-structured Markov chains with finitely-many levels. Some numerical examples are presented to demonstrate the feasibility of the proposed algorithm for several service time distributions. Moreover, the impact of the correlation factor on loss probability and mean sojourn time is also investigated.

@&#INTRODUCTION@&#
An efficient yet simple algorithm for computing the queue length distribution at various time epochs has been considered as one of the most critical issues in the area of queueing theory. Vast majority of studies on the performance evaluation of queueing systems are based on the queue length information. As an interesting and significant variant of the classic queue, the algorithmic analysis of the queue length distribution in bulk service system has been extensively studied over the past decades due to its wide applications in many fields, such as in transportation, manufacturing, computer-communication networks and telecommunication systems. Among some recent researches on this topic are those by Chakravarthy (1992); 1993), Laxmi and Gupta (1999), Gupta and Laxmi (2001), Gupta and Goswami (2002), Chaudhry and Gupta (2003), Gupta and Sikdar (2004), Chaudhry and Chang (2004), Chang and Choi (2005), Skidar and Gupta (2005), Samanta, Chaudhry, and Gupta (2007), Alfa and He (2008) and Banik, Chaudhry, and Gupta (2008), both of whom considered some numerically feasible algorithm for the stationary queue length distribution in bulk service model. However, it should be noted here that almost all of the above literature invariably assumed that the service time of each batch of customer follows the same probability distribution, regardless of the value of the batch size. Such assumption is clearly unreasonable in some real world applications. It is often seen that the expected processing time of the batch with a larger number of customers should be longer than the one with a smaller number of customers. Therefore, assuming the service time of the batch to be dependent on the batch size will be more plausible in describing the behavior of the bulk service queue. Actually, the batch-size-dependent service queue has been studied by Neuts in the 1960s of the last century (see Neuts, 1967). But after many years following the pioneering work, this type of queueing system has been relatively neglected in literature and as far as we are aware only a handful of papers have been explicitly dealing with such service mechanism. Using matrix geometric approach, Curry and Feldman (1985) considered M/Mj(L,K)/1 queue and obtained the joint distribution of the number of customers in the queue and the number of customers in a served batch. The work of Bar-Lev, Parlar, Perry, Stadje, and Schouten (2007) is an extension of the work done by Curry and Feldman, in the sense that a more versatile model is considered with service times that are generally distributed. Recently, employing two different methods, the queue-length distribution of the M/Gj(a,b)/1 finite-buffer queue has been carried out by Chaudhry and Gai (2012) and Banerjee and Gupta (2012), respectively. Worth mentioning here in particular is the paper of Banerjee and Gupta. In their work, the embedded Markov chain technique was employed to compute the joint distribution of the number of customers in the queue and the size of departing batch immediately after a service completion epoch. Then, they also obtained the joint distribution of the number of customers in the queue and the number of customers in a served batch at arbitrary epoch by using the supplementary variable technique and considering the supplementary variable as remaining service time. In practice, these joint distributions have their own importance as they are needed to obtain the average number of customers in the system (not only in the queue) and give a clear indication of the efficiency of the server. However, the set of performance quantities that mentioned above were not reported in the work of Chaudhry and Gai.On the other hand, from the above literature overview, we may see that the existing research about the batch-size-dependent service queue has mainly focused on the continues-time case. Its discrete-time counterpart has received less attention in the past few decades. Except a limited number of studies done by several Belgian scholars (Claeys, Steyaert, Walraevens, Laevens, and Bruneel, 2013; Claeys, Walraevens, Laevens, and Bruneel, 2010) and Indian scholars (Banerjee, Gupta, and Goswami, 2014), no work in this direction has come to our notice. Numerous theoretical and computational issues for discrete-time batch-size-dependent service queues have been left unexplored. In this paper, we will consider a versatile finite-buffer discrete-time queue with service times that are generally distributed and dependent on the number of customers in a served batch. Further, we also assume that customers arrive into the system according to a discrete-time Markovian arrival process (DMAP). Different from independent renewal arrival process, DMAP is a very good representation of the bursty and correlated traffic arising in telecommunication systems and is a rich class of point processes which contains many familiar arrival processes such as Bernoulli arrival process, discrete-time phase-type (PH) renewal process, and Markov modulated Bernoulli process (MMBP). Thus, from a theoretical perspective, our proposed model covers various special cases. Additionally, to avoid excessive delays due to postponing service until the service control limit is reached, a modified threshold policy is also included in our model. Specifically, after a service completion epoch, if the queue size n is less than the threshold a, then the server serves them one by one and if a ≤ n ≤ b, a group of size n enters service. The maximum capacity of the server is b. This implies that the size of the batch is not greater than b. Queueing model where service can be provided either to single customer or to a group of customers is useful in different real-world operational management situations to minimize the organization costs while keeping a high level of customer satisfaction. For the sake of notational simplicity, we denote this queue by DMAP/G(1, a, b)/1/N, where N is the capacity of the system excluding those under service.In the early stage of our study, we attempted to use the method presented in the paper of Banerjee and Gupta (2012) to analyze such discrete-time queue. But we found that some joint probability distributions of the number of customers in the queue and the number of customers in a served batch cannot be computed by this method. Because the joint probability distribution that mentioned above has a higher dimension than the stationary probability vector of the underlying Markov chain of the arrival process, it is almost impossible to find the joint distributions on some boundary states by using the normalization condition. Meanwhile, since the probability of an arrival and a departure occurring simultaneously is no longer equal to zero in discrete-time queues, the analysis and computation of the joint distribution will become further complicated under such situation. How to overcome these obstacles? The algorithmic method proposed by Alfa and Li (2001) gives us an inspiration. In the 1970s, Neuts (1975) pointed out that all discrete renewal distributions with finite support can be represented by discrete PH distributions. The above excellent property of the PH distribution was employed by Alfa and Li to study the GI/G/1 queue. Replacing the discrete renewal distribution with an appropriate PH distribution, they have shown that the discrete GI/G/1 system can be analyzed as a quasi-birth-and-death (QBD) process. It is indisputable that such method substantially reduces the difficulty of the model analysis. Even more importantly, due to the use of PH distribution in queueing analysis, most results obtained in their studies are numerically tractable, and these calculations can be relatively easily done by applying a suitable software package such as Maple, Mathematica or Matlab. Thus, in this paper, we will follow the idea of Alfa and Li (2001) to investigate the DMAP/G(1, a, b)/1/N queue.This paper is structured as follows. First, we describe notations and the preliminary description of the model in Section 2. In Section 3, we carry out a detailed analysis for determining the joint state probabilities at different time epochs. A variety of numerical examples are presented in Section 4. Finally, the paper ends with Section 5 where conclusions and future scope are discussed.The queueing model under consideration has the following features. The input process is described by a DMAP, where arrivals are governed by an L-states underlying Markov chain. Suppose that the DMAP is in state i, 1 ≤ i ≤ L, at the end of an arbitrary time slot. There is a transition from state i to state j without arrivals with probability cij, 1 ≤ i, j ≤ L, and there is a transition from state i to state j with an arrival with probability dij, 1 ≤ i, j ≤ L. LetC= (cij) andD= (dij) be the L × L nonnegative matrices. Clearly, the L × L matrixCwith elements cijgoverns transitions without arrivals, while the L × L matrixDwith elements dijgoverns transitions with customer arrivals. The matrixC+Dis the transition matrix of the underlying Markov chain. Letπ˜be the stationary probability vector of the Markov chain, i.e.,π˜(C+D)=π˜,π˜eL=1,whereeLis a column vector of 1’s of size L. Then the total arrival rate λ* of the Markov chain is given byλ*=π˜DeL. Let a and b denote positive integers with a < b < N. Service is either single or in batches according to the following discipline. When the amount of available customers after a service completion is smaller than a, service is provided to a single customer. If the server finds at least ‘a’ customers waiting for service, say r, then service is provided to a group of customers of size min (r, b). The service time of a batch is arbitrarily distributed and dependent on the size of the batch. Let Sr(r = 1 or a ≤ r ≤ b) denote the service time of the batch of size r with probability mass functionsr,k=Pr{Sr=k},k = 1, 2, …, mr, sr, 0 = 0. In real world applications, the size of a serving batch is always bounded. Thus, assuming that the service time Srhas a finite support, namely mr< ∞, is very reasonable in mathematical modeling.For further use in the sequel, we introduce the following notations. Let0denote a zero matrix of appropriate dimension. When needed, the dimension of zero matrix will be identified with a suffix. The notationInstands for an identity matrix of dimension n. ⊗ and ⊕ are symbols of the Kronecker product and sum of matrices. Additionally, the notationepqdenotes the column vector of dimension p with 1 in the qth position and 0 elsewhere. Throughout this paper we promise if i < j then∑ji=0.Writesr=(sr,1,sr,2,…,sr,mr). According to Alfa (2004), the density {sr, r = 1, a, …, b} can be represented as a discrete PH distribution in two ways, one as a remaining time and the other as an elapsed time. In this paper, we choose the remaining time representation. Let0⊤ denotes the transpose of0. The distribution of random variable Srmay be expressed as a PH distribution with representation (βr,Tr), where for r = 1, a, a + 1, …, b,βr=sr=(sr,1,sr,2,…,sr,mr),andTr=(0⊤0Imr−10).Also, we letTr0=emr−Tremr. By direct calculation, we havePr{Sr=k}=βrTrk−1Tr0,k = 1, 2, …, mr.In discrete-time queueing system, the time axis is divided into equal intervals called slots and all queueing activities occur at the slot boundaries. Traditionally, there are two types of systems in the discrete-time case (see, e.g., Hunter, 1983; Takagi, 1993), one is the late arrival with delayed access (LAS-DA) and the other is the early arrival system (EAS). In this paper, we consider the late arrival system with delayed access i.e. service can be completed only in (t, t+) and arrivals can occur only in (t−, t).In order to study the joint distribution as well as to obtain information on some other performance measures of the queueing model, we introduce the following Markov chain for the state of the system. Let•Nq(t) be the number of customers waiting in the queue (excluding those in service) at time t−;Y(t) be the number of customers being served at time t−;Ja(t) be the phase of the arrival process at time t−;Js(t) be the phase of the service time of the on-going service at time t−.In case the vector(π0¯,π0,π1,…,πN)has small dimension, the finite linear system (1) with the matrixP−IL+(N+1)δcan be solved directly. However, when the dimension is large, the direct solving of the system (1) can be time and resource consuming. Taking into consideration the special structure of matrixP−IL+(N+1)δ,an effective and numerically stable algorithm for solving this system is provided in Li (2010, chap. 2). In what follows, we use the UL-type RG-factorization to compute the vector(π0¯,π0,π1,…,πN). Applying RG-factorization to matrixP−IL+(N+1)δ,we haveP−IL+(N+1)δ=(IL+(N+1)δ−RU)×diag(U0¯,U0,U1,…,UN)(IL+(N+1)δ−GL),where(IL+(N+1)δ−RU)=(IL−R0¯00⋯00Iδ−R00⋯000Iδ−R1⋯0⋮⋮⋮⋱⋱⋮000⋯Iδ−RN−1000⋯0Iδ),and(IL+(N+1)δ−GL)=(IL000⋯00−G0,0¯Iδ00⋯00−G1,0¯−G1,0Iδ0⋯00−G2,0¯−G2,0−G2,1Iδ⋯00⋮⋮⋮⋮⋱⋮⋮−GN−1,0¯−GN−1,0−GN−1,1−GN−1,2⋯Iδ0−GN,0¯−GN,0−GN,1−GN,2⋯−GN,N−1Iδ).Then, it follows thatUN=PN,N−Iδ,GN,j=−UN−1PN,j,j=0,1,2,…,N−1,GN,0¯=−UN−1PN,0¯,Ri=−Pi,i+1Ui+1−1,i=0,1,2,…,N−1,R0¯=−P0¯,0U0−1,Ui=Pi,i−Iδ−RiUi+1Gi+1,i,i=0,1,2,…,N−1,U0¯=P0¯,0¯−IL−R0¯U0G0,0¯,Gi,j=Ui−1(RiUi+1Gi+1,j−Pi,j),i=1,2,…,N−1,j=0,1,…,i−1,Gi,0¯=Ui−1(RiUi+1Gi+1,0¯−Pi,0¯),i=0,1,…,N−1.One may note that, according to the above equations,Ui,Gi, jandRican be determined recursively. Employing the above UL-type RG-factorization, the equationπ(P−IL+(N+1)δ)=0L+(N+1)δcan be rewritten asπ(IL+(N+1)δ−RU)diag(U0¯,U0,U1,…,UN)(IL+(N+1)δ−GL)=0L+(N+1)δ.Since(IL+(N+1)δ−GL)is invertible, this equation can be simplified further asπ(IL+(N+1)δ−RU)diag(U0¯,U0,U1,…,UN)=0L+(N+1)δ.LetZ=π(IL+(N+1)δ−RU)andZ=(z0¯,z0,z1,…,zN). Then the above equation can be separated into two sub-equations as{(π0¯,π0,π1,…,πN)(IL+(N+1)δ−RU)=Z,Zdiag(U0¯,U0,U1,…,UN)=0L+(N+1)δ.Clearly, this leads to{z0¯U0¯=0L,zkUk=0δ,0≤k≤N.SinceUkis invertible for all 0 ≤ k ≤ N (see Li and Cao, 2004), we deduce thatzk=0δfor 0 ≤ k ≤ N. Note that the censored Markov chainU0¯is positive recurrent, thus we letz0¯be the stationary probability vector of the Markov chainU0¯. That is to say,z0¯U0¯=0Landz0¯eL=1. So, we haveZ=(ηz0¯,0δ,0δ,…,0δ)and(π0¯,π0,π1,…,πN)(IL−R0¯00⋯00Iδ−R00⋯000Iδ−R1⋯0⋮⋮⋮⋱⋱⋮000⋯Iδ−RN−1000⋯0Iδ)=(ηz0¯,0δ,0δ,…,0δ),Finally, we have{π0¯=ηz0¯,π0=ηz0¯R0¯,πk=π0∏i=1kRi−1,k=1,2,…,N,where the scalar η is uniquely determined byπ0¯eL+∑k=0Nπkeδ=1. Once we get the stationary probability vector(π0¯,π0,π1,…,πN),the other distributions of interest such as the joint distribution of the number of customers in the queue and the number of customers in a served batch,πk,r′(0≤k≤N,r=1,a,…,b),distribution of the number of customer in the system (including the number of customers that the server is currently processing),πkS(0≤k≤N+b),distribution of the number of customers in the queue,πkQ(0≤k≤N)and the distribution of the number of customers undergoing service with the server,πrservice(r=0,1,a,…,b)can be easily obtained and given byπk,r′=∑i=1L∑j=1mrπk,r,i,j=πk,reLmr,r=1,a,…,b,0≤k≤N,πkS={π0¯eL,k=0,πk−1,1eLm1,1≤k≤a−1,πk−1,1eLm1+∑r=akπk−r,reLmr,a≤k≤b,∑r=abπk−r,reLmr,b+1≤k≤N+a,∑r=k−Nbπk−r,reLmr,N+a+1≤k≤N+b,πkQ={π0¯eL+π0eδ,k=0,πkeδ,1≤k≤N,,πrservice={π0¯eL,r=0,∑k=0Nπk,reLmr,r=1,a,…,b.This completes the evaluation of joint distribution of the number of customers in the queue and the number of customers in a served batch at arbitrary epoch as well as the corresponding marginal distributions.Let(Nq−(t),Y−(t),Ja−(t),Js−(t))=(k,r,i,j)as seen by an arbitrary customer just before his arrival. Defineπ0¯,i−=limt→∞Pr{Nq−(t)=0¯,Ja−(t)=i},1≤i≤L,πk,r,i,j−=limt→∞Pr{Nq−(t)=k,Y−(t)=r,Ja−(t)=i,Js−(t)=j},0≤k≤N,r=1,a,a+1,…,b,1≤i≤L,1≤j≤mr.Applying Bayes’ theorem (see Samanta, Gupta, and Sharma, 2007), we have for 1 ≤ i ≤ L,π0¯,i−=Pr{thequeueisempty,serverisidleatarbitraryepochandcustomerarrivalprocessisinphasei|customerarrivalisabouttooccur}=∑l=1Lπ0¯,ldli[π0¯+∑k=0N∑q=1m1πk,1(IL⊗em1q)+∑k=0N∑r=ab∑q=1mrπk,r(IL⊗emrq)]DeL=∑l=1Lπ0¯,ldliπ˜DeL=∑l=1Lπ0¯,ldliλ*,πk,r,i,j−=Pr{thenumberofcustomersinthequeueisk,serverisbusywithrcustomersatarbitraryepochandthephasesofarrivalandserviceprocessesareiandj,respectively|customerarrivalisabouttooccur}=∑l=1Lπk,r,l,jdli[π0¯+∑k=0N∑q=1m1πk,1(IL⊗em1q)+∑k=0N∑r=ab∑q=1mrπk,r(IL⊗emrq)]DeL=∑l=1Lπk,r,l,jdliπ˜DeL=∑l=1Lπk,r,l,jdliλ*,0≤k≤N,r=1,a,a+1,…,b,1≤j≤mr.Without considering the phases of arrival and service, we further defineπ0¯−′=∑i=1Lπ0¯,i−,πk,r−′=∑i=1L∑j=1mrπk,r,i,j−,whereπ0¯−′denotes the probability that an arrival finds no customers in the queue and the server is idle,πk,r−′represents the probability that a customer sees the server is busy with r customers and k customers are waiting in the queue. Thus, according to the expressions forπ0¯,i−andπk,r,i,j−,we haveπ0¯−′=π0¯DeLλ*,πk,r−′=1λ*∑q=1mrπk,r(IL⊗emrq)DeL.In this subsection, we are going to look at the queue length only at certain selected random points. We select these points at which a bulk service is about to be completed. We will find the joint distribution of the number of customers in the queue and the size of departing batch at service completion epoch by using the method of an embedded Markov chain. We now introduce some notations as follows:•Nn+: the number of customers in the queue immediately after the nth batch departure;Yn+: the number of customers in the nth departing batch;Jn+: the phase of the arrival process at the nth bulk service completion epoch.LetAn,r(k)be the matrix of order L × L whose (i, j)th elementan,r(k)(i,j)is the conditional probability that given a departure, which leaves at least one customer in the queue with the input process in phase i, the next departure occurs with the arrival process in phase j and there are n(n ≥ 0) arrivals during the service of a batch of size r(r = 1 or a ≤ r ≤ b) that consists of k time slots.Conditioning on the events that may occur in the first time slot, we can compute matrixAn,r(k)recursively by using the following relationships(2)A0,r(k)=CA0,r(k−1),1≤k≤mr,r=1,a,a+1,…,b,(3)An,r(k)=CAn,r(k−1)+DAn−1,r(k−1),1≤n≤k≤mr,r=1,a,a+1,…,b,withA0,r(0)=ILandAn,r(k)=0L×L,0 < mr< k < n, r = 1, a, a + 1, …, b. Here, the first term on the right hand side of Eq. (3) indicates that there are no arrivals in the first time slot and n customers must arrive at the system in the next k − 1 time slots. On the other hand, if one customer has arrived in the first time slot, the second term on the right hand side of Eq. (3) means that there are n − 1 arrivals in the remaining k − 1 time slots.Unconditioning on the inter-departure time, we further define(4)An,r=∑k=max(1,n)mrAn,r(k)sr,k,n≥0,r=1,a,a+1,…,b.Clearly,An, ris also a matrix of size L × L whose (i, j)th element an, r(i, j) is the conditional probability that given a departure, which leaves at least one customer in the queue with the input process in phase i, there are n(n ≥ 0) arrivals during the service of a batch of size r(r = 1 or a ≤ r ≤ b) with the input process in phase j at the next departure. Since the service time has a PH representation, using Eqs. (2) and (3), matricesAn, rcan be expressed as(5)A0,r=∑k=1mrA0,r(k)⊗βrTrk−1Tr0=(IL⊗βr)(∑k=1mrA0,r(k)⊗Trk−1)(IL⊗Tr0)=(IL⊗βr)(∑k=1mrCk⊗Trk−1)(IL⊗Tr0)=(IL⊗βr)(C⊗Imr)(∑k=1mrCk−1⊗Trk−1)(IL⊗Tr0)=(IL⊗βr)(C⊗Imr)[ILmr−(C⊗Tr)]−1×[ILmr−(C⊗Tr)mr](IL⊗Tr0),r=1,a,a+1,…,b,(6)A1,r=∑k=1mrA1,r(k)⊗βrTrk−1Tr0=(IL⊗βr)(∑k=1mrA1,r(k)⊗Trk−1)(IL⊗Tr0)=(IL⊗βr)(∑k=1mr(CA1,r(k−1)+DA0,r(k−1))⊗Trk−1)(IL⊗Tr0)=(IL⊗βr)[(C⊗Tr)∑k=2mr(A1,r(k−1)⊗Trk−2)+(D⊗Imr)∑k=1mr(A0,r(k−1)⊗Trk−1)](IL⊗Tr0)=(IL⊗βr)[(C⊗Tr)∑k=1mr−1(A1,r(k)⊗Trk−1)+(D⊗Imr)∑k=1mr(C⊗Tr)k−1](IL⊗Tr0)=(IL⊗βr)[(ILmr−(C⊗Tr))−1(D⊗Imr)×(ILmr−(C⊗Tr))−1(ILmr−(C⊗Tr)mr)]×(IL⊗Tr0),r=1,a,a+1,…,b.For 1 ≤ n ≤ mrand r = 1, a, a + 1, …, b, we defineQn,r=∑k=nmrAn,r(k)⊗Trk−1=∑k=nmr(CAn,r(k−1)+DAn−1,r(k−1))⊗Trk−1.From Eq. (6), it follows thatQ1,r=(ILmr−(C⊗Tr))−1(D⊗Imr)(ILmr−(C⊗Tr))−1×(ILmr−(C⊗Tr)mr),r=1,a,a+1,…,b.Using properties of Kronecker product, for 2 ≤ n ≤ mr, we may obtain the following relationshipQn,r=∑k=nmr(CAn,r(k−1)+DAn−1,r(k−1))⊗Trk−1=(C⊗Tr)∑k=nmr(An,r(k)⊗Trk−1)+(D⊗Tr)∑k=n−1mr(An−1,r(k)⊗Trk−1)=(C⊗Tr)Qn,r+(D⊗Tr)Qn−1,r,r=1,a,a+1,…,b.Clearly, with the help ofQn − 1, r,Qn, rcan be expressed recursively asQn,r=(ILmr−(C⊗Tr))−1(D⊗Tr)Qn−1,r,n≥2,r=1,a,a+1,…,b.Thus, for n ≥ 2,(7)An,r=∑k=nmrAn,r(k)⊗βrTrk−1Tr0=(IL⊗βr)Qn,r(IL⊗Tr0),r=1,a,a+1,…,b.LetBn(k)be the matrix of order L × L whose (i, j)th elementbn(k)(i,j)is the conditional probability that given a departure which leaves the system empty with the arrival process in phase i, the next departure occurs after k time slots with the arrival process in phase j and there are n arrivals during the service time of the next batch departure. According to the model assumption, when the queue length is less than a, the service is only provided for a single customer based on the order of their arrival. Thus, under such a situation the size of the next departing batch is exactly one. This is why we drop the subscript ‘r’ in the above notation.Employing the definition ofAn,r(k)and after some simple probabilistic arguments,Bn(k)can be written as follows{B0(k)=∑q=1k−1Cq−1DA0,1(k−q),k≥2,Bn(k)=∑q=1k−nCq−1DAn,1(k−q),k≥n+1,n=1,2,…,m1.Similarly, unconditioning on the inter-departure time, we also define a new matrix on the basis ofBn(k),{B0=∑k=2∞∑q=max(1,k−m1)k−1Cq−1DA0,1(k−q)s1,k−q,Bn=∑k=n+1∞∑q=max(1,k−m1)k−nCq−1DAn,1(k−q)s1,k−q,n=1,2,…,m1,Bn=0L×L,n>m1.Bn(n = 0, 1, 2, …, m1) is a matrix of order L × L whose (i, j)th element is the conditional probability that given a departure which leaves the system empty with the arrival process in phase i, there are n arrivals during the service time of next departure and arrival process is in phase j. SinceAn,r=∑k=max(1,n)mrAn,r(k)sr,k,changing the order of the above double summation, we have(8)Bn=(I−C)−1DAn,1,n=0,1,…,m1.With the help of Eqs. (5)–(8), the submatrices Pi, jappearing in matrixPare described in detail as below:For i = 0,P0,j={[eb−a+2⊗Bj0(b−a+2)L×(b−a+1)L],j=0,1,…,N−1,[eb−a+2⊗∑k=Nm1Bk0(b−a+2)L×(b−a+1)L],j=N.For i = 1, 2, …, a − 1,Pi,j={[eb−a+2⊗Aj−i+1,10(b−a+2)L×(b−a+1)L],j+1≥i,j=0,1,…,N−1,[eb−a+2⊗∑k=N−i+1m1Ak,10(b−a+2)L×(b−a+1)L],j=N.For i = a, a + 1, …, b − 1,Pij={[0(b−a+2)L×(i−a+1)Leb−a+2⊗Aj,i0(b−a+2)L×(b−i)L],j=0,1,…,N−1,[0(b−a+2)L×(i−a+1)Leb−a+2⊗∑k=NmiAk,i0(b−a+2)L×(b−i)L],j=N.For i = b, b + 1, …, N,Pij={[0(b−a+2)L×(b−a+1)Leb−a+2⊗Aj−(i−b),b],j≥i−b,j=0,1,…,N,[0(b−a+2)L×(b−a+1)Leb−a+2⊗∑k=N−(i−b)mbAk,b],j=N.Since we deal with a finite and irreducible Markov chain, then it must be positive recurrent. As a result, its stationary probability vectorπ+, partitioned asπ+=(π0+,π1+,…,πN+),always exists, whereπv1+=(πv1,1+,πv1,a+,πv1,a+1+,…,πv1,b+),v1=0,1,…,N,πv1,v2+=(πv1,v2,1+,πv1,v2,2+,…,πv1,v2,L+),v1=0,1,…,N,v2=1,a,a+1,…,b,andπv1,v2,v3+=limn→∞Pr{Nn+=v1,Yn+=v2,Jn+=v3}. The unknown quantities{πv1,v2,v3+}can be obtained by solving the following system of linear algebraic equations(9){π+(P−I(N+1)(b−a+2)L)=0(N+1)(b−a+2)L,π+e(N+1)(b−a+2)L=1.Now, we are facing the same problem. It is well-known that the calculation of higher-dimensional matrices is rather complex and sometimes even harder to implement due to the computational limitations and memory requirements. In order to efficiently solve the system of Eq. (9), we still use the UL-type RG-factorization, given in Li (2010), to find the solution of Eq. (9). The major advantage of RG-factorization is that it can avoid the calculation of high dimensional matrices by decomposing them into small ones. Here, the UL-type RG-factorization of matrixP−I(N+1)(b−a+2)Lis given byP−I(N+1)(b−a+2)L=(I(N+1)(b−a+2)L−R^U)×diag(U^0,U^1,…,U^N)(I(N+1)(b−a+2)L−G^L),where(I(N+1)(b−a+2)Lδ−R^U)=(I(b−a+2)L−R^0,1−R^0,2−R^0,3⋯−R^0,N0I(b−a+2)L−R^1,2−R^1,3⋯−R^1,N00I(b−a+2)L−R^2,3⋯−R^2,N⋮⋮⋮⋱⋱⋮000⋯I(b−a+2)L−R^N−1,N000⋯0I(b−a+2)L),and(I(N+1)(b−a+2)L−G^L)=(I(b−a+2)L000⋯00−G^1,0I(b−a+2)L00⋯00−G^2,0−G^2,1I(b−a+2)L0⋯00−G^3,0−G^3,1−G^3,2I(b−a+2)L⋯00⋮⋮⋮⋮⋱⋮⋮−G^N−1,0−G^N−1,1−G^N−1,2−G^N−1,3⋯I(b−a+2)L0−G^N,0−G^N,1−G^N,2−G^N,3⋯−G^N,N−1I(b−a+2)L).Thus, we haveU^N=PN,N−I(b−a+2)L,G^N,j=−U^N−1PN,j,j=0,1,…,N−1,R^i,N=−Pi,NU^N−1,i=0,1,…,N−1,U^i=Pi,i−I(b−a+2)L−∑k=i+1NR^i,kU^kG^k,i,i=0,1,…,N−1,G^i,j=U^i−1(∑k=i+1NR^i,kU^kG^k,j−Pi,j),i=1,2,…,N−1,0≤j≤i−1,R^i,j=(∑k=j+1NR^i,kU^kG^k,j−Pi,j)U^j−1,i=1,2,…,N−2,i+1≤j≤N−1.Obviously, the matrix sequences{U^i,i=0,1,…,N},{G^i,j,i=1,…,N,j=0,1,…,N−1}and{R^i,j,i=0,1…,N−1,j=1,…,N}can be obtained through the backward recursions. By means of the UL-type RG-factorization, Li (2010) has provided the expression for the stationary probability vector(π0+,π1+,…,πN+)as follows:{π0+=τx0,πk+=∑i=0k−1πi+R^i,k,1≤k≤Nwherex0 is the stationary probability vector of the censored Markov chainU^0to level 0 and the scalar τ is uniquely determined by∑k=0Nπk+e(b−a+2)L=1. Having computed the stationary probability vector(π0+,π1+,…,πN+),the other distributions such as the joint distribution of the number of customers in the queue and the size of departing batch at departure epoch,πk,r+′(0≤k≤N,r=1,a,…,b)and the distribution of the number of customers in a departing batch,πrdeparture(r=1,a,…,b)can be easily written asπk,r+′=πk,r+eL,0≤k≤N,r=1,a,…,b,πrdeparture=∑k=0Nπk,r+eL,r=1,a,…,b.The basic objective of modeling of queueing problem is to evaluate some queueing measures to characterize the system behavior which helps the designer of the system in taking appropriate decisions. Thus, the main goal of our investigation in this subsection is to predict various performance metrics in terms of joint probability of the number of customers in the queue and the number of customers in a served batch. Some indices to characterize the system performance can be derived from these steady state probabilities.The expected number of customers in the queue (Lq), the average number of customers in the system (Ls) and the average number of customers in a served batch (Lservice) are given byLq=∑k=0NkπkQ,Ls=∑k=0N+bkπkS,Lservice=π1service+∑r=abrπrservice.A particular important measure of the system performance for a finite buffer queueing system is the loss or blocking probability (Ploss) which is equal toπN,1−′+∑r=abπN,r−′. Based on the loss probability mentioned above, using Little’s rule, the average waiting time of a customer in the queue (Wq), namely the time that elapses between his arrival and the start of his service, is given by Wq= Lq/λ′, where λ′ = λ*(1 − Ploss) is the effective arrival rate. Similarly, let Wsdenote the mean sojourn time of a customer in the system, we also have Ws= Ls/λ′.To demonstrate the feasibility of developed algorithm obtained in the previous section, prove the importance of the analytic results and show numerically some interesting features of the system under consideration we present the results of four numerical experiments. Firstly, steady state joint probabilities at departure, arbitrary and pre-arrival epochs are shown in three self explanatory tables. Then, under a special discrete-Markovian arrival process, we further illustrate experimentally that the algorithm presented in this paper is valid, accurate and very reliable. Further, the effects of buffer capacity on loss probability and average waiting time in the queue are investigated under different service time distributions. On the other hand, it is generally known that the discrete-Markovian arrival process captures both burstiness and correlation of the arrival process which are highly essential to be considered to measure the performance characteristics. Thus, to show the impact of burstiness and correlation on the loss probability and mean sojourn time, we also compare our model with an equivalent model that does not capture the correlation property. By this comparison, we can see the impact of autocorrelation on performance measures of batch-size-dependent service queue. All the calculations are performed on a PC having Intel Core i5 processor at 2.6 gigahertz with 4 gigabytes DDR3 RAM using Matlab program in Windows 7 environment. The numerical results are reported in tables up to six decimal places because of lack of space.Example 1In this example the numerical results are given for the DMAP/G(1, 4, 6)/1/12 queue. We choose arrival matrices asC=(0.30.10.10.1),D=(0.30.30.30.5),and this leads to λ* = 0.7. The distributions of Sr, r = 1, 4, 5, 6, are given byPr{S1=j}=15,j=1,2,…,5,Pr{S4=j}=111,j=1,2,…,11,Pr{S5=j}=112,j=1,2,…,12,Pr{S6=j}=113,j=1,2,…,13.Clearly, there is a stochastic order with S1 ≤ stS4 ≤ stS5 ≤ stS6. Such assumption is much closer to the actual service situation. The PH representations for different service times Srare listed in Table 1.We carry out numerical work based on the procedure discussed in Section 3. In Table 2, we have computed the joint distribution of the number of customers in the queue and the size of the departing batch at departure epoch. The last column of Table 2 displays the distribution of the number of customers in the queue at departure epoch, and the last row of Table 2 presents the distribution of the number of customers in the departing batch. Then, in Tables 3and 4, the joint distribution of the number of customers in the queue and the number of customers in a served batch at arbitrary and pre-arrival epochs are reported. Also, the marginal distributions of the number of customers in the queue and the number of customers undergoing service at arbitrary and pre-arrival epochs are displayed in the last column and last row of Tables 3and 4, respectively. Here, all the numerical results are presented without phases.The following numerical example is useful in debugging Matlab programs and checking accuracy for computations. Once the stationary distributionπis obtained, the joint distribution of the number of customers in the queue and the number of customers in a served batch at pre-arrival epoch, namelyπ0¯−′andπk,r−′,can be computed as well. When the inter-arrival time follows geometric distribution, the joint distribution of the number of customers in the queue and the number of customers in a served batch at pre-arrival and arbitrary epochs should be identical due to the memoryless property of Bernoulli arrivals. By numerical examples, we show that such a relationship is indeed established in batch-size-dependent service queue.Example 2The numerical results are still given for the DMAP/G(1, 4, 6)/1/12 queue. The service time distribution for each batch size r is the same as that of Example 1. We take arrival matrices asC= (0.3) andD= (0.7). This means that the expected number of arrivals per unit time is also 0.7, and the discrete-time Markovian arrival process becomes the simplest point process, namely Bernoulli process, for which the matricesCandDare scalars.It can be seen from Table 5that pre-arrival and arbitrary epoch probabilities are the same (i.e.π0¯′=π0¯−′andπk,r′=πk,r−′) due to Bernoulli arrivals. It is obvious that the numerical experiment result coincides with the BASTA (i.e. Bernoulli arrivals see time averages) property and indicates the correctness of the theoretical analysis in the previous section and the reliability of the computation program. Therefore, this method often acts as an effective internal check on our results.Example 3Having demonstrated the applicability of the analytical results in tabular form, we have a look at how the distributions and the variances of service time affect the queueing process. In this example, numerical results are given for the DMAP/G(1, 5, 9)/1/N queue by varying N from 15 to 40. The input parameters of DMAP are chosen asC=(0.150.150.10.1),D=(0.350.350.30.5),which leads to λ* = 0.76. We focus our attention on the loss probability of an arbitrary customer and the average waiting time of a customer in the queue. Toward this end, we first take three sets of batch-size-dependent service time as follows:Case 1.Pr{S1=j}=15,j=1,2,…,5,Pr{S5=j}=113,j=1,2,…,13,Pr{S6=j}=115,j=1,2,…,15,Pr{S7=j}=117,j=1,2,…,17,Pr{S8=j}=119,j=1,2,…,19,Pr{S9=j}=121,j=1,2,…,21.Pr{S1=3}=1,Pr{S5=j}=113,j=1,2,…,13,Pr{S6=8}=1,Pr{S7=j}=117,j=1,2,…,17,Pr{S8=10}=1,Pr{S9=j}=121,j=1,2,…,21.Pr{S1=3}=1,Pr{S5=7}=1,Pr{S6=8}=1,Pr{S7=9}=1,Pr{S8=10}=1,Pr{S9=11}=1.Their corresponding PH representations are given in Table 6.As we have seen in Table 6, for three different cases, the corresponding service time distributions are characterized by the same mean value. However, these are qualitatively different in that they have different variances. The total variances of above three groups of service time distribution are 125.34, 74.67 and 0, respectively. Fig. 1displays the impact of buffer size on the loss probability for various service time distributions. We see that Case 3 has the lowest loss probability and remains almost zero when N changes from 15 to 40, while in Case 1 and Case 2, Ploss decreases exponentially as the buffer size increases. It can be readily observed that the loss probability of the system worsens as the variances of the service time distributions become larger, and the decreasing rate of the loss probability becomes slower as the buffer size increases. This corresponds with our intuitive expectations. The effect of buffer size on average waiting time of a customer in the queue is studied in Fig. 2. We can observe from this figure that for fixed N, the value of Wqis much lower in Case 3 as compared to Cases 1 and 2. Wqremains almost constant in the third case as N increases. These analytical results obtained from above numerical experiments lead to a conclusion that variability of service times does affect main performance measures even though they have the same mean value.Example 4In this example, we show how the performance characteristics of our model differ from general PH renewal process which has independent arrivals. For simplicity, we take a special case of DMAP, namely the 2-state Markov modulated Bernoulli process (MMBP). A 2-state MMBP is characterized by its transition probability matrixP^and a diagonal matrixΛ^of arrival probabilities, as given below,P^=(p1−p1−qq)andΛ^=(λ100λ2),where 0 < ce: paraid = "para0046" > and 0 < λ1, λ2 < 1. The total arrival rate, λ*, the squared coefficient of variation,CVMMBP(2)2,of inter-arrival times between any two consecutive customers, and the lag-1 autocorrelation coefficient of inter-arrival times, ϕMMBP(2)(1), are given respectively as follows (see, Goswami and Selvaraju, 2010):λ*=λ1(1−q)+λ2(1−p)2−p−q,CVMMBP(2)2=2[λ1(1−q)+λ2(1−p)]λ1(1−q)+λ2(1−p)+λ1λ2(p+q−1)+2[λ1(1−p)+λ2(1−q)][λ1(1−q)+λ2(1−p)](p+q−1)(2−p−q)2[λ1(1−q)+λ2(1−p)+λ1λ2(p+q−1)]−λ1(1−q)+λ2(1−p)2−p−q−1,ϕMMBP(2)(1)=λ1λ2(λ1−λ2)2(1−p)(1−q)(p+q−1)2CVMMBP(2)2(2−p−q)2[λ1(1−q)+λ2(1−p)+λ1λ2(p+q−1)]2.The squared coefficient of variation,CVMMBP(2)2,of the inter-arrival times is an important measure of the degree of traffic burstiness which is defined as the ration of the variance to the square of mean inter-arrival times. The lag-1 autocorrelation coefficient, which is the ratio of covariance of inter-arrival times to the variance, is used to tell us how much correlation is there in the arrival process. Next, the comparison results for MMBP(2)/G(1, 5, 7)/1/N and PH/G(1, 5, 7)/1/N queues are presented by considering the following batch-size-dependent service time distributionsPr{S1=j}=111,j=1,2,…,11,Pr{S5=j}=117,j=1,2,…,17,Pr{S6=8}=119,j=1,2,…,19,Pr{S7=j}=121,j=1,2,…,21.Their corresponding PH representations are given in Table 7.Furthermore, the arrival process coded as MMBP(2) is defined by two matricesP^=(0.98148150.01851850.01851850.9814815)andΛ^=(0.50000000.00000000.00000000.1000000).Thus, the corresponding DMAP representation of above MMBP process is given byCMMBP(2)=P^(I2−Λ^)=(0.49074050.01666710.00925950.8833329)andDMMBP(2)=P^Λ^=(0.49074050.00185190.00925950.0981481).Meanwhile, the arrival process coded as PH is defined by the vectorα= (0.8333333, 0.1666667) and the matrixM=(0.49074050.01666710.00925950.8833329).Then it can also be represented as DMAP process withCPH=M=(0.49074050.01666710.00925950.8833329)andDPH=(e2−Me2)α=(0.41049350.08209890.08950630.0179013).All these special DMAP processes are characterized by the same total arrival rate and same squared coefficient of variation equal to 0.3 and 2, respectively. However, these processes are qualitatively different in that they have different correlation structures. The arrival process labeled MMBP(2) has correlated arrivals with correlation between two successive inter-arrival times given by ϕMMBP(2)(1) = 0.264063. The second arrival process, namely PH, corresponds to renewal process and so the autocorrelation is 0. In Fig. 3, the difference between loss probabilities of these MMBP(2) and PH models is shown for various values of buffer capacity N. The numerical results indicate that the loss probability of a batch-size-dependent service model with a correlation structure cannot be assumed to be identical with that having independent arrivals, especially when the capacity of the buffer space is not big enough. Additionally, the effect of buffer size on average sojourn time of a customer in the system is examined in Fig. 4. It can be seen from this figure that Wshas higher value in MMBP(2)/G(1, 5, 7)/1/N model as compared to PH/G(1, 5, 7)/1/N model. We also reveal that the mean sojourn time in the PH/G(1, 5, 7)/1/N queue is not significantly affected by the changes of N. From these observations, we can conclude that there are some obvious differences in loss probabilities and mean sojourn times when we consider the correlation in the arrival process to that of the case where the arrivals are assumed to be independent. The autocorrelated arrivals often have a profound impact on system operation and usually cause the worse of system performance. Therefore, it frequently leads to inaccurate predication of performance measures under the assumption of independent arrivals.

@&#CONCLUSIONS@&#
In this paper, we considered a discrete-time batch-size-dependent service model and associated algorithmic aspects for a DMAP/G(1, a, b)/1/N system. Notice that any distribution with finite support on the nonnegative integers can be expressed as a discrete PH distribution, an efficient and simple procedure for the computation of the joint state probabilities at various time epochs is developed. Applying the UL-type RG factorization, the numerical experiments demonstrate that the proposed algorithm well suits for computer realization even for large number of system states. Hence, the method used in this paper seems to be applicable to a much wider range of discrete-time finite-buffer queueing system with more general batch arrival and bulk service mechanisms. Here, we need to point out that using the approach presented in the paper of Banerjee and Gupta (2012), we cannot obtain the joint probabilitiesπN,r′andπN,r−′,r = 1, a, …, b. Thus, some key performance indicators such as the loss probability and the mean sojourn time of a customer are unable to derive. As a further research, it will be more interesting to analyze the actual waiting time distribution of an arbitrary customer in the system and then obtain its moments of higher orders.