@&#MAIN-TITLE@&#
Classification, models and exact algorithms for multi-compartment delivery problems

@&#HIGHLIGHTS@&#
We define and compare four variants of the multi-compartment delivery problem.The problem is solved in a multi-period and in an inventory-routing setting.Several new models are developed and compared.All variants can be solved by a unified branch-and-cut algorithm.Instances involving up to 50 customers are solved optimally.

@&#KEYPHRASES@&#
Multi-compartment delivery,Vehicle-routing,Inventory-routing,Multi-products,Multi-vehicles,

@&#ABSTRACT@&#
The distribution of products using compartmentalized vehicles involves many decisions such as the allocation of products to vehicle compartments, vehicle routing and inventory control. These decisions often span several periods, yielding a difficult optimization problem. In this paper we define and compare four main categories of the Multi-Compartment Delivery Problem (MCDP). We propose two mixed-integer linear programming formulations for each case, as well as specialized models for particular versions of the problem. Known and new valid inequalities are introduced in all models. We then describe a branch-and-cut algorithm applicable to all variants of the MCDP. We have performed extensive computational experiments on single-period and multi-period cases of the problem. The largest instances that could be solved exactly for these two cases contain 50 and 20 customers, respectively.

@&#INTRODUCTION@&#
This paper is concerned with a multi-period routing problem in which several products must be delivered by compartmentalized vehicles to customers equipped with several tanks. No two products can be combined within the same compartment or within the same tank. The most common example arises in the distribution of petroleum products by tanker trucks to underground tanks located in gas stations (Cornillier et al., 2008a; 2008b; 2009; 2012; Popović et al., 2012; Vidović et al., 2014). Such problems are also encountered in the maritime transportation of bulk products by ships whose hull is divided into compartments (Bausch et al., 1998; Fagerholt and Christiansen, 2000a; 2000b; Hvattum et al., 2009), in the collection of garbage and recyclable products (Muyldermans and Pang, 2010), and in livestock transportation (Oppen and Løkketangen, 2008). We depict in Fig. 1a representation of a vehicle with three compartments and a gas station with two fuel pumps with their underground tanks.We analyze and propose a classification scheme for the problem in the general context of inventory-routing where a centralized agent is responsible for the distribution of one or several products over several periods, and for controlling inventory levels at the customer locations. For recent surveys on the inventory-routing problem (IRP), see Andersson et al. (2010) and Coelho et al. (2014). For recent branch-and-cut algorithms applicable to IRPs, see Coelho and Laporte (2013b); 2013a); 2014).In the fuel distribution problem, which is the central application of our problem, vehicles are often not equipped with debit meters (sometimes called flow meters), which implies that whenever a delivery is made, the full content of the compartment must be emptied. In other words, the load of a compartment cannot be split between different tanks. This is the assumption made in the fuel distribution papers of Cornillier et al. (2008a); 2008b); 2009), Cornillier et al. (2012),Popović et al. (2012) and of Vidović et al. (2014). Many fuel distribution companies in North America still do not use debit meters. However, technology to equip vehicles with debit meters is readily available (see for example flo, 2014). From a modeling point of view, this means that the quantity delivered to tanks then becomes a continuous decision variable. The ability to split the content of a compartment between several deliveries yields a first classification of the problem. Likewise, a customer may or may not allow different vehicles to fill the same tank in a given period. If a tank may receive deliveries from different vehicles, it is said to be split. This distinction yields the second class of classification of the problem. We show in Table 1the four cases yielded by this classification. Note that only the bottom-right case of this table is traditionally treated in the literature. The other three cases are new and are modeled and solved for the first time in this paper.Fig. 2depicts a solution for each possible case on a three-customer instance. Fig. 2 a illustrates a solution with unsplit compartments and unsplit tanks, the most restrictive version of the problem. Fig. 2 b shows a case with split compartments and unsplit tanks. Fig. 2 c presents the case in which vehicle compartments are unsplit, but the tanks are split. Finally, Fig. 2 d depicts the most general case in which split compartments and split tanks are allowed. The small example in Fig. 2 e illustrates the case with two vehicles with a single compartment of capacity 5, and three customers with demands 4, 2 and 4 for a single product. It depicts a solution allowing both split compartments and split tanks.Split compartments and split tanks yield an extra layer of difficulty to the problem. Even the single-period version of the problem is much more complicated than the classical vehicle routing problem (Laporte, 2009) because it still contains several products, several compartments and multiple tanks, which significantly increases the number of binary variables in the model. Likewise, the single-product version of the MCDP is also more complicated than the IRP (Coelho et al., 2014) due to the presence of multiple compartments and multiple tanks, as is the case in the split delivery vehicle routing problem (Dror et al., 1994; Archetti et al., 2014).In this paper we develop mathematical programming formulations which are adapted to handle all four combinations of split and unsplit compartments and tanks. We also propose an exact branch-and-cut algorithm applicable to all variants of the problem. It extends the classical vehicle routing formulations (Laporte, 2009) in which a relaxed problem is first solved and subtour elimination constraints are added dynamically as they are found to be violated. Two models are also presented for the cases where the number of customers per vehicle route is limited to two or three.Our main goals are to formally introduce, classify, model and solve four classes of the MCDP to optimality within a unified framework. We review existing methods and introduce new ones. A generic model is first presented and then modified to account for the variants of the basic case. Known and new valid inequalities are introduced in all models. A byproduct of this research is the introduction of a testbed of instances which we have used for our experiments and are made available to the research community. The proposed testbed is designed to cover a large set of combinations regarding the number of customers, products, vehicles, and compartments, as well as the length of the planning horizon, ranging from relatively easy instances to very challenging ones.The remainder of the paper is organized as follows. In Section 2 we provide a formal description of the problem. In Section 3 we propose mixed-integer linear programming formulations covering all variants of the problem. A branch-and-cut algorithm applicable to all cases is described in Section 4. Extensive computational experiments are presented in Section 5, followed by our conclusions in Section 6.We now formally introduce the MCDP. The problem is defined on an undirected graphG=(V,E),whereV={0,…,n}is the vertex set andE={(i,j):i,j∈V,i<j}is the edge set. Vertex 0 represents the supplier and the vertices ofV′=V\{0} represent customers. The supplier distributes a set ofM={1,⋯,M}types of products to the customer compartments. Customers incur unit inventory holding costshimtper period t (i∈V,m∈M). The length of the planning horizon is T. We assume the supplier holds enough inventory to meet all the demand during the planning horizon and that inventories are not allowed to be negative, i.e., backlogging is not allowed. The variablesIimtdefine the inventory level of product m at the end of period t at customeri∈V′. At the beginning of the planning horizon the decision maker knows the current inventory level of all customers (Iim0fori∈V′,m∈M), and has full knowledge of the demanddimtof product m of each customer i for each time period t. There is a setK={1,…,K}of vehicles available. Each vehicle k is made up of a setL={1,⋯,L}of compartments l of capacity Qlk, and tank m of customer i has a capacityCim. Each vehicle can perform one route per time period. A routing cost cijis associated with edge(i,j)∈E.The objective of the MCDP is to minimize the total routing and inventory holding cost while satisfying the demand for every product for each customer. The replenishment plan is subject to the following constraints:•the vehicle compartment capacities cannot be exceeded;the inventory level of each product at each customer can never exceed the maximum capacity of the tanks;the supplier’s vehicles can perform at most one route per time period, each starting and ending at the supplier.A solution to the problem determines which customers to serve in each time period, which vehicles and compartments to use for each product, how much of each product to deliver to each visited customer, and which vehicle routes to use.The best-known application of the MCDP is the distribution of fuel to gas stations (Cornillier et al., 2008a; 2008b; 2009; 2012; Popović et al., 2012; Vidović et al., 2014). We now describe the specifics of three variants of the fuel distribution problem previously studied, with unsplit compartments and unsplit tanks. All are restrictions of the four cases just presented. Because of the different assumptions made in each paper, no set of benchmark instance is available to compare solution methods. Besides, these papers deal with specific variants of the unsplit compartment and unsplit tank case, which limits the applicability of the methods they describe to the most general cases.The first one is the single-period fuel replenishment problem studied by Cornillier et al. (2008a). This problem is concerned with a single period in which only routing costs are incurred, but inventory levels at the stations must be met to satisfy a minimum and maximum demand. A major simplification of this problem is that at most two stations can be visited by any vehicle. This variant was solved by means of a set partitioning algorithm.In Cornillier et al. (2008b) the problem is extended to span over several periods. The objective is to maximize the total revenue for delivered fuel, minus routing and working hours costs. The authors apply their developed algorithm for a single period in order to create routes for each period, later combining them in a heuristic fashion.Popović et al. (2012) have developed a model for the fuel distribution problem in which both routing and inventory costs are incurred. In this variant, each vehicle is able to visit up to three stations. In turn, customers do not allow the visit of more than one vehicle per period, which leads to a more restrictive problem than the unsplit tank case.We first propose a mixed-integer linear programming model for the most general case of the MCDP, i.e., the version with split compartments and split tanks. We then present small modifications needed to account for the remaining three different combinations of these criteria. We also present two variants applicable to cases where the number of customers per vehicle route is limited.The model works with routing variablesxijkt,(i,j)∈E,equal to the number of times edge (i, j) is used on the route of vehicle k in period t. It also uses binary variablesyiktequal to one if and only if node i is visited by vehicle k in period t, wmlktequal to one if and only if product m is loaded in compartment l of vehicle k in period t, andzimlktequal to one if and only if customer i receives a delivery of product m from compartment l of vehicle k in period t. We denote byqimlktthe quantity of product m delivered to customer i using compartment l of vehicle k in period t. As previously stated, letIimtdenote the inventory level of product m at vertexi∈Vat the end of periodt∈T.In this section we provide two models for the MCDP with split compartments and split tanks. The model presented in Section 3.1.1 makes an explicit assignment of products to compartments, whereas the model presented in Section 3.1.2 implicitly makes this assignment.We first present a formulation for the most general version of the problem:(1)minimize∑i∈V′∑m∈M∑t∈ThimtIimt+∑(i,j)∈E∑k∈K∑t∈Tcijxijkt,subject to(2)Iimt=Iim,t−1+∑l∈L∑k∈Kqimlkt−dimti∈V′m∈Mt∈T(3)0≤Iimt≤Cimi∈V′m∈Mt∈T(4)∑l∈L∑k∈Kqimlkt≤Cim−Iim,t−1i∈V′m∈Mt∈T(5)∑l∈Lqimlkt≤Cimyikti∈V′m∈Mk∈Kt∈T(6)qimlkt≤Qlkzimlkti∈V′m∈Ml∈Lk∈Kt∈T(7)∑i∈V′qimlkt≤Qlkm∈Ml∈Lk∈Kt∈T(8)zimlkt≤yikti∈V′m∈Ml∈Lk∈Kt∈T(9)zimlkt≤wmlkti∈V′m∈Ml∈Lk∈Kt∈T(10)∑m∈Mwmlkt≤1l∈Lk∈Kt∈T(11)∑j∈V,i<jxijkt+∑j∈V,j<ixjikt=2yikti∈Vk∈Kt∈T(12)∑i∈Z∑j∈Z,i<jxijkt≤∑i∈Zyikt−ynktZ⊆V′n∈Zk∈Kt∈T(13)qimlkt≥0i∈V′m∈Ml∈Lk∈Kt∈T(14)xi0kt∈{0,1,2}i∈V′k∈Kt∈T(15)xijkt,wmlkt,zjmlkt∈{0,1}i∈Vj∈V′,i<jm∈Ml∈Lk∈Kt∈T(16)yikt∈{0,1}i∈Vk∈Kt∈T.The objective function (1) minimizes the total inventory and routing costs. Constraints (2) define the inventory at the customers, while constraints (3) and (4) ensure that the inventory level of product m at customer i is non-negative and does not exceed the maximum capacityCim. Constraints (5) allow deliveries to tank m of customer i only if a vehicle visits it. Likewise, constraints (6) allow deliveries of product m to customer i using compartment l of vehicle k only if the compartment is assigned to that customer. Constraints (7) ensure the vehicle compartment capacities are respected, while constraints (8) and (9) link variablesyikt,wmlktandzimlkt. Specifically they allow deliveries from any compartments only if the vehicle visits the customer. Constraints (10) limit the use of each compartment to a single type of product. Constraints (11) and (12) are degree constraints and subtour elimination constraints, respectively. Constraints (13)–(16) enforce integrality and non-negativity conditions on the variables.We propose five classes of inequalities to strengthen the formulation just presented.1.Logical inequalitiesFischetti et al. (1998) and Gendreau et al. (1998) have proposed the following logical cuts in order to link routing variables x with visiting variables y in a stronger fashion:(17)xi0kt≤2yikti∈Vk∈Kt∈T(18)xijkt≤yikti,j∈Vk∈Kt∈T(19)yikt≤y0kti∈V′k∈Kt∈T.Constraints (17) and (18) are referred to as logical inequalities. They enforce the condition that if the supplier is the successor of a customer on the route of vehicle k in period t, i.e.,xi0kt=1or 2, then i must be visited by vehicle k, i.e.,yikt=1. A similar reasoning applies to customer j in inequalities (18). Constraints (19) include the supplier in the route of vehicle k if any customer is visited by that vehicle in that period.Extended logical inequalitiesWe propose the following sets of constraints, which we call extended logical inequalities because they further enforce logical relationships between integer variables of the problem:(20)∑m∈M∑l∈Lzimlkt≥yikti∈V′k∈Kt∈T(21)∑m∈M∑l∈Lwmlkt≥yikti∈V′k∈Kt∈T(22)yikt≥zimlkti∈V′m∈Ml∈Lk∈Kt∈T(23)wmlkt≥zimlkti∈V′m∈Ml∈Lk∈Kt∈T(24)∑i∈V′∑m∈M∑l∈Lzimlkt≥∑i∈V′x0iktk∈Kt∈T(25)∑m∈M∑l∈Lwmlkt≥∑i∈V′x0iktk∈Kt∈T.Inequalities (20) ensure that if a vehicle k is assigned to a customer i in period t, i.e.,yikt=1,then a product from some compartment of vehicle k must be delivered to customer i. Inequalities (21) apply a similar reasoning to the assignment of a product to a compartment. Inequalities (22) and (23) tighten the relationships between customers, products and compartments. Specifically, if a customer is set to receive the delivery of a product from a given compartment, i.e.,zimlkt=1,then vehicle k must be assigned to customer i in period t (i.e.,yikt=1in inequality (22)) and product m must be assigned to compartment l in vehicle k in period t (i.e., wmlkt= 1 in inequality (23)). Finally, inequalities (24) and (25) enforce the delivery of a product to a customer and the assignment of a product to a compartment whenever a delivery route exists in period t using vehicle k.Outgoing degree inequalities at the depotWe adapt the outgoing degree of the depot constraints of the split delivery VRP (Dror et al., 1994) to the MCDP:(26)∑i∈V′x0ikt≥∑i∈V′qimlkt/Qlkm∈Ml∈Lk∈Kt∈T.Symmetry breaking inequalitiesWe also tighten the formulation by imposing the following vehicle symmetry breaking constraints valid for the case where the vehicle fleet is homogeneous:(27)y0kt≤y0k−1,tk∈K∖{1}t∈T(28)yikt≤∑j<iyjk−1,ti∈V′k∈K∖{1}t∈T.Constraints (27) ensure that vehicle k cannot leave the depot if vehicle k − 1 is not used. This symmetry breaking rule is then extended to the customer vertices through constraints (28) which state that if customer i is assigned to vehicle k in period t, then vehicle k − 1 must serve a customer with an index lower than i in the same period. These constraints are inspired from those proposed by Fischetti et al. (1995) for the capacitated VRP and by Albareda-Sambola et al. (2011) for a plant location problem. They have also been used in an IRP setting by Coelho and Laporte (2013b); 2013a); 2014).Finally, we also propose breaking the symmetries induced by vehicle compartments and product allocations with the following constraints which are valid if the vehicle fleet and compartments are homogeneous:(29)zjhlkt≤∑i∈V′∑m∈Mzim,l−1,ktj∈V′h∈Ml∈L∖{1}k∈Kt∈T(30)whlkt≤∑m∈Mwm,l−1,kth∈Ml∈L∖{1}k∈Kt∈T(31)zihlkt≤∑j∈V′,j≤i∑m∈Mzjm,l−1,ktj∈V′h∈Ml∈L∖{1}k∈Kt∈T(32)zihlkt≤∑h′≤hzih′,l−1,kt+1−∑m∈Mzim,l−1,kti∈V′h∈Ml∈L∖{1}k∈Kt∈T.Constraints (29) and (30) allow deliveries using compartment l only if compartment l − 1 is already used. Constraints (31) ensure that lower-index compartments are assigned to lower-index customers. They are similar to constraints (27) and (28). Constraints (32) break symmetry in terms of product allocation to compartments to the same customer, ensuring that lower-index products are assigned to lower-index compartments for the same customer.Demand-based inequalitiesWe adapt to the MCDP additional cuts derived from the instance data. These were first proposed by Coelho and Laporte (2014) for the IRP. If the total demand of customer i from period t1 to period t2 is at least equal to the maximum possible inventory held, then a lower bound on the number of visits to this customer in the interval [t1, t2] is obtained by dividing the quantity needed to satisfy future demands by the customer inventory capacity, and rounding up, which yields constraints (33):(33)∑k∈K∑t=t1t2yikt≥⌈∑t=t1t2dimt−CimCim⌉i∈V′m∈Mt1,t2∈T,t2≥t1.Since these constraints are non-linear, one can use the weaker form (34):(34)∑k∈K∑t=t1t2yikt≥∑t=t1t2dimt−Iimt1Cimi∈V′m∈Mt1,t2∈T,t2≥t1.A different version of the same inequalities can be written as follows. It is related to whether the inventory held at each period is sufficient to fulfill future demands. In particular, if the inventory held in period t1 by customer i is sufficient to fulfill its demand for periods [t1, t2], then no visit is needed for this customer, i.e., ifIimt1≥∑t=t1t2dimt,then∑k∈K∑t=t1t2yikt≥0. On the other hand, if the inventory is not sufficient to fulfill future demands, then at least one visit must take place in the interval [t1, t2]. This can be enforced through the following set of valid inequalities:(35)∑k∈K∑t=t1t2yikt≥∑t=t1t2dimt−Iimt1∑t=t1t2dimti∈V′m∈Mt1,t2∈T,t2≥t1.When the vehicle compartments are homogeneous within the same vehicle, the assignment of product types to compartments becomes irrelevant, and a more compact model can be derived. This model ignores this assignment, while ensuring that the total vehicle capacity is respected.This formulation contains no assignment variables wmlkt. Binary variableszimlktare redefined aszimktand are equal to one if and only if product m is delivered to customer i in the route of vehicle k in period t. The continuous quantity variablesqimlktare changed toqimktand represent the quantity of product m delivered to customer i using vehicle k in period t. Moreover, we redefine the parameter Qkas the capacity of each compartment of vehicle k. This formulation uses upper boundsq¯mkton the sum of theqimktvariables, and integer variables vmktequal to the number of compartments needed to perform deliveryq¯mkt. Letting Skbe the number of compartments in vehicle k, the implicit model can then be formulated as follows:(36)minimize∑i∈V′∑m∈M∑t∈ThimtIimt+∑(i,j)∈E∑k∈K∑t∈Tcijxijkt,subject to(37)Iimt=Iim,t−1+∑k∈Kqimkt−dimtm∈Mi∈V′t∈T(38)0≤Iimt≤Cimi∈V′m∈Mt∈T(39)qimkt≤zimktSkQki∈V′m∈Mk∈Kt∈T(40)∑i∈V′qimkt≤q¯mktm∈Mk∈Kt∈T(41)∑m∈Mq¯mkt≤SkQkk∈Kt∈T(42)q¯mkt=vmktQkm∈Mk∈Kt∈T(43)zimkt≤yikti∈V′m∈Mk∈Kt∈T(44)∑j∈V,i<jxijkt+∑j∈V,j<ixjikt=2yikti∈Vk∈Kt∈T(45)∑i∈Z∑j∈Z,i<jxijkt≤∑i∈Zyikt−ynktZ⊆V′n∈Zk∈Kt∈T(46)qimkt≥0i∈V′m∈Mk∈Kt∈T(47)xi0kt∈{0,1,2}i∈V′k∈Kt∈T(48)xijkt,yikt,zjmkt∈{0,1}i∈Vj∈V′,i<jm∈Mk∈Kt∈T.The objective function (36) minimizes the total inventory and routing costs. Constraints (37) define the inventory at the customers, while constraints (38) ensure that the inventory level of product m at customer i is non-negative and does not exceed the maximum capacityCim. Constraints (39) allow deliveries only to those customers assigned to receive such deliveries. Constraints (40)–(42) mean that for each product m, vehicle k and period t, an integer number of compartments is used to perform the deliveries, while respecting the size of the compartments and the total number of compartments available in the vehicle. Constraints (43) link the visiting variables y with the delivery assignment variables z. Constraints (44) and (45) are degree constraints and subtour elimination constraints, respectively, while constraints (46)–(48) enforce integrality and non-negativity conditions on the variables.Inequalities (17)–(19), (27) and (28) still hold for the implicit formulation. In addition, by making the appropriate changes in the variable definitions, inequalities (20), (22) and (24) also remain valid.Because of the way that new variableszimktare defined, it is possible to derive a new class of valid inequalities for the MCDP, called the double split deliveries inequalities, described by (49). These valid inequalities avoid splitting the delivery of the same product type over two customers using the same two vehicles (see Fig. 3). They help break symmetry when both customers have to be visited by the two vehicles to deliver different products, and they avoid splitting the deliveries of the same products. It is possible to avoid double split deliveries, as illustrated in Fig. 3 following a similar reasoning of the k-split cycles proposed by Dror and Trudeau (1990) and Dror et al. (1994),(49)zimkt+zjmkt+zimk′t+zjmk′t≤2i,j∈V′,i≠jm∈Mk,k′∈K,k≠k′t∈T.In the MCDP with split compartments and unsplit tanks, compartments are equipped with debit meters so they can deliver less than full compartment loads. However, tanks cannot receive two visits in the same period. In this section we develop two models for this version of the problem. The explicit compartment assignment for the MCDP with split compartments and unsplit tanks is presented in Section 3.2.1 and the implicit version of this model in Section 3.2.2.In order to prevent tanks from receiving visits from more than one vehicle per period, we need a new binary variableuimktequal to one if and only if customer i receives product m from vehicle k in period t, regardless of the compartment. The following sets of constraints must then be added to the model presented in Section 3.1:(50)∑k∈Kuimkt≤1i∈V′m∈Mt∈T(51)zimlkt≤uimkti∈V′m∈Ml∈Lk∈Kt∈T(52)uimkt≤yikti∈V′m∈Mk∈Kt∈T(53)uimkt∈{0,1}i∈V′m∈Mk∈Kt∈T.Constraints (50) limit the number of vehicles delivering to tank m of customer i in period t, while constraints (51) and (52) link the new variables to the existing ones. Constraints (53) ensure the binary conditions on the new variables.All valid inequalities (17)–(32) still hold for this version of the problem. In addition, the following inequalities are valid for the MCDP with split compartments and unsplit tanks:(54)∑k∈Kyikt≤Mi∈V′t∈T.Constraints (54) limit the number of maximum visits to customer i in period t to the maximum number M of existing tanks in each customer.The implicit formulation presented in Section 3.1.2 uses variablezimktindicating whether product m is delivered to customer i by vehicle k in period t or not. Simply adding the following constraints to it allows for the resolution of this variant of the problem:(55)∑k∈Kzimkt≤1i∈V′m∈Mt∈T.The interpretation of constraints (55) is obviously the same as that of constraints (50).In the MCDP with unsplit compartments and split tanks, compartments are not equipped with debit meters so that full compartment loads must be delivered to each visited tank. However, tanks are allowed to receive the visit of more than one vehicle per period. The explicit compartment assignment model for the case with unsplit compartments and split tanks is presented in Section 3.3.1, while the implicit assignment model is developed in Section 3.3.2.In order to prevent the loads of compartments from being split, we add the following constraints to the formulation presented in Section 3.1:(56)qimlkt≥Qlkzimlkti∈V′m∈Ml∈Lk∈Kt∈T.Together with constraints (6), constraints (56) ensure that if a compartment is assigned to a tank, the full load of the compartment is delivered.All valid inequalities (17)–(32) still hold for this version of the problem. In addition, the following inequalities are valid for the MCDP with unsplit compartments and split tanks:(57)∑i∈V′yikt≤Lk∈Kt∈T(58)∑i∈V′∑m∈Mzimlkt≤1l∈Lk∈Kt∈T.Constraints (57) limit the number of maximum visits performed by vehicle k in period t to the number L of existing compartments in each vehicle. Constraints (58) ensure that each compartment is assigned to at most one customer and one type of product for each vehicle and each period.In order to adapt the implicit model presented in Section 3.1 to the MCDP with unsplit compartments and split tanks, one needs to control the specific amounts of product delivered to each customer by each vehicle. To this end, we define a new integer variablevimktequal to the number of compartments used to deliver product m to customer i. Then, the following constraints must be imposed:(59)qimkt=vimktQki∈V′m∈Mk∈Kt∈T.Constraints (59), which are similar to (42), apply to each customer and ensure that full compartment loads are delivered.In this most restrictive version of the MCDP, no splitting is allowed. Thus, one must ensure that the full content of a compartment is delivered to a tank and that tanks only receive the visit of at most one vehicle per time period. The explicit compartment assignment model is presented in Section 3.4.1, and the implicit assignment model in Section 3.4.2. Variants of this version of the problem are presented in Section 3.4.3.Constraints (50)–(53) and (56) must be added to the model described in Section 3.1 in order to account for these changes. All valid inequalities (17)–(32), (54), (57) and (58) are still valid for this version of the problem.The implicit model presented in Section 3.1.2 must be considered with constraints (55) and (59) in order to formulate this version of the problem.When the number of stations visited by a vehicle is very small (two or three) and no split decisions need to be made, as in Cornillier et al. (2008a) and Popović et al. (2012), one can easily enumerate all possible routing combinations and avoid using the relatedxijktvariables and constraints. Using this approach, these researchers have obtained excellent results on the unsplit–unsplit case of the fuel distribution problem. We extend their formulation to the remaining three cases of the MCDP. To this end, we now introduce two variants of the routing decisions exploiting the reduced number of stations per route. Note that this new approach is not efficient if more than three stations are allowed to be visited per route.For the special case in which the number of stations per route is restricted to be at most two, one can simplify the search by enumerating all possible combinations of stations consisting of one or two stations. To this end, we introduce a new binary variableRijktequal to one if and only if stationsi∈Vandj∈V′,j>iare visited by vehicle k in period t. If the route consists of only one station, then i = 0 and j represents the station. If two stations are visited, they are ordered in such a way that i < j, thus avoiding symmetry in this new variable. The costc^ijof visiting stations i and j, or visiting only station j can be precomputed as(60)c^ij={2c0jifi=0,c0i+cij+c0jotherwise.The objective functions of the previous models have to be changed to reflect this new variable. The term(61)∑(i,j)∈E∑k∈K∑t∈Tcijxijktmust be replaced with(62)∑i∈V∑j∈V′,j>i∑k∈K∑t∈Tc^ijRijkt.Finally, two sets of constraints must be added to the models, replacing the routing variables:(63)∑i∈V∑j∈V′,j>iRijkt≤1k∈Kt∈T(64)∑i<mRimkt+∑j>mRmjkt=ymktm∈V′k∈Kt∈T.Constraints (63) ensure that only one combination of customers is assigned to any given vehicle and period, effectively allowing only one route per vehicle per period. Constraints (64) link the new variable to the existing variables of the model. Specifically, they set variableymktto one if station m is selected to be visited by vehicle k in period t.When the number of stations per route is limited to three, we introduce a new binary variableRijlktequal to one if and only if stationsi∈V,j∈V,j>i∪{0}andl∈V′,l>jare visited by vehicle k in period t. Note that if only one station is visited in a given route, it is represented by the last index l, while i and j are equal to zero. If two stations are visited, then they are represented by j and l, where i is equal to 0. Moreover, the definition of the variable ensures that l > j. Finally, if three stations are visited, they are represented in increasing order of their labels. This is done in order to avoid symmetry in the representation of the routes.The costc^ijlof visiting all combinations of one, two or three stations per route can be easily precomputed as follows:(65)c^ijl={2c0lifi=j=0,c0j+cjl+c0lifi=0,min{c0i+cij+cjl+c0lc0j+cji+cil+c0lc0i+cil+clj+c0jotherwise.As in the previous case, the objective functions of the previous models can be modified by replacing the term (61) with(66)∑i∈V∑j∈V,j>i∪{0}∑l∈V′,l>j∑k∈K∑t∈Tc^ijlRijlkt.Then two sets of constraints must be added to the models, replacing all routing constraints:(67)∑i∈V∑j∈V,j>i∪{0}∑l∈V′,l>jRijlkt≤1k∈Kt∈T(68)∑i<m∑l>mRimlkt+∑i<j∪{0}∑j<mRijmkt=ymktm∈V′k∈Kt∈T.Constraints (67) and (68) have the same interpretation as (63) and (64), respectively.The MCDP isNP-hard since it contains the IRP and thus the capacitated VRP as special cases. If the instance size is small or if the number of customers per route is limited as described in Sections 3.4.3.1 and 3.4.3.2, one can take advantage of the small number of subtour elimination constraints needed in the models and generate all of them, which are added to the root node of the branch-and-bound tree. An alternative is to precompute routing decisions as explained in these two sections, which yields a problem without any routing variable. Again, the problem is solved by branch-and-bound.If the instance size is not excessive, all proposed undirected formulations can be solved exactly by branch-and-cut as follows. At a generic node of the search tree, a linear program with relaxed subtour elimination constraints is solved, a search for violated constraints is performed, and some of these are added to the current program which is then reoptimized. This process is reiterated until a feasible or dominated solution has been reached, or until no more cuts can be added. At this point branching on a fractional variable occurs. In Algorithm 1we provide a sketch of the branch-and-cut scheme for the most general version of the problem.We now describe the computational experiments we have executed to evaluate our algorithms. All computations were carried out on a grid of Intel Xeon™ processors running at 2.66 gigahertz with up to 24 gigabytes of RAM installed per node, with the Scientific Linux 6.1 operating system with a single thread used. The algorithms were coded in C++ and we use IBM Concert Technology and CPLEX 12.5 as the MIP solver. The instance generation is described in Sections 5.1 and 5.2, while detailed computational results are provided in Section 5.3.Since no existing study deals with all the cases we have considered, we have created our own set of randomly generated instances which can cover all four categories of problems described in the previous sections. Our testbed is made up of instances containing up to 50 customers, three products, five compartments, 18 vehicles, and spanning five periods. We have generated five instances of each size. In Section 5.3 we provide averages over these five instances per combination. All instances as well as detailed results are published in the website http://www.leandro-coelho.com/instances.Not all instances are feasible, which means that before including an instance in the testbed, we must first ensure that it is feasible; otherwise, it is discarded. In order to guarantee the feasibility of an instance of the MCDP, it suffices to prove it is feasible for the case with unsplit compartments and unsplit tanks. Since the other three cases are relaxations of this one, if an instance is feasible for the unsplit–unsplit case, it will be feasible for all other three cases. In order to prove feasibility, an NP-hard problem must be solved, since the feasibility problem can be reduced to a multi-commodity circulation problem, which is known to be NP-complete for integer flows (Even et al., 1976).To illustrate, consider the case of two products, one customer, one period, and one vehicle with two homogeneous compartments. The routing costs can be precomputed since they correspond to that of a single round trip from the supplier to the customer. Consider also that inventory costs are equal to zero. The problem is then that of satisfying the demand of a single node for two commodities, with a single source. Without loss of generality, consider that the supplier is composed of two nodes in the same location, each acting as a source of each commodity. Likewise, the customer can be represented as two nodes in the same position, each representing the demand points of each commodity. Compartments capacities limit the flow on each arc linking sources to demands. The problem just described is the multi-commodity circulation problem. Finding a feasible solution to this problem means that a feasible solution exists to the MCDP.In order to obtain a circulation problem from the MCDP to prove its feasibility, it suffices to remove from its formulation all routing variablesxijktand all constraints containing them. Constraints (69)–(80) define the feasibility problem:(69)Iimt=Iim,t−1+∑l∈L∑k∈Kqimlkt−dimti∈V′m∈Mt∈T(70)0≤Iimt≤Cimi∈V′m∈Mt∈T(71)∑l∈L∑k∈Kqimlkt≤Cim−Iim,t−1i∈V′m∈Mt∈T(72)∑l∈Lqimlkt≤Cimyikti∈V′m∈Mk∈Kt∈T(73)qimlkt≤Qlkzimlkti∈V′m∈Ml∈Lk∈Kt∈T(74)∑i∈V′qimlkt≤Qlkm∈Ml∈Lk∈Kt∈T(75)zmlkt≤yikti∈V′m∈Ml∈Lk∈Kt∈T(76)zimlkt≤wmlkti∈V′m∈Ml∈Lk∈Kt∈T(77)∑m∈Mwmlkt≤1l∈Lk∈Kt∈T(78)qimlkt≥0i∈V′m∈Ml∈Lk∈Kt∈T(79)wmlkt,zimlkt∈{0,1}i∈V′m∈Ml∈Lk∈Kt∈T(80)yikt∈{0,1}i∈Vk∈Kt∈T.The interpretation of these constraints is the same as in Section 3.1.1. Note that what remains here are assignment variables, constraints that impose integrality on the deliveries quantities in terms of number of compartments, and bounds on the flows, i.e., minimum and maximum inventory levels at the customers, and maximum capacity of each compartment.We now present computational results for the instances just described. We start by studying the performance of the two models proposed for each variant of the problem. To this end, we have run a subset of the instances with a limit on the running time of 1800 seconds. Table 2shows the percentage of instances for which the implicit compartment assignment model is superior to the explicit compartment assignment model. Table 3shows that after the 1800 seconds the implicit models usually yield smaller percentage gaps between the upper and lower bounds.With these results we can now put the relative performance of each of the models into perspective, and we can proceed to obtain solutions for larger and more challenging instances. To this end, we have evaluated the implicit compartment assignment models with a two-hour time limit. We have also applied the findings of Coelho and Laporte (2014) to order the input data with respect to the demand of the customers, in such a way that customers are relabeled consecutively in non-increasing order of their demand. Input ordering was first proposed by Jans and Desrosiers (2010); 2013) and was shown to improve the lower bound of the problem. Labeling the customers according to their demand has proved to be the most successful choice among those implemented and tested by Coelho and Laporte (2014).We start this detailed analysis with instances containing a single product, in order to evaluate the effect of having several compartments on the performance of the algorithm. As in Cornillier et al. (2008a), single period instances were used. The results for all four categories of the problem are summarized in Table 4. Several instances with up to 50 customers were solved to optimality. Even some of the largest instances considered, which contain up to 50 customers, four compartments, and 14 vehicles were solved to optimality. Likewise, instances with up to 50 customers, three compartments and 18 vehicles were also solved for some variants of the problem to optimality in relatively small running times. One can observe that the problem becomes more difficult when it is more constrained, to the point where our algorithm could not find any feasible solution within 2 hours of computing time for some instances of the unsplit–unsplit case. This is also reflected by the size of the gaps and by the increased running time towards the right of the table.We have then considered instances defined over several periods. Average results over all four variants of the problem are presented in Table 5. These instances are considerably more difficult to solve than their single-period counterpart, as reflected by the gaps and running times. The algorithm often could not identify any feasible solution for instances with more than 20 customers. For the 20 instances contained in Table 5, we observe that, as is the case for the results of Table 4, the solutions of the first two variants of the problem are quite similar, and so are those of the last two. Moreover, for each pair, the more restrictive case seems to be easier to solve, which is reflected by smaller average gaps and running times. These similar results are, however, an effect of the structure of the problem obtained by imposing unsplit compartments rather than a consequence of the model.Finally, we have solved the most general instances containing several products, periods, vehicles and compartments. These instances contain up to 20 customers, three products, five compartments, eight vehicles, and five periods. As expected, the size of the instances for which optimal solution can be obtained decreases, as is shown in Table 6.A transversal analysis over the last three tables allows us to derive some comments on the relative difficulty of each variant of the problem. We observe that the average increase on the solution cost (or on the upper bound when optimality is not achieved) of each variant of the problem with respect to the most general scenario, i.e., the split–split case, is quite stable. The split–unsplit case often yields solutions that are marginally more expensive than the split–split variant, while solving either the unsplit–split or the unsplit–unsplit case approximately doubles the cost. Moreover, moving from the unsplit–split to the unsplit–unsplit variant yields no significant difference in costs over the instances we have tested. This can be seen in Fig. 4. Finally, note that minimizing inventory is one of objectives of our models. Thus, whenever possible, the delivery quantities will be just enough to satisfy the demand, as in other IRP variants (those optimized under a maximum-level inventory strategy), and lot-sizing problems. This holds, for example, when vehicle compartments can be split. The same does not hold for unsplit compartments.

@&#CONCLUSIONS@&#
