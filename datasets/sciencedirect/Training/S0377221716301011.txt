@&#MAIN-TITLE@&#
Lagrangean relaxation of the hull-reformulation of linear generalized disjunctive programs and its use in disjunctive branch and bound

@&#HIGHLIGHTS@&#
A Lagrangean relaxation of the hull-reformulation of linear GDPs is presented.The proposed Lagrangean relaxation always yields 0–1 values to the binary variables.The proposed Lagrangean relaxation can be solved by solving many small LPs in parallel.The Lagrangean relaxation is incorporated into a disjunctive branch and bound as primal heuristic.Computational results show that the proposed modified disjunctive branch and bound performs better than other alternatives of the algorithm.

@&#KEYPHRASES@&#
MILP,Disjunctive programming,GDP,Lagrangean relaxation,

@&#ABSTRACT@&#
In this work, we present a Lagrangean relaxation of the hull-reformulation of discrete-continuous optimization problems formulated as linear generalized disjunctive programs (GDP). The proposed Lagrangean relaxation has three important properties. The first property is that it can be applied to any linear GDP. The second property is that the solution to its continuous relaxation always yields 0–1 values for the binary variables of the hull-reformulation. Finally, it is simpler to solve than the continuous relaxation of the hull-reformulation. The proposed Lagrangean relaxation can be used in different GDP solution methods. In this work, we explore its use as primal heuristic to find feasible solutions in a disjunctive branch and bound algorithm. The modified disjunctive branch and bound is tested with several instances with up to 300 variables. The results show that the proposed disjunctive branch and bound performs faster than other versions of the algorithm that do not include this primal heuristic.

@&#INTRODUCTION@&#
Lagrangean relaxation (or Lagrangean decomposition) of an optimization program is a widely-used and powerful tool to solve problems. The review work by Guignard (2003) discusses how Lagrangean relaxation can be used in different solution methods and applications. Fisher (2004) provides a theoretical background for Lagrangean relaxation of mixed-integer linear programs (MILP). The general idea in the Lagrangean relaxation is to “dualize” some of the constraints in the optimization problem (i.e. remove some constraints from the feasible region of the problem, and penalize the violation of such constraints in the objective function). This approach is particularly useful in problems with complicating constraints. Some of these problems appear in planning (Rong, Lahdelma, & Luh, 2008), scheduling (Terrazas-Moreno, Trotter, & Grossmann, 2011), facility location (Cornuejols, Fisher, & Nemhauser, 1977), and stochastic programming problems (Carøe & Schultz, 1999). In these type of problems, a Lagrangean relaxation is simpler to solve than the original problems.A particular method that uses Lagrangean relaxation to solve MILPs is the Lagrangean relaxation based branch and bound (Geoffrion, 1974). This method follows the same general idea as the LP based branch and bound, but it solves the Lagrangean relaxation at every node instead of the LP relaxation. This method can be useful in problems in which, by dualizing the complicating constraints, the Lagrangean relaxation is simpler to solve than the LP relaxation. One of the main difficulties in automating this strategy, or any other method that uses Lagrangean relaxation, is identifying the complicating constraints, which can be non-trivial and problem specific. Typically, the modeler needs to identify the problem structure and select the constraints to dualize, or needs to modify the model to allow such a structure (Guignard, 2003).Linear discrete–continuous optimization problems are typically formulated as MILPs. An alternative framework for modeling these problems is generalized disjunctive programming (GDP) (Raman & Grossmann, 1994). GDP models are used to represent discrete–continuous problems through the use of disjunctions, algebraic equations, and Boolean and continuous variables. Linear GDP problems can be reformulated as mixed-integer linear programs (MILP) and solved with existing MILP solvers. The GDP-to-MILP reformulations are the Big-M (BM) (Wolsey & Nemhauser, 2014), multiple-parameter Big-M (MBM) (Trespalacios & Grossmann, 2015) and Hull reformulation (HR) (Beaumont, 1990; Lee & Grossmann, 2000). The HR reformulations is at least as tight, and typically tighter, than the other two. The downside of the HR is that it yields a larger MILP formulation. Alternatively to the MILP reformulation, GDP problems can be solved with specialized algorithms. In the case of linear GDP problems, the disjunctive branch and bound is a powerful solution method (Beaumont, 1990; Lee & Grossmann, 2000).In this work we first present a Lagrangean relaxation of the HR for linear GDPs. The proposed Lagrangean relaxation is an MILP, and it has three important characteristics. The first one is that the solution to the continuous relaxation of the proposed Lagrangean relaxation always yields 0–1 values for the binary variables of the HR. The second one is that it is easier to solve than the original problem (i.e. the HR). Furthermore, it is easier to solve than the continuous relaxation of the HR. The third one is that this relaxation can be applied to any linear GDP. This means that there is no need to specify which are the complicating constraints in different problems, so automating a method that uses this Lagrangean relaxation can be achieved.While there are different methods that can make use of the proposed Lagrangean relaxation, in this work we use it to improve the performance of the disjunctive branch and bound algorithm. In particular, we use it as a primal heuristic in the disjunctive branch and bound. A primal heuristic is a method whose purpose is to find good quality feasible solutions quickly (but does not guarantee that such solution is optimal). In the modified disjunctive branch and bound, we evaluate the Lagrangean relaxation at every node and use its solution as primal heuristic for finding feasible solutions to the problem. The continuous relaxation of the Lagrangean relaxation always provides 0–1 values to the binary variables, so the value of the 0–1 variables is fixed and a small LP is solved in search of feasible solutions. The limitation of the proposed Lagrangean relaxation it that the value of its objective function is not better than the value of the objective function in the LP relaxation.This paper is organized as follows. Section 2 presents a brief background on Lagrangean relaxation of MILPs, generalized disjunctive programming, and the disjunctive branch and bound. Section 3 presents the proposed Lagrangean relaxation of the HR. This section presents the formulation and main properties. The proposed Lagrangean relaxation is then incorporated into a disjunctive branch and bound, which is presented in Section 4. Section 5 demonstrates the performance of the proposed disjunctive branch and bound in an illustrative example. The performance of the disjunctive branch and bound with the Lagrangean relaxation is evaluated against other versions of the disjunctive branch and bound with several instances with up to 300 variables. The results of these instances are presented in Section 6. Finally the conclusions of the paper are presented in Section 7.

@&#CONCLUSIONS@&#
In this work, we have presented a Lagrangean relaxation of the hull-reformulation of linear GDP problems. This Lagrangean relaxation can be applied to any linear GDP. We proved two important properties of this relaxation. The first one is that any vertex of the continuous relaxation of the Lagrangean relaxation yields 0–1 values for the binary variables of the hull reformulation. The second one is that it can be solved with several small LPs (potentially in parallel). This relaxation was incorporated into a disjunctive branch and bound as a primal heuristic, and the proposed algorithm was tested with 300 instances on 3 problems: unstructured GDPs, strip packing and contracts.For every problem, the number of nodes required by the proposed algorithm is smaller than the number of nodes required by the HR, BM, and “random heuristic” disjunctive branch and bound. Furthermore, the number of nodes to find a feasible and optimal solution to problems is drastically improved when using the Lagrangean relaxation as primal heuristic. Over all the instances, the solution time performance of the proposed algorithm is faster than alternative disjunctive branch and bound methods. Over all the instances, the BM, HR, ALG, and RAN solve 253, 266, 296, and 269, respectively.In terms of solution time, the proposed algorithm and the heuristic one are the best for the unstructured GDP instances. Their solution time performance curve is better and they solve considerably more instances than the rest within the time limit (98 percent for the proposed and heuristic algorithms vs. 81 percent for the BM, and 72 percent HR). For the two examples of structured GDPs, the performance of the solution time is different for each of the problems. For the strip packing problem, the HR disjunctive branch and bound performs the best, while the proposed algorithm performs third. For the contracts problem, the proposed algorithm performs the best, solving 98 percent of the instances (while the BM, HR, and RAN solve 72 percent, 94 percent, and 71 percent).Note that instead of using the proposed Lagrangean decomposition approach in Algorithm 2, it is also possible to solve the continuous relaxation of (HR) by Column Generation (CG), where the pricing problems are defined as the sub-problems of the Lagrangean relaxation.The proposed Lagrangean relaxation can be extended to nonlinear convex GDP problems. Future work will address these problems through the Lagrangean relaxation described in this paper, as well as improvements in the implementation.