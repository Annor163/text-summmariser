@&#MAIN-TITLE@&#
Two-stage approach for reliable dynamic Web service composition

@&#HIGHLIGHTS@&#
This paper proposes a two-stage method for reliable dynamic Web service composition and improves the reliability of dynamic Web service composition.In the first stage, the scale of candidate services is reduced and the service composition problem is transformed to local service selection problem.In the second stage, QoS of candidate services are predicted and used to select the optimal services for tasks in the service composition workflow.Culture Genetic Algorithm (CGA) is proposed to reduce candidate services and decompose the global QoS constraints into local QoS constraints.It proposes a Web service QoS dynamic prediction method based on improvedÂ case-based reasoning (CBR).

@&#KEYPHRASES@&#
Web service,Web service composition,Quality of service,QoS prediction,

@&#ABSTRACT@&#
Web service composition is a key technology for creating value-added services by integrating available services. With the rapid development of Service Computing, Cloud Computing, Big Data, and the Internet of Things, mass services with the same functionalities and different quality of service (QoS) values are available on the Internet. Moreover, due to the uncertainties of services’ application environment, a service’s QoS is highly dynamic; these two factors cause reliable dynamic Web service composition to be a challenge. To address this issue, this paper proposes a two-stage approach for reliable dynamic Web service composition. In the first stage, the top K Web service composition schemes based on each service’s historical QoS values are selected with the proposed algorithm named Culture Genetic Algorithm (CGA). Then, component services in the top K schemes are filtered out and employed as the candidate services for dynamic service composition. This operation can greatly reduce the number of available services and filter out better candidate services for dynamic service composition. Next, the global QoS constraints are decomposed into local QoS constraints with the CGA algorithm, and the global optimal problem of service composition is transformed into a local optimal service selection problem; this conversion increases the flexibility of dynamic service composition and provides a chance to predict QoS values of services before service selection. In the second stage, before selecting the best service for each task during the running of the service composition workflow, QoS values of each candidate service are predicted based on the improved case-based reasoning, and the best service is selected according to the predicted QoS values. Through QoS prediction, the reliability of the composite Web service can be greatly enhanced. Finally, experimental results show that the proposed method is feasible and effective.

@&#INTRODUCTION@&#
Web service is a type of distributed computing model that is self-contained, modular, loosely coupled, standards-based, and high capacity. Web services can provide a type of distributed information sharing computing technology that can be used on the Internet or an intranet with standard XML protocols and message formats to eliminate the discrepancies of different application systems [1–3]. Industry standards such as WSDL, UDDI, and WS-BPEL have been provided for describing, locating, and combining Web services. The service-oriented computing paradigm and its realization through standardized Web service technologies provide an encouraging solution for the seamless integration of business applications. Currently, composite Web services (CWSs) [4–6] have been used in many areas, such as virtual enterprise, supply chain, accounting, finances, and eScience. Following the service-oriented architecture paradigm, dynamic Web service composition is described as a process consisting of several tasks. Then, based on running time, concrete optimal Web services are selected and bound for each task.Using the business strategy making process in supermarkets as a use case (UC), in brutal commercial competition, to provide better services and obtain greater benefits, large supermarkets always making business strategies (such as developing a reasonable order plan, determining scientific placement of articles, and predicting the inventory) through data mining. This business process involves data collection, data transmission, data storage, data mining, decision making, and decision-execution monitoring, as illustrated in Fig. 1.To realize this process, supermarkets must develop their own software and hardware facilities and have sufficient computing power and storage capacity. They also need to employ hardware, network, and software maintenance workers; moreover, they should have a data analysis technician and a decision support expert. therefore, the cost will be large for supermarkets to build their own business information platform. However, with the emergence of Cloud Computing [7], Web services [8], Big Data [9], and the Internet of Things [10], many services are provided by different companies. The aim of business strategy creation can be realized by combining different services through a third party service system; supermarkets only need to pay some fee for the whole service. Obviously, service composition can create value-added services and can provide great convenience to users.It is expected that with the proliferation of Cloud Computing, Software as a Service [11], Big Data, and the Internet of Things, more and more Web services will be available on the internet. For example, there are mass services that can complete the data mining task in the UC, but each of these services has a different quality of service (QoS, such as price, response time, availability, and reliability). Mass candidate services for each task will increase the complexity of service composition, and cause the problem of Web service composition to be an NP-hard problem [12].Moreover, the QoS of a Web service is dynamic in an open network environment, take the data transmission service in the UC, for example, when the service is idle, its transmission speed will be fast, its reliability will be high, and its response time will be short. Alternatively, when the service is very busy, its transmission speed will be slow, its reliability will be low, and its response time will be long. Moreover, other factors such as task type and task volume greatly influences service QoS. Take data transmission service in the UC as an example, when the data volumes to be transferred are large, the response time will be long; otherwise, the response time will be short. Research [13,14] also demonstrates that service QoS is highly dynamic; thus, the QoS of the CWSs may satisfy users QoS constraints in the design phase, but it may be not able to satisfy users QoS constraints at the running time. However, most studies on QoS-aware Web service composition define the QoS of component services as deterministic quantities [15–18]. These studies utilize a pre-specified model of the process environment in which composition solutions are based on point estimates such as average values.In recent years, intensive studies have been performed on QoS-aware Web service composition [4,5,19,20]. Several Web service composition methods (such as service composition based on nonlinear programming and swarm intelligent algorithms) have been proposed [21–39]. However, issues remain to be solved:First, most existing Web service composition methods [21–39] try to create an optimal Web service composition scheme in the design phase, but due to the large number of candidate Web services, the time complexity of these methods is much higher. Thus, such Web service composition methods cannot be used to solve the problem of dynamic Web service composition. Therefore, improving the efficiency and flexibility of dynamic Web service composition remains an open issue.Second, most existing service composition methods take the QoS values of component services as static, wherein an optimal CWS is constructed based on determined QoS values. These methods neglect the dynamic QoS features, and always violate the QoS constraints when the CWS is executed. Therefore, creating a reliable CWS is also an open issue.Recently, new techniques have been developed to predict the future QoS values of services. Such a predictive ability will facilitate the selection of single services. Nonetheless, limited effort has been devoted to QoS prediction for a CWS. In fact, because the environment of Web services is very complex and there are many available candidate services, predicting the QoS of a CWS is very difficult. It is obvious that reliable dynamic Web service composition cannot be realized in one step. Therefore, this paper provides a two-stage approach for reliable dynamic Web service composition.The main idea of this approach is described as follows. In the first stage, the top K Web service composition schemes are initially identified based on historical QoS values, and the component services involved in the K Web service composition schemes are selected as candidate services. This operation can not only filter out better candidate services but also can reduce the number of candidate services to improve the efficiency of service dynamic composition. Then, transform the global optimization problem of QoS-aware service composition problem to a local optimal service selection problem by decomposing the global QoS constraints into local QoS constraints. This operation can increase the flexibility of Web service dynamic composition and provide a chance to predict services’ QoS before service selection. The problems of identifying the top K Web service composition schemes and decomposing the global QoS constraints into local QoS constraints are solved by the proposed swarm intelligence algorithm, the Culture Genetic Algorithm (CGA), which will be presented in detail in Section 4.In the second stage, during the execution of the service composition workflow, the QoS values of the candidate services are predicted before selecting a concrete service for each task. Then, the optimal services are selected according to the predicted QoS values. consider UC as an example, before concrete services are selected for each task (such as data collection, data transmission, and data storage), the QoS values of the candidate services are predicted, and then the best service is selected based on the predicted QoS. In this stage, the QoS accuracy of the component services is improved through QoS prediction; thus, the reliability of the CWS is enhanced. The QoS dynamic prediction method based on improved case-based reasoning (CBR) will be introduced in Section 6.1. The process of two-stage dynamic Web service composition is illustrated as Fig. 2.The contributions of this paper are summarized as follows.(1)This paper proposes a new idea for reliable dynamic Web service composition through two stages. This idea can not only improve the flexibility of dynamic Web service composition but also can enhance the reliability of the composite service.This paper proposes an optimization algorithm named CGA by integrating Genetic Algorithm (GA) into the framework of the Culture Algorithm (CA); moreover, a learning operator based on collaborative learning is introduced into the CGA. the CGA is applied to solve the problems of finding the top K Web service composition schemes and global QoS constraints optimal decomposition. Moreover, CGA can be used to solve other combinatorial optimization problems.This paper presents a global QoS constraints optimization decomposition method, a new quality level combination evaluation model is provided to find the optimal local QoS constraints for each service class.This paper proposes a dynamic QoS prediction method based on improved CBR. This method considers key environmental factors, such as service load, task type, task volume, cooperation service, and timeliness, which greatly influence QoS.The rest of this paper is organized as follows. Section 2 introduces related work; Section 3 presents Web services dynamic composition problem; Section 4 introduces the CGA. Section 5 presents the first stage of service dynamic composition; Section 6 describes the second stage of service dynamic composition. Section 7 gives the local optimal Web service selection method. Section 8 verifies the effectiveness of our approaches through simulating experiments. Finally, summary and future work are presented.

@&#CONCLUSIONS@&#
