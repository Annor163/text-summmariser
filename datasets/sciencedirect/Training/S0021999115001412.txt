@&#MAIN-TITLE@&#
A hybrid particle-mesh method for incompressible active polar viscous gels

@&#HIGHLIGHTS@&#
We present a hybrid particle-mesh method for incompressible active polar viscous gels.Analytical Lagrange multiplier imposes constant magnitude of the polarization field.Performing advection using particles is advantageous for flow dominated problems.Remeshing is performed using moment-conserving interpolation kernels.Incompressibility is imposed exactly using staggered finite difference meshes.

@&#KEYPHRASES@&#
Numerical simulation,Hybrid particle-mesh method,Active polar gels,Non-Newtonian fluids,Mechanochemical processes,

@&#ABSTRACT@&#
We present a hybrid particle-mesh method for numerically solving the hydrodynamic equations of incompressible active polar viscous gels. These equations model the dynamics of polar active agents, embedded in a viscous medium, in which stresses are induced through constant consumption of energy. The numerical method is based on Lagrangian particles and staggered Cartesian finite-difference meshes. We show that the method is second-order and first-order accurate with respect to grid and time-step sizes, respectively. Using the present method, we simulate the hydrodynamics in rectangular geometries, of a passive liquid crystal, of an active polar film and of active gels with topological defects in polarization. We show the emergence of spontaneous flow due to Fréedericksz transition, and transformation in the nature of topological defects by tuning the activity of the system.

@&#INTRODUCTION@&#
Dynamics of many processes is governed by the mechanics of active matter. Active matter is a system of interacting agents that exhibit coordinated motion mediated by active internal stresses induced by consumption of energy [41,58]. Consumption of energy occurs at the level of individual agents keeping these systems persistently out of equilibrium [41,58]. Processes such as the collective motion of robots [60] and the motion of colloidal particles propelled by catalytic activity [50,41] are well described as active matter [41]. More striking examples of active matter are living systems like collections of bacteria [21,41], groups of biological cells [34,41], meshworks of cytoskeletal filaments [37,33,32], and flocks of birds [70,71] that exhibit mechanical motion by dissipating chemical energy. Such active systems constitute a class of physical processes where flow is driven from within by consumption of chemical energy.Inspired by energy-fueled phenomena such as cortical cytoskeleton flows [46,45,32] during biological morphogenesis, the theory of active polar viscous gels has been developed [37,33]. The theory models the continuum, macroscopic mechanics of a collection of uniaxial active agents, embedded in a viscous bulk medium, in which internal stresses are induced due to dissipation of energy [41,58]. The energy-consuming uniaxial polar agents constituting the gel are modeled as unit vectors. The average of unit vectors in a small local volume at each point defines the macroscopic directionality of the agents and is described by a polarization field. The polarization field is governed by an equation of motion accounting for energy consumption and for the strain rate in the fluid. The relationship between the strain rate and the stress in the fluid is provided by a constitutive equation that accounts for anisotropic, polar agents and consumption of energy. These equations, along with conservation of momentum, provide a continuum hydrodynamic description modeling active polar viscous gels as an energy consuming, anisotropic, non-Newtonian fluid [37,33,32,41]. The resulting partial differential equations governing the hydrodynamics of active polar viscous gels are, however, in general analytically intractable.There have been attempts to numerically simulate the physics of active polar viscous gels at different length scales. At the microscopic scale, simulations have been carried out to understand in vitro organization of microtubule filaments in the presence of oligomeric motor proteins [49,47]. In addition, Brownian dynamics simulations have been used to model the collective dynamics of flexible cytoskeletal fibers [48]. However, such microscopic simulations do not allow large systems to be studied and are computationally demanding. At the mesoscopic scale, lattice Boltzmann simulations have been used to simulate the emergence of spontaneous flow in active liquid crystal films [42,43], spontaneous symmetry breaking in active liquid droplets [69] and pattern formation in active fluids [26]. While this increased the accessible length scales, it is challenging to impose constant polarity magnitude due to the limitation of the numerical method [7,42]. We are not aware of any numerical method to simulate at the macroscopic scale the hydrodynamic equations of active polar viscous gels proposed by Kruse et al. (2005) [37], Jülicher et al. (2007) [33] and, Joanny and Prost (2009) [32]. Lack of such a numerical method prohibited macroscopic simulations of complex active processes including coupled mechanochemical processes that have been postulated as the fundamental basis of biological morphogenesis [31,5,45,27,28].In this paper, we present a hybrid particle-mesh method [29,30,40,9,63,10] to simulate the macroscopic hydrodynamics of incompressible active polar viscous gels on rectangular geometries with arbitrary boundary conditions. The method is based on Lagrangian particles and Cartesian meshes. In Lagrangian particle methods, field quantities are discretized onto a set of computational elements called particles [19,20,12,35,23,62,63]. Every particle occupies a position that evolves according to a local velocity field. The field quantities carried by particles evolve according to the material derivative in a Lagrangian frame of reference. Such a description forms the basis of numerical methods like smoothed particle hydrodynamics [52,8] and vortex methods [22,35,12] that have been used for various flow simulations. In such methods, advection of a field is performed by moving particles according to the velocity field. This enhances numerical stability in flow-dominated simulations [19,20,12,35,23,62,63] since the method is not restricted by the Eulerian Courant–Friedrichs–Lewy (CFL) condition [24]. Remeshing the field quantities from particles to meshes guarantees consistency in discretizing the advection operator [12,11] and allows using mesh-based methods for discretizing other differential operators. Mesh based methods, like finite differences and finite volumes, offer simple and accurate operator discretization schemes, especially in simple geometries. Hybrid particle-mesh methods therefore combine the advantages of Lagrangian particle methods and mesh based methods [29,30,62,63,3,10]. Using these advantages we develop a conservative numerical method where the novelty is the preservation of the constant magnitude of the polarization field. The numerical method uses an analytically derived Lagrange multiplier which is consistent with the physics of active polar viscous gels to conserve the magnitude of the polarization field. The Lagrange multiplier is a function of the velocity and polarization fields, and introduces additional coupling between the dynamics of the polarization and velocity fields. In addition, we perform moment conserving remeshing of the polarization field from particles to an underlying mesh that preserves the constant magnitude of the polarization field. We exactly impose the incompressibility constraint using staggered finite-difference meshes and direct linear solvers to obtain the exact solution of the resulting linear system of equations. Finally, we use particles to perform advection so that the discretization scheme is not necessarily restricted by the CFL condition for advection-dominated problems.In Section 2, we present the governing equations of the continuum hydrodynamic description of incompressible active polar viscous gels in two-dimensional geometries. We present a hybrid particle-mesh method to numerically solve the governing equations in two-dimensional rectangular geometries in Section 3. In Sections 3.3 and 3.4, we present the accuracy and computational cost of the hybrid particle-mesh method. We validate our numerical method by demonstrating its consistency and convergence in Section 4. In Section 5, we use the hybrid particle-mesh method to simulate passive liquid crystal flows, spontaneous flows in active polar films, and hydrodynamics of active polar viscous gels with topological defects in the polarization field. We provide conclusions and discuss the limitations of the current method in Section 6.The continuum hydrodynamic description of incompressible active polar viscous gels in two-dimensions [37,33,32] (see Appendix A for more details) is governed by five partial differential equations (PDEs): one for each velocity component, one for the incompressibility condition, and one for each component of the polarization field.Assuming that the viscous forces in an active gel dominate the inertial forces, the two equations governing the velocity field in the low-Reynolds-number limit are obtained by imposing force balance in each of the two directions:(1)η∂x2vx+η∂y2vx−∂xΠ+ν2∂x[γνuxxpx2(px2−py2)px2+py2]+ν2∂x[2γνuxypxpy(px2−py2)px2+py2]+ν2∂x[γνuyypy2(px2−py2)px2+py2]+ν2∂y[2γνuxxpx3pypx2+py2]+ν2∂y[4γνuxypx2py2px2+py2]+ν2∂y[2γνuyypxpy3px2+py2]=−12∂y(h⊥)+ζ∂x(Δμpx2)+ζ∂y(Δμpxpy)−ζ∂x(Δμpx2+py22)−ν2∂x(−2h⊥pxpy)−ν2∂y[h⊥(px2−py2)]−∂xσxx(e)−∂yσxy(e)−gxext−ν2∂x[−γλΔμ(px2−py2)]−ν2∂y(−2γλΔμpxpy),(2)η∂x2vy+η∂y2vy−∂yΠ+ν2∂y[−γνuxxpx2(px2−py2)px2+py2]+ν2∂y[−2γνuxypxpy(px2−py2)px2+py2]+ν2∂y[−γνuyypy2(px2−py2)px2+py2]+ν2∂x[2γνuxxpx3pypx2+py2]+ν2∂x[4γνuxypx2py2px2+py2]+ν2∂x[2γνuyypxpy3px2+py2]=−12∂x(−h⊥)+ζ∂y(Δμpy2)+ζ∂x(Δμpxpy)−ζ∂y(Δμpx2+py22)−ν2∂y(2h⊥pxpy)−ν2∂x[h⊥(px2−py2)]−∂xσyx(e)−∂yσyy(e)−gyext−ν2∂y[γλΔμ(px2−py2)]−ν2∂x(−2γλΔμpxpy).Here,px(x,y,t)andpy(x,y,t)denote the x and y components of the polarization fieldp̲(x,y,t)at coordinates(x,y)at time t such that the magnitude|p̲(x,y,t)|is constant (or, without loss of generality,|p̲|=1).vx(x,y,t)andvy(x,y,t)denote the x and y components of the velocity fieldv̲(x,y,t),gxextandgyextare the x and y components of a externally applied force densityg̲ext, Π is the pressure field, η is the viscosity, ν is coefficient of coupling between the mechanical stress and the polarization field, γ is the rotational viscosity, and ζ is the coefficient coupling the stress to the activity (or energy consumption) measured by the difference in chemical potential Δμ. The componentsuαβof the symmetric strain-rate tensoru̲̲, the componentsσαβ(e)of the Ericksen stress tensorσ̲̲(e), and the transverse componenth⊥of the molecular fieldh̲(h̲being the driving force tending to minimize distortions away from a spatially homogeneous polarization field) are defined as(3)uαβ=12(∂αvβ+∂βvα),α,β∈{x,y},(4)σxx(e)=−Ks(∂xpx)2−Kb(∂xpy)2+(Kb−Ks)(∂ypx)(∂xpy),(5)σxy(e)=−Ks(∂ypy)(∂xpy)−Kb(∂ypx)(∂xpx)+(Kb−Ks)(∂xpy)(∂xpx),(6)σyx(e)=−Ks(∂xpx)(∂ypx)−Kb(∂xpy)(∂ypy)+(Kb−Ks)(∂ypx)(∂ypy),(7)σyy(e)=−Ks(∂ypy)2−Kb(∂ypx)2+(Kb−Ks)(∂xpy)(∂ypx),(8)h⊥=px[Ks∂y2py+Kb∂x2py+(Ks−Kb)∂x∂ypx]−py[Ks∂x2px+Kb∂y2px+(Ks−Kb)∂x∂ypy],whereKsandKbare the splay and bend elastic constants respectively. The last six terms on the left-hand side and the last two terms on the right-hand side in both of Eqs. (1) and (2) are force density contributions due to the Lagrange multiplierh||that imposes|p̲|=1. The Lagrange multiplierh||is the parallel component of the molecular fieldh̲and its expression is derived in Appendix A (see Eq. (A.18)). The force density contributions in Eqs. (1) and (2) due toh||make these equations a system of elliptic PDEs with nonlinear, spatially varying coefficients sinceh||is a function of the polarization and velocity fields (see Eq. (A.18)). ForΔμ=0, Eqs. (1) and (2) reduce to the Ericksen–Leslie flow equations at low Reynolds numbers [65,39,1,2,14] for passive liquid crystals. Additionally, also setting ν, ζ,Ks, andKbto zero further simplifies Eqs. (1) and (2) to the Stokes equations that model isotropic, passive fluid flow at low Reynolds numbers. Eqs. (1) and (2) are, therefore, a generalization of low-Reynolds-number flow equations for active polar viscous gels [37,33,32].The third PDE is the incompressibility condition that is enforced by the pressure Π and is(9)∂xvx+∂yvy=0.The last two PDEs govern the two components of the polarization field(10)DpxDt=h||px−h⊥pyγ+λΔμpx−ν(uxxpx+uxypy)+ωxxpx+ωxypy,(11)DpyDt=h||py+h⊥pxγ+λΔμpy−ν(uyxpx+uyypy)+ωyxpx+ωyypy,where(12)DpxDt=∂tpx+vx∂xpx+vy∂ypxandDpyDt=∂tpy+vx∂xpy+vy∂ypyare the material (Lagrangian) derivatives ofpxandpyrespectively, γ is the rotational viscosity, and λ is a coefficient coupling the activity of the system (measured by Δμ) to the polarization dynamics. In addition,h||is the component ofh̲parallel to the local polarization that enforces constant amplitude of the polarity vector (see Appendix A for more details), andωαβare the components of the antisymmetric vorticity tensorω̲̲:(13)h||=−γ[λΔμ−νuxxpx2px2+py2−νuyypy2px2+py2−2νuxypxpypx2+py2],(14)ωαβ=12(∂βvα−∂αvβ)α,β∈{x,y}.Eqs. (10) and (11) reduce to the polarization dynamics of an incompressible passive liquid crystal whenΔμ=0. They hence are a generalization accounting for consumption of energy in active polar gels [37,33,32].To solve Eqs. (1), (2), (9), (10), and (11) for the velocity and the polarization fields, we require an initial condition and various boundary conditions. The initial condition is given by the polarization field at timet=0. The active gel equations can have a variety of boundary conditions. The velocity at the boundary is prescribed by a Robin (mixed) condition or a stress-free condition. Robin boundary conditions for the magnitude v of tangential and normal velocity components, on the one hand, are defined asav+b(nˆ̲⋅∇̲)v=constantwhere a, b are constants,nˆ̲is a unit vector pointing outwards at the boundary and∇̲is the gradient differential operator. On the other hand, velocity at stress-free boundaries are such that the shear stress at the boundary vanishes (see Eqs. (A.5), (A.6), (A.7) and (A.3) for the expression of the deviatoric stress tensor). Additionally, the polarization field at the boundaries is determined according to a Dirichlet or a Neumann boundary condition. Therefore, every point on the boundary is governed by four boundary conditions to define the two velocity components and the two components of polarization.In summary, Eqs. (1), (2), (9), (10), and (11), along with appropriate boundary conditions for velocity and polarization, govern the hydrodynamics of incompressible active polar viscous gels in two dimensions as a function of material constants, namely, η, ν, γ, ζ, λ,Ks, andKb, and of the activity Δμ. We assume that the material constants are spatially homogeneous whereasΔμ≡Δμ(x,y,t)is, in general, spatially and temporally variable across the two-dimensional domain.We present a hybrid particle-mesh method to numerically solve the continuum hydrodynamic equations of incompressible active polar viscous gels (see Section 2) in two-dimensional rectangular geometries with arbitrary boundary conditions. The rectangular computational domain contains a set of points with coordinates(x,y)such that0≤x≤Lxand0≤y≤Ly, whereLxandLyare the dimensions of the computational domain in x and y directions, respectively. All differential operators are discretized on staggered Cartesian finite-difference meshes, while the advection of the polarization field is represented on particles (for details on particle-function approximation see, for example, Hockney and Eastwood (1988) [30], and Cottet and Koumoutsakos (2000) [12]). We initialize particles carrying the local polarization field at mesh nodes at every time step. We integrate the material derivative and the local velocity field to compute the polarization field carried by the particles, and accordingly update the positions of the particles in the next time step. Subsequently, we interpolate the polarization field carried by the particles back to the mesh nodes. Using staggered finite differences, we then compute the velocity field at the next time step. This procedure combines the superior numerical stability of Lagrangian particle methods in performing advection of field quantities with the accuracy and simplicity of discretizing differential operators on Cartesian meshes to simulate the hydrodynamics of active gels.Numerically simulating the hydrodynamic equations requires computing the velocity fieldv̲(x,y,t)and the polarization fieldp̲(x,y,t)across the computational domain as a function of time t. To do so, we first compute the initial velocity field at timet=0according to Eqs. (1), (2), and (9) from the initial condition for the polarization field. Subsequently, we integrate the equations of motion of the polarization field (Eqs. (10) and (11)) until time δt to compute the polarization field att=δt, where δt is the integration time step. We then use the polarization at timet=δtto compute the velocity field at timet=δtaccording to Eqs. (1), (2), and (9). We use this procedure repeatedly to compute the polarization and velocity fields for all time steps until a final timetf=Ntδt,Ntbeing the total number of integration time steps.The method, therefore, consists of two principal computational modules. One for integrating the polarization field from timet−δtto t according to Eqs. (10) and (11) using point particles and a finite difference mesh. We then make use of the polarization field at time t in the second computational module. The second computational module uses staggered finite difference meshes to compute the velocity field at time t. We make use of these two computational modules in the hybrid particle-mesh method to compute the velocity field and the polarization fields across the computational domain at all times.The computational module for numerically evaluating the polarization field is conceptually similar to solving for a concentration field governed by an advection-reaction-diffusion equation using particles and meshes. In the case of advection-reaction-diffusion, the diffusion and the reaction parts are evaluated on a mesh, and combined with the advection of particles [29,30,10,3].To computep̲(x,y,t), we use a finite-difference meshMpand point particles that are initially placed at the nodes ofMp. We assume the knowledge of velocityv̲, strain-rateu̲̲, vorticityω̲̲, the polarizationp̲, and the molecular fieldh̲at timet−δton the nodes ofMp. The nodes ofMpare indexed as(j,i)wherej=0,…,Nx−1andi=0,…,Ny−1. The x and y coordinates of node(j,i)arejδxandiδy, respectively, so that(Nx−1)δx=Lxand(Ny−1)δy=Ly. Here δx and δy are the spacing between nodes in the x and y directions, respectively, andNxandNyare the number of nodes in the x and y directions, respectively. The particle at the node(j,i)is indexed withϕ=iNx+jsuch thatϕ=0,…,NxNy−1. The particles are characterized by their positionsx̲ϕand carry the polarization fieldp̲ϕsuch thatx̲ϕ(t−δt)is the coordinate of node(j,i)andp̲ϕ(t−δt)is the polarization at node(j,i). We then integrate the equations of motion of the polarization field (Eqs. (10) and (11)) from timet−δtto t to compute the polarization on the particles at time t. We perform the integration according to the equations of motions of the particles in the Lagrangian frame of reference [30,44,12]:(15)dx̲ϕdt=v̲(j,i,t−δt),(16)dp̲ϕdt=Dp̲Dt(j,i,t−δt),j=0,…,Nx−1,i=0,…,Ny−1,ϕ=iNx+j,whereg(j,i,t)denotes the value of any function g at the node(j,i)at time t, andDp̲Dtis the material (Lagrangian) derivative ofp̲whose expression is given by the right hand side of Eqs. (10) and (11).We numerically integrate Eqs. (15) and (16) fromt−δtto t to obtainx̲ϕ(t)andp̲ϕ(t)for all particles. We integrate Eq. (15) fromt−δtto t using the explicit Euler integration scheme with the initial condition given byx̲ϕ(t−δt), which is the coordinate of node(j,i), at timet−δt. This advects the particles as illustrated in Fig. 1. The polarization field, however, can be purely oscillatory and using the explicit Euler scheme to integrate Eq. (16) will result in an unstable numerical simulation. As an instance of an integration scheme that can be stable in purely oscillatory regimes, we use the fourth-order Runge–Kutta scheme (RK4) [61,38] with the initial condition given byp̲ϕ(t−δt), which is the polarization on node(j,i)at timet−δt. In order to remain consistent with the explicit Euler integration of Eq. (15), we let the velocity field, strain-rate tensor, and the vorticity tensor at the intermediate stages of RK4 be equal to that at timet−δt. The polarization field, however, changes at the intermediate stages of RK4. This requires recomputation of the material derivative (right hand side of Eq. (16)) at intermediate integration stages. We perform this computation on the nodes ofMpby accounting for the boundary condition of the polarization field. This computation requires recomputingh||andh⊥at each integration stage. We computeh||andh⊥on the nodes(j,i)ofMpaccording to Eqs. (13) and (8), respectively. The differential operators for computingh⊥are discretized as described in Section 3.1.2.Once we computedx̲ϕ(t)andp̲ϕ(t), we interpolate the polarization field back to the nodes ofMp. This procedure is generally referred to as remeshing[12] and serves to obtainp̲(j,i,t)at the nodes ofMpfor the next time step. We perform remeshing in order to enable discretization of differential operators on the mesh using simple finite difference schemes. The details of the remeshing scheme are described in Section 3.1.1.Remeshing of polarizationp̲ϕ(t)carried by particles ϕ to the nodes(j,i)of meshMpis done using theΛ4,4interpolation kernel [11]. TheΛ4,4interpolation kernel is a classC4function, conserves up to four moments of the interpolated field, and is fifth-order accurate ifp̲ϕ(t)is computed analytically [11]. Accounting for the numerical error in explicit Euler time-integration ofx̲ϕ(t)usingv̲att−δt(see Eq. (15)), remeshing using theΛ4,4interpolation kernel is fourth-order accurate with respect to spatial discretization [11]. In addition, the computational cost of remeshing is linear in the number of target nodes. Due to its accuracy and favorable computational cost, we employ theΛ4,4interpolation kernel.We obtain the polarization fieldp̲(j,i,t)on the nodes of meshMpas:(17)p̲(j,i,t)=∑ϕp̲ϕ(t)Wϕ(j,i),j=0,…Nx−1,i=0,…Ny−1,whereWϕ(j,i)is the weight (a multiplicative factor) of particle ϕ that contributes to the polarization field on node(j,i). This weight is:(18)Wϕ(j,i)=Λ4,4(|x̲ϕ⋅xˆ̲−jδxδx|)Λ4,4(|x̲ϕ⋅yˆ̲−jδyδy|),wherexˆ̲andyˆ̲are unit vectors pointing in the x and y directions, respectively, andΛ4,4(⋅)is the interpolation kernel defined in Eq. (B.1). Because of the limited support of theΛ4,4kernel (Eq. (B.1)), each particle contributes only to a bounded number of mesh nodes within its neighborhood. We, therefore, loop over all particles, find the mesh nodes that are within the support domain of the particle and add the particle's contribution to the those mesh nodes. Fig. 2showsWϕ(j,i)and illustrates the interpolation from particles to a mesh node(j,i)using theΛ4,4interpolation kernel.TheΛ4,4kernel is two-sided (symmetric) and for nodes that are within two mesh nodes of the boundary, the kernel does not have the necessary support domain. This leads to incorrect interpolation at these nodes. In order to faithfully interpolate polarization from particles to mesh nodes near the boundary, we impose polarization boundary conditions on the meshMpthrough particles. For every particle ϕ at a distance d within three nodes of the boundary, carrying a polarizationp̲ϕ, we introduce a ghost particleϕgat a distance −d from the boundary. When the polarization at the boundary is set top̲b, the ghost particleϕggets to carry polarization2p̲b−p̲ϕ, which amounts to a second-order interpolation of the boundary value on the mesh. Similarly, we use second-order interpolation to compute the polarization carried by the ghost particle in the case of a Neumann boundary condition.In order to preserve the unit magnitude of the polarization field upon remeshing, we also remesh the magnitude|p̲ϕ|of the polarization field from particles ϕ to nodes(j,i)of meshMp. The remeshed magnitude is used to renormalize the magnitude of the remeshed polarization field.When the polarization fieldp̲changes, the transverse componenth⊥of the molecular fieldh̲needs to be recomputed. We need to perform this computation at all intermediate stages of the RK4 scheme used for numerically integrating Eq. (16), and to obtainh⊥at time t following the computation ofp̲at the nodes(j,i).We computeh⊥on the nodes(j,i)ofMpaccording to Eq. (8). Computingh⊥involves computing four simple second-order derivatives∂x2px,∂y2px,∂x2pyand∂y2py, and two mixed second-order derivatives∂x∂ypxand∂x∂ypy(Eq. (8)). We numerically compute these derivatives with a second-order accurate spatial discretization. We compute the simple second derivatives according to the three-point central finite-difference stencil for all (interior) nodes that are not at the boundary. For boundary nodes, we use a second-order one-sided four-point finite-difference stencil to compute the simple second derivatives. We compute the mixed derivatives by applying the first-order partial derivative in one direction followed by the first-order partial derivative in the other direction. We compute first-order derivatives on the nodes using a two-point second-order central finite-difference stencil for all interior nodes. For the nodes at the boundary, we compute the first-order partial derivatives using a second-order three-point one-sided finite-difference stencil.The computational module for numerically evaluating the velocity field is conceptually similar to finite volume [51,4,24] or staggered finite difference [51,4,24] approaches to solving time-independent partial differential equations like the Stokes equation.We compute the velocity fieldv̲using meshMpand three additional staggered finite-difference meshesMu,Mv, andMΠ. MeshMuis shifted byδy2in the y-direction with respect toMp. The nodes ofMuare indexed as(j,i−12), wherej=0,…,Nx−1andi=0,…,Ny(see Fig. 3(a)). The nodes(j,i−12)carry the x-componentvx(j,i+12)≡vx(jδx,(i+12)δy)of the velocity fieldv̲. The nodes(j,i−12)indexed withj=0orj=Nx−1and1≤i≤Ny−1are boundary nodes. Nodes withi=0ori=Nyare outside the computational domain and are referred to as ghost nodes (see Fig. 3(b)). All nodes except ghost nodes and boundary nodes are referred to as internal nodes. MeshMvis shifted byδx2in the x-direction with respect toMp. The nodes(j−12,i)ofMvcarry the y-componentvy(j+12,i)of the velocity fieldv̲, wherej=0,…,Nxandi=0,…,Ny−1(see Fig. 3(a)). Similar to the nodes ofMu, nodes(j,i−12)indexed withi=0ori=Ny−1and1≤j≤Nx−1are boundary nodes, nodes withi=0ori=Nyare ghost nodes (see Fig. 3(b)), and the rest are internal nodes. MeshMΠis shifted byδx2andδy2in the x and y directions respectively. The nodes(j+12,i+12)ofMΠcarry the pressure field Π, wherej=0,…,Nx−2andi=0,…,Ny−2(see Fig. 3(a)). This set of staggered meshesMp,Mu,Mv, andMΠis used to numerically solve for the velocityv̲according to Eqs. (1), (2) and (9).In order to numerically solve for the velocityv̲across the computational domain at time t, we assume the knowledge ofp̲(j,i,t)andh⊥(j,i,t)on meshMp. We use these quantities in Eqs. (1) and (2), and along with Eq. (9), computevxandvy(Eqs. (1) and (2)). We discretize Eq. (1) on the internal nodes ofMuand evaluate all terms in the equation using a second-order central finite-difference for all differential operators. On the boundary nodes we evaluate a one-sided second-order finite-difference scheme to enforce Robin boundary condition for the velocity component normal to the boundary. We use the ghost nodes and central second-order finite differences to enforce the Robin boundary condition for the velocity component tangential to the boundary. We use the ghost nodes to enforce the stress-free boundary condition using central second-order finite differences. Similarly, we discretize Eq. (2) on the nodes ofMv. Additionally, we discretize Eq. (9) on the nodes ofMΠ, except on one node where we set Π to an arbitrary scalar. This pressure node acts as the reference pressure node since the gradient of the pressure field and not its absolute value is relevant. In our implementation, we choose to setΠ(⌊Nx2⌋,⌊Ny2⌋)to zero. We solve the resulting unsymmetric, sparse system ofNx(Ny+1)+Ny(Nx+1)+(Nx−1)(Ny−1)linear equations for the same number of variables using a direct method, the unsymmetric multifrontal method implemented in UMFPACK [15–17], to obtainvxon the nodes ofMu,vyon the nodes ofMv, and Π on nodes ofMΠ.Subsequently, we interpolatevxto the nodes ofMpusing second-order two-point central difference interpolation in the y-direction. Similarly, we interpolatevyto the nodes ofMpusing two-point central difference interpolation in the x-direction. We additionally evaluate the components of the strain-rate tensoru̲̲and of the vorticity tensorω̲̲with second-order accuracy on the nodes ofMp. Usingu̲̲, we numerically evaluateh||on the nodes ofMpaccording to Eq. (13).Combining all steps of the hybrid particle-mesh method, the complete algorithm, given the material constants η, ν, γ, ζ, λ,Ks, andKb, the activityΔμ(x,y,t), the external force densityg̲ext, and the boundary conditions forp̲andv̲, is as follows:1.Initialize timet←0.Computep̲(j,i,0): compute the polarization fieldp̲on the nodes of meshMpusing the initial condition for the polarization field.Computeh⊥(j,i,0): compute the transverse componenth⊥of the molecular fieldh̲at the nodes(j,i)ofMpusingp̲(j,i,0)as described in Section 3.1.2.Computev̲(j,i,0),u̲̲(j,i,0), andω̲̲(j,i,0)using staggered meshes: compute the velocity fieldv̲, strain-rate tensoru̲̲, and vorticity tensorω̲̲on the nodes(j,i)ofMpusingp̲(j,i,0),h⊥(j,i,0), the material constants η, ν, γ, ζ, λ,Ks, andKb, and the activityΔμ(j,i,0), as described in Section 3.2.Advance timet←t+δt.Ift<tf, then,6.1.Computeh||(j,i,t−δt): compute the parallel componenth||on the nodes(j,i)ofMpusingp̲(j,i,t−δt),u̲̲(j,i,t−δt), material constants γ, ν, λ, and the activityΔμ(j,i,t−δt)according to Eq. (13).Computep̲(j,i,t)using point particles and a finite-difference mesh: compute the polarization fieldp̲on the nodes(j,i)ofMpat time t usingv̲(j,i,t−δt),u̲̲(j,i,t−δt),ω̲̲(j,i,t−δt),p̲(j,i,t−δt),h⊥(j,i,t−δt),h||(j,i,t−δt), material constants γ, λ and ν, and the activityΔμ(j,i,t−δt), as described in Section 3.1.Computeh⊥(j,i,t): computeh⊥on the nodes(j,i)ofMpusingp̲(j,i,t), as described in Section 3.1.2.Computev̲(j,i,t),u̲̲(j,i,t), andω̲̲(j,i,t)using staggered meshes: computev̲,u̲̲, andω̲̲on the nodes(j,i)ofMpusingp̲(j,i,t),h⊥(j,i,t), material constants η, ν, γ, ζ, λ,Ks, andKb, and the activityΔμ(j,i,t), as described in Section 3.2.Go to step 5.The accuracy of the hybrid particle-mesh method is dictated by the numerical error of the time integration scheme used to compute the polarization field on particles, the numerical error in remeshing the polarization field from particles to mesh nodes, and the numerical error of discretizing differential operators on the meshesMp,Mu,Mv, andMΠ.The time integration scheme used here is globally first-order accurate due to the explicit Euler integration scheme used to advect particles (see Eq. (15)). In other words, the numerical error due to time integration isO(Nt−1)whereNtis the number of integration time steps.The remeshing from particles to mesh nodes is second-order accurate. This is mediated by the accuracy of imposing polarization boundary conditions on the mesh using ghost particles. The numerical error of remeshing using theΛ4,4interpolation kernel isO(Nx−5+Ny−5)[11]. Accounting for the explicit Euler time-integration of particle positions, the numerical error increases toO(Nx−4+Ny−4)[11]. In addition, we impose boundary conditions for the remeshing procedure that are second-order accurate and hence the numerical error isO(Nx−2+Ny−2). Accounting for all these errors, the overall numerical error of the remeshing procedure isO(Nx−2+Ny−2), limited by the error in imposing boundary conditions.The discretization scheme used to evaluate differential operators on the meshesMp,Mu,MvandMΠis second-order accurate. This is due to the use of one-sided second-order finite differences at boundary nodes and central second-order finite differences at internal nodes. The numerical error of discretizing differential operators is thereforeO(Nx−2+Ny−2).In summary, the numerical error of the hybrid particle mesh method isO(Nx−2+Ny−2)in the number of mesh nodesNxandNyin the x and y-directions, respectively. If the number of mesh nodes in each direction is equal toNm, the numerical error isO(Nm−2). As a function of the number of integration time stepsNt, the numerical error of the present hybrid particle-mesh method isO(Nt−1).The computational cost of calculating the polarization and velocity fields at each time point is mediated by the cost of each step in the algorithm. The scaling of the cost for computingvx,vy, and Π at mesh nodes is dominated by the unsymmetric multifrontal method [15–17] to solve forvx,vyand Π from the unsymmetric, sparse system of linear equations obtained by discretizing Eqs. (1), (2) and (9) on meshesMp,Mu,Mv, andMΠ. By discretizing Eqs. (1), (2) and (9), we obtainNx(Ny+1)+Ny(Nx+1)+(Nx−1)(Ny−1)linear equations involvingvx,vy, and Π at the mesh nodes. We observe that the cost of solving forvx,vy, and Π at the nodes ofMu,Mv, andMΠ, respectively using the unsymmetric multifrontal method [15–17] isO((NxNy)a)where1<a<2witha≈32for the system considered here. The cost of computingh⊥andh||isO(NxNy). The cost of the time integration scheme to compute the polarization field on particles isO(NxNy). The cost of the remeshing procedure isO(NxNy).In summary, the computational cost of each time-step of the present implementation of our method is dominated by the cost of the direct method to solve the linear system of equations to compute the velocity components and pressure field, and isO((NxNy)32). The overall computational cost is linear in the number of time steps, and a hybrid particle-mesh method can potentially use large time-step sizes since they are not restricted by the Eulerian CFL condition for advection.We validate the hybrid particle-mesh method by studying its consistency and convergence on two test problems. On a test problem for which the analytical solutions ofp̲(x,y,t)andv̲(x,y,t)are not known, we demonstrate consistency by showing that the error in the numerical solution decreases with increasing spatial and temporal resolution of the numerical simulation. A consistent numerical method, however, does not guarantee convergence of the numerical solution towards the correct solution of Eqs. (1), (2), (9), (10) and (11) upon increasing spatial and temporal resolution of the simulation. We demonstrate convergence of the numerical solution to the analytical solution at steady state on a second test problem where the steady-state analytical solutions ofp̲(x,y)andv̲(x,y)can be computed. In addition, we show that convergence of the hybrid particle-mesh method is preserved for time steps corresponding to CFL numbers larger than 1.We show consistency of the hybrid particle-mesh method on a computational test case where the analytical solution is not known. We choose a computational domain withLx=Ly=10. The initial condition of the polarization field is a smooth harmonic map [1](19)px(x,y,0)=sin⁡a,py(x,y,0)=cos⁡a,where(20)a=2π(cos⁡x1−sin⁡y1)withx1=2x−LxLxandy1=2y−LyLy. We choose these initial conditions because they have been previously used to test accuracy of numerical methods for simulating passive liquid crystals [2,1]. The boundary conditions are(21)v̲(xb,yb,t)=0,p̲(xb,yb,t)=p̲(xb,yb,0),where(xb,yb)represent the coordinates of points on the boundary. The material constants areη=1,ν=−0.5,γ=0.1,ζ=0.07,λ=0.1,Ks=1, andKb=1. The activityΔμ(x,y,t)=−1and the external force densityg̲ext=0. Fig. 4shows snapshots of the polarization, velocity, and pressure fields across the computational domain at timest=0, 7.5, and 15 obtained withNx=Ny=17andδt=0.003. We observe that the system reaches steady state beyondt=12with non-zero steady state flow (Fig. 4(f)). We confirm the constant magnitude of the polarization field in Fig. 5, showing the maximum deviation of the magnitude of the polarization field from unity over the course of the simulation. We observe that the maximum deviation is close to machine epsilon, which is10−16for double-precision floating-point arithmetic.To measure the scaling of the numerical error due to spatial discretization, we perform simulations with increasing numbers of mesh nodes for a fixed δt. We perform simulations withNx=Ny=NmforNm=9,17,33,65, and 129. We useδt=2×10−7in all these simulations. Subsequently, we compute the error of the resulting numerical solutions att=tf=2×10−6against the numerical solution obtained from a more finely resolved computational domain withNx=Ny=257. Fig. 6(a) shows the error inpx,py,vx, andvyas a function ofNm. We observe that the error decreases with increasingNmand isO(Nm−2). This observation demonstrates that the present hybrid-particle mesh method is second-order accurate with respect to spatial discretization.To measure the scaling of the numerical error with the number of integration time steps, we perform simulations with decreasing δt for a fixedNm. We perform simulations withδt=4×10−3,2×10−3,1×10−3,5×10−4,2.5×10−4,1.25×10−4,6.25×10−5, and3.125×10−5using a fixed number of mesh nodes in each directionNm=17. We compute the error of the numerical solutions att=tf=1.024against the numerical solution obtained with a finer integration time stepδt=1.5625×10−5. Fig. 6(b) shows the error inpx,py,vx, andvyas a function of the number of integration time stepsNt=tfδt. We observe that the error decreases with increasingNtand isO(Nt−1). This demonstrates that the hybrid particle-mesh method is first-order accurate with respect to the time stepping scheme.In summary, the present hybrid particle-mesh method is consistent. In addition, the measured numerical error scales according to the theoretically expected bound (see Section 3.3) when increasing spatial or temporal resolution.We show convergence of the present hybrid particle-mesh method simulating a two-dimensional film where the steady-state analytical solution can be computed on a computational domain withLx=10andLy=10. The initial condition for the polarization is(22)px(x,y,0)=cos⁡(πy2Ly),py(x,y,0)=sin⁡(πy2Ly).The boundary conditions are(23)p̲(0,y,t)=p̲(Lx,y,t),v̲(0,y,t)=v̲(Lx,y,t),v̲(x,0,t)=0,σxy(x,Ly,t)=0,vy(x,Ly,t)=0,whereσxy(x,Ly,t)=0imposes a stress-free boundary alongy=Ly(see Eqs. (A.5), (A.6), (A.7) and (A.3) for the expression ofσxy). We setη=1,ν=0,γ=1,ζ=1,λ=1,Ks=1,Kb=1, andΔμ(x,y,t)=−1. The external force density isg̲ext=0.We perform numerical simulations until steady state is reached. We observe that byt=40the system reaches steady state. We, therefore, perform simulations withtf=40with increasing numbers of mesh nodes in each direction. We run simulations withNx=Ny=NmforNm=9, 17, 33, and 65. We run these simulations withδt=0.04, 0.01, 0.0025, and 0.000625, respectively. In words, we decrease δt and increase the number of time stepsNt=tfδtby a factor of 4 upon increasing the number of mesh cellsNm−1by a factor of 2. More specifically,Nm=8Nt125+1. Fig. 7shows the polarization and velocity fields as a function of time obtained by running a simulation withNm=17. We observe that the velocity field is translationally invariant in the x-direction andvy(x,y,t)is on the order of machine epsilon. Fig. 8shows the error inpx,py,h⊥, anduxyfrom our numerical simulation att=tfwith respect to the steady-state analytical solution (Eqs. (C.11), (C.12), (C.13), (C.14), and (C.15)). We observe that the error decreases with increasingNmand isO(Nm−2). SinceNm=8Nt125+1, we hence observe that the error isO(Nt−1).In summary, the present hybrid particle-mesh method is consistent and converges to the analytical solution. Consequently, we conclude that the method is numerically stable. The error in the numerical solution decreases according to the theoretical error bounds (see Section 3.3).For a purely mesh-based approach with explicit numerical time integration, it is necessary that the CFL number‖|vx|δtδx+|vy|δtδy‖∞is less than 1 for numerical stability [13,24], where the norm||⋅||∞denotes the maximum across the computational domain. This constraint limits the size of the time step δt. Hybrid particle-mesh methods have the advantage that the value of δt is not restricted by the CFL condition. Instead, stability of the advection operator in any hybrid particle-mesh method that uses explicit Euler for integrating particle positions andΛ4,4remeshing requires that the Lagrangian CFL numberδt‖∇̲v̲‖∞is less than 1 [11,9]. The Lagrangian CFL condition ensures that pathlines of particles do not intersect and is potentially less restrictive on δt. Here, we demonstrate the numerical accuracy of our hybrid particle-mesh method for CFL numbers larger than 1.The test problem we use is the same as the one used to demonstrate convergence (see Section 4.2). Withη=1,ν=1.5,γ=1,ζ=1,λ=1,Ks=0.1,Kb=0.1, andΔμ=−6, advection is the faster time scale (i.e., advection-dominated). Fig. 9shows the steady-state polarization field along the y-direction obtained withNx=Ny=33forδt=0.0025andδt=0.2. These time steps correspond to median CFL numbers of 0.32733 and 26.1866 respectively, where the median is computed across time steps. The corresponding median of the Lagrangian CFL numbers are 0.011354 and 0.90838, respectively. We observe that the steady-state polarization field at CFL number much larger than 1 agrees with the polarization field obtained using CFL number smaller than 1 (see Fig. 9). This shows that the hybrid particle-mesh method is accurate at CFL numbers larger than 1, thereby relaxing the constraint on δt. The CFL condition becomes more stringent with increasing number of mesh nodesNxandNymaking the hybrid particle-mesh method more attractive for simulations with high spatial resolution.In summary, the hybrid particle-mesh method potentially allows for time steps larger than those prescribed by the CFL condition. This potentially reduces the number of integration time steps and therefore the overall computational cost of simulating the dynamics of active polar viscous gels. When the CFL condition is fulfilled, or when the polarization dynamics is not advection dominated, the computational cost of our hybrid particle-mesh method becomes identical with that of a stable finite difference scheme.We report results from computational experiments on incompressible active polar viscous gels in rectangular geometries using the present hybrid particle-mesh method. The method enables simulations of the low-Reynolds-number hydrodynamics of simple fluids, of passive liquid crystal flows [65,39,1,2,14], and finally, of active polar viscous gels. Here, we present numerical results of the time-evolution of the polarization and velocity fields in a passive liquid crystal [1,2], in an active polar film [33,32], and in active polar viscous gels with topological defects in the polarization field [33,36].IfΔμ=0, the hydrodynamic equations (Eqs. (1), (2), (9), (10), and (11)) of incompressible active polar viscous gels reduce to the Ericksen–Leslie equations governing passive liquid crystals flows [65,39,1,2,14]. Note that whenΔμ=0, Eqs. (1), (2), (9), (10), and (11) are independent of ζ and λ, as these coefficients couple the activity (or energy consumption) measured by Δμ to the dynamics of the velocity and polarization fields, respectively.We use a test case previously used to simulate passive liquid crystal flow [1,2]. We choose a computational domain withLx=20andLy=10. The initial condition of the polarization field at interior points is given by Eq. (19). The polarization at the boundary is dictated by the boundary condition:(24)∂p̲(x,y,t)∂x|x=0=∂p̲(x,y,t)∂x|x=Lx=∂p̲(x,y,t)∂y|y=0=∂p̲(x,y,t)∂y|y=Ly=0,for all times t. The velocities at the boundary follows a no-slip condition given by(25)v̲(xb,yb,t)=0,where(xb,yb)denotes boundary points. We setη=1,ν=1,γ=1,ζ=0,λ=0,Ks=1,Kb=1,Δμ(x,y,t)=0, andg̲ext=0. For the simulation we chooseNx=21,Ny=31,δt=0.04, andtf=500. Fig. 10shows snapshots of the polarization and velocity fields att=0, 10.4, and 500. We observe that the polarization field relaxes to a homogeneous orientation across the computational domain (Figs. 10(a)–10(c)). Att=500, the system is at steady state and the orientation of the polarization field is approximately 2.55 radians (or 146°). This direction of alignment is governed by the initial polarization field. Due to lack of gradients in the steady-state polarization field, we observe that the steady-state velocity field is zero (Fig. 10(f)).We show numerical simulation results of an active polar viscous gel of certain thickness with periodic boundary conditions in the other dimension. Such an active polar film is a model for in vitro actomyosin films and in vivo cortical actomyosin meshworks in biological cells [33,32].We choose a computational domain withLx=Ly=10. The initial condition of the polarization field is(26)px(x,y,0)=cos⁡(π3Ly−yLy),py(x,y,0)=sin⁡(π3Ly−yLy).The boundary conditions are(27)p̲(x,0,t)=p̲(x,0,0),p̲(x,Ly,t)=p̲(x,Ly,0),p̲(0,y,t)=p̲(Lx,y,t),v̲(x,0,t)=0,σxy(x,Ly,t)=0,v̲(0,y,t)=v̲(Lx,y,t),whereσxy(x,Ly,t)=0imposes a stress-free boundary alongy=Ly(see Eqs. (A.5), (A.6), (A.7) and (A.3) for the expression ofσxy). We setη=1,ν=−5,γ=1,ζ=−4,λ=−1,Ks=1,Kb=1,Δμ(x,y,t)=−1, andg̲ext=0. We chooseNx=Ny=17and simulate the system untiltf=160withδt=0.01. We observe that the system reaches steady state at aroundt=90. Fig. 11shows the polarization and velocity fields at timest=0, 10, and 90. The polarization field is homogeneous along the x-direction (see Figs. 11(a)–11(c)). The polarization, however, is non-homogeneous along the y-direction and therefore the gradient of the polarization field is non-zero (see Figs. 11(a)–11(c)). The velocity field is also invariant along the x-direction, and the y-component of the velocity field is zero (see Figs. 11(d)–11(f)). Importantly, the velocity field at steady state is non-zero (see Fig. 11(f)). This non-zero steady-state flow is mediated by gradients in the steady-state polarization field, which in turn is imposed by the polarization boundary condition.We next show a case of steady-state flow in active polar films due to gradients in the polarization field emerging spontaneously only when the ratio of activity Δμ to a critical activityΔμcis greater than 1. WhenΔμΔμc<1, we observe no steady-state gradients in the polarization field. The corresponding steady-state velocity field is, therefore, zero. WhenΔμΔμc>1, we observe a non-zero steady-state velocity field. This transition to a non-zero flow velocity forΔμΔμc>1is referred to as the Fréedericksz transition [65,18,33,72]. To simulate a Fréedericksz transition, we choose a computational domain withLx=Ly=10. The initial polarization field is constant across the computational domain, except for a noisy perturbation:(28)px(x,y,0)=cos⁡(π2+ϵ(y)),py(x,y,0)=sin⁡(π2+ϵ(y)),where the perturbationϵ(x)=rπ2, r being a uniform random number in[−0.2,0.2]. The boundary conditions are given by Eq. (27). We setη=1,ν=−2,γ=1,ζ=1,λ=0.1,Ks=1,Kb=1, andg̲ext=0. For these parameters, the theoretical value ofΔμc=0.2673(see Eq. (C.18)). We perform simulations usingNx=Ny=17andδt=0.05.Fig. 12shows the polarization and velocity fields att=0, 100, and 300 forΔμ=0.1so thatΔμΔμc<1. The system reaches steady state at approximatelyt=280. The polarization angle relaxes toπ2across the computational domain (see Figs. 12(a)–12(c)). In other words, the polarization gradient at steady state is zero (see Fig. 12(c)). Consequently, the steady-state velocity field is zero (see Fig. 12(f)). We now repeat the simulation withΔμ=0.4so thatΔμΔμc>1. Fig. 13shows the polarization and velocity fields att=0, 40, and 160. Beyondt=150, the system is at steady state. The polarization angle aty=Ly2relaxes to approximately 0.983 radians (or 56.3°) at steady state (Figs. 13(a)–13(c)). The gradient in the polarization field is, therefore, non-zero in the y-direction (see Fig. 13(c)). Consequently, the velocity field at steady state is non-zero (see Fig. 13(f)). This shows activity Δμ larger than the critical valueΔμcinduces gradients in the polarization field leading to non-zero flow velocities.We present simulation results of the dynamics of Eqs. (1), (2), (9), (10), and (11) in the presence of topological defects in the polarization field. At the topological defects, the polarization field is not defined (|p̲|=0) and the gradient of the polarization field diverges. Such a point defect could be the center of an aster, a spiral, or a vortex. In an aster, the polarization field at each point is oriented along the line connecting the point with the defect. In a vortex, the polarization field at each point is orthogonal to the line connecting the point with the defect. Defects with any other constant orientation between the polarization field at each point and the line connecting the defect with that point are referred to as a spiral defects [33,36].We present simulation results with spiral and aster defects in an incompressible active polar viscous gel. We perform a simulation withδt=0.01on a computational domain withLx=Ly=10andNx=Ny=17. The initial polarization field represents a spiral defect (see Fig. 14(a)). The defect is at the center of the computational domain atx=Lx2,y=Ly2, wherep̲=0. In order to avoid a diverging gradient in the polarization field at the defect location, we smooth (regularize) the magnitude of the polarization field so that it increases smoothly to 1 over a distance of approximately 3 units from the defect. At the boundaries, we impose the velocities and the normal derivative of the polarization field to be zero. We setη=0.1,ν=2,γ=0.1,ζ=−1,λ=1,Ks=1,Kb=1.5, andg̲ext=0.Figs. 14 and 15show the polarization and velocity fields att=0, 2.5, and 5 forΔμ=1.5and 0.5, respectively. For both values of Δμ, we observe a circular flow profile centered at the defect location (Figs. 14(d)–14(f) and Figs. 15(d)–15(f)) with the maximum kinetic energy density being approximately 50 times smaller att=5forΔμ=0.5in comparison toΔμ=1.5(Figs. 14(f) and 15(f)). The spiral character of the initial polarization field persists over time whenΔμ=1.5(see Figs. 14(a)–14(c)). For the smallerΔμ=0.5, the same initial polarization field gets transformed to an aster over time (see Figs. 15(a)–15(c)). This shows that tuning the activity Δμ can change a spiral defect to an aster defect.We now switch the initial polarization field to an aster (Fig. 16(a)) and perform simulations retaining all other settings. Figs. 16 and 17show the polarization and velocity fields att=0, 2.5, and 5 forΔμ=0.5and 1.5, respectively. ForΔμ=0.5, we observe that the aster defect persists over time (see Figs. 16(a)–16(c)). The corresponding velocity field (see Figs. 16(d)–16(f)) shows a pattern consisting of 8 vortices. The centers of these vortices form a octahedron whose centroid coincides with the defect. In addition, the flow at neighboring vertices of the octahedron is in opposite directions. For the largerΔμ=1.5, we observe that the aster defect is transformed into a spiral defect over time (see Figs. 17(a)–17(c)). The corresponding velocity field is also transformed from a pattern consisting of 8 local vortices organized along an octahedron to a single large vortex centered at the defect (see Figs. 17(d)–17(f)). This observation shows that Δμ can change an aster to a spiral defect. Such transformations of topological defects, for instance from a spiral to an aster or vice versa, have been predicted using linear perturbation analysis of the hydrodynamic equations [36]. Experimentally, such transformations have been observed in in vitro microtubule dynamics [49,66,67]. In these experiments, modulating Δμ by changing the concentration of motor proteins induced a change in the overall filament orientations from a spiral to an aster configuration and vice versa [49,66,67]. This is the first time such topological transitions are confirmed in a numerical simulations of the macroscopic governing equations of active polar viscous gels.We have presented an algorithm to solve the macroscopic governing hydrodynamic equations of incompressible active polar viscous gels [37,33,32,41] in two-dimensional rectangular domains using a hybrid particle-mesh method. The method is a hybrid of Lagrangian particles and staggered finite-difference meshes. Combining the superior numerical stability of Lagrangian particle methods for flow-dominated problems with the simplicity of discretizing differential operators on staggered Cartesian meshes, we numerically solve the equations of active polar viscous gels. As the main novelty, the numerical method uses an analytically derived Lagrange multiplier to impose constant magnitude of the polarization field that is consistent with the physics of active polar viscous gels. We use particles to transport the polarization field so that the advection is not restricted by the Courant–Friedrichs–Lewy (CFL) condition. Staggered finite differences are used to exactly impose incompressibility, and a direct solver to obtain the exact solution of the resulting linear system of equations. Remeshing of the polarization field from particles to mesh nodes is performed using a moment-conserving interpolation kernel preserving the constant magnitude of the polarization field. Using these ingredients, we developed a novel conservative numerical method to accurately solve the hydrodynamic equations of incompressible active polar viscous gels.We have validated the hybrid particle-mesh method on two test problems. On one test problem, where the analytical solution is not known, we showed that the numerical error of the method decreases with increasing the spatial and temporal resolution of the simulation. On another test problem, where the analytical solution can be computed, we showed that the numerical solution converges to the correct analytical solution with increasing spatial and temporal resolution of the simulation. Specifically, we showed that the numerical error decreases by a factor of four upon doubling the number of mesh nodes in each direction and decreases by a factor of two upon halving the time-step size. These observations demonstrate that the presented hybrid particle-mesh method is consistent and converges to the correct solution of the underlying governing equations. Further, we demonstrated that the presented hybrid particle-mesh method is stable and converges to the correct solution even for CFL numbers much larger than 1 making the method advantageous especially for advection dominated dynamics.Using the present hybrid particle-mesh method, we have performed computational experiments on a few instances of active polar viscous gels. Setting the energy consumption or the activity of the gel to zero, we simulated the hydrodynamics of passive liquid crystals using the same method. Using active polar films, which are a model system for cortical actomyosin layers in biological cells [33,32,72], we demonstrated the Fréedericksz transition [33,72,42] when the activity is larger than a critical value. At supra-critical activities, we showed the emergence of non-zero gradients in the steady-state polarization field. As a result we observed a non-zero velocity field. In active polar viscous gels with defects in the polarization field, we showed the transition from a spiral to an aster defect, and vice versa, by tuning the activity of the gel as observed in in vitro experiments on microtubule dynamics [49,66,67].The present hybrid particle-mesh method has several limitations. The method is limited to two-dimensional rectangular domains and has a computational cost proportional to the total number of mesh nodes to the power32. Even though extending the method to three-dimensional geometries is straightforward, the scaling of the computational cost might prohibit efficient simulations in three dimensions. The computational cost of the method may, however, be reduced by using iterative linear solvers at the expense of numerical accuracy. For complex geometries, discretizing differential operators using simple finite difference schemes is problematic. This limitation can be addressed by using generalized finite-difference schemes, like discretization-corrected particle strength exchange (DC-PSE) operators [64,59]. In addition, the current time integration scheme is explicit and is therefore only conditionally stable. Using an implicit integration scheme can alleviate this limitation at the expense of larger computational cost. Future work will involve relaxing these limitations, leading to a robust hybrid particle-mesh method for simulating active polar viscous gels in complex three dimensional geometries. Additional future extension of the present method include coupling the local activity of active gels to concentration of chemicals that are advected by the flow velocity of the gel, diffuse, and undergo reactions that are deterministic or stochastic depending on the population of the chemicals [37,33,68,3,53,55–57,54].The theory of active polar viscous gels offers a framework for simulating active matter like migrating cells and cytoskeletal meshworks. The theory, in general, provides a basis for modeling active mechanochemical processes that are crucial to biological morphogenesis [31,5,27]. We envision an important role for computer simulations of such active mechanochemical processes in understanding complex phenomena in developmental biology.

@&#CONCLUSIONS@&#
