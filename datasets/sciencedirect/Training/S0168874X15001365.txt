@&#MAIN-TITLE@&#
A virtual-surface contact algorithm for the interaction between FE and spherical DE

@&#HIGHLIGHTS@&#
The virtual-surface contact algorithm, which is based on inside–outside method and penalty function method, is developed. Innermost details regarding local search, contact force calculation and the algorithmic implementations are presented.In the proposed contact algorithm, the penetration between discrete element and finite element can be determined without solving nonlinear equations.The proposed contact algorithm has been implemented into in-house developed code. Four numerical examples are employed to validate the accuracy and robustness of the proposed contact algorithm.

@&#KEYPHRASES@&#
Contact,Discrete element,Finite element,Penalty,Virtual-surface algorithm,

@&#ABSTRACT@&#
A new contact search algorithm named virtual-surface contact algorithm is developed for dealing with the interaction between spherical discrete elements (DEs) and finite elements (FEs). The basic idea of the contact algorithm is forming a virtual surface above the FE surface. Therefore, the contact problem between DE and FE surface is treated as that between the DE mass center and the virtual surface. Then, the projection of the DE mass center on the virtual surface is determined using spatial area coordinates without solving nonlinear equations and the contact force is processed by using a penalty function method. So, the quick contact searching and accurate evaluation of penetration have been achieved. Finally, the accuracy of this algorithm is investigated via four numerical examples.

@&#INTRODUCTION@&#
The discrete element method (DEM) is capable of analyzing the non-continuum, such as the fracture of brittle materials [1–3], the behavior of particulate material [4–8] because of the capability of freely changing the interaction relationship between neighbor elements. Even though DEM is still able to analyze the continuum [2,9,10], the finite element method (FEM) is efficient to solve continuum mechanics. So, to make full use of the advantages of DEM and FEM, a number of combined DE/FE methods have been proposed [11–18].One of the key aspects of combined DE/FE method is the contact algorithm, which focuses on determining the contact relationship and calculating contact force between DE domain and FE domain. A contact algorithm between DE domain and FE domain is generally comprised three stages: global search, local search and contact force calculation. Solution strategies for contact force are basically penalty function method and Lagrange multiplier method [19–21]. The global search is aiming at detecting all candidate contact pairs. Many efficient global search algorithms, such as bucket sorting method [22,23], ADT [24,25], NBS [26] and CGRID [27], have been developed. Local search is to calculate the contact point on the FE surface. According to the equivalence of the FE contact boundary, the local search can be mainly divided into three categories, namely sphere equivalence, triangle equivalence, and quadrilateral equivalence. In sphere equivalence approach such as the pinball algorithm [28,29], the boundary finite element is equivalent to one or several spheres and the contact forces are calculated via sphere–sphere contact. So the sphere equivalence approach can be easily utilized to solve the DE/FE contact problems. However, this approach is inaccurate because of the geometrical approximation in the equivalence [23,30].In the triangle equivalence approach, the FE contact boundary is equivalent to many triangles. It should be mentioned that if the FE contact surface is a curved quadrilateral, it is equivalent to four triangles with their common vertex at the center of the quadrilateral [16,31,32] or two triangles with their common edge along the diagonal of the quadrilateral [33,34]. The contact between DEs and FE contact boundary is handled by the DE-triangle contact algorithms [11,35,36].In the quadrilateral equivalence approach, the FE contact surface is equivalent to a quadrilateral in [23,37–39]. In paper [23], the DE/FE node-to-surface (NTS) contact method treats each DE mass center as a slave node while each quadrilateral as master surface and the contact point on the master surface is determined by using the iteration approach. To avoid iteration, the plane area coordinates have been used to determine the contact point on the master surface because of the small distance between the contact pair in FE/FE contact problems [37–39]. Compared with this distance in FE/FE contact method, however, the distance between the DE mass center and FE surface is very large. If the plane area coordinates of the quadrilateral are used to determine the contact point, namely the projection of the DE mass center on the FE surface, its accuracy is usually not very high especially when the FE surface distorts severely.In this paper, a virtual-surface algorithm for local contact search is newly developed to handle the contact problems between spherical DEs and quadrilateral FE surfaces. In this algorithm, a virtual surface is formed above the spatial FE surface. Then, the contact problem between DE and FE surface is treated as that between the DE mass center and the virtual surface. Because of the small distance between the DE mass center and the virtual surface, the contact point is determined by using the spatial area coordinates of the virtual surface. To accurately evaluate the contact force, a penalty function method is employed based on the Hertz contact model [40]. This paper is organized as follows. Firstly, the global search algorithm is briefly discussed. Then, the local search algorithm and the calculation formula of the contact force are illustrated in Sections 3 and 4, respectively. In Section 5, four numerical examples are used to validate the accuracy and robustness of the proposed contact algorithm. Finally, Section 6 presents the conclusions.The purpose of global search is to detect all candidate contact pairs comprised discrete elements and FE surfaces. In this paper, the CGRID search method [27,39] is employed to detect candidate DE/FE contact pairs by treating the FE surface as axis aligned bounding box (AABB). The candidate contact DEs of each FE surface are stored for local search. As the global search is a time-consuming process, the radius of DE is extended to avoid performing it at every time step, as shown in Fig. 1. If the extended DE and the AABB overlap, the DE and the corresponding surface constitute a candidate contact pair.Since the candidate contact pairs have been detected in global search stage, the actual contact relationship of the candidate contact pairs can be determined. In the local search algorithm proposed, a virtual surface is formed above the candidate surface of FE and the penetration is treated as that between the virtual surface and the DE mass center. The local search algorithm is described as follows.A candidate contact pair is comprised a discrete element and a FE contact surface, as shown in Fig. 2. In the figure, D and Nidenote the DE mass center and the ith node of the surface, respectively. O is the origin of the isoparametric coordinates ξ, η whilegis the vector from O to D. The edge vectorciis defined by(1)ci=xi+1−xi;i=1,2,3,4wherexidenotes the position vector of node Niandx5=x1.The normal n at arbitrary point on the surface is determined as [21,41](2)n=∂x∂ξ×∂x∂ηwherexis the position vector on the surface, which is approximated in terms of the nodal position vectorxiby(3)x=∑i=14Si(ξ,η)xiwhere Sidenotes the bilinear shape functions given by(4)Si=(1+ξiξ)(1+ηiη)/4The normalniof node Niis defined by [37](5)ni=ci−1×ci;i=1,2,3,4wherec0=c4.Substituting Eqs. (3)–(5) into Eq. (2), the normal n at arbitrary point on the surface can be expressed with the nodal normals as(6)n=14∑i=14Si(ξ,η)niBy substitutingξ=η=0into Eq. (6), the surface normalnOcan be obtained(7)nO=116∑i=14niIf the discrete element is in contact with the surface, the distance between the DE and the surface should be in a certain range, namely(8)pn=g·nu<r+wwheregis the vector from point O to D as shown in Fig. 2; r andnu=nO/|nO|are the radius of the DE and the unit normal of the surface respectively, while w=max(d1·nu,d2·nu,d3·nu,d4·nu). Here,di=xi−xOis the vector from O to Ni.When DE is in contact with the candidate contact surface, the projection ofgonto the surface should satisfy(9)|g−pnnu|<max(|di|)+r,i=1,2,3,4If Eq. (8) or (9) is not satisfied, the DE will not be in contact with the surface. Otherwise, it is necessary to check whether the DE mass center is projected inside of the candidate contact surface. Herein, an approach based on the inside–outside method [37] is employed to achieve this purpose shown in Fig. 3. In the figure, for edgeci, calculate(10)di=(ci×gi)·nci;i=1,2,3,4where the normalnciof the edgeciis determined via Eq. (6) as(11)nci=18(ni+ni+1);i=1,2,3,4wheren5=n1. Note that in (10) the edge normal is used rather than the surface normal employed by inside–outside method [37] because of the bigger distance between the DE mass center and the surface. If diis positive, the projection of the DE mass center is inside with respect to the edgeci. Via the sign combinations from d1 to d4, the region where the DE mass center is projected can be determined as shown in Fig. 4. In this figure, S, Eiand Videnote surface contact region, edge contact region and node contact region respectively, while the subscript i corresponds to the ith edge or node of the surface. According to the region where the DE mass center is projected, the contact detection type can be determined. For example, if the projection is in region Ei, the edge contact detection will be performed between the DE and the ith edge of the surface.In order to calculate the penetration vector between the discrete element and the FE surface, a virtual surface is formed above the FE surface, as shown in Fig. 5. In the figure, NiandNi′are node and virtual node, respectively. The position vectorxi′of the ith virtual node is defined as follows:(12)xi′=xi+rnui;i=1,2,3,4where r denotes the radius of the discrete element, whilenui=ni/|ni|is a unit normal of the node Nion the surface. The virtual surface can be approximated in terms of the position vector of the virtual nodexi′by Eq. (3). The projectionxC′of the DE mass center on the virtual surface can be calculated by(13)xC′=∑i=14ϕixi′;i=1,2,3,4where ϕiis the shape function corresponding the ith node of the surface at the contact point. In order to obtain the shape function more precisely, the position vector of the virtual mass centerxD′is calculated as shown in Fig. 6(14)xD′=xD−[(xD−xO′)·nO]nOwherexO′is the position vector of the centroid of the virtual surface. Then the shape functions ϕ1 can be obtained [38](15)ϕ1=Δ2Δ3/Δ;ϕ2=Δ3Δ4/Δ;ϕ3=Δ4Δ1/Δ;ϕ4=Δ1Δ2/ΔwhereΔ=(Δ1+Δ3)(Δ2+Δ4); Δiis the area of triangle with vertexD′(the virtual mass center) and the ith edge of the virtual surface, as shown in Fig. 6. Note that the triangle areas are used to calculate the shape functions, rather than the projection areas of the triangle along the normal at the surface centroid which is applied to solve FE/FE contact problems [37–39]. As the virtual surface and the triangles Δ1, Δ2, Δ3 and Δ4 are not in a plane when FE deforms, the area coordinates herein are named spatial area coordinates.Then, the vector from the mass center to the projection on the virtual surface,δDC, can be calculated as(16)δDC=xC−xD′The penetration vector between the DE mass center and the virtual surface can be obtained(17)δ=δDC·nuIf δ is positive, the candidate contact pair is in contact. The penetration vectorδis equal toδDC.When the projection of DE mass center is in region Ei, edge contact detection may be implemented, as shown in Fig. 7. In the figure, D and MN are a DE mass center and a potential contact edge, respectively. The position vectorxCof the projection of the DE mass center on the edge can be calculated as(18)xC=ϕ1xM+ϕ2xNwhereϕ1=(1−t)/2andϕ2=(1+t)/2are shape functions andt=2(xD−xM)·eMN/|xN−xM|−1. Here,eMN=(xN−xM)/|xN−xM|is a unit vector from M to N. If the value of t is in the range [−1,1], the DE is possible to be in contact with the edge. The penetration δ between DE and edge can be calculated as(19)δ=r−|xC−xD|If δ is positive, the DE will be in contact with the edge. The penetration vector between them can be determined by(20)δ=δewheree=(xD−xC)/|xD−xC|is the unit vector from the contact point C to the DE mass center D.When the projection of DE mass center is in region Vi, node contact detection may be implemented, as shown in Fig. 8. In the figure, N denotes the candidate contact node while D is the DE mass center. The penetration between the node and the mass center is(21)δ=r−|xD−xN|When δ is positive, the DE is in contact with the node. The penetration vector between them can be determined by(22)δ=δewheree=(xD−xN)/|xD−xN|is a unit vector from node N to the DE mass center D.Note that in this paper the contact types between DE and FE are considered in three different priority levels. Surface contact is in top level while edge contact and node contact are in middle and bottom ones, respectively. If the contact in higher level is detected for a discrete element, the contact in lower one (or ones) will not be checked. Note also that several contact relationship in same level for a discrete element is allowed, such as a discrete element in contact with several surfaces [23].In this paper, a penalty function method is employed to calculate the contact force based on the Hertz contact model between sphere and plane, which is determined by [11,23,30,42](23)fcd=43γE⁎(r|δ|)1/2δwherefcdis the contact force acting on discrete element. γ is contact penalty factor. Note that the DE׳s deformation arising from the contact force is not considered in this paper. The equivalent Young׳s modulus E⁎ is(24)E⁎=EdEfEd(1−μf2)+Ef(1−μd2)where E and μ are Young׳s modulus and Poisson׳s ratio respectively, while the subscript of form(□)dand(□)fmeans the property of discrete element and finite element respectively.The contact forcefciacting on the ith node of the FE surface is calculated by the following equation [22,38]:(25)fci=−ϕifcdIt is worth noting that the contact force between DE and FE is treated synchronously and the governing equations of the DE and FE domains are integrated simultaneously.The proposed DE/FE contact algorithm is implemented into the in-house developed code CDFP via FORTRAN 95. In order to validate the accuracy and robustness of the proposed contact algorithm, four examples on contact problems are simulated by using the proposed algorithm. The first three examples are mainly used to validate the accuracy of the algorithm. Among them, the DE/DE connective model which is appropriate for analyzing the elastic-brittle materials [2,10], is applied in the second and third ones. The last one using the DE/DE contact model [40] is applied to investigate the robustness of the algorithm. It is worth noting that the DE domain is analyzed by a number of DEs in the last three examples and the contact problems between DE and FE domains are solved via dealing with the contact relationship of each contact pair (DE and FE surface). The penalty factors γ used in the following examples are selected to avoid large penetrations and great oscillations. Note also that the critical time step of the system is the smallest of the time steps determined by FEs, DEs, and the DE/FE interactions, which can be selected by the methods in paper [43,44]. The time steps in these examples are all significantly smaller than the corresponding critical time step.To validate the accuracy of the contact algorithm proposed, a rigid ball impacting a cantilever beam is depicted in Fig. 9and Table 1. An initial velocity of 10m/s is assigned to the ball with a radius of 1mm. To validate the present contact algorithm, the rigid ball is simulated by a DE and the beam is discretized by FEs with the size of 4mm×4mm×0.333mm. The contact penalty factor for the DE/FE model is set to 0.8. For comparison, the DE/FE NTS contact method is used to analyze the DE/FE model and the FE model is employed with a contact penalty factor 0.1. The time step for both DE/FE model and FE model is set to 1.0×10−4ms.Comparison has been made between those results, such as the contact force (Fig. 10) and the displacement in the vertical direction at point A (Fig. 11). It shows that the results of the present contact method agree with the corresponding results obtained from DE/FE NTS contact method exceedingly well. The results obtained by the present contact method and DE/FE NTS contact method are in good agreement with that calculated by FEM.Since it is available to obtain the analytical solutions, the impact problem of two symmetric bars is often employed to validate the numerical contact algorithms [39,45,46]. Herein the impact problem is also considered as shown in Fig. 12and Table 2. The two bars have an initial velocity of 20m/s towards each other. To validate the accuracy of the present contact algorithm, one bar is discretized by many FEs and the other by a number of DEs, while the time step is set to1.0×10−4ms. When they are in contact, the present contact algorithm is employed to deal with the contact between DEs and FEs. For comparison, the DE/FE NTS contact method is also used to handle the impact problem.The calculated results of contact-force histories are compared with the analytical results as shown in Figs. 13–15. The results obtained by using the virtual-surface and NTS algorithms agree with the analytical solutions very well, and almost no difference has been observed between the results obtained by using the two algorithms. The results calculated with different penalty factors as shown in Figs. 13–15, it can be seen that the penalty factor is bigger, the contact-force curve is steeper and in better agreement with the analytical solution at the ascending and descending stages, however, its oscillation becomes severer at the horizontal stage. This conforms to the contact-constraint theory of penalty function method in contact-impact problems. The velocity histories at end points A and B shown in Fig. 12 are compared with the analytical ones in Fig. 16, and the results obtained by the two contact algorithms are in good agreement with the analytical ones.To further validate the accuracy of the contact algorithm proposed, a tube impacting a beam with fixed ends is considered as shown in Fig. 17and Table 3. An initial velocity of 20m/s is assigned to the tube. In DE/FE model, the beam is analyzed by a number of DEs with a radius of 0.5mm while the impacting tube is discretized by many FEs, as shown in Fig. 18. The contact penalty factor for the DE/FE model is set to 0.25. For comparison, the DE/FE NTS contact method is used to analyze the DE/FE model and the FE model is employed with a penalty factor 0.12. The time step for DE/FE model and FE model is set to1.0×10−4ms.The contact-force histories, the displacement histories at the center of the beam׳s free side and the velocity histories at point A are shown in Figs. 19–21, respectively. It is found that the results obtained from the present contact method agree with those calculated by DE/FE NTS contact method and FEM very well. At the time instants of 0.1ms and 0.3ms, the velocity distributions are compared as shown in Figs. 22 and 23. It can be seen that they are in good agreement in spite of a fine distinction.To investigate the robustness of the proposed contact algorithm, particles impacting rigid plate with teeth is depicted in Fig. 24and Table 4. There are 13,552 particles with an initial velocity of 20m/s toward the plate. The particles are simulated by a number of DEs and the plate by many FEs as shown in Fig. 25(a), while the contact between DEs and FEs is handled with the proposed contact method with penalty factor 0.6. The time step is set to1.0×10−4ms. The motion status of the particles are shown in Fig. 25 at four different time instants. As the particles move down, some particles are in contact with the top faces of the teeth. Then, some particles are in contact with the side faces of the teeth and the top face of the plate successively. Because of the difference of the contact moments, the particles in the same layer at the beginning stagger along the vertical direction as shown in Fig. 25(b). In Fig. 25(c), (d), the particles scatter mainly because of the slopes of the side facets of the teeth. As shown in Fig. 25, DE/surface, DE/edge and DE/node contact types occur and are resolved correctly since no big penetration is observed. This numerical example suggests the robustness of the proposed contact algorithm.

@&#CONCLUSIONS@&#
From the investigations in present work, the conclusions are summarized as follows:(1)The virtual-surface contact algorithm, which is based on area coordinates and penalty function method, is developed. Innermost details regarding local search, contact force calculation and the algorithmic implementations are presented.In the proposed contact algorithm, the penetration between discrete element and finite element can be determined without solving nonlinear equations.The proposed contact algorithm has been implemented into in-house developed code. Four numerical examples are employed to validate the accuracy and robustness of the proposed contact algorithm. The virtual-surface contact algorithm is developed to handle the contact between discrete elements and finite elements. However, the contact algorithm is not restricted to this scope. Actually, if the elements are spherical and the surfaces are quadrilateral, the proposed contact algorithm can be employed to solve the contact problems, such as the contact problems between smoothed particle hydrodynamics (SPH) and FEM.