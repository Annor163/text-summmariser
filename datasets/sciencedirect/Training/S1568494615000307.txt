@&#MAIN-TITLE@&#
MOFCA: Multi-objective fuzzy clustering algorithm for wireless sensor networks

@&#HIGHLIGHTS@&#
In this paper, a multi-objective fuzzy clustering algorithm (MOFCA) that addresses the hotspots and energy hole problems both in stationary and evolving networks is introduced.The MOFCA aims to balance the energy consumption over network by wisely adjusting the cluster competition radius according to three input parameters.Like some other studies, a fuzzy approach is adopted to handle uncertainties in cluster-head radius estimation.The radius tuning mechanism of MOFCA solves the above-mentioned problems both in stationary and evolving networks.MOFCA is a distributed, reliable, scalable, and more efficient clustering algorithm than the compared protocols to be utilized in WSN applications.

@&#KEYPHRASES@&#
Wireless sensor networks,Unequal clustering,Multi-objective,Fuzzy logic,

@&#ABSTRACT@&#
This study introduces a new clustering approach which is not only energy-efficient but also distribution-independent for wireless sensor networks (WSNs). Clustering is used as a means of efficient data gathering technique in terms of energy consumption. In clustered networks, each node transmits acquired data to a cluster-head which the nodes belong to. After a cluster-head collects all the data from all member nodes, it transmits the data to the base station (sink) either in a compressed or uncompressed manner. This data transmission occurs via other cluster-heads in a multi-hop network environment. As a result of this situation, cluster-heads close to the sink tend to die earlier because of the heavy inter-cluster relay. This problem is named as the hotspots problem. To solve this problem, some unequal clustering approaches have already been introduced in the literature. Unequal clustering techniques generate clusters in smaller sizes when approaching the sink in order to decrease intra-cluster relay. In addition to the hotspots problem, the energy hole problem may also occur because of the changes in the node deployment locations. Although a number of previous studies have focused on energy-efficiency in clustering, to the best of our knowledge, none considers both problems in uniformly and non-uniformly distributed networks. Therefore, we propose a multi-objective solution for these problems. In this study, we introduce a multi-objective fuzzy clustering algorithm (MOFCA) that addresses both hotspots and energy hole problems in stationary and evolving networks. Performance analysis and evaluations are done with popular clustering algorithms and obtained experimental results show that MOFCA outperforms the existing algorithms in the same set up in terms of efficiency metrics, which are First Node Dies (FND), Half of the Nodes Alive (HNA), and Total Remaining Energy (TRE) used for estimating the lifetime of the WSNs and efficiency of protocols.

@&#INTRODUCTION@&#
Previous advances in Information Technologies (IT) and especially in MEMS (Micro Electro-Mechanical Systems), have made the production and deployment of tiny, battery-powered nodes which communicate over wireless links possible. A single node has the ability to gather data from the region within its range. In order to have semantically meaningful information from the entire region, these nodes operate in a collaborative manner. Networks comprised of such nodes with sensing capability are called wireless sensor networks (WSNs). The aim of early deployment was to use these sensors in a passive way for indoor applications. These early nodes have the ability to sense scalar data such as temperature, humidity, pressure and location of surrounding objects. Initially, these nodes have little computation capability and storage space and their only use is to transfer scalar data to the base station (sink). However, recently available sensor nodes have higher computation capability, higher storage space and better power solutions than their predecessors and their primary usage area shifts from indoor to outdoor applications. Sensor nodes are equipped with batteries which are not rechargeable in most of the cases. Energy schemes of these nodes have gained much interest among researchers. This topic has been studied for many years, [1] and [2] are among the recent studies and lately the trend is towards energy-harvesting nodes [3]. However, readily available commercial off-the-shelf nodes may not use this technology and the deployed area may not allow the use of such available energy-harvesting methods. Because of all these reasons, decreasing energy consumption through energy-efficiency has been still one of the major goals [4]. In this respect, designing energy-efficient algorithms is crucial to extend the lifetime of sensor nodes.In the WSN, sensor nodes can be grouped into small partitions which are called clusters. In each cluster, there is a cluster-head (CH), also sometimes called as the leader, which coordinates data aggregation from the member nodes and transmission of the collected data to the sink. CH selection can be done in a centralized or distributed manner. Clustering in WSNs guarantees stringent performance requirements with a large number of sensor nodes [5,6]. It also improves the scalability of WSNs [7]. In addition to scalability of the network, route setup localization, communication bandwidth conservation by decreasing the relayed packets, reducing the rate of energy consumption and stabilization of the network topology are pros of clustering [8].Since efficient CH selection can reduce energy consumption, the selection mechanisms have been studied thoroughly in the literature. Most of the available approaches utilize a two-step process, in the first step they select CHs with more remaining energy, and then in the second step they make a rotation among the member nodes to balance energy consumption. This case shows that these selection approaches take only the energy of the nodes into account, not the location and the density of the nodes yet. As a result of not considering the location of the deployed nodes, the hotspots problem arises in multi-hop WSNs. This problem is known as the early dying of the CHs that are close to the sink or over critical paths because of the heavy inter-cluster traffic relay. In an effort to overcome this problem, the unequal clustering approach, which creates variable size of clusters based on the distance between CHs and the sink, has emerged. By utilizing such an unequal clustering methodology, clusters that are close to the sink are created in smaller sizes (service areas) when compared to the clusters that are further. In addition to the hotspots problem, the deployment locations of the nodes may change by redefined requirements or environmental effects. This type of network is called an evolving network since it evolves over time. In this type of networks, initial distribution may look like a uniform one; however, final scene may resemble a non-uniformly distributed computing devices. As a result of this situation, the energy hole problem arises. This problem is known as the early dying of some close nodes around WSN which prevents data gathering. This variability in the node locations affects the density of the nodes over time. There are studies trying to address the energy hole problem by employing a non-uniform node distribution. However, most of the proposed clustering approaches do not take this situation into account either by the node-staticity assumptions or by uniform distribution of the nodes at the first phase. This distribution is especially crucial in heterogeneous WSNs when compared to their homogeneous counterparts since different sensing instruments have different ranges in which they can operate.In this paper, we propose a multi-objective fuzzy clustering algorithm (MOFCA) with the aim of prolonging the lifetime of WSNs and fulfilling the shortcomings of aforementioned approaches. MOFCA selects the final CHs via energy-based competition among the chosen tentative CHs, which are initially determined by a probabilistic model. MOFCA is a distributed competitive algorithm which focuses on assigning appropriate ranges to tentative CHs. MOFCA, utilizes three parameters; namely remaining energy, distance to the sink, and density of the nodes. Furthermore like some previous other studies, in order to overcome the uncertainties inherent in the WSN environment, a fuzzy logic-based approach is utilized. To evaluate the performance of our approach, it is compared with the existing equal and unequal clustering mechanisms such as Low Energy Adaptive Clustering Hierarchy (LEACH), Cluster Head Election using Fuzzy logic (CHEF), Energy-Efficient Unequal Clustering (EEUC), and Energy-Aware Unequal Clustering with Fuzzy (EAUCF). A number of experiments are performed under predefined four scenarios. Obtained results show that MOFCA is a promising fuzzy clustering algorithm and performs better than all compared clustering algorithms.The remainder of this paper is organized as follows: in Section2 background and related work about our model with some domain information are presented. Then, our proposed clustering algorithm MOFCA is introduced and discussed in Sections3 and 4 in detail. Thereafter, our contributions are explored by evaluating the proposed algorithm and presenting the obtained performance results together with the scalability and complexity analysis of MOFCA in Section5. Finally, in Section6, our conclusions and possible future work are given.Data aggregation process deals with efficient data gathering from deployed nodes. Clustering approaches in this sense provide energy-efficient infrastructure for the demanded task. The need for clustering emerges from the known requirements such as decreasing the number and size of data packets to be transmitted and providing efficient delivery mechanisms to these routed packets. This topic is even more crucial when considering the application types which include more multimedia streaming data every other day. In the literature, there are several proposed clustering algorithms for WSNs. In the following paragraphs, key and discriminating features of the widespread clustering algorithms are stated. In order to help specify the key features of our proposed algorithm, it is useful to conceive what other available proposed algorithms do for clustering.LEACH is a distributed algorithm which promotes local decisions to select CHs [9]. It selects CHs based on probability model and then rotates CHs. This model is employed in order to balance energy consumption of the nodes throughout the network lifetime; otherwise selected CHs would consume more energy when compared to member nodes. In LEACH, CHs perform data compression before transmitting data to the sink. However, LEACH is not an efficient algorithm in terms of the network lifetime since it does not consider the distribution of sensor nodes and the remaining energy on each node.Hybrid Energy-Efficient Distributed (HEED) algorithm is designed for multi-hop networks and node-equality is the primary assumption [10]. Two-phase parameter check is done to select CHs. In the first phase, remaining energy of a node is used for the probabilistic selection of the CHs. If a tie occurs in the first phase, second-phase parameters such as node degree, distance to neighbors, and intra-cluster energy consumption are applied to break the tie in the selection process. However, HEED algorithm suffers from the hotspots problem and causes unbalanced energy consumption because of its tendency to generate more than expected number of clusters [11].Initialization of newly deployed ad hoc and sensor networks is studied in [12]. Here, the authors argue that good clustering can be computed efficiently even for the restricted network model and propose a probabilistic CH election algorithm. In their approach, the probability of each node being elected as a CH depends on the node connectivity (degree) and the main idea behind is that the nodes compete to become dominators. For this reason, algorithm tries to find a dominating set of nodes which are good candidates to be CHs.Energy Efficient Clustering Scheme (EECS) is introduced for periodical data gathering applications in WSNs [13]. It is a LEACH-like protocol such that it utilizes node residual energy in the selection of constant number of CHs, however, in the cluster formation phase load is balanced among CHs. It is a distributed algorithm and the experimental results show that it performs nearly 35% more energy-efficient than LEACH. Since EECS accounts for single-hop communications, long-range transmissions generating directly from CHs to the sink can lead to much energy consumption, and hence it is not suitable and scalable for long-range or large networks [11].Because of the uncertainties occurring in the WSN nature, increasing number of clustering algorithms [14,15,19] make use of fuzzy logic to overcome the arising problems. For this reason, they are known as fuzzy clustering approaches. In these approaches, fuzzy logic is mostly employed to get a better combination of the applicable input parameters to obtain an optimal output, which is CH election in this context. In the fuzzy approach pursued by [14], the CH election occurs by considering three fuzzy descriptors in the sink which denotes this algorithm as a centralized one. Fuzzy descriptors here are the node concentration, residual energy of each node and node centrality.CHEF [15] is a similar approach to the proposed method in [14], but here CH election occurs in a distributed manner which does not necessitate the central control of the sink. Moreover, there is one less fuzzy descriptor. Residual energy of each node and local distance are the fuzzy input parameters of this algorithm.Equal clustering approaches like the aforementioned ones all suffer from the hotspots problem in multi-hop WSNs. To overcome this problem, unequal (uneven) clustering approach has emerged. Main idea behind this methodology is to adjust the cluster sizes with respect to the distance between the CH and the sink. As a result, it is possible to distribute the energy consumption over the network by changing the effect of inter-cluster and intra-cluster work of the CHs according to their distances to the sink.EEUC is a distributed competitive unequal clustering algorithm. In the algorithm, each node has a preassigned competitive radius and CHs are elected by local competition [16]. Competition radius decreases as the nodes approach the sink. In addition to being an unequal clustering algorithm, this method is also a probabilistic approach since for every clustering round, a node probabilistically chooses to attend or not to the CH election competition. The term round here refers to the time interval between two successive cluster formation process. Although EEUC improves the network lifetime over LEACH and HEED, extra global data aggregation can result in much overhead and deteriorate the network performance [11].Multi-objective solutions are introduced to the clustering phenomenon and the Multi-Objective Particle Swarm Optimization (MOPSO) algorithm is among them. In the algorithm both number of clusters in an ad hoc network and energy consumption are tried to be optimized [17]. There are three parameters employed by this algorithm. These are the degree of the nodes, transmission power and battery power consumption of mobile nodes. Although MOPSO provides a set of solutions at a time, it is specifically designed for mobile ad hoc networks and does not consider the distance of the nodes to the sink in static environments and hence suffers from the hotspots problem.Density-Based Clustering Protocol (DBCP) is an improvement over LEACH on the basis of nodes’ connectivity [18]. A metric of nodes’ relative density is introduced for CH selection. By considering the alive neighbor nodes in certain round, the algorithm promotes that nodes in a dense area have larger probability to become a CH. This larger probability assignment can result in electing wrong nodes as CHs and much more energy consumption.EAUCF algorithm is introduced to address the hotspots problem and extends the lifetime of WSNs. This algorithm utilizes randomized periodical rotation together with fuzzy logic, however, does not follow a pure probabilistic approach to elect final CHs and considers only the stationary nodes [19]. Fuzzy descriptors employed in the EAUCF are residual energy and distance to sink of the tentative CHs. EAUCF solves the hotspots problem in statically deployed networks. However, it still suffers from the hotspots and energy hole problems in evolving networks.Density-based Energy-efficient Clustering Algorithm (DECA) defines the density of each node and regards it as a crucial metric together with nodes’ remaining energy [20]. These two metrics are employed to select CHs in the algorithm. Like some algorithms, DECA, also does not consider the location of the nodes and as a result of this situation, it cannot address the hotspots and energy hole problems.Before detailing into the proposed algorithm, characteristics of the system model that are used for experimental evaluation are given below. Assumptions made for the system model are as follows:•All nodes are identical.Nodes are deployed either manually in order to form a non-uniform distribution or randomly.Base station (the sink) can be anywhere in the Area-of-Interest (AOI – boundaries of the WSN). It needs not be located far away from the sensing region. However, it could also be out of the AOI.All sensor nodes do not have to be stationary after the deployment phase. However, mobility meant here does not include the forceful change of the initial placement by remote control. It includes only the change in places which is caused by terrestrial movements such as erosion or displacement resulted by external objects. With the inclusion of this assumption, evolving networks are also targeted.Since mobility is assumed to be generated by external sources, it does not cause nodes to consume energy.All sensor nodes have the same amount of energy when they are deployed and this battery-power is initially one (1) Joule (J).Nodes are capable of adjusting transmission power according to the distance of the receiving nodes.Distance between nodes can be calculated considering the received signal strength.We model the N-node network as an N-vertex undirected graph denoted by G, where V and E are its vertices (nodes) and edges (paths) as presented in Eqs. (1) and (2), respectively. According to the positions of the nodes, the 2D node deployment place (network topology) matrix is constituted by xiand yivalues of the nodes as depicted in Table 1.(1)G=(V,E)(2)V={1…N}Representation of the energy dissipation model is as employed in [9]. Depleted energy measurement in transmitting or receiving l bit over a distance of d is done as in Eqs. (3) and (4), respectively.Eelec=50nJ/bit, ɛfs=10pJ/bit/m2, ɛmp=0.0010pJ/bit/m4 and d0=20m. Eelecis the energy consumption per bit in the transmitter and receiver circuitry and ɛmpis the energy dissipated per bit in the RF amplifier.(3)ETX(l,d)=lEelec+lɛfsd2,d<d0lEelec+lɛmpd4,d≥d0(4)ERX(l)=ERX−elec(l)=lEelecMOFCA is designed by considering two important factors: firstly it should be energy efficient in all employable scenarios and secondly lightweight enough to be implemented on real sensor hardware boards. It is a distributed unequal fuzzy clustering algorithm which makes use of local decisions for the determination of node competition radius and electing tentative and final CHs. There is no need for a central decision node (generally the sink) for the election process. Motivation behind the algorithm is to overcome the hotspots and evolving network situation occurring in WSNs while still achieving efficient results for the stationary distribution case. Although EAUCF addresses the hotspots problem in stationary networks, it has a shortcoming to address this problem and the energy hole problem in both stationary and evolving networks. That is why, our algorithm, MOFCA, is called a multi-objective solution for clustering problems. MOFCA considers three parameters, namely distance to the sink, node remaining energy, and the density of the node with the aim of estimating the competition radius for tentative CHs. In addition to these parameters, like some other algorithms, MOFCA also employs fuzzy logic in calculating competition radius. With the use of fuzzy input and output variables, uncertainties inherent in the WSN nature are handled in an effective manner. MOFCA is based upon a probabilistic model which is used for the election of tentative CHs and utilizes randomized periodical rotation. Our approach is multi-objective, since it reaches an efficient solution for the clustering phenomenon considering both the stationary and evolving networks. MOFCA employs remaining energy, distance to the sink, and density of the nodes, nearly all parameters considered so far, together with fuzzy logic in estimating competition radius. The flow of messages in MOFCA protocol together with the pseudo-code is explained in Algorithm 1. Compi, Ei, and Sirepresent the competition radius, remaining energy and state of a particular sensor node i, respectively.Algorithm 1MOFCA protocolIn every clustering round, each sensor node generates a random number (μ in Algorithm 1) between 0 and 1. If the random number for a particular node is smaller than the predefined threshold (Th), which is the percentage of the desired tentative CHs, then that sensor node (i) becomes a tentative CH. Since MOFCA uses remaining energy, distance to base station, and density parameters to calculate competition radius, the competition radius of each tentative CH changes dynamically in MOFCA. It is wise to adjust the competition radius of a CH while these input parameters are changing. If this radius does not change according to the values of the input variables, the node's energy depletes rapidly. To get rid of this situation, MOFCA adjusts the competition radius of each tentative CH accordingly. Radius computation is accomplished by using predefined fuzzy rules to handle uncertainty. This process is depicted as line 7 in Algorithm 1. The fuzzy rules are given in Table 2. In order to evaluate the rules, the Mamdani Controller [21] is used as a fuzzy inference technique and the center of area (COA) method is employed for defuzzification of the competition radius.In order to calculate CH competition radius, three fuzzy input variables (descriptors) are used. The first one is the distance to the base station. The fuzzy set defining this input variable is depicted in Fig. 1. The linguistic variables for this fuzzy set are close, medium and far. A trapezoidal membership function is chosen for close and far. On the other hand, the membership function of medium is a triangular membership function.The second fuzzy input variable is the remaining energy of the tentative CH. The fuzzy set that describes this input variable is illustrated in Fig. 2. Low, medium and high are the linguistic variables of this fuzzy set. The low and high linguistic variables have a trapezoidal membership function while medium has a triangular membership function.The third fuzzy input variable is density of the tentative CH. The fuzzy set that describes the density input variable is illustrated in Fig. 3. Sparse, normal and dense are the linguistic variables of this fuzzy set. Sparse and dense linguistic variables have a trapezoidal membership function while normal has a triangular membership function. In addition to other two fuzzy input variables which try to reach an energy-efficient solution, this variable adds robustness against changes in node locations. This is achieved through tuning the competition radius according to the calculated density. This fuzzy variable helps tentative CHs which have higher node density to compete for a larger radius. However, this is only true if we consider the distance to base station fuzzy variable having the values of medium or far. For the close value of this fuzzy variable, higher density means a smaller competition radius in order to decrease the service area of a CH. As a result of this tuning, clusters are formed more efficiently and the hotspots problem is alleviated. Moreover, for possible high-density areas in non-uniformly deployed WSNs, it has an advantage that more nodes can become members of the elected nearest CHs and transmit to shorter distances. However, the vice versa is also possible for some deliberately formed WSNs and, for this situation it exacerbates the efficiency metrics. By stating deliberately formed WSN, we imply the cases where most of the nodes are deployed around the corners of the quadratic shape of the AOI, the base station is nearly at the center of the AOI, and there are some high-energy nodes that are close to the base station and have low calculated node densities in their competition ranges with respect to the nodes that are placed around corners. For this situation, MOFCA, by considering all fuzzy input variables, may elect a non-optimal CH and assign nodes to further tentative CHs. Although, this situation is tried to be addressed in fuzzy rules depicted in Table 2, experimental results are corroborating this condition. As a result of this situation, more energy might be consumed. However, this case is most probably not to be seen in any WSN that are not formed to exploit the effects of this situation. Densities of the tentative CHs (di) are calculated as in Eq. (5). A wireless node knows the number of alive nodes in its radius. However, for the calculation of node density parameter, a node needs to know the number of all alive nodes in network (denominator in Eq. (5)). Since the number of all alive nodes may change at each round and it is not possible for a node to know its value, this value is broadcast to the WSN by the sink at the start of each round. Density fuzzy input variable in MOFCA is not employed as it is in DBCP. Higher node density in MOFCA means a bigger or smaller competition radius when electing tentative CHs while higher node density in DBCP means a greater probability for a node to become a CH.(5)di=NumberofAliveNodesinRadiusNumberofAllAliveNodesinNetworkThe only fuzzy output variable is the competition radius of the tentative CH. The fuzzy set defining this fuzzy output variable is given in Fig. 4. There are 27 linguistic variables which are 12XS (extra small), 11XS, 10XS, 9XS, 8XS, 7XS, 6XS, 5XS, 4XS, 3XS, 2XS, XS, small, medium, large, XL, 2XL, 3XL, 4XL, 5XL, 6XL, 7XL, 8XL, 9XL, 10XL, 11XL, and 12XL (extra large). 12XS and 12XL have a trapezoidal membership function. The remaining linguistic variables are represented by using triangular membership functions. The function in Fig. 4 is not a symmetric triangular function as in previous figures. This is because the function in Fig. 4 provides better results when employed in the simulation of scenarios. The fuzzy set for this output variable can also be tuned according to a specific scenario; however, we employ the same fuzzy set in all scenarios. If a particular tentative CH is located at the maximum distance to the base station (fuzzy input variable Distance to Base Station has the value of far), it has a full battery (fuzzy input variable Remaining Energy has the value of high), and calculated density in its region is high (fuzzy input variable Calculated Density has the value of dense), then it has the maximum competition radius (fuzzy output variable Competition Radius has the value of 12XL). On the contrary, if the remaining energy of a particular CH is near empty (fuzzy input variable Remaining Energy has the value of low), it is a close node to the sink (fuzzy input variable Distance to Base Station has the value of close), and calculated density in its region is high (fuzzy input variable Calculated Density has the value of dense) then it has the minimum competition radius (fuzzy output variable Competition Radius has the value of 12XS). These extreme cases are colored in red in Table 2. The remaining possibilities fall between these boundaries.The maximum competition radius is a static parameter for a particular WSN because either nodes are stationary (do not change their deployment locations) in WSNs or the borders of the AOI is always known (a node can change its location only in the AOI). The sink broadcasts the value of this parameter to the entire network. Thus, all nodes know the maximum competition radius, in advance. Each node can calculate their relative competition radius according to the value of this parameter. The maximum distance to the base station is also a static parameter, because it is assumed that the sensor nodes are either stationary or only mobile in AOI. Each sensor node can determine its relative position to the sink considering the maximum distance to the sink in the WSN.After each tentative CH determines its competition radius, the competition begins. Each tentative CH disseminates CandidateCH Message to compete with other tentative CHs. This message is transmitted to the tentative CHs which are inside the maximum clusterhead competition radius. It includes node information (Id), competition radius (Compi), remaining energy level (Ei), and density (di) of the generating node. Remaining energy is the first key parameter in CH competition. If a tentative CH receives a CandidateCHMessage from another tentative CH which is in its competition range and the remaining energy of the generating node is greater than the remaining energy of the receiving node, then the receiving node ceases the competition and disseminates a CeaseElectionMessage. If a tie occurs in the remaining energy levels of the competing nodes, it is broken through the consideration of the calculated densities. If a particular tentative CH has the highest remaining energy level among the tentative CH which it receives a CandidateCHMessage from, or if it has the highest degree alive node density in its radius among equal-energy tentative CHs, then it becomes a CH.This competition guarantees that no other CH exists in the competition radius of a particular CH and balances energy consumption over network. After election is completed, each sensor node not elected as one of the final CHs joins to the closest CH, as in most proposed clustering schemes. Fig. 5illustrates a part of the WSN which is clustered by using our proposed MOFCA algorithm. In this example, a total number of 200 wireless nodes are deployed to the AOI. The size of the AOI is 200m×200m. The base station (sink) is colored in solid black with a larger size when compared to ordinary nodes, each CH is colored in solid red, and cluster member nodes are not filled with color. Node types are pointed out and service area (size/range) of the formed clusters are depicted in grey circles.In this section, the obtained results of the experiments to evaluate MOFCA are presented. To evaluate the performance of the proposed algorithm, we compare it with the existing algorithms, namely LEACH, CHEF, EEUC, and EAUCF, in four different predefined scenarios in which there are two different cases with respect to implemented routing protocol. These cases are the same for all scenarios which are direct transmission to the sink or multi-hop routing. Location of the sink has two varieties in the scenarios: either in AOI or out of the AOI. Node distribution is done either near-uniformly or non-uniformly. By stating manual placement, we mean that nodes are distributed randomly into the manually selected areas which are chosen to form a non-uniform distribution. Thus, we refrain from a setup which might provide an optimal scene for one algorithm but not for another. Total number of eight different setups are tested. A representative snapshot of the AOI that is just taken after the initial node deployment process is also provided in its own subsection to clarify the configuration of each scenario.In all of the scenarios, CHs formed by the LEACH algorithm forward the aggregated data to the sink via direct routing protocol and the desired ratio of CHs for this algorithm is set to 10%. The other algorithms employ either direct or multi-hop routing protocol depending on the selected case of the scenario. The α value of CHEF is set to 2.5 as in [15]. The optimal threshold value is calculated by using the equations in [15] and set as approximately 0.3 for 100 nodes and 0.21 for 200 nodes. For the EEUC [16] and EAUCF [19] algorithms, threshold and coefficient values are set as defined in the original studies. For MOFCA, this value is set as 0.3. Outline of the predefined scenarios is as follows:•In scenario 1, the sink is out of the AOI and nodes are deployed randomly to form a near-uniform distribution.In scenario 2, the sink is at the center of the AOI and nodes are deployed randomly to form a near-uniform distribution.In scenario 3, the sink is out of the AOI and nodes are deployed manually to form a non-uniform distribution.In scenario 4, the sink is at the center of the AOI and nodes are deployed manually to form a non-uniform distribution.In depicted scenarios, elected CHs and clusters are formed at each round. Then each CLUSTERMEMBER node sends 4000 bits of data to its CLUSTERHEAD. Each elected CH aggregates the received packets with a defined ratio before transmitting to the sink. This aggregation ratio is set to 10% as employed in [15] and [19]. The size of data for a CH after aggregation is calculated by using Eqs. (6) and (7). Here, Scompdepicts the value of compressed data, Srecdenotes the size of the received data from each CLUSTERMEMBER node, Raggdenotes the aggregation ratio, and N denotes the number of the cluster member nodes except CLUSTERHEAD in a particular formed cluster. Total of Scompand Srecdenotes the size of the aggregated data, Sagg.(6)Scomp=(Srec×Ragg×N)(7)Sagg=(Srec+Scomp)In order to test the effectiveness of our proposed algorithm, a set of experiments are conducted by using a WSN simulator [19]. This simulator is developed using the C# language and Microsoft.Net Framework 4.0, and is able to simulate the selected protocols in the same setup. However, simulations can also be done by using MATLAB R2012b or MASON simulation libraries. The network is deployed on a 200m×200m AOI and nodes are deployed either to the selected xiand yicoordinates manually or randomly to test the effectiveness. The initial energy of each node is modeled as 1J. All experiments are conducted on an eight-core Intel Xeon processor server running the Windows Server 2012 operating system. Every scenario is simulated 100 times to obtain more reliable and stable results and the average of the results are presented in this section.Metrics considered commonly to estimate the lifetime of the WSNs and efficiency of protocols are First Node Dies (FND), Half of the Nodes Alive (HNA) and Last Node Dies (LND). According to these metrics [22], FND depicts an estimated value for the round in which the first node of the WSN dies. This metric is useful for sparsely deployed WSNs and for the cases where the dying of a single node is crucial. However, for the other cases, the dying of a single node is not so important. The WSN can still do its predefined duty without that first node being alive. Because there are so many cases that are not in the scope of the FND, the HNA metric is proposed to denote an estimated value for the round in which half of the nodes die. This metric is especially useful when considering the coverage aspect of the AOIs by WSNs. The LND metric is also proposed to depict an estimated value for the overall lifetime of the WSN. However, we follow the approach as stated in [19] such that most WSNs will be useless in most cases after half of the nodes die. Therefore, we employ the FND, HNA, and Total Remaining Energy (TRE) metrics to evaluate the performance of the compared algorithms.In this scenario, the sink is out of the AOI and the nodes are deployed randomly to form a near-uniform distribution. The main idea behind choosing this scenario is to exploit the effects of the location of the sink and transmission type over near-uniform stationary distribution type among algorithms. A representative snapshot of the AOI in Scenario 1 is depicted in Fig. 6.CHs formed by the LEACH algorithm forward the aggregated data to the sink with direct transmission in both cases. The other compared algorithms implement direct transmission in the first case, and the EEUC multi-hop routing protocol as depicted in [16] in the second case. Configuration applied in this scenario is depicted in Table 3.The simulation results for different cases are given in Tables 4 and 5, respectively. The maximum competition radius for the EEUC, EAUCF and MOFCA algorithms in direct routing case are set as 80, 105 and 100m, respectively. As can be seen from Table 4, our proposed MOFCA algorithm outperforms all other algorithms when considering all metrics. In this scenario, TRE is measured at round 200. Performance of CHEF is the worst when considering the FND metric; however, it performs better than LEACH if we consider the HNA metric. Distribution of the number of alive nodes with respect to the number of rounds for the first case is depicted in Fig. 7. As can be seen from the figure, the starting point for the death of the deployed nodes in MOFCA occurs after all compared algorithms. Performances of LEACH and EEUC look like similar initially, however when considering the HNA metric, EEUC performs better than LEACH and CHEF both. Also the performance of EAUCF is close to MOFCA, and they pursue a parallel energy consumption phase; however, after the half of the node dies, EAUCF depletes TRE faster than MOFCA till nearly the last nodes. Total remaining energy depletion with respect to the number of rounds for the first case is depicted in Fig. 8. In this case, MOFCA performs 8% better than LEACH, 36% better than CHEF, 10% better than EEUC, and 6% better than EAUCF when considering the FND metric.Table 5 depicts the multi-hop routing case for Scenario 1. The maximum competition radius for the EEUC, EAUCF and MOFCA algorithms in this case are set as 55, 60 and 70m, respectively. Our proposed MOFCA algorithm performs better than all compared algorithms when considering the FND, HNA, and TRE metrics. For the multi-hop routing case, performance of CHEF is similar to the first case. It is outperformed by all algorithms considering the FND metric. However, it performs better than LEACH considering the HNA metric. Distribution of the number of alive sensor nodes with respect to the number of rounds for this case is depicted in Fig. 9. As can be seen from the figure, death of nodes for MOFCA starts after all compared algorithms in this case, too. CHEF pursues a static decrease in TRE after the death of the first node differing from its performance in the first case. Other algorithms perform nearly the same when their performances are compared with their performances in the first case. Total remaining energy depletion with respect to the number of rounds for this case is depicted in Fig. 10. In this case, MOFCA performs nearly 20% better than LEACH, 39% better than CHEF, 18% better than EEUC, and 14% better than EAUCF when considering FND and performs nearly 29% better than LEACH, 23% better than CHEF, 9% better than EEUC, and 5% better than EAUCF for the HNA metric.The sink is at the center of the AOI and the nodes are deployed randomly to form a near-uniform distribution in this scenario. As in scenario 1, the main idea behind choosing this scenario is to exploit the effects of the location of the sink and transmission type over near-uniform stationary distribution type among algorithms. A snapshot of the AOI in Scenario 2 is depicted in Fig. 11.CHs formed by the LEACH algorithm forward the aggregated data to the sink with direct transmission in both cases. Other compared algorithms implement direct transmission in the first case, and the EEUC multi-hop routing protocol in the second case. Configuration applied in this scenario is depicted in Table 6.The simulation results for different cases of this scenario are given in Tables 7 and 8, respectively. The maximum competition radius for the EEUC, EAUCF and MOFCA algorithms in the direct routing case are set as 30, 60, and 65m, respectively. TRE is measured at round 500 in the first case and at round 700 in the second case. As can be seen from Table 7, our proposed MOFCA algorithm outperforms all other algorithms when considering all metrics. Here, performance of the LEACH algorithm is the poorest most probably because it purely follows a probabilistic approach without considering the remaining energy levels of the nodes when selecting final CHs. CHEF performs better than LEACH and EEUC when considering the FND and HNA metrics, which is different from results of the first case of Scenario 1. Total remaining energy depletion with respect to the number of rounds for the first case of this scenario is depicted in Fig. 13. By looking at this result, we may state that the location of the sink has a great impact over the performance of CHEF since this is true for both cases of this scenario.Table 8 depicts the multi-hop routing case for Scenario 2. The maximum competition radius for the EEUC, EAUCF and MOFCA algorithms in the direct routing case are set as 30, 60, and 45m, respectively. Although our proposed MOFCA algorithm performs better than all compared algorithms when considering the HNA metric, EAUCF performs better than MOFCA, which is an interesting result. After mining the results of this case, we come up with a situation that MOFCA creates less number of clusters initially than EAUCF does, because of the competition radius adjustment according to the values of the input variables which causes it to consume more energy initially. However, after some of the nodes die and the density of each node changes accordingly, MOFCA enters a more stable state, catches up EAUCF, and performs better than all of the other algorithms for the HNA and TRE metrics. Distributions of the number of alive sensor nodes with respect to the number of rounds for both cases of this scenario are depicted in Figs. 12 and 14, respectively. The performance of LEACH is the worst in both cases. By looking at the decrease in number of alive sensors in the algorithms, it is correct to state that algorithms except LEACH pursue more or less similar executions. In this case, as stated, EAUCF performs 2% better than MOFCA for the FND metric, but MOFCA performs 25% better than LEACH, 8% better than CHEF and 11% better than EEUC for the same metric. Moreover, MOFCA performs better than all compared algorithms when considering the HNA and TRE metrics. Total remaining energy depletion with respect to the number of rounds for the second case of this scenario is depicted in Fig. 15. Between MOFCA and its closest rival EAUCF, there is a 3% difference in HNA metric, as can be seen from Table 8.In this scenario, the sink is out of the AOI again, as in Scenario 1. However, nodes are deployed manually to form a non-uniform distribution type. A representative snapshot of the AOI in Scenario 3 is depicted in Fig. 16.Configuration of this scenario is the same as Scenario 1, so it will not be given here again. Main differences between Scenario 1 and Scenario 3 are the deployment and distribution types of nodes. Moreover, at each round location of the nodes are changed ±5m in x and y coordinates in order to simulate an evolving non-uniformly distributed network. The simulation results for different cases of this scenario are given in Tables 9 and 10, respectively. As can be seen from Table 9, our proposed MOFCA outperforms all other algorithms when considering the FND, HNA, and TRE metrics. For the direct routing case, TRE is measured at round 150. Here, the performance of CHEF is again the poorest. Performances of EEUC and EAUCF are similar but EAUCF performs slightly better than EEUC. However, MOFCA outperforms all in an observable ratio as can be seen from the FND and HNA metric results. The proposed MOFCA protocol performs 41% better than LEACH, 51% better than CHEF, 19% better than EEUC, and 12% better than EAUCF for the FND metric. For the HNA metric, it is still the best performing algorithm on this set up; however, difference among MOFCA and compared algorithms decrease since the number of alive nodes in MOFCA dies sharply faster than other algorithms after some round because it moves away from creating the necessitated number of clusters. Table 10 depicts the multi-hop routing case for Scenario 3. TRE is measured at round 100 for the multi-hop routing case. Proposed MOFCA protocol performs nearly 3% better than LEACH, 73% better than CHEF, 7% better than EEUC, and 8% better than EAUCF for the FND metric. It also performs better than compared algorithms for the HNA and TRE metrics.According to the results of the both cases, CHEF is the most sensitive algorithm to the transmission type. All algorithms except LEACH suffer in a great deal from the multi-hop transmission type considering the FND metric. However, if we consider the HNA metric, they are not affected from the transmission type as much as CHEF. Distributions of the number of alive sensor nodes with respect to the number of rounds for both cases of this scenario are depicted in Figs. 17 and 18, respectively.As can be seen from Figs. 17 and 18 both, if the sink is out of AOI, equal clustering algorithms suffer from this situation drastically. However, unequal clustering handles this situation in a much more effective manner.The sink is at the center of AOI and the nodes are deployed manually to form a non-uniform evolving distribution in this scenario. The main idea behind choosing this scenario is to exploit the effects of the location of the sink and non-uniform evolving distribution type together with transmission type over compared clustering algorithms. A representative snapshot of the AOI in Scenario 4 is depicted in Fig. 19.Configuration of this scenario is the same as Scenario 2, so it will not be given here again. The difference between Scenario 2 and Scenario 4 are the deployment and distribution types of nodes. Moreover, at each round location of the nodes are changed ±5m in x and y coordinates in order to simulate an evolving network like in previous scenario.Simulation results for different cases of this scenario are given in Tables 11 and 12, respectively. As can be seen from Table 11, our proposed MOFCA protocol performs nearly 57% efficient than LEACH, 29% efficient than CHEF, 10% efficient than EEUC, and 8% efficient than EAUCF for the FND metric. TRE is measure at round 500 in both cases of this scenario. For the HNA and TRE metrics, efficiency is still preserved in the direct routing case.Table 12 depicts the multi-hop routing case for Scenario 4. In this case, MOFCA protocol performs nearly 53% efficient than LEACH, 22% efficient than CHEF, 10% efficient than EEUC, and 8% efficient than EAUCF for the FND metric. For the HNA and TRE metrics, efficiency is preserved like in the previous case. Distributions of the number of alive sensor nodes with respect to the number of rounds for both cases of this scenario are depicted in Figs. 20 and 21, respectively.As in scenario 2, the location of the sink has also a great impact over the performance of CHEF for evolving network types in Scenario 4. According to the experimental evaluations done among algorithms and obtained results, the MOFCA protocol outperforms all algorithms in all predefined scenarios except Scenario 2 multi-hop routing case which shows that this protocol is both energy-efficient and also robust against changes in the location of the nodes, which occur in evolving networks. In Scenario 2, multi-hop routing case, although the First Node Dies earlier than EAUCF, MOFCA performs better than EAUCF when HNA and TRE metrics are considered.If the obtained result sets of the predefined scenarios are analyzed and cross-comparisons are made, it can be concluded that the location of the sink has the uttermost impact on the CHEF protocol. So CHEF can be considered as a location-dependent algorithm of the sink. When the sink resides out of the AOI, it causes nodes to consume more energy because of transmission to longer distances. However, the increase in consumption for LEACH is affected less. The other algorithms are affected more or less the same way. When the impact of distribution type and stationary/evolving networks over protocols are to be investigated, it is realized that the performance of EEUC gets closer to the performances of EAUCF and MOFCA under non-uniform evolving distribution type. Although EAUCF performs better than MOFCA for the FND metric under stationary near-uniform distribution type, it is not valid for the non-uniform evolving distribution type. If we compare the impact of direct transmission with EEUC multi-hop routing over protocols, it does not promote any bad performing algorithm to a better place or the vice-versa, which means that it has an ignorable distinctive value.It is crucial for an algorithm to scale well in order to be used in large-scale networks which is true for most WSNs. For this reason, although we present our experimental evaluation for a hundred of nodes in detail in this section, we test the same predefined scenarios with a thousand of nodes in this subsection in order to show the scalability of our solution. This time, the network is deployed on a 1000m×1000m AOI, and the sink resides at (1250,1250) when it is out of the AOI and at (500,500) when it is in the AOI.We run our experiments over the same WSN which includes a thousand of nodes for all presented scenarios. Although there are eight different evaluated cases in this section, for the scalability analysis in this subsection, we choose two of them, namely Scenario 1 direct routing case and Scenario 4 multi-hop routing case since we do not observe any significant difference in the efficiency comparison of the algorithms in other cases, either. 27 linguistic variables are preserved, however maximum competition and node communication ranges are tuned in order to cover AOI in each scenario. The TRE is measured at round 50 in Scenario 1, and at round 200 in Scenario 4.Table 13depicts the simulation results of the direct routing case for Scenario 1 in this subsection. In this case, although all protocols suffer from the FND metric equally, MOFCA protocol performs nearly 76% more efficient than LEACH, 74% efficient than CHEF, 42% efficient than EEUC, and 4.8% efficient than EAUCF for the HNA metric. For the TRE metric, efficiency is still preserved.Table 14presents the simulation results of the multi-hop routing case for Scenario 4 in this subsection. In this case, the MOFCA protocol preserves the energy-efficiency when considering the HNA and TRE metrics as in the previous case.According to the depicted results in Tables 13 and 14, MOFCA is a more efficient algorithm than the compared ones and it scales well for large-scale networks.For the computational complexity of MOFCA, let us assume that a total number of (n) nodes resides in the AOI. The node clustering process requires comparing the residual energy levels of each node (i) with the remaining nodes that are in its competition range for the election of a CH, which is (n−1) in the worst case. Considering the non-uniform node distribution type, all available nodes might be in this range. For this reason, in the worst case, (n2−n) number of comparisons are done to elect CHs, that is, it is O(n2).

@&#CONCLUSIONS@&#
In this paper, we propose a multi-objective fuzzy clustering algorithm (MOFCA) which is not only energy-efficient but also distribution-independent for WSNs. Our proposed MOFCA algorithm considers remaining energy levels, distance to the sink, and density parameters in calculation of the cluster head competition radius while making use of fuzzy logic for overcoming the uncertainties occurring in the WSN nature. According to the evaluations done, it is a more energy-efficient algorithm than the compared ones and its performance scales well.As stated in the system model, MOFCA includes stationary or mobile nodes. However, this mobility is simulated by the change of the location of nodes without causing energy consumption. Experimental evaluation done on the predefined scenarios presents that the performance of MOFCA is reasonably better than the existing algorithms in all of the experiments done during this study. However, we do not take the LND metric into account, since most of the WSNs are of no use after half of the total nodes die. Therefore, the LND metric is usually not considered as important metric as the other metrics considered here. For WSNs that are deployed dense-enough to provide high-availability to any sensor node, the other compared algorithms may be employed interchangeably on behalf of MOFCA.For future work, intended (voluntary, deliberate) node location changes and energy consumption due to this intentional mobility can also be considered for algorithmic evaluation.