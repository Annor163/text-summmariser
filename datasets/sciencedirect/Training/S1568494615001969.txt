@&#MAIN-TITLE@&#
Performance analyses over population seeding techniques of the permutation-coded genetic algorithm: An empirical study based on traveling salesman problems

@&#HIGHLIGHTS@&#
A review on population seeding techniques for Permutation-coded Genetic Algorithm.Experiments are performed on large sized Traveling Salesman Problem instances.The experimentation analyses are carried out using ANOVA and DMRT statistical tools.Best performing population seeding techniques are identified w.r.t. assessment criteria.

@&#KEYPHRASES@&#
Genetic algorithm,Population seeding technique,Traveling salesman problem,Tsplib,Order distance vector,Combinatorial problem,

@&#ABSTRACT@&#
The genetic algorithm (GA) is a population based meta-heuristic global optimization technique for dealing with complex problems with very large search space. The population initialization is a crucial task in GA because it plays a vital role in the convergence speed, problem search space exploration and also the quality of the final optimal solution. Though the importance of deciding problem specific population initialization in GA is widely recognized, it is hardly addressed in the literature. In this paper, different population seeding techniques for permutation-coded genetic algorithm such as random, nearest neighbor (NN), gene bank (GB), sorted population (SP), selective initialization (SI) along with three newly proposed ordered distance vector based initialization techniques have been extensively studied. The ability of each population seeding technique has been examined in terms of a set of performance criteria such as computation time, convergence rate, error rate, average convergence, convergence diversity, nearest–neighbor ratio, average distinct solutions and distribution of individuals. One of the famous combinatorial hard problems of traveling salesman problem (TSP) is being chosen as the testbed and the experiments are performed on large sized benchmark TSP instances obtained from standard TSPLIB. The experimentation analyses are carried out using statistical tools to claim the unique performance characteristic of each population seeding techniques and best performing techniques are identified based on the assessment criteria defined and the nature of the application.

@&#INTRODUCTION@&#
Genetic algorithms (GAs), the bio-inspired and stochastic global optimization techniques are most popular in dealing complex problems with very large search space efficiently in majority of the cases. The fundamental model of GA is to generate a population of feasible solutions and to manipulate using appropriate genetic operators to evolve the required optimal or near optimal solution. Thus, GA can be referred as a type of global search technique that operates on the feature of collection of solutions rather than that of a single solution. This characteristic enables the GA as a powerful tool for solving search and optimization problems with complex search space [49].The life cycle of classical GA consists of the several phases like initial population (population seeding), selection, crossover, mutation and termination constraint. In which, first phase occurs only once and the rest of the phases are repeated until the termination condition is satisfied. Generally, the classical GA takes more computation time to evolve at an optimal solution, which may be rectified using heuristics in a problem specific manner. In other words, the heuristics may definitely reduce the computation time and to improve the overall ability to evolve the optimal solution and thus resulting in Hybrid GA [1,2,41,42,48]. Commonly, two classes of heuristics are discussed in Hybrid GA [3], namely construction heuristics and improvement heuristics. The construction heuristics help to construct initial population of solutions for the problem starting from an empty solution to a complete and feasible solution. The improvement heuristics uses a selective set of solutions and applies genetic operators iteratively. Thereby, it attempts to improve the quality of the solution and replace the subsequent current solution with the better optimal solution evolved. The Hybrid GA with improvement heuristics also uses the combination of two or more optimization algorithms to improve the overall performance of GA. This direction of research includes notables works such as hybrid algorithm using differential evolution algorithm (DEA) [4,5], artificial bee colony (ABC) and Taguchi method [6], DEA and Immune System algorithms [7], DEA and Taguchi's method [8], ABC and Taguchi method [9] and Immune Algorithm and Hill Climbing local search algorithm [10]. These works proved the effectiveness of the hybridization in the variety of applications.With respect to the construction heuristics, variety of population initialization or population seeding techniques has been proposed based on the knowledge available about the problem at-hand [11–13]. If no prior knowledge about the optimal solution for the problem is available, then random population initialization is the most commonly used method to generate an initial population of solutions [14]. Conversely, in the large search space, when a priori information about the optimal solution for the problem is available, then the initial population of solution can be generated in specific to the problem and so as to explore the high quality solution regions more elaborately than other areas, particularly in the large search space. Although the quality of the solutions generated using heuristic initialization are high so that it may help the GA to obtain the better solutions faster, but it ends up in exploring a small part of the search space and never find the global optimal solutions because of the lack of characteristics such as randomness, individual diversity and potential sequence in the initial population generated [15].In [12], authors enlighten that, in GA, the computation time taken to generate the initial population is normally lesser than a normal generation. Moreover, populations in the each iterative generation process depend, somewhat, on its preceding population and, ultimately, on the initial population. Therefore, the problem specific initial population in GA has a special role on to speed up the computation and to obtain the final optimal solution. The population initialization is more important than any other stage of operation in GA to largely increase the efficiency [16,17] and to get the nearest value to the required optimal solution. Olga et al. [17] believes that the GA with random initial population technique is simple, though the generated population of individuals may contain infeasible and bad quality solutions which take more computation time to converge to an optimal solution.In [17], the authors discuss about the need to focus on to improve the quality of individuals generated at the population initialization stage of GA and also the requirement for the problem specific strategy for the initial population generation to speed up the convergence of the GA [18]. In Rong et al. [47], the authors studied the relation between the quality of the solutions in the initial population and the quality of the final optimal solution especially when the population size is considerably smaller. In [19], the authors have proved that the vital asset of GA to obtain the optimal solution for a problem is to generate individuals with good quality and maximal diversity in the initial population stage. Grefenstette et al. [39] has shown that the seeding the initial population using the knowledge of the problem can potentially improve its ability to converge to an optimal solution.Though the importance of selecting problem specific population initialization in GA is extensively recognized, it is hardly addressed in the literature. In [14], the authors expressed that although population initialization plays a critical role in deciding the speed of convergence and also the fitness of optimal solution generated, there are only a few reported researches in this field. In [11], the authors claim that the role of the initial population is widely ignored. The whole area of research is usually set aside by a statement “generate an initial population,” without implying how it should be done. From the discussion, the following two important verdicts can be derived:•Problem specific population seeding technique improves the effectiveness of GA to obtain the optimal solution, andThe techniques proposed for population seeding are very limited and analyses of the performance characteristics of those techniques are not found in literature except [20].Thus, in this paper, different population seeding techniques for permutation-coded genetic algorithm such as random [21,40], nearest neighbor (NN) [22,23,25,50], gene bank (GB) [2], sorted population (SP) [17], selective initialization (SI) [47], ODV based EV, ODV based VE and ODV based VV [24] have been studied and the performance characteristics of each population seeding technique has been examined using the factors such as computation time, error rate, average convergence, convergence diversity and average distinct solutions. The popular combinatorial optimization problem of Traveling Salesman Problem (TSP) is being chosen as the testbed to experiment and analyze the performance characteristic of the population seeding techniques. Experiments were performed over the small scale (<10,000 cities) and large scale (>10,000 cities) benchmark TSP instances obtained from the TSPLIB [comopt.ifi.uni-heidelberg.de 2013]. To the best of our knowledge, there is no large scale benchmark assessments have been performed to analyze the performance of population initialization stage of the GA. The performance of different population seeding techniques has been assessed using Greedy Crossover (GX) as the recombination operator which facilitates to assess the impact of different seeding techniques in the overall performance of the GA [2,20]. The purpose of selecting GX for experiments is that the GX tries to utilize the potential induced at the population initialization stage of GA rather than introducing more new information into the offspring. Hence, the effectiveness of the population seeding technique can be demonstrated at the end of the GA.The remainder of this paper is organized as follows: Section 2 describes the operational procedure with algorithm for different population seeding techniques of permutation-coded genetic algorithm. The experimental design, in focus of experimental environment and performance assessment criteria, for analyzing the performance characteristics of different population seeding techniques is presented in Section 3. Computational experiments and analysis of results are discussed in Section 4. A summary of the discussion, conclusive remarks and directions for future research are covered in Section 5.This section presents the brief review on different population seeding techniques existing for the permutation coded genetic algorithm with respective algorithms and Fig. 1presents the list of variables used and input/output for different population seeding algorithms discussed this section.Random population initialization is the simple and common population generation technique preferred when lacking prior information on the problem to solve. In literature, the general statement “generate an initial population,” refers generating the initial population using the random initializing technique. In random initialization technique, for TSP, the successive cities of the initial solutions are chosen randomly. During the generation of each individual, a random number is generated randomly between 1 and ‘n’, if the generated number is already in the current individual, then a new number is generated or else the generated number is appended to the current individual and it is repeated again until the size of the individual reaches ‘n’. The algorithm for random population initialization is presented in Fig. 2and a variety of random number generation methods have been proposed such as quasi random, sobol random and uniform random sequence [21,40].Nearest neighbor (NN) tour construction heuristic is a familiar choice, in alternative for random population initialization, to construct the initial population of solutions for solving TSP with GAs [22,23,25,37,50]. In NN technique, each individual starts with a random city and then append the city nearest to the starting city. From there, the city nearest from the current city that was not in the partially built individual is added and the same procedure is repeated until all the cities are included in the current individual. Since individuals in the NN population seeding are constructed with city nearest to the current city, such good individuals can refine the subsequent search in the next generations [23] and Fig. 3depicts the algorithm for nearest neighbor population seeding technique.Yingzi et al. [2] proposed a Greedy GA (GGA), in which the population seeding is performed using gene bank (GB). The GB technique is intended to generate the initial population of solutions with better quality and diversity. The GB is built by assembling the permutation of ‘n’ cities based on their distance. Therefore, the individuals in the population that is generated from the GB are of above-average fitness and short defining length. The algorithm for GB population seeding technique has been presented in Fig. 4and the working principle can be exemplified as follows: For a TSP of IndivLen cities, the IndivLen cities are permuted and gathered to construct a GenePool. The GeneSize cities that are closer to the city i are encoded to construct a gene pool, where GeneSize is a number less than or equal to IndivLen−1. Thus, the GenePool is a matrix A whose size is GeneSize×IndivLen−1. The element of A[i][j] is the jth closest city to city i. Therefore, the GeneSize closest cities constitute the whole ith row of GenePool for the city i.The initial city i for each solution is initialized randomly and from the ith row of gene bank, city j is then selected where j is the nearby one in the unvisited elements of the ith row. Then, city k is selected from the jth row of gene bank as the next city. If all the cities of the jth row have been selected, then next city is chosen randomly from the set of unvisited cities from the city j. This method is repeated so that the solution is generated by the size of IndivLen. The PopSize numbers of individuals are generated to produce the required initial population POP.Olga et al. [17] proposed a modified GA with sorted initial population method by the concept that the better parents would produce better offsprings. In Sorted Population (SP) technique, a large population of initial solutions is generated and sorted in accordance to their fitness values. Eventually, a certain number of individuals with bad fitness are removed and resulting in a population of individuals with above average fitness, in case of TSP—short distance. It is assumed that with a very large initial population there is a high probability of having good solutions in the population. This approach is similar to the random initialization technique, but the possibility of having good fitness individuals is relatively higher. Fig. 5illustrates the algorithm for sorted population seeding technique and the working principle of the SP technique can be demonstrated as,Let POP be the required population of individuals of size PopSize. The large population individuals LargePop of size LargepopSize is generated and the LargepopSize can be derived as,(1)LargePopSize=x×Popsizewhere ‘x’ is the multiplicative factor, usually set as 10.The LargePop is sorted using the fitness value of individuals and the first Popsize number of individuals are chosen for the population POP.In 1997, Yang proposed a selective initialization scheme using k-nearest–neighbor subgraph. In this technique, a k-nearest–neighbor subgraph is formulated, from the distance matrix, as a graph includes all routes of cities ciand cj, such that the city ciis among the k-nearest neighbors of city cjor city cjis among the k-nearest neighbors of city ci. (i.e.) a list of k-nearest neighbors for each city is generated in advance.The value of ‘k’ is assigned based on the size of the problem taken. In selective initialization, higher priority is given to the routes with cities that belong to the k-nearest–neighbor subgraph while generating individuals as presented in the algorithm in Fig. 6. Consider an instance of next city selection using SI technique, from a city c, first attempt to randomly select a next city from the c's k-nearest neighbor list and if all cities of c in the k-nearest neighbor list have already been used, then the next city is chosen randomly.The hybrid population seeding techniques, in literature, which have the benefit of good quality individuals and fast convergence lacks in terms of randomness, individual diversity and ability to converge to the global optimal solution. Therefore, an efficient ordered distance vector (ODV) based population seeding techniques with characteristics of randomness, individual diversity and potential sequence is proposed in Moganarangan et al. [44] and Victer et al. [28] and detailed theoretical discussion can be found in [26]. In respect to these characteristics of potential sequence and individual diversity, three different varieties of ODV based population seeding techniques have been proposed namely ODV-EV, ODV-VE and ODV-VV techniques. The best adjacent (ba) number is an important factor and derived using the assumption that, in an optimal solution, any city ciis connected to city cjsuch that cjis one of the ci's nearest ‘ba’ number of cities. The value of ‘ba’ number plays a vital role in providing individual diversity of each individual in the population.In ODV method, initially Ordered Distance Matrix (ODM) of size [indivLen×ba] is formulated using the ‘ba’ value and the Distance Matrix for the given problem. The methods of generating individuals using the formulated ODM can be exemplified as follows.In ODV-EV method [27,28], each individual starts with the same city and a new random number ‘bax’ within the ‘ba’ is generated before adding each city into every individual and the algorithm is presented in Fig. 7. The individuals created in this method have high potential permutation of cities and thus the convergence time can be reduced. The PODV-VE generated using ODV-EV method can be represented as,(2)PODV-EV=θ1(1)θ1(c2)θ1(c3)θ1(cn)θ2(1)θ2(c2)θ2(c3)θ2(cn)θ3(1)θ3(c2)θ3(c3)θ3(cn)…………θo(1)θo(c2)θo(c3)θo(cn)where θ is an individual in the population PODM–EV,ois the total number of individuals in PODM–EV, n is the size of the problem instance and the first city remains same for each individual (i.e.)θ1(1)≡θ2(1)≡θ3(1)…θo(1).In ODV-VE method [28,29], a new random number ‘bax’ within the ‘ba’ is generated for each individual created and the same random number is used to add every the cities in individual. In the population, there is exactly ‘ba’ number of individuals that starts with the same initial city and the algorithm is presented in Fig. 8. The PODV-VE generated using ODV-EV method can be represented as,(3)POD-VE=θ1(1)θ1(c2)θ1(c3)…θ1(cn)θ2(1)θ2(c2)θ2(c3)…θ2(cn)⋅⋅⋅⋅⋅⋅⋅⋅θba(1)θba(c2)θba(c3)θba(cn)θ1(2)θ2(c2)θ3(c3)…θ3(cn)⋅⋅⋅⋅⋅⋅⋅⋅θba(2)θba(c2)θba(c3)θba(cn)θ1(n)θ2(c2)θ2(c3)θ2(cn)⋅⋅⋅⋅⋅⋅⋅⋅θba(n)θba(c2)θba(c3)θba(cn)where the first city remains same for ‘ba’ number of individuals (i.e.)θ1(1)≡θ2(1)≡…θba(1),θ1(2)≡θ2(2)≡…θba(2)and so on.In ODV-VV method [26,29], a new random number ‘bax’ within the range of 1 and ‘ba’ is generated before adding each city into every individual and each individual starts with the random city and the algorithm is presented in Fig. 9. The individuals created in this type have high potential permutation of cities and also have good individual diversity. This type of population seeding is most effective and can produce the best solution with minimum convergence time. The PODV–VV generated using ODV-VV type can be represented as,(4)PODV-VV=θ1(1)θ1(c2)θ1(c3)…θ1(cn)θ2(1)θ2(c2)θ2(c3)…θ2(cn)θ3(1)θ3(c2)θ3(c3)…θ3(cn)…………θo(1)θo(c2)θo(c3)θo(cn)This type of population seeding technique is the most recommended for effective search for best solution.

@&#CONCLUSIONS@&#
