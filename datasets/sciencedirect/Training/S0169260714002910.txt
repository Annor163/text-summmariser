@&#MAIN-TITLE@&#
Automated evaluation of physical therapy exercises using multi-template dynamic time warping on wearable sensor signals

@&#HIGHLIGHTS@&#
We use five wearable motion sensor units on the arms or legs.We acquire a physical therapy data set with 1320 exercise executions.We develop the MTMM-DTW algorithm for multiple exercise templates.The algorithm can detect, classify, and evaluate physical therapy exercises.We achieve 93.5% accuracy for exercise classification.

@&#KEYPHRASES@&#
Physical therapy,Motion sensors,Inertial sensors,Dynamic time warping,Pattern recognition,Motion capture,

@&#ABSTRACT@&#
We develop an autonomous system to detect and evaluate physical therapy exercises using wearable motion sensors. We propose the multi-template multi-match dynamic time warping (MTMM-DTW) algorithm as a natural extension of DTW to detect multiple occurrences of more than one exercise type in the recording of a physical therapy session. While allowing some distortion (warping) in time, the algorithm provides a quantitative measure of similarity between an exercise execution and previously recorded templates, based on DTW distance. It can detect and classify the exercise types, and count and evaluate the exercises as correctly/incorrectly performed, identifying the error type, if any. To evaluate the algorithm's performance, we record a data set consisting of one reference template and 10 test executions of three execution types of eight exercises performed by five subjects. We thus record a total of 120 and 1200 exercise executions in the reference and test sets, respectively. The test sequences also contain idle time intervals. The accuracy of the proposed algorithm is 93.46% for exercise classification only and 88.65% for simultaneous exercise and execution type classification. The algorithm misses 8.58% of the exercise executions and demonstrates a false alarm rate of 4.91%, caused by some idle time intervals being incorrectly recognized as exercise executions. To test the robustness of the system to unknown exercises, we employ leave-one-exercise-out cross validation. This results in a false alarm rate lower than 1%, demonstrating the robustness of the system to unknown movements. The proposed system can be used for assessing the effectiveness of a physical therapy session and for providing feedback to the patient.Physical therapy is an important type of rehabilitation for patients with various disorders. Cardiopulmonary medicine, neurology, orthopedics, and pediatrics are branches of medicine that may benefit from physical therapy [1,2]. Physical therapy usually requires exercising in a hospital or a rehabilitation center under the supervision of a specialist who assigns one or more exercises to the patient [3]. After learning how to perform the exercises correctly, patients usually need to continue exercising at home, where they receive no feedback [4]. Even at the hospital, specialists cannot follow each patient continuously during their exercise sessions because the former often alternate between several patients or have other tasks to do, a situation that can result in insufficient, inaccurate, and often subjective feedback [5,6].An important issue in physical therapy is to evaluate the exercises and assess the effectiveness of an exercise session. Previous studies consider energy expenditure [7], the total duration of the exercise session, or the time period during which the patient is physically active [8]. The system in [3] generates a warning whenever relevant parameters exceed predefined thresholds to reduce the risk of over-exercising. These approaches may be misleading or fail if the patient performs the exercises incorrectly or at an unusual pace. Previous studies have not considered detecting sequential exercise executions and providing an objective evaluation of their accuracy to assess the effectiveness of a physical therapy session. Such a process is also difficult and tedious for a specialist, even when he is responsible for only a single patient, and impossible when he is monitoring several. Patients and specialists would highly benefit from an automated system.Several different sensor modalities are used in physical rehabilitation, including inertial [9–12], visual [13–15], strain [4,16], medical [6], physiological, kinetic, and environmental sensors [17], or some combination of these [18,19]. Automatic monitoring of the people performing physical therapy exercises should be done without restricting their independence, intruding on their privacy, or degrading their quality of life. A commonly used approach is to fix cameras in the environment, which intrudes on privacy and usually has a relatively high installation cost. The main advantage of this approach is that the person does not have to wear or carry any sensors or devices on their body. This approach may also eliminate problems related to misplacing sensors on the body, although some vision-based systems require wearing/pasting special tags or markers. This method may be acceptable when the person always performs exercises at the same place, but when the exercises are performed in different places, e.g., indoors and outdoors, this approach becomes unsuitable. We believe that wearable sensors are superior to camera systems in these respects.In [20], participants 3–9 months post-stroke with mild to moderate motor impairment of one arm wore an accelerometer on each arm outside the laboratory for three days before and after treatment or an equivalent no-treatment period. The use of the more impaired arm in daily life was assessed using low-pass filtered accelerometer recordings. Other studies that focus on post-stroke rehabilitation are [21–23].In numerous studies, a 3D real-time human body model is constructed to observe movements [5,24,25]. In [24,26,27], patients perform the given exercises to complete tasks in video-game-like virtual environments, making exercise sessions more enjoyable.Another approach to observing movements is to use biofeedback devices that transform sensor measurements from the body into sound, a blinking LED, or an observable shape on a screen [28–30]. Biofeedback provides detailed information regarding the lengthening, shortening, and physical exertion of a muscle. It also allows comparing the data of a healthy muscle to a non-healthy one when performing the same exercise. Biofeedback devices are sometimes combined with electromyography. Although these devices have become portable recently, older devices are immobile and costly, and are mostly used in hospitals or rehabilitation centers [31]. In addition, most devices either do not evaluate a patient's performance or they evaluate the results using simple thresholding. Hence, they require a specialist or the patient to evaluate the feedback [31], both of whom may be highly subjective. Therefore, biofeedback devices cannot replace an attendant specialist most of the time.Below, we provide a summary of studies aiming to assess the accuracy of physical therapy exercises or classify them as correct/incorrect:Fergus et al. [5] propose a tele-rehabilitation system that collects and stores the patient's motion data, utilizing body area and sensor networks, including inertial sensors. The system virtually simulates the patient's body motions on a 3D human body model in real time or using the stored data. The physician or physical therapist monitors the motions remotely to evaluate the patient's progress. This proposed solution is impractical and does not significantly improve inspection time because the system provides no information regarding the patient's movement capability, movement accuracy, or progress.Using five body-worn tri-axial accelerometers, Taylor et al. [11] build a classifier that labels incorrectly performed exercises for knee osteoarthritis, a degenerative disease of the knee joint. Three exercises are performed by nine healthy subjects. The exercises are performed in the correct way as well as with particular errors. Several features extracted from the accelerometer data are used in the AdaBoost classifier to classify the exercises as correct or as having a particular error type. However, multiple errors are not allowed by the methodology and the classification accuracy is about 70% in most cases, which is not very high.In [12], an Android application estimating the accuracy (i.e., score) of balance board exercises is developed, using a smartphone's internal accelerometer and magnetometer. A complex rule-based algorithm is proposed to obtain a score value closest to the score given by an expert; the difference between human and automatic scores is found to be fewer than 10 points in more than 75% of the exercises on a 0 to 100 scale. However, the proposed methodology does not yield an optimal solution, and different rule-based scoring algorithms are used for different exercise types, which makes it difficult to add a new exercise to the system.In the MyHeart system [16], the accuracy of arm movements for post-stroke rehabilitation is determined using strain sensors. Healthy subjects wearing tight-fitting garments with printed strain sensors imitate how post-stroke patients might perform each of seven exercise types correctly and incorrectly under the supervision of a physician or therapist. An exercise is considered correctly performed if the similarity between the recorded signal and a pre-recorded template, calculated by the open-end DTW (see Appendix A.2), exceeds a threshold [12]. The system provides real-time feedback to the patient with an average classification accuracy of 85%. The main disadvantage of the system is the difficulty of putting on the garment for a post-stroke patient, even with help.In [4], strain sensors worn on the arm are used to provide real-time feedback to patients undergoing motor rehabilitation. Seven exercises are executed correctly and incorrectly at various speeds by a healthy subject wearing a left-handed sensorized long-sleeved shirt. The system checks whether the measured signals “match at most once a prefix of one of several stored reference templates” [4] to detect which exercise is being performed. The distance obtained by the open-end DTW algorithm is used as a similarity measure between the strain signals and fed to a one-nearest-neighbor classifier both for exercise recognition and correctness/error type classification.The m-Physio platform [10] classifies physical rehabilitation exercises using an accelerometer. A smartphone with a tri-axial accelerometer is fixed to the patient's leg or arm depending on the type of exercise he performs. The patient first performs the exercises correctly under the supervision of a specialist who records the reference templates. The signals recorded from test exercises are compared with the reference templates using the ordinary DTW algorithm. One disadvantage of the m-Physio platform is the need to determine the values of four parameters in the exercise-capture phase: the minimum and maximum duration of each exercise, the sampling frequency of the accelerometer, and the amount of smoothing applied to the signals. The specialist sets the values by trial and error, which may easily alter the system performance. When using the system, the patient needs to touch the screen to mark the beginning and the end of each exercise execution, which is another disadvantage because some patients (e.g., elderly, disabled, and/or stroke patients) may not be able to touch the screen in a timely manner or may forget to do so. The system provides feedback as correct, incorrect, too short/long in time for each execution. The patient's statistics are uploaded to a centralized database so that the specialist can remotely check his progress through a web interface.In the previous studies, exercise executions are usually cropped manually and considered in an isolated fashion; the subject needs to mark each execution by pressing a button or perform each exercise when informed by the system by a sound or on-screen notification. Sequential executions and idle time periods are not considered.We propose a completely autonomous system to detect the sequential executions of one or multiple exercise types during an exercise session, classify the exercise type, evaluate each execution as correctly/incorrectly performed, and identify the error type and idle time periods, if any [32]. During the physical therapy session, the patient wears small, inexpensive motion sensor units. The sensors are lightweight and can be easily worn and carried, making home-based rehabilitation possible. The patient first executes the exercises under the supervision of a specialist who records reference templates. The patient can then perform the exercises anywhere, provided that he properly wears the sensors. He does not need to press a button to mark the beginning or end of an execution or select the exercise type he intends to perform. The system compares the detected executions with the templates recorded while under supervision, and quantifies their similarity. We develop the multi-template multi-match dynamic time warping (MTMM-DTW) algorithm as a natural extension of DTW. Using MTMM-DTW, multiple template sequences of different durations can be searched in a test sequence of any duration based on the DTW dissimilarity measure. The system can provide statistical information about the exercise session at any desired level of detail to the specialist and provide feedback to the patient. The primary applicability of the system is to the rehabilitation of orthopedic patients. This is an early proof-of-principle study in the pre-clinical stage and the methodology has not yet been demonstrated in clinical settings or to be clinically efficacious.This paper is organized as follows: In Section 2, we describe the MTMM-DTW algorithm. We present the experimental methodology and the results in Section 3. In Section 4, we provide a discussion of the results and related issues. Finally, we draw conclusions and indicate directions for future research in Section 5. We provide background information on the DTW algorithm and its variations in Appendix.We develop an extension of the DTW algorithm for detecting multiple occurrences of multiple exercise types in a sequence recorded during a physical therapy session. This method makes it possible to classify exercise types, identify whether an exercise is performed correctly (while identifying the type of error, if any), and count the number of exercises performed.We use an approach based on DTW which has more flexibility than using absolute and Euclidean distance measures because it allows time warping in comparing and matching similar parts of two sequences (see Fig. 1for an example), which may be beneficial when time variations in different executions of the same physical therapy exercise are considered. The patient may perform the exercise at different paces, which should be tolerated to some extent. On the other hand, the distance measure should not tolerate significant differences in amplitude that may occur; for example, if the patient performs the exercises at a low amplitude or holds for some time in the wrong position. If absolute or Euclidean distance measures are used, both time and amplitude variations affect the measured distance and it is not possible to allow one of them while penalizing the other. In contrast, the DTW algorithm naturally compensates for time variations but not for changes in amplitude, both of which are more desirable in this scheme.The ordinary DTW algorithm matches the first and last samples of two sequences, x and y (not necessarily of the same length), to each other, possibly warping the time axes in between to obtain maximum overall similarity. On the other hand, the subsequence DTW (SDTW) algorithm matches the subsequence of the test sequence y that is most similar to the template sequence x. If the template sequence may occur more than once in the test sequence, it may be desirable to detect all of the subsequences of y that resemble x. In the single-template multi-match DTW (STMM-DTW) algorithm that we developed for this purpose [33], the SDTW algorithm is executed more than once to detect possibly multiple occurrences of a single template sequence x in the test sequence y. In some applications, it may be necessary to search for multiple templates in a test sequence. To detect possibly multiple occurrences of each of the K templates x(1), x(2), …, x(K) in y, we propose the MTMM-DTW algorithm (see Fig. 2).Algorithm 1MTMM-DTW algorithm1:M←length(y)2:fork=1→Kdo3:N(k)←length(x(k))4:Mleft(k)←M{Mleft is the maximum number of successive unmatched samples in y for the kth template x(k)}5:y˜(k)←y{the test sequence y replicated asy˜(k)to be used for each template x(k)}6:end for7:whileMleft(k)≥αN(k), ∃k∈{1, …, K}do8:computeSDTW(x(k),y˜(k))and save the SDTW(k) distance,m1(k), andm2(k)∀k(m1 and m2 are the first and the last sample indices of the matched subsequence of y(k))9:k*←argmink∈{1,…,K}1N(k)SDTW(k){find matching subsequence of the template having the minimum DTW distance per sample of the template by normalizing DTW distances with respect to the template lengths}10:ifm2(k*)−m1(k*)+1≥αN(k*){the last matched subsequence is sufficiently long}11:thenadd the last match with template number k* to the list12:y˜(k)(m1(k*):m2(k*))←∞,∀k{prevent the matched samples from being matched in the DTW executions that follow for all templates}13:elseignore the last match {the last matched subsequence is too short}14:y˜(k*)(m1(k*):m2(k*))←∞{prevent the last matched subsequence from being matched to the same template in the DTW executions that follow}15:end if16:fork=1→Kdo17:Mleft(k)← the maximum number of successive finite-valued samples in y for the kth template x(k)18:end for19:end whileBecause the duration of each template is, in general, different, and the DTW distance is the cumulative sum of the pairwise costs between the samples of the warped template and test sequences, the DTW distances need to be normalized by the length of the template to be able to make a fair comparison. For this reason, when we execute the SDTW algorithm for a given template (line 8), we scale the DTW distances of the subsequences matching that template by the length of the template (line 9).11The normalization is approximate because it depends on the step pattern and the values of the local weights,wh,wv, andwd, used in DTW [34], see Eq. (9) in Appendix.Then, we select the subsequence with the minimum normalized DTW distance.An optional condition may be imposed on the matches if desired: The length of the matching subsequence must be at least some fraction α of the length of the matching template N(k) (in time samples). If a matched subsequence satisfies this length criterion, we save the matching template number, the corresponding sample interval in the test sequence, and the DTW distance in the list of matched subsequences. Then, we set the matched samples of the test sequence y to ∞ to prevent them from matching again to any template in the SDTW executions that follow (line 12). If the subsequence does not satisfy the length criterion, we do not save it, but still set the samples in y corresponding to this subsequence to ∞, but only for the most recently attempted template to prevent the same subsequence from matching to that template in the DTW executions that follow (line 14). Otherwise, exactly the same subsequence would be matched to the same template in all of the following iterations because SDTW always finds the best matching subsequence and does not contain any randomness. Thus, the available sample range of y is different for each template and keeps changing as we execute the algorithm. If a subsequence does not satisfy the length criterion, there are two possibilities in the following DTW execution: (1) another subsequence matching the same template at a different location in y (satisfying or not satisfying the length criterion) may be found; or (2) a subsequence matching another template (at the same or different location) in y may be found. Therefore, the subsequence that did not satisfy the length criterion for a particular template must be invisible to that template so that the template may match with subsequences at different positions [case (1)], but at the same time visible to other templates to allow finding another match at the same position (because the previous match is ignored) [case (2)]. This procedure is repeated until, for each template, the maximum number of successively available (finite-valued) samples in y becomes smaller than some fraction α of the length of the template. After this point, it is not possible for any remaining subsequence to satisfy the length criterion even if it matches.In the MTMM-DTW algorithm, the matched subsequences (associated either with the same or different templates) in y are not normally allowed to overlap. This restriction may be relaxed to allow some overlap by replacing the sample range(m1(k*):m2(k*))in lines 12 and 14 by(m˜1(k*):m˜2(k*)), wherem˜1(k*)=(1−β)m1(k*)+βm2(k*)andm˜2(k*)=βm1(k*)+(1−β)m2(k*), with β∈(0, 1] being the ratio of the matched subsequences that are allowed to overlap in the beginning and at the end with other subsequences. If β=0, overlapping is not allowed.The advantages of the MTMM-DTW algorithm are that: (1) the number of templates, the number of subsequences, their positions on the sample axis, and the length of the test sequence y need not be known; (2) the templates and the test sequence x and y may be multi-dimensional (see Appendix A.1); (3) trivial false matches with a subsequence of length much shorter than the matching template may be eliminated by imposing a condition on length; (4) the amount of overlap between the matched subsequences can be adjusted as desired; and (5) all occurrences of the templates in the test sequence can be detected and classified. The algorithm can be used for several different purposes: classifying a sequence given multiple exercise templates (exercise pattern recognition), detecting the occurrences of single or multiple templates in the test sequence with their time instances and durations, estimating the number of repetitions of all templates in the test sequence (counting the exercises), or all three. Values of the local weightswh,wv, andwd(see Appendix) and the parameters α and β of the MTMM-DTW algorithm can be tuned to the application.A related algorithm is proposed in [35] to recognize multiple templates in sequential recordings of dance motions. The data set is acquired using a marker-based optical motion capture system. It is assumed that the recordings consist of dance figures that follow one another, where there are neither idle periods nor unmatched intervals. The recording is segmented using the open-end DTW that finds the best-matching template and terminates the segment. Thus, that algorithm is not as flexible as the MTMM-DTW algorithm proposed here.We employed wearable motion sensor units to capture the exercises performed by five subjects who were free from movement disorders. This study was approved by Bilkent University Ethics Committee for Research Involving Human Participants and the participants gave informed consent to the work. We used five MTx units (Fig. 3) manufactured by Xsens Technologies [36], each containing three tri-axial devices: an accelerometer, a gyroscope, and a magnetometer. We calibrated the sensors using the system's default calibration procedure and selected a sampling frequency of 25Hz. The operating ranges of three of the accelerometers (units 1–3 in Fig. 4) were ±18g, and two of them (units 4 and 5) were ±5g, where g=9.807m/s2 is the gravitational constant. The operating ranges of the gyroscopes and magnetometers were ±1200°/s and ±75μT, respectively.Because the exercises we consider in this study involve only arm or only leg movements, we used two suitably designed sensor configurations to capture these motions (see Fig. 4 for details). The sensor units can be freely configured to properly capture the exercise movements and units can be easily added or removed when needed. The system does not require prior knowledge of the sensor configuration; however, the same configuration should be used while recording the templates and while exercising. The system is highly flexible and modular in these respects, especially when compared with rule-based systems that model the human body to evaluate the exercises.Because each unit contains three tri-axial devices, 45 (= 9 axes×5 units) discrete-time sequences were recorded during each experiment. We normalized the acquired sequences separately for each sensor type so that, for example, accelerometer sequences in the whole data set have unit variance. The same holds for the gyroscope and magnetometer sequences.The eight exercises we consider in this study were suggested and approved by a physical therapy specialist [37]. They are the most commonly assigned exercises to patients for orthopedic rehabilitation (see Fig. 5). A brief description of each is provided below:1.Sitting on a high flat surface, raise the right leg, hold for 5s, keeping the right knee straight, and return to the initial position.Sitting upright on a stool with arms hanging downwards, bend the upper body 30° forward, hold for 5s, and return to the initial position.Lying flat on the back on a flat surface, raise the right leg from the hip joint, keeping the right knee and left leg straight, hold for 5s, and return to the initial position.Lying flat on the left side on a flat surface, raise the right leg from the hip joint, keeping the right knee and left leg straight, hold for 5s, and return to the initial position.Lying facedown on a flat surface, raise the right leg from the hip joint, keeping the right knee and the left leg straight, hold for 5s, and return to the initial position.Sitting on a chair, holding a 1kg weight in the right hand, extend the right arm in front of the body to just above the right knee with the palm facing upwards. Bending the elbow joint, raise the weight until the forearm is perpendicular with the thigh, hold for 5s, and return to the initial position.Standing upright with the right arm holding a 1kg weight and hanging straight down, raise the weight to the right side from the shoulder joint to a horizontal position while keeping the elbow joint straight, hold for 5s, then return to the initial position.Lying facedown on a raised flat surface, hang the right arm over the side at the elbow. Raise the right forearm to straighten the elbow, hold for 5s, then return to the initial position.We designed the experiments to test whether the proposed MTMM-DTW algorithm is able to detect the exercises within a long recording of a typical exercise session while identifying idle time periods, classify each exercise type, estimate the number of repetitions per exercise, determine whether an exercise is performed correctly, and identify the error type, if any.Two common types of errors that patients make during exercise sessions are:•Performing the movements too fast; patients do not hold the position for the necessary amount of time because they want to quickly complete the number of repetitions required.Performing the exercises at a low amplitude without completely executing the movement. This error may be caused by physical incapability (such as after a stroke) or by negligence, sloppiness, carelessness, etc.First, all three execution types of each exercise were recorded for each subject while under supervision. These recordings constitute our reference data set. Altogether, K=24 (= 3 execution types × 8 exercise types) templates were recorded, denoted by x(1), x(2), …, x(K), for each subject. The exercises that a patient performs not under supervision will be compared with these templates. If a patient is unable to perform the exercises properly because his muscles have not sufficiently developed or if he feels too much pain, the specialist can apply external forces to help him execute the exercises [37].Systematic experiments conducted in the test phase simulate a typical real-world exercise session. Each of the five subjects (see Table 1for their physical properties), performed eight experiments, each corresponding to one of the eight exercise types. A test sequence y is a recording of a subject performing one of the assigned exercises. The subject repeats the exercise correctly 10 times, and then waits until the 100th second of the experiment. While waiting, the subject neither performs an exercise nor moves too much, hence, is considered to be idle. At the 100th second, he starts repeating the same exercise 10 times with a type-1 error, and again waits idly, this time until the 160th second. Then, the subject executes the exercise 10 times with a type-2 error, and the experiment terminates with no more idle time periods. Therefore, an experiment in the test set consists of 10 executions of an exercise for each execution type (30 executions in total), and two idle time intervals of variable duration between the three groups of 10 exercises. Because there are 5×8=40 experiments, each containing 30 executions, the test set contains 5×8×30=1200 exercise executions together with 80 (= 2×40) idle time periods.Fig. 6illustrates typical reference and test recordings. Part (a) of the figure shows the outputs of the sensors in unit 2 belonging to the templates for the three execution types. Manually selected templates in a separate recording are highlighted. Part (b) depicts the experiment for exercise 1, performed by the third subject. The two idle time periods are observed between the active periods.Some executions in the recorded data set may not exactly belong to one of the three execution types. For example, an execution of an exercise with a type-1 error may not be sufficiently fast to be classified into this category, but at the same time it may not be executed sufficiently accurately to be classified as correct; that is, some samples in the data set may not belong to any class. Furthermore, the subjects may not always perform the complete set of exercises properly due to fatigue, lack of concentration or interest, etc. We did our best to reduce these problems by repeating the whole experiment if such an execution error was clearly noticeable.We applied the MTMM-DTW algorithm described in Section 2 to the acquired data set to detect, classify, and evaluate physical therapy exercises in the recorded test sequences. To perform the tests for a given subject, from whom eight test sequences were recorded, we consider the 24 templates recorded from that subject as reference. We used uniform local weights (i.e.,wh=wv=wd=1; see Appendix) and selected the parameter α=0.5 to impose the restriction that each matched subsequence is at least half the length of the matching template. We set the β parameter (described in Section 2) to 0.05 to allow the matched subsequences to overlap to up to 5% of their durations in the beginning and at the end. In addition, we discarded matching subsequences with a normalized DTW distance larger than 10 (per sample of the matching template) because they were not sufficiently similar to the matching template.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
