@&#MAIN-TITLE@&#
A continuous time–cost tradeoff problem with multiple milestones and completely ordered jobs

@&#HIGHLIGHTS@&#
We consider a project scheduling with multiple milestones and completely ordered jobs.The objective is to minimize the total tardy weight plus the total compression cost.We prove the problem is NP-hard when the compression cost function is concave.We develop a pseudo-polynomial time algorithm for concave compression cost function.We develop a polynomial time algorithm for convex compression cost function.

@&#KEYPHRASES@&#
Project scheduling,Time–cost tradeoff,Computational complexity,Completely ordered jobs,

@&#ABSTRACT@&#
We consider a continuous time–cost tradeoff problem with multiple milestones and completely ordered jobs. If a milestone is tardy, a penalty cost may be imposed. The processing times of jobs can be compressed by additional resources or activities that incur compression costs. The objective is to minimize the total penalty cost plus the total compression cost. We show that the problem is NP-hard, even if the compression cost is described as a concave function, and we present a pseudo-polynomial time algorithm for that case. Furthermore, we show that the problem is polynomially solvable if the compression cost function is convex.

@&#INTRODUCTION@&#
The time–cost tradeoff problem (TCTP) assumes that each job’s processing time can be compressed by using additional resources such as equipment, labor, or capital (Ford and Fulkerson, 1962; Kelley, 1961). The typical objective is to minimize the project completion time subject to a constraint on the budget for compression or to minimize the total cost for compression subject to a constraint on the project completion time.The continuous TCTP (CTCTP) is defined as a TCTP in which the compression cost is described as a continuous function. The linear TCTP (LTCTP) is a special case of the CTCTP such that the compression cost function is linear. The LTCTP can be formulated as a linear programming problem and efficiently solved by the network flow method introduced by Fulkerson (1961) and Kelley (1961). For a comprehensive review of more general models (e.g., resource-constrained project scheduling), see Artigues, Demassey, and Neron (2008); Brucker, Drexl, Möhring, Neumann, and Pesch (1999); Demeulemeester and Herroelen (2002); Weglarz (1999); Weglarz, Jozefowska, Mika, and Waligora (2011).The TCTP studies above assume a single milestone for the overall project, that is, the last job. In reality, however, multiple milestones can exist within a project. Thus, if an appointed task is not completed at the milestone, a penalty is imposed. For example, a venture capital company makes small investments in a project at first and then, when a milestone has been reached, determines whether to stop the project or make more investments, depending on the progress of the project (Bell, 2000; Sahlman, 1994). To the best of our knowledge, no study has been conducted on a TCTP with more than one milestone, except that of Choi and Chung (2014). These authors considered two LTCTPs with multiple milestones and completely ordered jobs. The objective of the first problem is to minimize the total weighted number of tardy jobs subject to a constraint on the total compression cost. The second objective is to minimize the total weighted number of tardy jobs plus the total compression cost. The authors proved the NP-hardness of the first problem and the polynomiality of the second.This paper considers a generalized version of the second problem introduced by Choi and Chung (2014), in which the compression cost function can be nonlinear. The time–cost relation has been studied in several papers. Nonlinear (Moussourakis and Haksever, 2010), concave (Falk and Horowitz, 1972), and convex compression cost functions (Berman, 1964; Lamberson and Hocking, 1970) have been studied for the TCTP.Our problems can be formally stated as follows. The CTCTP is represented by a directed activity-on-node graphG=(V,A),whereV={1,2,…,n}is the set of jobs and A is the set of precedence relations. Relation (i, j) ∈ A means that job i should be completed before job j is started. Associated with job j is a normal processing timepj∈Z+and a maximal compression amountuj(≤pj)∈Z+,j=1,2,…,n,whereZ+is the set of nonnegative integers. Letx=(x1,x2,…,xn)be a real vector for which xjis the compressed amount of job j and 0 ≤ xj≤ uj,j=1,2,…,n. When job j is compressed by xj, the compression cost becomes fj(xj), where fj(xj)( ≥ 0) is a non-decreasing continuous function of xj. Throughout the paper, without loss of generality, we consider only•Schedules in which each job is processed as soon as possible by not allowing unnecessary idle time;Compression cost functions that are either concave or convex.The concavity of the compression cost function means increasing marginal returns, such that, as we input more resources, the addition of resources become more productive. In other words, two workers are more than twice as productive as one worker and four workers are more than twice as productive as two workers. The convexity reflects the general law of diminishing marginal returns, such that, as the number of new workers increases, the marginal productivity of an additional worker is less than that of the previous workers. Note that the relationship between the investment of the additional resources and the marginal productivity is corresponding to the one between the compression cost function and the compression amount in our model.Since each job has a unique starting time under each value of x, let x be termed the schedule. Let D⊆V be the set of milestones. Note that each milestone corresponds to a specific job. For j ∈ D, letwj∈Z+anddj∈Z+be the penalty cost for tardiness and the due date of milestone j, respectively. Let Cj(x) be the completion time of job j under x. Then, our problem is defined asminimize∑j∈T(x)wj+∑j=1nfj(xj)subjecttoCi(x)+pj−xj≤Cj(x),∀(i,j)∈A,0≤xj≤uj,j=1,2,…,n,whereT(x)={j∈D|Cj(x)>dj}is the set of tardy milestones under x.We can transform the problem with D⊂V into one withD=Vby lettingdi=∑j=1npjfor i ∈ V∖D. It is clear that the optimal schedules for these two problems are identical, since job i for i ∈ V∖D will not be completed late. Thus, for simplicity of notation, we assume thatD=V.In this paper, we focus on the CTCTP with multiple milestones and completely ordered jobs. Completely ordered jobs can be described by a chain graphA={(1,2),(2,3),…,(n−1,n)}.Hence, let our problem be referred to as CTCTP-chain.Then, the CTCTP-chain can be formulated asminimize∑j∈T(x)wj+∑j=1nfj(xj)subjectto0≤xj≤uj,j=1,2,…,n,whereT(x)={j∈D|∑i=1j(pi−xi)>dj}is the set of tardy milestones under x. The CTCTP-chain is motivated by a product development process following a sequential pattern in which information about the product tends to be accumulated slowly in consecutive stages (Roemer and Ahmadi, 2004). Each stage can begin only when its immediately preceding stage obtains complete and final information after termination.The remainder of the paper is organized as follows. Section 2 introduces properties of some optimal schedules for the CTCTP-chain. Section 3 shows that the CTCTP-chain with a concave compression cost function, referred to as a concave-CTCTP-chain, is NP-hard and can be solved in pseudo-polynomial time. Section 4 shows that the CTCTP-chain with a convex compression cost function, referred to as a convex-CTCTP-chain, is polynomially solvable. The final section presents concluding remarks and discusses future work.In this section, we introduce properties of some optimal schedules for the CTCTP-chain. Let job j be referred to as a just-in-time (JIT) job in x if it is completed exactly on its due date, that is,dj=Cj(x).Lemma 1There exists an optimal schedule satisfying one of the following conditions:(i)All jobs are uncompressed.There exists at least one JIT job.Let x* be an optimal schedule with the most JIT jobs. If x* satisfies (i) or (ii), then the proof is complete. Now, suppose that an optimal schedule x* has compressed jobs and no JIT job. Let job l be the last compressed job in x* and let E be the set of non-tardy jobs in{l,…,n}. Since flis non-decreasing, we can construct a new optimal schedulex¯by lettingx¯l=xl*−min{xl*,Δ}andx¯j=xj*for j ∈ V∖{l}, whereΔ=min{dj−Cj(x*)|j∈E}. IfΔ≠xl*,then at least one job in E becomes a JIT job, which is a contradiction of the definition of x*. IfΔ=xl*,then job l is uncompressed. By repeatedly applying this argument, we can construct an optimal schedule satisfying (i) or (ii).□By Lemma 1, an optimal schedule can be found by comparing a schedule with all uncompressed jobs and an schedule with minimum costs among schedules with at least one JIT job. Henceforth, we consider only schedules in which the number of JIT jobs is at least one.Lemma 2There exists an optimal schedule such that jobs processed after the last JIT job are uncompressed.Since a similar argument in the proof of Lemma 1 holds, we omit the details.□Henceforth, we only consider those schedules satisfying Lemmas 1 and 2.In this section, we show that the concave-CTCTP-chain is NP-hard and introduce an approach to solve it in pseudo-polynomial time.In this section, we show that the decision version of the concave-CTCTP-chain is NP-complete by reduction from the partition problem, which is known to be NP-complete (Garey and Johnson, 1979).The partition problem can be stated as follows: Given m positive integersa1,a2,…,amwhose sum is even, is there a subsetI⊂{1,2,…,m}such that∑j∈Iaj=12∑j=1maj?Theorem 1The decision version of the concave-CTCTP-chain is NP-complete.The decision version of the concave-CTCTP-chain is stated as follows: Given a threshold K, find a schedule x such that∑j∈T(x)wj+∑j=1nfj(xj)≤K.It is clear that the decision version of the concave-CTCTP-chain is in NP. Henceforth, we reduce the partition problem to the decision version of the concave-CTCTP-chain. Given an instance of the partition problem, we construct an instance of the concave-CTCTP-chain asfollows. Letn=m. Given n jobs such that forj=1,2,…,n,letpj=aj,uj=aj,andfj(xj)={aj−ϵϵxjfor0≤xj≤ϵ,ϵaj−ϵxj+aj(aj−2ϵ)aj−ϵforϵ≤xj≤aj,whereϵ=12n. Note that forj=1,2,…,n,fj(xj) is continuous and concave andfj(aj)=aj. LetK=12∑j=1naj. Letwj={0forj=1,2,…,n−1,K+1forj=n.Letdj=K,j=1,2,…,n.Suppose there exists a setI¯such that∑j∈I¯aj=∑j∈{1,2,…,n}∖I¯aj=K. We can construct a schedulex¯by lettingx¯j=ajifj∈I¯,whilex¯j=0otherwise. Then,Cn(x¯)=∑j=1n(pj−x¯j)=∑j∈{1,2,…,n}∖I¯aj=K,which implies that no tardy job exists inx¯. Thus,∑j∈T(x¯)wj+∑j=1nfj(x¯j)=∑j∈I¯aj=K.Suppose there exists a schedulex^such that(1)∑j∈T(x^)wj+∑j=1nfj(x^j)≤K.LetF^andP^be the sets of fully and partially compressed jobs, respectively. Then, sincewn=K+1,job n should not be tardy inx^,that is,(2)∑j∈P^∪F^x^j≥12∑j=1naj.LetP^1be the set of jobs such thatx^j≤ϵforj∈P^and letP^2=P^∖P^1. Ifi∈P^1andj∈P^2,then we can construct a new schedulex˜by lettingx˜i=x^i−δandx˜j=x^j+δ,whereδ=min{x^i,uj−x^j}. Note that sinceai−ϵϵ>ϵaj−ϵ,the total cost decreases, that is,∑j=1nfj(x˜j)<∑j=1nfj(x^j). By repeatedly applying this argument, without increasing total cost, we can obtain a schedule x such thatP1=∅orP2=∅and∑j∈T(x)wj+∑j=1nfj(xj)≤K. Thus, without loss of generality, assume thatP^1=∅orP^2=∅. Consider the following two cases.Case 1.P^1≠∅.Sincex^j=ajforj∈F^and aj,j=1,2,…,n,is an integer, by inequality (2) and∑j∈P^1x^j<1,we obtain∑j∈F^x^j≥12∑j=1naj.Then,∑j=1nfj(x^j)>∑j∈F^x^j≥12∑j=1naj=K.This is a contradiction of inequality (1).P^2≠∅.Sincex^j<ajforj∈P^2and aj,j=1,2,…,n,is an integer, inequality (2) implies that∑j∈P^2∪F^aj≥K+1.Then, sincefj(x^j)>aj−ϵforj∈P^2,∑j=1nfj(x^j)=∑j∈F^aj+∑j∈P^2fj(x^j)>∑j∈F^aj+∑j∈P^2(aj−ϵ)≥K+1−|P^2|ϵ>K,where|P^2|is the cardinality ofP^2. This is a contradiction of inequality (1).Since both cases cannot occur,P^=∅. Then,∑j∈F^aj=∑j∈F^fj(xj)≤Kfrom inequality (1) and∑j∈F^aj=∑j∈F^x^j≥Kfrom inequality (2). Thus,F^is a solution to the partition problem.□In this section, we introduce dynamic programming to solve the concave-CTCTP-chain in pseudo-polynomial time.Lemma 3There exists an optimal schedule x* for the concave-CTCTP-chain such that each value ofxj*is an integer.Let x* be an optimal schedule with the most JIT jobs. Since pj, uj, and djare integers for j ∈ V, Lemma 3 holds if the number of partially compressed jobs between consecutive JIT jobs is at most one. Suppose that jobs a and b with a < b are partially compressed between consecutive JIT jobs in x*. Let δ be the smallest value such that a job in{a,a+1,…,b}becomes a JIT job when the processing times of jobs a and b are increased and decreased by δ, respectively, in x*. Then, letx¯andx^be new schedules such that•x¯a=xa*−Δandx¯b=xb*+Δ,x^a=xa*+Δandx^b=xb*−Δ,whereΔ=min{xa*,ua−xa*,xb*,ub−xb*,δ}. Note thatT(x*)=T(x¯)⊇T(x^). Then, due to the optimality of x*, we have(3)fa(xa*)+fb(xb*)≤fa(x¯a)+fb(x¯b)and(4)fa(xa*)+fb(xb*)≤fa(x^a)+fb(x^b).Inequalities (3) and (4) can be rewritten, respectively, as(5)fa(xa*)−fa(xa*−Δ)Δ≤fb(xb*+Δ)−fb(xb*)Δand(6)fb(xb*)−fb(xb*−Δ)Δ≤fa(xa*+Δ)−fa(xa*)Δ.From the concavity of fa(xa) and fb(xb), (5) and (6) should hold as equalities, which implies thatx¯andx^are optimal schedules. IfΔ=δ,a job in{a,a+1,…,b}becomes a JIT job andx¯has more JIT jobs than x*. This is a contradiction of the definition of x*. Hence,Δ=min{ua−xa*,xa*,ub−xb*,xb*}holds and at least one of the jobs a and b is uncompressed or fully compressed underx¯orx^. By repeating the above argument, we obtain an optimal schedule such that the number of partially compressed jobs between consecutive JIT jobs is at most one. Thus, Lemma 3 holds.□The concave-CTCTP-chain can be solved in pseudo-polynomial time.By Lemma 3, it suffices to find an optimal integer schedule. Letg(Cj−1,j)be the minimum objective value of the subproblem for jobs in{j,j+1,…,n}given the valueCj−1. Then, we can computeg(Cj−1,j)recursively as follows: Forj=n,n−1,…,1,g(Cj−1,j)=minxj=0,1,…,uj{fj(xj)+wjhj(xj)+g(Cj−1+pj−xj,j+1)},with the boundary conditiong(Cn,n+1)=wnif Cn> dnandg(Cn,n+1)=0otherwise, wherehj(xj)=1ifCj−1+pj−xj>djandhj(xj)=0otherwise. Since∑i=1j(pi−ui)≤Cj≤∑i=1jpi,the maximum number of possible values of Cjis(1+∑i=1jui). Hence, g(0, 1) can be computed in O(nU2), whereU=∑j=1nuj.□In this section, we introduce an approach to solve the convex-CTCTP-chain in polynomial time.Lemma 4If k and l (k < l) are consecutive JIT jobs in an optimal schedule x* and fj(xj),j=1,2,…,nare convex functions, then(xk+1*,…,xl*)is an optimal solution of the following problem.CON(k,l):minimize∑j=k+1lfj(xj)subjecttodk+∑j=k+1l(pj−xj)=dl,0≤xj≤uj,j=k+1,…,l.Suppose there is an optimal solution xk, lof CON(k, l) such that∑j=k+1lfj(xjk,l)<∑j=k+1lfj(xj*). Construct a schedulexϵ=(1−ϵ)x*+ϵy,whereϵ>0is sufficiently small andy=(x1*,…,xk*,xk,l,xl+1*,…,xn*). Note thatxϵis feasible for a convex-CTCTP-chain andT(xϵ)=T(x*). Furthermore, since fj(xj),j=k+1,…,l,are convex functions,∑j=k+1lfj(xjϵ)≤∑j=k+1l((1−ϵ)fj(xj*)+ϵfj(xjk,l))<∑j=k+1lfj(xj*).Hence,xϵhas a smaller objective value than x*. This is a contradiction.□Let O be the set of optimal solutions of CON(k, l). If k and l are consecutive JIT jobs in an optimal schedule x*, then(xk+1*,…,xl*)is an optimal solution for CON(k, l) and has the smallest tardy weight in O. Thus, we introduce the approach to obtain an optimal solution of CON(k, l) with the smallest tardy weight in O.Let CON(k, l) with a linear compression cost functionfi(xi)=cixibe referred to as LP(k, l). Choi and Chung (2014) developed the following algorithm to find an optimal solution of LP(k, l) with the smallest tardy weight in polynomial time.Algorithm LP(k,l)Step 1.Setxj=0forj=k+1,…,l.Find a job sequenceπ=(π(k+1),…,π(l))of{k+1,…,l}such thatcπ(k+1)≤cπ(k+2)≤⋯≤cπ(l)andπ−1(α)<π−1(β)ifcα=cβandα<β,whereπ−1(j)is the position of job j in π.Forj=k+1,…,l,increase xπ(j) to its maximum valuexπ(j):=min{uπ(j),dl−dk−∑j′=k+1j−1(pπ(j′)−xπ(j′))}. Stop, as soon as the equality constraint in LP(k, l) holds.Now, we reduce the problem of finding an optimal solution of CON(k, l) with the smallest tardy weight into the problem of finding an optimal solution of LP(k, l) with the smallest tardy weight.Lemma 5Suppose there are two optimal solutions x* and y* of CON(k, l) such thatxi*<yi*for some i. Then, fi(xi) is linear on the interval[xi*,yi*].Suppose that fi(xi) is not linear on the interval[xi*,yi*]. Consider a new solution((1−ϵ)x*+ϵy*),whereϵ>0is sufficiently small. Note that since the feasible region of CON(k, l) is a convex set, the new solution is feasible for CON(k, l). From the convexity of fj(xj),(7)fj((1−ϵ)xj*+ϵyj*)≤(1−ϵ)fj(xj*)+ϵfj(yj*),j=k+1,k+2,…,l,and, furthermore, since fi(xi) is not linear on[xi*,yi*],(8)fi((1−ϵ)xi*+ϵyi*)<(1−ϵ)fi(xi*)+ϵfi(yi*).By inequalities (7) and (8), however,∑j=k+1lfj((1−ϵ)xj*+ϵyj*)<(1−ϵ)∑j=k+1lfj(xj*)+ϵ∑j=k+1lfj(yj*)=∑j=k+1lfj(xj*).This is a contradiction. The proof is complete.□The problem of obtaining an optimal solution of CON(k, l) with the smallest tardy weight in O can be solved in polynomial time.First, compute an optimal solution(xk+1*,…,xl*)of CON(k, l) in polynomial time by the barrier method for convex programming (Fiacco and McCormick, 1964). Let Ijbe the set of maximal intervals on which fj(xj) is linear. Note that Ijis given as an input of the problem. Hence we can find intervals containingxj*in Ijin polynomial time. Forj=k+1,…,l,let njbe the number of such intervals. Then, the following is observed from Lemma 5:Case 1.nj=0. Thenxj=xj*for each x ∈ O.nj=1. Let[l¯j,u¯j]be such interval. Thenl¯j≤xj≤u¯jfor each x ∈ O.nj=2. Let[l¯j,xj*]and[xj*,u¯j]be such two intervals. Thenl¯j≤xj≤u¯jfor each x ∈ O.From the above observations, we can define the linear compression cost function for each case as follows:cj={0forCase1,fj(u¯j)−fj(l¯j)u¯j−l¯jforCase2,fj(xj*)−fj(l¯j)xj*−l¯jforl¯j≤xj≤xj*inCase3,fj(u¯j)−fj(xj*)u¯j−xj*forxj*≤xj≤u¯jinCase3.Let Agbe the set of indices of the jobs corresponding to Case g,g=1,2,3. Let cj, 1 and xj, 1 be cjandxj−l¯jforl¯j≤xj≤xj*in Case 3, respectively, and also let cj, 2 and xj, 2 be cjandxj−xj*forxj*≤xj≤u¯jin Case 3, respectively. For convenience, letl¯j=xj*for j ∈ A1. Then, by using this notation, CON(k, l) can be reformulated asminimize∑j=k+1lfj(l¯j)+∑j∈A2cjxj+∑j∈A3∑i=12cj,ixj,isubjecttodk+∑j=k+1l(pj−l¯j)−∑j∈A2xj−∑j∈A3∑i=12xj,i=dl,0≤xj≤u¯j−l¯jforj∈A2,0≤xj,1≤xj*−l¯jforj∈A3,0≤xj,2≤u¯j−xj*forj∈A3.Since each value offj(l¯j)is fixed and each compression cost function is linear, an optimal solution with the smallest tardy weight can be found by the Algorithm LP(k, l). The proof is complete.□The convex-CTCTP-chain can be solved in polynomial time.We show the polynomiality of the convex-CTCTP-chain by reducing it to a shortest path problem (SPP) as follows. Let N(0) andN(n+1)be the source and sink nodes, respectively. Node N(0) denotes a dummy job 0 withp0=u0=w0=d0=0that is the job preceding job 1. Forj=1,…,n,node N(j) denotes a job j. For 0 ≤ k < l ≤ n, let N(k) be connected to N(l) if(9)dk+∑j=k+1lpj≥dlanddk+∑j=k+1l(pj−uj)≤dl.Note that if any of the inequalities (9) are not satisfied, then jobs k and l cannot become consecutive JIT jobs. The length of the arc from N(k) to N(l) is the cost incurred when jobs k and l are selected as consecutive JIT jobs. By Theorem 3, the optimal schedule of CON(k, l) with the smallest tardy weight, denoted xk, l, can be obtained in polynomial time. The set of tardy jobs between jobs k and l, denoted T(xk, l), can be obtained by the compression of jobs according to xk, l. Thus, the length of the arc from N(k) to N(l) is∑j∈T(xk,l)wj+∑j=k+1lfj(xjk,l).Forj=0,1,…,n,let N(j) be connected toN(n+1). The length of the arc from N(j) toN(n+1)is the cost incurred when job j is the last JIT job. By Lemma 2, the jobs after job j should be uncompressed. The set of tardy jobs after job j, denotedT(xj,n+1),can be easily obtained. Thus, the length of the arc from N(j) toN(n+1)is∑j∈T(xj,n+1)wj. The objective is to find the shortest path from N(0) toN(n+1). The shortest length is the optimal cost of the convex-CTCTP-chain.In the reduced SPP, the number of nodes is O(n) and the number of arcs is O(n2), since the number of arcs from each node is O(n). The length of each arc can be obtained in polynomial time. Thus, this reduction is carried out in polynomial time. Since the reduced graph is a directed acyclic graph, the reduced SPP can be solved in O(n2) according to the algorithm of Cormen, Leiserson, Rivest, and Stein (2001). The proof is complete.□We proved the NP-hardness of the concave-CTCTP-chain and introduced an approach to solve it in pseudo-polynomial time. Furthermore, we showed the polynomiality of the convex-CTCTP-chain by reduction to the SPP.For future research, it would be interesting to analyze the computational complexity of the CTCTP on more general networks.

@&#CONCLUSIONS@&#
