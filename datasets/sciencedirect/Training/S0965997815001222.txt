@&#MAIN-TITLE@&#
Advances in swift analysis of structures: Near-regular structures, and optimal analysis and design

@&#HIGHLIGHTS@&#
A review of optimal analysis of structures is presented.Different methods for swift analysis are employed for various problems.Analysis of near-regular structures is performed using graph products and sub-structuring methods.Boundary-value and initial-value differential equations are solved using finite difference method and graph products.

@&#KEYPHRASES@&#
Optimal analysis,Near regular structures,Graph products,Finite difference method,Optimal design,Modal analysis,

@&#ABSTRACT@&#
In this paper a review of optimal analysis of structures is presented. Different methods of swift analyses are employed for various problem formulations. Depending on the problem at hand, a proper combination of graph products, sub-structuring methods, finite difference method and manipulating the stiffness matrix manipulation is selected to achieve the most efficient design. Design problems can be classified as three types. The first type includes the solution of near-regular structures using graph products and sub-structuring methods. These structures consist of two groups. In the first group, the main structure contains some additional members with respect to its corresponding regular structure while the structures in the second group contain some additional nodes with respect to the corresponding regular structures. The second type of problems includes the simultaneous optimal analysis and optimal design of structures. The presented method is applicable to an arbitrary structure and the optimal solution is obtained by manipulating the stiffness matrices and taking advantages of the iterations during design process. The third type of problems includes the efficient modal analysis of structures using a combined finite difference method and graph products. Boundary-value and initial-value differential equations are solved using finite difference method and graph products, and then the method is applied to the dynamic equations of modal analysis.

@&#INTRODUCTION@&#
In a previous work, the authors introduced methods for swift analysis of near-regular structures, optimal analysis and design, and modal analysis [1]. Despite the fact that developing powerful computers has enhanced the speed of computations and has enabled solving large-dimension structures, the optimal analysis of problems is still of great interest among many researchers [2]. In last three decades many investigations have been conducted on the fast solution of structures with symmetric, circular and repetitive patterns. The optimal analysis of these regular patterns ultimately leads to some mathematical problems involved in graph products, group theatrical methods, matrix transformations and divide and conquer algorithms [2–11]. Although the swift analysis of structures using these methods is very efficient and time-saving, however, generalizing the methods to the other structures is difficult. In other words, a structure solvable using these methods must hold some specific features of regularity that otherwise is not easily solved using the above mentioned methods. Recently, the quick analysis of a group of partially irregular structures, known as near-regular structures, has been obtained [12–17]. Near-regular, structures share many features of the regular structures but are not completely regular. Using similar concepts, some optimal solutions were developed for the analysis of arbitrary structures involved in reanalysis and design processes. While the solution of a near-regular structure was obtained via the solution of a regular structure, in reanalysis and design the solution of an arbitrary structure can be obtained using the available solution of the structure in the previous step [18]. Formulation of boundary-value differential equations using finite difference methods results in some matrix patterns similar to those of regular structures [2]. The method was generalized to the initial-value problems with the purpose of optimal dynamic solution of structures using modal analysis.The necessary and sufficient condition for diagonalizing the Hermitian matrices A1 and A2 simultaneously using one orthogonal matrix, is studied in [2,19]:(1)A1A2=A2A1Suppose a block matrix M can be written as the sum of two Kronecker products:(2)M=A1⊗B1+A2⊗B2If P is a matrix which diagonalizes A1 and A2 simultaneously, the matrix M is block diagonalized byU=P⊗Iand therefore the matrix UTMU is a block diagonal matrix.If the above property holds, from Eq. (2) we will have:(3)λM=⋃i=1neig(Mi);Mi=λi(A1)B1+λi(A2)B2where λMis a set of nm eigenvalues of the matrix UTMU which is similar to the matrix M. In this equation, the matrices A1 and A2 are of dimension n, and the matrices B1 and B2 are of dimension of m. If the condition of Eq. (1) holds, it can be shown that u⊗v is the eigenvector of the matrix M, where u is the vector which diagonalizes the matrices A1 and A2 simultaneously and v is the eigenvector of matrix Mi.Now, it is shown how to obtain the inverse of a matrix using its eigenpairs. ConsideringAx=Bwe have:(4)Ax=B⇒{φ}tjA{φ}jyj=λjyj={φ}tjB(5)yj=Bjλj⇒{x}n=∑i=1n{φ}iyi=∑i=1n{φ}iBiλi=∑i=1n{φ}i{φ}tiλiBwhereλiand {φ}i are the eigenpairs of the matrix A.The efficient solution of regular structures (graphs) using the above-mentioned equations are provided in detail in [2].The equationF=KΔcan be solved swiftly in analysis of regular structures. Now, the near-regular structures with additional (or lack of) members are studied. These structures can be converted to regular structures by applying some changes in certain members. These changes include adding members, removing members or changing the stiffness of some members. The obtained regular structure is swiftly solved and then the effect of changes is compensated. The method reduces the computational complexity of the problem significantly.Assume after converting a near-regular structure to a regular one, the inverted stiffness matrix holds the form shown in Eq. (6). Because of regularity, the inverse of the matrix is easily obtained. Consider the degrees of freedom m, n,… as the modified degrees and k, s,… as the unchanged ones. The modified degrees of freedom are the ones connected to changed members(6)[ΔmΔn⋮⋯ΔkΔs⋮]=[DmmDmn⋮DmkDmsDnn⋮DnkDns⋱⋮⋱⋯⋯⋯⋮⋯⋯⋯⋮DkkDks⋮DssSym⋮⋱][FmFn⋮⋯FkFs⋮]Or(7)[ΔI⋯ΔII]=[DI,I⋮DI,II⋯⋮⋯DII,I⋮DII,II][FI⋯FII]The stiffness matrix of the main (near-regular) structure has the following form:(8)[FmFn⋮⋯FkFs⋮][Kmm+Kmm′Kmn+Kmn′⋮KmkKmsKnn+Knn′⋮KnkKns⋱⋮⋯⋯⋯⋮⋯⋯⋯⋮KkkKksSym⋮Kss⋮⋱][Δm′Δn′⋮⋯Δk′Δs′⋮]The blocks K belong to the regular structure and the blocks K′ are the supplemented ones due to the modifications. In a compressed form(9)[FI⋯FII]=[KI,I+KI,I′⋮KI,II⋯⋮⋯KII,I⋮KII,II][ΔI′⋯ΔII′]The solution of Eq. (9) will be(10)[ΔI′⋯ΔII′]=[D′I,I⋮D′I,II⋯⋮⋯D′II,I⋮D′II,II][FI⋯FII]In the present method we want to find the solution of the original (near-regular) structure by utilizing the inverse of the stiffness matrix of the modified (regular) structure. Suppose Eq. (9) is expressed as(11)[FI⋯FII]−[KI,I′ΔI′⋯0]=[KI,I⋮KI,II⋯⋮⋯KII,I⋮KII,II][ΔI′⋯ΔII′]Two sides of Eq. (11) are multiplied by the inverse of the stiffness matrix of the modified structure(12)[ΔI′⋯ΔII′]=[DI,I⋮DI,II⋯⋮⋯DII,I⋮DII,II][FI−KI,I′ΔI′⋯FII]And then(13)ΔI′=[I+DI,IKI,I′]−1[DI,IFI+DI,IIFII]ΔII′=DII,I{FI−KI,I′[I+DI,IKI,I′]−1[DI,IFI+DI,IIFI,I]}+DII,IIFIIThe componentsD are obtained via the fast analysis of the regular structure. Regarding the following definition(14)[I+DI,IKI,I′]−1=D¯I,Iand considering the equationΔ=DF, in regular structures we have(15)ΔI=DI,IFI+DI,IIFIIΔII=DII,IFI+DII,IIFIINow, Eq. (13) is expressed as(16)ΔI′=D¯I,IΔIΔII′=−DII,IKI,I′ΔI′+ΔIIAnd finally the inverse of the stiffness matrix of the original near-regular structure is constructed using some substitutions.(17)[ΔI′⋯ΔII′]=[D¯I,IDI,I⋮D¯I,IDI,II⋯⋮⋯−DII,IKI,I′D¯I,IDI,I+DII,I⋮−DII,IKI,I′D¯I,IDI,II+DII,II][FI⋯FII]The whole computation includes finding the inverse of a small matrix, of a dimension equal to the dimension of matrixKI,I′, and some straightforward matrix operations. ΔIand ΔIIare calculated through the solution of the modified (regular) structure. Analysis of the first group of near-regular structures is more detailed in [10].Here, using a combined sub-structuring method and graph products an algorithm is presented to analyze irregular structures composed of regular and irregular parts assuming that the regular structure can efficiently be solved. In a traditional analysis since the nodes are assembled, the regularity of the regular structure is removed. Nevertheless, subdividing a structure into the regular and irregular parts provides the opportunity of a parallel solution in which the regular part is swiftly solved separately.The utilized parameters in the algorithm include:l:the degrees of freedom that two parts (regular and irregular) have in common,the degrees of freedom of the irregular part,the degrees of freedom of the regular part,the load and displacement vectors corresponding to the degrees of freedom i,the load and displacement vectors corresponding to the degrees of freedom l,the internal force vectors corresponding to the degrees of freedom l,the stiffness matrix of the irregular structure,the stiffness matrix of the regular structure,the inverse of the matrix S.Step 1: Dividing the original structure into the regular and the irregular parts.Consider the structure schematized in Fig. 1. Separate the regular and irregular parts as shown in Fig. 2. In the present algorithm, the loads P* are applied to the irregular sub-structure.Step 2: Construct the relationship F = KΔ for the irregular structure as(18)l{j{[P*−F*⋯⋯P¯](j+l)×1=[K1⋮K2⋯⋯⋯⋮⋯⋯⋯K3⋮K4](j+l)×(j+l)×[Δ*⋯⋯Δ¯](j+l)×1Step 3: Construct the relationship F = SΔ for the regular structure as(19)l{i{[F*⋯P](l+i)×1=[S1⋯S2](l+i)×(l+i)[Δ*⋯Δ](l+i)×1Step 4: Find the relationship between F* and Δ* in the regular structure as(20)F=SΔ→Δ=DFAs mentioned, the matrix D is efficiently obtained using graph products as(21)[Δ*⋯Δ]=[D1⋯D2][F*⋯P]⇒Δ*=D1[F*⋯P],Δ=D2[F*⋯P](22)Δ*=[D11⋮D12][F*…..P](23)Δ=[D21⋮D22][F*⋯P](24)Δ*=D11F*+D12PA=D11−1,A*=D12(25)Fl×1*=Al×lΔl×1*−Al×lAl×i*Pi×1︸Bl×1Step 5: Substitute F* in the Step 2(26)F*=AΔ*−B(27)[P*−F*⋯⋯P¯]=[K1⋮K2⋯⋯⋯⋮⋯⋯⋯K3⋮K4][Δ*⋯Δ¯](28)[P*+B⋯⋯P¯]=[K1+A⋮K2⋯⋯⋯⋮⋯⋯⋯K3⋮K4][Δ*⋯⋯Δ¯](29)[Δ*⋯Δ¯]=C[P*+B⋯⋯P¯],C=[K1+A⋮K2⋯⋯⋯⋮⋯⋯⋯K3⋮K4]−1Step 6: Calculate the inverse of the stiffness matrix for the main structure(30)[Δ*⋯Δ¯]=[C1⋮C2⋯⋯⋯⋮⋯⋯⋯C3⋮C4][P*+B⋯⋯P¯](31)B=AA*P=B*P(32)[Δ*⋯Δ¯]=[C1⋮C2⋯⋯⋯⋮⋯⋯⋯C3⋮C4][P*+B*P⋯⋯P¯](33)[Δ*⋯Δ¯⋯Δ][C1⋮C2⋮C1B*⋯⋯⋮⋯⋯⋮⋯⋯C3⋮C4⋮C3B*⋯⋯⋮⋯⋯⋮⋯⋯C1*⋮C2*⋮C3*][P*⋯P¯⋯P](34)Dtotal=[C1⋮C2⋮C1B*⋯⋯⋮⋯⋯⋮⋯⋯C3⋮C4⋮C3B*⋯⋯⋮⋯⋯⋮⋯⋯C1*⋮C2*⋮C3*]C1, C2, C3, C4and B* are obtained using Eq. (29) and Eq. (31). Now C1*, C2* and C3* are found as(35)Δ=D2[F*⋯P]=D21F*+D22PΔ=D21[AΔ*−B*P]+D22PΔ=D21[A[C1P*+C2P¯+C1B*P]−B*P]+D22PΔ=[D21[AC1−I]B*+D22]︸C3*P+[D21AC1]︸C1*P*+[D21AC2]︸C2*P¯Therefore,all blocks of the inverse of the stiffness matrix for the main structure are obtained. Further details are available about the method and its computational complexity in Ref. [9].One of the issues in structural design using genetic algorithms is extreme and time-consuming computations. Usually, the most difficult phase in a genetic algorithm is the solution of the governing equation. In structural designs, it includes solving the relationshipF=KΔ, finding the results asΔ=K−1F=DF. The matrix K can be very large for a real-life structure. Moreover, in an iterative method, the matrix K should be inverted in each generation. Here, an efficient formulation is developed to be applied in optimal design by genetic algorithm. The solution is presented for arbitrary structures with some changed members, supports and nodes. The relationships obtained will form a base for the optimal analysis. Here, it is assumed that an analyzed structure exists (the inverse of its stiffness matrix exists) and then changes are applied to some members, supports or nodes. Now, we want to find a solution for the modified structure using its available solution before the changes. In each generation of genetic algorithm the solution of the previous generation is available (existing solution) and changes in some members (size) or in some nodes (geometry) occur for the purpose of optimal design. Obtaining quick solution of structures in a genetic algorithm will result in both optimal analysis and optimal design. As mentioned, the quick solution of a structure means finding the inverse of its stiffness matrix swiftly. Considering Figs. 3–6, four inverted matrices,Dmodified, are formed. Fig. 3 represents a structure in which some members like member mn are changed. The inverted stiffness matrix will have the form(36)Dmodified=[D¯I¯,I¯DI,I⋮D¯I¯,I¯DI,II⋯⋮⋯−DII,IKI,I′D¯I¯,I¯DI,I+DII,I⋮−DII,IKI,I′D¯I¯,I¯DI,II+DII,II]Consider the similarity between Eq. (36) and Eq. (17). Here, there is an analyzed arbitrary structure where some members are modified, while Eq. (17) belongs to a regular structure where by changing some members a near-regular structure is generated. Considering the modified structure shown in Fig. 4 with respect to the structure shown in Fig. 5, leads to the following equation:(37)Dmodified=[DI,I+DI,IDI,IKI,II[KII,II−KII,IDI,IKI,II]−1KII,I⋮−DI,IKI,II[KII,II−KII,IDI,IKI,II]−1⋯⋮⋯[KII,II−KII,IDI,IKI,II]−1KII,IDI,I⋮[KII,II−KII,IDI,IKI,II]−1]And considering the structure in Fig. 5 together with the structure in Fig. 4, results in(38)Dmodified=DI,I−DI,IID−1II,IIDII,IFinally, for the structure shown in Fig. 6, where the location of some nodes are modified, we will have(39)Dmodified=[D¯I¯,I¯DI,I⋮D¯I¯,I¯DI,II⋯⋮⋯−DII,IKI,I′D¯I¯,I¯DI,I+DII,I⋮−DII,IKI,I′D¯I¯,I¯DI,II+DII,II]The signs and definitions utilized in the above four equations are similar to those used in Section 2, by regarding an analyzed structure comparable to a regular structure and a modified structure comparable to a near-regular structure.As an example, in a genetic algorithm with a population of 40 individuals and a generation number equal to 30, 1200 stiffness matrices should be inverted that is very laborious. Instead, the formulation obtained is applied to optimal design by a genetic algorithm to solve the problem.Typically, basic operations in a genetic algorithm include reproduction, crossover and mutation. There are several methods for performing each of these operations. In the reproduction operation better fit individuals are selected and copied. In the crossover operation, individuals are placed in a matting pool to mate. In this operation, generally, two strings of the mating pool are selected and some parts of them are exchanged to generate two offsprings. Single-point crossover is performed by choosing a random point of the parents’ strings and swapping the bits in the right side of the point. This is where the solution based on the present method is applied. Consider the truss with 10 members (design variables) shown in Fig. 7.Assume that a string of 50-bits length is utilized as a chromosome for each solution (a 5-bits length for each design variable). Consider the following strings with a random point in the 12th bitParent 1: 01001 10110 10⁞010 11101 10010 01001 11101 01000 11100 10010Parent 2: 10001 11000 00⁞111 10110 00110 11010 10011 11010 00110 10100Therefore, the offsprings will beOffspring 1: 01001 10110 10111 10110 00110 11010 10011 11010 00110 10100Offspring 2: 10001 11000 00010 11101 10010 01001 11101 01000 11100 10010It is seen the variables numbers 4 to 10 (green ones) are equal for the parent 2 and offspring 1, as they are equal for the parent 1 and offspring 2. If this is applied to the corresponding structures, we will have Fig. 8and Fig. 9, as well as Fig. 10and Fig. 11.It can be seen that the truss structure schematized in Fig. 8 is an original structure (previous generation) for the truss in Fig. 9 (current generation) as the modified one where the members shown in red are changed. Such a comparison is also true for the trusses in Fig. 10 and Fig. 11. Consequently, the solution of offsprings is quickly performed using the following equations:[ΔI′⋯ΔII′]=[D¯I,IDI,I⋮D¯I,IDI,II⋯⋮⋯−DII,IKI,I′D¯I,IDI,I+DII,I⋮−DII,IKI,I′D¯I,IDI,II+DII,II][FI⋯FII]andDmodified=[D¯I¯,I¯DI,I⋮D¯I¯,I¯DI,II⋯⋮⋯−DII,IKI,I′D¯I¯,I¯DI,I+DII,I⋮−DII,IKI,I′D¯I¯,I¯DI,II+DII,II]The matrix Dmodified will also be used as the available solution for the next generation, where the offsprings in this step will play the role of parents in the subsequent generation. This process will be continued up to the final generation. More details about this section are discussed in Ref. [18].The application of tri-diagonal and block tri-diagonal matrices is presented for swift solution of boundary-value problems [2]. Regarding the significance of initial-value problems in structural engineering, especially in the dynamic solution of structures under seismic loads, a well-organized method for solving these differential equations is presented. The method is based on converting the initial-value problems into the previously solved boundary-value problems. Consider the classic dynamic equation with the given initial values:(40)mu..(t)+cu.+ku(t)=p(t);u(0)=us;u.(0)=vs;t≥0Consider the following equations:(41)ui..=1h2(ui−1−2ui+ui+1)..;ui.=12h(ui+1−ui−1)where h is the time step size. By substituting in the main equation we will have(42)mh2(ui−1−2ui+ui+1)+c2h(ui+1−ui−1)+kui=piLet us assume that the goal is to find function values in the interval [0, T]. Consider the n points of the finite difference method as shown in Fig. 12.u(0)=usandsupposeu(T)=ufi=2:mh2(u1︸us−2u2+u3)+c2h(u3−u1︸us)+ku2=p2i=3:mh2(u2−2u3+u4)+c2h(u4−u2)+ku3=p3··i=n−1:mh2(un−2−2un−1+un︸uf)+c2h(un︸uf−un−2)+kun−1=pn−1(43)[k−2mh2mh2+c2hmh2−c2hk−2mh2mh2+c2hmh2−c2hk−2mh2mh2+c2hmh2−c2h⋱⋱⋱k−2mh2mh2+c2hmh2−c2hk−2mh2mh2+c2hmh2−c2hk−2mh2mh2+c2hmh2−c2hk−2mh2]︸K(n−2)×(n−2)×[u2u3u4⋮un−4un−3un−2un−1]︸U(n−2)=[p2−(mh2−c2h)usp3p4⋮pn−4pn−3pn−2pn−1−(mh2+c2h)uf]︸P(n−2)Matrix K is quickly inverted (see Eqs. (56)–(60) below). However, the vector U cannot be obtained because the value ufin the last term of the vector P is not defined. Now, we want to find uf(44)U=K−1P=DP(45)u2=D11(p2−(mh2−c2h)us)︸a1+D12p3︸a2+D13p4︸a3+⋯+D1(n−2)(pn−1−(mh2+c2h)uf)Considering Fig. 13, ati=1we can write(46)u1.=12h(u2−u0)=u.(0)=vs⇒u0=u2−2hvsThe governing equation ati=1can be written as:(47)mh2(u0−2u1+u2)+c2h(u2−u0)+ku1=p1By substituting Eq. (46) in Eq. (47), we will have(48)mh2(u2−2hvs−2u1+u2)+c2h(2hvs)+ku1=p1Rewriting Eq. (45)(49)u2=a1+a2+a3+⋯︸a+D1(n−2)(pn−1−(mh2+c2h)uf)u2=a+D1(n−2)(pn−1−(mh2+c2h)uf)Substituting u2 from Eq. (49) into Eq. (48) leads to(50)p1h2−ku1h2+(2mh−ch2)vs+2mu1=2m[a+D1(n−2)(pn−1−(mh2+c2h)uf)]Therefore(51)pn−1−(mh2+c2h)uf=p1h2−ku1h2+(2mh−ch2)vs+2mu1−2am2mD1(n−2)pn−1−(mh2+c2h)uf=p1h2−kush2+(2mh−ch2)vs+2mus−2am2mD1(n−2)All terms in the right-hand side of this equation are numerical values. Thus, the value of right-hand of Eq. (51) can be inserted in the last term of the vector P in Eq. (43). Consequently, using Eq. (44) function values are obtained in a quick and simultaneous manner.U=K−1P=DPAnd the value of ufis obtained by utilizing Eq. (51)(52)uf=h2pn−1−(p1−kus)h4+(2mh3−ch4)vs+2mush2−2amh22mD1(n−2)/(m+ch2)Now, the only point is obtaining the swift inverse of matrixK, this matrix has the following pattern:(53)A=[bcabca⋱⋱⋱bcabcab]n×nThen,(54)λk=b+2accoskπn+1,k=1,2,...,nAnd(55)vj(k)=(ac)j−1sinkjπn+1,j=1,2,...,nAnd(56)v(k)=(v1(k),v2(k),...,vn(k))tUsing Eq. (5) as well as Eq. (54)–(56), leads to:(57)Aij−1=∑k=1n((ac)i−j∑k=1nsin[kπn+1]2sin[ikπn+1]sin[jkπn+1]1λk)wherei and j indicate row and column, respectively. Multiplying vector P by Eq. (57) leads to finding displacements as(58)ui=∑j=1n∑k=1n((ac)i−j∑k=1nsin[kπn+1]2sin[ikπn+1]sin[jkπn+1]1λkpk)Since the matrices in Eq. (43) are of dimensionn−2, Eq. (58) changes into Eq. (59)(59)ui=∑j=1n−2∑k=1n−2((mh2−c2hmh2+c2h)i−j∑k=1nsin[kπn−1]2sin[ikπn−1]sin[jkπn−1]1λkpk+1)pk+1={p2−(mh2−c2h)usk=1pk+11<k<n−2pn−1−(mh2+c2h)ufk=n−2The efficient solution of boundary-value problems was presented previously [2]. The approach is generalized to the initial-value differential equations by converting these equations to the boundary-value ones. The conversion is possible because although we lacked a boundary condition at the end of the interval, we have an initial value instead. Using additional equations ati=1and utilizing the virtual point u0 which is out the interval and then omitting it, the conversion is performed. In the modal analysis a system of n coupled equations is converted to n single degree of freedom equations. Any obtained single equation is an initial-value problem with the form shown in Eq. (40). Therefore, using the present method, the equations are solved efficiently. For more details of the application of the method in modal analysis the reader may refer to [2].In this paper different methods of efficient and optimal analysis of structures are studied. New developments on the combined graph products, sub-structuring methods and matrix operations result in generalizing the solution of well-studied regular structures to the near regular structures. Similar developments in reanalysis and design processes lead to the simultaneous optimal analysis and optimal design of structures. Using combined graph products and finite difference methods, a quick solution for the initial-value differential equations is obtained. The method is efficiently utilized for the modal analysis of structures.The effectiveness of swift analysis is highlighted for structural optimization problems solved with genetic algorithms. This can also be useful for other metaheuristic algorithms, especially in the exploitation phase where just one or very few design variables are perturbed with respect to the current best record. Pitch adjusting in HS or single variable perturbation in SA may be significantly speeded up by adopting the approach illustrated in the article.The reanalysis technique based on the addition/removal of elements and nodes to the regular structure can also be utilized in topology optimization.

@&#CONCLUSIONS@&#
