@&#MAIN-TITLE@&#
A region-growing algorithm using parallel computing for surface reconstruction from unorganized points

@&#HIGHLIGHTS@&#
We develop a region-growing algorithm based on parallel computation architecture.The old algorithm needs to be redesigned to fit the requirement of GPU architecture.Our algorithm can speed up the mesh reconstruction over 10 times.The proposed algorithm also have the same quality compared to original algorithm.

@&#KEYPHRASES@&#
GPU-based computation,Surface reconstruction,Region-growing algorithm,Candidate triangle table,Overlapping triangle removal,Filling small hole,

@&#ABSTRACT@&#
A parallel computing region-growing algorithm for surface reconstruction from unorganized point clouds is proposed in this research. The traditional region-growing algorithm belongs to sequential process and needs to update the topology information continuously to maintain the boundaries of the growing region. This constraint becomes a bottleneck for efficiency improvement. The proposed GPU-based region-growing algorithm is to decompose the traditional sequence and re-plan specific framework for the purpose of utilizing parallel computation. Then, a graphics card with multi-processing units will be used to build triangles in the parallel computing mode. In our GPU-based reconstruction process, each sampling point is regarded as an independent seed and expands simultaneously until all surrounding patches overlap each other. Following this, the overlapping patches are removed and holes are filled by the GPU-based calculation. Finally, a complete model is created. In order to validate the algorithm proposed, the unorganized point cloud was obtained by a 3D scanner and then reconstructed using the parallel computing region-growing algorithm. According to the results obtained, the algorithm proposed here shows 10 times better performance when compared to the traditional region-growing method.

@&#INTRODUCTION@&#
Reverse engineering (RE) technology has become an important part of todayâ€™s industrial design process. The initial step is to first acquire the profile data using a 3D scanner. Following this, the surface can be constructed for the purpose of editing and design. Finally, the product can be manufactured using a CNC machine or a rapid prototyping machine.Creating a geometric surface constructed from scanned point clouds is an integral part of the reverse engineering procedure, and can be classified into surface-based modeling and polygon-based modeling. The surface-based model has the advantages of high precision and continuity, but needs more complex calculation and cannot represent a free-form object with complex profiles. In contrast to surface-based model, polygon-based modeling can represent all kinds of objects due to its versatility. Mesh modeling is widely used in a number of fields, including: computer animation, virtual reality, digital heritage collections and medical applications.After data acquisition, the point clouds must be transferred into a mesh object using a specific algorithm. For larger object sizes, greater amounts of scanned data can decrease the efficiency of model reconstruction. However, with the wide use of non-contacting 3D scanners by which dense point clouds are commonly acquired, the process often results in development bottlenecks due to long construction times.Recently, the computing speed of Central Processing Units (CPUs) has not continued to improve significantly. Thus, the efficiency of the sequential mesh reconstruction algorithm has been difficult to improve. Fortunately, thanks to rapid development of Graphics Processing Units and programming language which supports parallel computing. The integration of parallel computing devices and algorithm architecture re-planning will be the key factors in improving efficiency when applying the algorithm.This paper aims to develop a region-growing algorithm using parallel computing applied to mesh reconstruction. The efficiency of the conventional region-growing algorithm cannot be improved significantly due to the use of a single core CPU for sequential calculation. Here, the efficiency of traditional region-growing algorithm will be improved significantly by employing a parallel computing architecture.

@&#CONCLUSIONS@&#
