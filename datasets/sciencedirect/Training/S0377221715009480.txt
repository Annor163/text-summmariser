@&#MAIN-TITLE@&#
A two-stage resource allocation model for lifeline systems quick response with vulnerability analysis

@&#HIGHLIGHTS@&#
Select the critical groups of destroyed components in rescue time horizon to make the whole network be the most efficient.Decide the rescue team assignment scheme by solving the Second Stage model using the proposed heuristic algorithm.Compute the total rescue costs by solving First Stage model to ensure total rescue costs.

@&#KEYPHRASES@&#
Decision support systems,Quick response,Resource allocation,Two-stage programming,Vulnerability analysis,

@&#ABSTRACT@&#
The internal complexity of lifeline systems and their interdependencies amplify the vulnerability of external disruptions. We consider lifeline infrastructures as a network system with supply, transshipment, demand nodes and arcs constructed between node-pair for conveying service flows. The complex interactive network system can be modeled as multi-layered graphs, whereby the power network depends on the gas network linked through the gasified power plants. Similarly, the water network depends on both quality and quantity of power supply. A successful emergency rescue can make lifeline infrastructures more resilient against natural disasters and unexpected accidents. This study focuses on a resource allocation and schedule problem to restore the most critical components quickly in the multiple interdependent lifeline infrastructures under disruptions. The key objectives of quick response model include reducing the overall losses caused by the accidents, and restoring system functions as quickly as possible. The Resource Allocation Model (RAM) for rescue was formulated as a two-stage mixed-integer programming, in which the first stage problem aims to minimize the total losses, while the second stage problem is to optimize resource allocation for rescue service within the rescue time horizon using the proposed heuristic algorithm in polynomial complexity. In the meantime, those tasks/components to be repaired are selected by the proposed vulnerability analysis method to guarantee the optimal whole network efficiency, and then put them into the Resource Allocation Model. The simulation results demonstrate that the proposed approaches are both efficient and effective to solve the real-life post-disaster resource allocation problem.

@&#INTRODUCTION@&#
In the past century, the infrastructures of urban cities have faced immense strains as a result of dramatic growth in population. Correspondingly, the increasing complexity and interdependencies of lifeline infrastructures pose new challenges for security and operations management because of their large-scale, nonlinear, and time-dependent properties. Such lifeline systems are often considered as a network system consisting of supply, demand, and transshipment components (nodes and arcs) including electric power, gas, water supply, food, telecommunications, and transportation, to provide platforms for service delivery. The complexity nature of the network makes the lifeline systems vulnerable to failures, which may cause widespread negative consequences. It has being becoming the most susceptible part for the economic, social, and environment development in all cities (Aven, 2011; De Sherbinin, Schiller, & Pulsipher, 2007; Murray, 2013).The occurrence of several cascading failures in the past typically causes huge property loss and significant restoration cost (Chai, Liu, Zhang, & Baber, 2011; Collier & Lakoff, 2008). For example, in July and August of 1996, the Western US grid experienced outages affecting 11 of the US States and 2 Canadian Provinces. More recently in December 1998 blackout in San Mateo cascaded to affect 2 million people in the San Francisco Bay Area. Therefore, the cities should take all feasible measures to strengthen their response capabilities to ensure essential services. From the viewpoint of sustainability, a city cannot achieve the goal of sustainability if the operations of its lifeline network are vulnerable (Turner et al., 2003; Turner II, 2010).In the ensuing sections, we shall elaborate on the existing researches, which focus on the survivability of systems under nature disasters or man-made accidents (Kamissoko, Zaraté, & Pérès, 2014; Murray, Matisziw, & Grubesic, 2007; San Martin, 2007). The first stream of the research mainly focuses on malicious attacks and network interdiction problems based on the complex network topology methods (Azaiez & Bier, 2007; Hausken, 2011; Rocco, Ramirez-Marquez, Salazar, & Yajure, 2011). The second stream studies the network flow problems under disruptions (Garg & Smith, 2008; Sorokin, Boginski, Nahapetyan, & Pardalos, 2013), which is formulated as IO model that could effectively evaluate the performance of the whole network at each time period. The third stream focuses on network vulnerability analysis including network design and operations against blackout based on the network topology, which is largely used to identify the critical components in the network (Alguacil, Arroyo, & Carrión, 2010; Fiedrich, Gehbauer, & Rickers, 2000; Zio, Golea, & Rocco S., 2012).The approaches used to solve the post-disaster resource allocation problem include applied statistical and probabilistic models combined with multi-objective programming, two-stage model and dynamic model (Samuel & Guikema, 2012; Shan, Wang, & Li, 2012; Srdjevic, Srdjevic, Blagojevic, & Suvocarev, 2013; Yan & Shih, 2009; Yatesa, Battab, Karwanb, & Casasc, 2012). Specifically, Barbarosoğlu and Arda (2004) proposed a two-stage stochastic programming model to plan the transportation of vital first-aid commodities to disaster-affected areas during emergency response; Lee, Mitchell, and Wallace (2007) formulated a mixed integer model to design optimal responding strategies for emergencies with the objective of minimizing cost; Scaparra and Church (2008) identified the most cost-effective way of allocating protective resources among the facilities of an existing but vulnerable system using bi-level programming in such a way that the impact of the most disruptive attack on the unprotected facilities is minimized; Cavdaroglu, Hammel, Mitchell, Sharkey, and Wallace (2013) formulated a service restoration and job scheduling in interdependent systems; and Wex, Schryen, Feuerriegel, and Neumann (2014) proposed and compared several heuristics for allocating available rescue units to incidents with the objective of minimizing the sum of completion times weighted by severity.Furthermore, since the resource allocation problem could be generalized to the unrelated parallel machine scheduling problems, many heuristic algorithms could also be used to solve the resource allocation problem (Lin, Pfund, & Fowler, 2011; Su & Lien, 2009; Yeh, Lai, Lee, & Chuang, 2014).However, in the existing resource allocation studies, there are two problems that require further discussion. The first is that the objective of most models only focuses on minimization of the overall costs (Brown, Carlyle, Salmerón, & Wood, 2005; Shen, 2013; Zhang & Peeta, 2011), while studies focus on minimization of the completion time is by far limited (Faraj & Xiao, 2006; Wex et al., 2014). The total losses could not be solely measured in terms of costs because the consequences as a result of accidents are hard to be assessed, in other word, it doesn't make sense to trade off the costs and the restoration time. Therefore, during the rescue time horizon, the minimization of the restoration time should take priority for stakeholders in their decision-making process. The second problem is that in the accidents, the interconnectivities of the lifeline network may trigger cascading failures, which can result in the amplifications of the overall losses, therefore, the whole network efficiency shall be considered as the most important metric during the resource allocation assessment procedure. In this study, we consider the emergency allocation problem with limited resources and restoration time for the lifeline systems with the consideration of the whole network efficiency. To solve the resource allocation and scheduling problem, we utilize the network system vulnerability analysis method to sort those critical components to be repaired, and then put them into the two-stage mixed integer model formulated.This paper is organized as follows. Section 2 presents the lifeline emergency resource allocation model, which is formulated as a two-stage programming. Section 3 presents the proposed algorithms to solve the two-stage programming. Section 4 demonstrates the computational results and some discussions. Conclusions are detailed in the final Section.In the study, we focus on lifeline systems with three sub-systems, which include gas, power, and water systems, whereby the power network depends on the gas network through the gasified power plants, and the water network depends on both quality and quantity of power supply. Thus, there exist functional connections among the different layers, which means the supply layers are too important to trigger the demand layers failure if any disruption happens. Meanwhile, the network is composed of supply, transshipment, and demand components in each layer as shown in Fig. 1.Such three-layered network could be denoted as a directed graph G(A, V) with nodes vn∈ V(n=1,2,…,N), and directed arcs ai∈ A(i=1,2,…,I) which connect service flow within each layer and between the node-pair (vm, vn) ∈ P, where P represents the set of node-pair. Moreover,air(r=1,2,…,R′) represents the rth destroyed arcs withair∈R; accordingly,vnr(r=R′+1,R′+2,…,R) represents the rth destroyed nodes, withvnr∈R. In other word, the destroyed components include all destroyed arcs and nodes, which belong to destroyed components setR. For rescue tasks, we have rescue team k (k ∈ K), each rescue team has different capabilities to repair the destroyed components as each rescue team can be a group consisting of technicians with different skills.The rescue procedure is that the top-layer decision makers give orders to rescue teams, and then rescue teams have to meet the requirements of the task. In this study, we stand on the rescue teams’ point of view, the goal is to take time priority against restoration costs because of the time sensitive character in emergency case to optimize the efficiency of the whole lifeline system. To achieve the goal, we first select critical destroyed componentsair∈Rto be repaired to ensure the maximization of lifeline system network efficiency within rescue time horizon T, and then, we assign the determined tasksRfrom top-layer decision makers to each rescue team k (k ∈ K) within the time horizon T.In order to facilitate our explanation, the following notations and variables will be used throughout this paper.Parametersuicapacity of arc aicapacity of transshipment nodevn∈Vn=supply or demand at node vncost associated with flow along arc airepair cost of arcairpunishment cost for unmet demand of node vnper unitrestoration cost of per time unittime required by the kth rescue team to process disrupted arcaircompletion time for the kth rescue team to process arcairflow on arc aiat period tslack associated with node vnat period tlr∈ {0, 1},lr=1if arcairis selected to repair; otherwise,lr=0zrk∈ {0, 1},zrk=1if arcairis allocated to the kth team; otherwise,zrk=0brr′k∈{0,1},brr′k=1ifairis a preceding component ofair′in the processing list of the kth team; otherwise,brr′k=0ymtn∈{0,1},ymtn=1if connection of node-pair (vm, vn) is effective at period t; otherwise,ymtn=0βit∈ {0, 1},βit=1if arc aiis destroyed at period t; otherwise,βit=0The followings are the underlying assumptions in the model for the above mentioned problem.•The initial condition of each component in the infrastructure system is known by the sensors/monitors in the systems once the event happened;Unmet demand of supply nodes will cause both transshipment and demand nodes total failure for any node-pair among different layers caused by their interdependencies among the system in terms of their supply and demand links (For example, if the power supply cannot be satisfied for the corresponding infrastructure in the water system, then the water infrastructure will be out of work);We assume that all the teams are capable to repair the destroyed components with different completing time to recover their original operation level except the dysfunction of the components;Without loss of generality, any un-repaired arc is assumed to lose its function during the time horizon.We begin by giving definitions for the problem as below.Definition 1Define all arcs aiflow into nodes vnas the inflow arcs; which belong to setδn+; accordingly, define all arcs aiflow out of nodes vnas outflow arcs, which belong to setδn−.Definition 2Define the nodes vnin any layer with solely outflow arcs as supply nodes, which belong to setV−; accordingly, define the nodes vnin any layer with solely inflow arcs as demand nodes, which belong to setV+; while define those nodes vnin any layer with both inflow and outflow arcs as transshipment nodes, which belong to setV=; furthermore, we haveV−∩V+=V+∩V==V−∩V==∅.Definition 3For the initial status of any destroyed arcair∈R, we haveβit=0whent=0; while for the initial status of any destroyed nodevnr∈R, we haveβit=0for all arcsai∈δn+∪δn−whent=0.Definition 4Let trbe the restoration period of the rth destroyed component (airorvnr), when t > tr, for arcair, we haveβit=1; while for nodevnr, we haveβit=1for allai∈δn+∪δn−∖R, which are connected with nodevnr.Based on the above assumptions and definitions, the resource allocation model (RAM) can be formulated as two-stage programming model as follows.Stage I:(1)MinC=∑t∈T(∑i:ai∈Acopixit+∑m:vm∈V−∖(vm,vn)∈Pρmsmt+∑m,n:(vm,vn)∈Pρmfm(1−ymtn))+∑r:air∈Rcrerlr+ηΓ(2)s.t.∑i:ai∈δn−xit≤fn∀t,∀n:vn∈V+(3)snt+∑i:ai∈δn+xit=−fn∀t,∀n:vn∈V−(4)∑i:ai∈δn+xit−∑j:aj∈δn−xjt=0∀t,∀n:vn∈V=(5)∑i:ai∈δn+xit≤un′∀t,∀n:vn∈V=(6)smt≤(1−ymtn)(−fm)∀t,∀m,n:(vm,vn)∈P,vm∈V−(7)∑i:ai∈δn−xit≤fnymtn∀t,∀m,n:(vm,vn)∈P,vm∈V+(8)∑i:ai∈δn+xit≤−fnymtn∀t,∀m,n:(vm,vn)∈P,vm∈V−(9)∑i:ai∈δn+xit≤un′ymtn∀t,∀m,n:(vm,vn)∈P,vm∈V=(10)xit≤uiβit∀t,∀i:air∈R(11)brr′k+br′rk≤zrk∀r,r′:air,air′∈R,r≠r′,∀k(12)brr′k+br′rk≤zr′k∀r,r′:air,air′∈R,r≠r′,∀k(13)brr′k+br′rk≥zrk+zr′k−1∀r,r′:air,air′∈R,r≠r′,∀k(14)Tr′k≥Trk+pr′k−M(1−brr′k)∀r,r′:air,air′∈R,r≠r′,∀k(15)Trk≥∑k∈Kprkzrk∀r:air∈R,∀k(16)xit,snt,Trk≥0∀t,∀n:vn∈V,∀i:ai∈A(17)ymtn,zrk,brr′k,βit∈{0,1}∀t,∀i:ai∈A,∀r:air∈R,∀kStage II:(18)MinΓ=maxk∈K∑r:air∈Rzrkτrk(19)s.t.∑k∈Kzrk=lr∀r:air∈R(20)∑r:air∈R(zrkτrk)≤T∀k(21)zrk∈{0,1}∀k,∀r:air∈RIn Stage I model, expression (1) represents the minimization of the total costs of the network system during time horizon T, aggregated from the operation costs, punishment costs for the unmet demands, startup cost, and repairing costs. Constraints (2) to (10) are about the network flow problems, while Constraints (11) to (15) describe the restrictions on the scheduling problems. Constraint (2) limits the total outflow of each supply node to be lower than its supply capacity. Constraint (3) ensures that the slacking flow amount of each demand node, and Constraint (4) enforces the flow balance for transshipment nodes. Constraint (5) sets the restriction that the total outflow of each transship node should not exceed its own transship capacity. Constraint (6) reflects Assumption 2, for node-pair (vm, vn), the function of vnwill become invalid if the demand of vmis not satisfied. Once the demand of vmhas been satisfied, the function of vnwill restore immediately. Constraints (7)–(9) ensure that node vnis invalid if the binary variableymtnis zero. In addition, each component has capacity constraint, which is represented in Constraint (10). A precedence relation exists between two components if and only if both of them are assigned to the same rescue team by Constraints (11)–(13). Constraint (14) defines the completion time of each repaired arc considering their precedence relation and processing time. Constraint (15) ensures that the completion time of the first job of each team is no less than its processing time. Constraint (16) ensures non-negativity restrictions and intermediate variables, whilst Constraint (17) ensures the binary variables.The Stage II model can be formulated as a non-identical parallel machine scheduling problem, where the goal is to minimize the makespan as presented in formula (18). Constraint (19) ensures that each selected component can be assigned to sole rescue team. Constraint (20) ensures that the makespan lies within the time horizon, and Constraint (21) ensures the binary variable.To solve the two-stage model, firstly, we have to select which component/group of components to be repaired, and then put these critical components into the two-stage model as input, and then a heuristic algorithm is developed to assign the disrupted componentsairto rescue team k in Stage II, which has been proven NP-hard; knowing the rescue team assignment plan, the rescue sequences of each team can be sorted to minimize the total cost in Stage I programming, which is a Mixed Integer Linear Programming problem and can be solved by CPLEX. As a result, the algorithm consists of the following three major steps and can be summarized as follows.Step 1: Select the critical group of components to be repaired in rescue time horizon to make the whole network be the most efficient, the details of vulnerability analysis process are shown in Section 3.1;Step 2: Decide the rescue teams assignment scheme based on the tasks/components to be repaired (result from Step 1) by solving the Stage II model using the proposed heuristic algorithm to ensure restoration time minimization restricted by whole network efficiency maximization, the details of Stage II algorithm are shown in Section 3.2;Step 3: Compute the total rescue costs by solving Stage I model using CPLEX to ensure total rescue costs minimization restricted by restoration time minimization, the details are shown in Section 3.3.Step 1 is to identify the critical group of components to be repaired, because not all destroyed components can be repaired within given time horizon. Considering the interdependencies and cascading failures in the network, components are evaluated by group rather than individually. For example, although arc a may be more important than b, c individually, the combination of arcs b and c may have most efficient network performance compared with the arc a only. As a result, weighted network efficiencyE(R*)is employed as the indicator for the selection, which can assess the vulnerability improvement after certain group of arcsR*are repaired.E(R*)can be calculated by Eq. (22).(22)E(R*)=1N(N−1)∑m,n:vm≠vn∈Vwmn·1dmnWhereE(R*)denotes the network efficiency when all destroyed components belong toR*are repaired, and N represents the total number of nodes in the network. The parameter dmndenotes the shortest path length between any node vmand vn, which is calculated by Dijkstra algorithm. wmndenotes the weight of each path in the network, which is normalized aswmn=xmn/xmax, where xmnis the minimal arc flow along the shortest path from vmto vnbefore the accidents and xmax  is the maximal arc flow before the accidents.At meanwhile, the other metric to evaluate the whole infrastructure system performance under study is to restore as many components as possible during time horizon. Since the critical group selection process from destroyed setsRis proved as NP-hard problem, we employ NSGA-II (Deb, Pratap, Agarwal, & Meyarivan, 2002) for the multi-objective problem to maximize network efficiency and minimize group size in order to obtain the list of critical groups in different size. The steps of NSGA-II can be shown as follows.•Initial solution generationFor destroyed setR, each chromosome is represented by R random 0–1 variables. If the components are selected, then the corresponding bits of chromosome are 1, otherwise, they are 0. From that we can generate an initial solution with the population size of S.Generation of offspring populationFollowing Step 1, we generate an offspring of size S from parents’ generation using crossover, and mutation operators. The crossover procedure selects randomly from its parents’ genes to generate the offspring as represented in Fig. 2. As for the mutation procedure, a gene is randomly selected and changed based on the mutation rate as shown in Fig. 3.Determination of a new generationWe first combine parent and offspring population into a set followed by calculating the network efficiency and group size for each individual. The new generation is then selected using the non-dominated ranking approach as shown follows.Sort the chromosomes using the non-dominated ranking approach and identify frontsFi, then calculate the crowding distance of each individual inFi.SetG=∅,i=1. While|G|+|Fi|<S, doG={G∪Fi}i=i+1Sort solutions inFiin descending sequence in accordance with crowding distance, then add the firstM−|G|individuals toG.Gis the next generation with sizeS.Iteration and stopping criteriaAs the population size and the number of generations depend on specific problem, the iteration is terminated if the stopping criteria are reached.The Stage II programming is treated as a non-identical parallel machine scheduling problem with components to be repaired by K emergency rescue teams, the difference is that Constraint (20) restricts the makespan to be within rescue time horizon T. In what follows, we will discuss about the number of components that could be repaired within the time horizon.Definition 4Let lupbe the biggest group size of destroyed components to be repaired, which means the number of destroyed components to be repaired by the most efficient rescue team during the time horizon, where the minimal processing time for each destroyed component isp′rkk∈K=mink∈Kprk,∀r:air∈R.Definition 5Let Γavebe the optimal makespan if the repairing of each component is assumed to be detachable, soΓmax=min{Γave+Δk,T}, andΓmin=Γave−Δk, k ∈ K.The relationship among Γave, Γmax , and Γmin  are shown in the following Fig. 4, where an initial solution withΓmax=Γave+Δ1,Γmin=Γave−Δ2is represented in Fig. 4a, and Γmax  is shortened by reducing Δ1 toΔ1′, and Δ2 toΔ2′in Fig. 4b, thus we could get an improved solutionΓmax′.Lemma 1The optimal group size of the critical group satisfies l* < lup.For each possible group size, we have to choose the critical group to ensure the makespan within time horizon T. Therefore, for a given set of components to be repaired, we propose a heuristic algorithm to search the optimal critical the group size in the available rescue teams from lup.Lemma 2Let Γlowbe the lower bound of optimal solution, if repairing each component is assumed to be detachable, there existsΓlow=Γave.ProofFor a contradiction, we assume that Γave> Γlowin some cases, which meansΓlow=Γave−δ(δ > 0). If all jobs could be completed within Γlow, then Γlowis the optimal makespan when the repairing of each component is assumed to be detachable, which contracts with Definition 5. For another contradiction, assume Γave< Γlow, which meansΓlow=Γave+δ(δ > 0). As δ could be reduced to zero by assigning any parts of jobs to other rescue teams, which contracts with our assumption. Therefore, neither Γave> Γlownor Γave< Γlowis right, thus we can deduce thatΓlow=Γaveexists.Lemma 3In an optimal solution, there will beΓopt=minΓmax.ProofAssume that the optimal solution is Γmax , and then from Definition 5, we know thatΓmax=min{Γave+Δk,T}; meanwhile there also exists another feasible solutionΓmax′=min{Γave+Δk′,T}, withΔk′<Δk. According to Lemma 2, we have Γave≤ Γoptand hence,Δk′>Δk>0. This impliesΓmax′≥Γmax, which contracts with the assumption.How to obtain lower bound ΓlowTo calculate Γlow, we consider a scenario that the repair of each component is detachable. The Stage II model can be transformed into a Linear Programming (LP) in which zrk∈ {0, 1} is replaced by zrk≥ 0(∀k, r). According to Lemma 1, the optimal solution of LP can be seen as the lower bound.How to obtain the optimal solutionAccording to Lemma 2, we proposed an algorithm to minimize Δkby ordinal assignment and swap between the longest team and the shortest team as shown in Fig. 2b. The detailed steps are described as below.Step 1: Initial solutionWe first find the optimal solution using LP, then the initial solution is obtained by assigning each component to teamk*=argmaxk∈Kzrk.Step 2: Ordinal re-assignment processSetB=∅.Select thekthteam for whichΓk=Γmax, and sort components in thekthteam according to|Γk−Γlow|by non-decreasing sequence.For teamk′=argmink∈K∖BΓkIfB≠K∖{k}, thenfor any componentiin thekth teamifΓk′+τik′<Γmax, assign theith component to thek′thteam and return toStep 2;else setB=B∪{k′};Else, go toStep 3.Step 3: Ordinal interchange processSetB=∅.Select thekthteam for whichΓk=Γmax.For teamk′=argmink∈K∖BΓkIfB≠K∖{k}, thenfor any componentiin thekthteamfor any componentjin thek′thteamifmin{Gain1=τik−τjk,Gain2=Γmax−(Γk′−τjk′+τik′)}>0, then exchange(i,j)and return toStep 2;else if no arc pair could be exchanged, setB=B∪{k′};Else, go toStep 4.Step 4: EndingSetΓmax=maxk∈K{Γk}, end the algorithm.Computational complexity analysisFrom the above procedure, one can find that the Stage II is an assignment problem with k rescue teams and r jobs, the computational complexity isO(kr)+O(kr2)=O(kr2).Table 1shows the proposed heuristic algorithm efficiency compared with branch and bound algorithm by CPLEX in running six times. One can see from the result that the time consumption of branch and bound method increases with the size of the problem, while the proposed heuristic algorithm is capable to solve large-size problem efficiently and with the gap less than 3.1%.Knowing the critical group obtained by the heuristic algorithm in Stage II, the rescue teams are assigned to those components in the critical group. In this section, the sequences for those components to be repaired are sorted in each team using ILOG CPLEX. The objective of Stage I is to minimize the total costs by iterating the repairing sequence in the sub-group.Shanghai is a coastal city in China. It lies on the southeastern frontier of Yangtze Delta, therefore, it contains many rivers, canals, and lakes, and is known for its rich water resources. In recent years, the disaster prone city has experienced natural disasters such as typhoons and floods quite often, which has resulted in considerable damage in lifeline systems. In particular, the scenarios under consideration include lifeline systems of gas, power, and water systems in 4 districts of Fengxian, Jinshan, Nanhui, and Minhang in Shanghai, as shown in Fig. 5.We consider the key infrastructures in the 4 districts, which consist of 9 gas, 14 power, and 9 water infrastructures and 51 links, which constitute a three-layered network as a whole lifeline system. Each sub-system (water, gas, power) can be seen as a network with three categories of nodes, which are supply, transshipment and demand nodes. For each time period, the demand nodes require certain amount of supply to maintain their normal operations.Generally speaking, the capacity of the supply nodes is always equal to the demand nodes, and the demand data of nodes of lifeline systems show is in Table 2. Once events happened, there are 12 links disrupted in different functions in the lifeline system, which can be seen in Fig. 6. Knowing the task of repairing 16 arcs, the goal of the post-disaster rescue is to minimize the cost under the guarantee of completion time minimized. In this case, the destroyed componentsR=12, the emergency rescue teamsK=3, and the time horizonT=24hours. The details of those destroyed components are presented in Table 3and the details of operation cost, and capacity of each arc are presented in Table 4.According to the procedures of the proposed algorithm, we will demonstrate the 3 steps and the results as follows. Meanwhile, we have tested that the proposed algorithm can solve large-scale problem.•Select the critical groupWe first select the critical group in different size from the disrupted components setRby the NSGA-II described in Section 3.1. The algorithm is coded by Matlab 2013 version with an Intel processor operating at 3.40 GHz and 16 GB RAM, where population sizeS=80, cross-over rateα=0.8, mutation rateβ=0.2, and number of generationsG=20respectively. The computational results and improvement rates of the corresponding network efficiency are shown in Table 5, which demonstrates that the network efficiency increases with the group size, therefore, the more components are repaired, the better network efficiency is achievable.According to Lemma 1, we first get that the optimal group size l* ≤ 8, and then we try if the makespan of the critical group of size 8 is within the time horizonT=24. If the makespan exceeds the time horizon T, we will go to the critical group of size 7 till we find the feasible group size. The computational result demonstrates that the optimal group sizel*=8, with the makespan being 24 hours, the corresponding network efficiency improvement being 38.7%, and the critical group of arc is a set ofair,where the number of arcsr={1,2,3,6,7,10,11,12}.Allocate rescue teamsWe employ the proposed heuristic algorithm in Stage II model for the allocation problem with 8 critical groups and 3 rescue teams, which can be solved by Matlab with the computational time of 0.62 s. Based on the processing times matrix shown in Table 6, the optimal allocation plan assigned to each team is: K1: {2, 7, 11, 12}, K2: {3, 6}, K3: {1, 10}.Optimize the total costsObtained the assignment plan of each team, we then minimize the total costs by adjustment of the operating sequence using Stage I model by the CPLEX solver. The optimal cost equal to $1,400,351 in total, and the computational time is 2.02 s. The final processing sequence is as shown in Fig. 7.Test for the algorithm efficiencyWe also test our network efficiency by several scales of network by parallel computing. The scale of the problem can be determined by the number of nodes, the number of arcs, the number of destroyed components of the whole lifeline network and the number of rescue teams. In parallel computing, as the computational complexity of arc selection is O(P2), where P means the size of population size in NSGA-II, and the computational complexity of stage II isO(kr)+O(kr2)=O(kr2), therefore the maximal computational time of the three steps is constrained by the Branch and Bound in Stage I. The computational results under different problem scales can be seen in Table 7and Fig. 8.The biggest network scale the proposed method can solve is 400 nodes with 640 arcs as the computational time begins to increase exponentially from the scale 400*640*50*5, which can be seen from Fig. 8.

@&#CONCLUSIONS@&#
The study has addressed a resource allocation and schedule problem to optimally restore the most critical components in the interdependent lifeline systems under disruptions. A general two-stage programming model has been developed, where Stage I programming aims to minimize total losses during the time horizon, while stage II programming targets to restore system functions as quickly as possible. To solve the two-stage programming, the critical group selection approaches are designed to maximize the whole network efficiency firstly. Then, a heuristic algorithm has been presented to determine the rescue teams’ assignment scheme based on the tasks/components selection process by vulnerability analysis, and the optimal repairing sequence is determined in order to minimize the total cost. The problem under study has several unique features over previous research: (i) the model provides metrics of the whole network and fully integrates the vulnerability analysis into the restoration strategy; (ii) the two-stage model takes time priority strategy between total losses and the restoration time under time sensitive scenarios; (iii) a solution procedure is developed to solve the rescue problem and capable to be applied into real cases. Emergency response stakeholders could therefore optimize the resource allocation and scientifically organize the rescue procedure, which will greatly improve the capability to respond to emergencies that can disrupt the lifeline services. Furthermore, the network vulnerability analysis and resource allocation model could be extended and applied to the lifeline system protection strategies.According to the computational results, the network scale the proposed method can solve is 400 nodes with 640 arcs, which is enough for the 4 districts in the Case Study. To solve larger scale problems, the whole network can be separated into sub-networks with smaller scale as the infrastructure connections among districts are usually weak, and then it can be solved by the proposed method. Further, the proposed approaches under study are only considered determined physical status of infrastructures standing on the view of rescue teams. It cannot work if we consider from the perspective of top decision makers. In the potential future work, we may address the dynamic response strategies from the view of top decision makers considering the very complex scenarios.