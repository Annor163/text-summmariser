@&#MAIN-TITLE@&#
Polynomial cases of the economic lot sizing problem with cost discounts

@&#HIGHLIGHTS@&#
We analyzed new lot sizing problems arising in transportation logistics.We studied the case with modified all-unit discount transportation cost function and with incremental discount cost function.We formally proved properties of the optimal solution.We proposed polynomial time exact algorithms.We performed a computational study to show the efficiency of the algorithms.

@&#KEYPHRASES@&#
Economic lot sizing problem with cost discounts,Piecewise linear,Modified all-unit discount,Incremental discount,Polynomial time algorithms,

@&#ABSTRACT@&#
In this paper we study the economic lot sizing problem with cost discounts. In the economic lot sizing problem a facility faces known demands over a discrete finite horizon. At each period, the ordering cost function and the holding cost function are given and they can be different from period to period. There are no constraints on the quantity ordered in each period and backlogging is not allowed. The objective is to decide when and how much to order so as to minimize the total ordering and holding costs over the finite horizon without any shortages. We study two different cost discount functions. The modified all-unit discount cost function alternates increasing and flat sections, starting with a flat section that indicates a minimum charge for small quantities. While in general the economic lot sizing problem with modified all-unit discount cost function is known to be NP-hard, we assume that the cost functions do not vary from period to period and identify a polynomial case. Then we study the incremental discount cost function which is an increasing piecewise linear function with no flat sections. The efficiency of the solution algorithms follows from properties of the optimal solution. We computationally test the polynomial algorithms against the use of CPLEX.

@&#INTRODUCTION@&#
While the distribution of goods is usually driven by customer demand and is focused on service quality, the procurement of goods is a typically cost-driven phase (see Simchi-Levi, Kaminsky, & Simchi-Levi, 2007) in supply chain management. The procurement costs are mostly dependent on the cost of goods and on the transportation costs. One of the most frequently used transportation modes, especially when the shipment size is relatively small and the distance to be traveled is not too large, is less-than-truckload (LTL), where different shipments are consolidated in the same truck that delivers the goods to different customers. The assumption that the transportation cost charged by a carrier linearly depends on the shipped quantity usually makes the decision-making models simple and efficiently solvable. However, while this may be a reasonable assumption in a tactical planning phase, where the detailed cost structure is not essential, the linearity assumption is too simplistic in an operational phase. In fact, the tariffs applied by the carriers have a more complex structure. In LTL service, carriers encourage large shipments through non-linear cost structures. In most cases the tariffs have a piecewise linear structure. This is the case also in parcel rates and full-truck-load services (see Lapierre, Ruiz, & Soriano, 2004).A company that optimizes its procurement phase has to take into account the procurement costs, that is the ordering costs and the inventory holding costs. Given the demand pattern, both kinds of costs are influenced by the ordering pattern. The classical model for the optimization of the procurement phase is the well known single-item economic lot sizing problem (ELS problem). A company has to satisfy a known demand over a discrete finite horizon. In each period the unit ordering and holding costs are known. Backlogging is not allowed and there is no constraint on the quantity ordered in each period. The problem consists in deciding when and how much to order in each period so that the total cost is minimized, where the total cost is the sum of the ordering cost and of the inventory holding cost (or simply inventory cost), both computed over the time horizon. The model, that is efficiently solvable, has been introduced by Wagner and Whitin (1958) and has attracted an enormous amount of research. The importance of the ELS problem in theory and practice has been widely recognized and the model appears in several textbooks on operations management (see, for example, Muckstadt & Sapra, 2009; Nahmias, 2001). The original paper has been recently reprinted in Management Science in Wagner and Whitin (2004) to evidence its relevance and impact on theory and practice. With respect to the basic Economic Order Quantity (EOQ) model due to Whitin (1957), in the ELS a multi-period problem is modeled, with the demand and the inventory holding costs possibly different in different time periods. The ordering cost, as in the EOQ model, is a fixed cost charged in each period where an order takes place. Several papers appeared in the literature that studied extensions of the original ELS problem. In most cases such extensions consider different ordering cost functions and we discuss the most interesting cases in the following. Also, efficient solution approaches to already known problems were presented (see, for example, Aggarwal & Park, 1993; Federgruen & Tzur, 1991; Wagelmans, van Hoesel, & Kolen, 1992). We refer to Brahimi, Dauzere-Peres, Najid, and Nordli (2006) for a survey on the ELS problem and to Robinson, Narayanan, and Sahin (2009), Buschk√ºhl, Sahling, Helber, and Tempelmeier (2010), Hwang (2010), Hellion, Mangione, and Penz (2012) and Li, Ou, and Hsu (2012) for recent contributions to this problem.As discussed by Nahmias (2001), there are three types of cost discount schemes commonly used in practice. The first type is the all-units discount scheme under which different discount rates apply to all units of different ordered quantities. The second type is the incremental discount scheme under which different discount rates apply to incremental ranges of the ordered quantity. The third type is the Truck Load (TL) discount scheme (also known as the carload discount scheme) under which the transportation service provider charges a LTL rate until the customer pays for the cost of a full truckload of Q units, which is typically less than the cost of shipping Q units at an LTL rate. Once the first truck is full, the customer again pays the LTL rate until the second truck is full, and so on. The TL discount scheme is also applicable to the situation where the customer is using a TL carrier and paying a TL rate for its TL shipments, although an LTL carrier is used for the delivery of the leftover quantities.In this paper, we study the economic lot sizing problem with two different cost discount functions. The first is the modified all-unit discount cost function studied in Chan, Muriel, Shen and Simchi-Levi (2002) which alternates sections with positive slope and flat sections. The initial flat section indicates a minimum charge that must be paid for shipping a small quantity. This cost function corresponds to the case called in the industry shipping a quantity, but declaring a lower quantity. For instance, each pair of positive slope and flat sections can corresponds to the transportation capacity of one vehicle. If the shipped quantity is in the flat part, the cost of the full load vehicle is paid. Therefore, there is an incentive in sending quantities corresponding to full load vehicles. For the further practical motivations to study the modified all-unit discount cost function we refer to Chan, Muriel, Shen and Simchi-Levi (2002) and Chan, Muriel, Shen, Simchi-Levi and Teo (2002), where a variety of arguments is provided. It was shown in Chan, Muriel, Shen and Simchi-Levi (2002) that the problem is NP-hard. Moreover, the performance of practical policies was investigated in Chan, Muriel, Shen and Simchi-Levi (2002) for the single retailer case, whereas in Chan, Muriel, Shen, Simchi-Levi and Teo (2002) the results were extended to the multi-retailer case. In Shaw and Wagelmans (1998) the capacitated version of the problem was studied and a pseudo-polynomial algorithm was presented that can be applied to the uncapacitated case by setting the capacity to a large value.In this paper, we investigate the problem where the cost function does not vary from period to period. A minimum charge is paid for small quantities. Then, an alternating sequence of sections with positive slope and flat sections follows. Both the sections with positive slope and the flat sections have identical length. The two lengths may be different. We will discuss in the paper the relevance of this assumption, that makes the cost function regular. We show that the problem with this piecewise linear cost function, referred to as regular modified all-unit discount cost function, can be solved inO(I2T3)time, where I is the number of echelons, and T is the length of the discrete finite horizon. An echelon refers to two consecutive line segments, one with positive slope and one flat. The number of echelons is equal to the number of sections with positive slope.The second cost function we consider is the incremental discount cost functionwhich is an increasing piecewise linear function. We show that in this case the economic lot sizing problem can be solved with a more efficient polynomial algorithm, with complexityO(T2). The result relies on the property that it is never beneficial to order if the inventory available is sufficient to satisfy the current demand. This property does not hold in general for the economic lot sizing problem with regular modified all-unit discount cost function, but does hold if there is no minimum charge for small quantities.To show how valuable the availability of polynomial algorithms is, we present computational results where we compare the solution time required by the algorithms with the solution of a mathematical programming formulation through CPLEX.The structure of the paper is as follows. In Section 2 we define the problem we study in this paper and we give a mathematical formulation. In Section 3 we describe the problem with regular modified all-unit discount cost function, we prove properties of the optimal solution and present the polynomial algorithm for its solution. Then, in Section 4 we present properties of the optimal solution and a more efficient polynomial algorithm for the problem with incremental discount cost function. Finally, in Section 5 we present the computational results and in Section 6 we draw some conclusions.In the economic lot sizing problem a facility faces known demands over a discrete finite horizon. At each period, the ordering cost function and the holding cost function are given and they can be different from period to period. There are no constraints on the quantity ordered in each period and backlogging is not allowed. The objective is to decide when and how much to order so as to minimize the total ordering and holding costs over the finite horizon without any shortages.Let T be the length of the discrete planning horizon and denote byt=1,‚Ä¶,Tany period where an order may take place. If an order is placed at period t, then the delivery is assumed to be instantaneous. Letdtbe the known customer demand at period t, that we assume integer, andht‚©æ0be the unit inventory cost. We assume, without loss of generality, that the initial amount of inventory isI0=0.At period t the sequence of the operations is as follows. The inventory level is computed, then the product shipped at period t is received and, finally, the demand at period t is satisfied. LetFt(Qt)be the ordering cost associated with an order of sizeQtplaced at period t. The ordering cost functionFt(Qt)depends on the quantity through a cost discount function.The first cost function we study is the modified all-unit discount cost function which is a piecewise linear function which alternates between increasing and flat sections, starting with a flat section. This cost function is studied in Chan, Muriel, Shen and Simchi-Levi (2002) and we now formally describe it. The function is depicted in Fig. 1. In Chan, Muriel, Shen and Simchi-Levi (2002) the use of this kind of function in practice is explained and motivated with a variety of arguments. The function is defined as follows. For small quantities of ordered product, that is quantities less thanM1, a minimum charge c is charged. Then, the function is structured in an infinite sequence of echelons, where each echelon i is defined by three integer valuesMi,Mi‚Ä≤andMi+1. The cost function is:Ft(Qt)=0,ifQt=0c,if0<Qt<M1Œ±1Qt,ifM1‚©ΩQt<M1‚Ä≤Œ±1M1‚Ä≤,ifM1‚Ä≤‚©ΩQt<M2Œ±2Qt,ifM2‚©ΩQt<M2‚Ä≤Œ±2M2‚Ä≤,ifM2‚Ä≤‚©ΩQt<M3.,.,whereŒ±i<Œ±i-1,i>1,Œ±1M1=candŒ±iMi‚Ä≤=Œ±i+1Mi+1,i‚©æ1.The economic lot sizing problem with modified all-unit discount cost function has been shown to be NP-hard in Chan, Muriel, Shen and Simchi-Levi (2002). In this paper we assume that the cost function does not vary from period to period and study a polynomially solvable case. We assumeht=h,t=1,‚Ä¶,T, andFt(Qt)=F(Qt),t=1,‚Ä¶,T. Moreover, we indicate by I the number of echelons. An echelon refers to two consecutive line segments, one with positive slope and one flat. The number of echelons is equal to the number of sections with positive slope. We also assume that‚àët=1Tdt‚©ΩMI.In this paper we study the case where the sections of the cost function with positive slope have identical length and the flat sections have identical length too, that isMi‚Ä≤-Mi=MandMi+1-Mi‚Ä≤=M‚Ä≤. The two lengths may be different. We define asL=M+M‚Ä≤the length of any echelon. We also assume thatM1=L. Fig. 2shows the ordering cost function for this problem, that we call the regular modified all-unit discount cost function. A special case is when there is no minimum charge for small quantities, that is whenM1=0. We will show that, in this special case, it is never beneficial to order if the inventory is sufficient to satisfy the current demand but that this property does not hold in general for the regular modified all-unit discount cost function.The second cost function we study is the incremental discount cost functionwhich is an increasing piecewise linear function. An echelon corresponds to a line segment. The number of echelons is equal to the number of segments with positive slope.The lengths of the echelons may be different and the function is defined as follows:Ft(Qt)=Œ±1Qt,if0‚©ΩQt<M1M1Œ±1+Œ±2(Qt-M1),ifM1‚©ΩQt<M2M1Œ±1+Œ±2(M2-M1)+Œ±3(Qt-M2),ifM2‚©ΩQt<M3.,.,whereŒ±i<Œ±i-1,i>1.Fig. 3shows the incremental discount cost function. As in the former model, also here we assumeht=h,t=1,‚Ä¶,T, andFt(Qt)=F(Qt),t=1,‚Ä¶,T. I indicates the number of echelons, that here correspond to individual segments of the piecewise linear function. We still assume that‚àët=1Tdt‚©ΩMI.The incremental discount cost functionis one of the main discount cost functions used in practice (see, for example, Chopra & Meindl, 2010; Nahmias, 2001).We define asxtthe quantity ordered at period t and byxt‚àóits optimal value. We denote byItthe inventory level at period t and byIt‚àóits optimal value. In the following we give a mathematical formulation for the economic lot sizing problem with cost discounts.LetK={1,‚Ä¶,l}be the set of breakpoints of the ordering cost function. A breakpoint is a point where the slope of the function changes. The first breakpoint corresponds to the initial point of the function. We denote as K the set of breakpoints,Qkas the quantity corresponding to the breakpointk,k‚ààK. We haveQ1=0.We use the following variables. Letztkbe a binary variable equal to 1 if at period t the breakpoint k is the largest one lower than or equal to the shipped quantityxtat period t. Letytkbe a continuous variable that represents the quantity that exceeds the largest breakpoint reached at period t. We setyt,l=0. If, in a given solution,kÀÜis the largest breakpoint such thatQkÀÜis not greater than the shipped quantityxt, thenytkÀÜ=xt-QkÀÜ, whileytk=0,k‚â†kÀÜ. We setd0=I0=0.We need some additional notation. Letckbe the unit ordering cost in the interval between breakpoints k andk+1, while letCkbe the total ordering cost paid if a quantity equal toQkis ordered, that isF(Qk)=Ck. For instance, in the regular modified all-unit discount cost function,C1=candc1=0,C2=candc2=Œ±1,C3=Œ±1M1‚Ä≤andc3=0.The MILP model corresponding to this problem, referred to as ProblemP, can be formulated as follows.(1)min‚àët=1T+1hIt+‚àët=1T‚àëk‚ààKCkztk+ckytk(2)It=It-1+‚àëk‚ààK(Qkzt-1,k+yt-1,k)-dt-1t=1,‚Ä¶,T+1(3)ytk‚©Ω(Qk+1-Qk)ztkt=1,‚Ä¶,Tk‚ààK(4)‚àëk‚ààKztk‚©Ω1t=1,‚Ä¶,T(5)It‚©æ0t=1,‚Ä¶,T+1(6)ytk‚©æ0t=1,‚Ä¶,Tk‚ààK(7)ztk‚àà{0,1}t=1,‚Ä¶,Tk‚ààK.The objective function (1) expresses the minimization of the sum of the inventory cost and of the ordering cost. Constraints (2) define the inventory levels, while (3) guarantee the relation between the variables y and z and that the selected breakpoint is the largest not greater than the shipped quantity. Constraints (4) ensure that at most one breakpoint is selected. Finally, (5)‚Äì(7) define the range for the variables of the problem.In Croxton, Gendron, and Magnanti (2003a, 2003b) different formulations for nonconvex piecewise linear cost minimization problems are proposed. One class of formulations is called Multiple Choice Models which employ segment variables with the same meaning as the z variables used in ProblemP. This formulation has been compared with other formulations for nonconvex piecewise linear cost minimization problems in Croxton et al. (2003a, 2003b) and Vielma, Ahmed, and Nemhauser (2010) and proved to be effective.In this section we derive properties of the optimal solution of the economic lot sizing problem with regular modified all-unit discount cost function(ELS-REG) and present a polynomial algorithm for its solution.We characterize the optimal solution, deriving properties that are fundamental for the design of a polynomial algorithm.We will use the expression the cost of the last unit of product for a transported quantity x to indicate the difference between the ordering cost of x and the ordering cost ofx-1. For example, if the quantity transported isMi‚Ä≤+1the cost of the last unit of product is 0.Consider a feasible solution of the ELS-REG. We say that a periodt,t=1,‚Ä¶,T, is a regeneration point if the inventory level at period t is equal to 0, that is ifIt=0. Moreover, let us defineTt1,t2={t1+1,t1+2,‚Ä¶,t2-1}for anyt1<t2such that1‚©Ωt1,t2‚©ΩT. Then, we say that the interval[t1,t2]is a regeneration interval ifIt1=It2=0andIt>0fort‚ààTt1,t2. LetD([t1,t2])=‚àët=t1t2-1dtbe the corresponding total demand. The concept of regeneration interval has been used by other authors (see, for example, Florian & Klein, 1971; Pochet & Wolsey, 1993).First, we prove the following theorem stating that an optimal solution exists such that in any regeneration interval there exists at most one period in which the shipping quantity is not a multiple of L. We refer to this quantity as fractional quantity.Theorem¬†1An optimal solution to the ELS-REG exists such that, in any regeneration interval[t1,t2], there exists at most one period t with fractional quantity.Let us consider an optimal solution of the ELS-REG. We show that, in case it does not satisfy the claim of the theorem, we can transform it in a solution which satisfies the claim without increasing the cost.Suppose that the optimal solution has a regeneration interval[t1,t2]with more than one fractional quantity. Take the two smallest consecutive periods with fractional quantityt‚Ä≤andt‚Ä≥,t1‚©Ωt‚Ä≤<t‚Ä≥<t2. Letxt‚Ä≤andxt‚Ä≥be the fractional quantities, respectively. Moreover, letC(xt‚Ä≤)andC(xt‚Ä≥)be the ordering cost of the last unit of the quantitiesxt‚Ä≤andxt‚Ä≥, respectively.IfC(xt‚Ä≤)‚©æC(xt‚Ä≥), then the assumption of optimality of the solution would be violated because a better solution could be found by moving one unit of ordered product fromt‚Ä≤tot‚Ä≥.Thus, let us assumeC(xt‚Ä≤)<C(xt‚Ä≥). Then, we may have different situations: (a)C(xt‚Ä≤)=0,C(xt‚Ä≥)‚â†0, (b)C(xt‚Ä≤)‚â†0,C(xt‚Ä≥)‚â†0. We distinguish two cases. IfC(xt‚Ä≤)+h(t‚Ä≥-t‚Ä≤)‚©ΩC(xt‚Ä≥), then we move one unit of ordered product fromt‚Ä≥tot‚Ä≤. The cost of the modified solution does not increase, because both quantities int‚Ä≤andt‚Ä≥were fractional and the ordering cost of the moved unit int‚Ä≤is equal to or lower thanC(xt‚Ä≤). If, instead,C(xt‚Ä≤)+h(t‚Ä≥-t‚Ä≤)>C(xt‚Ä≥), then we move one unit of ordered product fromt‚Ä≤tot‚Ä≥. Again, the cost of the modified solution does not increase with respect to the previous solution with a similar argument.We now consider the modified optimal solution. Note that, if the unit of product has been moved backward, then the inventory level in any intermediate period has increased and the solution is feasible. If the modified solution has a regeneration interval with more than one fractional quantity, we repeat the previous procedure. If it has been moved forward, then the inventory level has decreased. We have two cases.If the inventory level in a period betweent‚Ä≤andt‚Ä≥is 0, then the number of regeneration intervals has increased. If the modified solution has a regeneration interval with more than one fractional quantity we apply the previous procedure. Otherwise, the claim is proved.If the inventory level in any period betweent‚Ä≤andt‚Ä≥is greater than 0, then we consider the same regeneration interval and take the two smallest consecutive periods with fractional quantityt‚Ä≤andt‚Ä≥(possibly the same) such thatt1‚©Ωt‚Ä≤<t‚Ä≥<t2, if any, and we repeat the previous procedure. If at most one quantity is fractional in the regeneration interval under consideration, then we consider another regeneration interval with more than one fractional quantity, if any, and apply the same procedure. If in all regeneration intervals at most one quantity is fractional, then the claim is proved.‚ñ°If in the regeneration interval[t1,t2]there exists a period t such thatxtis a fractional quantity, then the fractional part of the quantity is equal to(8)f=D([t1,t2])moduloL=D([t1,t2])-D([t1,t2])LL,that is the part remaining after subtracting a multiple of L. The regeneration points decompose the problem in independent sub-problems as the starting and ending inventory level is equal to 0. It is important to note the following.Remark¬†1Given a sequence of regeneration points, an optimal solution can be obtained by finding an optimal solution in each regeneration interval separately.An optimal solution to ELS-REG can be found by looking for the sequence of regeneration points with minimum total cost. Thus, we can enumerate all the sequences of regeneration points and, for each sequence, thanks to Remark 1, we can determine an optimal solution by optimizing the problem on each regeneration interval separately. An optimal solution on a regeneration interval can be found by looking for an optimal solution with at most one fractional quantity, due to Theorem 1.We prove that the ELS-REG can be solved in polynomial time by showing that an optimal solution on a regeneration interval can be found in polynomial time and, then, that all the sequences of regeneration points can be explored in polynomial time.We first show that, given a regeneration interval[t1,t2], an optimal solution can be found in polynomial time. Note that, even taking advantage of Theorem 1, a natural algorithm that explores all the possible quantities to order at each period of the regeneration interval has exponential complexityO(It2-t1). The polynomial complexity of the algorithm we present comes from the fact that only the inventory level characterizes a solution in period t. The algorithm avoids the redundant exploration of solutions, keeping track of the best sequence of orders that creates a given inventory level in period t.Consider any regeneration interval[t1,t2]. Letst, witht1<t<t2, be the level of the inventory at period t and letutbe the quantity ordered at period t. The setUt(st)of possible quantities ordered at period t depends on whether a fractional quantity has been ordered before t or not. Let us first defineH(st)as the set of the possible echelons we consider for the definition ofUt(st),H(st)={Œ∑:Œ∑integer,0‚©ΩŒ∑‚©ΩI,Œ∑L‚©Ω‚àëœÑ=tt2dœÑ-st}. Then, the setUt(st)isUt1(st)={Œ∑L:Œ∑‚ààH(st)}, if a fractional quantity has already been ordered before t, orUt1(st)‚à™Ut2(st), whereUt2(st)={Œ∑L+f:Œ∑‚ààH(st)‚ßπ{I}}with f as defined in (8), if a fractional quantity has not been ordered before t. Note that the cardinality ofUt1(st)is at mostI+1, while the cardinality ofUt1(st)‚à™Ut2(st)is at most2I+1.Given the definition ofUt(st), in general, the setStof possible inventory levels at period t depends on the quantities ordered before t and on the demand before t. The level of the inventory at t is equal to the difference between the total ordered quantity before t and the total demand fromt1tot-1. At periodt1,St1={0}, as the initial inventory at periodt1is equal to 0. Also, the final inventory level at periodt2is 0,St2={0}.LetStdenote the possible values of the inventory level in period t. Note that the cardinality ofStis at most2I+1. This follows from observing that the inventory level in t is the difference between the quantity ordered up to t and the total demand up tot-1, and that the quantity ordered up to t can take2I+1values at most, given the cardinality ofUtand that the total ordered quantity does never exceed the total demand and, thus, does never exceedMI.The Algorithm RegInA (Regeneration Interval Algorithm) explores all the possible solutions by generating, for each period t, for any possible inventory level at t (that isst), for any possible quantity ordered at t (that isut), the cost of the best partial solution that creates int+1an inventory level equal tost+ut-dt. Letwt‚àó(st)be the current minimum total cost from periodt1, where the inventory level is 0, to period t, where the inventory level isst. The optimal solution is the best solution found int=t2. The optimal cost on the regeneration interval iswt2‚àó(0).We will indicate byflagt(st)an indicator that takes value false if the fractional quantity has not been yet generated to reach statestin t and value true otherwise.Algorithm¬†1Algorithm RegInA.1: SetSt1‚Üê{0};St2‚Üê{0};St‚Üê‚àÖ,t=t1+1,‚Ä¶,t2-1;wt1‚àó(0)‚Üê0;wt2‚àó(0)‚Üê‚àû;flag1(0)‚Üêfalse2: fort=t1,t1+1,‚Ä¶,t2-1do3:for each inventory levelst‚ààStdo4:ifflagt=falsethen5:Ut(st)‚ÜêUt1(st)‚à™Ut2(st)6:else7:Ut(st)‚ÜêUt1(st)8:end if9:for each ordered quantityut‚ààUt(st)do10:st+1‚Üêst+ut-dt11:wt+1(st+1)‚Üêwt‚àó(st)+F(ut)+hst+112:ifst+1‚àâSt+113:St+1‚ÜêSt+1‚à™st+114:wt+1‚àó(st+1)‚Üê‚àû15:end if16:ifwt+1(st+1)<wt+1‚àó(st+1)then17:wt+1‚àó(st+1)‚Üêwt+1(st+1)18:ifut‚ààUt2(st)orflagt(st)=truethen19:flagt+1(st+1)‚Üêtrue20:else21:flagt+1(st+1)‚Üêfalse22:end if23:end if24:end for25:end for26: end for27: The optimal cost is given bywt2‚àó(0). The optimal solution is determined by computing, moving backward, any path fromt2tot1having total cost equal towt2‚àó(0).The algorithm is formally described in Algorithm 1. It starts by initializing setsSt,t=t1,‚Ä¶,t2,wt1‚àó(0),wt2‚àó(0)andflag1(0)(line 1). Then, for each period t and each inventory levelst, the following operations are made. First, the setUt(st)is initialized (lines 4‚Äì8). Then, for each quantityut‚ààUt(st), the corresponding inventory levelst+1int+1is determined (line 10) and is inserted in the setSt+1if it was not already included (lines 12‚Äì15). Also, the corresponding costwt+1(st+1)is calculated (line 11). If the costwt+1(st+1)of statest+1calculated at line 11 is better than the best cost determined so far for statest+1(wt+1‚àó(st+1)), thenwt+1‚àó(st+1)is updated (lines 16‚Äì17).flagt+1(st+1)is set to true, meaning that a fractional quantity has been ordered, ifut‚ààUt2(st), i.e.,utis a fractional quantity, orflagt(st)=true, i.e., a fractional quantity was already ordered before (lines 18‚Äì19).Theorem¬†2Algorithm RegInA requiresO(I2(t2-t1))number of operations to find an optimal solution on the regeneration interval[t1,t2].Loop 2‚Äì26 requires anO(t2-t1)time, while loops 3‚Äì25 and 9‚Äì24 require both anO(I)time. ‚ñ°The algorithm to determine an optimal solution of the ELS-REG, referred to as Flat, can be obtained as follows. We build an acyclic direct networkN(V,A). Each element of the set V is a node that corresponds to a period between 1 and T. Each element{t‚Ä≤,t}, witht‚Ä≤<t,1‚©Ωt‚Ä≤,t‚©ΩT, of the set A is an arc that exists ift‚Ä≤and t are two possible consecutive regeneration points. A weightqt‚Ä≤,tis associated with any arc{t‚Ä≤,t}and is the value of an optimal solution obtained for the corresponding regeneration interval[t‚Ä≤,t]with Algorithm RegInA.Theorem¬†3An optimal solution to the ELS-REG can be obtained in timeO(I2T3).An optimal solution to the ELS-REG corresponds, thanks to Remark 1,, to a shortest path between 1 and T on the acyclic direct networkN(V,A). Finding a shortest path in N has complexityO(|A|)(see for instance Ahuja, Magnanti, & Orlin, 1993) and|A|=O(T2). The calculation of an optimal solution on all the regeneration intervals requires timeO‚àët1=1T-1‚àët2=t1+1TI2(t2-t1)thanks to Theorem 2. Ast2-t1is bounded by T, we obtain that the calculation of an optimal solution on all the possible regeneration intervals requiresO(I2T3). ‚ñ°We consider here a special case of the regular modified all-unit discount cost function, where there is no minimum charge, that isM1=0.We first observe that, in the ELS-REG without minimum charge, one should not order if the inventory available at the beginning of a period t is sufficient to satisfy the demand of t. This is true because, otherwise, a non-worse solution could be found by postponing the order of the quantity ordered at period t.Theorem¬†4An optimal solution exists such that ifIt‚àó‚©ædt, thenxt‚àó=0.Suppose we have a solution s where there exists a period t such thatIt‚©ædt, andxt>0. Let us definextsas the quantity ordered at period t in solution s. We create a new solutions‚Ä≤by settingxt=0s‚Ä≤andxt+1s‚Ä≤=xt+1s+xts. Clearly, the inventory cost ofs‚Ä≤is lower than the inventory cost of s. Moreover,F(xt+1s‚Ä≤)‚©ΩF(xts)+F(xt+1s)as there is no initial flat section, all flat and positive slope sections of the cost function have identical length andŒ±i‚©ΩŒ±i-1,i>1. Thus, the cost of solutions‚Ä≤is not greater than the cost of solution s. The previous operation can be repeated for each t such thatIt‚©ædtandxt>0. ‚ñ°The following example shows that Theorem 4, valid for the ELS-REG without minimum charge, does not hold in general for the ELS-REG.Example¬†1Consider the following instance of ELS-REG:T=3,d1=d2=1,d3=28. Three echelons are available, withM1=10,M1‚Ä≤=15,M2=20,M2‚Ä≤=25andM3=30. The minimum charge c corresponding to the first echelon is 1,Œ±1=1andŒ±2=0.5. The unitary inventory cost ish=0.1.The optimal solution of this problem, obtained by solving ProblemP, isx1‚àó=x2‚àó=x3‚àó=10with a total cost of 5.7. The corresponding inventory levels are:I1‚àó=0,I2‚àó=9,I3‚àó=18andI4‚àó=0. Although the inventory level at period 2 is greater thand2, it is optimal to place an order at period 2. Therefore, Theorem 4 does not hold.Theorem 4 implies that, in the ELS-REG without minimum charge, we can consider only the solutions where an order in t does not take place unlessIt<dt. Note that this property has no effect on Algorithm RegInA and does not decrease its complexity.We consider here the case where the cost function is an incremental discount cost functionwhich is an increasing piecewise linear function. The number of breakpoints is bounded. We call the quantities corresponding to the breakpointsM1,‚Ä¶,MI. The length of echelon i isMi-Mi-1,i=2,‚Ä¶,I. We refer to this problem as the economic lot sizing problem with incremental discount cost function(ELS-INC).We will characterize the optimal solution of the ELS-INCand design a polynomial algorithm for its solution. Note that Theorem 4 holds also for this case, as in the incremental discount cost function,F(xt+1s‚Ä≤)‚©ΩF(xts)+F(xt+1s)even if the echelons have different length.The following main result characterizes the structure of optimal solutions.Lemma¬†1An optimal solution exists such that the demanddtof period t is served in a single periodœÑ,œÑ‚©Ωt.Let us consider an optimal solutionx‚àó. The proof proceeds backward. It starts from period T, showing that a solution not worse thanx‚àóexists such that the demand of period T is all served in a single period. Then, periodT-1is considered and so on until period 1 is reached.Let us consider the last two periodst‚Ä≤andt‚Ä≥, with0‚©Ωt‚Ä≤<t‚Ä≥‚©ΩT, where the product has been ordered. Ifxt‚Ä≥‚àó‚©ædTthis means that all the demand of period T has been satisfied by the order of periodt‚Ä≥. Otherwise, it means that it has been ordered partly at periodt‚Ä≤and partly at periodt‚Ä≥. Leti‚Ä≤=max{i‚ààI:Mi‚©Ωxt‚Ä≤}andi‚Ä≥=max{i‚ààI:Mi‚©Ωxt‚Ä≥}. We can assume thatŒ±i‚Ä≤‚©ΩŒ±i‚Ä≥, because otherwise a non-worse solution would be found by postponing to periodt‚Ä≥the order of part of the product ordered at periodt‚Ä≤. Moreover, since it is optimal to anticipate the ordering of part of the product to periodt‚Ä≤with respect to periodt‚Ä≥, we obtain(9)Œ±i‚Ä≤+(t‚Ä≥-t‚Ä≤)h‚©ΩŒ±i‚Ä≥.Let us now consider one unit of the product ordered at periodt‚Ä≥. Anticipating the ordering of this unit will not increase the total cost of the solution because of (9). This operation can be repeated until the product ordered at periodt‚Ä≥is 0. Then, moving backward, the operation can be repeated on any pair of periods until all the demand of period T is ordered in a single period. We can repeat the operation for the demand of periodT-1and so on until we obtain an optimal solution which satisfies the claim. ‚ñ°Note that Example 1 also shows that Lemma 1 does not hold for the ELS-REG. In fact, the demandd3is partially ordered at periods 1, 2 and 3.Theorem¬†5An optimal solution to the ELS-INC exists such that in any regeneration interval[t1,t2], the total demandD([t1,t2])is ordered at periodt1.Due to Theorem 4, we can assume that an order takes place at period t only ifIt<dt. Then, as from Lemma 1 we know that the demand of t is all ordered in a single period, we can deduce that an order takes place only whenIt=0. Then, since no order takes place until the inventory level is 0, the claim follows. ‚ñ°We present here a polynomial algorithm that takes advantage of the results derived in the previous section on the structure of the optimal solution.The algorithm, referred to as NoFlat, generates the acyclic direct networkN(V,A). Each arc{t‚Ä≤,t}‚ààAis associated with any pair of consecutive regeneration pointst‚Ä≤and t. A weightqt‚Ä≤,tis associated with any arc which is the value of an optimal solution obtained for the corresponding regeneration interval[t‚Ä≤,t]. Thanks to Theorem 5, an optimal solution can be obtained in constant time. Moreover, again, an optimal solution to the ELS-INCcorresponds, thanks to Remark 1,, to a shortest path between 1 and T on the acyclic direct networkN(V,A). Note that algorithm NoFlat is a special case of algorithm Flat where the entire quantityD([t1,t2])is ordered at periodt1for each regeneration interval[t1,t2].Theorem¬†6An optimal solution to the ELS-INCcan be obtained inO(T2).As the number of regeneration intervals is bounded byT2, we obtain that the calculation of an optimal solution on all the possible regeneration intervals requiresO(T2). ‚ñ°Note that the original algorithm by Wagner and Whitin (1958) for the case of linear ordering and inventory cost and an additional setup cost has also complexityO(T2).In this section we present the results of computational experiments we made in order to test the efficiency of Algorithm Flat for the ELS-REG, the Algorithm NoFlat presented in Section 4.1 for the ELS-INCand the exact solution of ProblemP. The MILP model can be used for the solution of the ELS-REG and the ELS-INC. We tested instances where all echelons have the same length. ProblemPwas solved using CPLEX 12.5. The codes were compiled in release mode with MS Visual C++ 2010 Express Edition ‚Äì Windows SDK 7.1. The experiments were carried out on a 64-bit Windows machine, with the Intel Xeon processor W3680, 3.33gigahertz, and 12gigabyte of RAM. Note that, when solving the MILP model, we did not consider echelons related to quantities that exceeded the sum of the demands over all periods. This is made in order to reduce the size of the MILP model and to make a fair comparison with algorithms Flat and NoFlat which do not take into account such echelons. Test instances are generated according to benchmark instances proposed by Chan, Muriel, Shen and Simchi-Levi (2002). In particular, inventory cost h is generated according to a uniform distribution in the interval[0.2,0.7]. They proposed 4 classes of instances with different number of periods, different number of breakpoints in the cost function and where demands were generated according to a normal distribution with a specified average and standard deviation. Since the size of the instances they proposed is too small and they were all solved instantaneously by all algorithms (including the exact solution of ProblemP), we decided to increase the size of instances by increasing the number of periods and the number of breakpoints in the cost function. In particular, we generated two sets of instances: Set 1 withT=30andI=20and Set 2 withT=60andI=40. As the instances of Chan, Muriel, Shen and Simchi-Levi (2002) had very few breakpoints in the cost function, we extended them by simply replicating the structure of the cost function. In all classes of instances they proposed the size of all echelons was constant except for the first flat part. We changed it by setting it equal to the size of all echelons. CostsŒ±iwere generated as follows. GivenŒ±1andŒ≤,Œ±i=Œ±i-1/(1+1Œ≤+2(i-1)). We generated four classes of instances for each set on the basis of the following data: (see Table 1)We generated five instances for each class by randomly generating the demands (always according to the specified normal distributionN(Œº,œÉ)). The cost function is the same for all instances in the same class.We constructed two groups of instances:1.Instances for the ELS-REG. These instances are generated as explained before.Instances for the ELS-INC. These instances are generated by taking each instance for the ELS-REG, removing the first flat part and settingMi‚Ä≤=Mi+1for all i.All instances can be found at the following URL: http://www-c.eco.unibs.it/‚àºarchetti/lotsizing.zip.The obtained results are shown in Table 2for the instances of Set 1 and in Table 3for the instances of Set 2. The tables are organized as follows. For each class, Columns 2‚Äì4 give the results obtained for the ELS-REG, Columns 5‚Äì7 the ones obtained for the ELS-REG without minimum charge and, finally, Columns 8‚Äì11 the results obtained for the ELS-INC. For the ELS-REG and the case without minimum charge we show the computational time in seconds obtained by the algorithm Flat and by CPLEX with a maximum computational time of 1800seconds. Moreover, in the case where CPLEX was not able to find the optimal solution in the given maximum time, we show the percentage error of the best solution found with respect to the optimal cost. For the ELS-INCwe also show the computational time obtained by the algorithm NoFlat.The results clearly show that the algorithm Flat is extremely efficient to solve instances of any realistic size. On the contrary, CPLEX is unable to solve many of the instances of Set 2 within the allowed time even if the best solution found always corresponds to the optimal one except for one case. For the instances of Set 1, CPLEX requires a much higher computing time than algorithm Flat. Moreover, as expected, the algorithm NoFlat outperforms the algorithm Flat in the case with incremental discount cost function.

@&#CONCLUSIONS@&#
The economic lot sizing problem is a problem that has received enormous interest in theory and in practice. While the original model by Wagner and Whitin can be solved inO(T2), where T is the length of the planning horizon, with a cost structure that includes linear ordering cost, linear inventory holding cost and an additional setup cost, many cost structures used in practice give rise to NP-hard problems.In this paper we have presented two cases of the problem with cost discounts. In the first case the cost function is a modified all-unit discount function which alternates flat sections, all with the same length, and increasing sections, all with the same length. The polynomial algorithm presented is based upon the well-known concept of regeneration interval and has complexityO(I2T3). In the second case the cost function is an incremental discount function which is an increasing piecewise linear function and the polynomial algorithm has complexityO(T2).An interesting open question concerns the complexity of the first case where the various sections may have different length.