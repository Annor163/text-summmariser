@&#MAIN-TITLE@&#
Modelling and simulating reaction–diffusion systems using coloured Petri nets

@&#HIGHLIGHTS@&#
We present a new coloured Petri net approach to model reaction–diffusion systems.Spatial attributes of such systems are represented using colour definitions.We give a method to represent state- and/or space-dependent diffusion rate.

@&#KEYPHRASES@&#
Reaction–diffusion systems,Petri net framework,Coloured stochastic/continous/hybrid Petri nets,Multiscaleness,Brusselator,

@&#ABSTRACT@&#
Reaction–diffusion systems often play an important role in systems biology when developmental processes are involved. Traditional methods of modelling and simulating such systems require substantial prior knowledge of mathematics and/or simulation algorithms. Such skills may impose a challenge for biologists, when they are not equally well-trained in mathematics and computer science. Coloured Petri nets as a high-level and graphical language offer an attractive alternative, which is easily approachable. In this paper, we investigate a coloured Petri net framework integrating deterministic, stochastic and hybrid modelling formalisms and corresponding simulation algorithms for the modelling and simulation of reaction–diffusion processes that may be closely coupled with signalling pathways, metabolic reactions and/or gene expression. Such systems often manifest multiscaleness in time, space and/or concentration. We introduce our approach by means of some basic diffusion scenarios, and test it against an established case study, the Brusselator model.

@&#INTRODUCTION@&#
Reaction–diffusion systems often play an important role in systems biology, such as for the modelling of developmental processes [1,2]. Cellular or subcellular biological processes with fast diffusion of species can be seen as homogeneous, and thus spatial effects can be ignored. However, if the diffusion is slow, the spatial distribution of species is not uniform and has to be taken into account.A traditional and widely used approach to represent such reaction–diffusion processes deploys deterministic partial differential equations (PDEs) [3], which describe the time evolution of spatially dependent concentrations. Although this formalism is attractive and mathematically well understood, it becomes inaccurate or even inapplicable when there are relatively few numbers of chemical species or stochastic fluctuations play an important role in a biological process.Consequently, stochastic modelling of reaction–diffusion systems, using, e.g., chemical master equations [4], is increasingly gaining attention. It deals with discrete numbers of molecules of the chemical species involved and provides more accurate results than deterministic PDEs. A couple of stochastic simulation algorithms have been proposed, see, e.g., [2] for a review. For example, Brownian dynamics is a particle-based approach with continuous time and space, in which molecules evolve in terms of the Langevin equation. Cellular automata work on a lattice with a finite number of states in discrete time, in which diffusion is realized by the transition of molecules from some sites to neighbouring sites. Recently, Gillespie׳s stochastic simulation algorithm (SSA) [5] has been extended for spatial simulation by dividing a system into a number of well-mixed subvolumes or compartments, in which diffusion is treated as a random jump between neighbouring subvolumes or compartments [6,7].Biological systems including reaction–diffusion processes usually comprise a variety of chemical and physical processes, e.g., molecular binding, enzymatic reactions and complex protein interactions. Some species can be present in small numbers of molecules, and other species in large numbers of molecules; some reactions may be slow, but others fast. For such highly heterogeneous reaction–diffusion systems, a single modelling and simulation method is usually not sufficient. It is necessary to combine different stochastic and deterministic methods to build a hybrid simulator addressing different aspects of a system [2], e.g., using SSA for small numbers of molecules and numerical integration of ordinary differential equations (ODEs) for large numbers of molecules, which are considered as concentrations.Recently, we have explored different scenarios for the modelling and analysis of (multiscale) biological systems using coloured Petri nets. For example, in [8,9] we discussed spatial modelling and the colouring of space (discretisation), and in [10,11] the modelling of membrane systems and coupled Ca2+ channels, respectively.In this paper, we will describe in detail how to model and simulate reaction–diffusion systems using a coloured Petri net framework that contains coloured stochastic Petri nets(SPNC), coloured continuous Petri nets(CPNC), and coloured generalised hybrid Petri nets(GHPNC). We will show how standard high-level formalisms, which are typical for and well established in computer science, can be conveniently applied to deal with important biological problems, e.g., the reaction–diffusion problem. Compared with our previous work, this paper will address some specific issues associated with the modelling of reaction–diffusion systems. We present a systematic and step-wise approach to modelling them using coloured Petri nets and discuss in detail the colouring of space and the flexible representation of diffusion rates.We are motivated by a couple of reasons. Firstly, coloured Petri nets are graphical and intuitive means, which are easy to construct and comprehend. Colours can be used to represent the locality of species, and thus diffusion can be treated as recolouring of species. Secondly, coloured Petri nets permit a parameterised modelling style. They allow us to easily change the size (resolution) of the space by changing the number of colours, or to adapt the notion of space by adapting the colour definitions. Thirdly, coloured Petri nets are promising to provide a unifying framework integrating deterministic, stochastic and hybrid formalisms to model and simulate different types of reaction–diffusion systems. Coloured Petri nets offer a large variety of analysis techniques, enable a wide range of analysis tasks (e.g., simulation with varying diffusion rates or different initial concentrations), and are supported by powerful tools like Snoopy [12,13]. Therefore, we are pioneering to apply coloured Petri nets, as we do believe that biologists are ready to use such convenient methods to cope with reaction–diffusion systems.The main contributions of this paper are as follows. We present a new coloured Petri net approach with special emphasis on systems biology to model and simulate reaction–diffusion systems. Distinguished features of our approach are a method for representing spatial attributes of reaction–diffusion systems using easily exchangeable colour definitions, and a method for a flexible representation of state- and/or space-dependent diffusion rates.In the remainder of this paper, we first briefly recall reaction–diffusion systems in Section 2 and coloured Petri nets in Section 3. We then introduce how to model reaction–diffusion systems using coloured Petri nets in Section 4 and give a case study, the Brusselator, in Section 5, followed by related work, reproducibility and the conclusions in Sections 6, 7 and 8, respectively.When there is an abundance of species, a reaction–diffusion process can be modelled as a system of deterministic differential equations. For example, a biological deterministic reaction–diffusion system and its evolution over time τ can be given by a system of PDEs [14](1)∂S∂τ=f(S)+D∇2Swhere S is a vector of concentrations of chemical species, f denotes the production and degradation of species, D is a diagonal matrix of diffusion coefficients, and∇is the Laplacian operator.However, small abundance of species causes deterministic models to become inaccurate or even inappropriate, thus stochastic approaches have been used to simulate stochastic fluctuations. In this case, a reaction–diffusion system can be formulated as a master equation and thus stochastic simulation algorithms like the Gillespie stochastic simulation algorithm (SSA) have to be applied. A common approach [6,15] is to divide the whole system volumeΩinto N well-mixed subvolumes (compartments), each of which has a size of h. Therefore, diffusion is treated as a Markov jump process between neighbouring subvolumes with a rate constantk=Dc/h2, where Dcis the diffusion constant.For example, consider a species, S, diffusing in one-dimensional space, see Fig. 1. For this, the whole space is divided into N subvolumes. We denote the number of molecules of S in the ith subvolume by Si,i=1,2,…,N. Assume k1 and k2 are two rate constants of the two diffusion directions, the one from left to right and the other from right to left, respectively. Then the diffusion process can be described as a set of chemical reactions(2)Sj⇌k2k1Sj+1,j=1,2,…,N−1,each governed by mass action kinetics parameterised with the rate constants k1 and k2.Letp(n,τ)be the joint probability at time τ such that Si=ni,i=1,2,…,N, withn=(n1,n2,…,nN), denoting the number of molecules of species S in each of the N subvolumes. LetL2Ri,R2Li:NN→NNbe two functions [15] defined by(3)L2Ri:(n1…,ni−1,ni,…,nN)→(n1…,ni−1−1,ni+1,…,nN),withi=2,…,N, and(4)R2Li:(n1…,ni,ni+1,…,nN)→(n1…,ni+1,ni+1−1,…,nN),withi=1,…,N−1.L2Ri(R2Li) describes the change of the number of molecules in subvolume i, caused by its left (right) neighbouring subvolumei−1(i+1).Then, the master equation that corresponds to the system of chemical reactions given by Eq. (2) can be written as(5)∂p(n,τ)∂τ=k1∑i=2N{(ni+1)p(L2Rin,τ)−nip(n,τ)}+k2∑i=1N−1{(ni+1)p(R2Lin,τ)−nip(n,τ)},where the first (second) term on the right hand side corresponds to diffusion jumps from left (right) neighbours [15]. This equation can be seen as a discretisation in space of the diffusion item (the second item) of Eq. (1).Petri nets [16] are weighted, directed, bipartite graphs, consisting of places, transitions and arcs that connect them. Places usually represent passive system components like atoms, molecules, genes, mRNAs, proteins, cells, or entire populations. Transitions represent active system components like different kinds of chemical reactions, e.g., association, dissociation, translation, transcription or diffusion. A place may contain one or more tokens, represented as black dots or by a natural number. Each arc has a weight indicating the multiplicity of the arc. The firing of a transition transfers tokens from its preplaces to its postplaces in terms of the weights of the associated arcs. The repeated firing of transitions simulates the evolution of a (biological) system.For example, if we set N=3 in Fig. 1, i.e., dividing the whole volume into three subvolumes, we obtain the (qualitative) Petri net model illustrated in Fig. 2(a). Places S1 to S3 represent the chemical compound S in subvolumes 1 to 3, respectively. Transitions t21 and t12 (t32 and t23) represent diffusion between subvolumes 1 and 2 (2 and 3). The firing of these transitions simulates the diffusion of the chemical compound S in one-dimensional space.Coloured Petri nets [17,18] combine the expressive power of programming languages with Petri nets. Petri nets provide a graphical notation for modelling systems with concurrency, communication and synchronization. Programming languages offer data types for creating compact and parameterized models, which is the most important advantage of coloured Petri nets.Coloured Petri nets (see Fig. 2(b) for an example) consist, as standard Petri nets, of places, transitions and arcs. Additionally, a coloured Petri net is enriched by a set of discrete data types (called colour sets), and a set of expressions that are used to define the initial marking, arc inscriptions, and guards. Each place gets assigned a colour set and may contain distinguishable tokens, represented as a multiset expression over the assigned colour set. A multiset is a set, where one element can occur several times. For example, in Fig. 2(b), a colour set Grid1D with three colours, 1–3, is defined and assigned to place S, to distinguish the three subvolumes in Fig. 2(a). A specific distribution of tokens over all places constitutes a marking of a coloured Petri net. For example, in Fig. 2(b), we denote the initial marking for the place S by a multiset expression1`2, which means 1 token of colour 2. Each transition gets a guard, which is a Boolean expression over variables, constants or functions of the defined colour sets. The trivial guard “true” is usually not explicitly given. The guard must be evaluated to true for the enabling of the transition. For example, in Fig. 2(b), transition t has a guard IsNeighbor1D(x,a), which is a user-defined function that evaluates if subvolume a is a neighbour of subvolume x. Each arc gets assigned a multiset expression instead of the simple number serving as weight in (plain) Petri nets.Enabling and firing of a transition are based on the evaluation of its guard and associated arc expressions. Before doing so, values must be assigned to all variables associated with the transition; each legal assignment makes a transition instance. If the guard is evaluated to true and the input places have sufficient suitable tokens, the transition instance is enabled and can fire. When a transition instance fires, a new marking is created. The set of markings reachable from the initial marking builds the state space of a given system. These reachable markings and the transitions between them form the reachability graph of the system.For example, in Fig. 2(b), for transition t, there are two related variables x and a, each of which can take values 1–3, but they have to satisfy the guard IsNeighbor1D(x,a), i.e., species S can only move between neighbouring subvolumes. Thus there are four legal assignments: x=1 and a=2, x=2 and a=1, x=2 and a=3, and x=3 and a=2. For the initial marking1`2, only two assignments, x=2 and a=1, and x=2 and a=3, can fire. For example, if we fire transition t under the assignment x=2 and a=1, one token of colour 2 is removed from place S, and one token of colour 1 is added to place S.Besides, we can easily change the division (resolution) of the total volumeΩby only changing the colour set Grid1D. That is, to change Grid1D to have N colours means to divide the total volume into N subvolumes.Uncoloured Petri nets can be folded into coloured Petri nets, if partitions of the place and transition sets are given. Vice versa, coloured Petri nets with finite colour sets can be automatically unfolded into uncoloured Petri nets. The conversion between uncoloured and coloured Petri nets changes the style of representation, but does not change the actual net structure of the underlying biological reaction network.Reaction–diffusion systems can be modelled as deterministic PDEs or (stochastic) chemical master equations. However, sometimes a combination of deterministic and stochastic methods is more appropriate.Using coloured Petri nets, we can smoothly provide a unifying framework for modelling and simulating reaction–diffusion systems [19,13]. This framework illustrated in Fig. 3relates three modelling paradigms: coloured stochastic Petri nets(SPNC), coloured continuous Petri nets(CPNC), and coloured generalised hybrid Petri nets(GHPNC), which are extensions of three uncoloured Petri net paradigms: stochastic Petri nets(SPN), continuous Petri nets(CPN), and generalised hybrid Petri nets(GHPN)[20], respectively. For a given case study, the Petri nets at each level (coloured/uncoloured) share the same structure, but are specialised by their kinetic information. If we disregard the kinetics, we obtain the corresponding qualitative (coloured/uncoloured) Petri nets.InSPNC, a stochastic firing rate is introduced and associated with each transition t, which is a random variable Xt, defined by the following exponential probability distribution:(6)FXt(τ)=1−e−λt·τ,τ≥0.where λtis the firing rate of transition t, which may be marking-dependent. To underline the marking dependency, we also use the term (firing) rate function. The semantics ofSPNCis equivalent to a continuous time Markov chain (CTMC), which is constructed from the reachability graph of the underlying qualitative Petri net by labelling the arcs between states with transition rates.InCPNC, the discrete values of places (the number of tokens) are replaced with continuous values, which describe the overall behaviour of species represented by places via concentrations. A deterministic rate is associated with each transition, which makes a continuous Petri net model a unique description of a set of ordinary differential equations (ODEs), where each differential equation describes the continuous token change on a given place by the continuously increasing flow of its pre-transitions and the continuously decreasing flow of its post-transitions. An equation for a place p has the following form:(7)dm(p)dτ=∑t∈•pf(t,p)·vt−∑t∈p•f(p,t)·vt.where•pandp•denote the pre-transitions and post-transitions of place p, respectively,f(t,p)andf(p,t)denote the two arcs between place p and transition t yielding the corresponding weights, and vtis the deterministic generally state-dependent rate (function) of transition t (which corresponds to λt).If we combineSPNCandCPNC, we obtain coloured generalised hybrid Petri nets,GHPNC. If we have large numbers of molecules and fast reactions, we useCPNC, otherwiseSPNC. If both cases coexist, we useGHPNC.Remarks•All these different quantitative models can be converted into each other just by different interpretation of the rate functions (as λtor vt). That is, when we interpret the rate functions stochastically (λt), it will be anSPNC. If we interpret them as deterministic rates (vt), it will be aCPNC. If we have both interpretations within one model, we obtain aGHPNC.Rate functions (λtor vt) often follow the pattern of mass action kinetics [21]. Then we only specify the rate constants (ki) in the chemical reactions, as in Eq. (2), and use the predefined functionMassAction(ki)when defining our Petri nets. All examples in this paper apply mass action kinetics.

@&#CONCLUSIONS@&#
In previous work we had discussed various scenarios of spatial modelling of biological systems using coloured Petri nets. In this paper, we have presented a framework for the use of coloured Petri nets to address an important type of biological phenomena, the reaction–diffusion processes. Compared with other approaches, coloured Petri nets – as a high-level and graphical general-purpose language – can be easily understood and deployed. The graphical modelling approach as well as the availability of different net classes and associated simulation algorithms, allows the user to focus on the modelling process: the representation of the (bio-) chemical system, its conversion into a coloured Petri net, and the specification of appropriate neighbourhood relations and boundary conditions. Different types of geometries or boundary conditions like reflective, periodic, absorbing, or even customary boundary conditions can be defined, as well as different types of individual state- and/or time-dependent diffusion rates. No prior knowledge of continuous, stochastic, or hybrid simulation algorithms is required. However, to correctly build coloured Petri models needs to learn an annotation language, but the modelling elements can be used for any application area and are not specific for biological systems.Reaction–diffusion processes are usually closely coupled with signalling pathways, metabolic reactions and/or gene expression, which introduce multiscaleness in time, space and/or token numbers or concentration, respectively. In order to model and simulate such complex and multiscale systems, it is crucial to have a method, which conveniently combines modelling and simulation. For this purpose, our coloured Petri nets offer a unifying framework that integrates deterministic, stochastic and hybrid simulation algorithms. Thus, users can explore reaction–diffusion processes with any of these algorithms or a combination of them within one framework.Another outstanding merit of coloured Petri nets is that they enjoy a wealth of analysis techniques, which range from structural analysis and qualitative model checking to different simulation techniques, and numerical and simulative model checking [19]. These analysis techniques can be easily applied to diffusion systems if we build them as coloured Petri net models in an environment accompanied by a rich tool suite, e.g., Charlie [49], Marcie [50], and MC2 tool [51]. See [19] for details on how to use these techniques.Previously, we had explored the application of coloured Petri nets for the modelling of biological systems from two perspectives. One aim is to increase the modelling capabilities, i.e., how to conveniently model large-scale biological systems. Another one is to improve the analysis efficiency or performance of the models built, which relates to the runtime of both unfolding and simulation. For example,SPNCandCPNChave been used in [52] for modelling a Drosophila wing tissue that involves about 160,000 places and 230,000 transitions at the unfolded level; the runtime of the unfolding lasts about 2min, the continuous simulation about 120min, performed on a Mac (Quad-core Intel Xeon, CPU 2times 2.26GHz and DDR3 RAM 8 GB). In [8], phase variation in bacterial cell colonies has been built as anSPNCmodel, comprising about 30,000 places and 360,000 transitions at the unfolded level with an unfolding time of about 10min and stochastic simulation run time of about 40min performed on a PC (Intel(R) Core(TM) i5-2500, CPU 3.30GHz, and DDR3 RAM 2GB). These previous applications have clearly demonstrated that our approach can be used to model and analyse realistic, complex reaction–diffusion systems.All spatial simulation techniques have to discretise space and time. In our approach, we discretise space at modelling level and time during simulation, while traditionally both discretisations are done by the integration method used for model simulation. In the end, the limitations of our approach coincide with the ones other approaches are facing, because the underlying algorithmic principles (stochastic simulation/numerical integration algorithms) are basically the same.In a next step, we will continue to improve the modelling and simulation capabilities of coloured Petri nets for reaction–diffusion systems. For example, we are implementing parallel simulation for continuous, stochastic and hybrid Petri nets, which is expected to substantially accelerate the simulation speed. We also intend to explore coloured simulation of coloured Petri nets, which runs at the coloured (folded) level without generating their corresponding unfolded Petri nets. These features will be available in our Petri net tool Snoopy to increase user acceptance and to facilitate the modelling and analysis of such types of systems.None declared.