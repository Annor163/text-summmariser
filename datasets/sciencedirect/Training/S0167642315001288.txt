@&#MAIN-TITLE@&#
Basic behavioral models for software product lines: Expressiveness and testing pre-orders

@&#HIGHLIGHTS@&#
Comparing three fundamental models of Software Product Lines.Proving modal transition systems less expressive than product line labeled transition systems.Proving product line labeled transition systems less expressive than featured transition systems.Using Abramsky's test expressions to characterize product derivation.

@&#KEYPHRASES@&#
Software product lines,Formal specification,Behavioral specification,Labeled transition systems,Featured transition systems,Modal transition systems,Calculus of communicating systems (CCS),Product line CCS (PL-CCS),

@&#ABSTRACT@&#
In order to provide a rigorous foundation for Software Product Lines (SPLs), several fundamental approaches have been proposed to their formal behavioral modeling. In this paper, we provide a structured overview of those formalisms based on labeled transition systems and compare their expressiveness in terms of the set of products they can specify. Moreover, we define the notion of tests for each of these formalisms and show that our notions of testing precisely capture product derivation, i.e., all valid products will pass the set of test cases of the product line and each invalid product fails at least one test case of the product line.

@&#INTRODUCTION@&#


@&#CONCLUSIONS@&#
In this paper, we studied three fundamental behavioral models for software product lines, namely, modal transition systems, featured transition systems, and product-line labeled transition systems. In particular, we studied the expressiveness of these models by comparing their sets of definable products, which are assumed to be expressible as labeled transition systems. We have shown that modal transition systems are the least expressive of all three, featured transition systems are the most expressive, and product-line labeled transition systems are strictly in between the two. Then we moved to define extensional notions of product derivation and adapted the notion of tests by Abramsky to this end. We proved that the intensional notions of product derivation coincide with the extensional notions defined in this paper for each and every formalism.Compositionality (pre-congruence) is well-studied for modal refinement in the context of MTSs [24]. However, this problem is understudied for FTSs and this is a high priority item in our future-research agenda. We envisage that using the divide and congruence approach of [42,43] could provide a solution in this regard (see [44] for our initial attempt in this direction). Another important topic in this area is defining a closed and finite notion of test-cases that can detect all faults, given a fault model (e.g., similar to the W-Method in FSM-based testing [39]). A third area of research, which builds upon the previously-mentioned topic, is to define an incremental procedure for testing different products of a product line.A few other proposals for transition-system-based specifications of SPLs have been proposed that deserve further investigation. In [10,11], (Generalized) Extended Modal Transition Systems (GEMTSs) have been introduced in order to specify SPLs. These are variants of disjunctive normal forms [45]. We conjecture that this formalism is strictly in between MTSs and FTSs in terms of expressiveness. Also, in [19], a multi-modal semantics for “Variant Process Algebra” has been introduced, which we conjecture, is as expressive as featured transition systems. We leave proving these conjectures, as well as devising the appropriate extensional notion of testing for GEMTSs for future work.