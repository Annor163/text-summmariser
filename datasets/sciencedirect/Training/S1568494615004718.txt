@&#MAIN-TITLE@&#
An effective teaching-learning-based cuckoo search algorithm for parameter optimization problems in structure designing and machining processes

@&#HIGHLIGHTS@&#
We propose a teaching-learning-based cuckoo search algorithm.Solving the parameter optimization in structure designing and machining process.Several famous cases are adopted and solved to illustrate the effectiveness of the proposed algorithm.The experimental results show that the proposed approach outperforms other algorithms and has achieved significant improvement.

@&#KEYPHRASES@&#
Teaching-learning process,Cuckoo search,TLCS,Co-evolutionary,Parameter optimization,

@&#ABSTRACT@&#
The optimum selection of parameters is great important for the final quality of product in modern industrial manufacturing process. In order to achieve highly product quality, an effective optimization technique is indispensable. In this paper, a new hybrid algorithm named teaching-learning-based cuckoo search (TLCS) is proposed for parameter optimization problems in structure designing as well as machining processes. The TLCS combines the Lévy flight with teaching-learning process, then evolves with a co-evolutionary mechanism: for solutions to be abandoned in the cuckoo search will perform Lévy flight to generate new solutions, while for other better solutions, the teaching-learning process is used to improve the local searching ability of the algorithm. Then the proposed TLCS method is adopted into several well-known engineering parameter optimization problems. Experimental results show that TLCS obtains some solutions better than those previously reported in the literature, which reveals that the proposed TLCS is a very effective and robust approach for the parameter optimization problems.

@&#INTRODUCTION@&#
There are a lot of optimization problems in modern manufacturing environment. For instance, in the structure designing and machining processes, the final product quality is sensitive to the combination of different processing parameters. In addition, the operational cost and the productivity are also highly depended on the selection of these processing parameters. Therefore, in order to obtain highly product quality, an effective optimization approach is needed.However, it is very complicated to obtain the suitable parameters for the structure designing and machining process. Firstly, many design variables as well as the complex constraints make the determination of parameters difficult. Besides, a number of additional aspects such as knowledge of designing should be considered when achieving an optimum processing parameters. What's more, the nonlinearity results in a multimodal landscape optimization problem and traditional techniques are no longer suitable for the problem, thus new global optimization methods must be designed.Since meta-heuristic algorithms such as genetic algorithms (GA) and particle swarm optimization (PSO) are more effective than the traditional gradient techniques [1–3]. And many kinds of parameter optimization problems are solved by these evolutionary algorithms. Zarei et al. [4] presented a harmony search (HS) algorithm to determine the optimum cutting parameters for a multi-pass face-milling, while Shunmugam et al. [5] used GA for a selection of optimal conditions in a multi-pass face-milling. Liu et al. [6] proposed a modified GA based optimization of milling parameters. Vijayakumar et al. [7] proposed a new optimization technique based on the ant colony optimization (ACO) for solving multi-pass turning optimization problems. Rao and Pawar [8] used various advanced optimization algorithms such as ACO, PSO, and simulated annealing (SA) to optimize of process parameters of multi-pass milling process.In order to improve the performance of algorithms, many evolutionary methods had been modified or hybridized with other optimization techniques. Yildiz [9] had hybridized an artificial immune algorithm with a hill climbing local search algorithm to solve optimization problems. Wang et al. [10] presented a hybrid of GA and SA algorithms (GSA) to select the optimal machining parameters for multi-pass milling process. Baskar et al. [11] used a memetic algorithm based on the GA and hill climbing algorithm for the selection of optimal parameters. Melo et al. [12] proposed an investigating multi-view differential evolution for solving constrained engineering design problems.Although some improvements for parameter problems have been achieved, the further investigation need studied due to the complexity of conflicting objective and multiple constraints. Therefore, there has been a growing interest in applying new approaches to solve these problems in recent years. The cuckoo search (CS) was recently proposed by Yang and Deb [13], the algorithm is based on the obligate brood parasitic behavior of some cuckoo species in combination with the Lévy flight behavior of some birds and fruit flies. And it has been introduced for solving structural optimization and machining parameters optimization problems [14,15]. Another algorithm, teaching-learning-based optimization (TLBO) that has been recently developed by Rao et al. [16], is also wildly applied in many kinds of parameter optimization problems. However, these two new algorithms are also limited in several aspects of optimization problems [17].We have proposed an effective hybrid algorithm named teaching-learning-based cuckoo search (TLCS) for continuous optimization problems lately [17]. In order to extend its applications range, it has been modified and applied for constrained optimization problems. Thus, in this paper, the proposed TLCS is used to solve the parameter optimization problems and the performance of the method is analyzed by comparing with other approaches.The rest of this paper is organized as follows: Section 2 provides a basic framework of the proposed TLCS. Experimental results based on several typical engineering parameter optimization problems and comparisons with previously reported results are presented in Section 3. Section 4 presents a discussion and conclusions of the TLCS.In the proposed hybrid algorithm, the main idea is to combine the good search ability of CS and the fast convergence rate of TLBO, the proposed algorithm mainly includes two parts, for solutions to be abandoned in the CS will perform Lévy flight to generate new solutions. And for other solutions, we use the TLBO to enhance the local search ability of CS. Thus, the algorithm becomes more practical for a wider range of applications but without losing the attractive features of the original CS and TLBO.The framework of the TLCS is as shown in Fig. 1.For the proposed TLCS, it has strong global search ability along with a fast convergence rate [17], and the method could suitable for a broad spectrum of problem domains. As in the framework, two important ways for updating the solutions in the population are Lévy flight and the teaching-learning process. The two key procedures are presented in the following sections.Cuckoo search (CS) is a new meta-heuristic search algorithm, based on cuckoo bird's behavior [13,14]. The algorithm is inspired by the reproduction strategy of cuckoo.In CS, when generating new solutions xt+1 for cuckoo i, a Lévy flight is performed:(1)xit+1=xit+α⊕Le´vy(λ)where α>0 is the step size which should be related to the scales of the problem. The product ⊕ means entry-wise multiplications. Lévy flights essentially provide a random walk while their random steps are drawn from a Lévy distribution for large steps.(2)Le´vy(λ)∼u=t−λ,1<λ≤3which has an infinite variance with an infinite mean.TLBO is a population based method. The algorithm mimics the teaching-learning ability of teacher and learners in a classroom [18]. The working of TLBO is divided into two parts, ‘Teacher phase’ and ‘Learner phase’. Working of both the phase is explained below.It is first part of the algorithm where learners learn through the teacher. During this phase a teacher tries to increase the mean result of the classroom from any value Mito his or her level (i.e. TA). And the difference between the existing mean and new mean is given by:(3)Difference_Meani=ri(Mnew−TFMi)where TFis the teaching factor which decides the value of mean to be changed, and riis the random number in the range [0, 1]. Value of TFcan be either 1 or 2 which is a heuristic step and it is decided randomly with equal probability as:(4)TF=round[1+rand(0,1){2−1}]Based on this Difference_Mean, the existing solution is updated according to the following expression:(5)Xnew,i=Xold,i+Difference_MeaniIt is second part of the algorithm where learners increase their knowledge by interaction among themselves. A learner interacts randomly with other learners for enhancing his or her knowledge. A learner learns new things if the other learner has more knowledge than him or her. Mathematically the learning phenomenon of this phase is expressed below.At any iteration i, considering two different learners Xiand Xjwhere i≠j,(6)Xnew,i=Xold,i+ri(Xi−Xj)iff(Xi)<f(Xj)(7)Xnew,i=Xold,i+ri(Xj−Xi)iff(Xj)<f(Xi)Accept Xnewif it gives better function value.Since the presence of the constraint, it is difficult to solve the constrained optimization problems. In the past two decades, many methods have been proposed to solve constrained optimization problems and constraint handling technique is one of the major concerns when solving such problems. Using the penalty functions is one of the most common methods. The idea is to transform the constrained optimization problem into an unconstraint one by adding a certain value to the objective function based on the constraint violations. It has been widely used for its simpleness and effectiveness. Hence, penalty function is adopted into the proposed algorithm in this paper. The following penalty method is used to transform the constrained optimization problem into an unconstraint one.(8)F(x)=f(x)+w1×(sum_viol)2+w2×num_violwhere f(x) is the objective function, w1 and w2 are penalty factors, sum_viol denotes the sum of all the amounts by which the constraints are violated, num_viol denotes the number of constraints violation.From the above discussion, the procedure for the implementation of TLCS is given as follows:Step 1: Define the optimization problem and initialize the optimization parameters.Initialize the swarm size (Pn), number of generations (Gn), discovering probability (pa), number of design variables (Dn), and limits of these design variables.Define the optimization problem as: Minimize f(x).Subject to Xi∈xi=1, 2, …, Dn, where f(x) is the objective function, X is a vector for design variables such that Li≤xi≤Ui.Step 2: Initialize the population.Generate a random population of solutions. Then divide the population into two parts: the top solutions P1 and abandoned one P2.Step 3: Update solutions.For solutions in P1, generate new solutions by using the teaching-learning process as in Eqs. (3)–(7). As to the solutions in P2, calculate new solutions according to Eqs. (1) and (2). Then evaluate the fitness of new solutions.Step 4: Abandon worse solutions.A fraction (pa) of worse solutions are abandoned and new ones are built by using the Lévy flight rules as Eqs. (1) and (2), then calculate the fitness of all solutions.Step 5: Termination criterion.Stop if the termination criterion is meted; otherwise repeat from Step 3.In order to validate the effectiveness of the proposed algorithm, four typical parameter optimization problems including abrasive water jet machining, grinding, milling processes and car side impact design are considered and solved in this section.The abrasive water jet machining (AWJM) process uses a high-velocity water jet in combination with abrasive particles to cut different types of materials [19,20]. According to the analysis given by Hashish [21,22], there are five decision variables considered in this problem: water jet pressure at the nozzle exit (Pw), diameter of abrasive, water jet nozzle (dawn), feed rate of nozzle (fn), mass flow rate of water (Mw), and mass flow rate of abrasives (Ma), the objective is to maximize the material removal rate (MRR). And the model can be expressed as follows:(9)Maximize:f(Pw,dawn,fn,Mw,Ma)=dawnfn(hc+hd)(10)Subjectto:g1=MwPw−Pmax≤0where:(11)hc=1.028×104.5ξCkρa0.4dawn0.2Ma0.4fn0.4MwPw0.5Ma+Mw−18.48Ka2/3ξ1/3Ckfr0.4MwPw0.5Ma+Mw1/3ifαt≤α00ifαt>α0(12)hd=ηadawnMa[K1MwPw0.5−(Ma+Mw)vac]2(1570.8σfw)dawn2fn(Ma+Mw)2+(K1Cfwηa[K1MwPw0.5−(Ma+Mw)vac]MaMwPw0.5(13)α0=0.02164CK1/3fr0.4Ka2/3ξ1/3Ma+MwMwPw0.51/3(14)αt=0.389×10−4.5ρa0.4CKξdawn0.8fn0.4(Ma+Mw)Ma0.4MwPw0.5(15)vac=5π2σcw2.5ρa0.51−va2EYa+1−vw2EYw2(16)K1=2×104.5ξ(17)CK=3000σfwfr0.6ρaThe bounds of the five variables are:50≤Pw≤400,0.5≤dawn≤5, 0.2≤fn≤25,0.02≤Mw≤0.2, 0.0003≤Ma≤0.08, and values of the constants and parameters for abrasive water jet machining process are as follows: ρa=3.95×10−6kg/mm3,va=0.25, Ka=3, fr=0.35, fs=0.78, ηa=0.07, vw=0.20, EYa=350,000MPa, EYw=114,000MPa,σew=883MPa,σfw=8142MPa, Cfw=0.002, ξ=0.8, Pmax=56kW.For this problem, the parameters of the TLCS and CS are set as follows: the population size is 20, the discovering probability is 0.25 and the number of generations is 100. And for this problem, the algorithm is implemented with 30 independent runs. The comparisons of the best result with several other approaches for the optimization of AWJM process are shown in Table 1.As it can be seen from Table 1, the results obtained by TLCS are better than all other three methods, that is, the material removal rate is the highest. Note that the best solution obtained by TLBO is not feasible since the value of MwPw=0.141×400=56.4, which larger than the allowable power consumption value (Pmax=56), the constraint is obviously violated. The statistical results of different algorithms are as shown in Table 2. From Table 2, it can also be observed that the TLCS has a better performance than CS and TLBO.The convergence curves of CS and TLCS is shown in Fig. 2. From Fig. 2, it is observed that the algorithm requires only 30 generations to reach the global optimum solution. And we can also see that the TLCS has a faster convergence rate and better searching result, which reveals that the proposed TLCS has an improvement on CS.The optimization model for grinding process formulated in the present work is based on the analysis given by Wen et al. [23]. The four decision variables are considered in this model which are wheel speed (Vs), work piece speed (Vw), depth of dressing (doc) and lead of dressing (L). And the two objectives considered in this example: minimize production cost (CT) and maximize the production rate (WRP). And the combined objective function and the constraints are as follows:(18)Minimize:ZR=W1×CTCT*−W2×WRPWRP*Subject to:(19)g1=U−U*≤0(20)g2=G−WRPWWP≤0(21)g3=|Rem|Km−MSC≤0(22)g4=Ra−1.8≤0where(23)CT=Mc60pLw+LeVw1000bw+befbawap+SP+awbwLwπDebsapG+Mc60pSdVr+t1+Mctch60Nt+McπDebs60pNdLVs1000+CsawbwLwpG+π(doc)DebspNd+CdpNtd(24)WRP=94.4(1+(2doc/3L))L11/19(Vw/Vs)3/19VsDe43/304VOL0.47dg5/38Rc27/19(25)U=13.8+9.64×10−4VsapVw+6.9×10−32102.4VwDeVs×A0+KuVsLwawVwDe1/2ap1/2VsDe1/2Vwap1/2(26)U*=6.2+1.76De1/4ap3/4Vw1/2(27)WWP=kpapdg5/38Rc27/29Dc1.2/VOL−43/304VOL0.38×(1+(doc/L))L27/19(Vs/Vw)3/19Vw(1+(2doc/3L))(28)MSC=12Kc1+VwVsG+1Ks(29)Kc=1000VwfbWRP(30)Ks=1000VsfbWWP(31)Ra=0.4587Tave0.30<Tave≤0.2540.78667Tave0.720.254<Tave≤2.54(32)Tave=12.5×103dg16/27ap19/27De8/271+docLL16/27VwVs16/27Parameter bounds for the four process variables are as follows: 1000≤Vs≤2023,10≤Vw≤22.7, 0.01≤doc≤0.137, 0.01≤L≤0.137, and values of the constants and parameters for abrasive water jet machining process are as follows: W1=W2=0.5,CT*=10($/pc), WRP*=20mm3/minN, Mc=30 $/h, Lw=300mm, Le=150mm, bw=60mm, be=25mm, fb=2mm/pass, aw=0.1mm, ap=0.0505mm/pass, Sp=2, De=355mm, bs=25mm, G=60, Sd=100mm, p=1, Vr=254mm/min, t1=5min, tch=30min, Nt=12, Nd=20, Ntd=2000, Cd=25 $, VOL=6.99%, dg=0.3, Rc=58 HRC, Ku=3.937×10−7mm−1, Rem=1, Km=100,000N/mm, Ka=0.0869.For this problem, the parameters of the CS and TLCS are set as follows: the population size is 20, the discovering probability is 0.25 and the number of generations is 100. And for this problem, the algorithm is also implemented with 30 independent runs. The comparisons of best result with several other approaches such as genetic algorithm, simulated annealing, particle swarm optimization artificial bee colony, harmony search algorithm and CS for the optimization of grinding process are as shown in Table 3.As it can be seen from Table 3, the TLCS algorithm shows a significant improvement in the combined objective function value over quadratic programming by about 80% and over genetic algorithm by about 22%. The TLCS algorithm also shows a better solution accuracy as compared to SA, PSO, HS, ABC and TLBO algorithms, which demonstrate the effectiveness and strong searching ability of the proposed TLCS. The statistical results of different algorithms are as shown in Table 4. From Table 4, it can be observed that the TLCS has a better performance in terms of the best value, worse value, mean value as well as standard deviation.The convergence curves of CS and TLCS is shown in Fig. 3. From Fig. 3, it is observed that the algorithm requires only 60 generations to reach the global optimum solution. And we can also see that the TLCS has a faster convergence than CS, which reveals that the proposed TLCS has an improvement based on CS.Milling is the machining process in which the metal is removed by a rotating multiple tooth cutter [27]. Fig. 4shows this machining operation.The mathematical model of this milling process is formulated based on the model proposed by Sonmez et al. [28]. The decision variables are feed per tooth (fz), cutting speed (V) and the depth of cut (a). And the objective is to minimize the total production time (Tpr).The details of the mathematical model are described as follows:(33)Minimize:Tpr=T1+T2Subject to:(34)g1=Fc−Fs≤0(35)g2=Fc−Fd≤0(36)g3=FcV6120−Pc≤0where(37)T1=TsNb+TL+NpTa(38)T2=∑i=1NpπDLfziz1000Vi+TdπLVi1/m−1aiev/mfziuv/m−1Brv/mznv/m−1λsqv/m1000Cv1/mDbv/m−1(BmBhBpBt)1/m(39)Fc=CzparzDbzaezfzuz(40)Fs=0.1kbda30.08La+0.65(0.25La)2−(0.5αD)2(41)Fd=4Eeda4La3(42)Pc=PmηParameter bounds for the process variables are as follows: 0.000875≤fz≤3.571, 6.234≤Vi≤395.84, 0.5≤a≤4. The values of the constants and parameters for abrasive water jet machining process are as follows: Pm=5.5kW, η=0.7, da=27mm, La=210mm, kb=140MPa, kt=120MPa, E=200GPa, D=63mm, z=8, La=160mm, ar=50mm, a=5mm, TL=1.5min, Ts=10min, Tc=5min, Ta=0.1 (min/part), Nb=100. For roughing operation e=0.2mm and for finishing operation: e=0.05mm. Constants: Bm=1, Bh=1, Bp=0.8, m=0.33, ev=0.3, uv=0.4, rv=0.1, nv=0.1, qv=0, Cv=35.4, bv=0.45, Czp=68.2, bz=−0.86, ez=0.86 and uz=0.72.For this problem, the parameters of the CS and TLCS are set as follows: the population size is 20, the discovering probability is 0.25 and the number of generations is 300. And for this problem, the algorithm is implemented with 30 independent runs. The comparisons of the best result with several other approaches for the optimization of milling process are as shown in Table 3.From Table 5it can be seen that the results obtained by using geometric programming (GP), GA, PGSA, and Tribes are inappropriate, as these results violate the specified constraints. It also can be seen from Table 3 that, the solution obtained by using TLCS algorithm is slightly better in terms of accuracy of solution as compared to ABC, PSO, SA and TLBO algorithms.The problem of design of car side impact is based on the analysis of Gu et al. [30]. The FEM model of this problem is illustrated in Fig. 5. On the foundation of European Enhanced Vehicle-Safety Committee (EEVC) procedures, a car is exposed to a side-impact.The decision variables are thicknesses of B-Pillar inner, B-Pillar reinforcement, floor side inner, cross members, door beam, door beltline reinforcement and roof rail (x1–x7), materials of B-Pillar inner and floor side inner (x8 and x9) and barrier height, and hitting position (x10 and x11), and the objective is to minimize the weight using nine influence parameters.The optimization model can be formulated as follows:(43)Minimize:f(x)=WeightSubject to:(44)g1(x)=Fa(loadinabdomen)≤1kN(45)g2(x)=VCu(dummyupperchest)≤0.32m/s(46)g3(x)=VCm(dummymiddlechest)≤0.32m/s(47)g4(x)=VCl(dummylowerchest)≤0.32m/s(48)g5(x)=Δur(upperribdeflection)≤32mm(49)g6(x)=Δmr(middleribdeflection)≤32mm(50)g7(x)=Δlr(lowerribdeflection)≤32mm(51)g8(x)=FP(Pubicforce)≤4kN(52)g9(x)=VMBP(VelocityofV−Pillaratmiddlepoint)≤9.9mm/ms(53)g10(x)=VFD(VelocityoffrontdooratV−Pillar)≤15.7mm/msParameter bounds for the process variables are as follows: 0.5≤x1−x7≤1.5, x8, x9∈{0.192, 0.345}, −30≤x10, x11≤30. For this problem, the parameters of TLBO and TLCS are set as follows: the population size is 20, the discovering probability is 0.25 and the number of generations is 200. And for this problem, the algorithm is implemented with 30 independent runs, the comparisons of the best solution and statistical results for several approaches for the optimization of car side impact design process are shown in Table 6.This case study has also been solved using well-known GA, PSO, DE, and firefly algorithm (FA) methods by Gandomi et al. [31] and CS [32], the results along with the result from TLBO are used to compare with the TLCS method. As it can be seen from Table 6, in comparison with other heuristic algorithms, the proposed algorithm is far better than GA and slightly better than PSO, DE, FA, CS and TLBO, which reveals that the proposed method has an improvement performance based on the CS and TLBO.

@&#CONCLUSIONS@&#
This paper introduces a novel co-evolutionary method for parameters optimization problems. In the proposed TLCS, the Lévy flight is combined with teaching-learning process, and this integration ensures that the algorithm possesses a global searching as well as having a strong local search ability. Simulation results based on some well-known constrained engineering optimization problems and comparisons with previously reported results demonstrate the effectiveness, efficiency and robustness of the TLCS. Future work is adopting this new method into wider spectrum problems such as structure design optimization problems. What's more, the parallel implementation, co-evolutionary mechanism of TLCS will be also studied. Other possible future works include application of the proposed TLCS into multi-objective optimization and combinatorial optimization problems.