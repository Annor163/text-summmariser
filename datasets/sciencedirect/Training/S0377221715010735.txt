@&#MAIN-TITLE@&#
The bi-objective mixed capacitated general routing problem with different route balance criteria

@&#HIGHLIGHTS@&#
We study a bi-objective MCGRP with cost and route balance objectives.We provide insights on how route balance modeling affects the Pareto front.Which route balance objective that is considered has impact on the solutions.We solve small MCGRP instances with a method for solving bi-objective problems.A computational study shows the effects of the balance objectives on the Pareto fronts.

@&#KEYPHRASES@&#
Vehicle routing,Mixed capacitated general routing problem,Route balance,Bi-objective optimization,Box method,

@&#ABSTRACT@&#
In the mixed capacitated general routing problem, one seeks to determine a minimum cost set of vehicle routes serving segments of a mixed network consisting of nodes, edges, and arcs. We study a bi-objective variant of the problem, in which, in addition to seeking a set of routes of low cost, one simultaneously seeks a set of routes in which the work load is balanced. Due to the conflict between the objectives, finding a solution that simultaneously optimizes both objectives is usually impossible. Thus, we seek to generate many or all efficient, or Pareto-optimal, solutions, i.e., solutions in which it is impossible to improve the value of one objective without deterioration in the value of the other objective. Route balance can be modeled in different ways, and a computational study using small benchmark instances of the mixed capacitated general routing problem demonstrates that the choice of route balance modeling has a significant impact on the number and diversity of Pareto-optimal solutions. The results of the computational study suggest that modeling route balance in terms of the difference between the longest and shortest route in a solution is a robust choice that performs well across a variety of instances.

@&#INTRODUCTION@&#
Routing problems arise in many practical applications and have been widely studied. Given a network, one or several routes need to be created visiting all, or a subset of, the network’s nodes, arcs, and/or edges. An overview and early references can be found in Laporte and Osman (1995) and a history can be found in Laporte (2009). Two popular variants are the capacitated vehicle routing problem (CVRP) and the capacitated arc routing problem (CARP). In the CVRP, the nodes in the network need to be served, while in the CARP the arcs/edges need to be served.We consider the mixed capacitated general routing problem (MCGRP), a generalization of both the CVRP and the CARP. It is defined on a mixed networkN=(V,E,A),where V is a set of nodes, E a set of undirected edges, and A a set of directed arcs. Some of the nodes, edges, and arcs are required, i.e., they have a non-negative demand that needs to be served. Each edge and each arc have a non-negative traversal cost, and required nodes, edges, and arcs may have a non-negative service cost. A fixed homogeneous fleet of vehicles with a given service capacity is available for serving the demand. Typical applications are waste collection and newspaper distribution where arcs/edges represent streets and nodes represent facilities, e.g., schools, and residential and commercial buildings.The MCGRP was introduced by Pandi and Muralidharan (1995), who propose a heuristic solution procedure based on creating one giant route which is subsequently split into individual vehicle routes. The literature on MCGRP is scarce, but includes both heuristic procedures and exact solution approaches: Gutiérrez, Soler, and Hervás (2002) propose a heuristic based on the cluster-first route-second principle. Their heuristic is compared with the one by Pandi and Muralidharan (1995) and shows promising results. Prins and Bouchenoua (2005) develop a memetic algorithm and introduce a set of benchmark instances. Other methods explored are simulated annealing (Kokubugata, Moriyama, & Kawashima, 2007) and adaptive iterated local search (Dell’Amico, Díaz, Hasle, & Iori, 2015). The first integer programming formulation is given by Bosco, Laganà, Musmanno, and Vocaturo (2013) who use a branch-and-cut algorithm to find optimal solutions to small instances. Combinatorial bounds were studied by Bach, Hasle, and Wøhlk (2013). The MCGRP with stochastic demands is introduced by Beraldi, Bruni, Laganà, and Musmanno (2015). A chance-constrained integer programming formulation is proposed, and solved exactly by a branch-and-cut algorithm and heuristically by a neighborhood search algorithm.Most previous studies of the MCGRP consider a single objective: minimize total route cost. We study a bi-objective version of the problem where, in addition to seeking to minimize total travel cost, we simultaneously seek to balance the route lengths. In this paper, we assume that cost is a linear function of the travel distance and that a set of routes is balanced if the travel distances of the routes are similar. This extension of the MCGRP is motivated by its practical relevance, because in many real-life applications, it is desirable for drivers to have comparable workloads. To the best of our knowledge, there is only one publication on the bi-objective MCGRP with route balance: Mandal, Pacciarelli, Løkketangen, and Hasle (2015) consider the bi-objective MCGRP where route balance is defined as the difference between the longest and the shortest route. A memetic algorithm is proposed as solution method. We note that route balance can be defined in various ways, and one of our goals is to investigate the impact of this modeling choice.The main contributions of this paper are that we (1) provide new insights in the simultaneous minimization of route cost and route balance for vehicle routing problems, and (2) provide new insights in the effect of the choice of route balance modeling on the Pareto front. Our computational study, using small benchmark instances of the mixed capacitated general routing problem, demonstrates that the choice of route balance modeling has a significant impact on the Pareto front in terms of the number of Pareto-optimal solution and diversity of Pareto-optimal solutions. These insights may allow practitioners and academics to make more informed choices when including route balance as an objective in vehicle routing problems.The remainder of this paper is organized as follows. Section 2 presents insights on the effects of considering both route cost and route balance in routing problems. Section 3 discusses related and relevant literature. Section 4 introduces a method for solving the bi-objective MCGRP. Section 5 presents the numerical results of a computational study. Finally, Section 6, contains concluding remarks and suggestions for future research.Bi-objective routing problems belong to the class of multi-objective optimization problems, see e.g., Ehrgott (2005). These problems can be described as follows:minx∈Xz(x):={z1(x),z2(x),…,zp(x)},whereX∈Rnrepresents the feasible set in the decision space, and the imageYofXunder vector-valued functionz={z1,…,zp}represents the feasible set in the criterion space, i.e.,Y:=z(X):={y∈Rp:y=z(x)forsomex∈X}. Because there are multiple objectives, there will be, in most cases, multiple solutions that can be considered optimal, or non-dominated. Such solutions are often referred to as Pareto optimal. More specifically, we have:DefinitionA solutionx*∈Xis a weak Pareto optimum if and only if there is nox∈Xsuch that zi(x) < zi(x*) fori=1,…,p.A solutionx*∈Xis a strict Pareto optimum if and only if there is no x ∈ X such that zi(x) ≤ zi(x*) fori=1,…,pand z(x) ≠ z(x*).The image of all strict Pareto optimal solutions is called the Pareto front, alternatively the efficient frontier or the nondominated frontier. In the bi-objective case, there are exactly two objectives z1(x) and z2(x), i.e.,p=2.We will study the Pareto front of routing problems with two objectives: minimize the route cost and maximize the route balance. In this section, we use the CVRP to illustrate features of bi-objective routing problems. The insights are, however, general and also hold for the CARP and the MCGRP. We make the following assumptions:1.There is a fleet of m homogeneous vehicles with capacity Q that has to serve n customers, each with a demand that is less than or equal to the vehicle capacity.A solution consists of a single route for each vehicle, starting and ending at the depot and serving at least one customer. Furthermore, each customer is served by exactly one vehicle.The first objective, which is also the typical objective in routing problems, is to minimize the total cost of the solution, i.e.,min∑r∈Ωtr,where Ω is the set of all possible routes and tris the cost of route r. For ease of presentation, we assume that the cost of a route is the travel distance of the route. The second objective is to maximize the route balance, or minimize the route imbalance, where we define route balance with respect to the travel distance of the routes in the solution.The first challenge encountered when solving bi-objective routing problems with route balance as one of the objectives is choosing how to model route balance. Two natural choices are:min∑r∈Ω(tr−μ)2,andmintL−tS,where μ is the average travel distance of the routes in the solution, and tLand tSare the travel distance of the longest and shortest route in the solution, respectively. The first choice is equivalent to minimizing the variance of the travel distance of the routes in the solution.Only for a perfectly route balanced solution will these two route balance objectives have the same optimal value: 0. Given that a perfectly route balanced solution rarely has minimum total travel distance, these two route balance objective will likely result in substantially different Pareto fronts. An important difference between the two route balance objectives is that the first explicitly takes the travel distance of all routes in the solution into account, whereas the second only implicitly takes the travel distance of all routes in the solution into account by ensuring that all travel distances are between the longest and shortest travel distance. If a decision maker seeks to create routes that result in an equitable workload for the drivers, i.e., a fair distribution for the travel distances of the routes, a variance objective may be more suitable. However, a variance objective may also result in solutions with extremes, i.e., one substantially longer or shorter route, which may be undesirable. Such extremes may be avoided by imposing lower and upper bounds on the individual route length.Using a variance objective may also be more computationally demanding, because the mean length of routes in a solution is not known in advance and because variance is a quadratic function. Two alternative formulations where travel distances of all routes are considered are as follows:min∑r∈Ω(tr−tS),andmin∑r∈Ω|tr−TG|,where tS, as before, is the travel distance of the shortest route in the solution, and where tGis a prespecified target route travel distance. For some real-life routing problems a natural target travel distance may exist. For example, in the context of newspaper delivery, all delivery routes should be completed within a certain time and all delivery routes, therefore, need to be of similar length.Rather than seeking to enforce route balance directly, it is also possible to seek to enforce route balance indirectly, for example with objectives:maxtS,andmintL,where, as before, tSand tLare the travel distance of the shortest and longest routes in the solution, respectively. In an unconstrained environment, maximizing the shortest route would result in a solution with a single route visiting all customers, and minimizing the longest route would, normally, result in a solution close to one where each customer is visited on a route by itself. However, because we have assumed that there is a limited fleet of capacitated vehicles, and that each vehicle will serve at least one customer, in most situations, both these objectives tend to lead to somewhat balanced routes. Note too that maximizing tSand minimizing tLcan be viewed as “components” of the objective which seeks to minimizing the difference between the longest and shortest route.Maximizing the shortest route in a solution and minimizing the longest route in a solution can result in very different solutions. This is illustrated in Fig. 1 with a 9-node 3-vehicle instance in Euclidean space, with nodes 1–3, 4–6, and 7–9 located in clusters at different travel distances from the depot represented by node 0. Fig. 1b shows the solution obtained when minimizing the longest route: each vehicle route visits one cluster. Fig. 1c shows part of the solution obtained when maximizing the shortest route: each vehicle route will visit one node in each cluster.It is interesting to observe that the solution that minimizes tLis close to the solution that minimizes the total travel distance, while the solution that maximizes tSis close to the solution that minimizestL−tS. Bertazzi, Golden, and Wang (2015) also investigate bi-objective routing problems and show that if the assumption of a given fixed fleet size is dropped, then the ratio of the total travel distance in a solution that minimizes tLto the total travel distance in a solution that minimizes∑r∈Ω*trcan go to infinity in the worst case.At this point, it is appropriate to make another important observation related to route balance and to make an additional assumption. Consider the 10-node 2-vehicle instance shown in Fig. 2. The solution with minimum total travel distance is shown in Fig. 2a. The solution is not well-balanced as there is a short route visiting four nodes and a long route visiting six nodes. It is possible to make the solution more balanced by increasing the length of the short route as illustrated in Fig. 2b. Such artificially balanced solutions will not be of practical interest and, therefore, we make one more assumption:3.Each individual route in a solution has minimum travel distance. That is, the route is an optimal traveling salesman tour on the set of customers served on the route and the depot.For further discussion on artificially balanced solutions, see e.g., Jozefowiez, Semet, and Talbi (2002). Returning to the 10-node 2-vehicle instance, to create a solution that is better balanced than the minimum total travel distance solution, one node has to be moved from the long route to the short route. Examples of such solutions are shown in Fig. 2c.Next, we illustrate that an instance can have several solutions with the same, or very similar, route balance, but with substantially different total travel distances. One such instance, an 8-node 4-vehicle instance, is shown in Fig. 3. The nodes are equally spaced along a circle at distance R from the depot. All three solutions have perfect route balance, i.e., the four routes have the same travel distance, but the total travel distances differ substantially. The solution to the left has total travel distance8(1+sin(π/8))R,the solution in the middle has total travel distance4(2+2)R,and the solution on the right has total travel distance 16R.Fig. 4 illustrates that the opposite can also occur, i.e., solutions with the same, or very similar, total travel distance, but with substantially different route balance. The travel distances in this 4-node 2-vehicle instance are shown on the left. The two solutions have total travel distance2(a+b+2c). The solution shown in the middle is perfectly route balanced with two routes with travel distancea+b+2c,while the solution on the right has two routes that differ2b+2c−2ain travel distance. In the worst case, i.e.,a=c=ϵandb=M,where M is a high number, the difference in travel distance is 2M.The above examples show that balanced solutions can have a total travel distance that is significantly larger than the minimum possible total travel distance. Next, we explore how large this difference can be in the worst-case. We introduce the following notation. LetSbe the set of solutions to an instance. Furthermore, let Tsfors∈Sdenote the total travel distance of solution s, let Δsfors∈Sdenote the imbalance of solution s, and let(Vs1,Vs2,…,Vsm)fors∈Sdenote the partition of the node set, i.e.,Vsj⊂Vrepresents the customers served by vehicle j in solution s. Let l(W) denote the length, i.e., travel distance, of an optimal traveling salesman tour visiting the customers in W and the depot, thus,Ts=∑k=1ml(Vsk). Finally, let sTbe an optimal solution when the total travel distance is minimized and let sΔbe an optimal solution when the route balance is maximized. In case there is more than one solution that maximizes route balance, we assume sΔis the one with minimum total travel distance.Theorem 1TsΔ≤mTsT.We start by observing thatl(VsΔk)≤l(V)≤TsT,where the first inequality follows fromVsΔk⊆Vand the second inequality is a consequence of the fact that the length of an optimal traveling salesman tour visiting all nodes and the depot is less than or equal to the length of the routes in optimal VRP solution. This impliesTsΔ=∑k=1ml(VsΔk)≤∑k=1mTsT=mTsT.□Next, to show that the bound is tight, consider an instance with m vehicles with capacity Q that are to serve m2 customers each with demand Q/m.m−1clusters of m customers are located at distance d from the depot, and one cluster of m customers is located at distanced+ϵfrom the depot, where ϵ > 0. The distance between two customers in a cluster is 0, i.e., they are co-located, and the distance between two customers in different clusters is 2d if both clusters are located at distance d from the depot, and2d+ϵif one of the clusters is located at distanced+ϵfrom the depot. We haveTsT=∑i=1m−12d+2(d+ϵ)=2dm+2ϵ,andTsΔ=m(∑i=1m−12d+2(d+ϵ))=m(2dm+2ϵ)=mTsT.The solution that minimizes the total travel distance has routes that visit the customers in a cluster together and the solution that maximizes route balance has routes that visit one customer from each cluster. We note that the distances in this instance are not Euclidean, but do satisfy the triangle inequality.Next, we examine the Pareto front of a slightly different instance shown in Fig. 5, i.e., 9 customers with demand Q/3 in three clusters of three co-located customers, 3 vehicles, and travel distances as shown. We assume route balance is modeled by minimizing the difference in travel distance between the longest and shortest route. The following solutions exist:•Each vehicle visiting a cluster and serving the three customers in the cluster; see Fig. 5b.Two vehicles visiting two clusters, serving two customers in one cluster and one customer in the other cluster, and one vehicle visiting one cluster and serving the three customers in the cluster; see Fig. 5c.Each vehicle visiting two clusters, serving two customers in one cluster and one customer in the other cluster, see Fig. 5d.Two vehicles visiting two clusters, serving two customers in one cluster and one customer in the other cluster, and one vehicle visiting all clusters and serving one customer in each cluster, Fig. 5e.Each vehicle visiting all clusters and serving one customer in each cluster, see Fig. 5f.Fig. 6shows the objective values and Pareto front for these solutions. There are three non-dominated solutions: (1) the solution with minimum travel distance: each vehicle visits exactly one cluster (Fig. 5b), (2) the solution with maximum route balance: each vehicle visits all three clusters (Fig. 5f), (3) the solution with the shortest travel distance among the solutions in which one or more of the vehicles visit two clusters (Fig. 5c). Observe that the total travel distance of the solution with the maximum route balance is, as expected, three times that of the solution that minimizes the travel distance.We observe from Fig. 6 that we can create a solution that scores high on the route balance objective at a total travel distance that is close to the minimum total travel distance solution (Δ=2,T=20). To get even better route balance, the only option is the perfectly balanced solution which has a much higher total travel distance (Δ=0,T=42).In practice, a perfectly balanced solution will rarely be of interest. A perfectly balanced solution tends to be excessively expensive and often involves different drivers visiting the same location, or locations that are very close to each other. Fig. 6 shows that a Pareto optimal solution with good route balance may exist, in which the total travel distance increases only slightly. In this case, that solution still includes duplicate routes, and, hence, may not be an acceptable solution in practice. However, for many practical routing problems, involving more customers and more vehicles, the Pareto front may exhibit a similar pattern as shown in Fig. 6 and, hence, it may be possible to achieve much better route balance at only a small increase in total travel distance.It is far from trivial to decide which Pareto optimal solutions, i.e., what part of the Pareto front, a decision maker might be interested in. Fig. 7shows the Pareto front for two different instances in which one objective is to minimize the total travel distance and the other objective is to minimize the difference in travel distance between the longest and shortest route. In the Pareto front on the left, a solution with much better route balance can be obtained with an increase of total travel distance of slightly less than 10 percent, whereas in the Pareto front on the right, a solution with much better route balance can be obtained with an increase of total travel distance of slightly more than 10 percent. This demonstrates that simple rules, e.g., exploring Pareto solutions with a total travel distance less than or equal to 1.1 times the total travel distance of the solution that minimizes the total travel distance, may miss solutions that are likely to be of interest to a decision maker.In this literature review, we focus on the multi-objective routing literature. However, for a general introduction to multi-objective optimization, see Ehrgott (2005), and for recent advances in bi-objective integer and mixed integer programming, see Boland, Charkhgard, and Savelsbergh (2015a) and Boland, Charkhgard, and Savelsbergh (2015b). One of the most widely used methods for solving multi-objective optimization problems is the Non-dominated Sorting Genetic Algorithm II (NSGA-II) by Deb, Pratap, Agrawal, and Meyarivan (2002).A review of multi-objective routing problems is given by Jozefowiez, Semet, and Talbi (2008b). At the time, the authors observe that there are only a small number of publications on multi-objective routing problems. However, more recently, the interest in multi-objective routing problems has picked up, e.g., Demir, Bektaş, and Laporte (2014). For most problems considered, one of the objectives is the standard one: minimize total route cost, where cost can be defined as total travel distance, total travel time, or a problem-specific cost measure. Other popular objectives encountered in the literature include minimizing the number of routes, balancing the routes, and maximizing customer satisfaction. Jozefowiez, Semet, and Talbi (2008a) present an overview of what multi-objective optimization brings to VRPs, and illustrate this by two examples. They propose a general two-stage strategy to deal with the challenges of multi-objective optimization: diversification and intensification.In the remainder, some of the relevant literature on multi-objective routing problems is discussed. We focus on literature that considers balancing of routes as one of the objectives. We start with papers considering the MCGRP, followed by those considering the CARP and the VRP.There is one recent study, Mandal et al. (2015), that considers the bi-objective MCGRP with route balance. Route balance is defined as the difference between the longest and shortest route. The authors propose to use NSGA-II combined with a local search procedure and a clone management principle. Tests are done on 23 benchmark MCGRP instances from Prins and Bouchenoua (2005).Lacomme, Prins, and Sevaux (2003, 2006) were the first to study a multi-objective CARP where they seek to minimize both the total route length and the length of the longest trip, also referred to as the makespan. The problem is motivated by settings encountered at waste management companies. They use NSGA-II, where initial solutions are generated randomly, but three good starting solutions, obtained by three heuristics for the CARP, are added to the population as well. Local search operators are introduced to improve solutions with respect to both objectives.The multi-objective CARP was also studied by Mei, Tang, and Yao (2011) who propose a decomposition-based memetic algorithm with extended neighborhood search. In the decomposition framework, the multi-objective CARP is split into a number of single-objective CARPs where the objectives are given different weights. An experimental study compares the authors’ solution method with the one proposed by Lacomme, Prins, and Sevaux (2006) and a pure NSGA-II approach.Grandinetti, Guerriero, Laganà, and Pisacane (2010, 2012) propose an optimization-based heuristic procedure for the multi-objective CARP with three objectives: minimize total transportation cost, makespan and the total number of routes. The last objective is handled by solving the bi-objective CARP for all possible number of vehicle routes. The problem is modeled as a path-flow integer programming model where each path represents one possible route. The bi-objective CARP is then solved using the ϵ-constraint method, in which the Pareto set is obtained by solving a sequence of constrained single-objective problems: one objective is transformed into a constraint that bounds the value of that objective by ϵ. A computational study compares the results with the solutions presented by Lacomme et al. (2006), and finds that their method is competitive.A stochastic bi-objective CARP was studied by Fleury, Lacomme, Prins, and Sevaux (2005). The authors seek to minimize total costs and makespan for a CARP with stochastic demands. A stochastic memetic algorithm is proposed using a NSGA-II framework.An early study by Sutcliffe and Board (1990) considers the problem of transporting mentally handicapped adults to a training center. They identify several objectives; among them minimizing the total travel distance, minimizing total time, equalization of the trip times for each vehicle and equalization of the number of unused seats in each vehicle. They solve the problem as a single-objective VRP with the objective of minimizing total time and add constraints on the equalization of trip times and unused seats.Lee and Ueng (1999) study a VRP with load-balancing, motivated by the aspect of fairness among the drivers in a company. They formulate the problem as an integer program where the objective function is a weighted sum of total travel distance and the total difference between each vehicles working time and the vehicle with shortest working time. A heuristic solution algorithm is proposed for solving the integer program.Three objectives and multiple periods are considered in the VRP studied by Ribeiro and Lourenço (2001). Objectives are to minimize total costs, minimize standard deviation of the work of each vehicle at the end of the period, and maximize the number of times a driver visits the same customer. In their solution procedure, each objective is given a weight and the sum of the weighted objectives is minimized.Corberán, Fernández, Laguna, and Martí (2002) propose a scatter search to the problem of routing school buses when the objectives are both to minimize the total number of buses and to minimize the maximum time any student spends on a bus. Two constructive heuristics are used to generate initial routes, then the solutions are improved by local search and by generating new solutions by combining two existing ones.In a sequence of studies Jozefowiez et al. (2002), Jozefowiez, Semet, and Talbi (2006, 2007, 2009) consider the VRP with route balance. Here route balance is measured in terms of difference between the longest and shortest route. In Jozefowiez et al. (2002), the problem is solved using NSGA-II, but with a diversification technique to maintain a diversified population: elitist diversification. For intensification of the Pareto set found by the evolutionary algorithm, the authors propose a tabu search algorithm. Parallelization is also added to their algorithm to improve the performance. The authors do further investigations on the NSGA-II framework in Jozefowiez et al. (2006). A computational study compares the results of using only NSGA-II, NSGA-II with elitist diversification and adding parallelization to the algorithms. In Jozefowiez, Semet, and Talbi (2007) a target aiming Pareto search with tabu search is proposed. The local search procedure is embedded with NSGA-II forming a hybrid meta-heuristic. The elitist diversification technique and parallelization procedure are revisited in Jozefowiez, Semet, and Talbi (2009). The two mechanisms are embedded in a multi-objective evolutionary algorithm, and computational results show a strict improvement of the generated Pareto sets.Pasia, Doerner, Hartl, and Reimann (2007a) also study the VRP with route balance. The proposed solution method combines population search with local search. In a computational study the results show that their proposed solution method performs well compared with the NSGA-II algorithm. In a second paper, Pasia, Doerner, Hartl, and Reimann (2007b), the authors propose a Pareto ant colony optimization scheme for the same problem. Computational results show that the new solution method improves the performance of the solution method from Pasia et al. (2007a).A multi-objective evolutionary algorithm with an explicit collective memory method for the VRP with route balance was proposed by Borgulya (2008). The algorithm is compared with the ones by Jozefowiez et al. (2002, 2006) and the comparison shows that the algorithm has good quality and provides similar results as the methods it is compared with.Reiter and Gutjahr (2012) propose an exact method for the VRP with the objectives of minimizing total travel cost and the length of the longest route. The problem is formulated as an integer programming model and the solution approach is based on the adaptive ϵ-constraint method. The resulting single-objective subproblems are solved by a branch-and-cut technique. The metaheuristic algorithm NSGA-II and a single-objective genetic algorithm is combined with the ϵ-constraint method to improve the performance. A computational study shows that the method can solve small to medium sized instances to optimality.The waste collection VRP with time windows (VRPTW) was studied by Kim, Kim, and Sahoo (2006). Objectives are to minimize the number of vehicles and total travel time, balance workload among the vehicles, and maximize route compactness, i.e., ensure that each vehicle route serve clustered areas with little or no overlap between clusters. The solution approach contains a clustering-based waste collection VRPTW algorithm.A column generation procedure for a bi-objective VRP is proposed by Sarpong, Artigues, and Jozefowiez (2013). The objectives are minimizing total travel cost and length of the longest route. A variant of an ϵ-constraint method is proposed, where instead of defining an ϵ-constraint for the objective of minimizing the length of the longest route, this objective defines a column’s feasibility.Minimizing the length of the longest route is also considered by Pacheco, Caballero, Laguna, and Molina (2013), who investigate a school bus routing problem. The primary objective is minimizing the longest route, but, since economics cannot be ignored, the school district seeks to minimize the total distance traveled as a secondary objective. A multi-objective adaptive memory approach using tabu search is proposed and compared with the NSGA-II procedure.Melián-Batista, Santiago, AngelBello, and Alvarez (2014) study a bi-objective VRPTW where the objectives are minimizing total traveled distance and minimizing difference between longest and shortest route length in time units. A mixed integer linear model for the bi-objective problem is provided, and two versions of a scatter search-based algorithm are designed and implemented. Their performance is compared with an NSGA-II algorithm, and experiments show that the two proposed algorithms outperform the NSGA-II algorithm.A bi-objective transportation location routing problem was studied by Martínez-Salazar, Molina, Ángel-Bello, Gómez, and Caballero (2014). This problem is an extension to the VRP where also the locations of facilities need to be determined. The objectives are to minimize total cost and balancing workload by minimizing the difference between the longest and shortest route. Both a local search based method (scatter tabu search procedure) and an evolutionary method (NSGA-II) are proposed.Some not directly related literature are Apte and Mason (2006) who study the delivery operations at the San Francisco public library. Two alternatives for delivery design are proposed: Balanced routes with pre-sorting and cross docking with pre-sorting and balanced routes. Groër, Golden, and Wasil (2009) study the balanced billing cycle VRP where a utility company needs to create new meter reading routes based on the already existing routes. Objectives are to reduce total length of the routes and balance the meter readers’ route in terms of total route length and number of meters read each day. He, Xu, Sun, and Zu (2009) propose a balanced K-means algorithm to design balanced groups of geographically close customers for a tobacco company, but do not consider the actual vehicle routes. Tsouros, Pitsiava, and Grammenidou (2006) propose a routing-loading balance heuristic algorithm for a VRP where the objectives are to maximize uniform vehicle utilization taking into account a smooth vehicle loading throughout the fleet.To illustrate the effects of including route balance as a second objective in the MCGRP, we use a solution method for the bi-objective problem that quickly generates a good approximation to the Pareto front. The solution method is an implementation of the box method for discrete bi-objective optimization problems (Hamacher, Pedersen, & Ruzika, 2007) and is described in detail in Halvorsen-Weare (2015). In this section, we present the integer programming formulations of the MCGRP used and, to make this paper self-contained, a brief description of the solution method.We choose to formulate the MCGRP as a set partitioning model. In this model, each variable corresponds to a route, and each required node, edge, and arc results in a constraint. Depending on the problem variant, the number of routes in a solution can be fixed, or it can be determined as part of the optimization.Let m denote the number of vehicles, let VR, AR, and ERdenote the sets of required nodes, arcs, and edges, respectively, let Ω denote the set of feasible routes, and let Trdenote the travel distance of route r ∈ Ω. Furthermore, let indicators Arv, Ara, and Arebe one if route r ∈ Ω serves required node v ∈ VR, arc a ∈ AR, or edge e ∈ ER, respectively, and zero otherwise. The binary decision variables λrfor r ∈ Ω indicate whether route r is selected,λr=1,or not,λr=0,and the continuous variables tLand tSrepresent the travel distance of the longest and shortest route, respectively.We consider five objectives, each of which should be minimized:T:=∑r∈ΩTrλr,Δ1:=tL−tS,Δ2:=tL,Δ3:=∑r∈Ω|Trλr−TG|,Δ4:=∑r∈Ω|Trλr−μ|.The objective T minimizes the total travel distance and the objectives Δ1–Δ4 represent different options for maximizing route balance: Δ1 minimizes the difference between the travel distance of the longest and the shortest route, Δ2 minimizes the travel distance of the longest route, Δ3 minimizes the sum of the differences of the travel distance of a route with respect to a desired target route travel distance, and Δ4 minimizes the sum of the differences of the travel distance of a route with respect to the average route travel distance. The last objective, Δ4, resembles the variance objective, and leads to a linear model only if the number of vehicles is fixed and known in advance.As the objectives Δ3 and Δ4 involve absolute values, they are converted to linear objectives in the standard manner, i.e., for Δ3 by introducing new variablestrGfor r ∈ Ω, changing the objective to minimizing∑r∈ΩtrG,and adding constraintstrG≥(Tr−TG)λrandtrG≥(TG−Tr)λr,and for objective Δ4 by introducing new variables σrfor r ∈ Ω, changing the objective to minimizing ∑r ∈ Ωσr, and adding constraintsμ=1m∑r∈ΩTrλr,σr≥Trλr−μandσr≥μ−(Tr−M)λr−Mfor r ∈ Ω, where M > maxr ∈ ΩTris a large constant.The constraints in the set partitioning model are the following:(1)tL≥Trλr,r∈Ω,(2)tS≤Trλr+M(1−λr),r∈Ω,(3)∑r∈ΩArvλr=1,v∈VR,(4)∑r∈ΩAreλr=1,e∈ER,(5)∑r∈ΩAraλr=1,a∈AR,(6)∑r∈Ωλr≤m,λr∈{0,1},r∈Ω.Constraints (1) set the length of the longest route, and are only necessary when objectives Δ1 and Δ2 are considered. Constraints (2) set the length of the shortest route, and are only necessary when objective Δ1 is considered. Constraints (3)–(5) force required nodes, edges, and arcs to be served exactly once. Constraint (6) limits the number of routes in a solution to the number of vehicles in the fleet. Note that when objective Δ4 is used, the number of routes in a solution is forced to be equal to the size of the fleet.To solve the model, we generate the set of feasible routes, Ω, up front. We enumerate all possible subsets of nodes, edges, and arcs, and subsequently determine an optimal traveling salesman tour using a dynamic programming (DP) algorithm. The implemented DP algorithm is a version of the Bellman–Held–Karp algorithm modified for the MCGRP (Bellman, 1962; Held & Karp, 1962).We are interested in finding Pareto optimal solutions that are well spread out along the Pareto front. We use the box method (Hamacher et al., 2007), which combines two commonly used techniques in multi-objective optimization: the lexicographic method and the ϵ-constraint method, see Ehrgott (2005).To describe the method, we introduce the following notation:lexminx∈X(z1(x),z2(x)),which returns a feasible solution x*, if it exists, that lexicographically, i.e., hierarchically, minimizes the value of the first objective function z1(x) and the value of the second objective function z2(x) subject to the condition that the value for the first objective does not deteriorate, i.e.,z*=minx∈Xz1(x),followed by solvingx*∈argminx∈Xz2(x),subject toz1(x)≤z*.Furthermore, the box method repeatedly solves the ϵ-constrained optimization problem, Pϵ:lexminx∈X(z1(x),z2(x)),subject toz2(x)≤ϵ,for some appropriately chosen ϵ.The two “endpoints” of the Pareto front are obtained by solvingx1=lexminx∈X(z1(x),z2(x))andx2=lexminx∈X(z2(x),z1(x)). The next strict Pareto optimal solution, if it exists, is obtained by solving Pϵ withϵ=12(z2(x1)+z2(x2)). See Fig. 8 for an illustration.Given that we now have three strict Pareto optimal solutions, we have to decide which part of the active Pareto front to explore next and how to explore it. To do so, we associate an area in the criterion space with each pair of neighboring, or consecutive, points of the active Pareto front. The area in the criterion space associated with the two initial Pareto optimal solutions, the “end points” of the Pareto front, x1 and x2, is defined by z(x1) and z(x2), representing the lower right hand corner and the upper left hand corner of the area, respectively. The area associated with a pair of neighboring points xiand xjof the active Pareto front represents a part of the criterion space in which there may still be images of as-yet-unknown Pareto optimal solutions. If it has been determined that there cannot be any as-yet-unknown Pareto optimal solutions with an image in the area defined by z(xi) and z(xj), then we say that the pair (xi, xj) has been explored. The procedure to find a new strict Pareto optimal solution is as follows:1.Choose an unexplored pair of neighboring Pareto optimal solutions (xi, xj) of the active Pareto front with maximum value∥z(xi)−z(xj)∥.Set ϵ1 to the horizontal midpoint of its associated area, i.e., the midpoint with respect to objective function z2(x).SolvePϵ1to obtain a new Pareto optimal solution x*, if it exists.If x* exists, then modify the area associated with the pair (xi, xj) by replacing z(xi) with z(x*) and associate it with the new pair (x*, xj), and associate the area defined by z(xi) and (ϵ1, z2(x*)) with the new pair (xi, x*).If x* does not exist, set ϵ2 toz(xi)−ξ,where ξ > 0 is a small constant and solvePϵ2. If a new Pareto optimal solutionx^is found, then associate the area defined byz(x^)and (z1(xj), ϵ1) with the new pair(x^,xj)and label the new pair(xi,x^)as explored because there are no Pareto optimal solutions with an image between z(xi) andz(x^). If no Pareto optimal solution is found, label the pair (xi, xj) as explored because there are no Pareto optimal solutions with an image between z(xi) and z(xj).The procedure for finding a new Pareto optimal solution for a pair of neighboring Pareto solutions x1 and x2 is illustrated in Fig. 9. The new Pareto optimal solution, if it exists, is x3.On the left, we show the result if x3 is returned byPϵ1. The areas associated with the new neighboring pairs (x1, x3) and (x3, x2) are shown in light grey. On the right, we show the result whenPϵ1does not return a new Pareto solution, in which casePϵ2is solved. On the bottom left, we show the result if x3 is returned byPϵ2. There cannot be any as-yet-unknown Pareto optimal solutions with an image in the area defined by z(x1) and z(x3), thus the new neighboring pair (x1, x3) is labeled explored. The area associated with the new neighboring pair (x3, x2) is shown in light grey. On the bottom right, we show the result whenPϵ2does not return a new Pareto solution, in which case there cannot be any as-yet-unknown Pareto optimal solutions with an image in the area defined by z(x1) and z(x2) and the neighboring pair (x1, x2) is labeled explored.Taking another look at Fig. 9, we see that after finding x3 the area in the criterion space in which there may still be as-yet-unknown Pareto optimal solutions is reduced by at least a factor of two. Thus, the method converges quite quickly to a good approximation of the Pareto front. For an in-depth analysis of the convergence, see Hamacher et al. (2007). The method terminates when there is no area in the criterion space that may still contain as-yet-unknown Pareto optimal solutions, and hence, the complete Pareto front has been computed. For large instances with many Pareto optimal solutions generated, other stopping criteria may be chosen, e.g., computation time or number of Pareto optimal solutions, and the method will become a heuristic. For a detailed description of our implementation of the box method, including pseudocodes, see Halvorsen-Weare (2015).The solution method presented in Section 4 can be used to compute the complete Pareto front. We have used it to generate Pareto fronts for the smallest benchmark instances from Bosco et al. (2013). In the following, we will first present the instances before analyzing and discussing the results of our computational study.The instances vary in terms of number of tasks, types of tasks, and size of the vehicle fleet. The instances also have service costs. However, because we are interested in exploring the trade-off between minimizing total travel distance and route balance, the service costs are ignored. A summary of the instances is provided in Table 1. These instances, along with a number of other benchmark instances for the MCGRP can be downloaded from SINTEF (2014). For these instances, all vehicles will always be used, hence there is no need to convert constraint (6) to an equality for balance objective Δ4. As there is no decision maker to set the target value for the travel distance of a route, TG, in balance objective Δ3, we set it to the average travel distance of the routes in the optimal solution obtained for the instance when minimizing the total travel distance, rounded up to the nearest integer. Setting TGto this value may result in fewer Pareto optimal solutions, because the objectives T and Δ3 have become somewhat aligned.

@&#CONCLUSIONS@&#
In this paper, we have introduced a bi-objective mixed capacitated general routing problem. In nearly all previous studies of the MCGRP, as in most studies of other routing problems, only a single objective has been considered, e.g., minimizing total cost which can include only routing costs or routing costs and vehicle costs. However, in many practical settings, there will be considerations or objectives other than minimizing the total costs. A prominent one, which has attracted some interest, is route balance. Route balance can be defined in various ways, and can depend on the setting as well as the preferences of the decision maker.We have explored several options for defining route balance and investigated the effect on the Pareto front. Which option that is preferable depends on the specific routing problem. We have shown that the choice of route balance modeling has significant effects on the Pareto front, and, thus, that the choice should be made carefully by a decision maker. Our findings suggest that minimizing the difference between the longest and shortest route is a robust choice, in the sense that it performs well in a number of settings.We have presented a flexible optimization method for generating the Pareto front of MCGRP instances based on the box method by Hamacher et al. (2007), which can be converted to a heuristic, i.e., a method that produces only a partial Pareto front, simply by terminating early, either by limiting the computational time or the number of Pareto optimal solutions generated.Despite the relevance, there is not much research on multi- or bi-objective routing problems. Thus, there is a need for future research that focuses on simultaneously considering several objectives, and for developing methods that generate a set of relevant Pareto optimal solutions, i.e., relevant for the decision maker within reasonable time.