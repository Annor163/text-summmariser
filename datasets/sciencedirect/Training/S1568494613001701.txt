@&#MAIN-TITLE@&#
Online bio-inspired trajectory generation of seven-link biped robot based on T–S fuzzy system

@&#HIGHLIGHTS@&#
Presenting a novel online method for trajectory generation of a biped robot.Eliminating the need to solve inverse kinematics for all points on the trajectory.Determining an analytical function for trajectory of all lower-body joint angles.Learning a fuzzy relationship between walking and CPG parameters.Suggesting a natural form for a ZMP trajectory to preserve the dynamic balance.

@&#KEYPHRASES@&#
Central pattern generators,Nonlinear oscillators,Biped,Online trajectory generation,Fuzzy logic,

@&#ABSTRACT@&#
This paper proposes a novel method for real-time trajectory generation of a seven-link planar biped robot. Individual joint trajectories are generated by specifying only two key parameters, walking speed and step length. The proposed method combines several methods and concepts including kinematics, dynamics, trajectory generation, experimental design, Takagi–Suguno fuzzy systems, central pattern generator (CPG), ZMP criterion and a dynamic balance method. A fuzzy relationship between walking and CPG parameters is learned using experimental design methodology and T–S fuzzy systems. A method based on the Fourier series is used to tune parameters of the CPG. The proposed method allows making online changes to step length and walking speed while ensuring robot's dynamic balance. A multibody simulation package is selected and the effectiveness of the method is illustrated using several examples. It is also shown that changes in joint angles, as the result of online changes to the walking parameters, occur in a smooth and continuous manner.

@&#INTRODUCTION@&#
Bipedal walking of humanoid robots has been studied by a great number of researchers. The ultimate goal of these studies is to have a bipedal walking similar to human beings. Human gaits, the way we walk, is both energy-efficient and robust to disturbances. Humans can easily change their gait, from slow to fast walk, short to long steps, climb stairs, jump across obstacles and simply adapt to changes in their environment. Despite the extensive studies in this area, generating a bipedal walking that fulfills all features of human walk is still an open problem. Optimization techniques are useful for generating more human-like locomotion. An energy-efficiency optimization algorithm of gait control based on ZMP stability criteria is proposed by Liu et al. [1] where the fatal problem of high-energy consumption for biped robots walking in unstructured environments is studied. Trajectories inspired from human-like locomotion are another attempts to generate human-like locomotion for biped. Reference trajectories can be predetermined through detailed human gait analyses [2–4] or it can be determined based on the hip and ankle trajectory in the workspace through inverse kinematics and dynamic balance. The most widely used dynamic balance criterion is the zero-moment point (ZMP) [5]. ZMP is a point on the ground where the sum of all the moments of the active forces equals zero. Huang et al. [6] proposed an iterative computation trajectory generation method for hip and foot by specifying walking speed and step length to obtain the largest dynamic balance margin base on the ZMP. An approach presented by Erbatur and Kurt [7] improved the iterative computation trajectory generation by specifying a desired ZMP reference trajectory. This approach offered more natural, stable and human-like walking. The desired ZMP reference trajectory is utilized to obtain the required hip or torso motion. The ZMP equation for the biped is highly nonlinear and difficult to solve. Therefore, a simplified model based on the inverted pendulum is frequently used [8–10]. In this simplified dynamic model, the whole mass of the robot is concentrated at the center of mass and the biped is considered as a single inverted pendulum.Many researchers turn to biology in an effort to make the biped locomotion more human-like. Human and other vertebrates use a rhythm generator inside the spinal cord for their locomotion, called the central pattern generator (CPG). The CPG along with other conventional approaches may be used to generate joint trajectories of the biped. Taga [11,12] generate robust biped locomotion using CPG with appropriate feedback signals in an unpredictable environment. Or [13] presents a new hybrid CPG–ZMP control system that is inspired from flexibility in the human body torso. He simulates the flexible spine of a humanoid robot and experimentally shows that the robot can adapt its spine motions in real-time to achieve stable walking. Aoi et al. [14,15] used a neuro musculoskeletal model for human bipedal walking and examined the roles of the phase transitions and phase reset on walking. To model and characterize complicated systems many researchers use Design of Experiment (DOE) methodologies [16–19]. Za’Balawi et al. [20] addressed the effect of global entrainment, interaction between CPG and biped with the external environment, on biped locomotion energy. The locomotion of the biped is generated by CPG using coupled nonlinear oscillators of Van Der Pol. They use DOE and response surface approach to characterize and tune the oscillator parameters to meet minimum energy criteria. The major drawback to the CPG approach in literature is that most of the time the CPG is adopted for a specific locomotion gait and there are only a few methods that use CPG for generating an arbitrary gait [21,22].One of the key features of human walking is its ability to adapt to the environment and change the walking parameters like walking speed and step length in real time. Yang et al. [23] presents Genetic Algorithm Optimized Fourier Series Formulation (GAOFSF) method for stable gait generation. In this method, the step length and stride-frequency are adjusted online. Fattah and Fakhari [24] proposed a novel method for online trajectory planning of a seven-link biped walking with different step lengths. Nakazato and Ohnishi [25] proposed an online stride changing method as well as a walking cycle changing method for biped robots using a linear pendulum model.Soft computing techniques and especially fuzzy logic have been applied to different fields recently [26,27]. In [28] the real-time balance PD control of an eight-link biped robot using a ZMP dynamic model is implemented using two alternative intelligent computing control techniques: one based on support vector regression and another based on a first-order Takagi–Sugeno type neural-fuzzy.In this article, a novel method is presented for an adaptable CPG used in real-time trajectory generation of a planar seven-link biped robot. The paper first focuses on the lower-body of the biped. In Section 2, by specifying the walking speed and step length, the trajectory of the lower-body for each joint is generated using a finite Fourier series. In Section 3, a fuzzy relationship between finite Fourier series parameters with biped parameters, walking speed and step length, are produced using a T–S fuzzy system [29] based on the design of the experiments methodology. In Section 4, a recent method proposed by [30] is utilized to relate the finite Fourier series parameters with CPG parameters. Next, the motion of the upper-body is considered and the required motion to preserve the dynamic balance of the biped robot is determined using the ZMP criterion. Finally, effectiveness and applicability of the proposed approach for biped walking are demonstrated through several examples in Section 5.In this section, the overall framework of the proposed method is summarized and presented in Fig. 1. It should be note that the details of the elements shown in Fig. 1 will be explained in upcoming section of this paper. The overall method is made of two offline and two online processes. The first offline process generates a fuzzy relationship between step length (Ds) and average velocity (Vav) with 31 CPG parameters responsible for generating the desired lower body motion. The second offline process generates a fuzzy relationship between Dsand average Vavwith center of mass x-coordinate for the biped. This information plus stability criteria will later be used to generate the desired upper body motion.A higher-level controller is responsible for determining and specifying the required step length (Ds) and average velocity (Vav) based on the environmental information, desired locomotion and current state of the robot. The higher-level controller uses the relationship generated by the two offline processes and two online processes, shown in Fig. 1, to generate the actual biped motion.In common trajectory planning methods, hip and foot trajectories are generated in Cartesian space via interpolating certain constraint conditions. Next, the Cartesian space trajectory is discretized. For each Cartesian space point, inverse kinematics of the biped is solved and the corresponding joint space trajectories for individual biped joints are determined [6,31]. However, in the proposed method presented in this paper, inverse kinematics is solved for only six Cartesian space constraint points, time constraints, and the corresponding biped joint angles are determined. Furthermore, the inverse kinematics is solved offline. Next, a simple linear algebraic equation is solved to directly determine a finite Fourier series for each joint angle. This results in an analytical function for each joint trajectory. The details of the proposed method will be explained in the coming sections. Consider a seven link biped in the sagittal plane, as shown in Fig. 2.Referring to Fig. 2, l1 and l4 are length of the shanks, l2 and l3 are length of the thighs, l0 is the length of the trunk and b1+b2 is the length of the foot. θ1, θ2, θ3, θ4, θ5 represent the lower-body joint angles and θ0 represent the upper-body, trunk, angle. Separation of the lower-body angles from the upper-body angle enables us to independently generate trajectories of the lower joint angles and produce a desired locomotion in a given environment. In the meantime, the trajectory of the trunk will be used to satisfy the dynamic balance of the biped robot based on ZMP criteria [5]. The main parameters utilized in the hip and foot constrains are shown in Fig. 3.Six time constrains for position and orientation of the foot as well as hip positions are selected to cover a complete cycle. See Table 1[32].Referring to Table 1, Tsis the time for single support phase, Tdis the time required for double support phase, αTsis the time when the right foot reaches its maximum height at Xmand Ym. To alleviate the impact with the ground, the velocity of the foot is set near zero when the toe of the right foot leaves and the heel of the right foot touches the ground. Unlike the common trajectory generation methods, it is not necessary to interpolate a function among the constraint points for the foot and the hip. Alternatively, in the presented paper the constraints are used to obtain Fourier series for each joint angle trajectory.As it can be seen in Fig. 3 and Table 1, eleven parameters (qb, qe, Ds, Ts, Td, α, Xmax, Ymax, Db, Ded, Des), hereinafter referred to as walking parameters, are defined for subsequent trajectory generations. These eleven parameters remain constant for a given gait. Determination of all these eleven walking parameters for a specific velocity and step length of the biped is not an easy task. Optimization algorithms like Genetic Algorithms may be applied to find the eleven walking parameters by defining an appropriate fitness criterion. However, in order to focus on the main contributions of this paper, we choose to simplify the problem by considering logical relations between walking parameters. This will reduce the number of unknown walking parameters for a given step length and average velocity. For example, Tsis the duration of the single support phase and in normal walking is the 90% of the complete cycle of the walking.(1)Tc=Ts+Td;Ts=0.9Tc;Td=0.1Tc;Ded=−Db;Des=Ded−Ded8;Ds=−Db+Ded=2Ded⇒Ded=Ds2;Ds=−Db+Ded=2Ded⇒Ded=Ds2;Additionally, the less critical walking parameters are set to appropriate constant values.(2)Xm=0;Ym=0.15m;α=0.5;qb=qe=0;As shown in Eqs. (1) and (2), all the walking parameters are related to Dsand Vav.Fourier series are well-suited to generate cyclical functions. As mentioned in Section 2.1, six time constraints are used for defining the complete cycle of the walking. Therefore, a finite Fourier series with six parameters is needed to satisfy the time constraints as,(3)θi(t)=Ci1sin(ωit)+Ci2cos(ωit)+Ci3sin(2ωit)+Ci4cos(2ωit)+Ci5sin(3ωit)+Ci6i=1:5(thelowerbodyangles)where Ci1…Ci6 are six unknown constants. By solving the inverse kinematics at the specified time constraints, six angular positions can be determined for each joint angle. Therefore, the six unknown constants in Eq. (3) can be easily determined by solving a linear algebraic equation, Eq. (4). Frequency of oscillation is equal to ωi=π/(Ts+Td).(4)sin(ωi×0)cos(ωi×0)sin(2ωi×0)sin(ωi×αTs)cos(ωi×αTs)sin(2ωi×αTs)sin(ωi×Ts)cos(ωi×Ts)sin(2ωi×Ts)sin(ωi×(Ts+Td))cos(ωi×(Ts+Td))sin(2ωi×(Ts+Td))sin(ωi×(Ts+Td+αTs))cos(ωi×(Ts+Td+αTs))sin(2ωi×(Ts+Td+αTs))sin(ωi×(Ts+Td+Ts))cos(ωi×(Ts+Td+Ts))sin(2ωi×(Ts+Td+Ts))...cos(2ωi×0)sin(3ωi×0)1cos(2ωi×Ts)sin(3ωi×αTs)1cos(2ωi×(Ts+Td))sin(3ωi×Ts)1cos(2ωi×(Ts+Td))sin(3ωi×(Ts+Td))1cos(2ωi×(Ts+Td+αTs))sin(3ωi×(Ts+Td+αTs))1cos(2ωi×(Ts+Td+Ts))sin(3ωi×(Ts+Td+Ts))1Ci1Ci2Ci3Ci4Ci5Ci6=θi(0)θi(αTs)θi(Ts)θi(Ts+Td)θi(Ts+Td+αTs)θi(Ts+Td+Ts)As shown in Eq. (4), the coefficients of the Fourier series, Ci1…Ci6, are related to the six time constraints of the hip and foot trajectory in Table 1. The time constraints of the trajectory are related to the eleven constant walking parameters of the trajectory. In Section 2.2, constant parameters of the trajectory were related to step length, Ds, and average velocity, Vav. Inverse kinematics for each of the six time constraints is solved to obtain the corresponding joint angle. Next, the six unknown Fourier series coefficients are calculated. Consequently, a relationship between the coefficients of the Fourier series with Dsand Vavcan be found. This process is summarized in Fig. 4.In the previous section, an offline method for trajectory generation is presented. Consider Fig. 4. Steps presented in Fig. 4 to obtain joint trajectories are time-consuming and could not be performed online. To overcome the difficulty of the above process, a new online method for finding the Fourier constants is proposed in this paper. This method is based on the offline information and utilizes Takagi–Sugeno (T–S) fuzzy systems [29] to prepare a relationship between step length and average velocity with the Fourier series coefficients (ωi, Cij). A T–S fuzzy system is required for each Fourier series coefficient. As shown in Eq. (3), each of the five joint angles requires six coefficients. Therefore, 30 T–S fuzzy systems for Fourier series coefficients and one T–S fuzzy system for the frequency of the oscillations are required. Constructing the 31 fuzzy systems is not an easy task. A method based on statistical design of experiment (DOE) is used to form the T–S fuzzy systems [29]. Inputs of the fuzzy systems are the step length (Ds) and the average velocity (Vav). Orthogonal full factorial design [33] is used to vary the two inputs in three levels, as shown in Table 2.The selected range of values for the step length and the average velocity is based on the seminal works of [34] that explored the relationship between step length and speed of human walk. Note, there is a similarity between the selected values for the ranges used in the present paper. However, it is not necessary for these two values to be equal or similar, and one may select different value for the range.As stated in [29] nine runs are a minimal value to train a fuzzy system. The outputs for each run are the 31 parameters of the Fourier series. Four membership functions are selected for the two inputs. The output space is divided into four partitions. Each partition is approximated by a response surface model (RSM). The relationship between inputs and output are clearly illustrated in Fig. 5.A generic T–S rule can be written as follows:(5)Ri:IFx1isAi1ANDx2isAi2THENyi=fi(x1,x2),i=1,2,…,nRwhere Ai1, Ai2 are fuzzy sets in the antecedent, and yiis a crisp function in the consequent. yican be any function as long as it can properly describe the output of the model within the fuzzy region specified by the antecedent of the rule. However, it is usually a first order polynomial function of input variables. In this paper, the consequences of fuzzy rules, yi's, are specified by a nonlinear polynomial for each response surface model (RSM1–RSM4). The nonlinear polynomial includes interaction terms between the two input variables, Dsand Vav. The addition of the interaction terms results in a function with four unknown constants. As shown in Fig. 5, each RSM could be calculated with four training data points. The selection of a nonlinear polynomial function allows us to take advantage of the full information of the training data as well as a more accurate prediction of the output versus linear polynomial. The general form of the nonlinear polynomial function is shown in Eq. (6).(6)yi=RSMi=ai1x1+ai2x2+ai3x1x2+ai4,i=1,2,3,4As shown in Fig. 5, four membership functions are assumed for each input. Therefore, sixteen fuzzy rules for this system are required and summarized in Table 3.The weighted average method is employed to deffuzzify the output variable. With the generated fuzzy relationship, the joint angles can be determined by specifying the values for Dsand Vav.(7)θi(t)=Cˆi1(Ds,Vav)sin(ωit)+Cˆi2(Ds,Vav)cos(ωit)+Cˆi3(Ds,Vav)sin(2ωit)+Cˆi4(Ds,Vav)cos(2ωit)+Cˆi5(Ds,Vav)sin(3ωit)+Cˆi6i=1:5whereCˆi1(Ds,Vav)…Cˆi6(Ds,Vav)are the predicted values for Ci1…Ci6 used in Eq. (3). To show the performance of the fuzzy system, to model the 31 parameters of the Fourier series, θ2 is arbitrary selected. The overall response of the fuzzy system for coefficients of θ2 joint angle is shown in Fig. 6.As shown in Fig. 6, the control surfaces closely match the training data. To test the performance of the generated fuzzy system for non training data points, random input points, Ds=0.29190m and Vav=0.49417m/s, are selected. The coefficients of the Fourier series are obtained with the T–S systems. Consequently, the values for the five lower-body joint angles can be calculated. Comparison between the joint angles generated by T–S based Fourier series and non T–S based Fourier series are made in Fig. 7.As shown in Fig. 7, the T–S based Fourier trajectories closely match the primary Fourier trajectories. In order to quantify the accuracy of the proposed fuzzy system to model each joint angle, mean square error (MSE) index is used. Consider Table 2. To train the fuzzy system, three levels for step length and average velocity (0.24, 4 and 0.56) is considered. Note that the same values for both Dsand Vavare used. However, as stated before, one may select a different value for the range depending on the application. Three other levels 0.32, 0.44 and 0.52 are selected for testing. MSE is determined for the nine testing data and is compared with the training data. Results are tabulated in Table 4.The error used in calculating the MSE is the difference between values of the T–S based Fourier joint angles and the primary Fourier joint angles. Therefore, MSE of order E-02 is rather low and acceptable for predicting the joint trajectories generated by the T–S fuzzy systems.Thus far, fuzzy relationships for step length and average velocity with Fourier parameters of the five joint angles for the lower body are presented. Therefore, the 31 Fourier parameters are directly obtained by specifying the step length and average velocity. Selecting a Fourier series for each joint angle has several advantages such as having an analytical and smooth function for joint angles, as well as having smooth derivatives of any order. Additionally, it allows us to directly find the CPG parameters with the proposed method presented in [30].The main idea for using CPG as a trajectory generator is to encode the desired trajectory in a stable limit cycle. For designing cyclic trajectories, a CPG-based command structure has several benefits such as (1) due to the stability of the limit cycle, the system is robust to small perturbations [11,15,35,36] and (2) real-time modulation of the amplitude or the period of the trajectory can easily be performed by changing a few parameters of the CPG. For the biped robot, the step length or walking speed can be changed in an online manner utilizing the 31 fuzzy systems while obtaining smooth trajectories as a result of the CPG properties.Consider, the CPG model presented in Eq. (8)[37]. This model offers several advantages. In particular, it makes possible to easily reproduce the Fourier series obtained for the desired joint angle trajectory.(8)q˙i=2πνi+ωijsinqj−νiνjqi−ϕijr˙i=rrir˙ri=aiai4(Ri−ri)−rriTo obtain a harmonic response, the output angle is defined by Eq. (9).(9)θi=ricos(qi−q0i){steady-stateresponse}θi=Ricos(qi−q0i)Note the similarity between the Fourier terms in Eq. (3) and the steady-state response of the CPG, Eq. (9). Therefore, each term of Fourier series in Eq. (3) could be generated by an oscillator. Referring to Eq. (3), it can be seen that six coupled oscillators are needed to reproduce the angular trajectory for one joint angle.An essential step in using a CPG as a trajectory generator, is finding the parameters of the CPG to produce the desired trajectory. In the present paper, based on a direct comparison of two functions, Eq. (3) and Eq. (9), a straight forward and efficient method is used to identify the CPG parameters. For detailed information on this method, please see [30,37]. The parameters Riand νiare the main CPG parameters and their values determines the limit cycle of the CPG. The values for these two parameters are determined by direct comparison of the CPG output, Eq. (9), with the desired Fourier trajectory, Eq. (3). Therefore, Riis equal to Ciand νiis equal to ωi/2π. The parameter q0iis zero for cosine and π/2 for sine Fourier terms. Other constant CPG parameters, used in Eq. (8), are selected as ωij=4, ϕij=0 and ai=10. As shown in Fig. 8, all six oscillators are coupled with the first oscillator. This coupling insures all six oscillators are synchronized with each other. The overall structure of the oscillators for reproducing any of the five (θ1∼θ5) desired joint angle is illustrated in Fig. 8.As shown in Fig. 8, six oscillators are required for simulating the desired trajectory for each joint angle. Therefore, 30 nonlinear oscillators are required to simulate the trajectory of the lower-body of the robot. Fig. 9demonstrates the overall architecture of the CPG network.Additionally, note that couplings between angles are done through the first oscillator of each angle. With the aid of these couplings, synchronization is achieved and synergy is formed within the joint angles.The ability to change walking speed and step length is critical for a biped robot to adapt to the environment. Therefore, the CPG must be able to change its parameters to produce the desired walking speed and step length. For any given Dsand Vavthe 31 T–S fuzzy systems are generated for approximating the Fourier series parameters, and consequently CPG parameters (see Sections 3 and 4.1). CPGs produce a stable limit cycle for each joint. Therefore, if the parameters of the CPGs are changed, by changing Dsor Vav, a new limit cycle is generated and the trajectory is converged from the old limit cycle to the new limit cycle in a smooth manner.CPG method is superior for adaptable trajectory generation compared with conventional methods like Fourier trajectory generation. Refer to Eq. (7). The walking parameters of the trajectory depend on specified Dsand Vav. If Dsor Vavrequires sudden changes, the output in Eq. (7) will abruptly change. However, by using the CPG trajectory, the discontinuity in the trajectory is avoided. Fig. 10, demonstrates a comparison between Fourier and CPG trajectory generation methods for θ1. At time 2.2s, Dsand Vavare changed from 0.4m to 0.6m and 0.4m/s to 0.5m/s, respectively.As shown in Fig. 10, Fourier trajectory is non-smooth at the transition time. However, the trajectory of the CPG is smooth and continuously changed to reach the desired new trajectory. Therefore, the CPG network is superior to the conventional methods for adaptive trajectory generation of the biped.In Section 2, we showed how the lower-body trajectories, legs, can be generated to meet the time constraints. The lower-body trajectories are responsible for the overall motion of the biped and are produced via the CPG network presented in Fig. 9. However, the upper-body, trunk, trajectory must be generated in a way to ensure the dynamic balance of the robot is maintained. To do this, ZMP criterion is utilized. ZMP is a point on the ground where the net moment of internal forces and gravity forces acting on the biped have zero values [5]. In the proposed method, a desired lower-body trajectory is specified. However, the trunk trajectory and ZMP trajectory are both unknown. One option is to generate the trunk trajectory and then check the dynamic balance of the biped using a ZMP criterion [6]. If the ZMP criterion is not satisfied then the trunk trajectory must be regenerated. This process needs to be repeated until ZMP criterion is satisfied. This process is time-consuming and not suitable for real-time applications. Therefore, another possible solution is considered. A desired ZMP trajectory is first generated and the trunk trajectory is calculated using the ZMP criterion. Using this solution approach, the dynamic balance of the biped is insured in advance.The trunk angular position is significantly affected by the position of the desired ZMP. Many researchers have assumed that desired ZMP stays in a fixed point within a support polygon when studying three-dimensional biped motions [9]. Considering a planar biped in a single support phase, the fixed point can be anywhere along a line connecting heel to toe of the supporting foot. However, studies of humans walk reveal that the ZMP does not remain fixed and it moves forward from heel to toe [7,38,39]. In the present paper, to obtain a more natural walk, the desired ZMP is assumed to increase with time as shown in Fig. 11.However, it is possible to aim for the highest stability but have less of a natural walk. Therfore, using the proposed method, it is possible to define the required level of stability.Upon specifying the desired ZMP trajectory, the trunk trajectory can be calculated by the ZMP criterion. The ZMP criterion is represented by an equation which is highly nonlinear and is not suitable for online applications [40]. Therefore, a Linear Inverted Pendulum Model (LIPM) is used as a simplified model [9,40–43]. Using a LIPM model allows us to assume that the overall mass of the robot is concentrated in the center of the mass. The simplified dynamic equation of motion for the biped can be presented as,(10)x¨COM=gyCOM(xCOM−xZMP_d)where xCOMand yCOMare the center of mass of the biped robot in x and y-directions, respectively, and xZMP_dis x-coordinate of the desired ZMP. Eq. (10) can be treated as a two-point boundary value problem for each step of walking [32]. To solve the boundary value problem, a desired trajectory for ZMP in each cycle is assumed. The initial and final state of the robot will provide the two boundary points. Additionally, the change in yCOMis assumed to be negligible and therefore yCOMis assumed to be constant. With the stated assumption, Eq. (10) can be solved to calculate the values of xCOMfor each time step. Upon calculating the variable xCOM, x-coordinate of the trunk center of mass, xc_0, can be calculated by(11)xCOM=∑i=06mixc_i∑i=06mi⇒xc_0=xCOM∑i=06mi−∑i=16mixc_im0where xc_iis the position of center mass for the ith link in x-direction and miis the mass of the ith link.Next consider Fig. 12. The trunk trajectory, θ0, can be calculated by(12)lc0cos(θ0)=xc_0−xhip⇒θ0=cos−1xc_0−xhiplc0where, xhipis the position of the hip in x-direction and is obtained from the lower-body trajectory, lc0 is the distance between the trunk center of mass and xhip. Finally θ0 is the trunk angular position. Upon solving the simplified equation of motion, Eq. (10), the trunk angular position in each time step is calculated and can be related to Dsand Vavutilizing the T–S fuzzy system outlined in Section 3. The simplified equation is a good approximation of the real dynamic of the biped. However, in order to ensure the existence of the dynamic balance the actual ZMP, is calculated without the assumption of the inverted pendulum. Actual ZMP equation in x-direction is represented as follows,(13)xZMP_a=∑i=17mi(y¨i_COM+g)xi_COM−∑i=17mix¨i_COMyi_COM∑i=17mi(y¨i_COM+g)The actual ZMP is based on the actual acceleration of the links. In the absence of a physical robot, dynamic simulation software such as SimMechanics may be used to supply the actual acceleration of the biped links. Then, as long as the actual ZMP remains inside the footprint, the dynamic balance is insured.As stated earlier, the main goal of this paper is to present an online method by which desired step length and walking speed are specified and corresponding stable walking trajectories for each of the biped joints are produced. To do this, experimental design methodology was combined with T–S fuzzy systems to prepare a relationship between step length and average velocity with the CPG parameters. Recall that the CPG is responsible for generating the desired joint trajectories. To experimentally verify the effectiveness of the proposed method, five case studies are presented. Consider, the full factorial table, Table 2. Note that the generated T–S fuzzy model applies to the data range presented in Table 2. Therefore, the first two case studies use the minimum and maximum values for Dsand Vavused in Table 2. The third case uses randomly generated values of Dsand Vavwithin their minimum and maximum values. The next two case studies focus on the ability of the biped to change Dsand Vavin real time. To do this in case study #4, the value of parameter Vavis increased by 100%. In case study #5, both Dsand Vavare changed. In all case studies, it is shown that robot preserves its dynamic balance and remains stable.For the simulation, the following parameters as summarized in Table 5are used for the anthropometric seven links biped.The biped robot is simulated in the SimMechanics toolbox of Matlab Software [44]. SimMechanics is a well-accepted dynamical simulation tool for simulating Multibody mechanical systems [45–47].Lowest values for both step length and average velocity are selected, Ds=0.24 and Vav=0.24. Stick diagram of the simulated walk is presented in Fig. 13.The actual and desired ZMP are shown in Fig. 14. The actual ZMP is calcaulated using Eq. (13).As shown in Fig. 14, the desired ZMP is linearly increased in time and the actual ZMP is within the allowable range while closely following the desired ZMP. Furthermore, note that low angular variation in the upper-body shown in Fig. 13, makes the walking more similar to human walking.Highest values for step length and average velocity are selected, Ds=0.56 and Vav=0.56. Stick diagram of the simulated walk is presented in Fig. 15and ZMP variation is presented in Fig. 16.Random values for step length and average velocity are selected, Ds=0.4424 and Vav=0.5323. Stick diagram of the simulated walk is presented in Fig. 17and ZMP variation is shown in Fig. 18.In this section, the effect of changing the step length and average velocity while walking are investigated. This ability is critical for real-time control of a biped.In this case study, the average velocity is varied while step length is fixed. The first two steps, use the Vav=0.24m/s and Ds=0.24m. In the third step, the average velocity is doubled to Vav=0.48m/s.As shown in Fig. 19, the walking speed is increased. With this change, the actual ZMP remains within the support polygon formed by the contact points of the feet and the floor, Fig. 20.It is critical that the joint angles change in a smooth manner. This insures that motors and consequently the biped does not experience high values of the jerk. Fig. 21shows the variations of the joint angles as well as a magnified view of the joint angles at the transition time.As shown in Fig. 21, despite the sudden changes in walking parameters at 2s, variations in joint angles are smooth. This characteristic, smooth transition in joint angles stems from the limit cycle property of the CPG.In this example, a more complicated situation is considered. Both the step length and average velocity are simultaneously changed. Average velocity and step length are both changed from 0.24m/s to 0.4m/s and from 0.24m to 0.48m, respectively. Stick diagram of the simulated walk is presented in Fig. 22.The desired, actual and allowable ZMP are also determined and plotted in Fig. 23.As shown in Fig. 23, a small variation from the desired ZMP occurs at the transition time. However, the actual ZMP remains within the boundaries of the acceptable range. The corresponding variations of the joint angles as well as a magnified view of the joint angles at the transition time are also shown in Fig. 24.As can be seen from Fig. 24, the joint angles change in a smooth manner.

@&#CONCLUSIONS@&#
