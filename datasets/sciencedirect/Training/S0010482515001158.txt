@&#MAIN-TITLE@&#
Clustering high throughput biological data with B-MST, a minimum spanning tree based heuristic

@&#HIGHLIGHTS@&#
A novel minimum spanning tree based heuristic (B-MST) for clustering is introduced.The heuristic has multi-objective of obtaining both tight and separate clusters.The objective function of the heuristic can be used as an internal validation index.It is applied on 13 different data sets and compared with diverse algorithms.B-MST performs better than the compared algorithms on most of the data sets.

@&#KEYPHRASES@&#
Clustering,Gene expression data,Heuristics,Biological networks,Graph mining,

@&#ABSTRACT@&#
To address important challenges in bioinformatics, high throughput data technologies are needed to interpret biological data efficiently and reliably. Clustering is widely used as a first step to interpreting high dimensional biological data, such as the gene expression data measured by microarrays. A good clustering algorithm should be efficient, reliable, and effective, as demonstrated by its capability of determining biologically relevant clusters. This paper proposes a new minimum spanning tree based heuristic B-MST, that is guided by an innovative objective function: the tightness and separation index (TSI). The TSI presented here obtains biologically meaningful clusters, making use of co-expression network topology, and this paper develops a local search procedure to minimize the TSI value. The proposed B-MST is tested by comparing results to: (1) adjusted rand index (ARI), for microarray data sets with known object classes, and (2) gene ontology (GO) annotations for data sets without documented object classes.

@&#INTRODUCTION@&#
High throughput data technologies such as microarrays, devices measuring the abundance of thousands of RNAs simultaneously, generate a huge quantity of biological data, especially gene expression data. The information generated may be represented by networks. For example, gene expression data may be regarded as a complete network where the genes are its nodes, the edges represent the relations between genes, and the pairwise correlation values obtained from the expression data determine the strength of the relation between the gene pairs. The algorithms for clustering gene expression data are usually grouped as partitional or hierarchical, but they may also be grouped based on the representation of data, the relationship between clusters, the distribution of the data, or using other properties. Pirim et al. [1] present a recent survey of clustering algorithms that interpret gene expression data.Clustering network data can be considered as a graph partitioning problem, that has many variations such as clique partition and K-way equipartition, which minimizes the weight of each sets’ edges by partitioning the vertices of a graph into k sets of equal size [2]. Since the graph partitioning problem is NP-hard [3], efficient heuristics to find meaningful solutions are required similar to one described by Kernighan and Lin [4] that interchanges subsets of partitions to minimize external cost.A minimum spanning tree (MST) of a graph includes all of its vertices. Using network׳s MSTs to cluster biological data is practical since edge removal divides one group of genes directly into two groups. In other words, removingn−1edges from a tree divides the nodes into n different groups. Xu et al. [5] demonstrate that no essential information is lost for clustering purposes with an MST representation. Moreover, the representation may overcome the computational burden of graph based calculations and the dependency difficulties associated with the geometrical shapes of the clusters [5].Xu et al. [5] introduce novel algorithms for MST based clustering. One algorithm clusters by removing long tree edges, and the total edge-distance of all K sub-trees is minimized. This algorithm works as long as the inter-cluster edge distances are clearly larger than intra-cluster edge-distances. K, the number of clusters is increased till the objective function value changes dramatically and the last K value determines the number of clusters. The second algorithm is an iterative clustering algorithm minimizing the total distance between data points and the cluster center. The calculation begins with an arbitrary K partition. Then, each pair of adjacent clusters is merged; the algorithm cuts the edge that minimizes the objective function value. It converges to the local minimum. Finally, the third algorithm determines the globally optimal solution by grouping various data points around representative data points.Determining which edges to remove and developing a quality measure or objective function to evaluate the clusters are the two most important considerations in developing an MST based heuristic. Having both tight and separated clusters at the same time is desirable since those types of clusters are more likely to have interdependent relationships. However, clustering objectives usually seek to maximize either the similarities within clusters – tightness – or the distances between them – separateness [6–8].This paper proposes a new objective function that seeks to obtain tight and separated clusters at the same time. The function assumes that a binary graph of clusters will feature edges formed between two genes when the relationship between them is strong. The idea is that clusters׳ diameters will be minimized, and an object of a cluster will have as few connections with the other clusters as possible. To achieve the tight and separated clusters described here, the MST׳s most central or between edges are iteratively removed. An edge׳s betweenness is determined by the number of times a given edge appears on the shortest path between any node pairs. The betweenness calculation of the edges described by Newman and Girvan [9] is adopted in the heuristic presented here.The work flow begins with Pearson correlation calculations that analyze gene expression data sets. Correlation values become edge weights that construct the gene co-expression network. The weighted network is transformed to a binary network with a threshold that retains the strongest edges; at the same time, the network remains connected as one percent of the edges is removed at each iteration. In addition to correlation calculations, expression data are used to calculate six different distances: Eucledian, Chebyshev, Manhattan, Canberra, Minkovski, and 1-Pearson correlation. K-means, PAM and B-MST use these distance measures and the given number of clusters to generate partitions, which are then used to calculate ARI values. TSI values, also used as the objective function of B-MST, are calculated using the partitions obtained from B-MST, K-means, PAM, and CSF and the edge distances over the binary network. The work flow is shown in Fig. 1, and an example is provided in the Methods section.

@&#CONCLUSIONS@&#
Clustering high throughput biological data efficiently is essential especially when information about the interactions between biological molecules is not yet available. The high dimensional nature of the abundant data generated in microarrays makes designing efficient and effective algorithms necessary to generating biologically meaningful clusters.In this study, an MST based algorithm, B-MST, is developed to cluster gene expression data efficiently. The algorithm uses a new objective function, TSI, as a tool to measure tightness and separation at the same time, while considering transitive distances on a binary graph to generate biologically meaningful clusters.Many distance measures and diverse data sets were employed to develop the ARI calculations that show that B-MST is a compelling alternative to other clustering approaches because a few distance measures and data sets may be easily optimized [30]. Moreover, a unique validation index based on biological theory is developed that may guide many clustering approaches in addition to B-MST.B-MST is tested using 13 different data sets. Eleven of the data sets are used for external validation by the ARI measure. Nine of these eleven data sets are used for tissue clustering, while the other two are used for gene clustering. The ARI values generated by K-means and PAM algorithms are compared to the values produced by B-MST, which outperforms the other methods in the six data sets, based on the decision theory׳s domination rule. B-MST dominates the other algorithms for all the gene clustering data sets presented in this study, and the heuristic׳s performance is also compared with the well-cited CSF. B-MST׳s highest ARI values are compared with CSF׳s values because CSF calculations are independent of distance measures. B-MST outperforms CSF in all of the data sets except Leukemia. The remaining two of the thirteen data sets are used for biological inference. B-MST finds clusters with higher selectivity values than CSF, except for one cluster in the Yeast2 data set. B-MST presents relevant results for biological process relevance in seven out of eight clusters, while CSF finds relevance in six of them. For Yeast3, B-MST also finds higher selectivity values than PAM in most of the clusters. B-MST determines biological process relevance in thirteen clusters of fifteen while PAM determines only ten.The new TSI measure offers a novel quality measure that may validate a result from a clustering algorithm using biological data. In external validation, the minimum TSI values correspond to maximum rand index values in most of the cases. In biological inference, CSF finds a smaller TSI value for Yeast2 (101) compared to B-MST (105). B-MST finds a smaller TSI value (845) compared to PAM (853). Hence, biologically enriched genes in clusters with lower TSI values demonstrate that, the TSI is a reliable quality measure to be used in clustering biological data.None declared.