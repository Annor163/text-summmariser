@&#MAIN-TITLE@&#
A multiobjective distance separation methodology to determine sector-level minimum separation for safe air traffic scenarios

@&#HIGHLIGHTS@&#
We propose a methodology to determine minimum distance separation for safe airspace.Algorithms for sector/traffic design and applying separation values are proposed.Multiobjective optimization is used to find the minimum separation values.We show the trade-off between separation values and aircraft pairs violating safety.We illustrate how sector/traffic properties affect the minimum separation values.

@&#KEYPHRASES@&#
Air traffic management,Evolutionary optimization,Air traffic scenario design,Airspace safety,Air traffic collision risk,

@&#ABSTRACT@&#
A precursor question to increase the capacity of an airspace is to determine the minimum distance separation required to make this airspace safe. A methodology to answer this question is proposed in this paper. The methodology takes sector volume, number of crossings and crossing angles of routes, and the number of aircraft as input, and generate air traffic scenarios which satisfy the input values. A stochastic multi-objective optimization algorithm is then used to optimize separation values. The algorithm outputs the set of non-dominated solutions representing the trade-off between separation values and the best attainable target level of safety. The results show that the proposed methodology is successful in determining the minimum distance separation values required to make an air traffic scenario safe from a collision risk perspective, and in illustrating how minimum separation values are affected by different sector/traffic characteristics.

@&#INTRODUCTION@&#
One of the key challenges facing air navigation service providers (ANSPs) is how to accommodate the continuing growth in air traffic demand while meeting safety targets. The rapid increase in air traffic compelled ANSPs to investigate ways to relax the International Civil Aviation Organization (ICAO) standards for separating aircraft in time and space to accommodate extra flights (Netjasov & Janic, 2008). Decreasing separation negatively impacts safety since separation is a fundamental milestone in maintaining low collision risk in an airspace. Although mid-air collision is a rare event, it is a significant event due to its consequences, which normally result in a large number of fatalities.Separation is a vital factor considered in many air traffic management problems such as demand-capacity balancing (DCB), and conflict detection and resolution (CDR). In DCB problem, a safe, efficient and orderly air traffic flow needs to be achieved while considering – among other factors – the capacity of departure and arrival airports to meet a certain demand of flights. This is achieved by several means such as ground holding (i.e., delaying the departure time of aircraft), airborne holding, rerouting of aircraft, flight cancelation, and speed/level changes. For ground holding, a single destination airport was considered in  Richetta and Odoni (1993 1994) and Terrab and Odoni (1993), effect of delays over a network of destination airports was consider in Vranas, Bertsimas, and Odoni (1994), while dealing with airspace capacity in addition to airport capacity was considered in Lulli and Odoni (2007). Integer programming models (whether deterministic Agustin, Alonso-Ayuso, Escudero, and Pizarro, 2012a; Bertsimas and Patterson, 1998 or stochastic Agustin, Alonso-Ayuso, Escudero, and Pizarro, 2012b; Mukherjee and Hansen, 2005, 2009 in nature) using aircraft rerouting were introduced. In Bertsimas and Patterson (1998) and Mukherjee and Hansen (2005), aircraft rerouting was used in association with ground holding and airborne holding, and in addition to flight cancelation in Agustin et al. (2012a, 2012b). Speed (Bertsimas, Lulli, & Odoni, 2008, 2011) and level (Barnier & Brisset, 2004) changes solutions were used along with ground holding, airborne holding and flight cancelation. On the other hand, there are many studies addressing the CDR problem (see Kuchar and Yang, 2000; Martin-Campo, 2010 surveys on CDR models and algorithms), where the aim is to detect when two or more aircraft are in conflict and violate the horizontal and/or vertical separation (i.e., conflict detection) and resolve such conflict.In all the previous studies on DCB and CDR problems, separation values were pre-defined according to the current standard values, and were mainly treated as constraints which must not be violated. This is reasonable since such studies aim for solutions within the current air traffic management (ATM) policies. However for new ATM policies, such as relaxing the ICAO standards for separating aircraft in time and space, separation should be treated as decision variables rather than pre-defined constraint values. Finding ways to determine the minimum separation in an airspace sector which does not compromise safety is crucial for a number of reasons:•It can assist sector designers to design/re-design safe airspaces.It can help researchers to design risk free synthetic scenarios to be used within their air traffic simulation environment.It can be used as a Monitor/Alert Parameter in a real-time environment to trigger an alarm if the expected demand on a sector exceeds its capacity.Collision risk assessment (EUROCONTROL, 2001) provides vital indicators for airspace safety in two stages. The first stage is risk estimation, where collision risk models (CRMs) are developed and used to estimate the collision probability of aircraft in a given airspace. The second stage is risk evaluation, which compares the estimated risk with either an estimated risk of a similar airspace that is considered safe historically or a level of risk that is deemed acceptable known as the target level of safety (TLS) (ICAO, 2001).Collision risk in an air traffic scenario (ATS) is greatly influenced by the non-linear interactions between different factors, mainly sector characteristics, traffic characteristics and the separation among aircraft (Whittle, Kwan, & Saboo, 2005). Therefore, addressing the distance separation required for an airspace to be safe cannot be done in isolation from the sector and traffic characteristics of this airspace. Here a number of subproblems need to be solved. First, procedures to generate air traffic scenarios (ATSs) with different sector/traffic characteristics need to be designed. Second, generic and flexible procedures which can separate aircraft in an ATS given any values of distance separation. Third, an optimization procedure needs to be designed to discover the minimum distance separation values which make an ATS safe.To this end, we contribute a multiobjective distance separation methodology which investigates the relationship between different airspace sector/traffic characteristics and the minimum separation required for safety (as compared by the TLS). We present procedures to design air traffic scenarios (ATSs) with different sector characteristics (i.e., number and angles of crossings) and traffic characteristics (i.e., number of aircraft and their speeds). Second, we present a procedure which can apply any given values of distance separation in an ATS. Finally and similar to other studies which rely on stochastic optimization techniques in air traffic management (ATM) (Alam, Shafi, Abbass, & Barlow, 2009; Delahaye, Alliot, Schoenauer, & Farges, 1995; Delahaye & Puechmorel, 2006; Gianazza, Durand, & Archambault, 2004), a multiobjective evolutionary algorithm (MOEA) is used to minimize the distance separation among aircraft while minimizing the number of aircraft pairs which violate the TLS.The methodology outputs the set of non-dominated solutions representing the trade-off between separation values and the best attainable target level of safety. The results show that the proposed methodology is successful in determining the minimum distance separation values required to make an ATS safe from a collision risk perspective, and how minimum separation values are affected by different sector/traffic characteristics. To the best of our knowledge, this is the first study to address these research questions.In the next section, the problem is formally defined including discussions on collision risk, safety, distance separation and how these concepts are used in this paper in the proposed methodology. In Section 3 procedures for sector design are introduced, and in Section 4 the traffic generation procedure is discussed. Section 5 illustrates the proposed distance separation procedure. Sections 6 and 7 illustrate the experimental design and results of the study, and Section 8 concludes the study.Collision risk: The collision risk estimate expresses the probability of an aircraft having a collision in an airspace. It is considered a crucial numeric metric and analytic method to guide decision making in regard to airspace safety. Collision risk is computed for a pair of aircraft aciand acjat a certain time step t for a time interval tcraccording to a collision risk function CR(aci, acj), i.e., the probability that aciand acjwill collide in the next tcrminutes.The tcris usually a time interval which allows screen update time in normal automatic dependent surveillance (ADS) operations or downlink in non-ADS operations, controller conflict recognition, controller message composition, uplink, pilot reaction and aircraft manoeuver. This may take from 4 minutes in ADS operations to 6 minutes in non-ADS operations (Anderson, 2005). This study uses the average of these two numbers and set tcrto be 5 minutes.The collision risk function CR(aci, acj) implements a collision risk model (CRM), which expresses the risk of a mid-air collision in an airspace in terms of a number of quantifiable parameters. In this study, the Hsu CRM (Hsu, 1981; ICAO, 2001) is used. The Hsu CRM is commonly used by ANSPs and by the ICAO Separation and Airspace Safety Panel (Anderson, 2005) because of its low computational cost.For completeness, we will briefly discuss here the Hsu CRM (see Anderson, 2005 for a detailed treatment for the Hsu CRM). In the Hsu CRM, the collision risk of a pair of aircraft is computed based on the closest point of approach (CPA). Fig. 1(A) shows two aircraft on two tracks T1 and T2, with headings indicated by the tracks’ arrows and nominal speeds S1 and S2. Given their current positions, headings and speeds, the two points CPA1 and CPA2 will be computed. Both aircraft will reach CPA1 and CPA2 after a time period known as the time to CPA (T2CPA). When both aircraft are at CPA1 and CPA2, the distance between them is minimum. The collision risk is computed based on the distances d1 and d2 from the current positions of the aircraft to the CPA1 and CPA2 points. Collision risk can be only computed if the T2CPA is non-negative (Fig. 1(A)). Fig. 1(B) shows a case where the T2CPA is negative since the CPA already passed and aircraft are flying away from each other.The Hsu CRM assumes that aircraft are represented by circular cylinders of diameter λxyand height λz. The collision risk is generally speaking the probability that the two cylinders (i.e., representing two aircraft) intersect. To compute collision risk for a pair of aircraft, the first aircraft is represented by a double-sized cylinder with diameter λxyand height 2λz, denoted by C, while the second aircraft by a point particle, denoted by P. For a collision to occur P must enter C through its vertical side or through its top or bottom. A horizontal overlap of the two aircraft occurs when P enters the infinite cylinder C∞ of radius λxyobtained by extending upwards and downwards the cylinder representing the first aircraft.In the Hsu CRM, the collision risk of a pair of aircraft is estimated for a time interval tcr. As illustrated in Fig. 2, the pair of aircraft are assumed to be at nominal distances d1 and d2 from an intersection. The collision risk for given values of S1 and S2 (the speeds of the two aircraft) is determined. The general formula is depicted by Eq. (1).(1)CR(tcr|S1,S2)=Prob(PentersC|PentersC∞)×HOP(tcr|S1,S2)where(2)Prob(PentersC|PentersC∞)=Pz(hz)×(1+|z˙¯|2λz×πλxy2Vrel)HOP(Tcr| S1, S2) denotes the probability the pair of aircraft will have a horizontal overlap during the time interval tcrgiven S1 and S2. Pz(hz) is the instantaneous vertical overlap probability of the two aircraft of height λz, nominally separated vertically by distance hzwhen the horizontal overlap occurs. The term1+(|z˙¯|/2λz)×(πλxy/2Vrel)represents the effective thickness of the cylinder representing a collision, where|z˙¯|is the average vertical speed of an aircraft given that it has a horizontal overlap and Vrelis the relative velocity of two aircraft, i.e.,(3)Vrel=S12+S22−2S1S2cos(θ)where θ is the heading angle difference between the two aircraft. The previous description can be used for longitudinal separation on identical tracks, where any point on the common track may be taken to be the intersection point.The Hsu CRM considers positional error of an aircraft when computing collision risk. Two probability distributions are used to represent the along-track (longitudinal) and the cross-track (lateral) errors, both shown in Fig. 2 by the red and green colors, respectively. Based on extreme value theorem (ICAO, 2008), collision risk models usually use the double exponential distribution to model aircraft positional error caused by its deviations along and cross its original track.Safety: There are two basic approaches for determining whether an airspace is acceptably safe (ICAO, 2001). The first approach compares the ATS against a reference ATS that has the same safety related characteristics and has been judged to be safe. While the second approach (which is being adopted in this study) is by estimating the collision risk in an ATS and comparing it against a threshold value known as the TLS. TLS expresses the level of risk deemed tolerable in any given airspace. For an en-route airspace (the focus of this research) the TLS is 5.0 ×10−9fatal accidents per operation (ICAO, 2002). Assume N aircraft in an ATS, there areN(N−1)/2pairs of aircraft. Let (aci, acj) be an unordered pair of aircraft aciand acj, andprAC={(aci,acj)|i≠j}be the set of all unordered pairs of aircraft. For each pair of aircraft (aci, acj) in an ATS, the collision risk CR(aci, acj) is estimated every second for the time interval tcr. To be more conservative, the maximum collision risk value is chosen and is computed by CRm(aci, acj) to represent the collision risk between a pair of aircraft. The CRm(aci, acj) is multiplied by two to convert it to fatal accident per hour (one collision counts as two fatal accidents). An ATS is said to be safe if for each pair of aircraft, their fatal accident per operation (computed based on their maximum collision risk) is less than or equal to the TLS; that is,(4)∀(aci,acj)∈prAC,2×CRm(aci,acj)≤5.0×10−9.A TLS is used for each pair of aircraft instead of averaging over the aircraft within a sector to use a more risk averse strategy.Sector and traffic design: Although there are several aspects that may be taken into consideration when it comes to sector design, the number of crossings and the crossings angles are more vital from a collision risk perspective. Thus, our main focus here is to design sectors with a fixed number of crossings and all crossing angles are within a certain angle interval. For traffic, we assign a certain number of aircraft to the tracks in a sector and choose aircraft speeds from a certain speed interval.Distance separation variables: For a pair of aircraft aciand acj, the collision risk CR(aci, acj) is directly related to the separating distance between them at the CPA, i.e., the smaller the separating distance the higher the collision risk. Thus if an ATS is judged to be unsafe according to Inequality 4, then this can be rectified by increasing the separation distance between the pair.Fig. 3shows all possible relations between any pair of aircraft regardless of their flight level. A pair of aircraft can be on the same track (Fig. 3(A)) or on two different tracks. If the pair of aircraft are on two different tracks, then these two tracks may be either: (1) crossing (according to the direction of the traffic on the track) whether the crossing point is inside (Fig. 3(B)) or outside (Fig. 3(C)) the sector; (2) not crossing according to the traffic direction on the tracks (Fig. 3(D, E)); or (3) parallel whether the tracks have the same directions (Fig. 3(F)) or opposite directions (Fig. 3(G)).Three variables are used to apply distance separation between pairs of aircraft as follows: longitudinal using the longSep variable as in Fig. 3(A), crossing using the crossSep variable as in Fig. 3(B, C), and lateral using the lateralSep variable as in Fig. 3(D–G).Applying separation: A high-level illustration of how separation is applied between pairs of aircraft using the three separation variables is presented. Consider the following example (Fig. 4(1)) where there are four aircrafts on two tracks T1 and T2 crossing at C1, 2. Each aircraft has an activation time (i.e., the time it enters the sector) and a speed. The four aircraft get first arranged according to the time each aircraft will reach the crossing point C1, 2. This arrangement will be ac1 → ac2 → ac3 → ac4. The basic idea to apply distance separation between aircraft is to fix the position of an aircraft and then adjust the activation time (and/or velocity in longitudinal relations) of the following aircraft in the arrangement.Let us assume that ac1 is at the crossing point as shown in Fig. 4(1). The distance d gets computed between ac2 and the crossing point (or ac1). If d < crossSep holds, then the activation time of ac2 is increased so thatd=crossSepholds. This has the effect of shifting ac2 position backward away from the crossing point. According to the arrangement, the previous process gets repeated for ac2 and ac3 (Fig. 4(2)), i.e., assume ac2 is at the crossing point and adjust the activation time of ac3 if necessary. Finally, the previous process is repeated for ac3 and ac4 (Fig. 4(3)), with the exception that 1. d gets compared against longSep since the pair has a longitudinal relation; and 2. the speed of ac4 must be less than or equal to the speed of ac3, so that the separation between them holds or increases for their remaining flying time in the sector. For a pair of aircraft aciand acj, define dri, jas the ratio between the distance per second of aciand the distance per second of acj. The dr1, 2, dr2, 3 and dr3, 4 are computed for each pair ac1 → ac2, ac2 → ac3, and ac3 → ac4.The previous example can be extended by adding ac5 on a third track T3 which intersects with T2 at C2, 3 (Fig. 5(1)). Again the aircraft are arranged according to the time each aircraft will reach C2, 3, i.e., ac5 → ac1 → ac3 → ac4. The distance d between ac1 and ac5 gets computed when ac5 is at C2, 3 and d gets compared against crossSep. Assume that d < crossSep holds and the activation time of ac1 is adjusted accordingly and increased by s seconds. To maintain the distance separation already applied at the crossing C1, 2, dri, jis used to adjust the activation time of any aircraft that arrived after ac1 in the C1, 2 arrangement. For instance, if the activation time of ac1 increased bys=30seconds, then the activation time of ac2 will increase by 30 × dr1, 2, and the activation time of ac3 will increase by (30 × dr1, 2) × dr2, 3, and so on.As shown in Fig. 5(2), the tracks T1 and T3 are parallel, therefore, ac2 and ac5 have a lateral relation. The two aircraft will be arranged according to which of them will reach the crossing point on its track before the other, i.e., the arrangement will be ac5 → ac2. When ac5 is at C2, 3, the distance d gets computed between ac2 and C1, 2, gets compared to latSep, and the activation time of ac2 gets adjusted if d < latSep. Again after adjusting ac2, all its predecessor aircraft in previously considered arrangements will be re-adjusted using the dri, jterm.Each pair of tracks Tiand Tjcan be either crossing or lateral, and an arrangement of the aircraft on both tracks will be used to apply separation. For the previously discussed separation procedure to work, the aircraft arrangements in an ATS should not have any cyclic relations between the aircrafts. For instance, if aciappears before acjin one arrangement and after acjin another arrangement, then this will create a cycle when adjusting the activation time (i.e., acjwill be adjusted according to acithen aciaccording to acj). To prevent such cyclic relations, the aircraft arrangements are modeled as a directed graph, and the graph gets checked for cycles. If found, the cycles are eliminated during the design of the traffic for any given sector.Minimum distance separation: It is trivial to say that using large values for the separation variable longSep, crossSep, and latSep will well separate the aircraft from each other. However, we are interested in the minimum values (minLongSep, minCrossSep, and minLatSep) for the three variables which make an ATS safe according to Inequality (4) and can contribute to the definition of sector capacity. The problem is modeled as a multi-objective optimization problem to minimize the following two objectives:•Minimize Objective 1:longSep+crossSep+latSep; andMinimize Objective 2: The number of aircraft pairs which violates Inequality (4).For any given ATS, the resulting Pareto front gives us the relation between the separation values and the number of aircraft pairs which violates the TLS. The separation values corresponding to zero pairs of aircraft violating the TLS are the minimum separation values which makes the ATS safe. Furthermore, this helps us to investigate the relation between the minimum separation values required for an ATS to be safe and the sector and traffic characteristics of that ATS, and how the minimum separation values differ with different sector and traffic characteristics.The proposed methodology is illustrated in Fig. 6. We first design an ATS with certain sector characteristics (e.g., sector volume, number of crossings and crossings’ angles) and traffic characteristics (e.g., number of aircraft, speeds). We then use MOEA to find the minimum separation values, where the separation values in each chromosome will be used to produce an ATS with these separation values applied. The ATS will be simulated, collision risk will be evaluated and number of aircraft pairs violating the TLS will be determined. This information will be feedback to the MOEA to guide the stochastic search.In spite of the current objectives considered and results presented in this study, we stress that other objectives can easily be incorporated in the proposed methodology. In case that a certain separation variable is more important than others due to special conditions in an airspace/sector (e.g., weather conditions), then this separation variable can be assigned a higher weight than others in Objective 1.The minimum separation values which makes the ATS safe (i.e., the separation values corresponding to zero pairs of aircraft violating the TLS) can directly be used in estimating the maximum capacity of the sector (i.e., the maximum number of aircraft flying in the sector at a certain time period). Such capacity can easily be linked to the sector and traffic characteristics. Furthermore, other objectives such as certain capacity level, environmental impact/fuel emissions, or air traffic controller workload can replace the safety objective (Objective 2) or be added as additional objective(s). Here the methodology will investigate the relation of the separation values and the new objective(s) given certain sector and traffic characteristics.Airspace sectors may take various shapes, however for consistency with other studies (e.g., Alam et al., 2013; Willemain, 2003), we adopt a circular shape. The sector size is captured by the circle radius (e.g., 100 nautical miles as in Willemain (2003)). When we allow aircraft to have different flight levels, then the sector will be cylinder. Let numCross be the number of crossings and [minCA°, maxCA°] be the interval for crossing angles, with minCA° is the minimum crossing angle (CA) and maxCA° is the maximum CA.As an initial step to our sector design procedures, we choose a circle radius. Then we divide the circle circumference to a set circPoints of equidistant points, where each point is defined by its latitude (Lat) and longitude (Lon) coordinates. We will use the points in the circPoints set to be the entry and exit points of any track in the sector. We define track Tiby the track ID (i) and three points, an entry point (enLat, enLon), a waypoint (wpLat, wpLon), and an exit point (exLat, exLon). Thus a track is defined by the tuple 〈i, (enLat, enLon), (wpLat, wpLon), (exLat, exLon)〉. The traffic flying on the track enters the sector from the entry point, then fly in a straight line to the waypoint and then to the exit point to exit the sector. We propose the following procedure to generate two crossing tracks Tiand Tjwith a CA in the interval [minCA°, maxCA°]. We define the crossing Ci, jbetween the two tracks Tiand Tjby the tuple ⟨i, j, crossLat, crossLon⟩, where crossLat and crossLon are the crossing point latitude and longitude coordinates.Designing two crossing tracks example:Fig. 7illustrates an example for two crossing tracks generated by Algorithm 1. A random point is chosen as the crossing point, which becomes as well the waypoints of T1 and T2 (Steps 3 and 7). The entry point of T1 (the red dot) is chosen randomly from circPoints (Step 4), and the exit point (the red arrow) is determined as in Steps 5 and 6. The entry point of T2 (the blue dot) creates a crossing angle A (Step 9), and the exit point of T2 (the blue arrow) does not coincide with the exit point of T1 (Step 11). □As shown in Fig. 7, a track may not be a straight line from its entry to exit points. Algorithm 1 is similar to what was proposed in Alam et al. (2013), except for Step 11 and allowing traffic on different flight levels to fly on opposite directions on the same track (here the CA may not belong to [minCA°, maxCA°] due to the traffic directions). All the following procedures are novel compared to Alam et al. (2013).We incorporate Algorithm 1 in the following procedure to generate a sector with numCross crossings. Let Tracks be the set of tracks in a sector, and Crossings be the set of size numCross which contain all (inside and outside) crossings of a sector. As we will show in the next procedure, we generate tracks in an iterative manner. Each time a new track Tiis introduced, let crossTibe the set of crossings between Tiand already existing tracks in Tracks, and numCrossTibe the size of crossTi.Sector Design Example. To illustrate how Algorithm 2works, let us consider the following example where we design a sector withnumCross=4crossings and all crossing angles are within [0°, 45°]. According to Steps 5–8, we add the first two crossing tracks T1 and T2 (as shown in Fig. 7) generated by Algorithm 1. The set Tracks contains T1 and T2, the set Crossings contains C1, 2, and the sector has one crossing (count=1). For all the following pair of crossing tracks we generate by Algorithm 1, we apply the Steps 9–30. We generate another pair of crossing tracks T3 and T4 (Fig. 8(A)), and we apply Step 11 for each track. We find that T3 and T4 do not intersect with any of the existing tracks either inside or outside the sector. Thus we approve them and add them to Tracks and add the crossing C3, 4 to Crossings. The sector has two crossings (count=2).We generate another pair of crossing tracks T5 and T6 (Fig. 8(B)), and apply Step 11 for both of them. We find that T5 intersects with T3 and the CA is more than 45°. As well, we find that T6 intersects with the four already existing tracks, so adding T6 to the sector will violate thenumCrossing=4requirement. Thus we discard the two tracks and generate two new crossing tracks T5 and T6 as shown in (Fig. 8(C)). Again T6 intersects with the four already existing tracks, so it will be discarded. T5 intersects with T2 inside the sector and with T1 outside the sector, adding two crossings with acceptable CA to the sector, so it will be approved. Fig. 8(D) shows the sector with five tracks (T1, T2, T3, T4 and T5) in Tracks, four crossings (C1, 2, C3, 4, C1, 5 and C2, 5) in Crossings, and all crossing angles are within [0°, 45°]. □Once the sector is designed, we assume that each track has different flight levels from 29,000 feet to 41,000 feet inclusive with a vertical separation of 1000 feet between any two successive levels. However, we stress that traffic in all flight levels has the same direction of flow from the entry to the exit points.After designing the sector, we start assigning aircraft to its tracks. Let N be the number of aircraft. For each aircraft, we choose a track ID, a flight level, a speed and an activation time. Recalling our previous discussion in Section 2 regarding how distance separation is applied, aircraft arrangements in an ATS should not have any cyclic relations between the aircraft. There are several ways to detect if cycles exist in the aircraft arrangements. We found it more convenient to model the aircraft arrangements as a fully connected directed graph (DG), where nodes are aircraft, and a directed edge go from aircraft acito another aircraft acjif aciappears before acjin any arrangement. We then use the Tarjan cycle detection algorithm (Tarjan, 1972) to detect all cycles (strongly connected components). The Tarjan algorithm’s running time is linear in the number of nodes (ND) and edges (E) in DG, i.e.,O(ND+E).The following procedure describes how traffic is generated. Let Aircraft be the set of N aircraft, [minS, maxS] be an interval for aircraft speeds,FL={29,000,30,000,31,000,32,000,33,000,…,41,000}be the set of flight levels, and AW be the activation time window.To illustrate Algorithm 3, let us consider the following example.ATS0 example. Consider the sector we designed in the previous section (Fig. 8(D)), which has 5 tracks and 4 crossings. Here we have four pairs of crossing tracks: (T1, T2) with crossing C1, 2, (T3, T4) with crossing C3, 4, (T1, T5) with crossing C1, 5, and (T2, T5) with crossing C2, 5. The rest of the pairs of tracks (T1, T3), (T1, T4), (T2, T3), (T3, T5), (T2, T4) and (T4, T5) are lateral tracks denoted by L1, 3, L1, 4, L2, 3, L3, 5, L2, 4 and L4, 5. Assume that we want to assignN=13aircraft, with different flight levels, speeds in the interval of [250, 350] knots, and activation times in 5 minutes window.Each time we randomly generate a new aircraft, the aircraft arrangements are determined and converted to a DG. The new aircraft will be added to the existing aircraft if the corresponding DG is cycle free. Fig. 9shows the directed graphs generated each time we add a new aircraft to Aircraft, and Table 1shows the aircraft arrangements computed when adding ac5 (corresponds to DG4 in Fig. 9). When assigning ac6 to track ID: 5, speed 259 knots, FL 38,000 feet, and activation time 00:02:31, this created a cycle (ac3 → ac1 → ac6 → ac3) as shown in DG5 in Fig. 9. So ac6 was re-generated as track ID: 5, speed 271 knots, FL 39,000 feet, and activation time 00:01:12, and again this created a cycle as shown in DG6 in Fig. 9. Another cycle appeared in DG12 in Fig. 9.The aircraft in Table 2are the 13 aircraft generated by Algorithm 3. The final aircraft arrangements are presented in Table 3(corresponds to DG15 in Fig. 9), and the arrangements have no cycles. Table 3 shows the aircraft arrangements according to every pair of tracks, whether the pair is crossing or lateral tracks. For instance for crossing C1, 2 (first row), ac3 will be the first aircraft to reach the crossing point, followed by ac9 then ac11 then ac13 and so on. For lateral tracks L1, 3, ac10 will reach the waypoint of T3 followed by ac2, then ac11 will reach the waypoint of T1 followed by ac13, ac1 and ac6. □In this section, we present a formal procedure to apply distance separation as we previously discussed in Section 2. This procedure processes separations based on the aircraft arrangements (for example, see Table 3). Let Arrangements be the set of all aircraft arrangements in an ATS, AR be a single arrangement, |AR| be the number of aircraft in arrangement AR, DR be the set of distance ratios dri, j.Algorithm 4takes as an input the aircraft arrangements, and the distance separation variables longSep, crossSep and latSep (Step 1), then separation will be applied for each aircraft arrangement (Steps 3–33). First (Steps 5–9), we check if the arrangement is for crossing tracks (crossAR will be true) or lateral tracks (latAR will be true). We then start iterating through each successive pair of aircraft in the arrangement (Steps 10–32). As per Step 11, let the pair of aircraft be aciand acj, which are assigned to tracks Tiand Tj, respectively. Based on whether crossAR is true or latAR is true, we will choose the points we use to apply separation (Steps 12–16). If the arrangement is for crossing tracks (i.e., crossAR is true), then the crossing point – as illustrated in Fig. 4 – will be used in the following computations for both aircraft (Step 13). Otherwise as illustrated in Fig. 5(2), the waypoint of Tiwill be considered for aciand the waypoint of Tjwill be considered for acj. After deciding which separation variable we will use (Steps 20–27), we compare the separation value Sep with the distance d computed in Steps 18 and 19. If d < Sep, then the activation time of acjwill be adjusted to maked=Sep(Step 29). In Step 30, the activation time of any predecessor aircraft of acjin any aircraft arrangement that was already processed for separation will be adjusted (as explained before in relation to Fig. 5(1)).

@&#CONCLUSIONS@&#
