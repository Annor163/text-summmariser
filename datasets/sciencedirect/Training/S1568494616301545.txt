@&#MAIN-TITLE@&#
Effective multi-objective naïve Bayes learning for cross-project defect prediction

@&#HIGHLIGHTS@&#
We propose novel multi-objective learning techniques considering the class imbalance context for cross-project defect prediction.The proposed approaches (i.e., MONB and MONBNN) show the better diversity compared to existing multi-objective prediction models.The proposed approaches show the similar prediction performance compared to within-project defect prediction models.

@&#KEYPHRASES@&#
Class imbalance,Cross-project defect prediction,Harmony Search,Multi-objective optimization,Search-based software engineering,

@&#ABSTRACT@&#
Software defect prediction predicts fault-prone modules which will be tested thoroughly. Thereby, limited quality control resources can be allocated effectively on them. Without sufficient local data, defects can be predicted via cross-project defect prediction (CPDP) utilizing data from other projects to build a classifier. Software defect datasets have the class imbalance problem, indicating the defect class has much fewer instances than the non-defect class does. Unless defect instances are predicted correctly, software quality could be degraded. In this context, a classifier requires to provide high accuracy of the defect class without severely worsening the accuracy of the non-defect class. This class imbalance principle seamlessly connects to the purpose of the multi-objective (MO) optimization in that MO predictive models aim at balancing many of the competing objectives. In this paper, we target to identify effective multi-objective learning techniques under cross-project (CP) environments. Three objectives are devised considering the class imbalance context. The first objective is to maximize the probability of detection (PD). The second objective is to minimize the probability of false alarm (PF). The third objective is to maximize the overall performance (e.g., Balance). We propose novel MO naive Bayes learning techniques modeled by a Harmony Search meta-heuristic algorithm. Our approaches are compared with single-objective models, other existing MO models and within-project defect prediction models. The experimental results show that the proposed approaches are promising. As a result, they can be effectively applied to satisfy various prediction needs under CP settings.

@&#INTRODUCTION@&#
Software defect prediction (SDP) models predict fault-prone modules on the basis of previous version’s software metrics and the fault/non-fault labels. The fault-proneness of the current modules can be predicted via the prediction model built with training data. Consequently, limited testing resources can concentrate on fault-prone modules effectively. Without sufficient local data, defects can be predicted through cross-project defect prediction (CPDP) employing data from other projects to construct a classifier. The poor performance of CPDP is due to the different dataset characteristics between source project data (a training set obtained from external projects) and target project data (a test set obtained from the local project). To deal with this problem, source instances similar to target instances are chosen by similarity analysis techniques and then chosen source instances are trained to build a classifier. Software defect datasets typically have the class imbalance problem, indicating significantly fewer defect instances compared to non-defect instances. In this case, defect instances will be poorly represented by machine learners and thus predicting defect instances correctly becomes harder. Software quality might be significantly degraded unless defect instances are predicted correctly. In this context of class imbalance, a classifier needs to produce high accuracy of the defect class without significantly degrading the accuracy of the non-defect class [1]. This class imbalance principle seamlessly connects to the purpose of the multi-objective (MO) optimization in that MO prediction models aim at balancing many of the competing objectives. In this paper, we aim at identifying effective multi-objective learning techniques under cross-project environments. We explore the following research questions:•RQ1: How does the proposed multi-objective approaches perform compared to single-objective classification models?RQ2: How does the proposed multi-objective approaches perform compared to other multi-objective classification models?RQ3: How does the proposed multi-objective approaches perform compared to within-project defect prediction models?In compliance with the MO optimization, three objectives are devised considering the class imbalance context. The first objective is to maximize the probability of detection (PD). The second objective is to minimize the probability of false alarm (PF). The third objective is to maximize the overall performance (e.g., Balance).We propose two novel MO learning techniques, i.e., multi-objective naive Bayes (MONB) and multi-objective naive Bayes with the nearest-neighbor filter (MONBNN). Both naive Bayes (NB) and naive Bayes with the nearest-neighbor filter (NBNN) [2] are single-objective learning techniques based on a naive Bayes learner. To deal with the multi-objective naive Bayes problem, a Harmony Search [3] meta-heuristic algorithm is utilized. We can obtain a set of non-dominated solutions, i.e., Pareto optimal solutions, with different PD, PF and Balance values on source project data. Each learner, i.e., NB or NBNN, is built with each Pareto optimal solution and predicts fault-prone instances in target project data. We utilize Jureczko datasets [4] obtained from PROMISE repository [5]. We compare our approaches with single-objective methods, other existing MO methods and within-project defect prediction methods.As a statistical significance test, we performed the Wilcoxon rank-sum test [6] at a 5% significance level. In addition, we conducted the A-statistics effect size test [7] evaluating the magnitude of improvement, recommended by Arcuri and Briand [8] for the assessment of randomized algorithms in software engineering. The experimental results show that the proposed approaches are promising. In particular, our approaches show the similar performance compared with WPDP. As a result, they can be effectively applied to satisfy various needs for CPDP.The remaining sections are organized as follows. In Section 2, as a background, multi-objective optimization problems and the multi-objective Harmony Search are discussed. In Section 3, we describe related work covering CPDP and the multi-objective optimization. In Section 4, the proposed MONB and MONBNN are described in detail. Section 5 explains the details of the experimental setup. Section 6 shows the results of the experiment in various CP and WP settings. Section 7 discusses threats to validity of the proposed approaches. Finally, we conclude this paper by summarizing our contributions and mentioning directions for future research.

@&#CONCLUSIONS@&#
