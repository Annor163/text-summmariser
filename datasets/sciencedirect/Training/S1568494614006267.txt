@&#MAIN-TITLE@&#
An improved magnetic charged system search for optimization of truss structures with continuous and discrete variables

@&#HIGHLIGHTS@&#
An improved magnetic charged system search (IMCSS) is presented for optimization of truss structures.In IMCSS some of the most effective parameters in the convergence rate of HS scheme have been improved to achieve the best convergence.The IMCSS algorithm is applied for optimal design problem with both continuous and discrete variables.

@&#KEYPHRASES@&#
Magnetic charged system search,Harmony search,Truss structures,Size optimization,Discrete variables,

@&#ABSTRACT@&#
In this study, an improved magnetic charged system search (IMCSS) is presented for optimization of truss structures. The algorithm is based on magnetic charged system search (MCSS) and improved scheme of harmony search algorithm (IHS). In IMCSS some of the most effective parameters in the convergence rate of the HS scheme have been improved to achieve a better convergence, especially in the final iterations and explore better results than previous studies. The IMCSS algorithm is applied for optimal design problem with both continuous and discrete variables. In comparison to the results of the previous studies, the efficiency and robustness of the proposed algorithm in fast convergence and achieving the optimal values for weight of structures, is demonstrated.

@&#INTRODUCTION@&#
In the last three decades, many meta-heuristic algorithms have been proposed and applied for optimization of structures. Every meta-heuristic method consists of a group of search agents that explore the feasible region based on both randomization and some specified rules. The rules are usually inspired by natural phenomena laws. Genetic algorithms (GA) proposed by Holland [1] and Goldberg [2] are inspired by Darwin's theory about biological evolutions. Niche Hybrid Parallel Genetic Algorithm (NHPGA) proposed by Wei et al. [3], Generative Algorithms (GA) by Allison et al. [4], Particle swarm optimization (PSO) proposed by Eberhart and Kennedy [5] simulates the social behaviour, and it is inspired by the movement of organisms in a bird flock or fish school. Ant colony optimization (ACO) formulated by Dorigo et al. [6] imitates foraging behaviour of ant colonies. Many other physical-inspired algorithms such as simulated annealing (SA) proposed by Kirkpatrick et al. [7], Harmony Search (HS) presented by Geem et al. [8], Gravitational Search Algorithm (GSA) proposed by Rashedi et al. [9], Big Bang–Big Crunch algorithm (BB–BC) proposed by Erol and Eksin [10] which improved by Kaveh and Talatahari [11], Bat-Inspired Algorithm proposed by Yang [12], Ray Optimization (RO) developed by Kaveh and Khayatazad [13], Krill Herd (KH) presented by Gandomi and Alavi [14], Dolphin Echolocation method by Kaveh and Farhoudi [15], Colliding Bodies Optimization (CBO) by Kaveh and Mahdavi [16], and Interior search algorithm (ISA) by Gandomi [17], in recent years.A new meta-heuristic algorithm has been proposed recently, by Kaveh and Talatahari which is called Charged System Search (CSS) [18]. The CSS algorithm is based on the Coulomb and Gauss laws from physics and the governing laws of motion from the Newtonian mechanics. This algorithm can be considered as a multi-agent approach, where each agent is a Charged Particle (CP). Each CP is considered as a charged sphere with a specified radius, having a uniform volume charge density which can insert an electric force to the other CPs.After a while the CSS algorithm was modified to Magnetic Charged System Search (MCSS) by Kaveh et al. [19]. This algorithm utilizes the governing laws for magnetic forces and includes magnetic forces in addition to electrical forces, so the movements of CPs due to the total force (Lorentz force) are determined using Newtonian mechanical laws.In this paper, an improved magnetic charged system search (IMCSS) is proposed for optimization of some truss structures as the well-known benchmark problems, in order to comparison the efficiency of the IMCSS algorithm with recently presented meta-heuristic algorithms. In this algorithm, an improved harmony search scheme (HIS) is utilized and some of the most effective parameters in the convergence rate of the algorithm are improved.In a recently presented research by the authors, optimal design of double layer barrel vaults has been proposed, in which a 384-bar barrel vault and a 693-bar braced barrel vault have been optimized via the IMCSS algorithm [20].The authors have also introduced an optimization approach (IMCSS-OAPI) for the problem of simultaneous shape-size optimization of large-scale barrel vault frames, which deals with the interface between the IMCSS as the optimization algorithm and SAP2000 as the structural analysis software through the open application programming interface (OAPI) [21]. In this work a 173-bar and a 292-bar single-layer barrel vault frame have been optimized.The present paper is organized as follows: in Section 2, the statement of the optimization problem is expressed and formulated. CSS and MCSS algorithm are reviewed in Section 3. In Section 4, the improved form of MCSS algorithm is introduced and also its discrete version is described. Section 5 contains several illustrative examples with continuous and discrete variables to determine whether the efficiency of the new algorithm could be enough, and finally in Section 6, some concluding remarks are derived.The principal objective of size optimization process is aimed at achieving the optimum values for member cross-sectional areas of structure Aiin order to minimize the structural weight W and simultaneously satisfying the constraints that the optimization problem imposes. Hence, the problem of size optimization of truss structures can be expressed as:(1)FindX=[x1,x2,x3,…,xn]tominimizeMer(X)=fpenalty(X)×W(X)subjecttoσmin<σi<σmaxi=1,2,…,nmδmin<δi<δmaxi=1,2,…,nnwhere X is the vector containing the design variables; for a discrete optimum design problem, the variables xiare selected from an allowable set of discrete values; n is the number of member groups; Mer(X) is the merit function; W(X) is the cost function, which is taken as the weight of the structure; fpenalty(X) is the penalty function which results from the violations of the constraints corresponding to the response of the structure; nm is the number of members forming the structure; nn is the number of nodes; σiand δiare the stress and nodal displacements, respectively; min and max mean the lower and upper bounds of constraints, respectively. The cost function can be expressed as:(2)W(X)=∑i=1nmρi⋅Ai⋅Liwhere ρi, Li, and Aiare the material density, length and the cross-sectional area of member i, respectively.The penalty function can be defined as:(3)fpenalty(X)=1+ε1⋅∑i=1np(ϕσ(i)k+ϕδ(i)k)ε2,where np is the number of multiple loadings. In this paper ɛ1 is taken as unity and ɛ2 is set to 1.5 in the first iterations of the search process, but gradually it is increased to 3 [22].ϕσkis the summation of stress penalties andϕδkis the summation of nodal displacement penalties for kth charged particle which mathematically expressed as:(4)ϕσ=∑i=1nmmaxσiσ¯i−1,0,(5)ϕδ=∑i=1nnmaxδiδ¯i−1,0,where σi,σ¯iare the stress and allowable stress in member i, respectively, and δi,δ¯iare the displacement of the joints and the allowable displacement, respectively.The CSS algorithm has been proposed by Kaveh and Talathari [18] for optimization of structures. This meta-heuristic optimization algorithm takes its inspiration from the physic laws governing a group of charge particles (CP). These CPs are sources of the electric fields, and each CP can exert electric force on other CPs. The movement of each CP due to the electric force can be determined using the Newtonian mechanic laws.In physics, it has been shown that when a charged particle moves, produces a magnetic field. This magnetic field can exert a magnetic force on other CPs. Thus, for considering this force in addition to electric force, the CSS algorithm is modified to MCSS algorithm by Kaveh et al. The MCSS algorithm can be summarized as follows [19]:Level 1. InitializationStep 1: Initialization. Initialize CSS algorithm parameters; the initial positions of CPs are determined randomly in the search space(6)xi,j(0)=xi,min+rand⋅(xi.max−xi,min),i=1,2,…,n.wherexi,j(0)determines the initial value of the ith variable for the jth CP; xi,min and xi,max are the minimum and the maximum allowable values for the ith variable; rand is a random number in the interval [0,1]; and n is the number of variables. The initial velocities of charged particles are set to zero(7)vi,j(0)=0,i=1,2,...,n.The magnitude of the charge is defined as follows:(8)qi=fit(i)−fitworstfitbest−fitworst,i=1,2,…,N.where fitbest and fitworst are the best and the worst fitness of all particles, respectively; fit(i) represents the fitness of the agent i; and N is the total number of CPs. The separation distance rijbetween two charged particles is calculated as:(9)rij=||Xi−Xj||||(Xi+Xj)/2−Xbest||+ε,where Xiand Xjare the positions of the ith and jth CPs, Xbest is the position of the best current CP, and ɛ is a small positive number to avoid singularities.Step 2. CP ranking. Evaluate the values of the fitness function for the CPs, compare with each other and sort them in an increasing order.Step 3. CM creation. Store CMS number of the first CPs and their related values of the objective function in the CM (based on CMS size).Level 2: SearchStep 1: Force determination.The probability of the attraction of the ith CP by the jth CP is expressed as:(10)pij=1fit(i)−fitbestfit(j)−fit(i)>randorfit(j)>fit(i),0else.where rand is a random number uniformly distributed in the range of (0,1). The resultant electrical force FE,jacting on the jth CP can be calculated as follow:(11)FE,j=qj⋅∑i,i≠jqia3rij⋅i1+qirij2i2⋅pij(Xi−Xj),i1=1,i2=0⇔rij<a,i1=0,i2=1⇔rij≥a,j=1,2,…,N.The probability of the magnetic influence (attracting or repelling) of the ith wire (CP) on the jth CP is expressed as:(12)pmij=1fit(j)>fit(i),0else.where fit(i) and fit(j) are the fitness values of the ith and jth CP, respectively. This probability determines that only a good CP can affect a bad CP by the magnetic force.The magnetic force FB,jiexerted on the jth CP due to the magnetic field produced by the ith virtual wire (ith CP) can be expressed as:(13)FB,j=qj⋅∑i,i≠jIiR2rij⋅z1+Iirij⋅z2⋅pmij(Xi−Xj),z1=1,z2=0⇔rij<R,z1=0,z2=1⇔rij≥R,j=1,2,…,N.where qiis the charge of the ith CP, R is the radius of the virtual wires, Iiis the average electric current in each wire, and pmijis the probability of the magnetic influence (attracting or repelling) of the ith wire (CP) on the jth CP.The average electric current in each wire Iican be expressed as:(14)(Iavg)ik=sign(dfi,k)×dfi,k−dfmin,kdfmax,k−dfmin,k,(15)dfi,k=fitk(i)−fitk−1(i),where dfi,kis the variation of the objective function of the ith CP in the kth movement (iteration). Here, fitk(i) and fitk−1(i) are the values of the objective function of the ith CP at the start of the kth and k−1th iterations, respectively. dfmax,kand dfmin,k will be the maximum and minimum values among these absolute values of df, considering that absolute values of dfi,kfor all of the current CPs.A modification can be considered to avoid trapping in part of search space (Local optima) because of attractive electrical force in CSS algorithm(16)F=pr×FE+FB,where pris the probability that an electrical force is a repelling force which is defined as(17)pr=1rand>0.1⋅1−iteritermax,−1else.where rand is a random number uniformly distributed in the range of (0,1), iter is the current number of iterations, and itermax is the maximum number of iterations.Step 2: Finding new solution. Move each CP to the new position and calculate the new velocity as follows:(18)Xj,new=randj1⋅ka⋅Fjmj⋅Δt2+randj2⋅kv⋅Vj,old⋅Δt+Xj,old,(19)Vj,new=Xj,new−Xj,oldΔt,where randj1and randj2are two random numbers uniformly distributed in the range of (0,1). Here, mjis the mass of the jth CP which is equal to qj. Δt is the time step and is set to unity (It could be utilize a continuous concept of time in every iteration as another modification for MCSS algorithm). kais the acceleration coefficient; kvis the velocity coefficient to control the influence of the previous velocity. In this paper kaand kvare considered as:(20)ka=c1⋅1+iteritermax,kv=c2⋅1−iteritermax,where c1and c2are two constants to control the exploitation and exploration of the algorithm, respectively.Step 3. Modification of CP position. If each CP violates from its allowable boundary, its position is corrected using harmony search-based approach. In this paper the process of position correction has been improved via IMCSS algorithm which expressed in Section 4.Step 4: CP ranking. Evaluate and compare the values of the fitness function for the new CPs, and sort them in an increasing order.Step 5: CM updating. If some new CP vectors are better than the worst ones in the CM (means CPs with better merit function), include the better vectors in the CM and exclude the worst ones from the CM.Level 3: Controlling the terminating criterion.Repeat the search level steps until a terminating criterion is satisfied. The terminating criterion is considered to be the number of iterations.In the process of position correction of CPs using harmony search-based approach (Step 3), The CMCR and PAR parameters help the algorithm to find globally and locally improved solutions, respectively. PAR and bw in HS scheme are very important parameters in fine-tuning of optimized solution vectors, and can be potentially useful in adjusting convergence rate of the algorithm to optimal solution [23]. The traditional HS scheme which is utilized in MCSS algorithm, uses fixed value for both PAR and bw. Small PAR values with large bw values can led to poor performance of the algorithm and considerable increase in iterations needed to find optimum solution. Although small bw values in final iterations increase the fine-tuning of solution vectors, but in the first iterations bw must take a bigger value to enforce the algorithm to increase the diversity of solution vectors. Furthermore large PAR values with small bw values usually led to the improvement of best solutions in final iterations which algorithm converged to optimal solution vector. To improve the performance of the HS scheme and eliminate the drawbacks lies with fixed values of PAR and bw, IMCSS algorithm uses IHS scheme with varied PAR and bw in correction step (Step 3, Level 2). PAR and bw change dynamically with iteration number as shown in Fig. 1and expressed as follow [23]:(21)PAR(iter)=PARmin+(PARmax−PARmin)itermax⋅iterand(22)bw(iter)=bwmaxexp(c⋅iter),(23)c=ln(bwmin/bwmax)itermax,where bw(iter) is the bandwidth for each iteration, bwmin and bwmax are the minimum and maximum bandwidth, respectively. In this paper PARmin and PARmax are set to 0.3 and 0.99, respectively.IMCSS algorithm is also applied to optimal design problem with discrete variables. One way to solve discrete problems using a continuous algorithm is to utilize a rounding function which changes the magnitude of a result to the nearest discrete value [24], as follow(24)Xj,new=Fixrandj1⋅ka⋅Fjmj⋅Δt2+randj2⋅kv⋅Vj,old⋅Δt+Xj,old,where Fix(X) is a function which rounds each elements of vector X to the nearest permissible discrete value. Using this position updating formula, the agents will be permitted to select discrete values.In this section, common truss optimization examples as benchmark problems are used for optimization using the proposed algorithm. This algorithm is applied to problem with both continuous and discrete variables. The final results are compared to the solutions of other methods to demonstrate the efficiency of the present approach. The discrete variables are selected from AISC code shown in Table 1[25].In the proposed algorithm, for all of examples a population of 25 CPs is used and the value of CMCR is set to 0.95.The 10-bar truss structure is a common problem in the field of structural optimization which is used a lot, to verify the efficiency of a novel proposed optimization algorithm.There are 10 design variables in this example and a set of pseudo variables ranging from 0.1 to 35.0in2 (0.6452cm2 to 225.806cm2).In this problem two cases are considered:Case 1: P>P1=100kips (444.8kN) and P2=0,Case 2: P1=150kips (667.2kN) and P2=50kips (222.4kN).Fig. 2shows the geometry and support conditions for this two dimensional, cantilevered truss with loading condition. The material density is 0.1lb/in3 (2767.990kg/m3) and the modulus of elasticity is 10,000 ksi (68,950MPa). The members are subjected to the stress limits of ±25 ksi (172.375MPa) and all nodes in both vertical and horizontal directions are subjected to the displacement limits of ±2.0 in (5.08cm).For MCSS and IMCSS algorithms a comparison of the convergence history of both cases is given in Fig. 3. Tables 2 and 3are also provided for comparison with the results of previous studies.As seen in the results, for both cases the PSO and PSOPC algorithms obtain the best solutions after 3000 iterations (150,000 analyses), the HS algorithm after 20,000 analyses. The HPSACO algorithm finds its best solution after 10,650 and 9925 analyses, for Case 1 and Case 2, respectively.The MCSS and IMCSS algorithms achieve its best solutions after 355 iterations (8875 analyses) and 339 iterations (8475 analyses), respectively. For Case 1, the best weights of GA, HS, PSO, PSOPC, HPSO, HPSACO and MCSS algorithms are 5076.31, 5057.88, 5529.88, 5061, 5060.92, 5056.56 and 5086.9lb, respectively, while for IMCSS is 5064.6lb. For Case 2, the best weight of IMCSS is 4679.15lb, but for MCSS, HPSACO, HPSO, PSOPC, PSO and HS is 4686.47, 4675.78, 4677.7, 4679.47 and 4668.81lb. As seen in Tables 2 and 3, however the best weights obtained from IMCSS in both cases are a little bigger than the HPSACO, but IMCSS has no penalty values rather than HPSACO, and therefore has a lower merit function than HPSACO.The 52-bar planar truss structure shown in Fig. 4has been analyzed by Wu and Chow [28], Lee and Geem [27] and Li et al. [29].The members of this structure are divided into 12 groups:A1–A4, (2) A5–A10, (3) A11–A13, (4) A14–A17, (5) A18–A23, (6) A24–A26,(7) A27–A30, (8) A31–A36, (9) A37–A39, (10) A40–A43, (11) A44–A49, (12) A50–A52.The material density is 7860.0kg/m3 and the modulus of elasticity is 2.07×105MPa. The members are subjected to stress limitations of ±180MPa. As seen in Fig. 4, loads of Px=100kN and Py=200kN, are applied to the structure.Table 4and Fig. 5are provided for the comparison of the optimal design results with the previous studies and the convergence rates of 52-bar planar truss structure for MCSS and IMCSS algorithmsAs it can be seen in the Table 4 and Fig. 5, the best weight of MCSS and IMCSS algorithms are 1904.05 and 1902.61lb, respectively, while for DHPSACO which has the best results in previous studies, is 1904.83lb.The MCSS and IMCSS algorithms find the best solutions after 4225 and 4075 analyses respectively however the DHPSACO reach its best solution in 5300 analyses. From Table 4, it can be concluded that the IMCSS algorithms achieve good optimal results than previous methods like MCSS, PSO, PSOPC, HPSO and DHPSACO algorithms.In the 72-bar spatial truss structure which is shown in Fig. 6, the material density is 0.1lb/in3 (2767.990kg/m3) and the modulus of elasticity is 10,000 ksi (68,950MPa). The nodes are subjected to the displacement limits of ±0.25 in (±0.635cm) and the members are subjected to the stress limits of ±25ksi (±172.375MPa).The 72 structural members of this spatial truss are categorized into 16 groups using symmetry:A1–A4, (2) A5–A12, (3) A13–A16, (4) A17–A18, (5) A19–A22, (6) A23–A30, (7) A31–A34, (8) A35–A36, (9) A37–A40, (10) A41–A48, (11) A49–A52, (12) A53–A54, (13) A55–A58, (14) A59–A66 (15), A67–A70, and (16) A71–A72.Two optimization cases are considered as follows:Case 1: The discrete variables are selected from the set D={0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2} (in2) or {0.65, 1.29, 1.94, 2.58, 3.23, 3.87, 4.52, 5.16, 5.81, 6.45, 7.10, 7.74, 8.39, 9.03, 9.68, 10.32, 10.97, 12.26, 12.90, 13.55, 14.19, 14.84, 15.48, 16.13, 16.77, 17.42, 18.06, 18.71, 19.36, 20.00, 20.65} (cm2).Case 2: The discrete variables are selected from AISC code in Table 1. The values and directions of the two load cases applied to the 72-bar spatial truss are listed in Table 5.Tables 6 and 7are provided for comparison the results of IMCSS with the results of the previous studies for both cases. The Convergence history for MCSS, IMCSS algorithms is shown in Fig. 7.In Case 1, the best weight of the IMCSS and DHPSACO algorithm is equal to 385.54lb (174.88kg), while it is 389.49lb 388.94lb, 387.94lb, 400.66lb for the MCSS, HPSO, HS, and GA, respectively. The PSO and PSOPC algorithms, do not get optimal results when the maximum number of iterations is reached. The IMCSS algorithm gets its best solution after 145 iterations (3625 analyses) while it takes 216 iterations (5400 analyses) and 213 iterations (5330 analyses) for MCSS and DHPSACO, respectively.In Case 2, the best weight obtained from IMCSS is 389.6lb, but it is 393.13, 389.87, 392.84, 393.06 and 393.38lb from MCSS, CS, ICA, CSS and HPSACO algorithms, respectively. IMCSS algorithm finds the best solutions after 173 iterations (4325 analyses), while MCSS, CS, ICA, CSS and HPSACO algorithms need respectively 4775, 4840, 4500, 7000 and 5330 analyses to find their best solutions.The 120-bar dome truss was first analyzed by Soh and Yang [34] to obtain the optimal sizing and configuration variables in the process of structural configuration optimization, but for this study only sizing variables are considered to minimize the structural weight, similar to Lee and Geem [27] and Keleşoğlu and Ülker [35].The geometry of this structure is shown in Fig. 8. The modulus of elasticity is 30,450ksi (210,000MPa) and the material density is 0.288lb/in3 (7971.81kg/m3). The yield stress of steel is taken as 58.0ksi (400MPa).The allowable tensile and compressive stresses are used according to the AISC-ASD (1989) [25] code, as follows:(25)σi+=0.6Fyforσi≥0σi−forσi<0whereσi−is calculated according to the slenderness ratio(26)σi−=(1−(λi2/2Cc2))Fy(5/3)+(3λi/8Cc)−(λi3/8Cc3)forλi<Cc12π2E23λi2forλi≥Ccwhere E is the modulus of elasticity, Fyis the yield stress of steel, Ccis the slenderness ratio (λi) dividing the elastic and inelastic buckling regions (Cc=2π2E/Fy), λi is the slenderness ratio (λi=kLi/ri), k is the effective length factor, Liis the member length and riis the radius of gyration. The radius of gyration (ri) can be expressed in terms of cross-sectional areas, i.e.,ri=aAib[36]. Here, a and b are the constants depending on the types of sections adopted for the members such as pipes, angles, and tees. In this example, pipe sections (a=0.4993 and b=0.6777) were adopted for bars.All members of the dome are categorized into 7 groups, as shown in Fig. 8. The dome is considered to be subjected to vertical loading at all the unsupported joints. These loads were taken as −13.49kips (60kN) at node 1, −6.744kips (30kN) at nodes 2–14, and −2.248kips (10kN) at the rest of the nodes. The minimum cross-sectional area of all members is 0.775in2 (2cm2).In this example, two cases of constraints are considered:Case 1: With stress constraints and no displacement constraintsCase 2: With stress constraints and displacement limitations of ±0.1969 in (5mm) imposed on all of the nodes in x- and y-directions.For two cases, the maximum cross-sectional area is set to 5.0in2 (32.26cm2). Fig. 9shows the convergence history for both cases and Table 8gives the best solution vectors and weights for all cases.In Case 1, the best weight of MCSS and IMCSS is 19607.39lb and 19476.92lb, respectively, while for the Ray, HPSACO and PSOPC are 19476.19lb, 19491.30lb and 19618.7lb. The MCSS and IMCSS find their best solutions respectively in 314 iterations (7850 analyses) and 299 iterations (7475 analyses), but Ray and HPSACO algorithms take respectively 19,950 and 10,025 analyses to reach their best solutions.In Case 2, the MCSS and IMCSS algorithms need 386 iterations (9650 analyses) and 324 iterations (8100 analyses) to find their best solutions, respectively, while for Ray and HPSACO algorithms, 19,950 and 10,075 analyses is required. The best weights obtained from MCSS and IMCSS algorithms are 19,928 and 19,796.71lb, respectively, but from the Ray and HPSACO are 20,071.9 and 20,078lb, respectively.As seen in the results of both cases, the IMCSS algorithm finds a better result in a lower number of analyses than previous studies.

@&#CONCLUSIONS@&#
