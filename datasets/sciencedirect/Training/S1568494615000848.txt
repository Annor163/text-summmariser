@&#MAIN-TITLE@&#
Fuzzy optimal control using generalized Takagi–Sugeno model for multivariable nonlinear systems

@&#HIGHLIGHTS@&#
Several algorithms of FLC-LQR are developed to obtain enhanced performance of nonlinear unstable multivariable systems.The multivariable nonlinear system is represented by a generalized (T–S) model.Good response and zero steady state error in front of disturbances and modeling errors.A comparison is carried out with other algorithms to show the superiority of the proposed ones.A two-link robot is chosen to evaluate the validity of the proposed algorithms.

@&#KEYPHRASES@&#
Multivariable nonlinear systems,Linear quadratic regulator,Takagi–Sugeno model,

@&#ABSTRACT@&#
In this work, the main objective is to obtain enhanced performance of nonlinear multivariable systems. Several algorithms of Fuzzy Logic Controller based Linear Quadratic Regulator (FLC-LQR) are presented. The multivariable nonlinear system is represented by a generalized Takagi–Sugeno (T–S) model developed by the authors in previous works. This model has been improved using the well known weighting parameters approach to optimize local and global approximation. In comparison with existent works, the proposed controller is based on the calculation of the control action in each point of the state space according to the dynamic properties of the nonlinear system at that point. This control methodology offers a robust, well damped dynamic response and zero steady state error when the system is subjected to disturbances and modeling errors. A two-link robot system is chosen to evaluate the robustness of the proposed controller algorithms.

@&#INTRODUCTION@&#
It is well known that a robust effective controller requires an accurate and efficient model. Fuzzy controllers are basically nonlinear, and effective enough to provide the desired non-linear control actions by carefully adjusting their parameters. In [28], an interesting method is developed to identify nonlinear systems using input–output data. Nonlinear control systems based on the T–S fuzzy model [28] have attracted quite attention during the last twenty years (e.g., see [6,7,12,15,21,22]). It provides a powerful solution for development of function approximation, systematic techniques to stability analysis and controller design of FLC systems in view of fruitful conventional control theory.In [2–4,16], new and efficient approaches are presented to improve the local and global estimation of T–S model. The aim is obtaining high function approximation accuracy and fast convergence. The main problem is that T–S identification method cannot be applied when the membership functions (MFs) are overlapped by pairs. This restricts the use of the T–S method because this type of MFs has been widely used during the last two decades. These approaches are based on a simple and less computational method, based on weighting of parameters.In [11] a fuzzy linear control design method is introduced for nonlinear systems with optimal H∞ robustness performance. First, the T–S fuzzy linear model is used to approximate a nonlinear system. Then, a fuzzy controller is developed to stabilize the nonlinear system, and at the same time the effect of external disturbance on control performance is reduced to a minimum level. Linear matrix inequality (LMI) techniques are employed to solve this robust fuzzy control problem. In the case that state variables are unavailable, a fuzzy observer-based H∞ control is also proposed to achieve a robust optimization design for nonlinear systems.In [13], a strategy for the optimal tuning of a fuzzy controller in a networked control system using an offline simulated annealing approach is presented. The optimal tuning of the fuzzy controller using a maximum known delay is based on the integral time absolute error (ITAE) performance index. The goal is to assess how well the system follows set-point changes using the ITAE criterion. In order to improve the efficiency of high-performance drilling processes while preserving tool life, the study focuses on the design and implementation of an optimal fuzzy-control system for drilling force. Experimental tests corroborate the excellent transient response and the minimum overshoot predicted by the simulation results. Thus, the optimal fuzzy control system reduces the influence of the increase in cutting force that occurs at larger drill depths, eliminating the risk of rapid drill wear and catastrophic drill breakage.An Optimal Gain Scheduling Controller (GSC) for a variable-pitch Variable-Speed Wind Energy Conversion System (VS-WECS) is presented in [5]. A set of Linear Quadratic Gaussian (LQG) controllers are optimally designed using Differential Evolution (DE) optimization algorithm. These controllers are then used to form a GSC, aiming to regulate the pitch angle and generator electromagnetic torque, and thus, controlling the VS-WECS output electrical power as well as the shaft speed in the above-rated wind speeds. The designed controller for this multi-input multi-output (MIMO) system also reduces destructive mechanical loads on the rotating parts of the wind turbine, while ensuring fast and accurate regulation of the system's variables within their operational constraints.Recently, much attention has been devoted to FLC for robotic manipulators. A good survey on FLC for robotic manipulators can be found in [26] and references cited therein. In [20], two FLC schemes for a class of uncertain continuous MIMO nonlinear dynamical systems were derived. Satisfactory performances were achieved by applying them to robotic manipulators.In [19], a flexible-link robot arm control using fuzzy logic, and a singular perturbation approach is addressed. A singular perturbation approach is introduced to derive the slow and fast subsystems and thus reduces the effect of spillover. Consequently, a two-time scale FLC is applied for such systems. The fast-subsystem controller damps out the vibration of the flexible structure by the optimal control method. Thus, the slow-subsystem FLC dominates the tracking of the trajectory. The stability was guaranteed by adding a boundary-layer correction based on singular perturbations.In [14], T–S fuzzy model of a multivariable nonlinear system in state space form is obtained using the developed fuzzy modeling algorithm. The system state space equation is expressed as the fuzzy summation of the state variables, disturbance and control input. The genetic algorithm (GA) with a new encoding method is applied to search for the optimal model parameters. The proposed hybrid intelligence technique can evolve the fuzzy rule structure so that the obtained fuzzy model has the simplest structure without decreasing the modeling accuracy.In [17], a fuzzy control of a class of multivariable nonlinear systems subject to parameter uncertainties is presented. The nonlinear plant is an nth order nonlinear system with n inputs. If the input matrix B inside the fuzzy plant model is invertible, a FLC can be designed such that the states of the closed-loop system will follow those of a user-defined stable reference model despite the presence of parameter uncertainties.In [27], robotic manipulator systems with structured uncertainty and/or unstructured uncertainty are separated as two subsystems: nominal system with precise dynamical knowledge and uncertain one with unknown knowledge. The FLC acts as compensator for CTC. Parameters updating laws of the FLC are derived using Lyapunov stability theorem.Tsai et al. [30] propose a robust multilayer fuzzy controller for the model following control of robot manipulators with torque disturbance and measurement noise.FLC have also been extensively adopted in adaptive control of robot manipulators [1,18,23,24,30,29].In [3], the authors developed a FLC-LQR capable of obtaining a smooth and rapid dynamic response. The objective was to find the control action u(k) to transfer the system from any initial state x(k0) to some final state xr=0 minimizing a quadratic performance index. In this work, we have improved the work in [3] by finding the control action u(k) to transfer the system from any initial state x(k0) to a non zero final state xr. Moreover, we have developed a new FLC-LQR to obtain a zero steady state error in the presence of disturbances and modeling errors. Finally, to examine the robustness and validity of the proposed controller, it has been applied for multivariable robotic nonlinear system while in [3] a monovariable system was used.Moreover, in the proposed control algorithms in this work, an optimal FLC-LQR controller, based on the local properties of the system, is designed for the whole nonlinear system. In several other works, the controller is represented as a T–S model where in each control rule, a local controller is designed for each system rule described by T–S. This approach is well known as Parallel Distributed Compensation (PDC). In [2], a PDC approach is designed using the standard optimal LQR. There are many differences between both algorithms. The main advantage of PDC is that it is easier to design and its execution time is faster than the proposed controller. However, the design procedure in the proposed controller uses the nonlinear properties of the system in each point of the state space, while the PDC rules deal only with their corresponding system rules without paying attention to crossed ones which reduces its accuracy in comparison with the proposed one.The rest of the paper is organized as follows. In Section 2, the estimation of fuzzy T–S model is described. The design of the proposed FLC-LQR is developed in Section 3. Section 4 entails an example of a two link robot as a nonlinear multivariable system to evaluate the robustness, effectiveness of the proposed controller. The conclusions are included in Section 5.An interesting identification method of T–S fuzzy models is presented in [28]. The idea is based on estimating the nonlinear system parameters minimizing a quadratic performance index. In [3], the authors proposed the following identification method to improve T–S identification method.The method is based on the identification of functions of the form:f:Rn⟶Ry=f(x1,x2,…,xn)which can be modeled by the following IF-THEN rules for an nth order system:(1)S(i1…in):Ifz1isM1i1andz2isM2i2and…zmisMmimthenyˆ=p0(i1…im)+p1(i1…im)x1+p2(i1…im)x2+⋯+pn(i1…im)xnwhere{z1, z2, …, zm} is a subset of measurable variables of {x1, x2, …, xn}The fuzzy estimation of the output becomes:(2)yˆ=∑i1=1r1…∑im=1rmβ(i1…im)(x)[p0(i1…im)+p1(i1…im)x1+⋯+pn(i1…im)xn]where(3)βk(i1…im)(x)=μ1i1(z1)μ2i2(z2)…μmim(zm)∑j1=1r1…∑jm=1rmμ1j1(z1)μ2j2(z2)…μmjm(zm)beingμjij(zj)the MFs that correspond to the fuzzy setMjij.Let {x1k, x2k, …, xnk, yk} be a set of s input/output system samples. Firstly, let us suppose that we have a first affine linear estimation model:(4)y˜=p00+p10x1+p20x2+…pn0xnIn other words, we have first estimation of the following parameters:P0=[p00p10p20…pn0]tIn order to obtain such an estimation, the classical least square method can be applied to the data set of the system. This first approximation can be utilized as reference parameters for all the subsystems. Then, the parameters’ vector of the fuzzy model can be obtained minimizing the following performance index:(5)J=∑k=1s(yk−yˆk)2+γ2∑i1=1r1…∑im=1rm∑j=0n(pj0−pj(i1…im))2=Y−Xp2+γ2p0−p2=Yγp0−XγIp2=Ya−Xap2where(6)Y=y1y2…ystp=p0(1…1)p1(1…1)p2(1…1)…pn(1…1)…p0(r1…rm)…pn(r1…rm)tX=β1(1…1)β1(1…1)x11…β1(1…1)xn1…β1(r1…rm)…β1(r1…rm)xn1βs1…1βs(1…1)x1s…βs(1…1)xns…βs(r1…rm)…βs(r1…rm)xnsandp0=[P0P0…P0]t︸r1.r2…rmtimesIn this case, the factor γ represents the degree of confidence of the initially estimated parameters [2,3,16]. It should be noted that the matrix Xais of full rank. This in turn solves the problem where the original T–S [28] identification method fails. Thus, the vector P can be computed as:(7)p=(XatXa)−1XatYaA detailed proof of this generalized version of T–S estimation method for vectorial functions is found in [3]Several proposals based upon various objective functions and optimal control actions are developed. Let us suppose a dynamic system whose discrete model is represented as follows:(8)x(k+1)=f(x(k),u(k))x∈Rnu∈RpApplying the proposed estimation method mentioned above to a set of points, the T–S model can be adjusted as follows:(9)S(i1…im):Ifz1(k)isM1i1andz2(k)isM2i2and…zm(k)isMmimthenx(k+1)=a0(i1…im)+A(i1…im)x(k)+B(i1…im)u(k)a0(i1…im)∈RnA(i1…im)∈Rn×nB(i1…im)∈Rn×pThe fuzzy system is described as:(10)x(k+1)=∑i1=1r1…∑im=1rmβ(i1…im)(x)[a0(i1…im)+A(i1…im)x(k)+B(i1…im)u(k)]which can be rewritten as follows:(11)x(k+1)=a0(x(k))+A(x(k))x(k)+B(x(k))u(k)where the matrices are determined by the fuzzy system as follows:(12)S(i1…⋯im):Ifz1(k)isM1i1andz2(k)isM2i2and…zm(k)isMmimthena0=a0(i1…im)andA=A(i1…im)andB=B(i1…im)In order to calculate the rest of control coefficients, any control design methodology through state feedback control can be applied. However, these methodologies can lead to systems where the control action exceeds the allowed environment limits. Therefore, optimal selection of closed loop poles will lead to a trade-off between speed of dynamic response and control effort.The objective is to find the control action u(k) to transfer the system from any initial state to some final state xrin an infinite time. The classical LQR formulation includes the minimization of the following objective function:(13)J=∑k=k0∞(xr−x(k))tQ(xr−x(k)+ut(k)Ru(k)The solution is well known [8–10,25,31] when the system is a linear one. However, it is not easy enough for the nonlinear system under study obtained before (see Eq. (11)). In the case of such nonlinear systems, it is complicated to propose the minimization of any objective function in several steps. In order to solve this problem, we suggest to minimize the cost of each step instead of the global cost. The solution will be a suboptimal one but with a great advantage due to its easy calculation. It is suggested in each step to apply the control action to minimize a certain objective function. Together with the proposed estimation method, the well known LQR method might be an appropriate choice. With this method we might not guarantee the stability, which needs to be analyzed a posteriori, gaining in return a balance between static and dynamic behavior of the system with admissible control actions.In this work, we propose an effective method to nonlinear optimal control based on fuzzy control. The optimal fuzzy controller is designed by solving a minimization problem that minimizes a given quadratic performance function. LQR is used to determine best values for parameters in fuzzy control rules in which the robustness is inherent in the LQR thereby robustness in fuzzy control can be improved. With the aid of LQR, an effective design method of fuzzy control is provided to ensure rapid, accurate tracking control and robustness when the system is subjected to disturbances.Several algorithms are proposed in this work. A comparison has been handled among them to analyze the effectiveness of each one.In order to achieve permissible control actions, without exceeding the allowed environment limits, they must be weighted in the objective function. In this work we expand the results obtained in [3] to a non zero final state. In a first attempt, a minimization in each k step of the following objective function is done:(14)J=(xr−x(k+1))tQ(xr−x(k+1))+ut(k)Ru(k)Q is a symmetric positive semi-definite matrix which is called weighting matrix. On the other hand, R is a symmetric positive definite weighting matrix. Optimal selection of these matrices determines the dynamic speed of the controller as well as amplitudes of state variables and control signals. For example if Q is selected small while R is selected large, more stability will be attained with small control efforts.As mentioned before, in order to solve this problem, it is proposed to minimize the cost of each step instead of the global cost. Thus, the control action will be applied in each step.Substituting Eq. (11) in Eq. (14), we obtain:(15)J=(xr−[a0(x(k))+A(x(k))x(k)+B(x(k))u(k)]tQ[(xr−a0(x(k))+A(x(k))x(k)+B(x(k))u(k)]+ut(k)Ru(k)Applying the gradient and equating it to zero to minimize the performance index:(16)∇J=−2(xr−(a0((k)+A(k)x(k)+B(k)u(k)))tQB(k)+2ut(k)R=0−Bt(k)Q(xr−(a0(k)+A(k)x(k)+B(k)u(k)))+Ru(k)=0−Bt(k)Q(xr−(a0(k)+A(k)x(k)))+(Bt(k)QB(k)+R)u(k)=0Then, the control action is computed as follows(17)u(k)=(Bt(k)QB(k)+R)−1Bt(k)Q(xr−(a0(k)+A(k)x(k)))In this case, the following steady state error will be approached:xs=limk→∞x(k),us=limk→∞u(k)which minimizes(18)Js=(xr−(a0s+Asxs+Bsus))tQ(xr−(a0s+Asxs+Bsus))+ustRusif there are no modeling errors and disturbances, it will be fulfilled that:xs=a0s+Asxs+Bsus(19)Js=(xr−xs)tQ(xr−xs)+ustRusSince, in general, the control action will not be zero, it will be accomplished that:xr≠xswhich means that there is a steady state error.In order to eliminate this error, the following control action is considered:u(k)=u(k−1)+Δu(k)And modifying the performance index as follows:(20)J=(xr−x(k+1))tQ(xr−x(k+1))+Δut(k)RΔu(k)Calculating the incremental control action:(21)Δu(k)=(Bt(k)QB(k)+R)−1Bt(k)Q(xr−(a0(k)+A(k)x(k)+B(k)u(k−1)))In this case, the following objective function is minimized in steady state as follows:(22)Js=(xr−[a0s+Asxs+Bsus))tQ(xr−[a0s+Asxs+Bsus))+ΔustRΔusIn steady state, the incremental control action is zero, i.e., Δus=0(23)Js=(xr−(a0s+Asxs+Bsus))tQ(xr−(a0s+Asxs+Bsus))whose minimum is obtained when:xr=a0s+Asxs+BsusIf there is no modeling errors and disturbances, it will be met thatxs=a0s+Asxs+Bsus=xrTherefore, a zero steady state error is achieved. However, if there are disturbances or modeling errors (em), Eq. (11) can be rewritten as follows:(24)x(k+1)=a0(x(k))+A(x(k))x(k)+B(x(k))u(k)+em(k)Thus, it will be fulfilled that:xs=a0s+Asxs+Bsus+emsxr=a0s+Asxs+Bsus=xs−emswhich will introduce steady state errors.This algorithm is suggested to deal with disturbances and modeling errors. Recalling Eq. (9) where it was supposed that the state variables are accessible. The objective is approaching in steady state the reference signal of the output variables yr, which is equivalent to the reference signal xrof state variables with zero steady state errors. In the instant k, it is fulfilled that:(25)x(k+1)=a0(k)+A(k)x(k)+B(k)u(k)+em(k)y(k)=Cx(k)where the output vectory∈Rq. The system matrices are given in Eq. (12). In order to guarantee zero steady state error, the most simple solution is to add an integral action to the error signal. If the reference vector is yr, we define a new variablew∈Rq:(26)w(k)=w(k−1)+yr−y(k),w(0)=0which is equivalent to add new m states:(27)w(k+1)=w(k)+yr−Cx(k+1)=w(k)+yr−C(a0(k)+A(k)x(k)+B(k)u(k)+em(k))This would lead to the following extended state equation with a manipulable input and only other measurable one:(28)w(k+1)x(k+1)=−Ca0(k)a0(k)+I−CA(k)0A(k)w(k)x(k)+−CB(k)B(k)u(k)+I0yr(k)+−C0em(k)y(k)=0Cw(k)x(k)This means that we have new extended statev(k)which will accomplish:(29)v(k+1)=v0(k)+Av(k)v(k)+Bu(k)u(k)+By(k)yr(k)+Be(k)em(k)y(k)=Caxa(k)Av(k)∈R(n+q)×(n+q),Bu∈R(n+q)×pBy∈R(n+q)×q,Be∈R(n+q)×n,Ca∈Rq×(n+q)It should be pointed out that if with the proposed control action, the system is stable, then by having an integral action, a zero steady state error can be guaranteed. It can be seen that in steady state, Eq. (26) becomes:ws=ws+yr−ys⇒yr=ysThis means that a zero state error is achieved whether modeling errors and disturbances exist or not. In this case, we propose the following objective function:(30)J=(vr−v(k+1))tQ(vr−v(k+1))+ut(k)Ru(k)whereQ∈R(n+q)×(n+q)andR∈R(p×p)are symmetric positive definite matrices andvris the reference vector for this new state which can be considered to be:vr=0xrsubstituting Eq. (29) in Eq. (30) without taking into account the modeling errors em(k) which are unknown:(31)J=(vr−v0(k)−Av(k)v(k)−Bu(k)u(k)−By(k)yr)tQ(vr−v0(k)−Av(k)v(k)−Bu(k)u(k)−By(k)yr)+ut(k)Ru(k)Applying the gradient and equating it to zero to minimize the performance index:∇J=−2(vr−v0(k)−Av(k)v(k)−Bu(k)u(k)−By(k)yr)tQBu(k)+2ut(k)R=0−But(k)Q(vr−v0(k)−Av(k)v(k)−Bu(k)u(k)−By(k)yr)+Ru(k)=0−But(k)Q(vr−v0(k)−Av(k)v(k)−By(k)yr)+(But(k)QBu(k)+R)u(k)=0(32)u(k)=−(But(k)QBu(k)+R)−1But(k)Q(vr−v0(k)−Av(k)v(k)−By(k)yr)Let us consider the physical model of a two-link robot (see Fig. 1), with each joint equipped with a motor for providing input torque, an encoder for measuring joint position and a tachometer for measuring joint velocity. The objective of the control design is to make the joint positions θ1 and θ2 follow the desired positions θd1(t) and θd2(t), which are specified by the motion planning system of the robot. Such tracking control problems arise when a robot hand is required to move along a specified path, e.g. to draw circles. Let us suppose that θ1 is the angle measured from the stable equilibrium position (inferior vertical) and θ2 is the angle from the prolongation of the main link to the second one.The control of this system is a widely used performance measure of a controller, since this system is multivariable, and highly nonlinear.Using the well-known Lagrangian equations in classical dynamics, one can easily show that the dynamic equations of the robot is:(33)H11H12H21H22θ¨1θ¨2+−hθ˙2+β1−hθ˙1−hθ˙2hθ˙1β2θ˙1θ˙2+g1g2=τ1τ2with θ=[θ1θ2]tbeing the two joint angles, τ=[τ1τ2] being the joint inputs andH11=m1lc12+I1+m2(l12+lc22+2l1lc2cosθ2)+I2H12=m2l1lc2cosθ2+m2lc22+I2H21=H12H22=m2lc22+I2h=m2l1lc2sinθ2g1=m1lc1gsinθ1+m2g(lc2sin(θ1+θ2)+l1sinθ1)g2=m2lc2gsin(θ1+θ2)m1=2,l1=1,lc1=0.5,I1=0.25,β1=0.05m2=1.5,l2=1,lc2=0.75,I2=0.12,β2=0.05 Forθ1=θ1˙=θ2=θ2˙=0it verifies that,τ10=g10=0,τ20=g20=0In order to model T–S system, we should take into account that the states are:x=θ1θ1˙θ2θ2˙tIt should be noted that in our nonlinear model, the dependence of the pairs τ1, τ2 is linear so the T–S rules do not depend on these variables.In discrete case, the system states are:x(k)=θ1(kT)θ1˙(kT)θ2(kT)θ2˙(kT)tIn order to control the system, a discrete controller is proposed with a sampling time of 0.1s. It is supposed that the input is applied using a zero order holding device.u(t)=τ1(t)τ2(t)t=u(k)kT<t<(k+1)TThe work space isθ1∈[0,π],θ˙1∈[−1,1],θ2∈[−π/2,π/2],θ˙2∈[−1,1]. Let us choose 5, 3, 5 and 3 triangular MFs respectively.S(i1…in):Ifx1isM1i1and…x4isM4i4thenx(k+1)=a10(i1i2i3i4)a20(i1i2i3i4)a30(i1i2i3i4)a40(i1i2i3i4)+a11(i1i2i3i4)a12(i1i2i3i4)a13(i1i2i3i4)a14(i1i2i3i4)a21(i1i2i3i4)a22(i1i2i3i4)a23(i1i2i3i4)a24(i1i2i3i4)a31(i1i2i3i4)a32(i1i2i3i4)a33(i1i2i3i4)a34(i1i2i3i4)a41(i1i2i3i4)a42(i1i2i3i4)a43(i1i2i3i4)a44(i1i2i3i4)x+b11(i1i2i3i4)b12(i1i2i3i4)b21(i1i2i3i4)b22(i1i2i3i4)b31(i1i2i3i4)b32(i1i2i3i4)b41(i1i2i3i4)b42(i1i2i3i4)u(k)If we apply the methodology described in [3], we obtain:S1111:Ifx1isM1i1and…x4isM4i1thenx1(k+1)=0.0000+0.9999x1(k)+0.0099x2(k)+0.0001x3(k)−0.0001x4(k)+0.0000u1(k)−0.0000u2(k)x2(k+1)=0.0017−0.0183x1(k)+0.9795x2(k)+0.0142x3(k)−0.0139x4(k)+0.0007u1(k)−0.0004u2(k)x3(k+1)=0.0001+0.0001x1(k)+0.0001x2(k)+0.9997x3(k)+0.0101x4(k)−0.0000u1(k)+0.0000u2(k)x4(k+1)=0.0245+0.0162x1(k)+0.0140x4(k)−0.0619x3(k)+1.112x4(k)−0.0001u1(k)+0.0016u2(k)⋮S1112:Ifx1isM1i1and…x4isM4i2thenx1(k+1)=0.0004+0.9999x1(k)+0.0097x2(k)+0.0001x3(k)+0.0001x4(k)+0.0000u1(k)−0.0000u2(k)x2(k+1)=0.0710−0.0101x1(k)+0.9390x2(k)+0.0169x3(k)+0.0176x4(k)+0.0007u1(k)−0.0003u2(k)x3(k+1)=−0.0003−0.0002x1(k)−0.0000x2(k)+1.0000x3(k)+0.0097x4(k)−0.0000u1(k)+0.0000u2(k)x4(k+1)=−0.0542−0.0447x1(k)−0.0091x2(k)−0.0083x3(k)+0.9312x4(k)−0.0001u1(k)+0.0016u2(k)⋮S5353:Ifx1isM1i5and…x4isM4i3thenx1(k+1)=−0.0000+0.9999x1(k)+0.0100x2(k)−0.0000x3(k)+0.0000x4(k)+0.0000u1(k)−0.0000u2(k)x2(k+1)=−0.0058−0.0227x1(k)+0.9955x2(k)−0.0057x3(k)−0.0093x4(k)+0.0007u1(k)−0.0004u2(k)x3(k+1)=0.0001+0.0001x1(k)+0.0000x2(k)+1.0000x3(k)+0.0101x4(k)−0.0000u1(k)+0.0000u2(k)x4(k+1)=0.0118+0.0245x1(k)+0.0090x2(k)+0.0011x3(k)+1.0152x4(k)−0.0001u1(k)+0.0016u2(k)Firstly, the minimization of the objective function suggested in Algorithm 1 given in Section 3.1(34)J=(xr−x(k+1))tQ(xr−x(k+1))+ut(k)Ru(k)Applying the control action proposed in Eq. (17) and using:Q=1.8e+0700001.0e+0500001.0e+0700002.5e+04,R=1001Figs. 2 and 3show the transient response of the angle of the first robot link θ1 and the second robot link θ2, respectively. It can be clearly seen that a smooth and well damped response is obtained but with a steady state error in both links.Secondly, the minimization of the objective function suggested in Algorithm 2 given in Section 3.2 is applied, i.e., minimizing the following objective function:(35)Js=(xr−[a0s+Asxs+Bsus))tQ(xr−[a0s+Asxs+Bsus))+ΔustRΔusUsing the same Q and R, we obtain better results as shown in Figs. 4 and 5. Figs. 4 and 5 show the transient response of the angle of the first robot link and the angle of the second robot link, respectively. Figs. 6 and 7show the transient response of both links subjected to disturbances with an additional mass of 1kg in the end effector of the second link. It can be clearly observed that there is a tangible reduction in steady state error in both links although it is not completely vanished. Moreover, the disturbance effect is not completely eliminated.Thirdly, a compensation of modeled errors is taken into consideration in Algorithm 3 given in Section 3.3Q=2.5e+040000005.e+050000005.e+070000001.e+050000001.e+080000001.e+05,R=1001As can be observed in Figs. 8 and 9, a zero steady state error is achieved in the presence of disturbances.As we have mentioned in the introduction that the proposed control algorithms outperform the PDC approach because they deal with the real nonlinear system. In [2], a PDC method is designed using the standard optimal LQR. The corresponding weighting matrices Q and R are the following:Q=0.50000000.500000020,00000000010,000000000100,00000000050,000,R=1001Comparing both approaches, it can be clearly seen the algorithms proposed in this work (see Figs. 8 and 9) are superior to the one in [2] (see Fig. 10 and 11). The proposed algorithms offer a better well damped dynamic response than the PDC one.

@&#CONCLUSIONS@&#
