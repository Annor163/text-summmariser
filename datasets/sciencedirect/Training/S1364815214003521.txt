@&#MAIN-TITLE@&#
Modeling structural change in spatial system dynamics: A Daisyworld example

@&#HIGHLIGHTS@&#
Simulation of evolving spatial structures has been widely neglected so far in SSD.The simulation requires bidirectional and synchronous interaction between System Dynamics and GIS applications.Daisyworld is used to illustrate the tight coupling approach.Results highlight the importance of considering spatio-temporal feedbacks.

@&#KEYPHRASES@&#
Spatial system dynamics,Tight coupling,Process and structure,Structural feedback,

@&#ABSTRACT@&#
System dynamics (SD) is an effective approach for helping reveal the temporal behavior of complex systems. Although there have been recent developments in expanding SD to include systems’ spatial dependencies, most applications have been restricted to the simulation of diffusion processes; this is especially true for models on structural change (e.g. LULC modeling). To address this shortcoming, a Python program is proposed to tightly couple SD software to a Geographic Information System (GIS). The approach provides the required capacities for handling bidirectional and synchronized interactions of operations between SD and GIS. In order to illustrate the concept and the techniques proposed for simulating structural changes, a fictitious environment called Daisyworld has been recreated in a spatial system dynamics (SSD) environment. The comparison of spatial and non-spatial simulations emphasizes the importance of considering spatio-temporal feedbacks. Finally, practical applications of structural change models in agriculture and disaster management are proposed.

@&#INTRODUCTION@&#
System dynamics (SD) is a computer simulation problem-solving approach with a foundation in concept of system feedbacks with the purpose of gaining insight into real-world system behavior (Forrester, 1969). This approach was first introduced by Jay Forrester in the mid-1950s as a framework for the conceptual representation as well as the quantitative modeling of economic systems (Radzicki and Taylor, 1997). “The paradigm of System Dynamics itself assumes that things are interconnected in complex patterns; that the world is made up of stocks, flows, and feedback loops; that information flows are intrinsically different from physical flows; that nonlinear processes and delays are important elements in systems; and that behavior arises out of system structure” (Meadows, 1989, p16).Besides economical and business management problems, a relatively large number of SD models have already been applied to study environmental processes, especially in the field of hydrology and water resource management (e.g. Ahmad and Simonovic, 2000; Gastélum et al., 2010; Khan et al., 2009). The main purpose of these models is to provide insight into non-linear system behavior for the ultimate purpose of assisting informed decision making by stakeholders and policymakers.However, SD was originally developed as an approach for modeling non-spatial systems. Efforts to integrate spatial modeling capacities into SD resulted in the development of software as for instance Spatial Modeling Environment (SME) pioneered by Maxwell and Costanza (1997) or SIMILE presented in Muetzelfeldt and Massheder (2003). Moreover, implementations such as SIMARC (cf. Mazzoleni et al., 2003) or 5D (cf. Mazzoleni et al., 2006) were proposed to address shortcomings of SD in modeling spatial processes. Concepts as well as the availability of mature software products enabled the application of SSD to a number of case studies in different fields such as ecosystem modeling, hydrology or invasive species control (e.g. Ahmad and Simonovic, 2004; BenDor and Metcalf, 2006; Voinov et al., 2004). The main focus of these models is on the simulation of spatial diffusion processes. The general principle of this model type is that elements spread from areas with high concentration to areas with lower concentrations. In contrast, the simulation of evolving spatial structures has been widely neglected so far in SSD. The term structure may be defined as “the arrangement of and relations between the parts or elements of something complex” (Oxford Dictionaries, 2014). A structural change model deals with the temporal evolution of spatial structures and the processes driving this evolution. An example of this type of model is a land cover model; “land cover is defined by the attributes of the earth's land surface and immediate subsurface” (Lambin et al., 2003, p213). Natural and anthropogenic processes modify the spatial arrangement of these attributes over time. The spatial arrangement in turn has an effect on processes.So far, this type of feedback system has been implemented by few modelers in the area of SSD research. Furthermore, models which are currently available either represent structures as relational space (e.g. BenDor and Kaza, 2012) – which omits absolute positions of objects – or neglects feedback between processes and structures (e.g. Lauf et al., 2012). Therefore, the objectives of this article are: (i) to introduce an approach which addresses feedbacks between processes and dynamic spatial structures in SSD models; (ii) to initiate a discussion on data exchange between raster or vector-based spatial objects and traditional SD models; (iii) to describe the implementation of a general-purpose Python-based software coupling tool; and (iv) to illustrate the impact of process-structure feedbacks based off of a well-established theoretical SD model called Daisyworld.Daisyworld is a fictional system introduced by Watson and Lovelock (1983), which serves as a simple parable to show effects of interactions between life and its environment (Wood et al., 2008). In this example, the close linkage of the biota to the atmospheric environment causes self-regulation. In order to determine the effects of structural feedbacks on the system's behavior, simulation results of two different Daisyworld versions with and without spatially explicit landscape structures are compared.A more detailed explanation of the Daisyworld model and its basic idea is given in Section 4. In the following sections established SD and SSD concepts are explained and a selection of current SSD models in literature is discussed. This is followed by a methodological discussion on the technical implementation and the nature of structural change models in SSD. Subsequently, the spatial and non-spatial Daisyworld simulations are explained in detail and the simulation results are presented and discussed. Finally, conclusions are presented and suggestions are made for future applications.System dynamics (SD) combines mathematics and computer simulation to explore the behavior of real-world systems, relationships and processes over time. The SD approach is effective for formalizing system structure, providing a better understanding of what drives system behavior and examining future dynamics based on a given set of assumptions. In this way, modeling system behavior over time can provide insight into significant relationships, reveal patterns, expose sources of undesirable system behavior, and help avoid unforeseen consequences of future policy implementations. Two important properties of the approach include system model structure and system simulation.System structures can be conceptualized by means of a causal loop diagram (see Fig. 1a). Arrows indicate relationships between system elements and can expose feedback loops inherent in the system. The relationship between variables can be characterized by assigning a polarity (positive or negative) based on the direction of the change. For example, a negative polarity indicates that the change of a variable in one direction causes the second variable to change in opposite direction. A positive polarity, however, means that variables change in the same direction. The behavior of a particular loop is driven by system structure and the polarities of variables in a particular loop. Negative feedback may be considered “goal seeking” or “stabilizing” and conversely, positive loops are often considered “diverging from equilibrium” or “destabilizing”.The conceptual causal loop diagram serves as a blueprint for the implementation of an executable stock and flow model (see Fig. 1b). This type of model is comprised of stocks (accumulations or depletions), flows (rates of change), delays (time lags) and feedbacks (reciprocal relationships). In order to simulate behavior, the SD model uses mathematics to describe and relate model stocks and variables to each other. Stocks are mathematically represented as integrals, which provide a form of memory to the system. Flows are rates of change expressed as a set of ordinary first-order differential equations.The field of SSD modeling aims at an integration of space in SD models. There is a need for spatial and temporal dynamic simulations, as the non-linear behavior of highly complex systems cannot be intuitively forecasted. Real-world systems are highly dynamic in both time and space and unanticipated, even counter-intuitive behavior can often arise in complex systems (cf. Forrester, 1971), because oftentimes “cause and effect are distant in time and space” (Sanders and Sanders, 2004, p3). Therefore, in order to more accurately simulate behavior of real-world systems, it is necessary to consider both the short and long-term dynamics of system behavior including the impacts and interactions between time and space. This ultimately assists in assessing the effectiveness of policy decisions and helps identify those actions which would help achieve desired goals. Although SD research is trending in this direction, “the spatial dimension has not received a great deal of attention in system dynamics modeling. An intensive literature review showed that there are only a number of articles dealing with this subject” (Sanders and Sanders, 2004, p9). This is not due to a limitation in the method, but rather due to the nature of SD tools (Kelly et al., 2013).The question of how to represent physical space in a model and how to link this representation to a dynamic SD model is crucial in the field of SSD modeling. Raster or vector data models with Geographical Information Systems (GIS) are commonly used to represent spatial environments. The linkage of SD variables to a spatial GIS data model includes both data association as well as semantic association (Zhang, 2008).Data association refers to technical coupling and the way of managing the mutual exchange of data between SD and GIS. De Smith et al. (2007) distinguish between loose, moderate and tight coupling approaches for the connection of two standalone computer applications by data transfer. In a loosely coupled SSD model, functions operate asynchronously within each system. For instance, the GIS may be used to preprocess spatial inputs, which are then passed to a SD model; thereafter, execution results are returned to the GIS for visualization and additional analysis. A moderately coupled SSD model enables an indirect communication of systems by means of shared access to a database. Finally, tight coupled applications are characterized by the synchronous operation of systems, allowing direct inter-system communication during program execution. This is achieved by invoking commands from both SD and GIS in a single script. Longley et al. (2005) suggest the term “embedded” to classify solutions which fully integrate modeling functionality in one independent piece of software.Since variables exhibit different manifestations within SD and GIS (Zhang, 2008), a semantic association also needs to be defined for the SSD model. For instance, raster cells or vector features (point, line or area objects) of the GIS data model may be linked to SD stocks. In this way, dynamically changing values of the stock element in SD can be transferred to the spatially decomposed simulation environment in GIS and vice versa. Due to structural similarities, two-dimensional stock arrays are often associated to GIS raster (e.g. BenDor and Metcalf, 2006; Ahmad and Simonovic, 2004). These multidimensional arrays are provided as a data type with most SD software applications. One significant advantage is the spatial topology (relative position of array elements) inherent in this data type. SSD applications based on vector data models are usually lacking information on the relative position of object features.In addition to structural peculiarities, the type of spatial representations used in SSD models strongly depends on the processes being modeled. For instance, the continuous raster view tends to work best in describing physical quantities (Goodchild, 2005). Huggett (1993), for instance, introduced a SSD model of nitrogen accumulation based on terrain data represented by means of a spreadsheet raster. In this way, the spreadsheet provides the SD model with terrain information being used for the derivation of nitrogen flow directions. The relative positions of raster elements (neighborhood conditions), which is required to determine nitrogen flow directions, is defined in the stock array. The link to the spreadsheet is provided as a built-in function of the SD software and allows for spatial results to be displayed in two-dimensions.A similar model was implemented by BenDor and Metcalf (2006) for the simulation of invasive species spread using the software SME. In SME models are implemented as a three-part View-Modelbase-Driver architecture (Maxwell and Costanza, 1997). Models are graphically constructed in the view component using a graphical modeling environment (e.g. STELLA or VENSIM) and archived in the modelbase as reusable modules. The driver is the actual simulation environment which links modules as a set of distributed C++ objects. In this way SD models are replicated to create a spatial grid covering the study area (Costanza and Voinov, 2004). In contrast to the model introduced by Huggett (1993), more complex neighborhood conditions are considered. The propagation of bark beetles is modeled as a function of beetle density in an origin raster cell and the distance to a destination raster cell. Moreover, the migration of beetles to adjacent cells is restricted by a maximum migration distance which is defined prior to the simulation. Conventional GIS is only used in this model to initially parameterize spatial arrays and to visualize spatial data in a raster format.In contrast to SSD models with spatial extensions, SSD models based on GIS coupling benefit from a comprehensive set of spatial modeling and data management functionality.Ahmad and Simonovic (2004), for instance, coupled SD to GIS for the simulation of damages caused by floods in the Red River basin (Canada). Similar to the models presented so far, diffusion processes were modeled based on raster data. SD captures spatio-temporal dynamics of discharge depths, which are sent to a corresponding GIS raster. Damages to the infrastructure affected by the modeled flood is reported and visualized in GIS. The data association was achieved by passing data from SD to GIS through a spreadsheet, using the dynamic data exchange (DDE) protocol. However, the authors concluded that this coupling approach doesn't enable a fully automated update of results in GIS.Zhang (2008) overcame this problem by the integration of SD and GIS functionality in a Universal Development Environment (UDE) which serves as middleware to tightly couple these systems. In this way, the coupling can be achieved without producing intermediate data. This model was applied to the spatio-temporal simulation of contaminant propagation in the Shoghua River, China. The process is modeled on a raster-basis in SD and visualized in a customized component GIS. In contrast to Ahmad and Simonovic's flood model, a one-dimensional approach was selected for simulation of the pollutant concentration along the river course.Compared to raster-based simulations introduced so far, vector approaches are underrepresented in the field of SSD modeling. Lowry and Taylor (2009), for instance, proposed a technical solution for coupling SD to Google Earth, which enables the update of KML (vector format) color attributes based on SD variables. Similar to the model on pollution propagation by Zhang, the systems were tightly coupled by invoking commands in a separate script. The definition of relative position of vector polygons was neglected, since no interaction between vector polygons was foreseen.SSD applications are predominantly raster-based approaches which apply a one-to-one raster cell-to-stock ratio. Moreover, SSD models typically fail to capture two-way interactions between SD and GIS. Communication between SD and GIS software is usually unidirectional; with GIS conventionally used as a visualization tool for SD outputs.

@&#CONCLUSIONS@&#
The application of SSD to the simulation of structural change requires a different semantic association of SD variables with the GIS data model. The commonly used one-to-one raster cell-to-stock association may be replaced by a greater than one-to-one multiple raster cells-to-stock ratio. A stock value represents the area of a structural element such as a specific land cover type. The area exchanged between these stocks is assigned to the raster data model by a set of predefined allocation rules. Processes which modify spatial structures and structures which in turn affect processes define an important feedback component of this system.As a consequence of this mutual interdependence, interaction between SD and GIS needs to be bidirectional. The tight coupling of the SD software VENSIM to ArcGIS via a Python middleware enables efficient system interactions during program execution. Furthermore, operations performed in GIS and SD need to be synchronized for the structural change model type. The computational overhead associated with these specific coupling features is virtually negligible, as demonstrated in the example of a fictitious system called Daisyworld.In Daisyworld, a dynamically adapting landscape of black and white daisies balances out temperature changes caused by varying luminosities. The comparison of a spatial Daisyworld simulation to a non-spatial simulation emphasizes the significance of incorporating structural feedbacks inherent in spatial models. The initial composition and land type distribution of the Daisyworld landscape has a consequence on the assignment of future land cover types and simulation results. Moreover, simulation results suggest daisies die to point of extinction in the non-spatial model. This is likely due to the more pronounced response of land cover in the lumped simulation, which doesn't take local growth restrictions (as an expression of spatial structures) into account. Locally restricted daisy growth leads to increased temperatures in the case where luminosity is increasing, whereas the pronounced land cover adaptation in the non-spatial version actually causes decreasing temperatures. Thus, the spatial system exhibits higher robustness, whereas the non-spatial version has higher adaptive capacities.However, results of the spatial model are not only influenced by the initial landscape structure, but also depend strongly on raster resolution. An increase in spatial resolution goes hand in hand with decreasing adaptive capacities and vice versa. This is due to changes in the raster topology (shared borders between daisy and fertile soil cells).Nevertheless, results support the idea of utilizing SSD for the simulation of structural change. Compared to diffusion process models, less data links between SD and GIS are required. This is conducive for applications in environments which require large amounts of data. The generic design of the coupling tool lends itself for easy implementation of more realistic SSD models.In the presented approach objects are generated by assigning consistent numeric identifiers to a discrete number of raster cells. Objects assembled in this way are visually interpreted as objects; however they are not fully recognized as objects in GIS. Therefore, the next step towards a more efficient approach is to partially vectorize objects and assign them distinct attributes. Objects metrics may then be analyzed in GIS. This modification of the approach would also allow establishing object hierarchies for multi-scale modeling. Hierarchical organization enables simultaneous simulation processes on multiple scales as well as interactions between them. Moreover, biasing effects of different raster resolutions may be prevented by using a vector model instead.The middleware provides a basis for using vectors. The full integration of GIS functions facilitates the visualization, analysis and management of non-linear spatial arrangements in SSD models. Therefore, the fusion of GIS and SD functionality, as presented in this paper, opens up new applications for SSD in fields where regular grids and one-directional stock-to-raster associations are not conducive to representing reality. This especially applies to systems involving irregular features such as networks.Possible future applications of the SSD approach include simulating land ownership changes and simulating emergency response during disasters. More specifically, the coupling program is be used for modeling structural changes in grassland agriculture in Austria. This includes simulating competition between different farms to assess ownership changes. In this example, processes at the farm level are implemented as part of a VENSIM model. This model is duplicated for each farm. Transportation costs are calculated iteratively, as the agricultural areas for each farm changes over time. Therefore, structural feedbacks need to be considered at a farm level.Additionally, an application of the structural change approach is planned for the dynamic simulation of serviceable emergency response areas in response to natural disasters. Street networks are governed by changing traffic during hazards and access to critical infrastructure may become restricted. Thus, emergency response is functioning as part of a dynamic temporal and spatial landscape. The coupling program aspires to capture these changes and improve disaster planning, response, and recovery efforts.The proposed approach may be especially suitable for applications in the fields of land use and land cover modeling. This is due to the clear distinction between processes and structures as well as the restrictions to qualitative changes in space. The structure change model type may be used as an alternative to commonly used CA and ABM approaches in this field. The open design of the coupling tool facilitates an integration of other approaches to address the various requirements of integrated environmental assessment (cf. Kelly et al., 2013).The current version of middleware was designed as a first prototype, which is generic-form rudimentary coding that invokes commands from both ArcGIS and Vensim. So far, front end features such as a GUI have not been implemented, but may be included in future versions.