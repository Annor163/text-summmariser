@&#MAIN-TITLE@&#
Two dimensional hashing for visual tracking

@&#HIGHLIGHTS@&#
In this paper, we propose a 2D-based hashing method which could fast extract the binary feature of samples.We successfully apply the hashing method into tracking model by some details.We design an effective and suitable learning model to update hash functions at every frame.Comparison experiments are done to demonstrate the effectiveness and efficiency of our tracker.

@&#KEYPHRASES@&#
Hashing,Tracking,Appearance model,Incremental learning,

@&#ABSTRACT@&#
Appearance model is a key part of tracking algorithms. To attain robustness, many complex appearance models are proposed to capture discriminative information of object. However, such models are difficult to maintain accurately and efficiently. In this paper, we observe that hashing techniques can be used to represent object by compact binary code which is efficient for processing. However, during tracking, online updating hash functions is still inefficient with large number of samples. To deal with this bottleneck, a novel hashing method called two dimensional hashing is proposed. In our tracker, samples and templates are hashed to binary matrices, and the hamming distance is used to measure confidence of candidate samples. In addition, the designed incremental learning model is applied to update hash functions for both adapting situation change and saving training time. Experiments on our tracker and other eight state-of-the-art trackers demonstrate that the proposed algorithm is more robust in dealing with various types of scenarios.

@&#INTRODUCTION@&#
Visual tracking, as a main topic in computer vision, has been widely used in many applications, such as augmented reality, surveillance and object identification. Numerous tracking algorithms have been proposed during past decades [1–19]. Most visual trackers can be divided into four parts: feature extraction, appearance model, sampling method and online learning model. Among these four parts, appearance model is the key element to the success of coping with occlusion, pose change, illumination and other complex scenarios.How to design an effective and robust appearance model is the main task in most state-of-the-art trackers. These algorithms often construct appearance models by low-level and mid-level cues such as: Raw pixel, Color Histogram, Gradient, Superpixel, Texture, Haar-like, SIFT, SURF, MSER, LBP, HoG, Harris corner and Saliency object [20]. Mei and Ling [1] treat tracking as sparse approximation problem, which uses raw pixel representation. Based on this idea, much works [2–6] focus on using sparse representation method to solve the tracking problem and have achieved good performance. He et al. [7] propose a new histogram extraction method called local sensitive histogram. Based on this histogram technique, illumination invariant feature is proposed, which is proven to be effective to track object. Wang et al. [8,9] propose superpixel tracking algorithm, which uses superpixels to generate local parts’ confidence of object. The tracker is proven to be effective to occlusion and pose change by its unique appearance model. Some other work [10,11] also use superpixel feature to construct robust appearance model for visual tracking and achieve well tracking results in experiments. Chen et al. [12] integrate several types of features and construct a robust appearance model. The model is combined with complex cells by adaptive weights and appears to be effective to deal with occlusion, pose change and illumination. Besides these trackers, there are also many other algorithms [13–15,17–19], which use the artificial feature or model as the base of tracking algorithm.An alternative method for constructing appearance model is data dependent technique. Given sufficient descriptor or raw pixel of samples, the data dependent method aims to find a map from high dimensional space to low dimensional space. The most representative literature based on this method is IVT [21,22]. Given the samples at first frame, the tracker obtains a low dimensional representation by PCA, and candidates obtained from coming frames would be mapped into low dimensional feature space to get compact representation. By the support of theory, IVT achieves well performance in experiments. However, the tracker does not take semantic information into consideration and the mapping functions have limited discriminability, which may cause drift or loss of target under complex cases. Compressive tracking [23,24] is another work that uses dimensionality reduction manner. It uses compressive method to reduce the dimension of original feature vector. Although the tracker owns the ability to deal with some tracking situations, its performance is instable because of the random process in mapping method. Recently data-dependent hashing approach becomes a popular method in large-scale vision problems. It is shown to be a good method to expedite similarity computation. This property makes it possible to apply the hashing method to tracking algorithms. Li et al. [25] propose learning compact binary code for visual tracking. The algorithm always keeps a sample buffer and updates the hash functions every ten frames. Although the tracker obtains effective tracking results in experiments, its training stage is not an efficient manner to update hash functions.To better apply hashing method in tracking and provide an efficient updating strategy, we proposed two dimensional hashing method for visual tracking. Inspired by 2DPCA [26] and 2DLDA [27], the proposed two dimensional hashing method is based on 2D sample matrices (object image) rather than 1D feature vectors. The algorithm does not need to vectorize the sample matrices, and then the dimension of covariance matrix is reduced dramatically, which is the key element for computational efficiency. Given training samples at first frame, the hash functions are initialized by the proposed hash method. Then we can formulate the binary codes of candidates at coming frame. Confidences of candidates are calculated by their hamming distances to the templates, and the highest one is chosen as target at current frame. For adapting to the situation changing, hash functions are updated by the designed incremental learning model during tracking. Due to this learning model, our algorithm only needs to store few matrices. Experimental results show that the approach achieves good performance in evaluation metrics CLE, SR and FPS, which demonstrate the effectiveness and efficiency of our tracker, and outperforms the-state-of-art tracking algorithms.The rest of our paper is organized as follows: Section 2 introduces some related literatures. Section 3 presents the details of two dimensional hashing method. Section 4 shows the framework of tracking by two dimensional hashing. Experimental results are analyzed detailedly in Section 5. And final conclusion is drawn in Section 6.

@&#CONCLUSIONS@&#
