@&#MAIN-TITLE@&#
Improving spatial coverage while preserving the blue noise of point sets

@&#HIGHLIGHTS@&#
Local smoothing to optimize Voronoi cell aspect ratios.Simultaneously achieve random and well-spaced points.Image filtering applications.Meshing applications.

@&#KEYPHRASES@&#
Optimization,Voronoi aspect ratio,Disk,Triangulation,

@&#ABSTRACT@&#
Graphical abstract

@&#INTRODUCTION@&#
Many applications desire a distribution of points that are not too close to one another, yet are evenly distributed throughout the domain. Such points are well-spaced, or separated yet dense. The separation distance improves efficiency; close points often add little information, yet they consume time and memory. Well-spaced points reduce the interpolation and simulation error in scientific applications. Points spread uniformly can help reduce noise or variance. Graphics applications often desire randomness to help reduce aliasing or bias. Blue noise refers to distributions that are roughly uniform random with no preferred inter-point directions or distances. Note that well-spacedness is a local measure of nearby points. In contrast, blue noise is a global measure dependent on the distances between far points. Some methods for well-spaced points often do not produce blue noise: e.g. periodic tilings such as lattices and structured meshes; raw low discrepancy sequences; and Delaunay Refinement (DR).In the 1990s, the fracture mechanics community studied the effects of mesh structure in finite element fracture simulations where the crack directions are limited to mesh edges  [1]. They concluded that uniform random points lead to uniform random edge orientations, and more physically realistic simulations. Both Delaunay and dual Voronoi elements are of interest. The initial techniques for generating such meshes included simple jittering, perturbing the position of points. Interest in the topic recently revived, and researchers have developed more sophisticated techniques, including random sampling  [2–6]. Computer graphics has a long-standing interest in techniques for blue-noise distributions, for applications such as rendering  [7,8], animation  [9], modeling  [10,11], and imaging  [12,13]. Graphics provides standardized methods for determining if a distribution has blue noise  [14].The well-spacedness of a distribution can be characterized by two measures: conflict, which is about the spacing between samples, and coverage, which is about how samples collectively cover the underlying domain. The conflict distancerfis the minimum distance between two samples, the coverage distancercis the maximum distance between a domain point and a sample, andβ=rc/rfis our spacing measure. The allowed (or target) values in an algorithm and the achieved values in its output are different concepts. In typical algorithms, these distances are enforced a priori by placing disks around sample points. On output, sample points might be farther apart than the enforced minimum, and domain points might be closer to a sample than the enforced maximum. See Figs. 1–3for illustrations and Section  4 for formulations.Different methods achieve various degrees of conflict and coverage. Dart throwing  [7] enforcesrf, and attempts to have outputrcclose to it, but usually falls short. Maximal Poisson-disk Sampling (MPS)  [16] enforces both and hasrf=rc. Two-radii MPS  [15] also enforces both, but encourages more randomness (and less uniformity) by usingrc>rf. In practice, for even a few thousand points, MPS outputrfis just slightly larger than the enforcedrf, and outputrcis just slightly smaller than the enforcedrf, because a local case similar to Fig. 3(b) or (c) is very likely. That is, MPS guarantees outputβ≤1, and usually achievesβvery close to 1. Two-radii MPS guarantees outputβ≤targetβ, and typically achieves something close to it.There is some correlation between coverage/conflict and randomness, but the two are not proportional. At one extreme, uniform random points (also known as white noise or Poisson Sampling PS without disks) has unbounded coverage and conflict. Spectrum plots of MPS and two-radii distributions  [15] and Opt-βi(Fig. 9) show a strong correlation between larger achievedβand more randomness.However, this is not the full story. In two dimensions, the vertices of equilateral triangle tiling achieve the minimum possibleβ, withrc=rf/3. It is the only distribution achieving this value, and distributions coming close to this value bear some resemblance to it. The vertices of its dual, hexagonal tiling, haverc=rf. Square tiling gives a value of1/2, somewhere in between. By adding or moving a single point of any of these, one can generate a periodic tiling with any largerβdesired,∞>β>1/3. Delaunay Refinement DR  [17,18] is a deterministic process for generating a triangulation. Its output vertices achieverc≤rf, and its spectra show features of both regularity and MPS. None of the tilings or algorithms mentioned in this paragraph are random. However, a random algorithm such as MPS or even PS could in principle produce one of these, albeit with very small probability. The possibleβachieved by different distribution types are shown in Fig. 2.Any random sampling method that only considers local criteria when placing points, and never moves them, cannot be guaranteed to achieve any target value ofβt<1. The alternatives are to consider global constraints, or to adjust point locations, as Opt-βidoes in this paper. The reason that local decisions and fixed locations are insufficient is that it is easy to “paint yourself into a corner”, meaning that selecting points independently can create a subregion that is impossible to cover without placing points too close together. This can easily happen for any value ofβ<1; see Fig. 3. Achievingβ<1is actually more challenging than achievingβ=1[16] orβ>1[15].To summarize,–β>1is produced by two-radii MPS  [15], and the user may selectβ. Uniform sampling without disks produces white noise, which may haveβapproaching∞.β=1is produced by traditional maximal Poisson-disk sampling  [16]. Stopping short of maximality producesβ>1.β<1is produced by Opt-βiand it tends to make the distribution more uniform. Incremental insertion rarely achievesβsignificantly below 1.The smaller theβ, the more uniform a point set tends to be, but this is a feature of both the random process generating the points andβ. In two dimensions,β=1/3indicates a periodic equilateral triangle tiling. A periodic structure can be tuned to any larger value ofβ. The minimum achievableβis dimension dependent, butβ≥1/3in two dimensions, andβ≥0.5by definition.There are prior formulations quantifying both conflict and coverage, such as minimal spacingrfin dart throwing  [7], normalized spacingρ[19], and coverage radiusrc[15]. Discrepancy measures spatial uniformity by comparing the fraction of points in any box to the fraction of the domain (volume) in that box  [20]. In spatial statistics, in the hard-core Strauss disk process,rfis known as the inhibition radius andrcis known as the coverage radius. In biological system analysis, e.g. forestry image analysis  [21], one usually observes a (non-maximal) point distribution that is assumed to come from this process, then seeks to estimate the hidden generating parameters.In computational geometry,rfiis twice the inradius of theith Voronoi cell. Andrciis known as the outradius of the Voronoi cell, the distance from a seed point to the furthest Voronoi vertex of its cell. The outradius/inradius ratio is the Voronoi cell aspect ratio,A=2βi. Since outradius ≥ inradius,A≥1andβi≥0.5in any dimension. A point set with maximum aspect ratioAis called anA-well-spaced set  [22]. Much effort  [23,24] has been devoted to generatingA-well-spaced sets, for both uniform and spatially varying densities. Usually the upper bound onAis greater than 2, but we strive forA<2.In graphics, a common measure of point distributions is the relative radiusρ[19]. Its definition starts with non-overlapping disks with constantrf/2radius. The packing densityηis the fraction of the domain area covered by these disks;ηis itself a popular measure in physics. Given a unit-area periodic domain containingNdisks,rmaxis the radius achieved by the densest (in terms ofη) known arrangement, assuming thatNdivides evenly into that tiling. In two dimensions,rmax=const/N. We defineρ=rf/(2rmax), whereρ∈[0,1]. Thusρis directly related torf, but only indirectly related torcthroughN. For example, if we create a gap by removing one vertex (disk) from an equilateral triangle tiling, thenρdecreases by a factor ofN−1/N, a negligible change ifNis large, butrcandβalmost double from1/3to 1. In our context, the number of pointsNis fixed, so we haveβ∝rc/ρ. Area coverage andrmaxare global averages over the disks, whereasrciis a maximum achieved in a local neighborhood of a point, its Voronoi cell. We think thatβiis a better measure of local spacing thanρ, becauseβmeasures local gaps andρdoes not.We compare our method against three alternative sampling techniques. While they all strive to improve the spatial quality of a distribution, none optimizeβidirectly as we do.A CVT  [25] is defined as a distribution in which each point is at the center of mass of its Voronoi cell. The earliest technique to achieve a CVT is Lloyd’s iteration  [26], iteratively moving each point to the center of its Voronoi cell. Recently, Liu et al.  [27] improved the speed of converging to a CVT by recognizing the second-order smoothness of its energy function, and optimizing it using a quasi-Newton method. But the converged solution is the same. The CVT converges to an equilateral triangle tiling, absent boundary effects. For this reason, many applications stop short of convergence.Based on the iterative method definition, one might expect CVT to improverci, and not degraderfi, at least in the average sense. Our experience is that CVT tends to decrease the maximum coverage radiusrc, but does not provide any control over the minimum disk-free radiusrf.DistMesh is a popular point relocation technique that aims to make the Delaunay edge length distribution match a user-specified sizing function  [28]. This technique simply treats each Delaunay edge as a spring that can expand or contract; but if its length is less than the user-specified sizing function it can only expand. For the uniform case, the sizing function is constant and is usually chosen to be 20% more than the desired edge length. While this technique is good for improving the quality of the majority of the elements, it is not as good for improving the worst-quality elements.In contrast to CVT, DistMesh tends to increase the disk-free radiusrfof an MPS; however, it does not provide any control over the coverage radiusrc.Farthest neighbor  [29,30] is an iterative technique that moves each point to the Voronoi vertex farthest from its immediate neighbors. As such, it locally optimizesrfi, and ignoresrci. The algorithm works by finding the Delaunay neighborsN={xj}of samplexi, computing the Voronoi vertices ofN(withoutxi), then reinsertingxiat the Voronoi vertex with the maximum minimum distance toN. If the points are not in convex position, there will be some Voronoi vertices far from the convex hull ofN; these vertices are ignored.This technique tends to increase all Delaunay edge lengths, not only the short ones.We propose Opt-βi, local optimization of theβiof the initial MPS sample positions, stopping when a user-specified ratioβt=rc/rfis achieved. By tuningβ, our method can produce sample distributions with a level of uniformity and randomness as desired by the users. There is no guarantee that our method can achieve any value ofβ<1, or even thatβwill not increase, but in practice we can obtainβ≈0.75.In the sampling methods of Section  1, at least one ofrcorrfis a fixed enforced value. Opt-βiis different, in that these are both measured quantities of the output. We simultaneously adjust bothrcandrfin pursuit of optimizing their ratioβ. Moving points might increaserfor decreaserc. Experiments show that, despite this possibility, we usually simultaneously achieve both an increasedrfand a reducedrc, while maintaining good spectra; see Table 1and Fig. 5. Fig. 4 compares the methods over a periodic square.Our paper has the following main contributions.–Introducing and formalizing the notion of Well-spaced Blue-noise Distributions (WBDs).Proposing an algorithm, Opt-βi, to generate a WBD with controllable uniformity and randomness throughβt.Demonstrating the benefits of a WBD and Opt-βithrough applications in geometry meshing and image filtering.Conflict radiusrf.The minimum achieved spacing between any pair of samples in the setS. For example, for MPS, at least the enforced Poisson-disk radius.Any point in the domainΩwill be at mostrcaway from the nearest sample inS. Equivalently, the set of spheres with radiusrcwill cover the entire domain.The ratio between conflict and coverage is measured byβ=rc/rf. This is the ultimate objective of our method.The input (MPS) point set hasrMPS=rf=rc.During the local optimization procedure, we only consider the local values of these quantities, i.e.Adjusted pointxi.We move one point at a time,xi∈S.Distance fromxito its nearestxj∈S.Distance fromxito the farthest vertex of its Voronoi cell, i.e. the distance to the domain point farthest fromxithat is not closer to some other samplexj.This isrci/rfi. Note that(1)β=maxirciminjrfj≥maxi(βi)=maxi(rcirfi).We now describe our algorithm in detail. We start with an MPS, or some other distribution with blue noise, withβ=1. (Recall that the MPS output might haveβ<1, but in practiceβis so close to 1 that we just say thatβ=1.) It is possible to start with other distributions, such as the output of DR, but, since our method removes noise, the output will be limited by the noise in the input. In principle it is also possible to start with a distribution withβ>1; in this paper we assume that such distributions are enriched to maximality with an MPS algorithm so thatβ=1.The user specifies the targetβ=βt, the desired trade-off between spacing and randomness. For two dimensions,βt∈[13,1].Letβi=rci/rfidenote the local coverage/conflict ratio. Ideally, one might wish to simultaneously adjust the location of all points to find a global minimum forβ, or at least to minimize the maximum ofβiover allxi. A more practical method is to iteratively move eachxitowards its local optimum  [31].We iteratively reposition each sample pointxito locally minimize itsβi, until globallyβ<βt.To repositionxi, we perform ten iterations of Nelder–Mead  [32]. Nelder–Mead is a downhill-traveling optimization heuristic that requires only function values, not derivatives. Its state consists of three candidate pointsc{1,2,3}, and theβifunction values ifxiwas repositioned at those locations. To get started, we select the first candidate pointc1atxi, the secondc2atxishifted in thex-axis direction byrMPS/10, and the thirdc3atxishifted in they-axis direction byrMPS/10. Thesec{1,2,3}define a triangle, tilted in three dimensions by assigning the respective heightβito its corners. Nelder–Mead replaces the high corner by some point on the other side of its opposite triangle edge, and recomputes a new triangle and its tilt. We flip-flop through ten triangles and stop.Each candidate may have different Delaunay neighbors than the original point; we calculateβiusing the candidate’s Delaunay neighbors, rather than the original points’ neighbors. Sometimes, especially in initial iterations,ximoves outside of the convex hull of its initial Delaunay neighbors:rcidecreases asximoves towards the convex hull, but it may happen thatrfiincreases more rapidly, yielding a local improvement inβi. We experimented with preventing this from happening, but found it was faster to allow this to happen.Often, improvingβicauses a nearby point’sβjto get worse. This is a common phenomenon in mesh smoothing algorithms, and the common approach is to allow this to happen, and attempt to remedy it later during the optimization ofxj.We sweep over allxi, locally optimizing and updating their positions. Each update happens immediately. That is, for a neighborxjofxi, we use the updated position ofxirather than its initial position at the start of the sweep. Our input comes from Simple MPS  [33]. The output of that algorithm provides a nice ordering to the points, by scan lines. Simple MPS divides the domain into boxes of side lengthrMPS, and each box has at most one point. On output the points are lexicographically ordered by the box they lie in, first by row then by column. This is the order the points are visited during our Opt-βisweep, regardless of where they later migrate to. This is better than considering points in random order.In each sweep, we optimize the position of allxi, even if their localβiis already small. We tried iterating over just the large-βipoints, but this tended to get us stuck in a local minimum.For large targets, e.g.,βt>0.9, we often get far below it in one or two iterations. To prevent that, we use a damping factor, movingxionly about half-way (0.6–0.8) of the distance from its initial to its Nelder–Mead optimized position.Local patch smoothing is common for unstructured meshes  [34]. Unlike patch smoothing, the connectivity of the implied mesh, the set of Delaunay neighbors of each sample, changes throughout our algorithm, and in our comparison methods.

@&#CONCLUSIONS@&#
This paper introduced a Well-spaced Blue-noise Distribution (WBD), withβ=rc/rfmeasuring coverage uniformity or well-spacedness. We proposed the Opt-βialgorithm to change a random point set to a WBD; blue noise is preserved up toβ≈0.75. We demonstrated Opt-βi’s efficacy in geometry meshing and image filtering applications. We believe that the main contribution of this paper is on the introduction and measurement side, and we envision fruitful future directions for both algorithm and application development. For example, generating a WBD withβ<1from scratch is an open problem.Adaptive and anisotropic sampling. We keptrcandrfconstant throughout the domain, except for the sphere. In principle, we could extend both to spatially varying functions of sample positions, for adaptive or anisotropic sampling  [42]. The spatial and spectral properties of such adaptive/anisotropic distributions can be analyzed by the differential domain method  [37] through local warping. It remains to formulate an optimization objective function.Tiling. We currently compute entire sample sets. A potential extension is generating sample tiles  [43,44,35] for acceleration.Higher dimensions and meshing. We would like to addressd>2. Recall that MPS  [33] can produceβ=1in any dimension, but the lower limit achieved by the densest packing is dimension dependent. In this paper we focused on planar meshing. Volumetric and general curved surface meshing would be interesting and important extensions. Lowerβprovides better angles ind=2, and better radius-edge condition ind≥2, which are helpful for a variety of scientific and engineering applications.Lowerβ. Our current algorithm can reachβ≈0.75. We would like to investigate the theoretical potential of reaching even lower values, even though these distributions may have limited utility due to excessive regularity, as is evident from the hexagonal spectrum bias of theβ=0.70case in Fig. 9. Also, the local optimization approach may require too much computation for smallβ.