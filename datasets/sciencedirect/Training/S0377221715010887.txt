@&#MAIN-TITLE@&#
A Branch-and-Price algorithm for stable workforce assignments with hierarchical skills

@&#HIGHLIGHTS@&#
A real-life problem of finding stable workforce assignments is studied.A new and compact IP model is developed.The problem is reformulated as an IP model with set packing structure, and Column Generation is employed.The pricing problem amounts to finding a team with replacement weight coefficients in objectiveStability is used in reducing the problem size after branching decisions.The Branch-and-Price has significantly increased the instance size that can be solved within a given time limit.

@&#KEYPHRASES@&#
Workforce assignment with hierarchical skills,Stable assignments,Column generation,Branch-and-Price,

@&#ABSTRACT@&#
This paper deals with assigning hierarchically skilled technicians to jobs by considering preferences. We investigate stability definitions in multi-skill workforce assignments stemming from the notion of blocking pairs as stated in the Marriage model of Gale–Shapley. We propose a Branch-and-Price approach to find a stable workforce assignment in which no technician and job pair can be better off by replacing an already assigned technician in current team of the job. As base for our exact algorithm, we give a reformulation of the problem which constructs a stable assignment by selecting teams from a base set. Then, the pricing problem accounts finding a team to a job. We provide details of the algorithm and show its efficiency by means of a computational study. We also show that checking stability becomes NP-hard, if replacing groups of technicians is considered in defining stability.

@&#INTRODUCTION@&#
Skill management becomes a critical task as specialization in production and management increases. Besides the efficient use of available skills, satisfying the preferences of employees is necessary to provide good working conditions. A recent literature review of van den, Belin, de Bruecker, Demeulemeester, and de Boeck (2013) concludes that companies more and more consider employee preferences to satisfy the workforce and to allow them flexibly manage their personal lives. Especially, if the skill distribution among available workers as well as the skill requirements of jobs are heterogeneous, a systematic approach becomes more crucial.In this paper, we consider the problem of assigning technicians to jobs. In our assignment problem, jobs require certain skills at hierarchical skill levels, and they can be performed if and only if the cumulative skills of assigned technicians are at least the required ones. Jobs represent the workload of one workday, that may attract technician due to their starting times, geographic location, working conditions and so on. Technicians also have different personalities besides their skill levels, working in a team more effectively, easily getting stressed, and so on. Due to aforementioned reasons, some jobs may be preferred more than others by a technician and vice versa. Preferences of both technicians and jobs are assumed to be strict and complete.According to the notion of stability considered in this paper, a technician-job assignment is stable if there is no technician-job pair such that they are better off by replacing the technician with another one in the current team of the job. This stable workforce assignment problem is introduced by Fırat, Hurkens, and Laugier (2012), and called Stable Technician-Job Assignment Problem, shortly the STJAP. The authors show that a special case of the STJAP is NP-complete by a reduction to the 3-dimensional Matching Problem.Our contribution in this field follows two directions building upon the foundation laid in Fırat et al. (2012). First, we consider a natural generalization of the problem setting presented by the authors. Our main result here is that the problem to check stability of a given feasible assignment is strongly NP-hard. This is in contrast to the classic result regarding many-to-one matchings where stability regarding groups of technicians is implied by stability regarding individual technicians in the absence of skill requirements, see (Roth & Sotomayor, 1990). Second, we present a new formulation of the STJAP. We then reformulate it in order to employ Branch-and-Price (B&P) method. In our computational study, we describe a benchmark algorithm, additional to directly solving the Integer Programming (IP) model, and compare performances of all methods by gradually increasing the size of generated problem instances. The results show that the B&P algorithm clearly outperforms the benchmark algorithms.This paper is organized as follows. In Section 2, we propose a new IP model for stable workforce assignments and consider a more general version of the problem. Related literature is reviewed briefly in Section 3. In Section 4 the B&P procedure is outlined. We evaluate our algorithm in Section 5 and conclude the paper in Section 6.In this section we detail all concepts incorporated. We, then, pick up the problem definition from Fırat et al. (2012) in Section 2.1 and introduce a more general setting in Section 2.2.In our workforce assignment problem, skills are categorized as skill domains inS={1,2,…,|S|},and the degree of expertise within each domain is interpreted by hierarchical skill levels inL={1,2,…,|L|}. We assume that possessing a skill (l, s) ∈ L × S implies possessing lower level skills (l′, s) for l′ < l.We are given a set T of technicians. Each technician t ∈ T has skills Skt∈ {0, 1}|L| × |S| such thatSkt(l,s)≤Skt(l′,s)for l′ ≤ l in every s ∈ S. For example, in an instance with|L|=3,|S|=4,skills of technician t may beSkt=(101010101000)where t is expert in domain 1 due toSkt(3,1)=1. He qualifies to level 2 in domain 3, but not qualified in domains 2 and 4. In fact, expressing skills of technicians by skill vectors could be a more compact way, however matrices are more convenient to formulate our problem. Technicians can use their skills simultaneously in all domains while processing a job, see (Fırat et al., 2012).We are given a set J of jobs, each having skill requirementsRQ∈{{0}∪Z+}|L|×|S|. In order to perform job j ∈ J, for every skill (l, s) at leastRQj(l,s)technicians should be qualified in a team. Besides cumulatively expressing skill requirements by RQ (s.t.RQj(l′,s)≥RQj(l,s)for each l′ ≤ l), they may also be expressed explicitly as(1)RQj*(l,s)={RQj(l,s)ifl=|L|,RQj(l,s)−RQj(l+1,s)ifl<|L|,∀s∈|S|.Given explicit skill requirementsRQj*for job j, cumulative skill requirements areRQj(l,s)=∑ℓ=l|L|RQj*(ℓ,s),for all (l, s). For example, in an instance with|L|=3and|S|=4,cumulative and explicit skill requirements of job j may beRQj=(514031201000)⇔RQj*=(202021201000)Given job j ∈ J and technician t ∈ T, the set N(j, t) of contributing skills includes skill (l, s) if and only ifSkt(l,s)=1andRQj*(l,s)>0. For the above examples of t and j we haveN(j,t)={(1,1),(2,1),(3,1),(1,3),(2,3)}.Technicians (jobs) have a strict preference ordering over jobs (technicians). We denote j >tj′ if technician t prefers job j to j′. Similarly, t >jt′ means that job j prefers technician t to t′. Also, we assume that preferences are complete.A workforce assignment μ matches technicians to jobs such that every technician is assigned to at most one job. The team of job j, denoted by μ(j), is the set of technicians assigned to job j under assignment μ. Similarly, μ(t) denotes the job technician t is assigned under μ. Team μ(j) has cumulative skillsSkμ(j)=∑t∈μ(j)Skt. A pair of a job and a team, assigned to each other, is referred to as job-team-assignment (JTA) in the following. We denote the JTA of job j under μ as (j, μ(j)).An explicitly required skill (l, s) of job j, i.e.RQj*(l,s)>0,is critical with respect to team μ(j), if it is tightly satisfied, i.e.Skμ(j)(l,s)=RQj(l,s). The set of critical skills of JTA (j, μ(j)) is denoted by Cr(j, μ(j)).A JTA (j, μ(j)) is skill-feasible ifSkμ(j)(l,s)≥RQj(l,s)for each (l, s). We say a technician t in μ(j) is idle if t does not contribute any critical skill of μ(j). Finally, team μ(j) is called proper if it is skill-feasible and if it has no idle technician.Definition 1Assignment μ is feasible, if every job in J is assigned to a proper team.We say technician t can replace technician t′ in μ(j) if•t′ ∈ μ(j) whilet∉μ(j),t possesses all critical skills t′ contributes, i.e. Cr(j, μ(j)) ∩ N(j, t′)⊆N(j, t).Additionally, we generalize replacements to sets of technicians. We say T′ can replace T′′ in the team of job j if T′′⊆μ(j),μ(j)∩T′=∅,and (j, (μ(j)∖T′′) ∪ T′) is a proper JTA.We pick up a definition of stability from Fırat et al. (2012) which is inspired from the notion of stability definition in the Marriage problem of Gale and Shapley (1962): A marriage is called “stable” if and only if there is no man-woman pair such that they prefer each other to their current partners. Such a pair is said to block the marriage, hence is called blocking pair. Given a feasible assignment μ, we say triple (t′, j, t) blocks μ if•j >tμ(t),t can replace t′ in μ(j) such that t >jt′.A feasible assignment μ is stable if and only if no triple blocks it.NP-completeness of finding a feasible workforce assignment is proven by Fırat et al. (2012) with a reduction from 3-Dimensional Matching problem. This implies that STJAP is NP-complete as well.Next, we formulate the STJAP as an IP model which is compact in the sense of having less decision variables and less constraints compared to the IP model proposed in the literature. We will detail this after presenting our IP model.•Binary decision variable θtjindicates that technician t is assigned to job j,Binary decision variableξj(l,s)indicates if skill (l, s) is critical with respect to the team of job j.Inequalities (3) ensure that skill requirements of jobs are satisfied by the assigned technicians as∑t∈TSkt(l,s)θtj−RQj(l,s)needs to be non-negative. Moreover,ξj(l,s)is set to 1 if the requirement is fulfilled tightly andξj(l,s)is set to 0 if the requirement is fulfilled with slack. Constraints (4) allow each technician to be in at most one team. Concluding, constraints (3) and (4) ensure an assignment with a skill-feasible JTA for each job.Inequalities (5) state that if t is assigned to j, then there has to be at least one critical skill of the JTA of j among the skills t is contributing for j. Hence, constraints (3) to (5) ensure a feasible assignment.Finally, stability is ensured by inequalities (6). For each triple (t′, j, t) which may block an assignment since t >jt′ at least one of the following must hold: (i) t′ is not assigned to j, (ii) t is assigned to j or to a job t prefers to j, or (iii) there is a critical skill of j’s JTA that is contributed by t′ and cannot be contributed by t.The IP model by Fırat et al. (2012) compares to the one developed above as follows. It has the same binary variables representing assignments and critical skills, namely θ and ξ, but it has two more sets of binary variables which are not necessary in the model above. Moreover, our model employs a number of constraints which is significantly lower than the number of constraints in the model by Fırat et al. (2012). To sum up, our IP model uses less constraints and a (strict) subset of the binary variables of the IP model of Fırat et al. (2012).We generalize the notion of stability considered in Section 2.1. Note that according to Definition 2 an assignment μ is considered stable if there is no pair of technicians t and t′ such that t can replace t′ in the team of job μ(t′). Note that in this case μ may be rather bad with regard to preferences and it may very well be that replacing multiple technicians in the team of job j by other technicians simultaneously yields a proper JTA for j. Hence, we generalize the stability definition as given in Section 2.1 to account for simultaneous replacements of multiple technicians.Given a feasible assignment μ we say that triplet (T′′, j, T′) blocks μ if•j>t′μ(t′)for each t′ ∈ T′,t′ >jt′′ for each t′ ∈ T′ and t′′ ∈ T′′, andT′ can replace T′′ in the team of job j.A feasible assignment μ is stable with regard to sets of technicians if and only if no triplet (T′′, j, T′) blocks it.Note that we chose a very restrictive definition of blocking triplets. Arguably, there are many others that can be considered reasonable. However, we will first proof our main result in this section and discuss afterwards how this result carries over to alternative definitions of blocking triplets.Theorem 4Deciding whether a feasible assignment is stable with regard to sets of technicians is strongly NP-hard for|J|=2and|L|=1.We prove the theorem by reduction from Exact Cover by 3-Sets (X3C) which is well-known to be NP-complete in the strong sense (Garey & Johnson, 1979) and is restated in the following.X3C:Given a setX={1,…,3q}and a collection C of 3-element subsets of X. Can we find a subset C′ of C where every element of X occurs in exactly one member of C′?Given an instance I of X3C we construct an instance I′ of STJAP-setS as follows.•We consider setS={1,…,3q}of skill domains corresponding to elements in X and a single skill level only, that is|L|=1.We have|J|=2jobs j and j′. Job j has a requirement of two technicians for each skill, that isRQj(1,s)=2for each s ∈ S. Job j′ has requirementRQj′(1,s)=nsfor each s ∈ S where nsis the number of times the sthelement of X is contained in an element of C.We consider a setT={1,…,|C|+1+3q}of technicians. Techniciant=1,…,|C|corresponds to the tth element in C and has skill (1, s) if and only if the element in X corresponding to s is in the tth element of C. Technician|C|+1has skill (1, s) for each s ∈ S. Finally, techniciant=|C|+2,…,|C|+1+3qhas skill(1,t−|C|−1)only.Job j′ prefers each technician in{1,…,|C|}to all other technicians. Job j prefers each technician in{|C|+2,…,|C|+1+3q}to all other technicians. Furthermore, j prefers each technician to technician|C|+1. Each technician prefers j to j′. As long as the above is fulfilled the specific preferences can be set arbitrarily.Now, consider an assignment μ assigning technicians1,…,|C|to job j′ and technicians|C|+1,…,|C|+1+3qto job j. Clearly, I′ can be constructed in pseudo-polynomial time. It is furthermore easy to verify that μ is a feasible assignment. We claim that the answer to I′ is no if and only if the answer to I is yes.First, assume there is a subset C′ of C where every element of X occurs in exactly one member of C′. Then, we can remove technician|C|+1from the team of j and replace it by the technicians corresponding to C′. Clearly, C′ can replace{|C|+1}since the resulting JTA is proper. Furthermore, technicians in C′ prefer j to j′ and j prefers each technician in C′ to technician|C|+1. Hence, μ is not stable.Second, if μ is not stable, then j must give raise for instability since j′ has its most preferred technicians assigned. Hence, in a replacement j′ could not receive technicians it prefers over those it loses unless it does not lose any technician. Then, however the resulting JTA is not proper since there must be idle technicians. A similar argument yields that in a replacement j cannot lose a technician in{|C|+2,…,|C|+1+3q}since it prefers them to any other technician. If it does not lose any technician at all, there will be idle technicians in the resulting JTA. Hence, if μ is not stable, then technician|C|+1in the team of j is replaced. Furthermore, we can conclude that|C|+1must be replaced by a set of technicians T′ corresponding to a yes-certificate of I. If at least one skill is not covered by T′, then the resulting JTA is not skill-feasible. If at least one skill is covered more than once by T′, then the resulting JTA is not proper since at least one of technicians|C|+2,…,|C|+1+3qis idle.□In order to support an intuitive understanding of the proof we outline an example instance of X3C and the reduction in the following. Consider instance I specified byX={1,2,3,4,5,6}andC={{1,2,3},{2,3,4},{1,2,5},{1,5,6}}. It is not hard to see that the answer to I is yes since inC′={{2,3,4},{1,5,6}}every element of X occurs in exactly one triple. Now, we constructS={1,…,6}and setRQj(1,s)=2for each s ∈ S andRQj′(1,1)=3,RQj′(1,2)=3,RQj′(1,3)=2,RQj′(1,4)=1,RQj′(1,5)=2,andRQj′(1,6)=1. Furthermore, we haveT={1,…,11}with technicians 1, 2, 3, and 4 corresponding to {1, 2, 3}, {2, 3, 4}, {1, 2, 5}, and {1, 5, 6}, respectively, and having the corresponding skill sets. Hence, a team consisting of technicians 1 to 4 assigned to j′ is a proper JTA. Technician|C|+1=5has each skill and the remaining technicians 6 to 11 have skill 1 to 6 only, respectively. So, a team consisting of technicians 5 to 11 assigned to j is a proper JTA, as well. Now, only job j would be willing to replace a technician and j is willing to replaceonly technician 5. However, the set of technicians received in exchange need to have each skill exactly once for the resulting JTA to be proper. Hence, the given assignment is not stable if and only if there is a subset of technicians in{1,…,4}having each skill exactly once. The set {2, 4} is such a set.Now we shall come back to the admittedly very restrictive definition of blocking triplets introduced above. Here, a triplet (T′′, j, T′) qualifies as blocking only if job j prefers each technician t′, t′ ∈ T′, to each technician t′′, t′′ ∈ T′′.Note that the proof of Theorem 4 relies on the fact that technician|C|+1is replaced in the team of j. Given the preference structure constructed for I′ this would be the case for various definitions of blocking triplets. In fact, we yield the same result for example for the alternative definitions where a triplet (T′′, j, T′) qualifies as blocking only•if job j prefers each of a majority of technicians in T′ to each of a majority of technicians in T′′ orif job j prefers at least one technician in T′ to each technician in T′′.Clearly, each of these alternative definitions leads to a generalization of the definition in Section 2.1.We would like to emphasize that Theorem 4 implies a substantial difference between stable workforce assignment as considered in the paper at hand and classic stable many-to-one assignments. As stated in Roth and Sotomayor (1990), e.g., in many-to-one assignments stability with regard to individuals (technicians in our setting) implies stability with regard to groups of individuals under the mild assumption of responsive preferences. It is not hard to see that stability of workforce assignment μ (with regard to individual technicians) does not imply stability of μ with regard to sets of technicians. In fact, while determining stability of a given feasible assignment μ can be done in polynomial time (simply by checking for each (t′, j, t) whether it blocks μ) determining stability of a given feasible assignment with regard to sets of technicians is strongly NP-hard. Therefore, we treat the more restricted version of the problem, namely STJAP, in the remainder of the paper following a bottom-up approach and leaving STJAP-sets for future work.

@&#CONCLUSIONS@&#
