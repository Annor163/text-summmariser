@&#MAIN-TITLE@&#
Distance fields on unstructured grids: Stable interpolation, assumed gradients, collision detection and gap function

@&#HIGHLIGHTS@&#
Presents asynchronous variational integrators in the context of finite elements with continuous strain fields.Illustrates an enhanced interpretation of the current space–time front.Provides a strategy for estimating the critical time step size using CAG elements, nodal integration or SFEM.

@&#KEYPHRASES@&#
Contact,Contact detection,Finite element,Level set,Distance field,Dynamic explicit,

@&#ABSTRACT@&#
This article presents a novel approach to collision detection based on distance fields. A novel interpolation ensures stability of the distances in the vicinity of complex geometries. An assumed gradient formulation is introduced leading to aC1-continuous distance function. The gap function is re-expressed allowing penalty and Lagrange multiplier formulations. The article introduces a node-to-element integration for first order elements, but also discusses signed distances, partial updates, intermediate surfaces, mortar methods and higher order elements. The algorithm is fast, simple and robust for complex geometries and self contact. The computed tractions conserve linear and angular momentum even in infeasible contact. Numerical examples illustrate the new algorithm in three dimensions.

@&#INTRODUCTION@&#
Many simulations involve unilateral contact/impact analysis. In dynamic simulations, notably in explicit dynamics, the number of time steps may be very large. A fast collision response is, therefore, required. This includes three components: the contact search, the generation of discrete contact conditions (constraint equations or penalty forces) and the solution of the dynamic response. Beside the numerical efficiency, accuracy of the contact algorithm is very important. It involves the geometrical accuracy of the actually measured interpenetration, the accuracy of the measured penetration depth and depth gradient, and the order of the spatial and temporal discretization scheme. This article focuses on the contact search and on the evaluation of the penetration depth and its linearization.State-of-the-art methods are often based on a (smooth) gap function or non-smooth surface features. The gap function is a measure for the distance between a given contactor point and the target boundary surface. Many gap function algorithms rely on direct closest point projection of the contactor point onto the target surface [1,2]. These methods may become quite complex to ensure robustness of the detection. Problems may appear during the Newton iteration of the projection, when multiple candidates of contact segments appear or if the contactor point falls into a ‘dead zone’ (associated problems are nodes getting caught at corners and negative sliding energies in friction). These problems were first tackled by the inside-outside algorithm [3] which associates a normal vector to each contactor point that is obtained by averaging the normals of the adjacent segments. The dead-zone problem at corners and edges on the boundary is eliminated and no iterations are required. It still needs the creation of a halo, i.e. an artificial bounding volume around a surface segment, during the global search phase.The gap function assumes smoothness of the contact boundaries. Some complex geometries, however, include non-smooth surface feature, for example corners or edges. For such problems, non-smooth contact search algorithms were developed [4–6]. Within the family of gap function algorithms, non-smooth surface features can be approached for a certain degree by replacing the boundary of the finite element mesh by a smoothed surface representation which is at leastC1-continuous and is typically based on splines, NURBS or NURBS-patches, see for example [7–15]. These formulations artificially smoothe the geometry of a corner such that a differentiable gap function is obtained. Further, instead of replacing the boundary of a FEM mesh by a smooth surface, one may use higher-continuous element formulations as found in isogeometric analysis [16–18] which explicitly define smooth boundaries. Boundary approximations are classified in [19] where one proposes the combination of point-to-point, point-to-edge and point-to-surface projections in order to treatC0-continuous contact boundaries.An alternative approach to contact detection utilizing a gap function relies on the evaluation of distance fields. Distance fields provide an implicit representation of the closest point projection, see Fig. 1. The idea is that once the coordinate of a point is known, one does not compute the actual projection, but evaluates a scalar field to obtain the distance to a surface.Algorithms regarding distance fields go back to the level set equation. The level set method was presented by Osher and Sethian [20] who described the temporal propagation of moving interfaces by numerical methods solving the Hamilton–Jacobi equation. This is performed by a finite difference scheme working on a rectangular grid in two or three dimensions. Information on normal vectors and curvature can be obtained. The fast marching method [21] provides an efficient numerical scheme of complexitynlognto compute the support values on the grid. It is a reinterpretation of the propagation process, i.e. the time where the interface passes a certain grid point is influenced only by those neighboring grid points which are previously passed by the interface. An overview on the theory of level set and fast marching methods and their applications to problems of various areas are given in [22,23], for example shape offsetting, computing distances, photolithography development, seismic travel times, etc. Distance fields are a special case of the level set equation where the absolute value of the advection velocity is 1.The concept of distance fields was introduced to contact problems in [24] using first order tetrahedral finite elements. The distance field is generated on a supplementary grid and evaluated at the finite element nodes. Simplicity and robustness compared with closest point projection is emphasized, in particular no longer required smoothness conditions on the shape of the boundary. Self-contact, large deformations and deep interpenetrations may be treated easily. Exact intersection polygons are determined on which contact forces are computed by the penalty method [24]. More details on the employment of the distance field are provided in [25]. It focuses on the pre-computation of the distance field by fast marching. A simple partial update strategy during a time integration is proposed for regions where intersections actually occur. More details of the approach are presented in [26].A supplementary grid is not required if the distance field is interpolated on the finite element mesh. This is constricted by the lack of efficient level set methods on unstructured meshes. A fast marching method is adopted to acute triangle meshes in [27]. The basic problem are instabilities which arise by propagating approximate levels along arbitrarily changing directions. Instead of propagating the approximate distance, [28] computes accurate distances of grid points to the initial interface, but propagates a reference to the surface patches to which the closest point projection refers to. The idea was adopted to tetrahedral finite element meshes [29] with application to collision detection eliminating the supplementary grid. A partial distance field update strategy is provided for simplex meshes therein. Although not related to distance fields, a notable partial update strategy is presented by Heidelberger et al. [30] which improves the robustness of closest point projection approximation in two dimensions. By identifying the actually intersected boundary as initial interface, the distances will only be computed with respect to the selected surface patches and the partial update is restricted to the finite element nodes which are actually in contact. The approximate distances and normal vectors are propagated similar to the original fast marching approach.The objectives behind this article are to adopt the ideas behind distance fields to collision detection on unstructured grids. No supplementary grid should be used. Instead, the distance field will be interpolated using the finite element mesh, i.e. no distances outside the bodies can be represented. The discretization should be suitable for arbitrary finite element types. Further, the distance field is to be expressed in terms of the gap function which in turn enables penalty and Lagrange multiplier formulations.Section 2 presents the basic ideas behind Eulerian distance fields and level sets on a supplementary grid and after that introduces the discretization being used in this article. The distance field is interpolated on arbitrary finite element types following the presentation in [31]. The formulation is, however, unstable. A correct distance distribution can not be represented by the formulations used in [29,31] when applied to complex geometries. This is pointed out in Section 3. Therein, a novel interpolation scheme of the distances is proposed which resolves the instabilities. Furthermore, the assumed gradient formulation of [31] will be modified to match the novel distance interpolation and to eliminate inaccuracies of the gradient field on the boundary. The presentation continues by reformulating the closest point projection through the distance field in Section 4. A simple and robust approximation to the projection will be derived from a linear expansion of the distance. Section 5 introduces some fundamentals of contact mechanics and interprets the gap function in terms of discrete distances. Numerical examples are presented in Section 6. They utilize a ‘node-to-element’ integration scheme on the boundaries of first order tetrahedral and hexahedral finite elements. Finally, Section 7 summarizes important properties of the new collision detection.The appendix provides supplementary information that is required to complete the distance field algorithm. A presents Closest Feature Front Marching (CFFM) which is adopted to compute the support values of the discrete distance field. B presents the local intersection test for tetrahedral and hexahedral elements. It further explains how global contact search algorithms can be incorporated. C presents how individual spatial discretization schemes can be employed, for example node-to-element, higher order mortar methods, intermediate surfaces. It further points out conceptual differences to closest point projection when using these discretization schemes.The level set method is primarily used to implicitly describe propagating interfaces which are usually discretized on Cartesian grids, see [20,21]. The level set equation describes the evolution of a scalar fieldd(x,t)through(1)ḋ(x,t)+vx,t∇xd=0,∀(x,t)∈Ω×Twherev(x,t)is the advection velocity. This partial differential equation is used to describe the motion of an interface by associating its geometry with the zero-iso contour of d. Typically, d is initialized as the signed distance to the interface, satisfying∇xd=1⇒∇x∇xd=0. The advection velocity v is often replaced by a corresponding extensional velocityvesuch that∇xd=1is maintained. The level set Eq. (1) of a distance field can then be recast as(2)ḋ(x,t)+ve(x,t)=0Consider a moving interfaceFwhich divides a domainΩinto two disjoint subsetsΩ+andΩ-to either side ofF.Fis parametrized at the zero level set [20](3)F(t)={x:d(x,t)=0}where the velocity field isv(x,t)=v(x,t)∇x·d(x,t)onF. If the function d is a signed distance function [31] it becomes(4)d(x,0)=miny∈Fx-y∀x∈Ω+-miny∈Fx-y∀x∈Ω-with a velocity(5)v(x,t)=ve∀x∈F∇xd(x,t)·∇xv(x,t)=0∀x∈Ωwhich preserves the signed distance function, i.e. the length of the distance gradient is constant since∂∂t∇zd2=0.The level setd(x,t)is usually discretized and interpolated using a Cartesian grid, see Fig. 2. It implicitly defines the position of the surfaceF. The dynamics of the level set field is generally specified by Eulerian coordinates, i.e. the grid coordinates are constant in time. The motion of the surfaceFin time can be described using time stepping methods, i.e. the position ofFcan be determined at timest>0.In the context of collision detection [24,25] the surfaceFbecomes the contact boundary∂CΩ. Instead of propagating the dynamics of the boundary in time, the distance field is usually recomputed for regions of interest. Eulerian distance fields provide the following properties when applied to contact:+Eulerian distance fields provide a trivial strategy for inside–outside tests and can be used directly in collision tests.The rectangular grid can be easily coupled with hierarchical or spatial partition collision detection procedures, for example octrees.By interpolation on the grid, one obtains an approximation of the gap functiongˆand the normal vectorνˆ.High sampling rates are required to represent objects with fine detail. Accuracy is limited due to the nature of the Cartesian grid.In many applications, only some parts of given geometries require a fine resolution. In turn, distance fields may generate a lot of data slowing down data processing.Let the distance field be described in terms of Lagrangian coordinates, i.e. the distance d is expressed with respect to the reference configuration(6)d=d(X)with material coordinateX. It describes the signed distance betweenXand the boundary∂CΩof the considered body.The distance field is now discretized with respect to the finite element nodes(7)dh(ξ)=∑ANA(ξ)dAwith local material coordinateξ, node index A and finite element shape functionNA. The discrete valuesdAare stored at the nodes. The discrete field has the following properties:•It is not defined outside of the finite element mesh, i.e.(8)dh(X)>0ifX∈Ωdh(X)=0ifX∈∂CΩdhisC0-continuous.The condition∇Xdh(X)=1is generally not satisfied.The normal vectorνbeing perpendicular to the tangential plane on the boundary atX∈∂CΩbecomes(9)ν(X)=-∇Xdh(X)∇Xdh(X),∀{X,dh(X)=0}The interpolation returns reasonable values only in the case where the nodal values differ in at least one node of each element, i.e.di≠dj(ifi≠j). This case must be intercepted by the mesh generator. Particularly, at least one node must not be part of the surface what may be circumvented by subdividing elements. If all nodes are associated with zero distances, the discrete field returns zero distances in the finite elements interior which is wrong, see Section 3 for more details.When using standard finite element shape functions, the representation of distances in the interior of elements may be erroneous. This happens whenever points of maximum distance are located in the considered element’s interior. The maximum in the interior can not be captured by the interpolation functions if low order finite element shape functions are used. Such situations always appear for elements which are located at a body’s skeleton, see Fig. 3(let the body’s skeleton be the set of those points where the closest point projection returns multiple projection points with identical minimal distance). But these elements are often not crucial since one is generally not interested in measuring very deep distances in collision detection. They are important, however, if the skeleton is close to the boundary, for example if more than one element face is part of the boundary or if individual nodes are on the boundary, but not the element faces they are part of. Some critical situations are illustrated in Fig. 4for two and in Fig. 5for three dimensions.Obviously, an enrichment of the interpolation may stabilize the distance approximation. As seen in Fig. 5, the function space must contain at least edge, face and bubble shape functions. For hexahedral elements, a quadratic tensor-product interpolation with 27 nodes seems sufficient. For tetrahedra one requires at least 15 support points, i.e. a 10-noded quadratic tetrahedron enriched by 1 bubble and 4 area functions with supports in the element center and on the element faces. The two-dimensional interpolation is illustrated in Fig. 6.An enrichment of the shape function space may stabilize the interpolation of the distancedh, but the interpolation of the distance gradient∇Xdhmay still be insufficiently accurate. Consider, for example, a first order quadrilateral element where all element faces are on the boundary. The distance is interpolated by a 2nd order polynomial as in Fig. 6. Then, only the bubble shape function contributes nonzero terms to the distance field. The shape function gradient is zero at the interior support point (which is acceptable) and at the finite element nodes. The latter may lead to a wrong collision response because a zero gradient is measured in the vicinity of vertices and edges, see Fig. 7. The matter of nearly zero gradients may be approached in the first step by normalizing the gradient to unit length. This strategy decreases accuracy due to round-off errors and possible ill-conditioning of the normalization. Another strategy would be to enrich the elements by piecewise linear polynomials (instead of higher order polynomials). This is equivalent to subdividing finite elements into linear tetrahedra. The distance gradient will be nonzero everywhere, but discontinuous, see Fig. 8.A stabilization of the gradient field can be realized through assumed gradients, see Fig. 8. The presented strategy extends ideas from [31]. Independent from the distance field, the distance gradientG=∇Xdis interpolated by(10)Gh(X)=∑ANA(X)GA,GA∈R3Therein,Xdescribes the material (undeformed) coordinate in the reference configuration.NAdenotes the interpolation function of the distance field with support point A. To ensure stability and accuracy of the assumed interpolation,NAshould be the same interpolation function as in Fig. 6. An inaccurate representation is shown in Fig. 9.For support points which are not on the boundary, the discrete gradientGAis determined from a least square problem which minimizes the error of the equivalence conditionGh(X)≈∇Xdh:(11)minGA∫Ω∑ANA(X)GA-∇Xdh2dVDeriving byGAand assuming the mass lumping condition(12)∫ΩNA(X)NB(X)dV≈δAB∫ΩNB(X)dVwith Kronecker deltaδABleads to(13)GA=∑B∫ΩNA(X)∇XNB(X)dBdV∫ΩNA(X)dVFor support points which are part of the boundary, this strategy may lead to erroneous values because the distance fielddhitself contains insufficient data. The boundary gradients may be close to zero in the afore mentioned situations. The discrete gradientsGAof boundary points are, therefore, chosen to be the average of the surface normals of all surface patches F being adjacent to the considered node(14)GA=-∑F∈AνFWF∑F∈AWF,A∈∂CΩTherein,νFdenotes the normal vector of surface F at node A, which can be easily obtained from triangulation, andWFrepresents a weighting factor, for example the area of the surface patch F. A similar procedure using average nodal normal vectors on surface nodes was used by Wang and Nakamachi [3] and Puso and Laursen [32].The distance gradientγ(X)in the deformed configurationx=ϕt(X)can be computed through the chain rule. Introducing the deformation gradientFone obtains(15)γα(X)=∂∂xαd(X)=∂Xβ∂xα∂∂Xβd(X)γ(X)=F-T(X)G(X)One can, therefore, store the nodal gradients in the reference configuration and map them into the deformed space during the simulation.In order to obtain aC0-continuous interpolation ofγone requires aC0-continuous representation of the deformation gradient. Such is given if special element formulations are used, for example isogeometric analysis [33] or continuous assumed gradients [34].The curvature of the distance field can be obtained through the interpolation function’s derivatives, i.e.(16)∇X2d(X)=∑A∇XNA(X)GAThe distance field can be used to efficiently compute the closest point projection of a pointxto the boundary. Let this projection bey=x+p, wherepdenotes the projection/distance vector fromx. The boundary is defined throughd(x)=0. The closest point projection defines the projection vectorpto be the shortest vector to the surface, i.e.(17)minpp,subject tod(x+p)=0which is transformed into an equivalent problem using the Lagrangian(18)L(p,λ)=p2+λ·d(x+p)→minpmaxλThe objective function is quadratic, but the distance may be highly nonlinear, the surface may be non-convex and non-smooth.An approximate solution is obtained by replacing the distance function by a first order Taylor expansion(19)d(x+p)=d(x)+∇xd(x)Tp+O(p2)Substitutingγ(x)=∇xd(x), one obtains(20)p=-γ(x)γ(x)2d(x)The expansiond(x+p)approximates the tangential plane inx+p. This plane is perpendicular top, since the scalar product ofpand any vector to a pointyˆon the approximated surface0=d(x)+∇xd(x)·(yˆ-x)is zero.The advantages of using the distance field for closest point projection compared with exact projections are1.Once the material coordinateXis found, the distance functiond(X)can be easily evaluated by interpolation. The evaluation time is independent of the complexity of the body’s shape.For small penetrations, the approximation is usually sufficiently accurate.Directions are always feasible, independent from non-smooth geometries, non-convex surface features, neighborhood of corners and wedges, see Fig. 10.The discrete distance field isC0-continuous. When used in conjunction with assumed gradients, it isC1-continuous.Fig. 11 on the right is a case where the plain inside-outside test would detect a positive penetration distance of point X with reference point F. This case is an erroneously detected self-contact where the back side of the same body is chosen as reference. Using distance fields, however, the mentioned problems usually do not appear.The dead-zone problem in Fig. 10 was eliminated in direct closest point projection by replacing the boundary by a smooth interpolation, for example in [9,12]. In fact, the representation of the gap function by smoothening and using a higher-order distance field are very similar, see Fig. 12.Assume the existence of a contact frame C being defined as a surface which serves for parametrizing the contacting domain in three-dimensional two-body contact with local coordinateξˆ∈R2. All quantities referring to the contact frame are denoted by(·ˆ). Points in C are labeled by the position vectorxˆ∈C. One of the two bodies is denoted as contactorΩt(1), the other as targetΩt(2).The gap functiongˆdefines the signed distance between any pointxˆ(1)on the contactor boundary to the contact boundaryC(2)of the target bodyΩt(2)in the current configuration, see Fig. 13. It defines three possible states: Ifgˆ<0thenxˆ(1)is outsideΩt(2), ifgˆ=0it is on the boundaryC(2), else it is infeasible. Usually, the gap function is defined by the closest point projection between points on the contactor surfaceC(1)to the target boundary, i.e.(21)gˆ(ξˆ)=xˆ(2)(ξˆ)-xˆ(1)(ξˆ)Tνˆ(ξˆ)where the vectorνˆis the normal to the tangential plane at the projection pointxˆ(2)and pointing outwards.The contact tractiontˆ(1)=-tˆ(2)can be decomposed into normal and tangential components(22)tˆ(1)=tˆNνˆ+tˆTατˆαThe variationsδxˆ(i)are expressed in terms of the the gap function and the tangential glide path with basis vectorsτˆαbeing orthogonal toνˆ. The variation of the gap function is given by(23)δgˆ=νˆ·δϕˆ(2)-δϕˆ(1)while the variation of the tangential glide path is(24)δξˆβ=δϕˆ(2)-δϕˆ(1)·τˆβUsing these notations, the contact integral writes(25)Gˆc(xˆ,δxˆ)=∫CtˆNδgˆ+tˆTαδξˆαdΓThe frictional response is characterized by the relative velocity between points on the contact surfaces. The relative velocity is decomposed using the dual basis(26)xˆ̇(1)-xˆ̇(2)=vˆN+vˆT=vˆNνˆ+vˆTαbτˆαThe structure of the projection vector given through the distance field in Eq. (20) is similar to Eq. (21), i.e.(27)d(x)γ(x)(-γ(x))γ(x)=p↔gˆ(ξˆ)·νˆ(ξˆ)=xˆ(2)(ξˆ)-xˆ(1)(ξˆ)The definitions of the gap function and the surface normal can, therefore, be replaced by the distance function and its gradient. Let the gap function be the sum of the distances of a pointxˆon the contact frame to the boundaries of the two bodies, see Fig. 13,(28)gˆ(ξˆ)=∑i=1,2d(i)(X^(ξˆ))γ(i)(X^(ξˆ))Variation leads to(29)δgˆ=∑i=1,2γ(i)(X^(ξˆ))·δϕˆ(i)+τˆβ(i)δξ(i)βγ(i)(X^(ξˆ))-d(i)(X^(ξˆ))δγ(i)(X^(ξˆ))γ(i)(X^(ξˆ))2Due to perpendicularity of the basis it isγ(i)·τˆβ(i)=0. The last term is assumed being zero sinceγ(i)(X^(ξˆ))=1is satisfied by the continuous distance function. In feasible contact,gˆ=0, assuming that two planes are in contact both tangential planes are identical and one has(30)νˆ(ξˆ)=-γ(1)(X^(ξˆ))γ(1)(X^(ξˆ))=γ(2)(X^(ξˆ))γ(2)(X^(ξˆ))This assumption does not hold in point-to-curved-surface contact for which different contact models should be used, see for example [4]. Then Eq. (29) leads to(31)δgˆ=νˆ·δϕˆ(2)-δϕˆ(1)which is identical to the previous result (23).The tangential velocity in Eq. (26) is obtained from the decomposition(32)vˆT=I-νˆ⊗νˆvˆHence, no assumptions on the smoothness of the contact surface are required for the computation of the tangential basis.In frictionless contact, formulations based on closest point projections and distance fields preserve the balance of momentum: The normal tractions are applied to spatial points being located on the intersections of the two contact surfaces on a line along the normal vectorνˆand the normal tractionstˆN. This is different for tangential tractions: If the normal contact conditiongˆ=0is not exactly enforced by the contact algorithm, the angular momentum is generally not preserved if the closest point projection is used, see Fig. 14on the left. When using distance fields, the contact tractions are applied to material points with the same deformed coordinate. Therefore, balance of linear and angular momentum is satisfied even if the contact constraints are infeasible, i.e.gˆ≠0, see Fig. 14 on the right.In this work, the distance field is precomputed in the reference configuration [24]. Not all finite element nodes are associated with a discrete distance. Starting from the bounding surface, the two top layers of finite elements are identified, see Fig. 15. Only the nodes of these elements are considered during the distance field computation. This saves time and memory. Furthermore, it reduces the effort in collision detection. Since trial steps of a time stepping scheme should not exhibit deep penetrations, this assumption is feasible for many cases.If the complete boundary of a body is used as reference surfaceF, then the distance gradient is not perpendicular to the boundary when measured at points close to corners and edges. Depending on the interpolation functions, some kind of smoothing appears. There are applications, however, where smoothing is not desired. This can be approached by careful definition of the reference surfaceF. In [30] a strategy for a safe partial distance field update is proposed which can be applied here. Therein, the boundary of one body (contactor) is intersected with the volume of the target. In the next step, all intersecting target surface patches are identified. These surface patches are used to define the initial set in CFFM, see A. The discrete distances of all nodes in the overlapping domain are recomputed at each deformed configuration. When evaluating the distance on the intersected contactor surface, it is measured with respect to the intersected target surface patches and the accuracy of the distance gradient can be improved, see Fig. 16. Other approaches exist to partial distance field updating which are more efficient, but less robust [25,29].By associating the discrete distances to points located on the finite element mesh one is able to measure non-negative distances only. Some situations may require the evaluation of a distance and its gradient of a point to the target’s boundary being located outside. Using the presented approach to distance fields, this is only possible by creating a supplementary mesh. Therein, for each surface segment one extracts the finite element nodes along the negative distance gradient, see Fig. 17. For quadrilateral segments, one obtains a hexahedron; for triangles one obtains a prism. These elements are then used for distance field generation and for contact search.The following tests are performed by a node-to-element integration where the finite element nodes on the contactor boundary are the numerical integration points of the contact integral. If not explicitly denoted, the FEM meshes were generated by GMSH [35] using linear tetrahedral elements. A general contact detection strategy is employed, i.e. no extra knowledge of the problem is used by the algorithm, such as individual contact pairs or maximum search distances.A sphere with very rough discretization in the center and finer discretization at the boundary is shown in Fig. 18. The radius is 5, the cell size is1.5. The mesh contains 1041 nodes and 900 elements. To illustrate the interpolation of the distance field, the sphere is cut along a plane through its center point, see Fig. 19on the left. The interpolation is continuous and of higher order due to the enhanced interpolation of the distance to the boundary. Hence the distance field appears smooth although the finite elements are presented by a piecewise linear geometry. The negative assumed gradient of the distance field points towards the boundary and is illustrated on the right hand side of the same figure. The interpolation of distance and gradient are sufficiently accurate even for large depths.Another example is a rectangular block with an non-symmetric hole in its interior using a regular grid of first order hexahedral elements, see Fig. 20. The width and depth are 10, the height is 4. The hole has a width of 3 and a depth of 5 within the horizontal plane. The interpolated distance field is illustrated in Fig. 21on the left (GMSH plots triangles in the cutting plane, but the elements are hexahedra). Because the interpolation function is quadratic, the field appears rather smooth. In the vicinity of corners, a smoothing of the natural gradient is explicitly obtained, but there is no natural gradient at the outer vertices. A gradient field being continuous being defined everywhere in the domain is shown in Fig. 21 on the right using an interpolation of the negative assumed gradient. The interpolations are plausible near convex and non-convex surface features. Note, the three nodes which are not associated with a gradient in the figure are on a symmetry plane such that the closest surface patches are either on top or on the bottom of the structure.The next example is a hollow sphere. It illustrates the distance interpolation for a thin-walled structure with non-convex geometrical features. The radius is 1. The wall thickness is 0.1. The average size of the tetrahedra is 0.6. There are 23,220 elements and 6983 nodes in the structure. The structure is subdivided into two parts. The lower and upper parts are connected by a clamp involving a unilateral contact. Fig. 22illustrates the interpolation of the distance field and the finite element boundaries on a cutting plane through the center point of the sphere. The discretization is too rough for obtaining a reasonable mechanical response: Along the sphere wall 1–2 element layers are used. This is chosen to illustrate the stability of the distance interpolation. At the clamp, only one element layer is used with convex and concave corners, see Fig. 23. As in the other examples, the discrete distance field covers the most important features of the geometry. The skeleton of the structure is clearly identified as the hyperface of maximum distance.The geometry of this example is the hollow sphere of the last section, rotated by45°, see Fig. 24. A St. Venant material is chosen with elastic modulus 1, Poisson ratio 0.3 and mass density 1e−6. The clamps between both half-spheres are tied by unilateral contact. The initial velocity is given byvx=1000andvz=-500. A Coulomb friction model is used between the two half-spheres and between the sphere and the rigid obstacle with coefficient 0.2. An explicit time integrator is used with a time stepΔtcrit/2and a simulation timeT=0.0004. For the dynamic contact algorithm, an asynchronous decomposition contact response is employed [36,6].Fig. 25illustrates a cutting plane through the sphere at time 4e-5 at the approximate peak of the impact. A detail is shown in Fig. 26showing that the clamp exhibits no interpenetration due to erroneous detected collisions. The solution trajectory from t=0 to t=0.0004 is plotted by superimposing multiple configurations within this interval in Fig. 27.This example serves to compare the collision detection based on distance fields with node-to-segment projection when treating Coulomb friction. A block with dimensions1×1×1is sliding on a rigid plane subject to gravitation. The block is discretized by3×3×31st order hexahedral elements. The obstacle is discretized by5×5×1elements and has the dimension5×2×0.2. Fig. 28illustrates the geometry at the beginning and at the end of the simulation. The material is linear elastic with Young’s modulusE=100, Poisson’s ratioν=0, mass densityρ=1. The block is subject to a constant vertical body forceF=1.All nodes of the basement are supposed to be fixed. We want to measure the error in linear and angular momentum and, therefore, the nodes of the obstacle are not restrained. Instead, the mass density and elastic modulus of the plate are increased, i.e.ρ=100,E=10,000.The initial horizontal velocity isvx=1. The Coulomb parameter of friction isμ=0.5. The total simulation time isT=3. For time integration we use the explicit symplectic-momentum preserving Velocity Verlet scheme. The collisions are resolved by the Decomposition Contact Response [6] that modifies the velocities discontinuously through a simple projection. The time step ratio related to the critical time step isβ=0.5.Fig. 29presents the horizontal displacements and velocities at the block’s bottom. A single value of the displacements is obtained by averaging the nodal values at the bottom surface. The results are in good agreement with the analytical solution of a rigid block sliding on a fixed obstacle: The displacements describe a parabola with end displacementux=1while the velocity decreases linearly until timet=2. The distance field is compared with direct node-to-segment projection [1] and the inside-outside algorithm [3]. The solutions of the node-to-segment algorithm and the distance field detection are in good agreement. When comparing the required cpu time, both are nearly identical (the search distance in node-to-segment projection is limited to 0.1).The inside-outside algorithm does not converge. The reason is the averaging of the nodal normal vector on the boundary. The decisive error appears in the first time step. The nodal normal of the nodes at the bottom left corner of the block (as in Fig. 28) points downwards and to the left while the normal of the bottom right nodes shows downwards and to the right. When measuring the gap rate at the predictor step, the decomposition contact response measures an inactive contact at the bottom left nodes and an active contact for all other nodes. The friction force of the nodes in the bottom’s center is very small because it is limited by the normal force which is related to the gravityF=-1. The response of the bottom right corner nodes, however, depends on the initial velocity due to the inexact normal vector. Hence, the nodes obtain a rather large impulse which starts a rolling motion of the block. The true solution, however, is a sliding motion. Although the distance field, as tested herein, also implements an averaged gradient on the block’s boundary, it does not affect the convergence at least in this example.Fig. 30presents the energy balance. The energy dissipated by the friction grows until almost no energy is left in the system. The total energy is nearly preserved by the algorithm. Again, both solutions are nearly identical.The balance of linear and angular momentum is presented in Fig. 31. The angular momentum is computed with respect to the origin, i.e.x=0at the block’s left side,y=0at the block’s center andz=0at the block’s bottom. As predicted, the linear momentum is preserved by both algorithms while the angular momentum is only preserved by the distance field. The magnitude of the error in angular momentum grows with the residual of the penetration. This is illustrated by application of the collision response every 5 time steps (instead of each time step). This leads to a larger drift in the angular momentum as illustrated in Fig. 31.

@&#CONCLUSIONS@&#
Distance fields on unstructured grids may help to improve collision detection algorithms that rely on a smooth gap function in several areas. The key features are summarized below:•very simple local intersection search, see Appendix B,safe and robust local search (no problems with dead zones, multiple segments as projection candidates, self contact, caught nodes, etc.),no user specified input required (for example, a search depth that defines the halo size),no generation of artificial volume elements around surface segments necessary,simple computation of gap function and direction by interpolation,suitable directions close to complex geometrical features,exact conservation of linear and angular momentum without post-processing, even for infeasible contact in friction,constraint and constraint gradient are continuous functions. This may improve convergence of iterative solution algorithms if an integration point moves from one target element to the other,distances outside of bodies can not be measured unless a supplementary mesh is generated,thin-walled structures can only be treated for penetrations<0.5×tool size (in automatic contact),thin-walled structures with deeper penetrations only by careful contact pair definition and outside meshing,the global contact search must generally treat more finite elements than segment boundary volumes when using projection algorithms,compared with natural gradients, the assumed gradient field may lead to improper treatment of friction at corners, but may improve the treatment of normal contact in few situations.One key aspect of the distance field being utilized in this article is the enriched interpolation when using low-order finite elements. It should be noted that the proposed interpolation schemes for hexahedral and tetrahedral elements contain the minimal number of support points to ensure a stable interpolation in the vicinity of complex geometries. Hexahedral elements with tensor-product interpolation of at least second order and tetrahedral elements of at least third order can be used directly for distance interpolation. Quadratic tetrahedra need five additional support points, one in the element center and four in the face centers.Possible future research may be•to explore segment-to-element integration schemes like Mortar methodsto adopt the distance field to isogeometric analysis where usually a direct closest point projection is employedto compare the numerical efficiency of the local search with direct closest point projection more deeply for distorted higher order elements. The convergence behavior of the direct closest point projection was already studied in [38].